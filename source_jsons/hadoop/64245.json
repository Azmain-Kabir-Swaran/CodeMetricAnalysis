{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractDelegationTokenBinding.java",
  "functionName": "createDelegationToken",
  "functionId": "createDelegationToken___policy-Optional__RoleModel.Policy__(modifiers-final)__encryptionSecrets-EncryptionSecrets(modifiers-final)__renewer-Text(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/auth/delegation/AbstractDelegationTokenBinding.java",
  "functionStartLine": 136,
  "functionEndLine": 153,
  "numCommitsSeen": 12,
  "timeTaken": 3325,
  "changeHistory": [
    "1d5d7d0989e9ee2f4527dc47ba5c80e1c38f641a",
    "6d0bffe17eadedd60d4599427248b0db4a7c5502"
  ],
  "changeHistoryShort": {
    "1d5d7d0989e9ee2f4527dc47ba5c80e1c38f641a": "Ymultichange(Yparameterchange,Ybodychange)",
    "6d0bffe17eadedd60d4599427248b0db4a7c5502": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1d5d7d0989e9ee2f4527dc47ba5c80e1c38f641a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-16658. S3A connector does not support including the token renewer in the token identifier.\n\nContributed by Phil Zampino.\n\nChange-Id: Iea9d5028dcf58bda4da985604f5cd3ac283619bd\n",
      "commitDate": "23/10/19 8:32 AM",
      "commitName": "1d5d7d0989e9ee2f4527dc47ba5c80e1c38f641a",
      "commitAuthor": "Phil Zampino",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-16658. S3A connector does not support including the token renewer in the token identifier.\n\nContributed by Phil Zampino.\n\nChange-Id: Iea9d5028dcf58bda4da985604f5cd3ac283619bd\n",
          "commitDate": "23/10/19 8:32 AM",
          "commitName": "1d5d7d0989e9ee2f4527dc47ba5c80e1c38f641a",
          "commitAuthor": "Phil Zampino",
          "commitDateOld": "26/02/19 9:10 AM",
          "commitNameOld": "52b2eab575d0b4d8ce7fa57661aaca6b8a123cc2",
          "commitAuthorOld": "Abhishek Modi",
          "daysBetweenCommits": 238.93,
          "commitsBetweenForRepo": 1825,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n   public Token\u003cAbstractS3ATokenIdentifier\u003e createDelegationToken(\n       final Optional\u003cRoleModel.Policy\u003e policy,\n-      final EncryptionSecrets encryptionSecrets) throws IOException {\n+      final EncryptionSecrets encryptionSecrets,\n+      final Text renewer) throws IOException {\n     requireServiceStarted();\n     final AbstractS3ATokenIdentifier tokenIdentifier \u003d\n-            createTokenIdentifier(policy, encryptionSecrets);\n+            createTokenIdentifier(policy, encryptionSecrets, renewer);\n     if (tokenIdentifier !\u003d null) {\n       Token\u003cAbstractS3ATokenIdentifier\u003e token \u003d\n           new Token\u003c\u003e(tokenIdentifier, secretManager);\n       token.setKind(getKind());\n       LOG.debug(\"Created token {} with token identifier {}\",\n           token, tokenIdentifier);\n       return token;\n     } else {\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003cAbstractS3ATokenIdentifier\u003e createDelegationToken(\n      final Optional\u003cRoleModel.Policy\u003e policy,\n      final EncryptionSecrets encryptionSecrets,\n      final Text renewer) throws IOException {\n    requireServiceStarted();\n    final AbstractS3ATokenIdentifier tokenIdentifier \u003d\n            createTokenIdentifier(policy, encryptionSecrets, renewer);\n    if (tokenIdentifier !\u003d null) {\n      Token\u003cAbstractS3ATokenIdentifier\u003e token \u003d\n          new Token\u003c\u003e(tokenIdentifier, secretManager);\n      token.setKind(getKind());\n      LOG.debug(\"Created token {} with token identifier {}\",\n          token, tokenIdentifier);\n      return token;\n    } else {\n      return null;\n    }\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/auth/delegation/AbstractDelegationTokenBinding.java",
          "extendedDetails": {
            "oldValue": "[policy-Optional\u003cRoleModel.Policy\u003e(modifiers-final), encryptionSecrets-EncryptionSecrets(modifiers-final)]",
            "newValue": "[policy-Optional\u003cRoleModel.Policy\u003e(modifiers-final), encryptionSecrets-EncryptionSecrets(modifiers-final), renewer-Text(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16658. S3A connector does not support including the token renewer in the token identifier.\n\nContributed by Phil Zampino.\n\nChange-Id: Iea9d5028dcf58bda4da985604f5cd3ac283619bd\n",
          "commitDate": "23/10/19 8:32 AM",
          "commitName": "1d5d7d0989e9ee2f4527dc47ba5c80e1c38f641a",
          "commitAuthor": "Phil Zampino",
          "commitDateOld": "26/02/19 9:10 AM",
          "commitNameOld": "52b2eab575d0b4d8ce7fa57661aaca6b8a123cc2",
          "commitAuthorOld": "Abhishek Modi",
          "daysBetweenCommits": 238.93,
          "commitsBetweenForRepo": 1825,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n   public Token\u003cAbstractS3ATokenIdentifier\u003e createDelegationToken(\n       final Optional\u003cRoleModel.Policy\u003e policy,\n-      final EncryptionSecrets encryptionSecrets) throws IOException {\n+      final EncryptionSecrets encryptionSecrets,\n+      final Text renewer) throws IOException {\n     requireServiceStarted();\n     final AbstractS3ATokenIdentifier tokenIdentifier \u003d\n-            createTokenIdentifier(policy, encryptionSecrets);\n+            createTokenIdentifier(policy, encryptionSecrets, renewer);\n     if (tokenIdentifier !\u003d null) {\n       Token\u003cAbstractS3ATokenIdentifier\u003e token \u003d\n           new Token\u003c\u003e(tokenIdentifier, secretManager);\n       token.setKind(getKind());\n       LOG.debug(\"Created token {} with token identifier {}\",\n           token, tokenIdentifier);\n       return token;\n     } else {\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003cAbstractS3ATokenIdentifier\u003e createDelegationToken(\n      final Optional\u003cRoleModel.Policy\u003e policy,\n      final EncryptionSecrets encryptionSecrets,\n      final Text renewer) throws IOException {\n    requireServiceStarted();\n    final AbstractS3ATokenIdentifier tokenIdentifier \u003d\n            createTokenIdentifier(policy, encryptionSecrets, renewer);\n    if (tokenIdentifier !\u003d null) {\n      Token\u003cAbstractS3ATokenIdentifier\u003e token \u003d\n          new Token\u003c\u003e(tokenIdentifier, secretManager);\n      token.setKind(getKind());\n      LOG.debug(\"Created token {} with token identifier {}\",\n          token, tokenIdentifier);\n      return token;\n    } else {\n      return null;\n    }\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/auth/delegation/AbstractDelegationTokenBinding.java",
          "extendedDetails": {}
        }
      ]
    },
    "6d0bffe17eadedd60d4599427248b0db4a7c5502": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14556. S3A to support Delegation Tokens.\n\nContributed by Steve Loughran and Daryn Sharp.\n",
      "commitDate": "14/01/19 9:59 AM",
      "commitName": "6d0bffe17eadedd60d4599427248b0db4a7c5502",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,17 @@\n+  public Token\u003cAbstractS3ATokenIdentifier\u003e createDelegationToken(\n+      final Optional\u003cRoleModel.Policy\u003e policy,\n+      final EncryptionSecrets encryptionSecrets) throws IOException {\n+    requireServiceStarted();\n+    final AbstractS3ATokenIdentifier tokenIdentifier \u003d\n+            createTokenIdentifier(policy, encryptionSecrets);\n+    if (tokenIdentifier !\u003d null) {\n+      Token\u003cAbstractS3ATokenIdentifier\u003e token \u003d\n+          new Token\u003c\u003e(tokenIdentifier, secretManager);\n+      token.setKind(getKind());\n+      LOG.debug(\"Created token {} with token identifier {}\",\n+          token, tokenIdentifier);\n+      return token;\n+    } else {\n+      return null;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003cAbstractS3ATokenIdentifier\u003e createDelegationToken(\n      final Optional\u003cRoleModel.Policy\u003e policy,\n      final EncryptionSecrets encryptionSecrets) throws IOException {\n    requireServiceStarted();\n    final AbstractS3ATokenIdentifier tokenIdentifier \u003d\n            createTokenIdentifier(policy, encryptionSecrets);\n    if (tokenIdentifier !\u003d null) {\n      Token\u003cAbstractS3ATokenIdentifier\u003e token \u003d\n          new Token\u003c\u003e(tokenIdentifier, secretManager);\n      token.setKind(getKind());\n      LOG.debug(\"Created token {} with token identifier {}\",\n          token, tokenIdentifier);\n      return token;\n    } else {\n      return null;\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/auth/delegation/AbstractDelegationTokenBinding.java"
    }
  }
}