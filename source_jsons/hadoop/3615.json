{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSInputStream.java",
  "functionName": "tokenRefetchNeeded",
  "functionId": "tokenRefetchNeeded___ex-IOException__targetAddr-InetSocketAddress",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java",
  "functionStartLine": 1430,
  "functionEndLine": 1450,
  "numCommitsSeen": 136,
  "timeTaken": 3516,
  "changeHistory": [
    "5ad037df25ab3206509083276b7ef4ef001be48b",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
    "bff5999d07e9416a22846c849487e509ede55040",
    "a31a3a68ead2773f8daa5b3ac1041e271b442789"
  ],
  "changeHistoryShort": {
    "5ad037df25ab3206509083276b7ef4ef001be48b": "Ybodychange",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": "Yfilerename",
    "bff5999d07e9416a22846c849487e509ede55040": "Ymodifierchange",
    "a31a3a68ead2773f8daa5b3ac1041e271b442789": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5ad037df25ab3206509083276b7ef4ef001be48b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11012. Unnecessary INFO logging on DFSClients for InvalidToken. Contributed by Harsh J.\n\nThis closes #142\n",
      "commitDate": "15/10/16 6:14 AM",
      "commitName": "5ad037df25ab3206509083276b7ef4ef001be48b",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "21/09/16 6:34 AM",
      "commitNameOld": "734d54c1a8950446e68098f62d8964e02ecc2890",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 23.99,
      "commitsBetweenForRepo": 178,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   protected static boolean tokenRefetchNeeded(IOException ex,\n       InetSocketAddress targetAddr) {\n     /*\n      * Get a new access token and retry. Retry is needed in 2 cases. 1)\n      * When both NN and DN re-started while DFSClient holding a cached\n      * access token. 2) In the case that NN fails to update its\n      * access key at pre-set interval (by a wide margin) and\n      * subsequently restarts. In this case, DN re-registers itself with\n      * NN and receives a new access key, but DN will delete the old\n      * access key from its memory since it\u0027s considered expired based on\n      * the estimated expiration date.\n      */\n     if (ex instanceof InvalidBlockTokenException ||\n         ex instanceof InvalidToken) {\n-      DFSClient.LOG.info(\"Access token was invalid when connecting to \"\n-          + targetAddr + \" : \" + ex);\n+      DFSClient.LOG.debug(\n+          \"Access token was invalid when connecting to {}: {}\",\n+          targetAddr, ex);\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected static boolean tokenRefetchNeeded(IOException ex,\n      InetSocketAddress targetAddr) {\n    /*\n     * Get a new access token and retry. Retry is needed in 2 cases. 1)\n     * When both NN and DN re-started while DFSClient holding a cached\n     * access token. 2) In the case that NN fails to update its\n     * access key at pre-set interval (by a wide margin) and\n     * subsequently restarts. In this case, DN re-registers itself with\n     * NN and receives a new access key, but DN will delete the old\n     * access key from its memory since it\u0027s considered expired based on\n     * the estimated expiration date.\n     */\n    if (ex instanceof InvalidBlockTokenException ||\n        ex instanceof InvalidToken) {\n      DFSClient.LOG.debug(\n          \"Access token was invalid when connecting to {}: {}\",\n          targetAddr, ex);\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java",
      "extendedDetails": {}
    },
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8053. Move DFSIn/OutputStream and related classes to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "26/09/15 11:08 AM",
      "commitName": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/09/15 9:06 AM",
      "commitNameOld": "861b52db242f238d7e36ad75c158025be959a696",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected static boolean tokenRefetchNeeded(IOException ex,\n      InetSocketAddress targetAddr) {\n    /*\n     * Get a new access token and retry. Retry is needed in 2 cases. 1)\n     * When both NN and DN re-started while DFSClient holding a cached\n     * access token. 2) In the case that NN fails to update its\n     * access key at pre-set interval (by a wide margin) and\n     * subsequently restarts. In this case, DN re-registers itself with\n     * NN and receives a new access key, but DN will delete the old\n     * access key from its memory since it\u0027s considered expired based on\n     * the estimated expiration date.\n     */\n    if (ex instanceof InvalidBlockTokenException || ex instanceof InvalidToken) {\n      DFSClient.LOG.info(\"Access token was invalid when connecting to \"\n          + targetAddr + \" : \" + ex);\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java"
      }
    },
    "bff5999d07e9416a22846c849487e509ede55040": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-8703. Merge refactor of DFSInputStream from ErasureCoding branch (Contributed by Vinayakumar B)\n",
      "commitDate": "02/07/15 3:41 AM",
      "commitName": "bff5999d07e9416a22846c849487e509ede55040",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "04/06/15 10:51 AM",
      "commitNameOld": "ade6d9a61eb2e57a975f0efcdf8828d51ffec5fd",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 27.7,
      "commitsBetweenForRepo": 196,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-  private static boolean tokenRefetchNeeded(IOException ex,\n+  protected static boolean tokenRefetchNeeded(IOException ex,\n       InetSocketAddress targetAddr) {\n     /*\n      * Get a new access token and retry. Retry is needed in 2 cases. 1)\n      * When both NN and DN re-started while DFSClient holding a cached\n      * access token. 2) In the case that NN fails to update its\n      * access key at pre-set interval (by a wide margin) and\n      * subsequently restarts. In this case, DN re-registers itself with\n      * NN and receives a new access key, but DN will delete the old\n      * access key from its memory since it\u0027s considered expired based on\n      * the estimated expiration date.\n      */\n     if (ex instanceof InvalidBlockTokenException || ex instanceof InvalidToken) {\n       DFSClient.LOG.info(\"Access token was invalid when connecting to \"\n           + targetAddr + \" : \" + ex);\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected static boolean tokenRefetchNeeded(IOException ex,\n      InetSocketAddress targetAddr) {\n    /*\n     * Get a new access token and retry. Retry is needed in 2 cases. 1)\n     * When both NN and DN re-started while DFSClient holding a cached\n     * access token. 2) In the case that NN fails to update its\n     * access key at pre-set interval (by a wide margin) and\n     * subsequently restarts. In this case, DN re-registers itself with\n     * NN and receives a new access key, but DN will delete the old\n     * access key from its memory since it\u0027s considered expired based on\n     * the estimated expiration date.\n     */\n    if (ex instanceof InvalidBlockTokenException || ex instanceof InvalidToken) {\n      DFSClient.LOG.info(\"Access token was invalid when connecting to \"\n          + targetAddr + \" : \" + ex);\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java",
      "extendedDetails": {
        "oldValue": "[private, static]",
        "newValue": "[protected, static]"
      }
    },
    "a31a3a68ead2773f8daa5b3ac1041e271b442789": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5652. Refactor invalid block token exception handling in DFSInputStream. (Liang Xie via junping_du)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550620 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/12/13 6:47 PM",
      "commitName": "a31a3a68ead2773f8daa5b3ac1041e271b442789",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,19 @@\n+  private static boolean tokenRefetchNeeded(IOException ex,\n+      InetSocketAddress targetAddr) {\n+    /*\n+     * Get a new access token and retry. Retry is needed in 2 cases. 1)\n+     * When both NN and DN re-started while DFSClient holding a cached\n+     * access token. 2) In the case that NN fails to update its\n+     * access key at pre-set interval (by a wide margin) and\n+     * subsequently restarts. In this case, DN re-registers itself with\n+     * NN and receives a new access key, but DN will delete the old\n+     * access key from its memory since it\u0027s considered expired based on\n+     * the estimated expiration date.\n+     */\n+    if (ex instanceof InvalidBlockTokenException || ex instanceof InvalidToken) {\n+      DFSClient.LOG.info(\"Access token was invalid when connecting to \"\n+          + targetAddr + \" : \" + ex);\n+      return true;\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static boolean tokenRefetchNeeded(IOException ex,\n      InetSocketAddress targetAddr) {\n    /*\n     * Get a new access token and retry. Retry is needed in 2 cases. 1)\n     * When both NN and DN re-started while DFSClient holding a cached\n     * access token. 2) In the case that NN fails to update its\n     * access key at pre-set interval (by a wide margin) and\n     * subsequently restarts. In this case, DN re-registers itself with\n     * NN and receives a new access key, but DN will delete the old\n     * access key from its memory since it\u0027s considered expired based on\n     * the estimated expiration date.\n     */\n    if (ex instanceof InvalidBlockTokenException || ex instanceof InvalidToken) {\n      DFSClient.LOG.info(\"Access token was invalid when connecting to \"\n          + targetAddr + \" : \" + ex);\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java"
    }
  }
}