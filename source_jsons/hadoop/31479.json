{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppToFlowTableRW.java",
  "functionName": "createTable",
  "functionId": "createTable___admin-Admin__hbaseConf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/apptoflow/AppToFlowTableRW.java",
  "functionStartLine": 64,
  "functionEndLine": 85,
  "numCommitsSeen": 9,
  "timeTaken": 2124,
  "changeHistory": [
    "eb03f7c4192d662ae06797acca7f67bc253440cb",
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "9e5155be363c6610ccf41fe08b7f1394f353ea65"
  ],
  "changeHistoryShort": {
    "eb03f7c4192d662ae06797acca7f67bc253440cb": "Ybodychange",
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Yfilerename",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "9e5155be363c6610ccf41fe08b7f1394f353ea65": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eb03f7c4192d662ae06797acca7f67bc253440cb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9303  Username splits won\u0027t help timelineservice.app_flow table. Contributed by Prabhu Joseph.\n",
      "commitDate": "03/04/19 10:53 PM",
      "commitName": "eb03f7c4192d662ae06797acca7f67bc253440cb",
      "commitAuthor": "Vrushali C",
      "commitDateOld": "17/02/18 7:00 AM",
      "commitNameOld": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 410.62,
      "commitsBetweenForRepo": 3751,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,22 @@\n   public void createTable(Admin admin, Configuration hbaseConf)\n       throws IOException {\n \n     TableName table \u003d getTableName(hbaseConf);\n     if (admin.tableExists(table)) {\n       // do not disable / delete existing table\n       // similar to the approach taken by map-reduce jobs when\n       // output directory exists\n       throw new IOException(\"Table \" + table.getNameAsString()\n           + \" already exists.\");\n     }\n \n     HTableDescriptor appToFlowTableDescp \u003d new HTableDescriptor(table);\n     HColumnDescriptor mappCF \u003d\n         new HColumnDescriptor(AppToFlowColumnFamily.MAPPING.getBytes());\n     mappCF.setBloomFilterType(BloomType.ROWCOL);\n     appToFlowTableDescp.addFamily(mappCF);\n \n-    appToFlowTableDescp\n-        .setRegionSplitPolicyClassName(\n-            \"org.apache.hadoop.hbase.regionserver.KeyPrefixRegionSplitPolicy\");\n-    appToFlowTableDescp.setValue(\"KeyPrefixRegionSplitPolicy.prefix_length\",\n-        TimelineHBaseSchemaConstants.USERNAME_SPLIT_KEY_PREFIX_LENGTH);\n-    admin.createTable(appToFlowTableDescp,\n-        TimelineHBaseSchemaConstants.getUsernameSplits());\n+    admin.createTable(appToFlowTableDescp);\n     LOG.info(\"Status of table creation for \" + table.getNameAsString() + \"\u003d\"\n         + admin.tableExists(table));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void createTable(Admin admin, Configuration hbaseConf)\n      throws IOException {\n\n    TableName table \u003d getTableName(hbaseConf);\n    if (admin.tableExists(table)) {\n      // do not disable / delete existing table\n      // similar to the approach taken by map-reduce jobs when\n      // output directory exists\n      throw new IOException(\"Table \" + table.getNameAsString()\n          + \" already exists.\");\n    }\n\n    HTableDescriptor appToFlowTableDescp \u003d new HTableDescriptor(table);\n    HColumnDescriptor mappCF \u003d\n        new HColumnDescriptor(AppToFlowColumnFamily.MAPPING.getBytes());\n    mappCF.setBloomFilterType(BloomType.ROWCOL);\n    appToFlowTableDescp.addFamily(mappCF);\n\n    admin.createTable(appToFlowTableDescp);\n    LOG.info(\"Status of table creation for \" + table.getNameAsString() + \"\u003d\"\n        + admin.tableExists(table));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/apptoflow/AppToFlowTableRW.java",
      "extendedDetails": {}
    },
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "17/02/18 3:24 AM",
      "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void createTable(Admin admin, Configuration hbaseConf)\n      throws IOException {\n\n    TableName table \u003d getTableName(hbaseConf);\n    if (admin.tableExists(table)) {\n      // do not disable / delete existing table\n      // similar to the approach taken by map-reduce jobs when\n      // output directory exists\n      throw new IOException(\"Table \" + table.getNameAsString()\n          + \" already exists.\");\n    }\n\n    HTableDescriptor appToFlowTableDescp \u003d new HTableDescriptor(table);\n    HColumnDescriptor mappCF \u003d\n        new HColumnDescriptor(AppToFlowColumnFamily.MAPPING.getBytes());\n    mappCF.setBloomFilterType(BloomType.ROWCOL);\n    appToFlowTableDescp.addFamily(mappCF);\n\n    appToFlowTableDescp\n        .setRegionSplitPolicyClassName(\n            \"org.apache.hadoop.hbase.regionserver.KeyPrefixRegionSplitPolicy\");\n    appToFlowTableDescp.setValue(\"KeyPrefixRegionSplitPolicy.prefix_length\",\n        TimelineHBaseSchemaConstants.USERNAME_SPLIT_KEY_PREFIX_LENGTH);\n    admin.createTable(appToFlowTableDescp,\n        TimelineHBaseSchemaConstants.getUsernameSplits());\n    LOG.info(\"Status of table creation for \" + table.getNameAsString() + \"\u003d\"\n        + admin.tableExists(table));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/apptoflow/AppToFlowTableRW.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/apptoflow/AppToFlowTable.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/apptoflow/AppToFlowTableRW.java"
      }
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void createTable(Admin admin, Configuration hbaseConf)\n      throws IOException {\n\n    TableName table \u003d getTableName(hbaseConf);\n    if (admin.tableExists(table)) {\n      // do not disable / delete existing table\n      // similar to the approach taken by map-reduce jobs when\n      // output directory exists\n      throw new IOException(\"Table \" + table.getNameAsString()\n          + \" already exists.\");\n    }\n\n    HTableDescriptor appToFlowTableDescp \u003d new HTableDescriptor(table);\n    HColumnDescriptor mappCF \u003d\n        new HColumnDescriptor(AppToFlowColumnFamily.MAPPING.getBytes());\n    mappCF.setBloomFilterType(BloomType.ROWCOL);\n    appToFlowTableDescp.addFamily(mappCF);\n\n    appToFlowTableDescp\n        .setRegionSplitPolicyClassName(\n            \"org.apache.hadoop.hbase.regionserver.KeyPrefixRegionSplitPolicy\");\n    appToFlowTableDescp.setValue(\"KeyPrefixRegionSplitPolicy.prefix_length\",\n        TimelineHBaseSchemaConstants.USERNAME_SPLIT_KEY_PREFIX_LENGTH);\n    admin.createTable(appToFlowTableDescp,\n        TimelineHBaseSchemaConstants.getUsernameSplits());\n    LOG.info(\"Status of table creation for \" + table.getNameAsString() + \"\u003d\"\n        + admin.tableExists(table));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/apptoflow/AppToFlowTable.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/apptoflow/AppToFlowTable.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/apptoflow/AppToFlowTable.java"
      }
    },
    "9e5155be363c6610ccf41fe08b7f1394f353ea65": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3049. [Storage Implementation] Implement storage reader interface to fetch raw data from HBase backend (Zhijie Shen via sjlee)\n\n(cherry picked from commit 07433c2ad52df9e844dbd90020c277d3df844dcd)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9e5155be363c6610ccf41fe08b7f1394f353ea65",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,28 @@\n+  public void createTable(Admin admin, Configuration hbaseConf)\n+      throws IOException {\n+\n+    TableName table \u003d getTableName(hbaseConf);\n+    if (admin.tableExists(table)) {\n+      // do not disable / delete existing table\n+      // similar to the approach taken by map-reduce jobs when\n+      // output directory exists\n+      throw new IOException(\"Table \" + table.getNameAsString()\n+          + \" already exists.\");\n+    }\n+\n+    HTableDescriptor appToFlowTableDescp \u003d new HTableDescriptor(table);\n+    HColumnDescriptor mappCF \u003d\n+        new HColumnDescriptor(AppToFlowColumnFamily.MAPPING.getBytes());\n+    mappCF.setBloomFilterType(BloomType.ROWCOL);\n+    appToFlowTableDescp.addFamily(mappCF);\n+\n+    appToFlowTableDescp\n+        .setRegionSplitPolicyClassName(\n+            \"org.apache.hadoop.hbase.regionserver.KeyPrefixRegionSplitPolicy\");\n+    appToFlowTableDescp.setValue(\"KeyPrefixRegionSplitPolicy.prefix_length\",\n+        TimelineHBaseSchemaConstants.USERNAME_SPLIT_KEY_PREFIX_LENGTH);\n+    admin.createTable(appToFlowTableDescp,\n+        TimelineHBaseSchemaConstants.getUsernameSplits());\n+    LOG.info(\"Status of table creation for \" + table.getNameAsString() + \"\u003d\"\n+        + admin.tableExists(table));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void createTable(Admin admin, Configuration hbaseConf)\n      throws IOException {\n\n    TableName table \u003d getTableName(hbaseConf);\n    if (admin.tableExists(table)) {\n      // do not disable / delete existing table\n      // similar to the approach taken by map-reduce jobs when\n      // output directory exists\n      throw new IOException(\"Table \" + table.getNameAsString()\n          + \" already exists.\");\n    }\n\n    HTableDescriptor appToFlowTableDescp \u003d new HTableDescriptor(table);\n    HColumnDescriptor mappCF \u003d\n        new HColumnDescriptor(AppToFlowColumnFamily.MAPPING.getBytes());\n    mappCF.setBloomFilterType(BloomType.ROWCOL);\n    appToFlowTableDescp.addFamily(mappCF);\n\n    appToFlowTableDescp\n        .setRegionSplitPolicyClassName(\n            \"org.apache.hadoop.hbase.regionserver.KeyPrefixRegionSplitPolicy\");\n    appToFlowTableDescp.setValue(\"KeyPrefixRegionSplitPolicy.prefix_length\",\n        TimelineHBaseSchemaConstants.USERNAME_SPLIT_KEY_PREFIX_LENGTH);\n    admin.createTable(appToFlowTableDescp,\n        TimelineHBaseSchemaConstants.getUsernameSplits());\n    LOG.info(\"Status of table creation for \" + table.getNameAsString() + \"\u003d\"\n        + admin.tableExists(table));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/apptoflow/AppToFlowTable.java"
    }
  }
}