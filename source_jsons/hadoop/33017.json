{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppLogAggregatorImpl.java",
  "functionName": "shouldUploadLogs",
  "functionId": "shouldUploadLogs___logContext-ContainerLogContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java",
  "functionStartLine": 565,
  "functionEndLine": 567,
  "numCommitsSeen": 85,
  "timeTaken": 8457,
  "changeHistory": [
    "37e1c3d82a96d781e1c9982988b7de4aa5242d0c",
    "0af1a2b5bc1469ba22edb63cd58f9b436b1dc4d3",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "37e1c3d82a96d781e1c9982988b7de4aa5242d0c": "Ymultichange(Yparameterchange,Ybodychange)",
    "0af1a2b5bc1469ba22edb63cd58f9b436b1dc4d3": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "37e1c3d82a96d781e1c9982988b7de4aa5242d0c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-221. NM should provide a way for AM to tell it not to aggregate\nlogs. Contributed by Ming Ma\n",
      "commitDate": "22/08/15 4:25 PM",
      "commitName": "37e1c3d82a96d781e1c9982988b7de4aa5242d0c",
      "commitAuthor": "Xuan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-221. NM should provide a way for AM to tell it not to aggregate\nlogs. Contributed by Ming Ma\n",
          "commitDate": "22/08/15 4:25 PM",
          "commitName": "37e1c3d82a96d781e1c9982988b7de4aa5242d0c",
          "commitAuthor": "Xuan",
          "commitDateOld": "01/07/15 2:13 PM",
          "commitNameOld": "b5cdf78e8e6cd6c5c1fb7286207dac72be32c0d6",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 52.09,
          "commitsBetweenForRepo": 287,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,3 @@\n-  private boolean shouldUploadLogs(ContainerId containerId,\n-      boolean wasContainerSuccessful) {\n-\n-    // All containers\n-    if (this.retentionPolicy\n-        .equals(ContainerLogsRetentionPolicy.ALL_CONTAINERS)) {\n-      return true;\n-    }\n-\n-    // AM Container only\n-    if (this.retentionPolicy\n-        .equals(ContainerLogsRetentionPolicy.APPLICATION_MASTER_ONLY)) {\n-      if ((containerId.getContainerId()\n-          \u0026 ContainerId.CONTAINER_ID_BITMASK)\u003d\u003d 1) {\n-        return true;\n-      }\n-      return false;\n-    }\n-\n-    // AM + Failing containers\n-    if (this.retentionPolicy\n-        .equals(ContainerLogsRetentionPolicy.AM_AND_FAILED_CONTAINERS_ONLY)) {\n-      if ((containerId.getContainerId()\n-          \u0026 ContainerId.CONTAINER_ID_BITMASK) \u003d\u003d 1) {\n-        return true;\n-      } else if(!wasContainerSuccessful) {\n-        return true;\n-      }\n-      return false;\n-    }\n-    return false;\n+  private boolean shouldUploadLogs(ContainerLogContext logContext) {\n+    return logAggPolicy.shouldDoLogAggregation(logContext);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean shouldUploadLogs(ContainerLogContext logContext) {\n    return logAggPolicy.shouldDoLogAggregation(logContext);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java",
          "extendedDetails": {
            "oldValue": "[containerId-ContainerId, wasContainerSuccessful-boolean]",
            "newValue": "[logContext-ContainerLogContext]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-221. NM should provide a way for AM to tell it not to aggregate\nlogs. Contributed by Ming Ma\n",
          "commitDate": "22/08/15 4:25 PM",
          "commitName": "37e1c3d82a96d781e1c9982988b7de4aa5242d0c",
          "commitAuthor": "Xuan",
          "commitDateOld": "01/07/15 2:13 PM",
          "commitNameOld": "b5cdf78e8e6cd6c5c1fb7286207dac72be32c0d6",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 52.09,
          "commitsBetweenForRepo": 287,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,3 @@\n-  private boolean shouldUploadLogs(ContainerId containerId,\n-      boolean wasContainerSuccessful) {\n-\n-    // All containers\n-    if (this.retentionPolicy\n-        .equals(ContainerLogsRetentionPolicy.ALL_CONTAINERS)) {\n-      return true;\n-    }\n-\n-    // AM Container only\n-    if (this.retentionPolicy\n-        .equals(ContainerLogsRetentionPolicy.APPLICATION_MASTER_ONLY)) {\n-      if ((containerId.getContainerId()\n-          \u0026 ContainerId.CONTAINER_ID_BITMASK)\u003d\u003d 1) {\n-        return true;\n-      }\n-      return false;\n-    }\n-\n-    // AM + Failing containers\n-    if (this.retentionPolicy\n-        .equals(ContainerLogsRetentionPolicy.AM_AND_FAILED_CONTAINERS_ONLY)) {\n-      if ((containerId.getContainerId()\n-          \u0026 ContainerId.CONTAINER_ID_BITMASK) \u003d\u003d 1) {\n-        return true;\n-      } else if(!wasContainerSuccessful) {\n-        return true;\n-      }\n-      return false;\n-    }\n-    return false;\n+  private boolean shouldUploadLogs(ContainerLogContext logContext) {\n+    return logAggPolicy.shouldDoLogAggregation(logContext);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean shouldUploadLogs(ContainerLogContext logContext) {\n    return logAggPolicy.shouldDoLogAggregation(logContext);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "0af1a2b5bc1469ba22edb63cd58f9b436b1dc4d3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2312. Deprecated old ContainerId#getId API and updated MapReduce to use ContainerId#getContainerId instead. Contributed by Tsuyoshi OZAWA\n",
      "commitDate": "15/10/14 3:22 PM",
      "commitName": "0af1a2b5bc1469ba22edb63cd58f9b436b1dc4d3",
      "commitAuthor": "Jian He",
      "commitDateOld": "13/10/14 10:54 AM",
      "commitNameOld": "4aed2d8e91c7dccc78fbaffc409d3076c3316289",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 2.19,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,32 @@\n   private boolean shouldUploadLogs(ContainerId containerId,\n       boolean wasContainerSuccessful) {\n \n     // All containers\n     if (this.retentionPolicy\n         .equals(ContainerLogsRetentionPolicy.ALL_CONTAINERS)) {\n       return true;\n     }\n \n     // AM Container only\n     if (this.retentionPolicy\n         .equals(ContainerLogsRetentionPolicy.APPLICATION_MASTER_ONLY)) {\n-      if (containerId.getId() \u003d\u003d 1) {\n+      if ((containerId.getContainerId()\n+          \u0026 ContainerId.CONTAINER_ID_BITMASK)\u003d\u003d 1) {\n         return true;\n       }\n       return false;\n     }\n \n     // AM + Failing containers\n     if (this.retentionPolicy\n         .equals(ContainerLogsRetentionPolicy.AM_AND_FAILED_CONTAINERS_ONLY)) {\n-      if (containerId.getId() \u003d\u003d 1) {\n+      if ((containerId.getContainerId()\n+          \u0026 ContainerId.CONTAINER_ID_BITMASK) \u003d\u003d 1) {\n         return true;\n       } else if(!wasContainerSuccessful) {\n         return true;\n       }\n       return false;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean shouldUploadLogs(ContainerId containerId,\n      boolean wasContainerSuccessful) {\n\n    // All containers\n    if (this.retentionPolicy\n        .equals(ContainerLogsRetentionPolicy.ALL_CONTAINERS)) {\n      return true;\n    }\n\n    // AM Container only\n    if (this.retentionPolicy\n        .equals(ContainerLogsRetentionPolicy.APPLICATION_MASTER_ONLY)) {\n      if ((containerId.getContainerId()\n          \u0026 ContainerId.CONTAINER_ID_BITMASK)\u003d\u003d 1) {\n        return true;\n      }\n      return false;\n    }\n\n    // AM + Failing containers\n    if (this.retentionPolicy\n        .equals(ContainerLogsRetentionPolicy.AM_AND_FAILED_CONTAINERS_ONLY)) {\n      if ((containerId.getContainerId()\n          \u0026 ContainerId.CONTAINER_ID_BITMASK) \u003d\u003d 1) {\n        return true;\n      } else if(!wasContainerSuccessful) {\n        return true;\n      }\n      return false;\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private boolean shouldUploadLogs(ContainerId containerId,\n      boolean wasContainerSuccessful) {\n\n    // All containers\n    if (this.retentionPolicy\n        .equals(ContainerLogsRetentionPolicy.ALL_CONTAINERS)) {\n      return true;\n    }\n\n    // AM Container only\n    if (this.retentionPolicy\n        .equals(ContainerLogsRetentionPolicy.APPLICATION_MASTER_ONLY)) {\n      if (containerId.getId() \u003d\u003d 1) {\n        return true;\n      }\n      return false;\n    }\n\n    // AM + Failing containers\n    if (this.retentionPolicy\n        .equals(ContainerLogsRetentionPolicy.AM_AND_FAILED_CONTAINERS_ONLY)) {\n      if (containerId.getId() \u003d\u003d 1) {\n        return true;\n      } else if(!wasContainerSuccessful) {\n        return true;\n      }\n      return false;\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private boolean shouldUploadLogs(ContainerId containerId,\n      boolean wasContainerSuccessful) {\n\n    // All containers\n    if (this.retentionPolicy\n        .equals(ContainerLogsRetentionPolicy.ALL_CONTAINERS)) {\n      return true;\n    }\n\n    // AM Container only\n    if (this.retentionPolicy\n        .equals(ContainerLogsRetentionPolicy.APPLICATION_MASTER_ONLY)) {\n      if (containerId.getId() \u003d\u003d 1) {\n        return true;\n      }\n      return false;\n    }\n\n    // AM + Failing containers\n    if (this.retentionPolicy\n        .equals(ContainerLogsRetentionPolicy.AM_AND_FAILED_CONTAINERS_ONLY)) {\n      if (containerId.getId() \u003d\u003d 1) {\n        return true;\n      } else if(!wasContainerSuccessful) {\n        return true;\n      }\n      return false;\n    }\n    return false;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,30 @@\n+  private boolean shouldUploadLogs(ContainerId containerId,\n+      boolean wasContainerSuccessful) {\n+\n+    // All containers\n+    if (this.retentionPolicy\n+        .equals(ContainerLogsRetentionPolicy.ALL_CONTAINERS)) {\n+      return true;\n+    }\n+\n+    // AM Container only\n+    if (this.retentionPolicy\n+        .equals(ContainerLogsRetentionPolicy.APPLICATION_MASTER_ONLY)) {\n+      if (containerId.getId() \u003d\u003d 1) {\n+        return true;\n+      }\n+      return false;\n+    }\n+\n+    // AM + Failing containers\n+    if (this.retentionPolicy\n+        .equals(ContainerLogsRetentionPolicy.AM_AND_FAILED_CONTAINERS_ONLY)) {\n+      if (containerId.getId() \u003d\u003d 1) {\n+        return true;\n+      } else if(!wasContainerSuccessful) {\n+        return true;\n+      }\n+      return false;\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean shouldUploadLogs(ContainerId containerId,\n      boolean wasContainerSuccessful) {\n\n    // All containers\n    if (this.retentionPolicy\n        .equals(ContainerLogsRetentionPolicy.ALL_CONTAINERS)) {\n      return true;\n    }\n\n    // AM Container only\n    if (this.retentionPolicy\n        .equals(ContainerLogsRetentionPolicy.APPLICATION_MASTER_ONLY)) {\n      if (containerId.getId() \u003d\u003d 1) {\n        return true;\n      }\n      return false;\n    }\n\n    // AM + Failing containers\n    if (this.retentionPolicy\n        .equals(ContainerLogsRetentionPolicy.AM_AND_FAILED_CONTAINERS_ONLY)) {\n      if (containerId.getId() \u003d\u003d 1) {\n        return true;\n      } else if(!wasContainerSuccessful) {\n        return true;\n      }\n      return false;\n    }\n    return false;\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AppLogAggregatorImpl.java"
    }
  }
}