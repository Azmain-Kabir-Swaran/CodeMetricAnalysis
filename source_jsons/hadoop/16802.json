{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NamenodeHeartbeatService.java",
  "functionName": "getFsNamesystemMetrics",
  "functionId": "getFsNamesystemMetrics___address-String__report-NamenodeStatusReport",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/NamenodeHeartbeatService.java",
  "functionStartLine": 386,
  "functionEndLine": 422,
  "numCommitsSeen": 10,
  "timeTaken": 738,
  "changeHistory": [
    "275c478330d5c8cae3c15b876cc8128d164e9fa0"
  ],
  "changeHistoryShort": {
    "275c478330d5c8cae3c15b876cc8128d164e9fa0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "275c478330d5c8cae3c15b876cc8128d164e9fa0": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-15261. RBF: Add Block Related Metrics. Contributed by Ayush Saxena.\n",
      "commitDate": "09/04/20 11:14 AM",
      "commitName": "275c478330d5c8cae3c15b876cc8128d164e9fa0",
      "commitAuthor": "Ayush Saxena",
      "diff": "@@ -0,0 +1,37 @@\n+  private void getFsNamesystemMetrics(String address,\n+      NamenodeStatusReport report) throws JSONException {\n+    String query \u003d \"Hadoop:service\u003dNameNode,name\u003dFSNamesystem*\";\n+    JSONArray aux \u003d FederationUtil.getJmx(\n+        query, address, connectionFactory, scheme);\n+    if (aux !\u003d null) {\n+      for (int i \u003d 0; i \u003c aux.length(); i++) {\n+        JSONObject jsonObject \u003d aux.getJSONObject(i);\n+        String name \u003d jsonObject.getString(\"name\");\n+        if (name.equals(\"Hadoop:service\u003dNameNode,name\u003dFSNamesystemState\")) {\n+          report.setDatanodeInfo(\n+              jsonObject.getInt(\"NumLiveDataNodes\"),\n+              jsonObject.getInt(\"NumDeadDataNodes\"),\n+              jsonObject.getInt(\"NumStaleDataNodes\"),\n+              jsonObject.getInt(\"NumDecommissioningDataNodes\"),\n+              jsonObject.getInt(\"NumDecomLiveDataNodes\"),\n+              jsonObject.getInt(\"NumDecomDeadDataNodes\"),\n+              jsonObject.optInt(\"NumInMaintenanceLiveDataNodes\"),\n+              jsonObject.optInt(\"NumInMaintenanceDeadDataNodes\"),\n+              jsonObject.optInt(\"NumEnteringMaintenanceDataNodes\"),\n+              jsonObject.optLong(\"ScheduledReplicationBlocks\"));\n+        } else if (name.equals(\n+            \"Hadoop:service\u003dNameNode,name\u003dFSNamesystem\")) {\n+          report.setNamesystemInfo(\n+              jsonObject.getLong(\"CapacityRemaining\"),\n+              jsonObject.getLong(\"CapacityTotal\"),\n+              jsonObject.getLong(\"FilesTotal\"),\n+              jsonObject.getLong(\"BlocksTotal\"),\n+              jsonObject.getLong(\"MissingBlocks\"),\n+              jsonObject.getLong(\"PendingReplicationBlocks\"),\n+              jsonObject.getLong(\"UnderReplicatedBlocks\"),\n+              jsonObject.getLong(\"PendingDeletionBlocks\"),\n+              jsonObject.optLong(\"ProvidedCapacityTotal\"));\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void getFsNamesystemMetrics(String address,\n      NamenodeStatusReport report) throws JSONException {\n    String query \u003d \"Hadoop:service\u003dNameNode,name\u003dFSNamesystem*\";\n    JSONArray aux \u003d FederationUtil.getJmx(\n        query, address, connectionFactory, scheme);\n    if (aux !\u003d null) {\n      for (int i \u003d 0; i \u003c aux.length(); i++) {\n        JSONObject jsonObject \u003d aux.getJSONObject(i);\n        String name \u003d jsonObject.getString(\"name\");\n        if (name.equals(\"Hadoop:service\u003dNameNode,name\u003dFSNamesystemState\")) {\n          report.setDatanodeInfo(\n              jsonObject.getInt(\"NumLiveDataNodes\"),\n              jsonObject.getInt(\"NumDeadDataNodes\"),\n              jsonObject.getInt(\"NumStaleDataNodes\"),\n              jsonObject.getInt(\"NumDecommissioningDataNodes\"),\n              jsonObject.getInt(\"NumDecomLiveDataNodes\"),\n              jsonObject.getInt(\"NumDecomDeadDataNodes\"),\n              jsonObject.optInt(\"NumInMaintenanceLiveDataNodes\"),\n              jsonObject.optInt(\"NumInMaintenanceDeadDataNodes\"),\n              jsonObject.optInt(\"NumEnteringMaintenanceDataNodes\"),\n              jsonObject.optLong(\"ScheduledReplicationBlocks\"));\n        } else if (name.equals(\n            \"Hadoop:service\u003dNameNode,name\u003dFSNamesystem\")) {\n          report.setNamesystemInfo(\n              jsonObject.getLong(\"CapacityRemaining\"),\n              jsonObject.getLong(\"CapacityTotal\"),\n              jsonObject.getLong(\"FilesTotal\"),\n              jsonObject.getLong(\"BlocksTotal\"),\n              jsonObject.getLong(\"MissingBlocks\"),\n              jsonObject.getLong(\"PendingReplicationBlocks\"),\n              jsonObject.getLong(\"UnderReplicatedBlocks\"),\n              jsonObject.getLong(\"PendingDeletionBlocks\"),\n              jsonObject.optLong(\"ProvidedCapacityTotal\"));\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/NamenodeHeartbeatService.java"
    }
  }
}