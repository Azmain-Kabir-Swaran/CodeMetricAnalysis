{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RamDiskAsyncLazyPersistService.java",
  "functionName": "submitLazyPersistTask",
  "functionId": "submitLazyPersistTask___bpId-String__blockId-long__genStamp-long__creationTime-long__replica-ReplicaInfo__target-FsVolumeReference",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/RamDiskAsyncLazyPersistService.java",
  "functionStartLine": 191,
  "functionEndLine": 204,
  "numCommitsSeen": 23,
  "timeTaken": 3989,
  "changeHistory": [
    "96b12662ea76e3ded4ef13944fc8df206cfb4613",
    "86c9862bec0248d671e657aa56094a2919b8ac14",
    "b7f4a3156c0f5c600816c469637237ba6c9b330c",
    "1efd9c98258fbb973d2058dcf0850042e53bd02f"
  ],
  "changeHistoryShort": {
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": "Ybodychange",
    "86c9862bec0248d671e657aa56094a2919b8ac14": "Ymultichange(Yparameterchange,Ybodychange)",
    "b7f4a3156c0f5c600816c469637237ba6c9b330c": "Ymultichange(Yparameterchange,Ybodychange)",
    "1efd9c98258fbb973d2058dcf0850042e53bd02f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10637. Modifications to remove the assumption that FsVolumes are backed by java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "10/10/16 3:30 PM",
      "commitName": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "13/09/16 12:54 PM",
      "commitNameOld": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 27.11,
      "commitsBetweenForRepo": 180,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,14 @@\n   void submitLazyPersistTask(String bpId, long blockId,\n       long genStamp, long creationTime,\n       ReplicaInfo replica, FsVolumeReference target) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"LazyWriter schedule async task to persist RamDisk block pool id: \"\n           + bpId + \" block id: \" + blockId);\n     }\n \n-    FsVolumeImpl volume \u003d (FsVolumeImpl)target.getVolume();\n-    File lazyPersistDir  \u003d volume.getLazyPersistDir(bpId);\n-    if (!lazyPersistDir.exists() \u0026\u0026 !lazyPersistDir.mkdirs()) {\n-      FsDatasetImpl.LOG.warn(\"LazyWriter failed to create \" + lazyPersistDir);\n-      throw new IOException(\"LazyWriter fail to find or create lazy persist dir: \"\n-          + lazyPersistDir.toString());\n-    }\n-\n     ReplicaLazyPersistTask lazyPersistTask \u003d new ReplicaLazyPersistTask(\n-        bpId, blockId, genStamp, creationTime, replica,\n-        target, lazyPersistDir);\n-    execute(volume.getCurrentDir(), lazyPersistTask);\n+        bpId, blockId, genStamp, creationTime, replica, target);\n+\n+    FsVolumeImpl volume \u003d (FsVolumeImpl)target.getVolume();\n+    execute(volume.getStorageID(), lazyPersistTask);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void submitLazyPersistTask(String bpId, long blockId,\n      long genStamp, long creationTime,\n      ReplicaInfo replica, FsVolumeReference target) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"LazyWriter schedule async task to persist RamDisk block pool id: \"\n          + bpId + \" block id: \" + blockId);\n    }\n\n    ReplicaLazyPersistTask lazyPersistTask \u003d new ReplicaLazyPersistTask(\n        bpId, blockId, genStamp, creationTime, replica, target);\n\n    FsVolumeImpl volume \u003d (FsVolumeImpl)target.getVolume();\n    execute(volume.getStorageID(), lazyPersistTask);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/RamDiskAsyncLazyPersistService.java",
      "extendedDetails": {}
    },
    "86c9862bec0248d671e657aa56094a2919b8ac14": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "13/09/16 12:54 PM",
      "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthor": "Lei Xu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
          "commitDate": "13/09/16 12:54 PM",
          "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "26/09/15 11:08 AM",
          "commitNameOld": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 353.07,
          "commitsBetweenForRepo": 2454,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,21 @@\n   void submitLazyPersistTask(String bpId, long blockId,\n       long genStamp, long creationTime,\n-      File metaFile, File blockFile,\n-      FsVolumeReference target) throws IOException {\n+      ReplicaInfo replica, FsVolumeReference target) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"LazyWriter schedule async task to persist RamDisk block pool id: \"\n           + bpId + \" block id: \" + blockId);\n     }\n \n     FsVolumeImpl volume \u003d (FsVolumeImpl)target.getVolume();\n     File lazyPersistDir  \u003d volume.getLazyPersistDir(bpId);\n     if (!lazyPersistDir.exists() \u0026\u0026 !lazyPersistDir.mkdirs()) {\n       FsDatasetImpl.LOG.warn(\"LazyWriter failed to create \" + lazyPersistDir);\n       throw new IOException(\"LazyWriter fail to find or create lazy persist dir: \"\n           + lazyPersistDir.toString());\n     }\n \n     ReplicaLazyPersistTask lazyPersistTask \u003d new ReplicaLazyPersistTask(\n-        bpId, blockId, genStamp, creationTime, blockFile, metaFile,\n+        bpId, blockId, genStamp, creationTime, replica,\n         target, lazyPersistDir);\n     execute(volume.getCurrentDir(), lazyPersistTask);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void submitLazyPersistTask(String bpId, long blockId,\n      long genStamp, long creationTime,\n      ReplicaInfo replica, FsVolumeReference target) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"LazyWriter schedule async task to persist RamDisk block pool id: \"\n          + bpId + \" block id: \" + blockId);\n    }\n\n    FsVolumeImpl volume \u003d (FsVolumeImpl)target.getVolume();\n    File lazyPersistDir  \u003d volume.getLazyPersistDir(bpId);\n    if (!lazyPersistDir.exists() \u0026\u0026 !lazyPersistDir.mkdirs()) {\n      FsDatasetImpl.LOG.warn(\"LazyWriter failed to create \" + lazyPersistDir);\n      throw new IOException(\"LazyWriter fail to find or create lazy persist dir: \"\n          + lazyPersistDir.toString());\n    }\n\n    ReplicaLazyPersistTask lazyPersistTask \u003d new ReplicaLazyPersistTask(\n        bpId, blockId, genStamp, creationTime, replica,\n        target, lazyPersistDir);\n    execute(volume.getCurrentDir(), lazyPersistTask);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/RamDiskAsyncLazyPersistService.java",
          "extendedDetails": {
            "oldValue": "[bpId-String, blockId-long, genStamp-long, creationTime-long, metaFile-File, blockFile-File, target-FsVolumeReference]",
            "newValue": "[bpId-String, blockId-long, genStamp-long, creationTime-long, replica-ReplicaInfo, target-FsVolumeReference]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
          "commitDate": "13/09/16 12:54 PM",
          "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "26/09/15 11:08 AM",
          "commitNameOld": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 353.07,
          "commitsBetweenForRepo": 2454,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,21 @@\n   void submitLazyPersistTask(String bpId, long blockId,\n       long genStamp, long creationTime,\n-      File metaFile, File blockFile,\n-      FsVolumeReference target) throws IOException {\n+      ReplicaInfo replica, FsVolumeReference target) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"LazyWriter schedule async task to persist RamDisk block pool id: \"\n           + bpId + \" block id: \" + blockId);\n     }\n \n     FsVolumeImpl volume \u003d (FsVolumeImpl)target.getVolume();\n     File lazyPersistDir  \u003d volume.getLazyPersistDir(bpId);\n     if (!lazyPersistDir.exists() \u0026\u0026 !lazyPersistDir.mkdirs()) {\n       FsDatasetImpl.LOG.warn(\"LazyWriter failed to create \" + lazyPersistDir);\n       throw new IOException(\"LazyWriter fail to find or create lazy persist dir: \"\n           + lazyPersistDir.toString());\n     }\n \n     ReplicaLazyPersistTask lazyPersistTask \u003d new ReplicaLazyPersistTask(\n-        bpId, blockId, genStamp, creationTime, blockFile, metaFile,\n+        bpId, blockId, genStamp, creationTime, replica,\n         target, lazyPersistDir);\n     execute(volume.getCurrentDir(), lazyPersistTask);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void submitLazyPersistTask(String bpId, long blockId,\n      long genStamp, long creationTime,\n      ReplicaInfo replica, FsVolumeReference target) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"LazyWriter schedule async task to persist RamDisk block pool id: \"\n          + bpId + \" block id: \" + blockId);\n    }\n\n    FsVolumeImpl volume \u003d (FsVolumeImpl)target.getVolume();\n    File lazyPersistDir  \u003d volume.getLazyPersistDir(bpId);\n    if (!lazyPersistDir.exists() \u0026\u0026 !lazyPersistDir.mkdirs()) {\n      FsDatasetImpl.LOG.warn(\"LazyWriter failed to create \" + lazyPersistDir);\n      throw new IOException(\"LazyWriter fail to find or create lazy persist dir: \"\n          + lazyPersistDir.toString());\n    }\n\n    ReplicaLazyPersistTask lazyPersistTask \u003d new ReplicaLazyPersistTask(\n        bpId, blockId, genStamp, creationTime, replica,\n        target, lazyPersistDir);\n    execute(volume.getCurrentDir(), lazyPersistTask);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/RamDiskAsyncLazyPersistService.java",
          "extendedDetails": {}
        }
      ]
    },
    "b7f4a3156c0f5c600816c469637237ba6c9b330c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7496. Fix FsVolume removal race conditions on the DataNode by reference-counting the volume instances (lei via cmccabe)\n",
      "commitDate": "20/01/15 7:05 PM",
      "commitName": "b7f4a3156c0f5c600816c469637237ba6c9b330c",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7496. Fix FsVolume removal race conditions on the DataNode by reference-counting the volume instances (lei via cmccabe)\n",
          "commitDate": "20/01/15 7:05 PM",
          "commitName": "b7f4a3156c0f5c600816c469637237ba6c9b330c",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "19/01/15 1:49 PM",
          "commitNameOld": "4a4450836c8972480b9387b5e31bab57ae2b5baa",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 1.22,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,22 @@\n   void submitLazyPersistTask(String bpId, long blockId,\n       long genStamp, long creationTime,\n       File metaFile, File blockFile,\n-      FsVolumeImpl targetVolume) throws IOException {\n+      FsVolumeReference target) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"LazyWriter schedule async task to persist RamDisk block pool id: \"\n           + bpId + \" block id: \" + blockId);\n     }\n \n-    File lazyPersistDir  \u003d targetVolume.getLazyPersistDir(bpId);\n+    FsVolumeImpl volume \u003d (FsVolumeImpl)target.getVolume();\n+    File lazyPersistDir  \u003d volume.getLazyPersistDir(bpId);\n     if (!lazyPersistDir.exists() \u0026\u0026 !lazyPersistDir.mkdirs()) {\n       FsDatasetImpl.LOG.warn(\"LazyWriter failed to create \" + lazyPersistDir);\n       throw new IOException(\"LazyWriter fail to find or create lazy persist dir: \"\n           + lazyPersistDir.toString());\n     }\n \n     ReplicaLazyPersistTask lazyPersistTask \u003d new ReplicaLazyPersistTask(\n         bpId, blockId, genStamp, creationTime, blockFile, metaFile,\n-        targetVolume, lazyPersistDir);\n-    execute(targetVolume.getCurrentDir(), lazyPersistTask);\n+        target, lazyPersistDir);\n+    execute(volume.getCurrentDir(), lazyPersistTask);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void submitLazyPersistTask(String bpId, long blockId,\n      long genStamp, long creationTime,\n      File metaFile, File blockFile,\n      FsVolumeReference target) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"LazyWriter schedule async task to persist RamDisk block pool id: \"\n          + bpId + \" block id: \" + blockId);\n    }\n\n    FsVolumeImpl volume \u003d (FsVolumeImpl)target.getVolume();\n    File lazyPersistDir  \u003d volume.getLazyPersistDir(bpId);\n    if (!lazyPersistDir.exists() \u0026\u0026 !lazyPersistDir.mkdirs()) {\n      FsDatasetImpl.LOG.warn(\"LazyWriter failed to create \" + lazyPersistDir);\n      throw new IOException(\"LazyWriter fail to find or create lazy persist dir: \"\n          + lazyPersistDir.toString());\n    }\n\n    ReplicaLazyPersistTask lazyPersistTask \u003d new ReplicaLazyPersistTask(\n        bpId, blockId, genStamp, creationTime, blockFile, metaFile,\n        target, lazyPersistDir);\n    execute(volume.getCurrentDir(), lazyPersistTask);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/RamDiskAsyncLazyPersistService.java",
          "extendedDetails": {
            "oldValue": "[bpId-String, blockId-long, genStamp-long, creationTime-long, metaFile-File, blockFile-File, targetVolume-FsVolumeImpl]",
            "newValue": "[bpId-String, blockId-long, genStamp-long, creationTime-long, metaFile-File, blockFile-File, target-FsVolumeReference]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7496. Fix FsVolume removal race conditions on the DataNode by reference-counting the volume instances (lei via cmccabe)\n",
          "commitDate": "20/01/15 7:05 PM",
          "commitName": "b7f4a3156c0f5c600816c469637237ba6c9b330c",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "19/01/15 1:49 PM",
          "commitNameOld": "4a4450836c8972480b9387b5e31bab57ae2b5baa",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 1.22,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,22 @@\n   void submitLazyPersistTask(String bpId, long blockId,\n       long genStamp, long creationTime,\n       File metaFile, File blockFile,\n-      FsVolumeImpl targetVolume) throws IOException {\n+      FsVolumeReference target) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"LazyWriter schedule async task to persist RamDisk block pool id: \"\n           + bpId + \" block id: \" + blockId);\n     }\n \n-    File lazyPersistDir  \u003d targetVolume.getLazyPersistDir(bpId);\n+    FsVolumeImpl volume \u003d (FsVolumeImpl)target.getVolume();\n+    File lazyPersistDir  \u003d volume.getLazyPersistDir(bpId);\n     if (!lazyPersistDir.exists() \u0026\u0026 !lazyPersistDir.mkdirs()) {\n       FsDatasetImpl.LOG.warn(\"LazyWriter failed to create \" + lazyPersistDir);\n       throw new IOException(\"LazyWriter fail to find or create lazy persist dir: \"\n           + lazyPersistDir.toString());\n     }\n \n     ReplicaLazyPersistTask lazyPersistTask \u003d new ReplicaLazyPersistTask(\n         bpId, blockId, genStamp, creationTime, blockFile, metaFile,\n-        targetVolume, lazyPersistDir);\n-    execute(targetVolume.getCurrentDir(), lazyPersistTask);\n+        target, lazyPersistDir);\n+    execute(volume.getCurrentDir(), lazyPersistTask);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void submitLazyPersistTask(String bpId, long blockId,\n      long genStamp, long creationTime,\n      File metaFile, File blockFile,\n      FsVolumeReference target) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"LazyWriter schedule async task to persist RamDisk block pool id: \"\n          + bpId + \" block id: \" + blockId);\n    }\n\n    FsVolumeImpl volume \u003d (FsVolumeImpl)target.getVolume();\n    File lazyPersistDir  \u003d volume.getLazyPersistDir(bpId);\n    if (!lazyPersistDir.exists() \u0026\u0026 !lazyPersistDir.mkdirs()) {\n      FsDatasetImpl.LOG.warn(\"LazyWriter failed to create \" + lazyPersistDir);\n      throw new IOException(\"LazyWriter fail to find or create lazy persist dir: \"\n          + lazyPersistDir.toString());\n    }\n\n    ReplicaLazyPersistTask lazyPersistTask \u003d new ReplicaLazyPersistTask(\n        bpId, blockId, genStamp, creationTime, blockFile, metaFile,\n        target, lazyPersistDir);\n    execute(volume.getCurrentDir(), lazyPersistTask);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/RamDiskAsyncLazyPersistService.java",
          "extendedDetails": {}
        }
      ]
    },
    "1efd9c98258fbb973d2058dcf0850042e53bd02f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7112. LazyWriter should use either async IO or one thread per physical disk. Contributed by Xiaoyu Yao.\n",
      "commitDate": "07/10/14 8:25 PM",
      "commitName": "1efd9c98258fbb973d2058dcf0850042e53bd02f",
      "commitAuthor": "cnauroth",
      "diff": "@@ -0,0 +1,21 @@\n+  void submitLazyPersistTask(String bpId, long blockId,\n+      long genStamp, long creationTime,\n+      File metaFile, File blockFile,\n+      FsVolumeImpl targetVolume) throws IOException {\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"LazyWriter schedule async task to persist RamDisk block pool id: \"\n+          + bpId + \" block id: \" + blockId);\n+    }\n+\n+    File lazyPersistDir  \u003d targetVolume.getLazyPersistDir(bpId);\n+    if (!lazyPersistDir.exists() \u0026\u0026 !lazyPersistDir.mkdirs()) {\n+      FsDatasetImpl.LOG.warn(\"LazyWriter failed to create \" + lazyPersistDir);\n+      throw new IOException(\"LazyWriter fail to find or create lazy persist dir: \"\n+          + lazyPersistDir.toString());\n+    }\n+\n+    ReplicaLazyPersistTask lazyPersistTask \u003d new ReplicaLazyPersistTask(\n+        bpId, blockId, genStamp, creationTime, blockFile, metaFile,\n+        targetVolume, lazyPersistDir);\n+    execute(targetVolume.getCurrentDir(), lazyPersistTask);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void submitLazyPersistTask(String bpId, long blockId,\n      long genStamp, long creationTime,\n      File metaFile, File blockFile,\n      FsVolumeImpl targetVolume) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"LazyWriter schedule async task to persist RamDisk block pool id: \"\n          + bpId + \" block id: \" + blockId);\n    }\n\n    File lazyPersistDir  \u003d targetVolume.getLazyPersistDir(bpId);\n    if (!lazyPersistDir.exists() \u0026\u0026 !lazyPersistDir.mkdirs()) {\n      FsDatasetImpl.LOG.warn(\"LazyWriter failed to create \" + lazyPersistDir);\n      throw new IOException(\"LazyWriter fail to find or create lazy persist dir: \"\n          + lazyPersistDir.toString());\n    }\n\n    ReplicaLazyPersistTask lazyPersistTask \u003d new ReplicaLazyPersistTask(\n        bpId, blockId, genStamp, creationTime, blockFile, metaFile,\n        targetVolume, lazyPersistDir);\n    execute(targetVolume.getCurrentDir(), lazyPersistTask);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/RamDiskAsyncLazyPersistService.java"
    }
  }
}