{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SerializedExceptionPBImpl.java",
  "functionName": "init",
  "functionId": "init___t-Throwable",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/SerializedExceptionPBImpl.java",
  "functionStartLine": 57,
  "functionEndLine": 76,
  "numCommitsSeen": 5,
  "timeTaken": 1350,
  "changeHistory": [
    "3ca3137179ef093e42cde06587c9ea785b10f32c",
    "2638bc67a48f923404d57ed2026c4997df6bd06e"
  ],
  "changeHistoryShort": {
    "3ca3137179ef093e42cde06587c9ea785b10f32c": "Ymultichange(Yfilerename,Ybodychange)",
    "2638bc67a48f923404d57ed2026c4997df6bd06e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3ca3137179ef093e42cde06587c9ea785b10f32c": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/07/13 8:41 PM",
      "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/07/13 8:41 PM",
          "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "23/07/13 3:06 PM",
          "commitNameOld": "77fa04457c375ac202829c33c8378fa3538cad65",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 0.23,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n   public void init(Throwable t) {\n     maybeInitBuilder();\n     if (t \u003d\u003d null) {\n       return;\n     }\n \n     if (t.getCause() \u003d\u003d null) {\n     } else {\n       builder.setCause(new SerializedExceptionPBImpl(t.getCause()).getProto());\n-      builder.setClassName(t.getClass().getCanonicalName());\n     }\n     StringWriter sw \u003d new StringWriter();\n     PrintWriter pw \u003d new PrintWriter(sw);\n     t.printStackTrace(pw);\n     pw.close();\n     if (sw.toString() !\u003d null)\n       builder.setTrace(sw.toString());\n     if (t.getMessage() !\u003d null)\n       builder.setMessage(t.getMessage());\n+    builder.setClassName(t.getClass().getCanonicalName());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(Throwable t) {\n    maybeInitBuilder();\n    if (t \u003d\u003d null) {\n      return;\n    }\n\n    if (t.getCause() \u003d\u003d null) {\n    } else {\n      builder.setCause(new SerializedExceptionPBImpl(t.getCause()).getProto());\n    }\n    StringWriter sw \u003d new StringWriter();\n    PrintWriter pw \u003d new PrintWriter(sw);\n    t.printStackTrace(pw);\n    pw.close();\n    if (sw.toString() !\u003d null)\n      builder.setTrace(sw.toString());\n    if (t.getMessage() !\u003d null)\n      builder.setMessage(t.getMessage());\n    builder.setClassName(t.getClass().getCanonicalName());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/SerializedExceptionPBImpl.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/records/impl/pb/SerializedExceptionPBImpl.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/SerializedExceptionPBImpl.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/07/13 8:41 PM",
          "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "23/07/13 3:06 PM",
          "commitNameOld": "77fa04457c375ac202829c33c8378fa3538cad65",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 0.23,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n   public void init(Throwable t) {\n     maybeInitBuilder();\n     if (t \u003d\u003d null) {\n       return;\n     }\n \n     if (t.getCause() \u003d\u003d null) {\n     } else {\n       builder.setCause(new SerializedExceptionPBImpl(t.getCause()).getProto());\n-      builder.setClassName(t.getClass().getCanonicalName());\n     }\n     StringWriter sw \u003d new StringWriter();\n     PrintWriter pw \u003d new PrintWriter(sw);\n     t.printStackTrace(pw);\n     pw.close();\n     if (sw.toString() !\u003d null)\n       builder.setTrace(sw.toString());\n     if (t.getMessage() !\u003d null)\n       builder.setMessage(t.getMessage());\n+    builder.setClassName(t.getClass().getCanonicalName());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(Throwable t) {\n    maybeInitBuilder();\n    if (t \u003d\u003d null) {\n      return;\n    }\n\n    if (t.getCause() \u003d\u003d null) {\n    } else {\n      builder.setCause(new SerializedExceptionPBImpl(t.getCause()).getProto());\n    }\n    StringWriter sw \u003d new StringWriter();\n    PrintWriter pw \u003d new PrintWriter(sw);\n    t.printStackTrace(pw);\n    pw.close();\n    if (sw.toString() !\u003d null)\n      builder.setTrace(sw.toString());\n    if (t.getMessage() !\u003d null)\n      builder.setMessage(t.getMessage());\n    builder.setClassName(t.getClass().getCanonicalName());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/SerializedExceptionPBImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "2638bc67a48f923404d57ed2026c4997df6bd06e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-634. Modified YarnRemoteException to be not backed by PB and introduced a separate SerializedException record. Contributed by Siddharth Seth.\nMAPREDUCE-5239. Updated MR App to reflect YarnRemoteException changes after YARN-634. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1481205 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/05/13 2:49 PM",
      "commitName": "2638bc67a48f923404d57ed2026c4997df6bd06e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,20 @@\n+  public void init(Throwable t) {\n+    maybeInitBuilder();\n+    if (t \u003d\u003d null) {\n+      return;\n+    }\n+\n+    if (t.getCause() \u003d\u003d null) {\n+    } else {\n+      builder.setCause(new SerializedExceptionPBImpl(t.getCause()).getProto());\n+      builder.setClassName(t.getClass().getCanonicalName());\n+    }\n+    StringWriter sw \u003d new StringWriter();\n+    PrintWriter pw \u003d new PrintWriter(sw);\n+    t.printStackTrace(pw);\n+    pw.close();\n+    if (sw.toString() !\u003d null)\n+      builder.setTrace(sw.toString());\n+    if (t.getMessage() !\u003d null)\n+      builder.setMessage(t.getMessage());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(Throwable t) {\n    maybeInitBuilder();\n    if (t \u003d\u003d null) {\n      return;\n    }\n\n    if (t.getCause() \u003d\u003d null) {\n    } else {\n      builder.setCause(new SerializedExceptionPBImpl(t.getCause()).getProto());\n      builder.setClassName(t.getClass().getCanonicalName());\n    }\n    StringWriter sw \u003d new StringWriter();\n    PrintWriter pw \u003d new PrintWriter(sw);\n    t.printStackTrace(pw);\n    pw.close();\n    if (sw.toString() !\u003d null)\n      builder.setTrace(sw.toString());\n    if (t.getMessage() !\u003d null)\n      builder.setMessage(t.getMessage());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/records/impl/pb/SerializedExceptionPBImpl.java"
    }
  }
}