{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PriorityUtilizationQueueOrderingPolicy.java",
  "functionName": "getAssignmentIterator",
  "functionId": "getAssignmentIterator___partition-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/policy/PriorityUtilizationQueueOrderingPolicy.java",
  "functionStartLine": 216,
  "functionEndLine": 223,
  "numCommitsSeen": 4,
  "timeTaken": 1632,
  "changeHistory": [
    "ce832059db077fa95922198b066a737ed4f609fe"
  ],
  "changeHistoryShort": {
    "ce832059db077fa95922198b066a737ed4f609fe": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ce832059db077fa95922198b066a737ed4f609fe": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5864. Capacity Scheduler - Queue Priorities. (wangda)\n",
      "commitDate": "23/01/17 10:52 AM",
      "commitName": "ce832059db077fa95922198b066a737ed4f609fe",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,8 @@\n+  public Iterator\u003cCSQueue\u003e getAssignmentIterator(String partition) {\n+    // Since partitionToLookAt is a thread local variable, and every time we\n+    // copy and sort queues, so it\u0027s safe for multi-threading environment.\n+    PriorityUtilizationQueueOrderingPolicy.partitionToLookAt.set(partition);\n+    List\u003cCSQueue\u003e sortedQueue \u003d new ArrayList\u003c\u003e(queues);\n+    Collections.sort(sortedQueue, new PriorityQueueComparator());\n+    return sortedQueue.iterator();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Iterator\u003cCSQueue\u003e getAssignmentIterator(String partition) {\n    // Since partitionToLookAt is a thread local variable, and every time we\n    // copy and sort queues, so it\u0027s safe for multi-threading environment.\n    PriorityUtilizationQueueOrderingPolicy.partitionToLookAt.set(partition);\n    List\u003cCSQueue\u003e sortedQueue \u003d new ArrayList\u003c\u003e(queues);\n    Collections.sort(sortedQueue, new PriorityQueueComparator());\n    return sortedQueue.iterator();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/policy/PriorityUtilizationQueueOrderingPolicy.java"
    }
  }
}