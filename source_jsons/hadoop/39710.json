{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeafQueue.java",
  "functionName": "updateQueuePreemptionMetrics",
  "functionId": "updateQueuePreemptionMetrics___rmc-RMContainer",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
  "functionStartLine": 2216,
  "functionEndLine": 2231,
  "numCommitsSeen": 391,
  "timeTaken": 6087,
  "changeHistory": [
    "6f2226a013daf30b00c6676a5f12160ac0b197b7",
    "50094d7fefafaf0e88798b43cdce291ae067e3fd",
    "84e22a6af46db2859d7d2caf192861cae9b6a1a8",
    "82cc6f6968d2897ae006c5ef29eba74023f3483e"
  ],
  "changeHistoryShort": {
    "6f2226a013daf30b00c6676a5f12160ac0b197b7": "Ybodychange",
    "50094d7fefafaf0e88798b43cdce291ae067e3fd": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "84e22a6af46db2859d7d2caf192861cae9b6a1a8": "Ybodychange",
    "82cc6f6968d2897ae006c5ef29eba74023f3483e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6f2226a013daf30b00c6676a5f12160ac0b197b7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9756: Create metric that sums total memory/vcores preempted per round. Contributed by  Manikandan R (manirajv06).\n",
      "commitDate": "28/08/19 1:40 PM",
      "commitName": "6f2226a013daf30b00c6676a5f12160ac0b197b7",
      "commitAuthor": "Eric E Payne",
      "commitDateOld": "06/06/19 6:59 AM",
      "commitNameOld": "09763925025a3709e6098186348e1afd80cb9f71",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 83.28,
      "commitsBetweenForRepo": 739,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n   private void updateQueuePreemptionMetrics(RMContainer rmc) {\n     final long usedMillis \u003d rmc.getFinishTime() - rmc.getCreationTime();\n     final long usedSeconds \u003d usedMillis / DateUtils.MILLIS_PER_SECOND;\n     Resource containerResource \u003d rmc.getAllocatedResource();\n     metrics.preemptContainer();\n     long mbSeconds \u003d (containerResource.getMemorySize() * usedMillis)\n         / DateUtils.MILLIS_PER_SECOND;\n     long vcSeconds \u003d (containerResource.getVirtualCores() * usedMillis)\n         / DateUtils.MILLIS_PER_SECOND;\n     metrics.updatePreemptedMemoryMBSeconds(mbSeconds);\n     metrics.updatePreemptedVcoreSeconds(vcSeconds);\n+    metrics.updatePreemptedResources(containerResource);\n     metrics.updatePreemptedSecondsForCustomResources(containerResource,\n         usedSeconds);\n+    metrics.updatePreemptedForCustomResources(containerResource);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateQueuePreemptionMetrics(RMContainer rmc) {\n    final long usedMillis \u003d rmc.getFinishTime() - rmc.getCreationTime();\n    final long usedSeconds \u003d usedMillis / DateUtils.MILLIS_PER_SECOND;\n    Resource containerResource \u003d rmc.getAllocatedResource();\n    metrics.preemptContainer();\n    long mbSeconds \u003d (containerResource.getMemorySize() * usedMillis)\n        / DateUtils.MILLIS_PER_SECOND;\n    long vcSeconds \u003d (containerResource.getVirtualCores() * usedMillis)\n        / DateUtils.MILLIS_PER_SECOND;\n    metrics.updatePreemptedMemoryMBSeconds(mbSeconds);\n    metrics.updatePreemptedVcoreSeconds(vcSeconds);\n    metrics.updatePreemptedResources(containerResource);\n    metrics.updatePreemptedSecondsForCustomResources(containerResource,\n        usedSeconds);\n    metrics.updatePreemptedForCustomResources(containerResource);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "50094d7fefafaf0e88798b43cdce291ae067e3fd": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-9300. Lazy preemption should trigger an update on queue preemption metrics for CapacityScheduler. Contributed by Tao Yang.\n",
      "commitDate": "24/02/19 6:17 AM",
      "commitName": "50094d7fefafaf0e88798b43cdce291ae067e3fd",
      "commitAuthor": "Weiwei Yang",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-9300. Lazy preemption should trigger an update on queue preemption metrics for CapacityScheduler. Contributed by Tao Yang.\n",
          "commitDate": "24/02/19 6:17 AM",
          "commitName": "50094d7fefafaf0e88798b43cdce291ae067e3fd",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "24/02/19 1:07 AM",
          "commitNameOld": "dddcfa4d9f07aa96692a12afd3003ae89ac40b17",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 0.22,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,14 @@\n-  private void updateQueuePreemptionMetrics(\n-      CSQueue queue, RMContainer rmc) {\n-    QueueMetrics qMetrics \u003d queue.getMetrics();\n+  private void updateQueuePreemptionMetrics(RMContainer rmc) {\n     final long usedMillis \u003d rmc.getFinishTime() - rmc.getCreationTime();\n     final long usedSeconds \u003d usedMillis / DateUtils.MILLIS_PER_SECOND;\n     Resource containerResource \u003d rmc.getAllocatedResource();\n-    qMetrics.preemptContainer();\n+    metrics.preemptContainer();\n     long mbSeconds \u003d (containerResource.getMemorySize() * usedMillis)\n         / DateUtils.MILLIS_PER_SECOND;\n     long vcSeconds \u003d (containerResource.getVirtualCores() * usedMillis)\n         / DateUtils.MILLIS_PER_SECOND;\n-    qMetrics.updatePreemptedMemoryMBSeconds(mbSeconds);\n-    qMetrics.updatePreemptedVcoreSeconds(vcSeconds);\n-    qMetrics.updatePreemptedSecondsForCustomResources(containerResource,\n+    metrics.updatePreemptedMemoryMBSeconds(mbSeconds);\n+    metrics.updatePreemptedVcoreSeconds(vcSeconds);\n+    metrics.updatePreemptedSecondsForCustomResources(containerResource,\n         usedSeconds);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void updateQueuePreemptionMetrics(RMContainer rmc) {\n    final long usedMillis \u003d rmc.getFinishTime() - rmc.getCreationTime();\n    final long usedSeconds \u003d usedMillis / DateUtils.MILLIS_PER_SECOND;\n    Resource containerResource \u003d rmc.getAllocatedResource();\n    metrics.preemptContainer();\n    long mbSeconds \u003d (containerResource.getMemorySize() * usedMillis)\n        / DateUtils.MILLIS_PER_SECOND;\n    long vcSeconds \u003d (containerResource.getVirtualCores() * usedMillis)\n        / DateUtils.MILLIS_PER_SECOND;\n    metrics.updatePreemptedMemoryMBSeconds(mbSeconds);\n    metrics.updatePreemptedVcoreSeconds(vcSeconds);\n    metrics.updatePreemptedSecondsForCustomResources(containerResource,\n        usedSeconds);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
            "oldMethodName": "updateQueuePreemptionMetrics",
            "newMethodName": "updateQueuePreemptionMetrics"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9300. Lazy preemption should trigger an update on queue preemption metrics for CapacityScheduler. Contributed by Tao Yang.\n",
          "commitDate": "24/02/19 6:17 AM",
          "commitName": "50094d7fefafaf0e88798b43cdce291ae067e3fd",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "24/02/19 1:07 AM",
          "commitNameOld": "dddcfa4d9f07aa96692a12afd3003ae89ac40b17",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 0.22,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,14 @@\n-  private void updateQueuePreemptionMetrics(\n-      CSQueue queue, RMContainer rmc) {\n-    QueueMetrics qMetrics \u003d queue.getMetrics();\n+  private void updateQueuePreemptionMetrics(RMContainer rmc) {\n     final long usedMillis \u003d rmc.getFinishTime() - rmc.getCreationTime();\n     final long usedSeconds \u003d usedMillis / DateUtils.MILLIS_PER_SECOND;\n     Resource containerResource \u003d rmc.getAllocatedResource();\n-    qMetrics.preemptContainer();\n+    metrics.preemptContainer();\n     long mbSeconds \u003d (containerResource.getMemorySize() * usedMillis)\n         / DateUtils.MILLIS_PER_SECOND;\n     long vcSeconds \u003d (containerResource.getVirtualCores() * usedMillis)\n         / DateUtils.MILLIS_PER_SECOND;\n-    qMetrics.updatePreemptedMemoryMBSeconds(mbSeconds);\n-    qMetrics.updatePreemptedVcoreSeconds(vcSeconds);\n-    qMetrics.updatePreemptedSecondsForCustomResources(containerResource,\n+    metrics.updatePreemptedMemoryMBSeconds(mbSeconds);\n+    metrics.updatePreemptedVcoreSeconds(vcSeconds);\n+    metrics.updatePreemptedSecondsForCustomResources(containerResource,\n         usedSeconds);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void updateQueuePreemptionMetrics(RMContainer rmc) {\n    final long usedMillis \u003d rmc.getFinishTime() - rmc.getCreationTime();\n    final long usedSeconds \u003d usedMillis / DateUtils.MILLIS_PER_SECOND;\n    Resource containerResource \u003d rmc.getAllocatedResource();\n    metrics.preemptContainer();\n    long mbSeconds \u003d (containerResource.getMemorySize() * usedMillis)\n        / DateUtils.MILLIS_PER_SECOND;\n    long vcSeconds \u003d (containerResource.getVirtualCores() * usedMillis)\n        / DateUtils.MILLIS_PER_SECOND;\n    metrics.updatePreemptedMemoryMBSeconds(mbSeconds);\n    metrics.updatePreemptedVcoreSeconds(vcSeconds);\n    metrics.updatePreemptedSecondsForCustomResources(containerResource,\n        usedSeconds);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9300. Lazy preemption should trigger an update on queue preemption metrics for CapacityScheduler. Contributed by Tao Yang.\n",
          "commitDate": "24/02/19 6:17 AM",
          "commitName": "50094d7fefafaf0e88798b43cdce291ae067e3fd",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "24/02/19 1:07 AM",
          "commitNameOld": "dddcfa4d9f07aa96692a12afd3003ae89ac40b17",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 0.22,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,14 @@\n-  private void updateQueuePreemptionMetrics(\n-      CSQueue queue, RMContainer rmc) {\n-    QueueMetrics qMetrics \u003d queue.getMetrics();\n+  private void updateQueuePreemptionMetrics(RMContainer rmc) {\n     final long usedMillis \u003d rmc.getFinishTime() - rmc.getCreationTime();\n     final long usedSeconds \u003d usedMillis / DateUtils.MILLIS_PER_SECOND;\n     Resource containerResource \u003d rmc.getAllocatedResource();\n-    qMetrics.preemptContainer();\n+    metrics.preemptContainer();\n     long mbSeconds \u003d (containerResource.getMemorySize() * usedMillis)\n         / DateUtils.MILLIS_PER_SECOND;\n     long vcSeconds \u003d (containerResource.getVirtualCores() * usedMillis)\n         / DateUtils.MILLIS_PER_SECOND;\n-    qMetrics.updatePreemptedMemoryMBSeconds(mbSeconds);\n-    qMetrics.updatePreemptedVcoreSeconds(vcSeconds);\n-    qMetrics.updatePreemptedSecondsForCustomResources(containerResource,\n+    metrics.updatePreemptedMemoryMBSeconds(mbSeconds);\n+    metrics.updatePreemptedVcoreSeconds(vcSeconds);\n+    metrics.updatePreemptedSecondsForCustomResources(containerResource,\n         usedSeconds);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void updateQueuePreemptionMetrics(RMContainer rmc) {\n    final long usedMillis \u003d rmc.getFinishTime() - rmc.getCreationTime();\n    final long usedSeconds \u003d usedMillis / DateUtils.MILLIS_PER_SECOND;\n    Resource containerResource \u003d rmc.getAllocatedResource();\n    metrics.preemptContainer();\n    long mbSeconds \u003d (containerResource.getMemorySize() * usedMillis)\n        / DateUtils.MILLIS_PER_SECOND;\n    long vcSeconds \u003d (containerResource.getVirtualCores() * usedMillis)\n        / DateUtils.MILLIS_PER_SECOND;\n    metrics.updatePreemptedMemoryMBSeconds(mbSeconds);\n    metrics.updatePreemptedVcoreSeconds(vcSeconds);\n    metrics.updatePreemptedSecondsForCustomResources(containerResource,\n        usedSeconds);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "[queue-CSQueue, rmc-RMContainer]",
            "newValue": "[rmc-RMContainer]"
          }
        }
      ]
    },
    "84e22a6af46db2859d7d2caf192861cae9b6a1a8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8842. Expose metrics for custom resource types in QueueMetrics. (Contributed by Szilard Nemeth)\n",
      "commitDate": "16/10/18 2:14 PM",
      "commitName": "84e22a6af46db2859d7d2caf192861cae9b6a1a8",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "09/10/18 6:32 PM",
      "commitNameOld": "edce866489d83744f3f47a3b884b0c6136885e4a",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 6.82,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,16 @@\n   private void updateQueuePreemptionMetrics(\n       CSQueue queue, RMContainer rmc) {\n     QueueMetrics qMetrics \u003d queue.getMetrics();\n-    long usedMillis \u003d rmc.getFinishTime() - rmc.getCreationTime();\n+    final long usedMillis \u003d rmc.getFinishTime() - rmc.getCreationTime();\n+    final long usedSeconds \u003d usedMillis / DateUtils.MILLIS_PER_SECOND;\n     Resource containerResource \u003d rmc.getAllocatedResource();\n     qMetrics.preemptContainer();\n     long mbSeconds \u003d (containerResource.getMemorySize() * usedMillis)\n         / DateUtils.MILLIS_PER_SECOND;\n     long vcSeconds \u003d (containerResource.getVirtualCores() * usedMillis)\n         / DateUtils.MILLIS_PER_SECOND;\n     qMetrics.updatePreemptedMemoryMBSeconds(mbSeconds);\n     qMetrics.updatePreemptedVcoreSeconds(vcSeconds);\n+    qMetrics.updatePreemptedSecondsForCustomResources(containerResource,\n+        usedSeconds);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateQueuePreemptionMetrics(\n      CSQueue queue, RMContainer rmc) {\n    QueueMetrics qMetrics \u003d queue.getMetrics();\n    final long usedMillis \u003d rmc.getFinishTime() - rmc.getCreationTime();\n    final long usedSeconds \u003d usedMillis / DateUtils.MILLIS_PER_SECOND;\n    Resource containerResource \u003d rmc.getAllocatedResource();\n    qMetrics.preemptContainer();\n    long mbSeconds \u003d (containerResource.getMemorySize() * usedMillis)\n        / DateUtils.MILLIS_PER_SECOND;\n    long vcSeconds \u003d (containerResource.getVirtualCores() * usedMillis)\n        / DateUtils.MILLIS_PER_SECOND;\n    qMetrics.updatePreemptedMemoryMBSeconds(mbSeconds);\n    qMetrics.updatePreemptedVcoreSeconds(vcSeconds);\n    qMetrics.updatePreemptedSecondsForCustomResources(containerResource,\n        usedSeconds);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "82cc6f6968d2897ae006c5ef29eba74023f3483e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7728. Expose container preemptions related information in Capacity Scheduler queue metrics. Contributed by Eric Payne.\n",
      "commitDate": "25/01/18 1:02 AM",
      "commitName": "82cc6f6968d2897ae006c5ef29eba74023f3483e",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,13 @@\n+  private void updateQueuePreemptionMetrics(\n+      CSQueue queue, RMContainer rmc) {\n+    QueueMetrics qMetrics \u003d queue.getMetrics();\n+    long usedMillis \u003d rmc.getFinishTime() - rmc.getCreationTime();\n+    Resource containerResource \u003d rmc.getAllocatedResource();\n+    qMetrics.preemptContainer();\n+    long mbSeconds \u003d (containerResource.getMemorySize() * usedMillis)\n+        / DateUtils.MILLIS_PER_SECOND;\n+    long vcSeconds \u003d (containerResource.getVirtualCores() * usedMillis)\n+        / DateUtils.MILLIS_PER_SECOND;\n+    qMetrics.updatePreemptedMemoryMBSeconds(mbSeconds);\n+    qMetrics.updatePreemptedVcoreSeconds(vcSeconds);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateQueuePreemptionMetrics(\n      CSQueue queue, RMContainer rmc) {\n    QueueMetrics qMetrics \u003d queue.getMetrics();\n    long usedMillis \u003d rmc.getFinishTime() - rmc.getCreationTime();\n    Resource containerResource \u003d rmc.getAllocatedResource();\n    qMetrics.preemptContainer();\n    long mbSeconds \u003d (containerResource.getMemorySize() * usedMillis)\n        / DateUtils.MILLIS_PER_SECOND;\n    long vcSeconds \u003d (containerResource.getVirtualCores() * usedMillis)\n        / DateUtils.MILLIS_PER_SECOND;\n    qMetrics.updatePreemptedMemoryMBSeconds(mbSeconds);\n    qMetrics.updatePreemptedVcoreSeconds(vcSeconds);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java"
    }
  }
}