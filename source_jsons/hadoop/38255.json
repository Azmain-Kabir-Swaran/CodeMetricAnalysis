{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SchedulingMonitor.java",
  "functionName": "serviceStart",
  "functionId": "serviceStart",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingMonitor.java",
  "functionStartLine": 68,
  "functionEndLine": 80,
  "numCommitsSeen": 12,
  "timeTaken": 2196,
  "changeHistory": [
    "a63d19d36520fa55bf523483f14329756f6eadd3",
    "e6ec02001fc4eed9eb51c8653d8f931135e49eda",
    "2ada100da7cfe12946e43da2929bd80c2a8bd833",
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61"
  ],
  "changeHistoryShort": {
    "a63d19d36520fa55bf523483f14329756f6eadd3": "Ybodychange",
    "e6ec02001fc4eed9eb51c8653d8f931135e49eda": "Ybodychange",
    "2ada100da7cfe12946e43da2929bd80c2a8bd833": "Ybodychange",
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a63d19d36520fa55bf523483f14329756f6eadd3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6124. Make SchedulingEditPolicy can be enabled / disabled / updated with RMAdmin -refreshQueues. (Zian Chen via wangda)\n\nChange-Id: Id93656f3af7dcd78cafa94e33663c78d410d43c2\n",
      "commitDate": "30/11/17 3:57 PM",
      "commitName": "a63d19d36520fa55bf523483f14329756f6eadd3",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "02/11/17 10:37 AM",
      "commitNameOld": "e6ec02001fc4eed9eb51c8653d8f931135e49eda",
      "commitAuthorOld": "Eric Payne",
      "daysBetweenCommits": 28.26,
      "commitsBetweenForRepo": 237,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n   public void serviceStart() throws Exception {\n+    LOG.info(\"Starting SchedulingMonitor\u003d\" + getName());\n     assert !stopped : \"starting when already stopped\";\n     ses \u003d Executors.newSingleThreadScheduledExecutor(new ThreadFactory() {\n       public Thread newThread(Runnable r) {\n         Thread t \u003d new Thread(r);\n         t.setName(getName());\n         return t;\n       }\n     });\n     schedulePreemptionChecker();\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceStart() throws Exception {\n    LOG.info(\"Starting SchedulingMonitor\u003d\" + getName());\n    assert !stopped : \"starting when already stopped\";\n    ses \u003d Executors.newSingleThreadScheduledExecutor(new ThreadFactory() {\n      public Thread newThread(Runnable r) {\n        Thread t \u003d new Thread(r);\n        t.setName(getName());\n        return t;\n      }\n    });\n    schedulePreemptionChecker();\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingMonitor.java",
      "extendedDetails": {}
    },
    "e6ec02001fc4eed9eb51c8653d8f931135e49eda": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7370: Preemption properties should be refreshable. Contrubted by Gergely Nov√°k.\n",
      "commitDate": "02/11/17 10:37 AM",
      "commitName": "e6ec02001fc4eed9eb51c8653d8f931135e49eda",
      "commitAuthor": "Eric Payne",
      "commitDateOld": "25/08/17 1:31 PM",
      "commitNameOld": "39a9dc8e4a6e1d13658867ad756878d3dd6352b0",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 68.88,
      "commitsBetweenForRepo": 612,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,12 @@\n   public void serviceStart() throws Exception {\n     assert !stopped : \"starting when already stopped\";\n     ses \u003d Executors.newSingleThreadScheduledExecutor(new ThreadFactory() {\n       public Thread newThread(Runnable r) {\n         Thread t \u003d new Thread(r);\n         t.setName(getName());\n         return t;\n       }\n     });\n-    handler \u003d ses.scheduleAtFixedRate(new PreemptionChecker(),\n-        0, monitorInterval, TimeUnit.MILLISECONDS);\n+    schedulePreemptionChecker();\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceStart() throws Exception {\n    assert !stopped : \"starting when already stopped\";\n    ses \u003d Executors.newSingleThreadScheduledExecutor(new ThreadFactory() {\n      public Thread newThread(Runnable r) {\n        Thread t \u003d new Thread(r);\n        t.setName(getName());\n        return t;\n      }\n    });\n    schedulePreemptionChecker();\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingMonitor.java",
      "extendedDetails": {}
    },
    "2ada100da7cfe12946e43da2929bd80c2a8bd833": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5543. ResourceManager SchedulingMonitor could potentially terminate the preemption checker thread. Contributed by Min Shen.",
      "commitDate": "11/05/17 1:25 PM",
      "commitName": "2ada100da7cfe12946e43da2929bd80c2a8bd833",
      "commitAuthor": "Min Shen",
      "commitDateOld": "05/05/16 12:56 PM",
      "commitNameOld": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 371.02,
      "commitsBetweenForRepo": 2477,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,13 @@\n   public void serviceStart() throws Exception {\n     assert !stopped : \"starting when already stopped\";\n-    checkerThread \u003d new Thread(new PreemptionChecker());\n-    checkerThread.setName(getName());\n-    checkerThread.start();\n+    ses \u003d Executors.newSingleThreadScheduledExecutor(new ThreadFactory() {\n+      public Thread newThread(Runnable r) {\n+        Thread t \u003d new Thread(r);\n+        t.setName(getName());\n+        return t;\n+      }\n+    });\n+    handler \u003d ses.scheduleAtFixedRate(new PreemptionChecker(),\n+        0, monitorInterval, TimeUnit.MILLISECONDS);\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceStart() throws Exception {\n    assert !stopped : \"starting when already stopped\";\n    ses \u003d Executors.newSingleThreadScheduledExecutor(new ThreadFactory() {\n      public Thread newThread(Runnable r) {\n        Thread t \u003d new Thread(r);\n        t.setName(getName());\n        return t;\n      }\n    });\n    handler \u003d ses.scheduleAtFixedRate(new PreemptionChecker(),\n        0, monitorInterval, TimeUnit.MILLISECONDS);\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingMonitor.java",
      "extendedDetails": {}
    },
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": {
      "type": "Yintroduced",
      "commitMessage": "YARN-569. Add support for requesting and enforcing preemption requests via\na capacity monitor. Contributed by Carlo Curino, Chris Douglas\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502083 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/07/13 6:20 PM",
      "commitName": "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61",
      "commitAuthor": "Christopher Douglas",
      "diff": "@@ -0,0 +1,7 @@\n+  public void serviceStart() throws Exception {\n+    assert !stopped : \"starting when already stopped\";\n+    checkerThread \u003d new Thread(new PreemptionChecker());\n+    checkerThread.setName(getName());\n+    checkerThread.start();\n+    super.serviceStart();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceStart() throws Exception {\n    assert !stopped : \"starting when already stopped\";\n    checkerThread \u003d new Thread(new PreemptionChecker());\n    checkerThread.setName(getName());\n    checkerThread.start();\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/SchedulingMonitor.java"
    }
  }
}