{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SysInfoLinux.java",
  "functionName": "getCpuUsagePercentage",
  "functionId": "getCpuUsagePercentage",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/SysInfoLinux.java",
  "functionStartLine": 654,
  "functionEndLine": 661,
  "numCommitsSeen": 20,
  "timeTaken": 10012,
  "changeHistory": [
    "89d1fd5dac4bccf42d82686e146b02eb60d14736",
    "ac6048372a58b3a3b57cd5f2702b44a3d4667f3d",
    "53947f37c7a84a84ef4ab1a3cab63ff27c078385",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "89d1fd5dac4bccf42d82686e146b02eb60d14736": "Yrename",
    "ac6048372a58b3a3b57cd5f2702b44a3d4667f3d": "Ymovefromfile",
    "53947f37c7a84a84ef4ab1a3cab63ff27c078385": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymultichange(Ymovefromfile,Ybodychange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "89d1fd5dac4bccf42d82686e146b02eb60d14736": {
      "type": "Yrename",
      "commitMessage": "HADOOP-12356. Fix computing CPU usage statistics on Windows. (Inigo Goiri via wangda)\n",
      "commitDate": "19/01/16 5:27 AM",
      "commitName": "89d1fd5dac4bccf42d82686e146b02eb60d14736",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "13/07/15 3:36 PM",
      "commitNameOld": "a431ed9075cf6f467be5ff10f4ffb131cb1d3216",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 189.62,
      "commitsBetweenForRepo": 1257,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n-  public float getCpuUsage() {\n+  public float getCpuUsagePercentage() {\n     readProcStatFile();\n     float overallCpuUsage \u003d cpuTimeTracker.getCpuTrackerUsagePercent();\n     if (overallCpuUsage !\u003d CpuTimeTracker.UNAVAILABLE) {\n       overallCpuUsage \u003d overallCpuUsage / getNumProcessors();\n     }\n     return overallCpuUsage;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public float getCpuUsagePercentage() {\n    readProcStatFile();\n    float overallCpuUsage \u003d cpuTimeTracker.getCpuTrackerUsagePercent();\n    if (overallCpuUsage !\u003d CpuTimeTracker.UNAVAILABLE) {\n      overallCpuUsage \u003d overallCpuUsage / getNumProcessors();\n    }\n    return overallCpuUsage;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/SysInfoLinux.java",
      "extendedDetails": {
        "oldValue": "getCpuUsage",
        "newValue": "getCpuUsagePercentage"
      }
    },
    "ac6048372a58b3a3b57cd5f2702b44a3d4667f3d": {
      "type": "Ymovefromfile",
      "commitMessage": "HADOOP-12180. Move ResourceCalculatorPlugin from YARN to Common. (Chris Douglas via kasha)\n",
      "commitDate": "09/07/15 9:56 AM",
      "commitName": "ac6048372a58b3a3b57cd5f2702b44a3d4667f3d",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "09/07/15 9:48 AM",
      "commitNameOld": "aa067c6aa47b4c79577096817acc00ad6421180c",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public float getCpuUsage() {\n    readProcStatFile();\n    float overallCpuUsage \u003d cpuTimeTracker.getCpuTrackerUsagePercent();\n    if (overallCpuUsage !\u003d CpuTimeTracker.UNAVAILABLE) {\n      overallCpuUsage \u003d overallCpuUsage / getNumProcessors();\n    }\n    return overallCpuUsage;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/SysInfoLinux.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/SysInfoLinux.java",
        "oldMethodName": "getCpuUsage",
        "newMethodName": "getCpuUsage"
      }
    },
    "53947f37c7a84a84ef4ab1a3cab63ff27c078385": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3122. Metrics for container\u0027s actual CPU usage. (Anubhav Dhoot via kasha)\n",
      "commitDate": "04/03/15 5:33 PM",
      "commitName": "53947f37c7a84a84ef4ab1a3cab63ff27c078385",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "22/12/14 3:06 AM",
      "commitNameOld": "a696fbb001b946ae75f3b8e962839c2fd3decfa1",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 72.6,
      "commitsBetweenForRepo": 553,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,8 @@\n   public float getCpuUsage() {\n     readProcStatFile();\n-    sampleTime \u003d getCurrentTime();\n-    if (lastSampleTime \u003d\u003d UNAVAILABLE ||\n-        lastSampleTime \u003e sampleTime) {\n-      // lastSampleTime \u003e sampleTime may happen when the system time is changed\n-      lastSampleTime \u003d sampleTime;\n-      lastCumulativeCpuTime \u003d cumulativeCpuTime;\n-      return cpuUsage;\n+    float overallCpuUsage \u003d cpuTimeTracker.getCpuTrackerUsagePercent();\n+    if (overallCpuUsage !\u003d CpuTimeTracker.UNAVAILABLE) {\n+      overallCpuUsage \u003d overallCpuUsage / getNumProcessors();\n     }\n-    // When lastSampleTime is sufficiently old, update cpuUsage.\n-    // Also take a sample of the current time and cumulative CPU time for the\n-    // use of the next calculation.\n-    final long MINIMUM_UPDATE_INTERVAL \u003d 10 * jiffyLengthInMillis;\n-    if (sampleTime \u003e lastSampleTime + MINIMUM_UPDATE_INTERVAL) {\n-\t    cpuUsage \u003d (float)(cumulativeCpuTime - lastCumulativeCpuTime) * 100F /\n-\t               ((float)(sampleTime - lastSampleTime) * getNumProcessors());\n-\t    lastSampleTime \u003d sampleTime;\n-      lastCumulativeCpuTime \u003d cumulativeCpuTime;\n-    }\n-    return cpuUsage;\n+    return overallCpuUsage;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public float getCpuUsage() {\n    readProcStatFile();\n    float overallCpuUsage \u003d cpuTimeTracker.getCpuTrackerUsagePercent();\n    if (overallCpuUsage !\u003d CpuTimeTracker.UNAVAILABLE) {\n      overallCpuUsage \u003d overallCpuUsage / getNumProcessors();\n    }\n    return overallCpuUsage;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public float getCpuUsage() {\n    readProcStatFile();\n    sampleTime \u003d getCurrentTime();\n    if (lastSampleTime \u003d\u003d UNAVAILABLE ||\n        lastSampleTime \u003e sampleTime) {\n      // lastSampleTime \u003e sampleTime may happen when the system time is changed\n      lastSampleTime \u003d sampleTime;\n      lastCumulativeCpuTime \u003d cumulativeCpuTime;\n      return cpuUsage;\n    }\n    // When lastSampleTime is sufficiently old, update cpuUsage.\n    // Also take a sample of the current time and cumulative CPU time for the\n    // use of the next calculation.\n    final long MINIMUM_UPDATE_INTERVAL \u003d 10 * jiffyLengthInMillis;\n    if (sampleTime \u003e lastSampleTime + MINIMUM_UPDATE_INTERVAL) {\n\t    cpuUsage \u003d (float)(cumulativeCpuTime - lastCumulativeCpuTime) * 100F /\n\t               ((float)(sampleTime - lastSampleTime) * getNumProcessors());\n\t    lastSampleTime \u003d sampleTime;\n      lastCumulativeCpuTime \u003d cumulativeCpuTime;\n    }\n    return cpuUsage;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public float getCpuUsage() {\n    readProcStatFile();\n    sampleTime \u003d getCurrentTime();\n    if (lastSampleTime \u003d\u003d UNAVAILABLE ||\n        lastSampleTime \u003e sampleTime) {\n      // lastSampleTime \u003e sampleTime may happen when the system time is changed\n      lastSampleTime \u003d sampleTime;\n      lastCumulativeCpuTime \u003d cumulativeCpuTime;\n      return cpuUsage;\n    }\n    // When lastSampleTime is sufficiently old, update cpuUsage.\n    // Also take a sample of the current time and cumulative CPU time for the\n    // use of the next calculation.\n    final long MINIMUM_UPDATE_INTERVAL \u003d 10 * jiffyLengthInMillis;\n    if (sampleTime \u003e lastSampleTime + MINIMUM_UPDATE_INTERVAL) {\n\t    cpuUsage \u003d (float)(cumulativeCpuTime - lastCumulativeCpuTime) * 100F /\n\t               ((float)(sampleTime - lastSampleTime) * getNumProcessors());\n\t    lastSampleTime \u003d sampleTime;\n      lastCumulativeCpuTime \u003d cumulativeCpuTime;\n    }\n    return cpuUsage;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n   public float getCpuUsage() {\n     readProcStatFile();\n     sampleTime \u003d getCurrentTime();\n-    if (lastSampleTime \u003d\u003d TaskTrackerStatus.UNAVAILABLE ||\n+    if (lastSampleTime \u003d\u003d UNAVAILABLE ||\n         lastSampleTime \u003e sampleTime) {\n       // lastSampleTime \u003e sampleTime may happen when the system time is changed\n       lastSampleTime \u003d sampleTime;\n       lastCumulativeCpuTime \u003d cumulativeCpuTime;\n       return cpuUsage;\n     }\n     // When lastSampleTime is sufficiently old, update cpuUsage.\n     // Also take a sample of the current time and cumulative CPU time for the\n     // use of the next calculation.\n     final long MINIMUM_UPDATE_INTERVAL \u003d 10 * jiffyLengthInMillis;\n     if (sampleTime \u003e lastSampleTime + MINIMUM_UPDATE_INTERVAL) {\n \t    cpuUsage \u003d (float)(cumulativeCpuTime - lastCumulativeCpuTime) * 100F /\n \t               ((float)(sampleTime - lastSampleTime) * getNumProcessors());\n \t    lastSampleTime \u003d sampleTime;\n       lastCumulativeCpuTime \u003d cumulativeCpuTime;\n     }\n     return cpuUsage;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public float getCpuUsage() {\n    readProcStatFile();\n    sampleTime \u003d getCurrentTime();\n    if (lastSampleTime \u003d\u003d UNAVAILABLE ||\n        lastSampleTime \u003e sampleTime) {\n      // lastSampleTime \u003e sampleTime may happen when the system time is changed\n      lastSampleTime \u003d sampleTime;\n      lastCumulativeCpuTime \u003d cumulativeCpuTime;\n      return cpuUsage;\n    }\n    // When lastSampleTime is sufficiently old, update cpuUsage.\n    // Also take a sample of the current time and cumulative CPU time for the\n    // use of the next calculation.\n    final long MINIMUM_UPDATE_INTERVAL \u003d 10 * jiffyLengthInMillis;\n    if (sampleTime \u003e lastSampleTime + MINIMUM_UPDATE_INTERVAL) {\n\t    cpuUsage \u003d (float)(cumulativeCpuTime - lastCumulativeCpuTime) * 100F /\n\t               ((float)(sampleTime - lastSampleTime) * getNumProcessors());\n\t    lastSampleTime \u003d sampleTime;\n      lastCumulativeCpuTime \u003d cumulativeCpuTime;\n    }\n    return cpuUsage;\n  }",
          "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java",
          "extendedDetails": {
            "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/util/LinuxResourceCalculatorPlugin.java",
            "newPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java",
            "oldMethodName": "getCpuUsage",
            "newMethodName": "getCpuUsage"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n   public float getCpuUsage() {\n     readProcStatFile();\n     sampleTime \u003d getCurrentTime();\n-    if (lastSampleTime \u003d\u003d TaskTrackerStatus.UNAVAILABLE ||\n+    if (lastSampleTime \u003d\u003d UNAVAILABLE ||\n         lastSampleTime \u003e sampleTime) {\n       // lastSampleTime \u003e sampleTime may happen when the system time is changed\n       lastSampleTime \u003d sampleTime;\n       lastCumulativeCpuTime \u003d cumulativeCpuTime;\n       return cpuUsage;\n     }\n     // When lastSampleTime is sufficiently old, update cpuUsage.\n     // Also take a sample of the current time and cumulative CPU time for the\n     // use of the next calculation.\n     final long MINIMUM_UPDATE_INTERVAL \u003d 10 * jiffyLengthInMillis;\n     if (sampleTime \u003e lastSampleTime + MINIMUM_UPDATE_INTERVAL) {\n \t    cpuUsage \u003d (float)(cumulativeCpuTime - lastCumulativeCpuTime) * 100F /\n \t               ((float)(sampleTime - lastSampleTime) * getNumProcessors());\n \t    lastSampleTime \u003d sampleTime;\n       lastCumulativeCpuTime \u003d cumulativeCpuTime;\n     }\n     return cpuUsage;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public float getCpuUsage() {\n    readProcStatFile();\n    sampleTime \u003d getCurrentTime();\n    if (lastSampleTime \u003d\u003d UNAVAILABLE ||\n        lastSampleTime \u003e sampleTime) {\n      // lastSampleTime \u003e sampleTime may happen when the system time is changed\n      lastSampleTime \u003d sampleTime;\n      lastCumulativeCpuTime \u003d cumulativeCpuTime;\n      return cpuUsage;\n    }\n    // When lastSampleTime is sufficiently old, update cpuUsage.\n    // Also take a sample of the current time and cumulative CPU time for the\n    // use of the next calculation.\n    final long MINIMUM_UPDATE_INTERVAL \u003d 10 * jiffyLengthInMillis;\n    if (sampleTime \u003e lastSampleTime + MINIMUM_UPDATE_INTERVAL) {\n\t    cpuUsage \u003d (float)(cumulativeCpuTime - lastCumulativeCpuTime) * 100F /\n\t               ((float)(sampleTime - lastSampleTime) * getNumProcessors());\n\t    lastSampleTime \u003d sampleTime;\n      lastCumulativeCpuTime \u003d cumulativeCpuTime;\n    }\n    return cpuUsage;\n  }",
          "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/LinuxResourceCalculatorPlugin.java",
          "extendedDetails": {}
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,22 @@\n+  public float getCpuUsage() {\n+    readProcStatFile();\n+    sampleTime \u003d getCurrentTime();\n+    if (lastSampleTime \u003d\u003d TaskTrackerStatus.UNAVAILABLE ||\n+        lastSampleTime \u003e sampleTime) {\n+      // lastSampleTime \u003e sampleTime may happen when the system time is changed\n+      lastSampleTime \u003d sampleTime;\n+      lastCumulativeCpuTime \u003d cumulativeCpuTime;\n+      return cpuUsage;\n+    }\n+    // When lastSampleTime is sufficiently old, update cpuUsage.\n+    // Also take a sample of the current time and cumulative CPU time for the\n+    // use of the next calculation.\n+    final long MINIMUM_UPDATE_INTERVAL \u003d 10 * jiffyLengthInMillis;\n+    if (sampleTime \u003e lastSampleTime + MINIMUM_UPDATE_INTERVAL) {\n+\t    cpuUsage \u003d (float)(cumulativeCpuTime - lastCumulativeCpuTime) * 100F /\n+\t               ((float)(sampleTime - lastSampleTime) * getNumProcessors());\n+\t    lastSampleTime \u003d sampleTime;\n+      lastCumulativeCpuTime \u003d cumulativeCpuTime;\n+    }\n+    return cpuUsage;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public float getCpuUsage() {\n    readProcStatFile();\n    sampleTime \u003d getCurrentTime();\n    if (lastSampleTime \u003d\u003d TaskTrackerStatus.UNAVAILABLE ||\n        lastSampleTime \u003e sampleTime) {\n      // lastSampleTime \u003e sampleTime may happen when the system time is changed\n      lastSampleTime \u003d sampleTime;\n      lastCumulativeCpuTime \u003d cumulativeCpuTime;\n      return cpuUsage;\n    }\n    // When lastSampleTime is sufficiently old, update cpuUsage.\n    // Also take a sample of the current time and cumulative CPU time for the\n    // use of the next calculation.\n    final long MINIMUM_UPDATE_INTERVAL \u003d 10 * jiffyLengthInMillis;\n    if (sampleTime \u003e lastSampleTime + MINIMUM_UPDATE_INTERVAL) {\n\t    cpuUsage \u003d (float)(cumulativeCpuTime - lastCumulativeCpuTime) * 100F /\n\t               ((float)(sampleTime - lastSampleTime) * getNumProcessors());\n\t    lastSampleTime \u003d sampleTime;\n      lastCumulativeCpuTime \u003d cumulativeCpuTime;\n    }\n    return cpuUsage;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/util/LinuxResourceCalculatorPlugin.java"
    }
  }
}