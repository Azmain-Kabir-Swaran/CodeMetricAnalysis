{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractINodeDiffList.java",
  "functionName": "changedBetweenSnapshots",
  "functionId": "changedBetweenSnapshots___from-Snapshot__to-Snapshot",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/AbstractINodeDiffList.java",
  "functionStartLine": 248,
  "functionEndLine": 274,
  "numCommitsSeen": 84,
  "timeTaken": 3884,
  "changeHistory": [
    "346caa209571dedf1331b2658d5702b45dd40bfe",
    "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252",
    "bcba844d1144cc334e2babbc34c9d42eac1c203a",
    "8a83bb7ad6177f473c20c4cc9c0f46746224332c",
    "3a812e9f3ae66cfa525faceb5af9085a4cc37232",
    "d9e2514d21c2ae356ee7fe8d4a857748b5defa4c"
  ],
  "changeHistoryShort": {
    "346caa209571dedf1331b2658d5702b45dd40bfe": "Ybodychange",
    "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252": "Ybodychange",
    "bcba844d1144cc334e2babbc34c9d42eac1c203a": "Ybodychange",
    "8a83bb7ad6177f473c20c4cc9c0f46746224332c": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "3a812e9f3ae66cfa525faceb5af9085a4cc37232": "Ymultichange(Yparameterchange,Ybodychange)",
    "d9e2514d21c2ae356ee7fe8d4a857748b5defa4c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "346caa209571dedf1331b2658d5702b45dd40bfe": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13227. Add a method to calculate cumulative diff over multiple snapshots in DirectoryDiffList.  Contributed by Shashikant Banerjee\n",
      "commitDate": "06/03/18 1:35 PM",
      "commitName": "346caa209571dedf1331b2658d5702b45dd40bfe",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "02/03/18 5:47 PM",
      "commitNameOld": "ba82e5c488ca0081534c1e40810b3f9e7da9eaad",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 3.82,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,27 @@\n   final int[] changedBetweenSnapshots(Snapshot from, Snapshot to) {\n     if (diffs \u003d\u003d null) {\n       return null;\n     }\n     Snapshot earlier \u003d from;\n     Snapshot later \u003d to;\n     if (Snapshot.ID_COMPARATOR.compare(from, to) \u003e 0) {\n       earlier \u003d to;\n       later \u003d from;\n     }\n \n     final int size \u003d diffs.size();\n-    int earlierDiffIndex \u003d diffs.binarySearch(earlier.getId());\n+    int earlierDiffIndex \u003d getDiffIndexById(earlier.getId());\n     int laterDiffIndex \u003d later \u003d\u003d null ? size\n-        : diffs.binarySearch(later.getId());\n-    if (-earlierDiffIndex - 1 \u003d\u003d size) {\n+        : getDiffIndexById(later.getId());\n+    if (earlierDiffIndex \u003d\u003d size) {\n       // if the earlierSnapshot is after the latest SnapshotDiff stored in\n       // diffs, no modification happened after the earlierSnapshot\n       return null;\n     }\n     if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n       // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n       // before it, no modification happened before the laterSnapshot\n       return null;\n     }\n-    earlierDiffIndex \u003d earlierDiffIndex \u003c 0 ? (-earlierDiffIndex - 1)\n-        : earlierDiffIndex;\n-    laterDiffIndex \u003d laterDiffIndex \u003c 0 ? (-laterDiffIndex - 1)\n-        : laterDiffIndex;\n     return new int[]{earlierDiffIndex, laterDiffIndex};\n   }\n\\ No newline at end of file\n",
      "actualSource": "  final int[] changedBetweenSnapshots(Snapshot from, Snapshot to) {\n    if (diffs \u003d\u003d null) {\n      return null;\n    }\n    Snapshot earlier \u003d from;\n    Snapshot later \u003d to;\n    if (Snapshot.ID_COMPARATOR.compare(from, to) \u003e 0) {\n      earlier \u003d to;\n      later \u003d from;\n    }\n\n    final int size \u003d diffs.size();\n    int earlierDiffIndex \u003d getDiffIndexById(earlier.getId());\n    int laterDiffIndex \u003d later \u003d\u003d null ? size\n        : getDiffIndexById(later.getId());\n    if (earlierDiffIndex \u003d\u003d size) {\n      // if the earlierSnapshot is after the latest SnapshotDiff stored in\n      // diffs, no modification happened after the earlierSnapshot\n      return null;\n    }\n    if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n      // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n      // before it, no modification happened before the laterSnapshot\n      return null;\n    }\n    return new int[]{earlierDiffIndex, laterDiffIndex};\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/AbstractINodeDiffList.java",
      "extendedDetails": {}
    },
    "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13142. Define and Implement a DiifList Interface to store and manage SnapshotDiffs.  Contributed by Shashikant Banerjee\n",
      "commitDate": "15/02/18 3:33 AM",
      "commitName": "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "30/06/17 10:28 AM",
      "commitNameOld": "bcba844d1144cc334e2babbc34c9d42eac1c203a",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 229.75,
      "commitsBetweenForRepo": 1650,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   final int[] changedBetweenSnapshots(Snapshot from, Snapshot to) {\n     if (diffs \u003d\u003d null) {\n       return null;\n     }\n     Snapshot earlier \u003d from;\n     Snapshot later \u003d to;\n     if (Snapshot.ID_COMPARATOR.compare(from, to) \u003e 0) {\n       earlier \u003d to;\n       later \u003d from;\n     }\n \n     final int size \u003d diffs.size();\n-    int earlierDiffIndex \u003d Collections.binarySearch(diffs, earlier.getId());\n-    int laterDiffIndex \u003d later \u003d\u003d null ? size : Collections\n-        .binarySearch(diffs, later.getId());\n+    int earlierDiffIndex \u003d diffs.binarySearch(earlier.getId());\n+    int laterDiffIndex \u003d later \u003d\u003d null ? size\n+        : diffs.binarySearch(later.getId());\n     if (-earlierDiffIndex - 1 \u003d\u003d size) {\n       // if the earlierSnapshot is after the latest SnapshotDiff stored in\n       // diffs, no modification happened after the earlierSnapshot\n       return null;\n     }\n     if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n       // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n       // before it, no modification happened before the laterSnapshot\n       return null;\n     }\n     earlierDiffIndex \u003d earlierDiffIndex \u003c 0 ? (-earlierDiffIndex - 1)\n         : earlierDiffIndex;\n     laterDiffIndex \u003d laterDiffIndex \u003c 0 ? (-laterDiffIndex - 1)\n         : laterDiffIndex;\n     return new int[]{earlierDiffIndex, laterDiffIndex};\n   }\n\\ No newline at end of file\n",
      "actualSource": "  final int[] changedBetweenSnapshots(Snapshot from, Snapshot to) {\n    if (diffs \u003d\u003d null) {\n      return null;\n    }\n    Snapshot earlier \u003d from;\n    Snapshot later \u003d to;\n    if (Snapshot.ID_COMPARATOR.compare(from, to) \u003e 0) {\n      earlier \u003d to;\n      later \u003d from;\n    }\n\n    final int size \u003d diffs.size();\n    int earlierDiffIndex \u003d diffs.binarySearch(earlier.getId());\n    int laterDiffIndex \u003d later \u003d\u003d null ? size\n        : diffs.binarySearch(later.getId());\n    if (-earlierDiffIndex - 1 \u003d\u003d size) {\n      // if the earlierSnapshot is after the latest SnapshotDiff stored in\n      // diffs, no modification happened after the earlierSnapshot\n      return null;\n    }\n    if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n      // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n      // before it, no modification happened before the laterSnapshot\n      return null;\n    }\n    earlierDiffIndex \u003d earlierDiffIndex \u003c 0 ? (-earlierDiffIndex - 1)\n        : earlierDiffIndex;\n    laterDiffIndex \u003d laterDiffIndex \u003c 0 ? (-laterDiffIndex - 1)\n        : laterDiffIndex;\n    return new int[]{earlierDiffIndex, laterDiffIndex};\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/AbstractINodeDiffList.java",
      "extendedDetails": {}
    },
    "bcba844d1144cc334e2babbc34c9d42eac1c203a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12042. Lazy initialize AbstractINodeDiffList#diffs for snapshots to reduce memory consumption. Contributed by Misha Dmitriev.\n",
      "commitDate": "30/06/17 10:28 AM",
      "commitName": "bcba844d1144cc334e2babbc34c9d42eac1c203a",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "13/05/15 9:50 PM",
      "commitNameOld": "b2c85db86c9a62b0a03ee87547265077f664970a",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 778.53,
      "commitsBetweenForRepo": 5262,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,31 @@\n   final int[] changedBetweenSnapshots(Snapshot from, Snapshot to) {\n+    if (diffs \u003d\u003d null) {\n+      return null;\n+    }\n     Snapshot earlier \u003d from;\n     Snapshot later \u003d to;\n     if (Snapshot.ID_COMPARATOR.compare(from, to) \u003e 0) {\n       earlier \u003d to;\n       later \u003d from;\n     }\n \n     final int size \u003d diffs.size();\n     int earlierDiffIndex \u003d Collections.binarySearch(diffs, earlier.getId());\n     int laterDiffIndex \u003d later \u003d\u003d null ? size : Collections\n         .binarySearch(diffs, later.getId());\n     if (-earlierDiffIndex - 1 \u003d\u003d size) {\n       // if the earlierSnapshot is after the latest SnapshotDiff stored in\n       // diffs, no modification happened after the earlierSnapshot\n       return null;\n     }\n     if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n       // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n       // before it, no modification happened before the laterSnapshot\n       return null;\n     }\n     earlierDiffIndex \u003d earlierDiffIndex \u003c 0 ? (-earlierDiffIndex - 1)\n         : earlierDiffIndex;\n     laterDiffIndex \u003d laterDiffIndex \u003c 0 ? (-laterDiffIndex - 1)\n         : laterDiffIndex;\n     return new int[]{earlierDiffIndex, laterDiffIndex};\n   }\n\\ No newline at end of file\n",
      "actualSource": "  final int[] changedBetweenSnapshots(Snapshot from, Snapshot to) {\n    if (diffs \u003d\u003d null) {\n      return null;\n    }\n    Snapshot earlier \u003d from;\n    Snapshot later \u003d to;\n    if (Snapshot.ID_COMPARATOR.compare(from, to) \u003e 0) {\n      earlier \u003d to;\n      later \u003d from;\n    }\n\n    final int size \u003d diffs.size();\n    int earlierDiffIndex \u003d Collections.binarySearch(diffs, earlier.getId());\n    int laterDiffIndex \u003d later \u003d\u003d null ? size : Collections\n        .binarySearch(diffs, later.getId());\n    if (-earlierDiffIndex - 1 \u003d\u003d size) {\n      // if the earlierSnapshot is after the latest SnapshotDiff stored in\n      // diffs, no modification happened after the earlierSnapshot\n      return null;\n    }\n    if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n      // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n      // before it, no modification happened before the laterSnapshot\n      return null;\n    }\n    earlierDiffIndex \u003d earlierDiffIndex \u003c 0 ? (-earlierDiffIndex - 1)\n        : earlierDiffIndex;\n    laterDiffIndex \u003d laterDiffIndex \u003c 0 ? (-laterDiffIndex - 1)\n        : laterDiffIndex;\n    return new int[]{earlierDiffIndex, laterDiffIndex};\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/AbstractINodeDiffList.java",
      "extendedDetails": {}
    },
    "8a83bb7ad6177f473c20c4cc9c0f46746224332c": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-4667. Capture renamed files/directories in snapshot diff report. Contributed by Jing Zhao and Binglin Chang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1604488 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/06/14 3:59 PM",
      "commitName": "8a83bb7ad6177f473c20c4cc9c0f46746224332c",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4667. Capture renamed files/directories in snapshot diff report. Contributed by Jing Zhao and Binglin Chang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1604488 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/06/14 3:59 PM",
          "commitName": "8a83bb7ad6177f473c20c4cc9c0f46746224332c",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "07/01/14 12:52 PM",
          "commitNameOld": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 165.09,
          "commitsBetweenForRepo": 1171,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,28 @@\n-  final boolean changedBetweenSnapshots(Snapshot earlier, Snapshot later) {\n+  final int[] changedBetweenSnapshots(Snapshot from, Snapshot to) {\n+    Snapshot earlier \u003d from;\n+    Snapshot later \u003d to;\n+    if (Snapshot.ID_COMPARATOR.compare(from, to) \u003e 0) {\n+      earlier \u003d to;\n+      later \u003d from;\n+    }\n+\n     final int size \u003d diffs.size();\n     int earlierDiffIndex \u003d Collections.binarySearch(diffs, earlier.getId());\n+    int laterDiffIndex \u003d later \u003d\u003d null ? size : Collections\n+        .binarySearch(diffs, later.getId());\n     if (-earlierDiffIndex - 1 \u003d\u003d size) {\n       // if the earlierSnapshot is after the latest SnapshotDiff stored in\n       // diffs, no modification happened after the earlierSnapshot\n-      return false;\n+      return null;\n     }\n-    if (later !\u003d null) {\n-      int laterDiffIndex \u003d Collections.binarySearch(diffs, later.getId());\n-      if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n-        // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n-        // before it, no modification happened before the laterSnapshot\n-        return false;\n-      }\n+    if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n+      // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n+      // before it, no modification happened before the laterSnapshot\n+      return null;\n     }\n-    return true;\n+    earlierDiffIndex \u003d earlierDiffIndex \u003c 0 ? (-earlierDiffIndex - 1)\n+        : earlierDiffIndex;\n+    laterDiffIndex \u003d laterDiffIndex \u003c 0 ? (-laterDiffIndex - 1)\n+        : laterDiffIndex;\n+    return new int[]{earlierDiffIndex, laterDiffIndex};\n   }\n\\ No newline at end of file\n",
          "actualSource": "  final int[] changedBetweenSnapshots(Snapshot from, Snapshot to) {\n    Snapshot earlier \u003d from;\n    Snapshot later \u003d to;\n    if (Snapshot.ID_COMPARATOR.compare(from, to) \u003e 0) {\n      earlier \u003d to;\n      later \u003d from;\n    }\n\n    final int size \u003d diffs.size();\n    int earlierDiffIndex \u003d Collections.binarySearch(diffs, earlier.getId());\n    int laterDiffIndex \u003d later \u003d\u003d null ? size : Collections\n        .binarySearch(diffs, later.getId());\n    if (-earlierDiffIndex - 1 \u003d\u003d size) {\n      // if the earlierSnapshot is after the latest SnapshotDiff stored in\n      // diffs, no modification happened after the earlierSnapshot\n      return null;\n    }\n    if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n      // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n      // before it, no modification happened before the laterSnapshot\n      return null;\n    }\n    earlierDiffIndex \u003d earlierDiffIndex \u003c 0 ? (-earlierDiffIndex - 1)\n        : earlierDiffIndex;\n    laterDiffIndex \u003d laterDiffIndex \u003c 0 ? (-laterDiffIndex - 1)\n        : laterDiffIndex;\n    return new int[]{earlierDiffIndex, laterDiffIndex};\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/AbstractINodeDiffList.java",
          "extendedDetails": {
            "oldValue": "[earlier-Snapshot, later-Snapshot]",
            "newValue": "[from-Snapshot, to-Snapshot]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-4667. Capture renamed files/directories in snapshot diff report. Contributed by Jing Zhao and Binglin Chang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1604488 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/06/14 3:59 PM",
          "commitName": "8a83bb7ad6177f473c20c4cc9c0f46746224332c",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "07/01/14 12:52 PM",
          "commitNameOld": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 165.09,
          "commitsBetweenForRepo": 1171,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,28 @@\n-  final boolean changedBetweenSnapshots(Snapshot earlier, Snapshot later) {\n+  final int[] changedBetweenSnapshots(Snapshot from, Snapshot to) {\n+    Snapshot earlier \u003d from;\n+    Snapshot later \u003d to;\n+    if (Snapshot.ID_COMPARATOR.compare(from, to) \u003e 0) {\n+      earlier \u003d to;\n+      later \u003d from;\n+    }\n+\n     final int size \u003d diffs.size();\n     int earlierDiffIndex \u003d Collections.binarySearch(diffs, earlier.getId());\n+    int laterDiffIndex \u003d later \u003d\u003d null ? size : Collections\n+        .binarySearch(diffs, later.getId());\n     if (-earlierDiffIndex - 1 \u003d\u003d size) {\n       // if the earlierSnapshot is after the latest SnapshotDiff stored in\n       // diffs, no modification happened after the earlierSnapshot\n-      return false;\n+      return null;\n     }\n-    if (later !\u003d null) {\n-      int laterDiffIndex \u003d Collections.binarySearch(diffs, later.getId());\n-      if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n-        // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n-        // before it, no modification happened before the laterSnapshot\n-        return false;\n-      }\n+    if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n+      // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n+      // before it, no modification happened before the laterSnapshot\n+      return null;\n     }\n-    return true;\n+    earlierDiffIndex \u003d earlierDiffIndex \u003c 0 ? (-earlierDiffIndex - 1)\n+        : earlierDiffIndex;\n+    laterDiffIndex \u003d laterDiffIndex \u003c 0 ? (-laterDiffIndex - 1)\n+        : laterDiffIndex;\n+    return new int[]{earlierDiffIndex, laterDiffIndex};\n   }\n\\ No newline at end of file\n",
          "actualSource": "  final int[] changedBetweenSnapshots(Snapshot from, Snapshot to) {\n    Snapshot earlier \u003d from;\n    Snapshot later \u003d to;\n    if (Snapshot.ID_COMPARATOR.compare(from, to) \u003e 0) {\n      earlier \u003d to;\n      later \u003d from;\n    }\n\n    final int size \u003d diffs.size();\n    int earlierDiffIndex \u003d Collections.binarySearch(diffs, earlier.getId());\n    int laterDiffIndex \u003d later \u003d\u003d null ? size : Collections\n        .binarySearch(diffs, later.getId());\n    if (-earlierDiffIndex - 1 \u003d\u003d size) {\n      // if the earlierSnapshot is after the latest SnapshotDiff stored in\n      // diffs, no modification happened after the earlierSnapshot\n      return null;\n    }\n    if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n      // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n      // before it, no modification happened before the laterSnapshot\n      return null;\n    }\n    earlierDiffIndex \u003d earlierDiffIndex \u003c 0 ? (-earlierDiffIndex - 1)\n        : earlierDiffIndex;\n    laterDiffIndex \u003d laterDiffIndex \u003c 0 ? (-laterDiffIndex - 1)\n        : laterDiffIndex;\n    return new int[]{earlierDiffIndex, laterDiffIndex};\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/AbstractINodeDiffList.java",
          "extendedDetails": {
            "oldValue": "boolean",
            "newValue": "int[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4667. Capture renamed files/directories in snapshot diff report. Contributed by Jing Zhao and Binglin Chang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1604488 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/06/14 3:59 PM",
          "commitName": "8a83bb7ad6177f473c20c4cc9c0f46746224332c",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "07/01/14 12:52 PM",
          "commitNameOld": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 165.09,
          "commitsBetweenForRepo": 1171,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,28 @@\n-  final boolean changedBetweenSnapshots(Snapshot earlier, Snapshot later) {\n+  final int[] changedBetweenSnapshots(Snapshot from, Snapshot to) {\n+    Snapshot earlier \u003d from;\n+    Snapshot later \u003d to;\n+    if (Snapshot.ID_COMPARATOR.compare(from, to) \u003e 0) {\n+      earlier \u003d to;\n+      later \u003d from;\n+    }\n+\n     final int size \u003d diffs.size();\n     int earlierDiffIndex \u003d Collections.binarySearch(diffs, earlier.getId());\n+    int laterDiffIndex \u003d later \u003d\u003d null ? size : Collections\n+        .binarySearch(diffs, later.getId());\n     if (-earlierDiffIndex - 1 \u003d\u003d size) {\n       // if the earlierSnapshot is after the latest SnapshotDiff stored in\n       // diffs, no modification happened after the earlierSnapshot\n-      return false;\n+      return null;\n     }\n-    if (later !\u003d null) {\n-      int laterDiffIndex \u003d Collections.binarySearch(diffs, later.getId());\n-      if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n-        // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n-        // before it, no modification happened before the laterSnapshot\n-        return false;\n-      }\n+    if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n+      // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n+      // before it, no modification happened before the laterSnapshot\n+      return null;\n     }\n-    return true;\n+    earlierDiffIndex \u003d earlierDiffIndex \u003c 0 ? (-earlierDiffIndex - 1)\n+        : earlierDiffIndex;\n+    laterDiffIndex \u003d laterDiffIndex \u003c 0 ? (-laterDiffIndex - 1)\n+        : laterDiffIndex;\n+    return new int[]{earlierDiffIndex, laterDiffIndex};\n   }\n\\ No newline at end of file\n",
          "actualSource": "  final int[] changedBetweenSnapshots(Snapshot from, Snapshot to) {\n    Snapshot earlier \u003d from;\n    Snapshot later \u003d to;\n    if (Snapshot.ID_COMPARATOR.compare(from, to) \u003e 0) {\n      earlier \u003d to;\n      later \u003d from;\n    }\n\n    final int size \u003d diffs.size();\n    int earlierDiffIndex \u003d Collections.binarySearch(diffs, earlier.getId());\n    int laterDiffIndex \u003d later \u003d\u003d null ? size : Collections\n        .binarySearch(diffs, later.getId());\n    if (-earlierDiffIndex - 1 \u003d\u003d size) {\n      // if the earlierSnapshot is after the latest SnapshotDiff stored in\n      // diffs, no modification happened after the earlierSnapshot\n      return null;\n    }\n    if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n      // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n      // before it, no modification happened before the laterSnapshot\n      return null;\n    }\n    earlierDiffIndex \u003d earlierDiffIndex \u003c 0 ? (-earlierDiffIndex - 1)\n        : earlierDiffIndex;\n    laterDiffIndex \u003d laterDiffIndex \u003c 0 ? (-laterDiffIndex - 1)\n        : laterDiffIndex;\n    return new int[]{earlierDiffIndex, laterDiffIndex};\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/AbstractINodeDiffList.java",
          "extendedDetails": {}
        }
      ]
    },
    "3a812e9f3ae66cfa525faceb5af9085a4cc37232": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-4738. Changes AbstractINodeDiff to implement Comparable\u003cInteger\u003e, and fix javadoc and other warnings.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1471228 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/04/13 7:11 PM",
      "commitName": "3a812e9f3ae66cfa525faceb5af9085a4cc37232",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4738. Changes AbstractINodeDiff to implement Comparable\u003cInteger\u003e, and fix javadoc and other warnings.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1471228 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/04/13 7:11 PM",
          "commitName": "3a812e9f3ae66cfa525faceb5af9085a4cc37232",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "22/04/13 5:11 PM",
          "commitNameOld": "10a2d82b45353ed3dbaa19d87c7e887c0afa2c57",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 1.08,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,18 @@\n-  final boolean changedBetweenSnapshots(Snapshot earlierSnapshot,\n-      Snapshot laterSnapshot) {\n+  final boolean changedBetweenSnapshots(Snapshot earlier, Snapshot later) {\n     final int size \u003d diffs.size();\n-    int earlierDiffIndex \u003d Collections.binarySearch(diffs, earlierSnapshot);\n+    int earlierDiffIndex \u003d Collections.binarySearch(diffs, earlier.getId());\n     if (-earlierDiffIndex - 1 \u003d\u003d size) {\n       // if the earlierSnapshot is after the latest SnapshotDiff stored in\n       // diffs, no modification happened after the earlierSnapshot\n       return false;\n     }\n-    if (laterSnapshot !\u003d null) {\n-      int laterDiffIndex \u003d Collections.binarySearch(diffs, laterSnapshot);\n+    if (later !\u003d null) {\n+      int laterDiffIndex \u003d Collections.binarySearch(diffs, later.getId());\n       if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n         // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n         // before it, no modification happened before the laterSnapshot\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  final boolean changedBetweenSnapshots(Snapshot earlier, Snapshot later) {\n    final int size \u003d diffs.size();\n    int earlierDiffIndex \u003d Collections.binarySearch(diffs, earlier.getId());\n    if (-earlierDiffIndex - 1 \u003d\u003d size) {\n      // if the earlierSnapshot is after the latest SnapshotDiff stored in\n      // diffs, no modification happened after the earlierSnapshot\n      return false;\n    }\n    if (later !\u003d null) {\n      int laterDiffIndex \u003d Collections.binarySearch(diffs, later.getId());\n      if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n        // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n        // before it, no modification happened before the laterSnapshot\n        return false;\n      }\n    }\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/AbstractINodeDiffList.java",
          "extendedDetails": {
            "oldValue": "[earlierSnapshot-Snapshot, laterSnapshot-Snapshot]",
            "newValue": "[earlier-Snapshot, later-Snapshot]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4738. Changes AbstractINodeDiff to implement Comparable\u003cInteger\u003e, and fix javadoc and other warnings.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1471228 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/04/13 7:11 PM",
          "commitName": "3a812e9f3ae66cfa525faceb5af9085a4cc37232",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "22/04/13 5:11 PM",
          "commitNameOld": "10a2d82b45353ed3dbaa19d87c7e887c0afa2c57",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 1.08,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,18 @@\n-  final boolean changedBetweenSnapshots(Snapshot earlierSnapshot,\n-      Snapshot laterSnapshot) {\n+  final boolean changedBetweenSnapshots(Snapshot earlier, Snapshot later) {\n     final int size \u003d diffs.size();\n-    int earlierDiffIndex \u003d Collections.binarySearch(diffs, earlierSnapshot);\n+    int earlierDiffIndex \u003d Collections.binarySearch(diffs, earlier.getId());\n     if (-earlierDiffIndex - 1 \u003d\u003d size) {\n       // if the earlierSnapshot is after the latest SnapshotDiff stored in\n       // diffs, no modification happened after the earlierSnapshot\n       return false;\n     }\n-    if (laterSnapshot !\u003d null) {\n-      int laterDiffIndex \u003d Collections.binarySearch(diffs, laterSnapshot);\n+    if (later !\u003d null) {\n+      int laterDiffIndex \u003d Collections.binarySearch(diffs, later.getId());\n       if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n         // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n         // before it, no modification happened before the laterSnapshot\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  final boolean changedBetweenSnapshots(Snapshot earlier, Snapshot later) {\n    final int size \u003d diffs.size();\n    int earlierDiffIndex \u003d Collections.binarySearch(diffs, earlier.getId());\n    if (-earlierDiffIndex - 1 \u003d\u003d size) {\n      // if the earlierSnapshot is after the latest SnapshotDiff stored in\n      // diffs, no modification happened after the earlierSnapshot\n      return false;\n    }\n    if (later !\u003d null) {\n      int laterDiffIndex \u003d Collections.binarySearch(diffs, later.getId());\n      if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n        // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n        // before it, no modification happened before the laterSnapshot\n        return false;\n      }\n    }\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/AbstractINodeDiffList.java",
          "extendedDetails": {}
        }
      ]
    },
    "d9e2514d21c2ae356ee7fe8d4a857748b5defa4c": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4487. Fix snapshot diff report for HDFS-4446.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1446385 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/02/13 3:07 PM",
      "commitName": "d9e2514d21c2ae356ee7fe8d4a857748b5defa4c",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,19 @@\n+  final boolean changedBetweenSnapshots(Snapshot earlierSnapshot,\n+      Snapshot laterSnapshot) {\n+    final int size \u003d diffs.size();\n+    int earlierDiffIndex \u003d Collections.binarySearch(diffs, earlierSnapshot);\n+    if (-earlierDiffIndex - 1 \u003d\u003d size) {\n+      // if the earlierSnapshot is after the latest SnapshotDiff stored in\n+      // diffs, no modification happened after the earlierSnapshot\n+      return false;\n+    }\n+    if (laterSnapshot !\u003d null) {\n+      int laterDiffIndex \u003d Collections.binarySearch(diffs, laterSnapshot);\n+      if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n+        // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n+        // before it, no modification happened before the laterSnapshot\n+        return false;\n+      }\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  final boolean changedBetweenSnapshots(Snapshot earlierSnapshot,\n      Snapshot laterSnapshot) {\n    final int size \u003d diffs.size();\n    int earlierDiffIndex \u003d Collections.binarySearch(diffs, earlierSnapshot);\n    if (-earlierDiffIndex - 1 \u003d\u003d size) {\n      // if the earlierSnapshot is after the latest SnapshotDiff stored in\n      // diffs, no modification happened after the earlierSnapshot\n      return false;\n    }\n    if (laterSnapshot !\u003d null) {\n      int laterDiffIndex \u003d Collections.binarySearch(diffs, laterSnapshot);\n      if (laterDiffIndex \u003d\u003d -1 || laterDiffIndex \u003d\u003d 0) {\n        // if the laterSnapshot is the earliest SnapshotDiff stored in diffs, or\n        // before it, no modification happened before the laterSnapshot\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/AbstractINodeDiffList.java"
    }
  }
}