{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalResourcesTrackerImpl.java",
  "functionName": "decrementFileCountForLocalCacheDirectory",
  "functionId": "decrementFileCountForLocalCacheDirectory___req-LocalResourceRequest__rsrc-LocalizedResource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTrackerImpl.java",
  "functionStartLine": 294,
  "functionEndLine": 326,
  "numCommitsSeen": 16,
  "timeTaken": 1406,
  "changeHistory": [
    "e67e3ff05db26437b1d7c6d3dd958362fb8425db"
  ],
  "changeHistoryShort": {
    "e67e3ff05db26437b1d7c6d3dd958362fb8425db": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e67e3ff05db26437b1d7c6d3dd958362fb8425db": {
      "type": "Yintroduced",
      "commitMessage": "YARN-467. Modify public distributed cache to localize files such that no local directory hits unix file count limits and thus prevent job failures. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1463823 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/13 10:00 PM",
      "commitName": "e67e3ff05db26437b1d7c6d3dd958362fb8425db",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,33 @@\n+  private void decrementFileCountForLocalCacheDirectory(LocalResourceRequest req,\n+      LocalizedResource rsrc) {\n+    if ( useLocalCacheDirectoryManager) {\n+      Path rsrcPath \u003d null;\n+      if (inProgressLocalResourcesMap.containsKey(req)) {\n+        // This happens when localization of a resource fails.\n+        rsrcPath \u003d inProgressLocalResourcesMap.remove(req);\n+      } else if (rsrc !\u003d null \u0026\u0026 rsrc.getLocalPath() !\u003d null) {\n+        rsrcPath \u003d rsrc.getLocalPath().getParent().getParent();\n+      }\n+      if (rsrcPath !\u003d null) {\n+        Path parentPath \u003d new Path(rsrcPath.toUri().getRawPath());\n+        while (!directoryManagers.containsKey(parentPath)) {\n+          parentPath \u003d parentPath.getParent();\n+          if ( parentPath \u003d\u003d null) {\n+            return;\n+          }\n+        }\n+        if ( parentPath !\u003d null) {\n+          String parentDir \u003d parentPath.toUri().getRawPath().toString();\n+          LocalCacheDirectoryManager dir \u003d directoryManagers.get(parentPath);\n+          String rsrcDir \u003d rsrcPath.toUri().getRawPath(); \n+          if (rsrcDir.equals(parentDir)) {\n+            dir.decrementFileCountForPath(\"\");\n+          } else {\n+            dir.decrementFileCountForPath(\n+              rsrcDir.substring(\n+              parentDir.length() + 1));\n+          }\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void decrementFileCountForLocalCacheDirectory(LocalResourceRequest req,\n      LocalizedResource rsrc) {\n    if ( useLocalCacheDirectoryManager) {\n      Path rsrcPath \u003d null;\n      if (inProgressLocalResourcesMap.containsKey(req)) {\n        // This happens when localization of a resource fails.\n        rsrcPath \u003d inProgressLocalResourcesMap.remove(req);\n      } else if (rsrc !\u003d null \u0026\u0026 rsrc.getLocalPath() !\u003d null) {\n        rsrcPath \u003d rsrc.getLocalPath().getParent().getParent();\n      }\n      if (rsrcPath !\u003d null) {\n        Path parentPath \u003d new Path(rsrcPath.toUri().getRawPath());\n        while (!directoryManagers.containsKey(parentPath)) {\n          parentPath \u003d parentPath.getParent();\n          if ( parentPath \u003d\u003d null) {\n            return;\n          }\n        }\n        if ( parentPath !\u003d null) {\n          String parentDir \u003d parentPath.toUri().getRawPath().toString();\n          LocalCacheDirectoryManager dir \u003d directoryManagers.get(parentPath);\n          String rsrcDir \u003d rsrcPath.toUri().getRawPath(); \n          if (rsrcDir.equals(parentDir)) {\n            dir.decrementFileCountForPath(\"\");\n          } else {\n            dir.decrementFileCountForPath(\n              rsrcDir.substring(\n              parentDir.length() + 1));\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTrackerImpl.java"
    }
  }
}