{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedFileSystem.java",
  "functionName": "getTrashRoot",
  "functionId": "getTrashRoot___path-Path",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
  "functionStartLine": 3250,
  "functionEndLine": 3275,
  "numCommitsSeen": 96,
  "timeTaken": 6646,
  "changeHistory": [
    "37d65822235fe8285d10232589aba39ededd3be1",
    "2338d25dc7150d75fbda84cc95422380b5622224",
    "25f5d9ad5ee5ead349d259a99b49541a70b1604d",
    "5078df7be317e635615c05c5da3285798993ff1f",
    "18432130a7f580f206adf023507678c534487f2e",
    "0007360c3344b3485fa17de0fd2015a628de947c",
    "4abb2fa687a80d2b76f2751dd31513822601b235",
    "647a35e996d33d8df898891760305222446b68f5",
    "0fb14aaced7afdbbb72e59316c186ebf6ec2d091",
    "dbe49c1bd6f62f04cf4290795b81a66fbd41d44c",
    "cbc7b6bf97a80c39d4bbb3005e42dacae6726baf"
  ],
  "changeHistoryShort": {
    "37d65822235fe8285d10232589aba39ededd3be1": "Ybodychange",
    "2338d25dc7150d75fbda84cc95422380b5622224": "Ybodychange",
    "25f5d9ad5ee5ead349d259a99b49541a70b1604d": "Ybodychange",
    "5078df7be317e635615c05c5da3285798993ff1f": "Ybodychange",
    "18432130a7f580f206adf023507678c534487f2e": "Ybodychange",
    "0007360c3344b3485fa17de0fd2015a628de947c": "Ybodychange",
    "4abb2fa687a80d2b76f2751dd31513822601b235": "Ybodychange",
    "647a35e996d33d8df898891760305222446b68f5": "Ybodychange",
    "0fb14aaced7afdbbb72e59316c186ebf6ec2d091": "Ymultichange(Yexceptionschange,Ybodychange)",
    "dbe49c1bd6f62f04cf4290795b81a66fbd41d44c": "Ybodychange",
    "cbc7b6bf97a80c39d4bbb3005e42dacae6726baf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "37d65822235fe8285d10232589aba39ededd3be1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15266. Add missing DFSOps Statistics in WebHDFS. Contributed by Ayush Saxena.\n",
      "commitDate": "17/04/20 1:02 AM",
      "commitName": "37d65822235fe8285d10232589aba39ededd3be1",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "09/03/20 7:51 AM",
      "commitNameOld": "c734d69a55693143d0aba2f7f5a793b11c8c50a5",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 38.72,
      "commitsBetweenForRepo": 124,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,26 @@\n   public Path getTrashRoot(Path path) {\n+    statistics.incrementReadOps(1);\n+    storageStatistics.incrementOpCounter(OpType.GET_TRASH_ROOT);\n     try {\n       if ((path \u003d\u003d null) || !dfs.isHDFSEncryptionEnabled()) {\n         return super.getTrashRoot(path);\n       }\n     } catch (IOException ioe) {\n       DFSClient.LOG.warn(\"Exception while checking whether encryption zone is \"\n           + \"supported\", ioe);\n     }\n \n     String parentSrc \u003d path.isRoot()?\n         path.toUri().getPath():path.getParent().toUri().getPath();\n     try {\n       EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n       if ((ez !\u003d null)) {\n         return this.makeQualified(\n             new Path(DFSUtilClient.getEZTrashRoot(ez, dfs.ugi)));\n       }\n     } catch (IOException e) {\n       DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n           \"path \" + parentSrc + \". \" + e.getMessage());\n     }\n     return super.getTrashRoot(path);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Path getTrashRoot(Path path) {\n    statistics.incrementReadOps(1);\n    storageStatistics.incrementOpCounter(OpType.GET_TRASH_ROOT);\n    try {\n      if ((path \u003d\u003d null) || !dfs.isHDFSEncryptionEnabled()) {\n        return super.getTrashRoot(path);\n      }\n    } catch (IOException ioe) {\n      DFSClient.LOG.warn(\"Exception while checking whether encryption zone is \"\n          + \"supported\", ioe);\n    }\n\n    String parentSrc \u003d path.isRoot()?\n        path.toUri().getPath():path.getParent().toUri().getPath();\n    try {\n      EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n      if ((ez !\u003d null)) {\n        return this.makeQualified(\n            new Path(DFSUtilClient.getEZTrashRoot(ez, dfs.ugi)));\n      }\n    } catch (IOException e) {\n      DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n          \"path \" + parentSrc + \". \" + e.getMessage());\n    }\n    return super.getTrashRoot(path);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "2338d25dc7150d75fbda84cc95422380b5622224": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15052. WebHDFS getTrashRoot leads to OOM due to FileSystem object creation. (#1758)\n\n\r\n",
      "commitDate": "20/02/20 6:56 PM",
      "commitName": "2338d25dc7150d75fbda84cc95422380b5622224",
      "commitAuthor": "Masatake Iwasaki",
      "commitDateOld": "18/02/20 6:50 PM",
      "commitNameOld": "ac4b556e2d44d3cd10b81c190ecee23e2dd66c10",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 2.0,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,24 @@\n   public Path getTrashRoot(Path path) {\n     try {\n       if ((path \u003d\u003d null) || !dfs.isHDFSEncryptionEnabled()) {\n         return super.getTrashRoot(path);\n       }\n     } catch (IOException ioe) {\n       DFSClient.LOG.warn(\"Exception while checking whether encryption zone is \"\n           + \"supported\", ioe);\n     }\n \n     String parentSrc \u003d path.isRoot()?\n         path.toUri().getPath():path.getParent().toUri().getPath();\n     try {\n       EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n       if ((ez !\u003d null)) {\n         return this.makeQualified(\n-            new Path(new Path(ez.getPath(), FileSystem.TRASH_PREFIX),\n-                dfs.ugi.getShortUserName()));\n+            new Path(DFSUtilClient.getEZTrashRoot(ez, dfs.ugi)));\n       }\n     } catch (IOException e) {\n       DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n           \"path \" + parentSrc + \". \" + e.getMessage());\n     }\n     return super.getTrashRoot(path);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Path getTrashRoot(Path path) {\n    try {\n      if ((path \u003d\u003d null) || !dfs.isHDFSEncryptionEnabled()) {\n        return super.getTrashRoot(path);\n      }\n    } catch (IOException ioe) {\n      DFSClient.LOG.warn(\"Exception while checking whether encryption zone is \"\n          + \"supported\", ioe);\n    }\n\n    String parentSrc \u003d path.isRoot()?\n        path.toUri().getPath():path.getParent().toUri().getPath();\n    try {\n      EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n      if ((ez !\u003d null)) {\n        return this.makeQualified(\n            new Path(DFSUtilClient.getEZTrashRoot(ez, dfs.ugi)));\n      }\n    } catch (IOException e) {\n      DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n          \"path \" + parentSrc + \". \" + e.getMessage());\n    }\n    return super.getTrashRoot(path);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "25f5d9ad5ee5ead349d259a99b49541a70b1604d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11687. Add new public encryption APIs required by Hive. (lei)\n\nChange-Id: I4a23a00de63ad18022312ceb1f306a87d032d07c\n",
      "commitDate": "04/05/17 12:06 PM",
      "commitName": "25f5d9ad5ee5ead349d259a99b49541a70b1604d",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "04/05/17 11:39 AM",
      "commitNameOld": "c2a52ef9c29459ff9ef3e23b29e14912bfdb1405",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,25 @@\n   public Path getTrashRoot(Path path) {\n-    if ((path \u003d\u003d null) || !dfs.isHDFSEncryptionEnabled()) {\n-      return super.getTrashRoot(path);\n+    try {\n+      if ((path \u003d\u003d null) || !dfs.isHDFSEncryptionEnabled()) {\n+        return super.getTrashRoot(path);\n+      }\n+    } catch (IOException ioe) {\n+      DFSClient.LOG.warn(\"Exception while checking whether encryption zone is \"\n+          + \"supported\", ioe);\n     }\n \n     String parentSrc \u003d path.isRoot()?\n         path.toUri().getPath():path.getParent().toUri().getPath();\n     try {\n       EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n       if ((ez !\u003d null)) {\n         return this.makeQualified(\n             new Path(new Path(ez.getPath(), FileSystem.TRASH_PREFIX),\n                 dfs.ugi.getShortUserName()));\n       }\n     } catch (IOException e) {\n       DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n           \"path \" + parentSrc + \". \" + e.getMessage());\n     }\n     return super.getTrashRoot(path);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Path getTrashRoot(Path path) {\n    try {\n      if ((path \u003d\u003d null) || !dfs.isHDFSEncryptionEnabled()) {\n        return super.getTrashRoot(path);\n      }\n    } catch (IOException ioe) {\n      DFSClient.LOG.warn(\"Exception while checking whether encryption zone is \"\n          + \"supported\", ioe);\n    }\n\n    String parentSrc \u003d path.isRoot()?\n        path.toUri().getPath():path.getParent().toUri().getPath();\n    try {\n      EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n      if ((ez !\u003d null)) {\n        return this.makeQualified(\n            new Path(new Path(ez.getPath(), FileSystem.TRASH_PREFIX),\n                dfs.ugi.getShortUserName()));\n      }\n    } catch (IOException e) {\n      DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n          \"path \" + parentSrc + \". \" + e.getMessage());\n    }\n    return super.getTrashRoot(path);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "5078df7be317e635615c05c5da3285798993ff1f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11689. New exception thrown by DFSClient%isHDFSEncryptionEnabled broke hacky hive code. Contributed by Yongjun Zhang.\n",
      "commitDate": "21/04/17 1:36 PM",
      "commitName": "5078df7be317e635615c05c5da3285798993ff1f",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "18/04/17 9:11 PM",
      "commitNameOld": "8c81a16a1fa40d3a3796b1c3633328f1340883ca",
      "commitAuthorOld": "John Zhuge",
      "daysBetweenCommits": 2.68,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,20 @@\n   public Path getTrashRoot(Path path) {\n-    try {\n-      if ((path \u003d\u003d null) || !dfs.isHDFSEncryptionEnabled()) {\n-        return super.getTrashRoot(path);\n-      }\n-    } catch (IOException ioe) {\n-      DFSClient.LOG.warn(\"Exception while checking whether encryption zone is \"\n-          + \"supported\", ioe);\n+    if ((path \u003d\u003d null) || !dfs.isHDFSEncryptionEnabled()) {\n       return super.getTrashRoot(path);\n     }\n \n     String parentSrc \u003d path.isRoot()?\n         path.toUri().getPath():path.getParent().toUri().getPath();\n     try {\n       EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n       if ((ez !\u003d null)) {\n         return this.makeQualified(\n             new Path(new Path(ez.getPath(), FileSystem.TRASH_PREFIX),\n                 dfs.ugi.getShortUserName()));\n       }\n     } catch (IOException e) {\n       DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n           \"path \" + parentSrc + \". \" + e.getMessage());\n     }\n     return super.getTrashRoot(path);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Path getTrashRoot(Path path) {\n    if ((path \u003d\u003d null) || !dfs.isHDFSEncryptionEnabled()) {\n      return super.getTrashRoot(path);\n    }\n\n    String parentSrc \u003d path.isRoot()?\n        path.toUri().getPath():path.getParent().toUri().getPath();\n    try {\n      EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n      if ((ez !\u003d null)) {\n        return this.makeQualified(\n            new Path(new Path(ez.getPath(), FileSystem.TRASH_PREFIX),\n                dfs.ugi.getShortUserName()));\n      }\n    } catch (IOException e) {\n      DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n          \"path \" + parentSrc + \". \" + e.getMessage());\n    }\n    return super.getTrashRoot(path);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "18432130a7f580f206adf023507678c534487f2e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14104. Client should always ask namenode for kms provider path. Contributed by Rushabh S Shah.\n",
      "commitDate": "04/04/17 1:38 PM",
      "commitName": "18432130a7f580f206adf023507678c534487f2e",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "24/03/17 12:56 PM",
      "commitNameOld": "332a997e10cca88d9ab3aa8252102366b628eaec",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 11.03,
      "commitsBetweenForRepo": 64,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,26 @@\n   public Path getTrashRoot(Path path) {\n-    if ((path \u003d\u003d null) || !dfs.isHDFSEncryptionEnabled()) {\n+    try {\n+      if ((path \u003d\u003d null) || !dfs.isHDFSEncryptionEnabled()) {\n+        return super.getTrashRoot(path);\n+      }\n+    } catch (IOException ioe) {\n+      DFSClient.LOG.warn(\"Exception while checking whether encryption zone is \"\n+          + \"supported\", ioe);\n       return super.getTrashRoot(path);\n     }\n \n     String parentSrc \u003d path.isRoot()?\n         path.toUri().getPath():path.getParent().toUri().getPath();\n     try {\n       EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n       if ((ez !\u003d null)) {\n         return this.makeQualified(\n             new Path(new Path(ez.getPath(), FileSystem.TRASH_PREFIX),\n                 dfs.ugi.getShortUserName()));\n       }\n     } catch (IOException e) {\n       DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n           \"path \" + parentSrc + \". \" + e.getMessage());\n     }\n     return super.getTrashRoot(path);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Path getTrashRoot(Path path) {\n    try {\n      if ((path \u003d\u003d null) || !dfs.isHDFSEncryptionEnabled()) {\n        return super.getTrashRoot(path);\n      }\n    } catch (IOException ioe) {\n      DFSClient.LOG.warn(\"Exception while checking whether encryption zone is \"\n          + \"supported\", ioe);\n      return super.getTrashRoot(path);\n    }\n\n    String parentSrc \u003d path.isRoot()?\n        path.toUri().getPath():path.getParent().toUri().getPath();\n    try {\n      EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n      if ((ez !\u003d null)) {\n        return this.makeQualified(\n            new Path(new Path(ez.getPath(), FileSystem.TRASH_PREFIX),\n                dfs.ugi.getShortUserName()));\n      }\n    } catch (IOException e) {\n      DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n          \"path \" + parentSrc + \". \" + e.getMessage());\n    }\n    return super.getTrashRoot(path);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "0007360c3344b3485fa17de0fd2015a628de947c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10883. \u0027s behavior is not consistent in DFS after enabling EZ. Contributed by Yuanbo Liu.\n",
      "commitDate": "14/10/16 11:41 AM",
      "commitName": "0007360c3344b3485fa17de0fd2015a628de947c",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "03/10/16 4:01 PM",
      "commitNameOld": "853d65a157362661ccab10379c2d82e780382f83",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 10.82,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   public Path getTrashRoot(Path path) {\n-    if ((path \u003d\u003d null) || path.isRoot() || !dfs.isHDFSEncryptionEnabled()) {\n+    if ((path \u003d\u003d null) || !dfs.isHDFSEncryptionEnabled()) {\n       return super.getTrashRoot(path);\n     }\n \n-    String parentSrc \u003d path.getParent().toUri().getPath();\n+    String parentSrc \u003d path.isRoot()?\n+        path.toUri().getPath():path.getParent().toUri().getPath();\n     try {\n       EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n       if ((ez !\u003d null)) {\n         return this.makeQualified(\n             new Path(new Path(ez.getPath(), FileSystem.TRASH_PREFIX),\n                 dfs.ugi.getShortUserName()));\n       }\n     } catch (IOException e) {\n       DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n           \"path \" + parentSrc + \". \" + e.getMessage());\n     }\n     return super.getTrashRoot(path);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Path getTrashRoot(Path path) {\n    if ((path \u003d\u003d null) || !dfs.isHDFSEncryptionEnabled()) {\n      return super.getTrashRoot(path);\n    }\n\n    String parentSrc \u003d path.isRoot()?\n        path.toUri().getPath():path.getParent().toUri().getPath();\n    try {\n      EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n      if ((ez !\u003d null)) {\n        return this.makeQualified(\n            new Path(new Path(ez.getPath(), FileSystem.TRASH_PREFIX),\n                dfs.ugi.getShortUserName()));\n      }\n    } catch (IOException e) {\n      DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n          \"path \" + parentSrc + \". \" + e.getMessage());\n    }\n    return super.getTrashRoot(path);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "4abb2fa687a80d2b76f2751dd31513822601b235": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9881. DistributedFileSystem#getTrashRoot returns incorrect path for encryption zones.\n",
      "commitDate": "01/03/16 4:35 PM",
      "commitName": "4abb2fa687a80d2b76f2751dd31513822601b235",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "23/02/16 1:29 PM",
      "commitNameOld": "647a35e996d33d8df898891760305222446b68f5",
      "commitAuthorOld": "Zhe Zhang",
      "daysBetweenCommits": 7.13,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public Path getTrashRoot(Path path) {\n     if ((path \u003d\u003d null) || path.isRoot() || !dfs.isHDFSEncryptionEnabled()) {\n       return super.getTrashRoot(path);\n     }\n \n     String parentSrc \u003d path.getParent().toUri().getPath();\n     try {\n       EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n       if ((ez !\u003d null)) {\n         return this.makeQualified(\n-            new Path(ez.getPath(), FileSystem.TRASH_PREFIX +\n+            new Path(new Path(ez.getPath(), FileSystem.TRASH_PREFIX),\n                 dfs.ugi.getShortUserName()));\n       }\n     } catch (IOException e) {\n       DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n           \"path \" + parentSrc + \". \" + e.getMessage());\n     }\n     return super.getTrashRoot(path);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Path getTrashRoot(Path path) {\n    if ((path \u003d\u003d null) || path.isRoot() || !dfs.isHDFSEncryptionEnabled()) {\n      return super.getTrashRoot(path);\n    }\n\n    String parentSrc \u003d path.getParent().toUri().getPath();\n    try {\n      EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n      if ((ez !\u003d null)) {\n        return this.makeQualified(\n            new Path(new Path(ez.getPath(), FileSystem.TRASH_PREFIX),\n                dfs.ugi.getShortUserName()));\n      }\n    } catch (IOException e) {\n      DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n          \"path \" + parentSrc + \". \" + e.getMessage());\n    }\n    return super.getTrashRoot(path);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "647a35e996d33d8df898891760305222446b68f5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9844. Correct path creation in getTrashRoot to handle root dir.\n\nChange-Id: I5afe6c7176063892e3e632698c849bd9f4b92906\n",
      "commitDate": "23/02/16 1:29 PM",
      "commitName": "647a35e996d33d8df898891760305222446b68f5",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "17/02/16 1:30 PM",
      "commitNameOld": "0fb14aaced7afdbbb72e59316c186ebf6ec2d091",
      "commitAuthorOld": "Zhe Zhang",
      "daysBetweenCommits": 6.0,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public Path getTrashRoot(Path path) {\n     if ((path \u003d\u003d null) || path.isRoot() || !dfs.isHDFSEncryptionEnabled()) {\n       return super.getTrashRoot(path);\n     }\n \n     String parentSrc \u003d path.getParent().toUri().getPath();\n     try {\n       EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n       if ((ez !\u003d null)) {\n         return this.makeQualified(\n-            new Path(ez.getPath() + \"/\" + FileSystem.TRASH_PREFIX +\n+            new Path(ez.getPath(), FileSystem.TRASH_PREFIX +\n                 dfs.ugi.getShortUserName()));\n       }\n     } catch (IOException e) {\n       DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n           \"path \" + parentSrc + \". \" + e.getMessage());\n     }\n     return super.getTrashRoot(path);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Path getTrashRoot(Path path) {\n    if ((path \u003d\u003d null) || path.isRoot() || !dfs.isHDFSEncryptionEnabled()) {\n      return super.getTrashRoot(path);\n    }\n\n    String parentSrc \u003d path.getParent().toUri().getPath();\n    try {\n      EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n      if ((ez !\u003d null)) {\n        return this.makeQualified(\n            new Path(ez.getPath(), FileSystem.TRASH_PREFIX +\n                dfs.ugi.getShortUserName()));\n      }\n    } catch (IOException e) {\n      DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n          \"path \" + parentSrc + \". \" + e.getMessage());\n    }\n    return super.getTrashRoot(path);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "0fb14aaced7afdbbb72e59316c186ebf6ec2d091": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-9799. Reimplement getCurrentTrashDir to remove incompatibility. (zhz)\n\nChange-Id: I7834bcebffed38cb384db5395ddb8b6dd9e79a0b\n",
      "commitDate": "17/02/16 1:30 PM",
      "commitName": "0fb14aaced7afdbbb72e59316c186ebf6ec2d091",
      "commitAuthor": "Zhe Zhang",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-9799. Reimplement getCurrentTrashDir to remove incompatibility. (zhz)\n\nChange-Id: I7834bcebffed38cb384db5395ddb8b6dd9e79a0b\n",
          "commitDate": "17/02/16 1:30 PM",
          "commitName": "0fb14aaced7afdbbb72e59316c186ebf6ec2d091",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "08/02/16 4:30 PM",
          "commitNameOld": "dbe49c1bd6f62f04cf4290795b81a66fbd41d44c",
          "commitAuthorOld": "zhezhang",
          "daysBetweenCommits": 8.87,
          "commitsBetweenForRepo": 60,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,19 @@\n-  public Path getTrashRoot(Path path) throws IOException {\n+  public Path getTrashRoot(Path path) {\n     if ((path \u003d\u003d null) || path.isRoot() || !dfs.isHDFSEncryptionEnabled()) {\n       return super.getTrashRoot(path);\n     }\n \n     String parentSrc \u003d path.getParent().toUri().getPath();\n-    EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n-    if ((ez !\u003d null)) {\n-      return this.makeQualified(\n-          new Path(ez.getPath() + \"/\" + FileSystem.TRASH_PREFIX +\n-              dfs.ugi.getShortUserName()));\n-    } else {\n-      return super.getTrashRoot(path);\n+    try {\n+      EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n+      if ((ez !\u003d null)) {\n+        return this.makeQualified(\n+            new Path(ez.getPath() + \"/\" + FileSystem.TRASH_PREFIX +\n+                dfs.ugi.getShortUserName()));\n+      }\n+    } catch (IOException e) {\n+      DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n+          \"path \" + parentSrc + \". \" + e.getMessage());\n     }\n+    return super.getTrashRoot(path);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Path getTrashRoot(Path path) {\n    if ((path \u003d\u003d null) || path.isRoot() || !dfs.isHDFSEncryptionEnabled()) {\n      return super.getTrashRoot(path);\n    }\n\n    String parentSrc \u003d path.getParent().toUri().getPath();\n    try {\n      EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n      if ((ez !\u003d null)) {\n        return this.makeQualified(\n            new Path(ez.getPath() + \"/\" + FileSystem.TRASH_PREFIX +\n                dfs.ugi.getShortUserName()));\n      }\n    } catch (IOException e) {\n      DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n          \"path \" + parentSrc + \". \" + e.getMessage());\n    }\n    return super.getTrashRoot(path);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9799. Reimplement getCurrentTrashDir to remove incompatibility. (zhz)\n\nChange-Id: I7834bcebffed38cb384db5395ddb8b6dd9e79a0b\n",
          "commitDate": "17/02/16 1:30 PM",
          "commitName": "0fb14aaced7afdbbb72e59316c186ebf6ec2d091",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "08/02/16 4:30 PM",
          "commitNameOld": "dbe49c1bd6f62f04cf4290795b81a66fbd41d44c",
          "commitAuthorOld": "zhezhang",
          "daysBetweenCommits": 8.87,
          "commitsBetweenForRepo": 60,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,19 @@\n-  public Path getTrashRoot(Path path) throws IOException {\n+  public Path getTrashRoot(Path path) {\n     if ((path \u003d\u003d null) || path.isRoot() || !dfs.isHDFSEncryptionEnabled()) {\n       return super.getTrashRoot(path);\n     }\n \n     String parentSrc \u003d path.getParent().toUri().getPath();\n-    EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n-    if ((ez !\u003d null)) {\n-      return this.makeQualified(\n-          new Path(ez.getPath() + \"/\" + FileSystem.TRASH_PREFIX +\n-              dfs.ugi.getShortUserName()));\n-    } else {\n-      return super.getTrashRoot(path);\n+    try {\n+      EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n+      if ((ez !\u003d null)) {\n+        return this.makeQualified(\n+            new Path(ez.getPath() + \"/\" + FileSystem.TRASH_PREFIX +\n+                dfs.ugi.getShortUserName()));\n+      }\n+    } catch (IOException e) {\n+      DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n+          \"path \" + parentSrc + \". \" + e.getMessage());\n     }\n+    return super.getTrashRoot(path);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Path getTrashRoot(Path path) {\n    if ((path \u003d\u003d null) || path.isRoot() || !dfs.isHDFSEncryptionEnabled()) {\n      return super.getTrashRoot(path);\n    }\n\n    String parentSrc \u003d path.getParent().toUri().getPath();\n    try {\n      EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n      if ((ez !\u003d null)) {\n        return this.makeQualified(\n            new Path(ez.getPath() + \"/\" + FileSystem.TRASH_PREFIX +\n                dfs.ugi.getShortUserName()));\n      }\n    } catch (IOException e) {\n      DFSClient.LOG.warn(\"Exception in checking the encryption zone for the \" +\n          \"path \" + parentSrc + \". \" + e.getMessage());\n    }\n    return super.getTrashRoot(path);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "dbe49c1bd6f62f04cf4290795b81a66fbd41d44c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9244. Support nested encryption zones.\n\nChange-Id: I43a13035a8b27956e90967ee82058efb647c3415\n",
      "commitDate": "08/02/16 4:30 PM",
      "commitName": "dbe49c1bd6f62f04cf4290795b81a66fbd41d44c",
      "commitAuthor": "zhezhang",
      "commitDateOld": "24/01/16 2:19 PM",
      "commitNameOld": "10a2bc0dffaece216eb9a6bac3236a086b9ece31",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 15.09,
      "commitsBetweenForRepo": 106,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public Path getTrashRoot(Path path) throws IOException {\n-    if ((path \u003d\u003d null) || !dfs.isHDFSEncryptionEnabled()) {\n+    if ((path \u003d\u003d null) || path.isRoot() || !dfs.isHDFSEncryptionEnabled()) {\n       return super.getTrashRoot(path);\n     }\n \n-    String absSrc \u003d path.toUri().getPath();\n-    EncryptionZone ez \u003d dfs.getEZForPath(absSrc);\n-    if ((ez !\u003d null) \u0026\u0026 !ez.getPath().equals(absSrc)) {\n+    String parentSrc \u003d path.getParent().toUri().getPath();\n+    EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n+    if ((ez !\u003d null)) {\n       return this.makeQualified(\n           new Path(ez.getPath() + \"/\" + FileSystem.TRASH_PREFIX +\n               dfs.ugi.getShortUserName()));\n     } else {\n       return super.getTrashRoot(path);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Path getTrashRoot(Path path) throws IOException {\n    if ((path \u003d\u003d null) || path.isRoot() || !dfs.isHDFSEncryptionEnabled()) {\n      return super.getTrashRoot(path);\n    }\n\n    String parentSrc \u003d path.getParent().toUri().getPath();\n    EncryptionZone ez \u003d dfs.getEZForPath(parentSrc);\n    if ((ez !\u003d null)) {\n      return this.makeQualified(\n          new Path(ez.getPath() + \"/\" + FileSystem.TRASH_PREFIX +\n              dfs.ugi.getShortUserName()));\n    } else {\n      return super.getTrashRoot(path);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "cbc7b6bf97a80c39d4bbb3005e42dacae6726baf": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8831. Trash Support for deletion in HDFS encryption zone. Contributed by Xiaoyu Yao.\n",
      "commitDate": "04/12/15 10:39 AM",
      "commitName": "cbc7b6bf97a80c39d4bbb3005e42dacae6726baf",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,15 @@\n+  public Path getTrashRoot(Path path) throws IOException {\n+    if ((path \u003d\u003d null) || !dfs.isHDFSEncryptionEnabled()) {\n+      return super.getTrashRoot(path);\n+    }\n+\n+    String absSrc \u003d path.toUri().getPath();\n+    EncryptionZone ez \u003d dfs.getEZForPath(absSrc);\n+    if ((ez !\u003d null) \u0026\u0026 !ez.getPath().equals(absSrc)) {\n+      return this.makeQualified(\n+          new Path(ez.getPath() + \"/\" + FileSystem.TRASH_PREFIX +\n+              dfs.ugi.getShortUserName()));\n+    } else {\n+      return super.getTrashRoot(path);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Path getTrashRoot(Path path) throws IOException {\n    if ((path \u003d\u003d null) || !dfs.isHDFSEncryptionEnabled()) {\n      return super.getTrashRoot(path);\n    }\n\n    String absSrc \u003d path.toUri().getPath();\n    EncryptionZone ez \u003d dfs.getEZForPath(absSrc);\n    if ((ez !\u003d null) \u0026\u0026 !ez.getPath().equals(absSrc)) {\n      return this.makeQualified(\n          new Path(ez.getPath() + \"/\" + FileSystem.TRASH_PREFIX +\n              dfs.ugi.getShortUserName()));\n    } else {\n      return super.getTrashRoot(path);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
    }
  }
}