{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationMaster.java",
  "functionName": "dumpOutDebugInfo",
  "functionId": "dumpOutDebugInfo",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
  "functionStartLine": 425,
  "functionEndLine": 450,
  "numCommitsSeen": 121,
  "timeTaken": 2977,
  "changeHistory": [
    "785f1b0d11a3bf0af9851c080ff0acc34539f17b",
    "5a5ba62a851f0b29434b76a5530a64f7714d3f95",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "fad230a49d0d4cdbb2062b10c3dea6c755737db5"
  ],
  "changeHistoryShort": {
    "785f1b0d11a3bf0af9851c080ff0acc34539f17b": "Ybodychange",
    "5a5ba62a851f0b29434b76a5530a64f7714d3f95": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "fad230a49d0d4cdbb2062b10c3dea6c755737db5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "785f1b0d11a3bf0af9851c080ff0acc34539f17b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7407. Moving logging APIs over to slf4j in hadoop-yarn-applications. Contributed by Yeliang Cang.\n",
      "commitDate": "31/10/17 12:36 AM",
      "commitName": "785f1b0d11a3bf0af9851c080ff0acc34539f17b",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "7805deed4896e470ebd2f6bbd1ba9962947c63cd",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 48.64,
      "commitsBetweenForRepo": 400,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   private void dumpOutDebugInfo() {\n \n     LOG.info(\"Dump debug output\");\n     Map\u003cString, String\u003e envs \u003d System.getenv();\n     for (Map.Entry\u003cString, String\u003e env : envs.entrySet()) {\n       LOG.info(\"System env: key\u003d\" + env.getKey() + \", val\u003d\" + env.getValue());\n       System.out.println(\"System env: key\u003d\" + env.getKey() + \", val\u003d\"\n           + env.getValue());\n     }\n \n     BufferedReader buf \u003d null;\n     try {\n       String lines \u003d Shell.WINDOWS ? Shell.execCommand(\"cmd\", \"/c\", \"dir\") :\n         Shell.execCommand(\"ls\", \"-al\");\n       buf \u003d new BufferedReader(new StringReader(lines));\n       String line \u003d \"\";\n       while ((line \u003d buf.readLine()) !\u003d null) {\n         LOG.info(\"System CWD content: \" + line);\n         System.out.println(\"System CWD content: \" + line);\n       }\n     } catch (IOException e) {\n       e.printStackTrace();\n     } finally {\n-      IOUtils.cleanup(LOG, buf);\n+      IOUtils.cleanupWithLogger(LOG, buf);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void dumpOutDebugInfo() {\n\n    LOG.info(\"Dump debug output\");\n    Map\u003cString, String\u003e envs \u003d System.getenv();\n    for (Map.Entry\u003cString, String\u003e env : envs.entrySet()) {\n      LOG.info(\"System env: key\u003d\" + env.getKey() + \", val\u003d\" + env.getValue());\n      System.out.println(\"System env: key\u003d\" + env.getKey() + \", val\u003d\"\n          + env.getValue());\n    }\n\n    BufferedReader buf \u003d null;\n    try {\n      String lines \u003d Shell.WINDOWS ? Shell.execCommand(\"cmd\", \"/c\", \"dir\") :\n        Shell.execCommand(\"ls\", \"-al\");\n      buf \u003d new BufferedReader(new StringReader(lines));\n      String line \u003d \"\";\n      while ((line \u003d buf.readLine()) !\u003d null) {\n        LOG.info(\"System CWD content: \" + line);\n        System.out.println(\"System CWD content: \" + line);\n      }\n    } catch (IOException e) {\n      e.printStackTrace();\n    } finally {\n      IOUtils.cleanupWithLogger(LOG, buf);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "5a5ba62a851f0b29434b76a5530a64f7714d3f95": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1395. Distributed shell application master launched with debug flag can hang waiting for external ls process. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1540839 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/11/13 12:46 PM",
      "commitName": "5a5ba62a851f0b29434b76a5530a64f7714d3f95",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "11/10/13 1:18 AM",
      "commitNameOld": "735d8b27f78ea8be839008650a3e88db37dc507d",
      "commitAuthorOld": "Luke Lu",
      "daysBetweenCommits": 31.52,
      "commitsBetweenForRepo": 161,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,26 @@\n   private void dumpOutDebugInfo() {\n \n     LOG.info(\"Dump debug output\");\n     Map\u003cString, String\u003e envs \u003d System.getenv();\n     for (Map.Entry\u003cString, String\u003e env : envs.entrySet()) {\n       LOG.info(\"System env: key\u003d\" + env.getKey() + \", val\u003d\" + env.getValue());\n       System.out.println(\"System env: key\u003d\" + env.getKey() + \", val\u003d\"\n           + env.getValue());\n     }\n \n-    String cmd \u003d \"ls -al\";\n-    Runtime run \u003d Runtime.getRuntime();\n-    Process pr \u003d null;\n+    BufferedReader buf \u003d null;\n     try {\n-      pr \u003d run.exec(cmd);\n-      pr.waitFor();\n-\n-      BufferedReader buf \u003d new BufferedReader(new InputStreamReader(\n-          pr.getInputStream()));\n+      String lines \u003d Shell.WINDOWS ? Shell.execCommand(\"cmd\", \"/c\", \"dir\") :\n+        Shell.execCommand(\"ls\", \"-al\");\n+      buf \u003d new BufferedReader(new StringReader(lines));\n       String line \u003d \"\";\n       while ((line \u003d buf.readLine()) !\u003d null) {\n         LOG.info(\"System CWD content: \" + line);\n         System.out.println(\"System CWD content: \" + line);\n       }\n-      buf.close();\n     } catch (IOException e) {\n       e.printStackTrace();\n-    } catch (InterruptedException e) {\n-      e.printStackTrace();\n+    } finally {\n+      IOUtils.cleanup(LOG, buf);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void dumpOutDebugInfo() {\n\n    LOG.info(\"Dump debug output\");\n    Map\u003cString, String\u003e envs \u003d System.getenv();\n    for (Map.Entry\u003cString, String\u003e env : envs.entrySet()) {\n      LOG.info(\"System env: key\u003d\" + env.getKey() + \", val\u003d\" + env.getValue());\n      System.out.println(\"System env: key\u003d\" + env.getKey() + \", val\u003d\"\n          + env.getValue());\n    }\n\n    BufferedReader buf \u003d null;\n    try {\n      String lines \u003d Shell.WINDOWS ? Shell.execCommand(\"cmd\", \"/c\", \"dir\") :\n        Shell.execCommand(\"ls\", \"-al\");\n      buf \u003d new BufferedReader(new StringReader(lines));\n      String line \u003d \"\";\n      while ((line \u003d buf.readLine()) !\u003d null) {\n        LOG.info(\"System CWD content: \" + line);\n        System.out.println(\"System CWD content: \" + line);\n      }\n    } catch (IOException e) {\n      e.printStackTrace();\n    } finally {\n      IOUtils.cleanup(LOG, buf);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void dumpOutDebugInfo() {\n\n    LOG.info(\"Dump debug output\");\n    Map\u003cString, String\u003e envs \u003d System.getenv();\n    for (Map.Entry\u003cString, String\u003e env : envs.entrySet()) {\n      LOG.info(\"System env: key\u003d\" + env.getKey() + \", val\u003d\" + env.getValue());\n      System.out.println(\"System env: key\u003d\" + env.getKey() + \", val\u003d\" + env.getValue());\n    }\n\n    String cmd \u003d \"ls -al\";\n    Runtime run \u003d Runtime.getRuntime();\n    Process pr \u003d null;\n    try {\n      pr \u003d run.exec(cmd);\n      pr.waitFor();\n\n      BufferedReader buf \u003d new BufferedReader(new InputStreamReader(pr.getInputStream()));\n      String line \u003d \"\";\n      while ((line\u003dbuf.readLine())!\u003dnull) {\n        LOG.info(\"System CWD content: \" + line);\n        System.out.println(\"System CWD content: \" + line);\n      }\n      buf.close();\n    } catch (IOException e) {\n      e.printStackTrace();\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    } \n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java"
      }
    },
    "fad230a49d0d4cdbb2062b10c3dea6c755737db5": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2719. Add a simple, DistributedShell, application to illustrate alternate frameworks on YARN. Contributed by Hitesh Shah.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177864 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/09/11 3:25 PM",
      "commitName": "fad230a49d0d4cdbb2062b10c3dea6c755737db5",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,29 @@\n+  private void dumpOutDebugInfo() {\n+\n+    LOG.info(\"Dump debug output\");\t\t\n+    Map\u003cString, String\u003e envs \u003d System.getenv();\n+    for (Map.Entry\u003cString, String\u003e env : envs.entrySet()) {\n+      LOG.info(\"System env: key\u003d\" + env.getKey() + \", val\u003d\" + env.getValue());\n+      System.out.println(\"System env: key\u003d\" + env.getKey() + \", val\u003d\" + env.getValue());\n+    }\n+\n+    String cmd \u003d \"ls -al\";\n+    Runtime run \u003d Runtime.getRuntime();\n+    Process pr \u003d null;\n+    try {\n+      pr \u003d run.exec(cmd);\n+      pr.waitFor();\n+\n+      BufferedReader buf \u003d new BufferedReader(new InputStreamReader(pr.getInputStream()));\n+      String line \u003d \"\";\n+      while ((line\u003dbuf.readLine())!\u003dnull) {\n+        LOG.info(\"System CWD content: \" + line);\n+        System.out.println(\"System CWD content: \" + line);\n+      }\n+      buf.close();\n+    } catch (IOException e) {\n+      e.printStackTrace();\n+    } catch (InterruptedException e) {\n+      e.printStackTrace();\n+    } \n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void dumpOutDebugInfo() {\n\n    LOG.info(\"Dump debug output\");\t\t\n    Map\u003cString, String\u003e envs \u003d System.getenv();\n    for (Map.Entry\u003cString, String\u003e env : envs.entrySet()) {\n      LOG.info(\"System env: key\u003d\" + env.getKey() + \", val\u003d\" + env.getValue());\n      System.out.println(\"System env: key\u003d\" + env.getKey() + \", val\u003d\" + env.getValue());\n    }\n\n    String cmd \u003d \"ls -al\";\n    Runtime run \u003d Runtime.getRuntime();\n    Process pr \u003d null;\n    try {\n      pr \u003d run.exec(cmd);\n      pr.waitFor();\n\n      BufferedReader buf \u003d new BufferedReader(new InputStreamReader(pr.getInputStream()));\n      String line \u003d \"\";\n      while ((line\u003dbuf.readLine())!\u003dnull) {\n        LOG.info(\"System CWD content: \" + line);\n        System.out.println(\"System CWD content: \" + line);\n      }\n      buf.close();\n    } catch (IOException e) {\n      e.printStackTrace();\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    } \n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java"
    }
  }
}