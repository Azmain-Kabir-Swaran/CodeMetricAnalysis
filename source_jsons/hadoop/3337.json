{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JsonUtilClient.java",
  "functionName": "toLocatedBlock",
  "functionId": "toLocatedBlock___m-Map__?,?__(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
  "functionStartLine": 388,
  "functionEndLine": 407,
  "numCommitsSeen": 92,
  "timeTaken": 3932,
  "changeHistory": [
    "e3d673901b396cf5bbede5ed6f607ce68301ec0a",
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
    "ab04ff9efe632b4eca6faca7407ac35e00e6a379",
    "e2262d3d18c6d5c2aa20f96920104dc07271b869",
    "46cbce9af1272ce0eb6e300f96a1a8d4b08e23e3",
    "9d06631719466679135840d50e55ad62332b3866",
    "1b1016beeb716bef8dad93bb2c7c4631a14b3d57",
    "4dc4e9e63f7385ddd1d64ae1345e0d32a4acb9de"
  ],
  "changeHistoryShort": {
    "e3d673901b396cf5bbede5ed6f607ce68301ec0a": "Ybodychange",
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": "Yfilerename",
    "ab04ff9efe632b4eca6faca7407ac35e00e6a379": "Ymultichange(Ymovefromfile,Ymodifierchange)",
    "e2262d3d18c6d5c2aa20f96920104dc07271b869": "Ybodychange",
    "46cbce9af1272ce0eb6e300f96a1a8d4b08e23e3": "Ybodychange",
    "9d06631719466679135840d50e55ad62332b3866": "Ybodychange",
    "1b1016beeb716bef8dad93bb2c7c4631a14b3d57": "Ymultichange(Ymodifierchange,Ybodychange)",
    "4dc4e9e63f7385ddd1d64ae1345e0d32a4acb9de": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e3d673901b396cf5bbede5ed6f607ce68301ec0a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8512. WebHDFS : GETFILESTATUS should return LocatedBlock with storage type info. Contributed by Xiaoyu Yao.\n",
      "commitDate": "25/11/15 1:41 PM",
      "commitName": "e3d673901b396cf5bbede5ed6f607ce68301ec0a",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "09/11/15 9:57 AM",
      "commitNameOld": "41d3f8899d8b96568f56331eaf598bb356ecdae0",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 16.15,
      "commitsBetweenForRepo": 128,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n     if (m \u003d\u003d null) {\n       return null;\n     }\n \n     final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)m.get(\"block\"));\n     final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n         getList(m, \"locations\"));\n     final long startOffset \u003d ((Number) m.get(\"startOffset\")).longValue();\n     final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n     final DatanodeInfo[] cachedLocations \u003d toDatanodeInfoArray(\n         getList(m, \"cachedLocations\"));\n \n+    final StorageType[] storageTypes \u003d toStorageTypeArray(\n+        getList(m, \"storageTypes\"));\n     final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations,\n-        null, null, startOffset, isCorrupt, cachedLocations);\n+        null, storageTypes, startOffset, isCorrupt, cachedLocations);\n     locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)m.get(\"blockToken\")));\n     return locatedblock;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n    if (m \u003d\u003d null) {\n      return null;\n    }\n\n    final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)m.get(\"block\"));\n    final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n        getList(m, \"locations\"));\n    final long startOffset \u003d ((Number) m.get(\"startOffset\")).longValue();\n    final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n    final DatanodeInfo[] cachedLocations \u003d toDatanodeInfoArray(\n        getList(m, \"cachedLocations\"));\n\n    final StorageType[] storageTypes \u003d toStorageTypeArray(\n        getList(m, \"storageTypes\"));\n    final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations,\n        null, storageTypes, startOffset, isCorrupt, cachedLocations);\n    locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)m.get(\"blockToken\")));\n    return locatedblock;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
      "extendedDetails": {}
    },
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8052. Move WebHdfsFileSystem into hadoop-hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "23/04/15 5:33 PM",
      "commitName": "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "23/04/15 4:40 PM",
      "commitNameOld": "0b3f8957a87ada1a275c9904b211fdbdcefafb02",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n    if (m \u003d\u003d null) {\n      return null;\n    }\n\n    final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)m.get(\"block\"));\n    final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n        getList(m, \"locations\"));\n    final long startOffset \u003d ((Number) m.get(\"startOffset\")).longValue();\n    final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n    final DatanodeInfo[] cachedLocations \u003d toDatanodeInfoArray(\n        getList(m, \"cachedLocations\"));\n\n    final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations,\n        null, null, startOffset, isCorrupt, cachedLocations);\n    locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)m.get(\"blockToken\")));\n    return locatedblock;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java"
      }
    },
    "ab04ff9efe632b4eca6faca7407ac35e00e6a379": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange)",
      "commitMessage": "HDFS-8080. Separate JSON related routines used by WebHdfsFileSystem to a package local class. Contributed by Haohui Mai.\n",
      "commitDate": "07/04/15 9:30 PM",
      "commitName": "ab04ff9efe632b4eca6faca7407ac35e00e6a379",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-8080. Separate JSON related routines used by WebHdfsFileSystem to a package local class. Contributed by Haohui Mai.\n",
          "commitDate": "07/04/15 9:30 PM",
          "commitName": "ab04ff9efe632b4eca6faca7407ac35e00e6a379",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "07/04/15 9:26 PM",
          "commitNameOld": "d505c8acd30d6f40d0632fe9c93c886a4499a9fc",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n+  static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n     if (m \u003d\u003d null) {\n       return null;\n     }\n \n     final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)m.get(\"block\"));\n     final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n         getList(m, \"locations\"));\n     final long startOffset \u003d ((Number) m.get(\"startOffset\")).longValue();\n     final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n     final DatanodeInfo[] cachedLocations \u003d toDatanodeInfoArray(\n         getList(m, \"cachedLocations\"));\n \n     final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations,\n         null, null, startOffset, isCorrupt, cachedLocations);\n     locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)m.get(\"blockToken\")));\n     return locatedblock;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n    if (m \u003d\u003d null) {\n      return null;\n    }\n\n    final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)m.get(\"block\"));\n    final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n        getList(m, \"locations\"));\n    final long startOffset \u003d ((Number) m.get(\"startOffset\")).longValue();\n    final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n    final DatanodeInfo[] cachedLocations \u003d toDatanodeInfoArray(\n        getList(m, \"cachedLocations\"));\n\n    final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations,\n        null, null, startOffset, isCorrupt, cachedLocations);\n    locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)m.get(\"blockToken\")));\n    return locatedblock;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
            "oldMethodName": "toLocatedBlock",
            "newMethodName": "toLocatedBlock"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-8080. Separate JSON related routines used by WebHdfsFileSystem to a package local class. Contributed by Haohui Mai.\n",
          "commitDate": "07/04/15 9:30 PM",
          "commitName": "ab04ff9efe632b4eca6faca7407ac35e00e6a379",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "07/04/15 9:26 PM",
          "commitNameOld": "d505c8acd30d6f40d0632fe9c93c886a4499a9fc",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n+  static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n     if (m \u003d\u003d null) {\n       return null;\n     }\n \n     final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)m.get(\"block\"));\n     final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n         getList(m, \"locations\"));\n     final long startOffset \u003d ((Number) m.get(\"startOffset\")).longValue();\n     final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n     final DatanodeInfo[] cachedLocations \u003d toDatanodeInfoArray(\n         getList(m, \"cachedLocations\"));\n \n     final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations,\n         null, null, startOffset, isCorrupt, cachedLocations);\n     locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)m.get(\"blockToken\")));\n     return locatedblock;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n    if (m \u003d\u003d null) {\n      return null;\n    }\n\n    final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)m.get(\"block\"));\n    final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n        getList(m, \"locations\"));\n    final long startOffset \u003d ((Number) m.get(\"startOffset\")).longValue();\n    final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n    final DatanodeInfo[] cachedLocations \u003d toDatanodeInfoArray(\n        getList(m, \"cachedLocations\"));\n\n    final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations,\n        null, null, startOffset, isCorrupt, cachedLocations);\n    locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)m.get(\"blockToken\")));\n    return locatedblock;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[static]"
          }
        }
      ]
    },
    "e2262d3d18c6d5c2aa20f96920104dc07271b869": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6565. Use jackson instead jetty json in hdfs-client. Contributed by Akira AJISAKA.\n",
      "commitDate": "03/03/15 5:54 PM",
      "commitName": "e2262d3d18c6d5c2aa20f96920104dc07271b869",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "08/12/14 10:23 AM",
      "commitNameOld": "ffe942b82c1208bc7b22899da3a233944cb5ab52",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 85.31,
      "commitsBetweenForRepo": 663,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n     if (m \u003d\u003d null) {\n       return null;\n     }\n \n     final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)m.get(\"block\"));\n     final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n-        (Object[])m.get(\"locations\"));\n-    final long startOffset \u003d (Long)m.get(\"startOffset\");\n+        getList(m, \"locations\"));\n+    final long startOffset \u003d ((Number) m.get(\"startOffset\")).longValue();\n     final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n     final DatanodeInfo[] cachedLocations \u003d toDatanodeInfoArray(\n-        (Object[])m.get(\"cachedLocations\"));\n+        getList(m, \"cachedLocations\"));\n \n     final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations,\n         null, null, startOffset, isCorrupt, cachedLocations);\n     locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)m.get(\"blockToken\")));\n     return locatedblock;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n    if (m \u003d\u003d null) {\n      return null;\n    }\n\n    final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)m.get(\"block\"));\n    final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n        getList(m, \"locations\"));\n    final long startOffset \u003d ((Number) m.get(\"startOffset\")).longValue();\n    final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n    final DatanodeInfo[] cachedLocations \u003d toDatanodeInfoArray(\n        getList(m, \"cachedLocations\"));\n\n    final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations,\n        null, null, startOffset, isCorrupt, cachedLocations);\n    locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)m.get(\"blockToken\")));\n    return locatedblock;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "46cbce9af1272ce0eb6e300f96a1a8d4b08e23e3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5508. Fix compilation error after merge. (Contributed by szetszwo)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1541352 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/11/13 6:00 PM",
      "commitName": "46cbce9af1272ce0eb6e300f96a1a8d4b08e23e3",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "12/11/13 5:14 PM",
      "commitNameOld": "ba98e8f737a7f4865e6c33753dc7705798f52bf3",
      "commitAuthorOld": "",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n     if (m \u003d\u003d null) {\n       return null;\n     }\n \n     final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)m.get(\"block\"));\n     final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n         (Object[])m.get(\"locations\"));\n     final long startOffset \u003d (Long)m.get(\"startOffset\");\n     final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n     final DatanodeInfo[] cachedLocations \u003d toDatanodeInfoArray(\n         (Object[])m.get(\"cachedLocations\"));\n \n     final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations,\n-        startOffset, isCorrupt, cachedLocations);\n+        null, null, startOffset, isCorrupt, cachedLocations);\n     locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)m.get(\"blockToken\")));\n     return locatedblock;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n    if (m \u003d\u003d null) {\n      return null;\n    }\n\n    final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)m.get(\"block\"));\n    final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n        (Object[])m.get(\"locations\"));\n    final long startOffset \u003d (Long)m.get(\"startOffset\");\n    final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n    final DatanodeInfo[] cachedLocations \u003d toDatanodeInfoArray(\n        (Object[])m.get(\"cachedLocations\"));\n\n    final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations,\n        null, null, startOffset, isCorrupt, cachedLocations);\n    locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)m.get(\"blockToken\")));\n    return locatedblock;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "9d06631719466679135840d50e55ad62332b3866": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5450. better API for getting the cached blocks locations. Contributed by Andrew Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1541338 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/11/13 4:31 PM",
      "commitName": "9d06631719466679135840d50e55ad62332b3866",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "24/10/13 6:56 PM",
      "commitNameOld": "dc2ee20aec7b3fe1d13c846926ba1b0f02c5adef",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 18.94,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,18 @@\n   private static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n     if (m \u003d\u003d null) {\n       return null;\n     }\n \n     final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)m.get(\"block\"));\n     final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n         (Object[])m.get(\"locations\"));\n     final long startOffset \u003d (Long)m.get(\"startOffset\");\n     final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n+    final DatanodeInfo[] cachedLocations \u003d toDatanodeInfoArray(\n+        (Object[])m.get(\"cachedLocations\"));\n \n-    final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations, startOffset, isCorrupt);\n+    final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations,\n+        startOffset, isCorrupt, cachedLocations);\n     locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)m.get(\"blockToken\")));\n     return locatedblock;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n    if (m \u003d\u003d null) {\n      return null;\n    }\n\n    final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)m.get(\"block\"));\n    final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n        (Object[])m.get(\"locations\"));\n    final long startOffset \u003d (Long)m.get(\"startOffset\");\n    final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n    final DatanodeInfo[] cachedLocations \u003d toDatanodeInfoArray(\n        (Object[])m.get(\"cachedLocations\"));\n\n    final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations,\n        startOffset, isCorrupt, cachedLocations);\n    locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)m.get(\"blockToken\")));\n    return locatedblock;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "1b1016beeb716bef8dad93bb2c7c4631a14b3d57": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-2395. Add a root element in the JSON responses of webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/10/11 4:29 AM",
      "commitName": "1b1016beeb716bef8dad93bb2c7c4631a14b3d57",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-2395. Add a root element in the JSON responses of webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179169 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "05/10/11 4:29 AM",
          "commitName": "1b1016beeb716bef8dad93bb2c7c4631a14b3d57",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "30/09/11 9:49 PM",
          "commitNameOld": "dc8464f943b61b795df0cc8baec171bf07355763",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 4.28,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  public static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n+  private static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n     if (m \u003d\u003d null) {\n       return null;\n     }\n \n-    final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)JSON.parse((String)m.get(\"block\")));\n+    final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)m.get(\"block\"));\n     final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n-        (Object[])JSON.parse((String)m.get(\"locations\")));\n+        (Object[])m.get(\"locations\"));\n     final long startOffset \u003d (Long)m.get(\"startOffset\");\n     final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n \n     final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations, startOffset, isCorrupt);\n-    locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)JSON.parse((String)m.get(\"blockToken\"))));\n+    locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)m.get(\"blockToken\")));\n     return locatedblock;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n    if (m \u003d\u003d null) {\n      return null;\n    }\n\n    final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)m.get(\"block\"));\n    final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n        (Object[])m.get(\"locations\"));\n    final long startOffset \u003d (Long)m.get(\"startOffset\");\n    final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n\n    final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations, startOffset, isCorrupt);\n    locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)m.get(\"blockToken\")));\n    return locatedblock;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2395. Add a root element in the JSON responses of webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179169 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "05/10/11 4:29 AM",
          "commitName": "1b1016beeb716bef8dad93bb2c7c4631a14b3d57",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "30/09/11 9:49 PM",
          "commitNameOld": "dc8464f943b61b795df0cc8baec171bf07355763",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 4.28,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  public static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n+  private static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n     if (m \u003d\u003d null) {\n       return null;\n     }\n \n-    final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)JSON.parse((String)m.get(\"block\")));\n+    final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)m.get(\"block\"));\n     final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n-        (Object[])JSON.parse((String)m.get(\"locations\")));\n+        (Object[])m.get(\"locations\"));\n     final long startOffset \u003d (Long)m.get(\"startOffset\");\n     final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n \n     final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations, startOffset, isCorrupt);\n-    locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)JSON.parse((String)m.get(\"blockToken\"))));\n+    locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)m.get(\"blockToken\")));\n     return locatedblock;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n    if (m \u003d\u003d null) {\n      return null;\n    }\n\n    final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)m.get(\"block\"));\n    final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n        (Object[])m.get(\"locations\"));\n    final long startOffset \u003d (Long)m.get(\"startOffset\");\n    final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n\n    final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations, startOffset, isCorrupt);\n    locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)m.get(\"blockToken\")));\n    return locatedblock;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "4dc4e9e63f7385ddd1d64ae1345e0d32a4acb9de": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2340. Support getFileBlockLocations and getDelegationToken in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1173468 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/09/11 7:56 PM",
      "commitName": "4dc4e9e63f7385ddd1d64ae1345e0d32a4acb9de",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,15 @@\n+  public static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n+    if (m \u003d\u003d null) {\n+      return null;\n+    }\n+\n+    final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)JSON.parse((String)m.get(\"block\")));\n+    final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n+        (Object[])JSON.parse((String)m.get(\"locations\")));\n+    final long startOffset \u003d (Long)m.get(\"startOffset\");\n+    final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n+\n+    final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations, startOffset, isCorrupt);\n+    locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)JSON.parse((String)m.get(\"blockToken\"))));\n+    return locatedblock;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static LocatedBlock toLocatedBlock(final Map\u003c?, ?\u003e m) throws IOException {\n    if (m \u003d\u003d null) {\n      return null;\n    }\n\n    final ExtendedBlock b \u003d toExtendedBlock((Map\u003c?, ?\u003e)JSON.parse((String)m.get(\"block\")));\n    final DatanodeInfo[] locations \u003d toDatanodeInfoArray(\n        (Object[])JSON.parse((String)m.get(\"locations\")));\n    final long startOffset \u003d (Long)m.get(\"startOffset\");\n    final boolean isCorrupt \u003d (Boolean)m.get(\"isCorrupt\");\n\n    final LocatedBlock locatedblock \u003d new LocatedBlock(b, locations, startOffset, isCorrupt);\n    locatedblock.setBlockToken(toBlockToken((Map\u003c?, ?\u003e)JSON.parse((String)m.get(\"blockToken\"))));\n    return locatedblock;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java"
    }
  }
}