{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterPermissionChecker.java",
  "functionName": "checkSuperuserPrivilege",
  "functionId": "checkSuperuserPrivilege",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterPermissionChecker.java",
  "functionStartLine": 109,
  "functionEndLine": 137,
  "numCommitsSeen": 6,
  "timeTaken": 2040,
  "changeHistory": [
    "047d8879e7a1bf4dbf6b99815a78b384cd5d514c",
    "c3ca348b81bdf6aa0857a1d4d140c6c9d64be490",
    "48269c370c8981244b9d3d5cf1c82a2897ca502e"
  ],
  "changeHistoryShort": {
    "047d8879e7a1bf4dbf6b99815a78b384cd5d514c": "Ybodychange",
    "c3ca348b81bdf6aa0857a1d4d140c6c9d64be490": "Ybodychange",
    "48269c370c8981244b9d3d5cf1c82a2897ca502e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "047d8879e7a1bf4dbf6b99815a78b384cd5d514c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15345. RouterPermissionChecker#checkSuperuserPrivilege should use UGI#getGroups after HADOOP-13442.\n\n",
      "commitDate": "12/05/20 8:31 AM",
      "commitName": "047d8879e7a1bf4dbf6b99815a78b384cd5d514c",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "23/03/20 10:41 PM",
      "commitNameOld": "5eddc82fb85d2f60bf13b1eca03d78deb8981d51",
      "commitAuthorOld": "He Xiaoqiao",
      "daysBetweenCommits": 49.41,
      "commitsBetweenForRepo": 165,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   public void checkSuperuserPrivilege() throws  AccessControlException {\n \n     // Try to get the ugi in the RPC call.\n     UserGroupInformation ugi \u003d null;\n     try {\n       ugi \u003d NameNode.getRemoteUser();\n     } catch (IOException e) {\n       // Ignore as we catch it afterwards\n     }\n     if (ugi \u003d\u003d null) {\n       LOG.error(\"Cannot get the remote user name\");\n       throw new AccessControlException(\"Cannot get the remote user name\");\n     }\n \n     // Is this by the Router user itself?\n     if (ugi.getShortUserName().equals(superUser)) {\n       return;\n     }\n \n     // Is the user a member of the super group?\n-    List\u003cString\u003e groups \u003d Arrays.asList(ugi.getGroupNames());\n+    List\u003cString\u003e groups \u003d ugi.getGroups();\n     if (groups.contains(superGroup)) {\n       return;\n     }\n \n     // Not a superuser\n     throw new AccessControlException(\n         ugi.getUserName() + \" is not a super user\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkSuperuserPrivilege() throws  AccessControlException {\n\n    // Try to get the ugi in the RPC call.\n    UserGroupInformation ugi \u003d null;\n    try {\n      ugi \u003d NameNode.getRemoteUser();\n    } catch (IOException e) {\n      // Ignore as we catch it afterwards\n    }\n    if (ugi \u003d\u003d null) {\n      LOG.error(\"Cannot get the remote user name\");\n      throw new AccessControlException(\"Cannot get the remote user name\");\n    }\n\n    // Is this by the Router user itself?\n    if (ugi.getShortUserName().equals(superUser)) {\n      return;\n    }\n\n    // Is the user a member of the super group?\n    List\u003cString\u003e groups \u003d ugi.getGroups();\n    if (groups.contains(superGroup)) {\n      return;\n    }\n\n    // Not a superuser\n    throw new AccessControlException(\n        ugi.getUserName() + \" is not a super user\");\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterPermissionChecker.java",
      "extendedDetails": {}
    },
    "c3ca348b81bdf6aa0857a1d4d140c6c9d64be490": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14620. RBF: Fix \u0027not a super user\u0027 error when disabling a namespace in kerberos with superuser principal. Contributed by luhuachao.\n",
      "commitDate": "04/07/19 11:21 AM",
      "commitName": "c3ca348b81bdf6aa0857a1d4d140c6c9d64be490",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "27/08/18 10:18 AM",
      "commitNameOld": "7b1fa5693efc687492776d43ab482601cbb30dfd",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 311.04,
      "commitsBetweenForRepo": 2399,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   public void checkSuperuserPrivilege() throws  AccessControlException {\n \n     // Try to get the ugi in the RPC call.\n     UserGroupInformation ugi \u003d null;\n     try {\n       ugi \u003d NameNode.getRemoteUser();\n     } catch (IOException e) {\n       // Ignore as we catch it afterwards\n     }\n     if (ugi \u003d\u003d null) {\n       LOG.error(\"Cannot get the remote user name\");\n       throw new AccessControlException(\"Cannot get the remote user name\");\n     }\n \n     // Is this by the Router user itself?\n-    if (ugi.getUserName().equals(superUser)) {\n+    if (ugi.getShortUserName().equals(superUser)) {\n       return;\n     }\n \n     // Is the user a member of the super group?\n     List\u003cString\u003e groups \u003d Arrays.asList(ugi.getGroupNames());\n     if (groups.contains(superGroup)) {\n       return;\n     }\n \n     // Not a superuser\n     throw new AccessControlException(\n         ugi.getUserName() + \" is not a super user\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkSuperuserPrivilege() throws  AccessControlException {\n\n    // Try to get the ugi in the RPC call.\n    UserGroupInformation ugi \u003d null;\n    try {\n      ugi \u003d NameNode.getRemoteUser();\n    } catch (IOException e) {\n      // Ignore as we catch it afterwards\n    }\n    if (ugi \u003d\u003d null) {\n      LOG.error(\"Cannot get the remote user name\");\n      throw new AccessControlException(\"Cannot get the remote user name\");\n    }\n\n    // Is this by the Router user itself?\n    if (ugi.getShortUserName().equals(superUser)) {\n      return;\n    }\n\n    // Is the user a member of the super group?\n    List\u003cString\u003e groups \u003d Arrays.asList(ugi.getGroupNames());\n    if (groups.contains(superGroup)) {\n      return;\n    }\n\n    // Not a superuser\n    throw new AccessControlException(\n        ugi.getUserName() + \" is not a super user\");\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterPermissionChecker.java",
      "extendedDetails": {}
    },
    "48269c370c8981244b9d3d5cf1c82a2897ca502e": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13484. RBF: Disable Nameservices from the federation. Contributed by Inigo Goiri.\n",
      "commitDate": "26/04/18 1:54 PM",
      "commitName": "48269c370c8981244b9d3d5cf1c82a2897ca502e",
      "commitAuthor": "Yiqun Lin",
      "diff": "@@ -0,0 +1,29 @@\n+  public void checkSuperuserPrivilege() throws  AccessControlException {\n+\n+    // Try to get the ugi in the RPC call.\n+    UserGroupInformation ugi \u003d null;\n+    try {\n+      ugi \u003d NameNode.getRemoteUser();\n+    } catch (IOException e) {\n+      // Ignore as we catch it afterwards\n+    }\n+    if (ugi \u003d\u003d null) {\n+      LOG.error(\"Cannot get the remote user name\");\n+      throw new AccessControlException(\"Cannot get the remote user name\");\n+    }\n+\n+    // Is this by the Router user itself?\n+    if (ugi.getUserName().equals(superUser)) {\n+      return;\n+    }\n+\n+    // Is the user a member of the super group?\n+    List\u003cString\u003e groups \u003d Arrays.asList(ugi.getGroupNames());\n+    if (groups.contains(superGroup)) {\n+      return;\n+    }\n+\n+    // Not a superuser\n+    throw new AccessControlException(\n+        ugi.getUserName() + \" is not a super user\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkSuperuserPrivilege() throws  AccessControlException {\n\n    // Try to get the ugi in the RPC call.\n    UserGroupInformation ugi \u003d null;\n    try {\n      ugi \u003d NameNode.getRemoteUser();\n    } catch (IOException e) {\n      // Ignore as we catch it afterwards\n    }\n    if (ugi \u003d\u003d null) {\n      LOG.error(\"Cannot get the remote user name\");\n      throw new AccessControlException(\"Cannot get the remote user name\");\n    }\n\n    // Is this by the Router user itself?\n    if (ugi.getUserName().equals(superUser)) {\n      return;\n    }\n\n    // Is the user a member of the super group?\n    List\u003cString\u003e groups \u003d Arrays.asList(ugi.getGroupNames());\n    if (groups.contains(superGroup)) {\n      return;\n    }\n\n    // Not a superuser\n    throw new AccessControlException(\n        ugi.getUserName() + \" is not a super user\");\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterPermissionChecker.java"
    }
  }
}