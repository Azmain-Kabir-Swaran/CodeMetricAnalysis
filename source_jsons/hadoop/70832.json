{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PageBlobOutputStream.java",
  "functionName": "close",
  "functionId": "close",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/PageBlobOutputStream.java",
  "functionStartLine": 223,
  "functionEndLine": 248,
  "numCommitsSeen": 8,
  "timeTaken": 1722,
  "changeHistory": [
    "8bc93db2e7c64830b6a662f28c8917a9eef4e7c9",
    "c45784bc9031353b938f4756473937cca759b3dc",
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40"
  ],
  "changeHistoryShort": {
    "8bc93db2e7c64830b6a662f28c8917a9eef4e7c9": "Ybodychange",
    "c45784bc9031353b938f4756473937cca759b3dc": "Ymultichange(Ymodifierchange,Ybodychange)",
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8bc93db2e7c64830b6a662f28c8917a9eef4e7c9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12635. Adding Append API support for WASB. Contributed by Dushyanth.\n",
      "commitDate": "18/01/16 9:08 AM",
      "commitName": "8bc93db2e7c64830b6a662f28c8917a9eef4e7c9",
      "commitAuthor": "cnauroth",
      "commitDateOld": "08/06/15 10:42 PM",
      "commitNameOld": "c45784bc9031353b938f4756473937cca759b3dc",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 223.48,
      "commitsBetweenForRepo": 1491,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public synchronized void close() throws IOException {\n     if (closed) {\n       return;\n     }\n \n     LOG.debug(\"Closing page blob output stream.\");\n     flush();\n     checkStreamState();\n     ioThreadPool.shutdown();\n     try {\n       LOG.debug(ioThreadPool.toString());\n       if (!ioThreadPool.awaitTermination(10, TimeUnit.MINUTES)) {\n         LOG.debug(\"Timed out after 10 minutes waiting for IO requests to finish\");\n-        logAllStackTraces();\n+        NativeAzureFileSystemHelper.logAllLiveStackTraces();\n         LOG.debug(ioThreadPool.toString());\n         throw new IOException(\"Timed out waiting for IO requests to finish\");\n       }\n     } catch (InterruptedException e) {\n       LOG.debug(\"Caught InterruptedException\");\n \n       // Restore the interrupted status\n       Thread.currentThread().interrupt();\n     }\n \n     closed \u003d true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void close() throws IOException {\n    if (closed) {\n      return;\n    }\n\n    LOG.debug(\"Closing page blob output stream.\");\n    flush();\n    checkStreamState();\n    ioThreadPool.shutdown();\n    try {\n      LOG.debug(ioThreadPool.toString());\n      if (!ioThreadPool.awaitTermination(10, TimeUnit.MINUTES)) {\n        LOG.debug(\"Timed out after 10 minutes waiting for IO requests to finish\");\n        NativeAzureFileSystemHelper.logAllLiveStackTraces();\n        LOG.debug(ioThreadPool.toString());\n        throw new IOException(\"Timed out waiting for IO requests to finish\");\n      }\n    } catch (InterruptedException e) {\n      LOG.debug(\"Caught InterruptedException\");\n\n      // Restore the interrupted status\n      Thread.currentThread().interrupt();\n    }\n\n    closed \u003d true;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/PageBlobOutputStream.java",
      "extendedDetails": {}
    },
    "c45784bc9031353b938f4756473937cca759b3dc": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-12073. Azure FileSystem PageBlobInputStream does not return -1 on EOF. Contributed by Ivan Mitic.\n",
      "commitDate": "08/06/15 10:42 PM",
      "commitName": "c45784bc9031353b938f4756473937cca759b3dc",
      "commitAuthor": "cnauroth",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-12073. Azure FileSystem PageBlobInputStream does not return -1 on EOF. Contributed by Ivan Mitic.\n",
          "commitDate": "08/06/15 10:42 PM",
          "commitName": "c45784bc9031353b938f4756473937cca759b3dc",
          "commitAuthor": "cnauroth",
          "commitDateOld": "06/03/15 3:25 PM",
          "commitNameOld": "608ebd52bafecf980e9726d397c786a9c2422eba",
          "commitAuthorOld": "cnauroth",
          "daysBetweenCommits": 94.26,
          "commitsBetweenForRepo": 874,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,26 @@\n-  public void close() throws IOException {\n+  public synchronized void close() throws IOException {\n+    if (closed) {\n+      return;\n+    }\n+\n     LOG.debug(\"Closing page blob output stream.\");\n     flush();\n     checkStreamState();\n     ioThreadPool.shutdown();\n     try {\n       LOG.debug(ioThreadPool.toString());\n       if (!ioThreadPool.awaitTermination(10, TimeUnit.MINUTES)) {\n         LOG.debug(\"Timed out after 10 minutes waiting for IO requests to finish\");\n         logAllStackTraces();\n         LOG.debug(ioThreadPool.toString());\n         throw new IOException(\"Timed out waiting for IO requests to finish\");\n       }\n     } catch (InterruptedException e) {\n       LOG.debug(\"Caught InterruptedException\");\n \n       // Restore the interrupted status\n       Thread.currentThread().interrupt();\n     }\n \n-    this.lastError \u003d new IOException(\"Stream is already closed.\");\n+    closed \u003d true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void close() throws IOException {\n    if (closed) {\n      return;\n    }\n\n    LOG.debug(\"Closing page blob output stream.\");\n    flush();\n    checkStreamState();\n    ioThreadPool.shutdown();\n    try {\n      LOG.debug(ioThreadPool.toString());\n      if (!ioThreadPool.awaitTermination(10, TimeUnit.MINUTES)) {\n        LOG.debug(\"Timed out after 10 minutes waiting for IO requests to finish\");\n        logAllStackTraces();\n        LOG.debug(ioThreadPool.toString());\n        throw new IOException(\"Timed out waiting for IO requests to finish\");\n      }\n    } catch (InterruptedException e) {\n      LOG.debug(\"Caught InterruptedException\");\n\n      // Restore the interrupted status\n      Thread.currentThread().interrupt();\n    }\n\n    closed \u003d true;\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/PageBlobOutputStream.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-12073. Azure FileSystem PageBlobInputStream does not return -1 on EOF. Contributed by Ivan Mitic.\n",
          "commitDate": "08/06/15 10:42 PM",
          "commitName": "c45784bc9031353b938f4756473937cca759b3dc",
          "commitAuthor": "cnauroth",
          "commitDateOld": "06/03/15 3:25 PM",
          "commitNameOld": "608ebd52bafecf980e9726d397c786a9c2422eba",
          "commitAuthorOld": "cnauroth",
          "daysBetweenCommits": 94.26,
          "commitsBetweenForRepo": 874,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,26 @@\n-  public void close() throws IOException {\n+  public synchronized void close() throws IOException {\n+    if (closed) {\n+      return;\n+    }\n+\n     LOG.debug(\"Closing page blob output stream.\");\n     flush();\n     checkStreamState();\n     ioThreadPool.shutdown();\n     try {\n       LOG.debug(ioThreadPool.toString());\n       if (!ioThreadPool.awaitTermination(10, TimeUnit.MINUTES)) {\n         LOG.debug(\"Timed out after 10 minutes waiting for IO requests to finish\");\n         logAllStackTraces();\n         LOG.debug(ioThreadPool.toString());\n         throw new IOException(\"Timed out waiting for IO requests to finish\");\n       }\n     } catch (InterruptedException e) {\n       LOG.debug(\"Caught InterruptedException\");\n \n       // Restore the interrupted status\n       Thread.currentThread().interrupt();\n     }\n \n-    this.lastError \u003d new IOException(\"Stream is already closed.\");\n+    closed \u003d true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void close() throws IOException {\n    if (closed) {\n      return;\n    }\n\n    LOG.debug(\"Closing page blob output stream.\");\n    flush();\n    checkStreamState();\n    ioThreadPool.shutdown();\n    try {\n      LOG.debug(ioThreadPool.toString());\n      if (!ioThreadPool.awaitTermination(10, TimeUnit.MINUTES)) {\n        LOG.debug(\"Timed out after 10 minutes waiting for IO requests to finish\");\n        logAllStackTraces();\n        LOG.debug(ioThreadPool.toString());\n        throw new IOException(\"Timed out waiting for IO requests to finish\");\n      }\n    } catch (InterruptedException e) {\n      LOG.debug(\"Caught InterruptedException\");\n\n      // Restore the interrupted status\n      Thread.currentThread().interrupt();\n    }\n\n    closed \u003d true;\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/PageBlobOutputStream.java",
          "extendedDetails": {}
        }
      ]
    },
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10809. hadoop-azure: page blob support. Contributed by Dexter Bradshaw, Mostafa Elhemali, Eric Hanson, and Mike Liddell.\n",
      "commitDate": "08/10/14 2:20 PM",
      "commitName": "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
      "commitAuthor": "cnauroth",
      "diff": "@@ -0,0 +1,22 @@\n+  public void close() throws IOException {\n+    LOG.debug(\"Closing page blob output stream.\");\n+    flush();\n+    checkStreamState();\n+    ioThreadPool.shutdown();\n+    try {\n+      LOG.debug(ioThreadPool.toString());\n+      if (!ioThreadPool.awaitTermination(10, TimeUnit.MINUTES)) {\n+        LOG.debug(\"Timed out after 10 minutes waiting for IO requests to finish\");\n+        logAllStackTraces();\n+        LOG.debug(ioThreadPool.toString());\n+        throw new IOException(\"Timed out waiting for IO requests to finish\");\n+      }\n+    } catch (InterruptedException e) {\n+      LOG.debug(\"Caught InterruptedException\");\n+\n+      // Restore the interrupted status\n+      Thread.currentThread().interrupt();\n+    }\n+\n+    this.lastError \u003d new IOException(\"Stream is already closed.\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void close() throws IOException {\n    LOG.debug(\"Closing page blob output stream.\");\n    flush();\n    checkStreamState();\n    ioThreadPool.shutdown();\n    try {\n      LOG.debug(ioThreadPool.toString());\n      if (!ioThreadPool.awaitTermination(10, TimeUnit.MINUTES)) {\n        LOG.debug(\"Timed out after 10 minutes waiting for IO requests to finish\");\n        logAllStackTraces();\n        LOG.debug(ioThreadPool.toString());\n        throw new IOException(\"Timed out waiting for IO requests to finish\");\n      }\n    } catch (InterruptedException e) {\n      LOG.debug(\"Caught InterruptedException\");\n\n      // Restore the interrupted status\n      Thread.currentThread().interrupt();\n    }\n\n    this.lastError \u003d new IOException(\"Stream is already closed.\");\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/PageBlobOutputStream.java"
    }
  }
}