{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogsCLI.java",
  "functionName": "getAMContainerInfoForAHSWebService",
  "functionId": "getAMContainerInfoForAHSWebService___conf-Configuration__appId-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
  "functionStartLine": 441,
  "functionEndLine": 462,
  "numCommitsSeen": 52,
  "timeTaken": 3373,
  "changeHistory": [
    "b65815d6914996fed25bd9fef4d37d00828bc664",
    "7836bc4c3533e93e7adc0c7da0659bc04bdf2494",
    "1a84c24b0cf6674fa755403971fa57d8e412b320",
    "a77d628339afaf2f5a085c73fd81a805b18348c9"
  ],
  "changeHistoryShort": {
    "b65815d6914996fed25bd9fef4d37d00828bc664": "Ybodychange",
    "7836bc4c3533e93e7adc0c7da0659bc04bdf2494": "Ybodychange",
    "1a84c24b0cf6674fa755403971fa57d8e412b320": "Ybodychange",
    "a77d628339afaf2f5a085c73fd81a805b18348c9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b65815d6914996fed25bd9fef4d37d00828bc664": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-9606. Set sslfactory for AuthenticatedURL() while creating LogsCLI#webServiceClient.\"\n\nThis reverts commit 7836bc4c3533e93e7adc0c7da0659bc04bdf2494.\n",
      "commitDate": "18/05/20 12:29 AM",
      "commitName": "b65815d6914996fed25bd9fef4d37d00828bc664",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "14/05/20 7:10 AM",
      "commitNameOld": "7836bc4c3533e93e7adc0c7da0659bc04bdf2494",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 3.72,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private List\u003cJSONObject\u003e getAMContainerInfoForAHSWebService(\n       Configuration conf, String appId) throws ClientHandlerException,\n       UniformInterfaceException, JSONException {\n     String webAppAddress \u003d\n         WebAppUtils.getHttpSchemePrefix(conf)\n             + WebAppUtils.getAHSWebAppURLWithoutScheme(conf);\n-    WebResource webResource \u003d client.resource(webAppAddress);\n+    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n \n     ClientResponse response \u003d\n         webResource.path(\"ws\").path(\"v1\").path(\"applicationhistory\")\n           .path(\"apps\").path(appId).path(\"appattempts\")\n           .accept(MediaType.APPLICATION_JSON)\n           .get(ClientResponse.class);\n     JSONObject json \u003d response.getEntity(JSONObject.class);\n     JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n     List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n     for (int i \u003d 0; i \u003c requests.length(); i++) {\n       amContainersList.add(requests.getJSONObject(i));\n     }\n     Collections.reverse(amContainersList);\n     return amContainersList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cJSONObject\u003e getAMContainerInfoForAHSWebService(\n      Configuration conf, String appId) throws ClientHandlerException,\n      UniformInterfaceException, JSONException {\n    String webAppAddress \u003d\n        WebAppUtils.getHttpSchemePrefix(conf)\n            + WebAppUtils.getAHSWebAppURLWithoutScheme(conf);\n    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n\n    ClientResponse response \u003d\n        webResource.path(\"ws\").path(\"v1\").path(\"applicationhistory\")\n          .path(\"apps\").path(appId).path(\"appattempts\")\n          .accept(MediaType.APPLICATION_JSON)\n          .get(ClientResponse.class);\n    JSONObject json \u003d response.getEntity(JSONObject.class);\n    JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n    List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n    for (int i \u003d 0; i \u003c requests.length(); i++) {\n      amContainersList.add(requests.getJSONObject(i));\n    }\n    Collections.reverse(amContainersList);\n    return amContainersList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "7836bc4c3533e93e7adc0c7da0659bc04bdf2494": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9606. Set sslfactory for AuthenticatedURL() while creating LogsCLI#webServiceClient.\n\nContributed by Bilwa S T. Reviewed by Brahma Reddy Battula.\n",
      "commitDate": "14/05/20 7:10 AM",
      "commitName": "7836bc4c3533e93e7adc0c7da0659bc04bdf2494",
      "commitAuthor": "Prabhu Joseph",
      "commitDateOld": "06/02/20 3:25 AM",
      "commitNameOld": "71b2c2ffe962ff4f5799e1f55961db687cb55842",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 98.11,
      "commitsBetweenForRepo": 336,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private List\u003cJSONObject\u003e getAMContainerInfoForAHSWebService(\n       Configuration conf, String appId) throws ClientHandlerException,\n       UniformInterfaceException, JSONException {\n     String webAppAddress \u003d\n         WebAppUtils.getHttpSchemePrefix(conf)\n             + WebAppUtils.getAHSWebAppURLWithoutScheme(conf);\n-    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n+    WebResource webResource \u003d client.resource(webAppAddress);\n \n     ClientResponse response \u003d\n         webResource.path(\"ws\").path(\"v1\").path(\"applicationhistory\")\n           .path(\"apps\").path(appId).path(\"appattempts\")\n           .accept(MediaType.APPLICATION_JSON)\n           .get(ClientResponse.class);\n     JSONObject json \u003d response.getEntity(JSONObject.class);\n     JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n     List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n     for (int i \u003d 0; i \u003c requests.length(); i++) {\n       amContainersList.add(requests.getJSONObject(i));\n     }\n     Collections.reverse(amContainersList);\n     return amContainersList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cJSONObject\u003e getAMContainerInfoForAHSWebService(\n      Configuration conf, String appId) throws ClientHandlerException,\n      UniformInterfaceException, JSONException {\n    String webAppAddress \u003d\n        WebAppUtils.getHttpSchemePrefix(conf)\n            + WebAppUtils.getAHSWebAppURLWithoutScheme(conf);\n    WebResource webResource \u003d client.resource(webAppAddress);\n\n    ClientResponse response \u003d\n        webResource.path(\"ws\").path(\"v1\").path(\"applicationhistory\")\n          .path(\"apps\").path(appId).path(\"appattempts\")\n          .accept(MediaType.APPLICATION_JSON)\n          .get(ClientResponse.class);\n    JSONObject json \u003d response.getEntity(JSONObject.class);\n    JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n    List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n    for (int i \u003d 0; i \u003c requests.length(); i++) {\n      amContainersList.add(requests.getJSONObject(i));\n    }\n    Collections.reverse(amContainersList);\n    return amContainersList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "1a84c24b0cf6674fa755403971fa57d8e412b320": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7174. Add retry logic in LogsCLI when fetch running application logs. Contributed by Xuan Gong.\n",
      "commitDate": "15/09/17 3:33 PM",
      "commitName": "1a84c24b0cf6674fa755403971fa57d8e412b320",
      "commitAuthor": "Junping Du",
      "commitDateOld": "08/09/17 3:16 PM",
      "commitNameOld": "3fddabc2fe4fbdb8ef3f9ce7558955c4f0794dcc",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 7.01,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n   private List\u003cJSONObject\u003e getAMContainerInfoForAHSWebService(\n       Configuration conf, String appId) throws ClientHandlerException,\n       UniformInterfaceException, JSONException {\n-    Client webServiceClient \u003d Client.create();\n     String webAppAddress \u003d\n         WebAppUtils.getHttpSchemePrefix(conf)\n             + WebAppUtils.getAHSWebAppURLWithoutScheme(conf);\n     WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n \n     ClientResponse response \u003d\n         webResource.path(\"ws\").path(\"v1\").path(\"applicationhistory\")\n           .path(\"apps\").path(appId).path(\"appattempts\")\n           .accept(MediaType.APPLICATION_JSON)\n           .get(ClientResponse.class);\n     JSONObject json \u003d response.getEntity(JSONObject.class);\n     JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n     List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n     for (int i \u003d 0; i \u003c requests.length(); i++) {\n       amContainersList.add(requests.getJSONObject(i));\n     }\n     Collections.reverse(amContainersList);\n     return amContainersList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cJSONObject\u003e getAMContainerInfoForAHSWebService(\n      Configuration conf, String appId) throws ClientHandlerException,\n      UniformInterfaceException, JSONException {\n    String webAppAddress \u003d\n        WebAppUtils.getHttpSchemePrefix(conf)\n            + WebAppUtils.getAHSWebAppURLWithoutScheme(conf);\n    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n\n    ClientResponse response \u003d\n        webResource.path(\"ws\").path(\"v1\").path(\"applicationhistory\")\n          .path(\"apps\").path(appId).path(\"appattempts\")\n          .accept(MediaType.APPLICATION_JSON)\n          .get(ClientResponse.class);\n    JSONObject json \u003d response.getEntity(JSONObject.class);\n    JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n    List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n    for (int i \u003d 0; i \u003c requests.length(); i++) {\n      amContainersList.add(requests.getJSONObject(i));\n    }\n    Collections.reverse(amContainersList);\n    return amContainersList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "a77d628339afaf2f5a085c73fd81a805b18348c9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3347. Improve YARN log command to get AMContainer logs as well as running containers logs. Contributed by Xuan Gong.\n",
      "commitDate": "13/04/15 5:29 PM",
      "commitName": "a77d628339afaf2f5a085c73fd81a805b18348c9",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,22 @@\n+  private List\u003cJSONObject\u003e getAMContainerInfoForAHSWebService(Configuration conf,\n+      String appId) throws ClientHandlerException, UniformInterfaceException,\n+      JSONException {\n+    Client webServiceClient \u003d Client.create();\n+    String webAppAddress \u003d\n+        WebAppUtils.getHttpSchemePrefix(conf)\n+            + WebAppUtils.getAHSWebAppURLWithoutScheme(conf);\n+    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n+\n+    ClientResponse response \u003d\n+        webResource.path(\"ws\").path(\"v1\").path(\"applicationhistory\").path(\"apps\")\n+          .path(appId).path(\"appattempts\").accept(MediaType.APPLICATION_JSON)\n+          .get(ClientResponse.class);\n+    JSONObject json \u003d response.getEntity(JSONObject.class);\n+    JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n+    List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n+    for (int i \u003d 0; i \u003c requests.length(); i++) {\n+      amContainersList.add(requests.getJSONObject(i));\n+    }\n+    Collections.reverse(amContainersList);\n+    return amContainersList;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cJSONObject\u003e getAMContainerInfoForAHSWebService(Configuration conf,\n      String appId) throws ClientHandlerException, UniformInterfaceException,\n      JSONException {\n    Client webServiceClient \u003d Client.create();\n    String webAppAddress \u003d\n        WebAppUtils.getHttpSchemePrefix(conf)\n            + WebAppUtils.getAHSWebAppURLWithoutScheme(conf);\n    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n\n    ClientResponse response \u003d\n        webResource.path(\"ws\").path(\"v1\").path(\"applicationhistory\").path(\"apps\")\n          .path(appId).path(\"appattempts\").accept(MediaType.APPLICATION_JSON)\n          .get(ClientResponse.class);\n    JSONObject json \u003d response.getEntity(JSONObject.class);\n    JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n    List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n    for (int i \u003d 0; i \u003c requests.length(); i++) {\n      amContainersList.add(requests.getJSONObject(i));\n    }\n    Collections.reverse(amContainersList);\n    return amContainersList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java"
    }
  }
}