{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Parser.java",
  "functionName": "parse",
  "functionId": "parse___ll-List__Token____conf-Configuration",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/join/Parser.java",
  "functionStartLine": 296,
  "functionEndLine": 323,
  "numCommitsSeen": 4,
  "timeTaken": 4273,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void parse(List\u003cToken\u003e ll, Configuration conf) throws IOException {\n      StringBuilder sb \u003d new StringBuilder();\n      Iterator\u003cToken\u003e i \u003d ll.iterator();\n      while (i.hasNext()) {\n        Token t \u003d i.next();\n        if (TType.COMMA.equals(t.getType())) {\n          try {\n          \tinf \u003d (InputFormat\u003c?, ?\u003e)ReflectionUtils.newInstance(\n          \t\t\tconf.getClassByName(sb.toString()), conf);\n          } catch (ClassNotFoundException e) {\n            throw new IOException(e);\n          } catch (IllegalArgumentException e) {\n            throw new IOException(e);\n          }\n          break;\n        }\n        sb.append(t.getStr());\n      }\n      if (!i.hasNext()) {\n        throw new IOException(\"Parse error\");\n      }\n      Token t \u003d i.next();\n      if (!TType.QUOT.equals(t.getType())) {\n        throw new IOException(\"Expected quoted string\");\n      }\n      indir \u003d t.getStr();\n      // no check for ll.isEmpty() to permit extension\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/join/Parser.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/join/Parser.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/join/Parser.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void parse(List\u003cToken\u003e ll, Configuration conf) throws IOException {\n      StringBuilder sb \u003d new StringBuilder();\n      Iterator\u003cToken\u003e i \u003d ll.iterator();\n      while (i.hasNext()) {\n        Token t \u003d i.next();\n        if (TType.COMMA.equals(t.getType())) {\n          try {\n          \tinf \u003d (InputFormat\u003c?, ?\u003e)ReflectionUtils.newInstance(\n          \t\t\tconf.getClassByName(sb.toString()), conf);\n          } catch (ClassNotFoundException e) {\n            throw new IOException(e);\n          } catch (IllegalArgumentException e) {\n            throw new IOException(e);\n          }\n          break;\n        }\n        sb.append(t.getStr());\n      }\n      if (!i.hasNext()) {\n        throw new IOException(\"Parse error\");\n      }\n      Token t \u003d i.next();\n      if (!TType.QUOT.equals(t.getType())) {\n        throw new IOException(\"Expected quoted string\");\n      }\n      indir \u003d t.getStr();\n      // no check for ll.isEmpty() to permit extension\n    }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/join/Parser.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/join/Parser.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/join/Parser.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,28 @@\n+    public void parse(List\u003cToken\u003e ll, Configuration conf) throws IOException {\n+      StringBuilder sb \u003d new StringBuilder();\n+      Iterator\u003cToken\u003e i \u003d ll.iterator();\n+      while (i.hasNext()) {\n+        Token t \u003d i.next();\n+        if (TType.COMMA.equals(t.getType())) {\n+          try {\n+          \tinf \u003d (InputFormat\u003c?, ?\u003e)ReflectionUtils.newInstance(\n+          \t\t\tconf.getClassByName(sb.toString()), conf);\n+          } catch (ClassNotFoundException e) {\n+            throw new IOException(e);\n+          } catch (IllegalArgumentException e) {\n+            throw new IOException(e);\n+          }\n+          break;\n+        }\n+        sb.append(t.getStr());\n+      }\n+      if (!i.hasNext()) {\n+        throw new IOException(\"Parse error\");\n+      }\n+      Token t \u003d i.next();\n+      if (!TType.QUOT.equals(t.getType())) {\n+        throw new IOException(\"Expected quoted string\");\n+      }\n+      indir \u003d t.getStr();\n+      // no check for ll.isEmpty() to permit extension\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void parse(List\u003cToken\u003e ll, Configuration conf) throws IOException {\n      StringBuilder sb \u003d new StringBuilder();\n      Iterator\u003cToken\u003e i \u003d ll.iterator();\n      while (i.hasNext()) {\n        Token t \u003d i.next();\n        if (TType.COMMA.equals(t.getType())) {\n          try {\n          \tinf \u003d (InputFormat\u003c?, ?\u003e)ReflectionUtils.newInstance(\n          \t\t\tconf.getClassByName(sb.toString()), conf);\n          } catch (ClassNotFoundException e) {\n            throw new IOException(e);\n          } catch (IllegalArgumentException e) {\n            throw new IOException(e);\n          }\n          break;\n        }\n        sb.append(t.getStr());\n      }\n      if (!i.hasNext()) {\n        throw new IOException(\"Parse error\");\n      }\n      Token t \u003d i.next();\n      if (!TType.QUOT.equals(t.getType())) {\n        throw new IOException(\"Expected quoted string\");\n      }\n      indir \u003d t.getStr();\n      // no check for ll.isEmpty() to permit extension\n    }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/join/Parser.java"
    }
  }
}