{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationHistoryManagerOnTimelineStore.java",
  "functionName": "getApplicationAttempts",
  "functionId": "getApplicationAttempts___appId-ApplicationId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java",
  "functionStartLine": 141,
  "functionEndLine": 161,
  "numCommitsSeen": 42,
  "timeTaken": 2022,
  "changeHistory": [
    "3648cb57c9f018a3a339c26f5a0ca2779485521a",
    "90a0c03f0a696d32e871a5da4560828edea8cfa9",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38"
  ],
  "changeHistoryShort": {
    "3648cb57c9f018a3a339c26f5a0ca2779485521a": "Ybodychange",
    "90a0c03f0a696d32e871a5da4560828edea8cfa9": "Ybodychange",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3648cb57c9f018a3a339c26f5a0ca2779485521a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2766. Made ApplicationHistoryManager return a sorted list of apps, attempts and containers. Contributed by Robert Kanter.\n",
      "commitDate": "13/11/14 1:47 PM",
      "commitName": "3648cb57c9f018a3a339c26f5a0ca2779485521a",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "27/10/14 10:45 AM",
      "commitNameOld": "c05b581a5522eed499d3ba16af9fa6dc694563f6",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 17.17,
      "commitsBetweenForRepo": 205,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n       getApplicationAttempts(ApplicationId appId)\n           throws YarnException, IOException {\n     ApplicationReportExt app \u003d getApplication(\n         appId, ApplicationReportField.USER_AND_ACLS);\n     checkAccess(app);\n     TimelineEntities entities \u003d timelineDataManager.getEntities(\n         AppAttemptMetricsConstants.ENTITY_TYPE,\n         new NameValuePair(\n             AppAttemptMetricsConstants.PARENT_PRIMARY_FILTER, appId\n                 .toString()), null, null, null, null, null,\n         Long.MAX_VALUE, EnumSet.allOf(Field.class),\n         UserGroupInformation.getLoginUser());\n     Map\u003cApplicationAttemptId, ApplicationAttemptReport\u003e appAttempts \u003d\n-        new HashMap\u003cApplicationAttemptId, ApplicationAttemptReport\u003e();\n+        new LinkedHashMap\u003cApplicationAttemptId, ApplicationAttemptReport\u003e();\n     for (TimelineEntity entity : entities.getEntities()) {\n       ApplicationAttemptReport appAttempt \u003d\n           convertToApplicationAttemptReport(entity);\n       appAttempts.put(appAttempt.getApplicationAttemptId(), appAttempt);\n     }\n     return appAttempts;\n   }\n\\ No newline at end of file\n",
      "actualSource": "      getApplicationAttempts(ApplicationId appId)\n          throws YarnException, IOException {\n    ApplicationReportExt app \u003d getApplication(\n        appId, ApplicationReportField.USER_AND_ACLS);\n    checkAccess(app);\n    TimelineEntities entities \u003d timelineDataManager.getEntities(\n        AppAttemptMetricsConstants.ENTITY_TYPE,\n        new NameValuePair(\n            AppAttemptMetricsConstants.PARENT_PRIMARY_FILTER, appId\n                .toString()), null, null, null, null, null,\n        Long.MAX_VALUE, EnumSet.allOf(Field.class),\n        UserGroupInformation.getLoginUser());\n    Map\u003cApplicationAttemptId, ApplicationAttemptReport\u003e appAttempts \u003d\n        new LinkedHashMap\u003cApplicationAttemptId, ApplicationAttemptReport\u003e();\n    for (TimelineEntity entity : entities.getEntities()) {\n      ApplicationAttemptReport appAttempt \u003d\n          convertToApplicationAttemptReport(entity);\n      appAttempts.put(appAttempt.getApplicationAttemptId(), appAttempt);\n    }\n    return appAttempts;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java",
      "extendedDetails": {}
    },
    "90a0c03f0a696d32e871a5da4560828edea8cfa9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1250. Generic history service should support application-acls. (Contributed by Zhijie Shen)\n",
      "commitDate": "16/09/14 6:20 PM",
      "commitName": "90a0c03f0a696d32e871a5da4560828edea8cfa9",
      "commitAuthor": "junping_du",
      "commitDateOld": "11/09/14 7:04 PM",
      "commitNameOld": "6b8b1608e64e300e4e1d23c60476febaca29ca38",
      "commitAuthorOld": "junping_du",
      "daysBetweenCommits": 4.97,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,21 @@\n       getApplicationAttempts(ApplicationId appId)\n           throws YarnException, IOException {\n+    ApplicationReportExt app \u003d getApplication(\n+        appId, ApplicationReportField.USER_AND_ACLS);\n+    checkAccess(app);\n     TimelineEntities entities \u003d timelineDataManager.getEntities(\n         AppAttemptMetricsConstants.ENTITY_TYPE,\n         new NameValuePair(\n             AppAttemptMetricsConstants.PARENT_PRIMARY_FILTER, appId\n                 .toString()), null, null, null, null, null,\n         Long.MAX_VALUE, EnumSet.allOf(Field.class),\n         UserGroupInformation.getLoginUser());\n     Map\u003cApplicationAttemptId, ApplicationAttemptReport\u003e appAttempts \u003d\n         new HashMap\u003cApplicationAttemptId, ApplicationAttemptReport\u003e();\n-    if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n-      for (TimelineEntity entity : entities.getEntities()) {\n-        ApplicationAttemptReport appAttempt \u003d\n-            convertToApplicationAttemptReport(entity);\n-        appAttempts.put(appAttempt.getApplicationAttemptId(), appAttempt);\n-      }\n-    } else {\n-      // It is likely that the attemtps are not found due to non-existing\n-      // application. In this case, we need to throw ApplicationNotFoundException.\n-      getApplication(appId, ApplicationReportField.NONE);\n+    for (TimelineEntity entity : entities.getEntities()) {\n+      ApplicationAttemptReport appAttempt \u003d\n+          convertToApplicationAttemptReport(entity);\n+      appAttempts.put(appAttempt.getApplicationAttemptId(), appAttempt);\n     }\n     return appAttempts;\n   }\n\\ No newline at end of file\n",
      "actualSource": "      getApplicationAttempts(ApplicationId appId)\n          throws YarnException, IOException {\n    ApplicationReportExt app \u003d getApplication(\n        appId, ApplicationReportField.USER_AND_ACLS);\n    checkAccess(app);\n    TimelineEntities entities \u003d timelineDataManager.getEntities(\n        AppAttemptMetricsConstants.ENTITY_TYPE,\n        new NameValuePair(\n            AppAttemptMetricsConstants.PARENT_PRIMARY_FILTER, appId\n                .toString()), null, null, null, null, null,\n        Long.MAX_VALUE, EnumSet.allOf(Field.class),\n        UserGroupInformation.getLoginUser());\n    Map\u003cApplicationAttemptId, ApplicationAttemptReport\u003e appAttempts \u003d\n        new HashMap\u003cApplicationAttemptId, ApplicationAttemptReport\u003e();\n    for (TimelineEntity entity : entities.getEntities()) {\n      ApplicationAttemptReport appAttempt \u003d\n          convertToApplicationAttemptReport(entity);\n      appAttempts.put(appAttempt.getApplicationAttemptId(), appAttempt);\n    }\n    return appAttempts;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java",
      "extendedDetails": {}
    },
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2033. Merging generic-history into the Timeline Store (Contributed by Zhijie Shen)\n",
      "commitDate": "11/09/14 7:04 PM",
      "commitName": "6b8b1608e64e300e4e1d23c60476febaca29ca38",
      "commitAuthor": "junping_du",
      "diff": "@@ -0,0 +1,24 @@\n+      getApplicationAttempts(ApplicationId appId)\n+          throws YarnException, IOException {\n+    TimelineEntities entities \u003d timelineDataManager.getEntities(\n+        AppAttemptMetricsConstants.ENTITY_TYPE,\n+        new NameValuePair(\n+            AppAttemptMetricsConstants.PARENT_PRIMARY_FILTER, appId\n+                .toString()), null, null, null, null, null,\n+        Long.MAX_VALUE, EnumSet.allOf(Field.class),\n+        UserGroupInformation.getLoginUser());\n+    Map\u003cApplicationAttemptId, ApplicationAttemptReport\u003e appAttempts \u003d\n+        new HashMap\u003cApplicationAttemptId, ApplicationAttemptReport\u003e();\n+    if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n+      for (TimelineEntity entity : entities.getEntities()) {\n+        ApplicationAttemptReport appAttempt \u003d\n+            convertToApplicationAttemptReport(entity);\n+        appAttempts.put(appAttempt.getApplicationAttemptId(), appAttempt);\n+      }\n+    } else {\n+      // It is likely that the attemtps are not found due to non-existing\n+      // application. In this case, we need to throw ApplicationNotFoundException.\n+      getApplication(appId, ApplicationReportField.NONE);\n+    }\n+    return appAttempts;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "      getApplicationAttempts(ApplicationId appId)\n          throws YarnException, IOException {\n    TimelineEntities entities \u003d timelineDataManager.getEntities(\n        AppAttemptMetricsConstants.ENTITY_TYPE,\n        new NameValuePair(\n            AppAttemptMetricsConstants.PARENT_PRIMARY_FILTER, appId\n                .toString()), null, null, null, null, null,\n        Long.MAX_VALUE, EnumSet.allOf(Field.class),\n        UserGroupInformation.getLoginUser());\n    Map\u003cApplicationAttemptId, ApplicationAttemptReport\u003e appAttempts \u003d\n        new HashMap\u003cApplicationAttemptId, ApplicationAttemptReport\u003e();\n    if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n      for (TimelineEntity entity : entities.getEntities()) {\n        ApplicationAttemptReport appAttempt \u003d\n            convertToApplicationAttemptReport(entity);\n        appAttempts.put(appAttempt.getApplicationAttemptId(), appAttempt);\n      }\n    } else {\n      // It is likely that the attemtps are not found due to non-existing\n      // application. In this case, we need to throw ApplicationNotFoundException.\n      getApplication(appId, ApplicationReportField.NONE);\n    }\n    return appAttempts;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java"
    }
  }
}