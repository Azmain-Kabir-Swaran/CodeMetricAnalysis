{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationPolicyUtils.java",
  "functionName": "instantiatePolicyManager",
  "functionId": "instantiatePolicyManager___newType-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/FederationPolicyUtils.java",
  "functionStartLine": 67,
  "functionEndLine": 82,
  "numCommitsSeen": 7,
  "timeTaken": 1953,
  "changeHistory": [
    "70b1a757f13b01a9192ea5fb0820ba7babfd974e",
    "083a05bc1420d6d6aa30d98ab48c2ed8ead5b810"
  ],
  "changeHistoryShort": {
    "70b1a757f13b01a9192ea5fb0820ba7babfd974e": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "083a05bc1420d6d6aa30d98ab48c2ed8ead5b810": "Yintroduced"
  },
  "changeHistoryDetails": {
    "70b1a757f13b01a9192ea5fb0820ba7babfd974e": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-6511. Federation: transparently spanning application across multiple sub-clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 8c988d235eaf0972783985b1ab24680d029aea79)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "70b1a757f13b01a9192ea5fb0820ba7babfd974e",
      "commitAuthor": "Subru Krishnan",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-6511. Federation: transparently spanning application across multiple sub-clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 8c988d235eaf0972783985b1ab24680d029aea79)\n",
          "commitDate": "01/08/17 5:28 PM",
          "commitName": "70b1a757f13b01a9192ea5fb0820ba7babfd974e",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "01/08/17 5:28 PM",
          "commitNameOld": "bed1832c934fe4ba44efdcdc49fce06457dc3d4f",
          "commitAuthorOld": "Subru Krishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  private static FederationPolicyManager instantiatePolicyManager(\n-      String newType) throws FederationPolicyInitializationException {\n+  public static FederationPolicyManager instantiatePolicyManager(String newType)\n+      throws FederationPolicyInitializationException {\n     FederationPolicyManager federationPolicyManager \u003d null;\n     try {\n       // create policy instance and set queue\n-      Class c \u003d Class.forName(newType);\n+      Class\u003c?\u003e c \u003d Class.forName(newType);\n       federationPolicyManager \u003d (FederationPolicyManager) c.newInstance();\n     } catch (ClassNotFoundException e) {\n       throw new FederationPolicyInitializationException(e);\n     } catch (InstantiationException e) {\n       throw new FederationPolicyInitializationException(e);\n     } catch (IllegalAccessException e) {\n       throw new FederationPolicyInitializationException(e);\n     }\n     return federationPolicyManager;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static FederationPolicyManager instantiatePolicyManager(String newType)\n      throws FederationPolicyInitializationException {\n    FederationPolicyManager federationPolicyManager \u003d null;\n    try {\n      // create policy instance and set queue\n      Class\u003c?\u003e c \u003d Class.forName(newType);\n      federationPolicyManager \u003d (FederationPolicyManager) c.newInstance();\n    } catch (ClassNotFoundException e) {\n      throw new FederationPolicyInitializationException(e);\n    } catch (InstantiationException e) {\n      throw new FederationPolicyInitializationException(e);\n    } catch (IllegalAccessException e) {\n      throw new FederationPolicyInitializationException(e);\n    }\n    return federationPolicyManager;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/FederationPolicyUtils.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/RouterPolicyFacade.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/FederationPolicyUtils.java",
            "oldMethodName": "instantiatePolicyManager",
            "newMethodName": "instantiatePolicyManager"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-6511. Federation: transparently spanning application across multiple sub-clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 8c988d235eaf0972783985b1ab24680d029aea79)\n",
          "commitDate": "01/08/17 5:28 PM",
          "commitName": "70b1a757f13b01a9192ea5fb0820ba7babfd974e",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "01/08/17 5:28 PM",
          "commitNameOld": "bed1832c934fe4ba44efdcdc49fce06457dc3d4f",
          "commitAuthorOld": "Subru Krishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  private static FederationPolicyManager instantiatePolicyManager(\n-      String newType) throws FederationPolicyInitializationException {\n+  public static FederationPolicyManager instantiatePolicyManager(String newType)\n+      throws FederationPolicyInitializationException {\n     FederationPolicyManager federationPolicyManager \u003d null;\n     try {\n       // create policy instance and set queue\n-      Class c \u003d Class.forName(newType);\n+      Class\u003c?\u003e c \u003d Class.forName(newType);\n       federationPolicyManager \u003d (FederationPolicyManager) c.newInstance();\n     } catch (ClassNotFoundException e) {\n       throw new FederationPolicyInitializationException(e);\n     } catch (InstantiationException e) {\n       throw new FederationPolicyInitializationException(e);\n     } catch (IllegalAccessException e) {\n       throw new FederationPolicyInitializationException(e);\n     }\n     return federationPolicyManager;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static FederationPolicyManager instantiatePolicyManager(String newType)\n      throws FederationPolicyInitializationException {\n    FederationPolicyManager federationPolicyManager \u003d null;\n    try {\n      // create policy instance and set queue\n      Class\u003c?\u003e c \u003d Class.forName(newType);\n      federationPolicyManager \u003d (FederationPolicyManager) c.newInstance();\n    } catch (ClassNotFoundException e) {\n      throw new FederationPolicyInitializationException(e);\n    } catch (InstantiationException e) {\n      throw new FederationPolicyInitializationException(e);\n    } catch (IllegalAccessException e) {\n      throw new FederationPolicyInitializationException(e);\n    }\n    return federationPolicyManager;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/FederationPolicyUtils.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6511. Federation: transparently spanning application across multiple sub-clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 8c988d235eaf0972783985b1ab24680d029aea79)\n",
          "commitDate": "01/08/17 5:28 PM",
          "commitName": "70b1a757f13b01a9192ea5fb0820ba7babfd974e",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "01/08/17 5:28 PM",
          "commitNameOld": "bed1832c934fe4ba44efdcdc49fce06457dc3d4f",
          "commitAuthorOld": "Subru Krishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  private static FederationPolicyManager instantiatePolicyManager(\n-      String newType) throws FederationPolicyInitializationException {\n+  public static FederationPolicyManager instantiatePolicyManager(String newType)\n+      throws FederationPolicyInitializationException {\n     FederationPolicyManager federationPolicyManager \u003d null;\n     try {\n       // create policy instance and set queue\n-      Class c \u003d Class.forName(newType);\n+      Class\u003c?\u003e c \u003d Class.forName(newType);\n       federationPolicyManager \u003d (FederationPolicyManager) c.newInstance();\n     } catch (ClassNotFoundException e) {\n       throw new FederationPolicyInitializationException(e);\n     } catch (InstantiationException e) {\n       throw new FederationPolicyInitializationException(e);\n     } catch (IllegalAccessException e) {\n       throw new FederationPolicyInitializationException(e);\n     }\n     return federationPolicyManager;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static FederationPolicyManager instantiatePolicyManager(String newType)\n      throws FederationPolicyInitializationException {\n    FederationPolicyManager federationPolicyManager \u003d null;\n    try {\n      // create policy instance and set queue\n      Class\u003c?\u003e c \u003d Class.forName(newType);\n      federationPolicyManager \u003d (FederationPolicyManager) c.newInstance();\n    } catch (ClassNotFoundException e) {\n      throw new FederationPolicyInitializationException(e);\n    } catch (InstantiationException e) {\n      throw new FederationPolicyInitializationException(e);\n    } catch (IllegalAccessException e) {\n      throw new FederationPolicyInitializationException(e);\n    }\n    return federationPolicyManager;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/FederationPolicyUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "083a05bc1420d6d6aa30d98ab48c2ed8ead5b810": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5634. Simplify initialization/use of RouterPolicy via a RouterPolicyFacade. (Carlo Curino via Subru).\n\n(cherry picked from commit d7672ce2bddb40fbaa77d3f6fec8c99f5589177f)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "083a05bc1420d6d6aa30d98ab48c2ed8ead5b810",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,16 @@\n+  private static FederationPolicyManager instantiatePolicyManager(\n+      String newType) throws FederationPolicyInitializationException {\n+    FederationPolicyManager federationPolicyManager \u003d null;\n+    try {\n+      // create policy instance and set queue\n+      Class c \u003d Class.forName(newType);\n+      federationPolicyManager \u003d (FederationPolicyManager) c.newInstance();\n+    } catch (ClassNotFoundException e) {\n+      throw new FederationPolicyInitializationException(e);\n+    } catch (InstantiationException e) {\n+      throw new FederationPolicyInitializationException(e);\n+    } catch (IllegalAccessException e) {\n+      throw new FederationPolicyInitializationException(e);\n+    }\n+    return federationPolicyManager;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static FederationPolicyManager instantiatePolicyManager(\n      String newType) throws FederationPolicyInitializationException {\n    FederationPolicyManager federationPolicyManager \u003d null;\n    try {\n      // create policy instance and set queue\n      Class c \u003d Class.forName(newType);\n      federationPolicyManager \u003d (FederationPolicyManager) c.newInstance();\n    } catch (ClassNotFoundException e) {\n      throw new FederationPolicyInitializationException(e);\n    } catch (InstantiationException e) {\n      throw new FederationPolicyInitializationException(e);\n    } catch (IllegalAccessException e) {\n      throw new FederationPolicyInitializationException(e);\n    }\n    return federationPolicyManager;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/RouterPolicyFacade.java"
    }
  }
}