{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogsCLI.java",
  "functionName": "getClientResponseFromTimelineReader",
  "functionId": "getClientResponseFromTimelineReader___conf-Configuration__appId-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
  "functionStartLine": 793,
  "functionEndLine": 819,
  "numCommitsSeen": 52,
  "timeTaken": 2108,
  "changeHistory": [
    "b65815d6914996fed25bd9fef4d37d00828bc664",
    "7836bc4c3533e93e7adc0c7da0659bc04bdf2494",
    "b3a052d199ff71da042029f27979a5323d3a6981"
  ],
  "changeHistoryShort": {
    "b65815d6914996fed25bd9fef4d37d00828bc664": "Ybodychange",
    "7836bc4c3533e93e7adc0c7da0659bc04bdf2494": "Ybodychange",
    "b3a052d199ff71da042029f27979a5323d3a6981": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b65815d6914996fed25bd9fef4d37d00828bc664": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-9606. Set sslfactory for AuthenticatedURL() while creating LogsCLI#webServiceClient.\"\n\nThis reverts commit 7836bc4c3533e93e7adc0c7da0659bc04bdf2494.\n",
      "commitDate": "18/05/20 12:29 AM",
      "commitName": "b65815d6914996fed25bd9fef4d37d00828bc664",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "14/05/20 7:10 AM",
      "commitNameOld": "7836bc4c3533e93e7adc0c7da0659bc04bdf2494",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 3.72,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   protected ClientResponse getClientResponseFromTimelineReader(\n       Configuration conf, String appId) throws IOException {\n     String webAppAddress \u003d WebAppUtils.getHttpSchemePrefix(conf) + WebAppUtils\n         .getTimelineReaderWebAppURLWithoutScheme(conf);\n-    WebResource webResource \u003d client.resource(webAppAddress);\n+    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n \n     ClientResponse response \u003d\n         webResource.path(\"ws\").path(\"v2\").path(\"timeline\").path(\"clusters\")\n             .path(conf.get(YarnConfiguration.RM_CLUSTER_ID)).path(\"apps\")\n             .path(appId).path(\"entities\")\n             .path(TimelineEntityType.YARN_APPLICATION_ATTEMPT.toString())\n             .queryParam(\"fields\", \"INFO\").accept(MediaType.APPLICATION_JSON)\n             .get(ClientResponse.class);\n \n     if (response \u003d\u003d null\n         || response.getStatusInfo().getStatusCode() !\u003d ClientResponse.Status.OK\n         .getStatusCode()) {\n       String msg \u003d\n           \"Response from the timeline reader server is \" + ((response \u003d\u003d null) ?\n               \"null\" :\n               \"not successful,\" + \" HTTP error code: \" + response.getStatus()\n                   + \", Server response:\\n\" + response.getEntity(String.class));\n       System.out.println(msg);\n       throw new IOException(msg);\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected ClientResponse getClientResponseFromTimelineReader(\n      Configuration conf, String appId) throws IOException {\n    String webAppAddress \u003d WebAppUtils.getHttpSchemePrefix(conf) + WebAppUtils\n        .getTimelineReaderWebAppURLWithoutScheme(conf);\n    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n\n    ClientResponse response \u003d\n        webResource.path(\"ws\").path(\"v2\").path(\"timeline\").path(\"clusters\")\n            .path(conf.get(YarnConfiguration.RM_CLUSTER_ID)).path(\"apps\")\n            .path(appId).path(\"entities\")\n            .path(TimelineEntityType.YARN_APPLICATION_ATTEMPT.toString())\n            .queryParam(\"fields\", \"INFO\").accept(MediaType.APPLICATION_JSON)\n            .get(ClientResponse.class);\n\n    if (response \u003d\u003d null\n        || response.getStatusInfo().getStatusCode() !\u003d ClientResponse.Status.OK\n        .getStatusCode()) {\n      String msg \u003d\n          \"Response from the timeline reader server is \" + ((response \u003d\u003d null) ?\n              \"null\" :\n              \"not successful,\" + \" HTTP error code: \" + response.getStatus()\n                  + \", Server response:\\n\" + response.getEntity(String.class));\n      System.out.println(msg);\n      throw new IOException(msg);\n    }\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "7836bc4c3533e93e7adc0c7da0659bc04bdf2494": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9606. Set sslfactory for AuthenticatedURL() while creating LogsCLI#webServiceClient.\n\nContributed by Bilwa S T. Reviewed by Brahma Reddy Battula.\n",
      "commitDate": "14/05/20 7:10 AM",
      "commitName": "7836bc4c3533e93e7adc0c7da0659bc04bdf2494",
      "commitAuthor": "Prabhu Joseph",
      "commitDateOld": "06/02/20 3:25 AM",
      "commitNameOld": "71b2c2ffe962ff4f5799e1f55961db687cb55842",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 98.11,
      "commitsBetweenForRepo": 336,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   protected ClientResponse getClientResponseFromTimelineReader(\n       Configuration conf, String appId) throws IOException {\n     String webAppAddress \u003d WebAppUtils.getHttpSchemePrefix(conf) + WebAppUtils\n         .getTimelineReaderWebAppURLWithoutScheme(conf);\n-    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n+    WebResource webResource \u003d client.resource(webAppAddress);\n \n     ClientResponse response \u003d\n         webResource.path(\"ws\").path(\"v2\").path(\"timeline\").path(\"clusters\")\n             .path(conf.get(YarnConfiguration.RM_CLUSTER_ID)).path(\"apps\")\n             .path(appId).path(\"entities\")\n             .path(TimelineEntityType.YARN_APPLICATION_ATTEMPT.toString())\n             .queryParam(\"fields\", \"INFO\").accept(MediaType.APPLICATION_JSON)\n             .get(ClientResponse.class);\n \n     if (response \u003d\u003d null\n         || response.getStatusInfo().getStatusCode() !\u003d ClientResponse.Status.OK\n         .getStatusCode()) {\n       String msg \u003d\n           \"Response from the timeline reader server is \" + ((response \u003d\u003d null) ?\n               \"null\" :\n               \"not successful,\" + \" HTTP error code: \" + response.getStatus()\n                   + \", Server response:\\n\" + response.getEntity(String.class));\n       System.out.println(msg);\n       throw new IOException(msg);\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected ClientResponse getClientResponseFromTimelineReader(\n      Configuration conf, String appId) throws IOException {\n    String webAppAddress \u003d WebAppUtils.getHttpSchemePrefix(conf) + WebAppUtils\n        .getTimelineReaderWebAppURLWithoutScheme(conf);\n    WebResource webResource \u003d client.resource(webAppAddress);\n\n    ClientResponse response \u003d\n        webResource.path(\"ws\").path(\"v2\").path(\"timeline\").path(\"clusters\")\n            .path(conf.get(YarnConfiguration.RM_CLUSTER_ID)).path(\"apps\")\n            .path(appId).path(\"entities\")\n            .path(TimelineEntityType.YARN_APPLICATION_ATTEMPT.toString())\n            .queryParam(\"fields\", \"INFO\").accept(MediaType.APPLICATION_JSON)\n            .get(ClientResponse.class);\n\n    if (response \u003d\u003d null\n        || response.getStatusInfo().getStatusCode() !\u003d ClientResponse.Status.OK\n        .getStatusCode()) {\n      String msg \u003d\n          \"Response from the timeline reader server is \" + ((response \u003d\u003d null) ?\n              \"null\" :\n              \"not successful,\" + \" HTTP error code: \" + response.getStatus()\n                  + \", Server response:\\n\" + response.getEntity(String.class));\n      System.out.println(msg);\n      throw new IOException(msg);\n    }\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "b3a052d199ff71da042029f27979a5323d3a6981": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9044. LogsCLI should contact ATSv2 for -am option. Contributed by Rohith Sharma K S\n",
      "commitDate": "28/11/18 12:46 AM",
      "commitName": "b3a052d199ff71da042029f27979a5323d3a6981",
      "commitAuthor": "Suma Shivaprasad",
      "diff": "@@ -0,0 +1,27 @@\n+  protected ClientResponse getClientResponseFromTimelineReader(\n+      Configuration conf, String appId) throws IOException {\n+    String webAppAddress \u003d WebAppUtils.getHttpSchemePrefix(conf) + WebAppUtils\n+        .getTimelineReaderWebAppURLWithoutScheme(conf);\n+    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n+\n+    ClientResponse response \u003d\n+        webResource.path(\"ws\").path(\"v2\").path(\"timeline\").path(\"clusters\")\n+            .path(conf.get(YarnConfiguration.RM_CLUSTER_ID)).path(\"apps\")\n+            .path(appId).path(\"entities\")\n+            .path(TimelineEntityType.YARN_APPLICATION_ATTEMPT.toString())\n+            .queryParam(\"fields\", \"INFO\").accept(MediaType.APPLICATION_JSON)\n+            .get(ClientResponse.class);\n+\n+    if (response \u003d\u003d null\n+        || response.getStatusInfo().getStatusCode() !\u003d ClientResponse.Status.OK\n+        .getStatusCode()) {\n+      String msg \u003d\n+          \"Response from the timeline reader server is \" + ((response \u003d\u003d null) ?\n+              \"null\" :\n+              \"not successful,\" + \" HTTP error code: \" + response.getStatus()\n+                  + \", Server response:\\n\" + response.getEntity(String.class));\n+      System.out.println(msg);\n+      throw new IOException(msg);\n+    }\n+    return response;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected ClientResponse getClientResponseFromTimelineReader(\n      Configuration conf, String appId) throws IOException {\n    String webAppAddress \u003d WebAppUtils.getHttpSchemePrefix(conf) + WebAppUtils\n        .getTimelineReaderWebAppURLWithoutScheme(conf);\n    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n\n    ClientResponse response \u003d\n        webResource.path(\"ws\").path(\"v2\").path(\"timeline\").path(\"clusters\")\n            .path(conf.get(YarnConfiguration.RM_CLUSTER_ID)).path(\"apps\")\n            .path(appId).path(\"entities\")\n            .path(TimelineEntityType.YARN_APPLICATION_ATTEMPT.toString())\n            .queryParam(\"fields\", \"INFO\").accept(MediaType.APPLICATION_JSON)\n            .get(ClientResponse.class);\n\n    if (response \u003d\u003d null\n        || response.getStatusInfo().getStatusCode() !\u003d ClientResponse.Status.OK\n        .getStatusCode()) {\n      String msg \u003d\n          \"Response from the timeline reader server is \" + ((response \u003d\u003d null) ?\n              \"null\" :\n              \"not successful,\" + \" HTTP error code: \" + response.getStatus()\n                  + \", Server response:\\n\" + response.getEntity(String.class));\n      System.out.println(msg);\n      throw new IOException(msg);\n    }\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java"
    }
  }
}