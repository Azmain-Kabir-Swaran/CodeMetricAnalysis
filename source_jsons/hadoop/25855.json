{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMContainerAllocator.java",
  "functionName": "assignContainers",
  "functionId": "assignContainers___allocatedContainers-List__Container__",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
  "functionStartLine": 1317,
  "functionEndLine": 1329,
  "numCommitsSeen": 105,
  "timeTaken": 8188,
  "changeHistory": [
    "28c308d5e81432b79f9c9e14df316a52cc7ba48f",
    "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce",
    "1e6dfa7472ad78a252d05c8ebffe086d938b61fa",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "28c308d5e81432b79f9c9e14df316a52cc7ba48f": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce": "Ybodychange",
    "1e6dfa7472ad78a252d05c8ebffe086d938b61fa": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "28c308d5e81432b79f9c9e14df316a52cc7ba48f": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "MAPREDUCE-4893. Fixed MR ApplicationMaster to do optimal assignment of containers to get maximum locality. Contributed by Bikas Saha.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1440749 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/01/13 4:28 PM",
      "commitName": "28c308d5e81432b79f9c9e14df316a52cc7ba48f",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "MAPREDUCE-4893. Fixed MR ApplicationMaster to do optimal assignment of containers to get maximum locality. Contributed by Bikas Saha.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1440749 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/01/13 4:28 PM",
          "commitName": "28c308d5e81432b79f9c9e14df316a52cc7ba48f",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "28/01/13 4:21 PM",
          "commitNameOld": "c163dc2fce10c1f4f4def6f079069b1bae901fcd",
          "commitAuthorOld": "Siddharth Seth",
          "daysBetweenCommits": 2.0,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,13 @@\n-    private ContainerRequest assign(Container allocated) {\n-      ContainerRequest assigned \u003d null;\n-      \n-      Priority priority \u003d allocated.getPriority();\n-      if (PRIORITY_FAST_FAIL_MAP.equals(priority)) {\n-        LOG.info(\"Assigning container \" + allocated + \" to fast fail map\");\n-        assigned \u003d assignToFailedMap(allocated);\n-      } else if (PRIORITY_REDUCE.equals(priority)) {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Assigning container \" + allocated + \" to reduce\");\n+    private void assignContainers(List\u003cContainer\u003e allocatedContainers) {\n+      Iterator\u003cContainer\u003e it \u003d allocatedContainers.iterator();\n+      while (it.hasNext()) {\n+        Container allocated \u003d it.next();\n+        ContainerRequest assigned \u003d assignWithoutLocality(allocated);\n+        if (assigned !\u003d null) {\n+          containerAssigned(allocated, assigned);\n+          it.remove();\n         }\n-        assigned \u003d assignToReduce(allocated);\n-      } else if (PRIORITY_MAP.equals(priority)) {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Assigning container \" + allocated + \" to map\");\n-        }\n-        assigned \u003d assignToMap(allocated);\n-      } else {\n-        LOG.warn(\"Container allocated at unwanted priority: \" + priority + \n-            \". Returning to RM...\");\n       }\n-        \n-      return assigned;\n+\n+      assignMapsWithLocality(allocatedContainers);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void assignContainers(List\u003cContainer\u003e allocatedContainers) {\n      Iterator\u003cContainer\u003e it \u003d allocatedContainers.iterator();\n      while (it.hasNext()) {\n        Container allocated \u003d it.next();\n        ContainerRequest assigned \u003d assignWithoutLocality(allocated);\n        if (assigned !\u003d null) {\n          containerAssigned(allocated, assigned);\n          it.remove();\n        }\n      }\n\n      assignMapsWithLocality(allocatedContainers);\n    }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
          "extendedDetails": {
            "oldValue": "assign",
            "newValue": "assignContainers"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-4893. Fixed MR ApplicationMaster to do optimal assignment of containers to get maximum locality. Contributed by Bikas Saha.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1440749 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/01/13 4:28 PM",
          "commitName": "28c308d5e81432b79f9c9e14df316a52cc7ba48f",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "28/01/13 4:21 PM",
          "commitNameOld": "c163dc2fce10c1f4f4def6f079069b1bae901fcd",
          "commitAuthorOld": "Siddharth Seth",
          "daysBetweenCommits": 2.0,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,13 @@\n-    private ContainerRequest assign(Container allocated) {\n-      ContainerRequest assigned \u003d null;\n-      \n-      Priority priority \u003d allocated.getPriority();\n-      if (PRIORITY_FAST_FAIL_MAP.equals(priority)) {\n-        LOG.info(\"Assigning container \" + allocated + \" to fast fail map\");\n-        assigned \u003d assignToFailedMap(allocated);\n-      } else if (PRIORITY_REDUCE.equals(priority)) {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Assigning container \" + allocated + \" to reduce\");\n+    private void assignContainers(List\u003cContainer\u003e allocatedContainers) {\n+      Iterator\u003cContainer\u003e it \u003d allocatedContainers.iterator();\n+      while (it.hasNext()) {\n+        Container allocated \u003d it.next();\n+        ContainerRequest assigned \u003d assignWithoutLocality(allocated);\n+        if (assigned !\u003d null) {\n+          containerAssigned(allocated, assigned);\n+          it.remove();\n         }\n-        assigned \u003d assignToReduce(allocated);\n-      } else if (PRIORITY_MAP.equals(priority)) {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Assigning container \" + allocated + \" to map\");\n-        }\n-        assigned \u003d assignToMap(allocated);\n-      } else {\n-        LOG.warn(\"Container allocated at unwanted priority: \" + priority + \n-            \". Returning to RM...\");\n       }\n-        \n-      return assigned;\n+\n+      assignMapsWithLocality(allocatedContainers);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void assignContainers(List\u003cContainer\u003e allocatedContainers) {\n      Iterator\u003cContainer\u003e it \u003d allocatedContainers.iterator();\n      while (it.hasNext()) {\n        Container allocated \u003d it.next();\n        ContainerRequest assigned \u003d assignWithoutLocality(allocated);\n        if (assigned !\u003d null) {\n          containerAssigned(allocated, assigned);\n          it.remove();\n        }\n      }\n\n      assignMapsWithLocality(allocatedContainers);\n    }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
          "extendedDetails": {
            "oldValue": "[allocated-Container]",
            "newValue": "[allocatedContainers-List\u003cContainer\u003e]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "MAPREDUCE-4893. Fixed MR ApplicationMaster to do optimal assignment of containers to get maximum locality. Contributed by Bikas Saha.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1440749 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/01/13 4:28 PM",
          "commitName": "28c308d5e81432b79f9c9e14df316a52cc7ba48f",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "28/01/13 4:21 PM",
          "commitNameOld": "c163dc2fce10c1f4f4def6f079069b1bae901fcd",
          "commitAuthorOld": "Siddharth Seth",
          "daysBetweenCommits": 2.0,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,13 @@\n-    private ContainerRequest assign(Container allocated) {\n-      ContainerRequest assigned \u003d null;\n-      \n-      Priority priority \u003d allocated.getPriority();\n-      if (PRIORITY_FAST_FAIL_MAP.equals(priority)) {\n-        LOG.info(\"Assigning container \" + allocated + \" to fast fail map\");\n-        assigned \u003d assignToFailedMap(allocated);\n-      } else if (PRIORITY_REDUCE.equals(priority)) {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Assigning container \" + allocated + \" to reduce\");\n+    private void assignContainers(List\u003cContainer\u003e allocatedContainers) {\n+      Iterator\u003cContainer\u003e it \u003d allocatedContainers.iterator();\n+      while (it.hasNext()) {\n+        Container allocated \u003d it.next();\n+        ContainerRequest assigned \u003d assignWithoutLocality(allocated);\n+        if (assigned !\u003d null) {\n+          containerAssigned(allocated, assigned);\n+          it.remove();\n         }\n-        assigned \u003d assignToReduce(allocated);\n-      } else if (PRIORITY_MAP.equals(priority)) {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Assigning container \" + allocated + \" to map\");\n-        }\n-        assigned \u003d assignToMap(allocated);\n-      } else {\n-        LOG.warn(\"Container allocated at unwanted priority: \" + priority + \n-            \". Returning to RM...\");\n       }\n-        \n-      return assigned;\n+\n+      assignMapsWithLocality(allocatedContainers);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void assignContainers(List\u003cContainer\u003e allocatedContainers) {\n      Iterator\u003cContainer\u003e it \u003d allocatedContainers.iterator();\n      while (it.hasNext()) {\n        Container allocated \u003d it.next();\n        ContainerRequest assigned \u003d assignWithoutLocality(allocated);\n        if (assigned !\u003d null) {\n          containerAssigned(allocated, assigned);\n          it.remove();\n        }\n      }\n\n      assignMapsWithLocality(allocatedContainers);\n    }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
          "extendedDetails": {
            "oldValue": "ContainerRequest",
            "newValue": "void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-4893. Fixed MR ApplicationMaster to do optimal assignment of containers to get maximum locality. Contributed by Bikas Saha.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1440749 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/01/13 4:28 PM",
          "commitName": "28c308d5e81432b79f9c9e14df316a52cc7ba48f",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "28/01/13 4:21 PM",
          "commitNameOld": "c163dc2fce10c1f4f4def6f079069b1bae901fcd",
          "commitAuthorOld": "Siddharth Seth",
          "daysBetweenCommits": 2.0,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,13 @@\n-    private ContainerRequest assign(Container allocated) {\n-      ContainerRequest assigned \u003d null;\n-      \n-      Priority priority \u003d allocated.getPriority();\n-      if (PRIORITY_FAST_FAIL_MAP.equals(priority)) {\n-        LOG.info(\"Assigning container \" + allocated + \" to fast fail map\");\n-        assigned \u003d assignToFailedMap(allocated);\n-      } else if (PRIORITY_REDUCE.equals(priority)) {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Assigning container \" + allocated + \" to reduce\");\n+    private void assignContainers(List\u003cContainer\u003e allocatedContainers) {\n+      Iterator\u003cContainer\u003e it \u003d allocatedContainers.iterator();\n+      while (it.hasNext()) {\n+        Container allocated \u003d it.next();\n+        ContainerRequest assigned \u003d assignWithoutLocality(allocated);\n+        if (assigned !\u003d null) {\n+          containerAssigned(allocated, assigned);\n+          it.remove();\n         }\n-        assigned \u003d assignToReduce(allocated);\n-      } else if (PRIORITY_MAP.equals(priority)) {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Assigning container \" + allocated + \" to map\");\n-        }\n-        assigned \u003d assignToMap(allocated);\n-      } else {\n-        LOG.warn(\"Container allocated at unwanted priority: \" + priority + \n-            \". Returning to RM...\");\n       }\n-        \n-      return assigned;\n+\n+      assignMapsWithLocality(allocatedContainers);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void assignContainers(List\u003cContainer\u003e allocatedContainers) {\n      Iterator\u003cContainer\u003e it \u003d allocatedContainers.iterator();\n      while (it.hasNext()) {\n        Container allocated \u003d it.next();\n        ContainerRequest assigned \u003d assignWithoutLocality(allocated);\n        if (assigned !\u003d null) {\n          containerAssigned(allocated, assigned);\n          it.remove();\n        }\n      }\n\n      assignMapsWithLocality(allocatedContainers);\n    }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
          "extendedDetails": {}
        }
      ]
    },
    "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3810. Performance tweaks - reduced logging in AM and defined hascode/equals for ResourceRequest \u0026 Priority. Contributed by Vinod K V. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241205 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/02/12 2:01 PM",
      "commitName": "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "03/02/12 4:04 PM",
      "commitNameOld": "94242c93857a06fb9c56ee571a47d6ca18f00f48",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.91,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,24 @@\n     private ContainerRequest assign(Container allocated) {\n       ContainerRequest assigned \u003d null;\n       \n       Priority priority \u003d allocated.getPriority();\n       if (PRIORITY_FAST_FAIL_MAP.equals(priority)) {\n         LOG.info(\"Assigning container \" + allocated + \" to fast fail map\");\n         assigned \u003d assignToFailedMap(allocated);\n       } else if (PRIORITY_REDUCE.equals(priority)) {\n-        LOG.info(\"Assigning container \" + allocated + \" to reduce\");\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Assigning container \" + allocated + \" to reduce\");\n+        }\n         assigned \u003d assignToReduce(allocated);\n       } else if (PRIORITY_MAP.equals(priority)) {\n-        LOG.info(\"Assigning container \" + allocated + \" to map\");\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Assigning container \" + allocated + \" to map\");\n+        }\n         assigned \u003d assignToMap(allocated);\n       } else {\n         LOG.warn(\"Container allocated at unwanted priority: \" + priority + \n             \". Returning to RM...\");\n       }\n         \n       return assigned;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private ContainerRequest assign(Container allocated) {\n      ContainerRequest assigned \u003d null;\n      \n      Priority priority \u003d allocated.getPriority();\n      if (PRIORITY_FAST_FAIL_MAP.equals(priority)) {\n        LOG.info(\"Assigning container \" + allocated + \" to fast fail map\");\n        assigned \u003d assignToFailedMap(allocated);\n      } else if (PRIORITY_REDUCE.equals(priority)) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Assigning container \" + allocated + \" to reduce\");\n        }\n        assigned \u003d assignToReduce(allocated);\n      } else if (PRIORITY_MAP.equals(priority)) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Assigning container \" + allocated + \" to map\");\n        }\n        assigned \u003d assignToMap(allocated);\n      } else {\n        LOG.warn(\"Container allocated at unwanted priority: \" + priority + \n            \". Returning to RM...\");\n      }\n        \n      return assigned;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {}
    },
    "1e6dfa7472ad78a252d05c8ebffe086d938b61fa": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2646. Fixed AMRMProtocol to return containers based on priority. Contributed by Sharad Agarwal and Arun C Murthy.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1175859 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/09/11 6:25 AM",
      "commitName": "1e6dfa7472ad78a252d05c8ebffe086d938b61fa",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "11/09/11 10:26 AM",
      "commitNameOld": "817ead65b99f465fc2dfa18072cf23cadf5f05d0",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 14.83,
      "commitsBetweenForRepo": 93,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,20 @@\n     private ContainerRequest assign(Container allocated) {\n       ContainerRequest assigned \u003d null;\n       \n-      if (mapResourceReqt !\u003d reduceResourceReqt) {\n-        //assign based on size\n-        LOG.info(\"Assigning based on container size\");\n-        if (allocated.getResource().getMemory() \u003d\u003d mapResourceReqt) {\n-          assigned \u003d assignToFailedMap(allocated);\n-          if (assigned \u003d\u003d null) {\n-            assigned \u003d assignToMap(allocated);\n-          }\n-        } else if (allocated.getResource().getMemory() \u003d\u003d reduceResourceReqt) {\n-          assigned \u003d assignToReduce(allocated);\n-        }\n-        \n-        return assigned;\n-      }\n-      \n-      //container can be given to either map or reduce\n-      //assign based on priority\n-      \n-      //try to assign to earlierFailedMaps if present\n-      assigned \u003d assignToFailedMap(allocated);\n-      \n-      //Assign to reduces before assigning to maps ?\n-      if (assigned \u003d\u003d null) {\n+      Priority priority \u003d allocated.getPriority();\n+      if (PRIORITY_FAST_FAIL_MAP.equals(priority)) {\n+        LOG.info(\"Assigning container \" + allocated + \" to fast fail map\");\n+        assigned \u003d assignToFailedMap(allocated);\n+      } else if (PRIORITY_REDUCE.equals(priority)) {\n+        LOG.info(\"Assigning container \" + allocated + \" to reduce\");\n         assigned \u003d assignToReduce(allocated);\n-      }\n-      \n-      //try to assign to maps if present\n-      if (assigned \u003d\u003d null) {\n+      } else if (PRIORITY_MAP.equals(priority)) {\n+        LOG.info(\"Assigning container \" + allocated + \" to map\");\n         assigned \u003d assignToMap(allocated);\n+      } else {\n+        LOG.warn(\"Container allocated at unwanted priority: \" + priority + \n+            \". Returning to RM...\");\n       }\n-      \n+        \n       return assigned;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private ContainerRequest assign(Container allocated) {\n      ContainerRequest assigned \u003d null;\n      \n      Priority priority \u003d allocated.getPriority();\n      if (PRIORITY_FAST_FAIL_MAP.equals(priority)) {\n        LOG.info(\"Assigning container \" + allocated + \" to fast fail map\");\n        assigned \u003d assignToFailedMap(allocated);\n      } else if (PRIORITY_REDUCE.equals(priority)) {\n        LOG.info(\"Assigning container \" + allocated + \" to reduce\");\n        assigned \u003d assignToReduce(allocated);\n      } else if (PRIORITY_MAP.equals(priority)) {\n        LOG.info(\"Assigning container \" + allocated + \" to map\");\n        assigned \u003d assignToMap(allocated);\n      } else {\n        LOG.warn(\"Container allocated at unwanted priority: \" + priority + \n            \". Returning to RM...\");\n      }\n        \n      return assigned;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private ContainerRequest assign(Container allocated) {\n      ContainerRequest assigned \u003d null;\n      \n      if (mapResourceReqt !\u003d reduceResourceReqt) {\n        //assign based on size\n        LOG.info(\"Assigning based on container size\");\n        if (allocated.getResource().getMemory() \u003d\u003d mapResourceReqt) {\n          assigned \u003d assignToFailedMap(allocated);\n          if (assigned \u003d\u003d null) {\n            assigned \u003d assignToMap(allocated);\n          }\n        } else if (allocated.getResource().getMemory() \u003d\u003d reduceResourceReqt) {\n          assigned \u003d assignToReduce(allocated);\n        }\n        \n        return assigned;\n      }\n      \n      //container can be given to either map or reduce\n      //assign based on priority\n      \n      //try to assign to earlierFailedMaps if present\n      assigned \u003d assignToFailedMap(allocated);\n      \n      //Assign to reduces before assigning to maps ?\n      if (assigned \u003d\u003d null) {\n        assigned \u003d assignToReduce(allocated);\n      }\n      \n      //try to assign to maps if present\n      if (assigned \u003d\u003d null) {\n        assigned \u003d assignToMap(allocated);\n      }\n      \n      return assigned;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,36 @@\n+    private ContainerRequest assign(Container allocated) {\n+      ContainerRequest assigned \u003d null;\n+      \n+      if (mapResourceReqt !\u003d reduceResourceReqt) {\n+        //assign based on size\n+        LOG.info(\"Assigning based on container size\");\n+        if (allocated.getResource().getMemory() \u003d\u003d mapResourceReqt) {\n+          assigned \u003d assignToFailedMap(allocated);\n+          if (assigned \u003d\u003d null) {\n+            assigned \u003d assignToMap(allocated);\n+          }\n+        } else if (allocated.getResource().getMemory() \u003d\u003d reduceResourceReqt) {\n+          assigned \u003d assignToReduce(allocated);\n+        }\n+        \n+        return assigned;\n+      }\n+      \n+      //container can be given to either map or reduce\n+      //assign based on priority\n+      \n+      //try to assign to earlierFailedMaps if present\n+      assigned \u003d assignToFailedMap(allocated);\n+      \n+      //Assign to reduces before assigning to maps ?\n+      if (assigned \u003d\u003d null) {\n+        assigned \u003d assignToReduce(allocated);\n+      }\n+      \n+      //try to assign to maps if present\n+      if (assigned \u003d\u003d null) {\n+        assigned \u003d assignToMap(allocated);\n+      }\n+      \n+      return assigned;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private ContainerRequest assign(Container allocated) {\n      ContainerRequest assigned \u003d null;\n      \n      if (mapResourceReqt !\u003d reduceResourceReqt) {\n        //assign based on size\n        LOG.info(\"Assigning based on container size\");\n        if (allocated.getResource().getMemory() \u003d\u003d mapResourceReqt) {\n          assigned \u003d assignToFailedMap(allocated);\n          if (assigned \u003d\u003d null) {\n            assigned \u003d assignToMap(allocated);\n          }\n        } else if (allocated.getResource().getMemory() \u003d\u003d reduceResourceReqt) {\n          assigned \u003d assignToReduce(allocated);\n        }\n        \n        return assigned;\n      }\n      \n      //container can be given to either map or reduce\n      //assign based on priority\n      \n      //try to assign to earlierFailedMaps if present\n      assigned \u003d assignToFailedMap(allocated);\n      \n      //Assign to reduces before assigning to maps ?\n      if (assigned \u003d\u003d null) {\n        assigned \u003d assignToReduce(allocated);\n      }\n      \n      //try to assign to maps if present\n      if (assigned \u003d\u003d null) {\n        assigned \u003d assignToMap(allocated);\n      }\n      \n      return assigned;\n    }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java"
    }
  }
}