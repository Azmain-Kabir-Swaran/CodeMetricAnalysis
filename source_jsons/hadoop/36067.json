{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppManager.java",
  "functionName": "copyPlacementQueueToSubmissionContext",
  "functionId": "copyPlacementQueueToSubmissionContext___placementContext-ApplicationPlacementContext__context-ApplicationSubmissionContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
  "functionStartLine": 962,
  "functionEndLine": 974,
  "numCommitsSeen": 343,
  "timeTaken": 5570,
  "changeHistory": [
    "5257f50abb71905ef3068fd45541d00ce9e8f355",
    "f9f317b70209d20161d66a73ddea3334d2b92f96",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df"
  ],
  "changeHistoryShort": {
    "5257f50abb71905ef3068fd45541d00ce9e8f355": "Ymultichange(Yrename,Ymodifierchange,Ybodychange)",
    "f9f317b70209d20161d66a73ddea3334d2b92f96": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5257f50abb71905ef3068fd45541d00ce9e8f355": {
      "type": "Ymultichange(Yrename,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-8967. Change FairScheduler to use PlacementRule interface. Contributed by Wilfred Spiegelenburg.\n",
      "commitDate": "25/03/19 10:47 PM",
      "commitName": "5257f50abb71905ef3068fd45541d00ce9e8f355",
      "commitAuthor": "yufei",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-8967. Change FairScheduler to use PlacementRule interface. Contributed by Wilfred Spiegelenburg.\n",
          "commitDate": "25/03/19 10:47 PM",
          "commitName": "5257f50abb71905ef3068fd45541d00ce9e8f355",
          "commitAuthor": "yufei",
          "commitDateOld": "15/03/19 4:20 PM",
          "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 10.27,
          "commitsBetweenForRepo": 62,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n-  void replaceQueueFromPlacementContext(\n+  private void copyPlacementQueueToSubmissionContext(\n       ApplicationPlacementContext placementContext,\n       ApplicationSubmissionContext context) {\n-    // Set it to ApplicationSubmissionContext\n-    //apply queue mapping only to new application submissions\n+    // Set the queue from the placement in the ApplicationSubmissionContext\n+    // Placement rule are only considered for new applications\n     if (placementContext !\u003d null \u0026\u0026 !StringUtils.equalsIgnoreCase(\n         context.getQueue(), placementContext.getQueue())) {\n-      LOG.info(\"Placed application\u003d\" + context.getApplicationId() +\n-          \" to queue\u003d\" + placementContext.getQueue() + \", original queue\u003d\"\n-          + context\n-          .getQueue());\n+      LOG.info(\"Placed application with ID \" + context.getApplicationId() +\n+          \" in queue: \" + placementContext.getQueue() +\n+          \", original submission queue was: \" + context.getQueue());\n       context.setQueue(placementContext.getQueue());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void copyPlacementQueueToSubmissionContext(\n      ApplicationPlacementContext placementContext,\n      ApplicationSubmissionContext context) {\n    // Set the queue from the placement in the ApplicationSubmissionContext\n    // Placement rule are only considered for new applications\n    if (placementContext !\u003d null \u0026\u0026 !StringUtils.equalsIgnoreCase(\n        context.getQueue(), placementContext.getQueue())) {\n      LOG.info(\"Placed application with ID \" + context.getApplicationId() +\n          \" in queue: \" + placementContext.getQueue() +\n          \", original submission queue was: \" + context.getQueue());\n      context.setQueue(placementContext.getQueue());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
          "extendedDetails": {
            "oldValue": "replaceQueueFromPlacementContext",
            "newValue": "copyPlacementQueueToSubmissionContext"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-8967. Change FairScheduler to use PlacementRule interface. Contributed by Wilfred Spiegelenburg.\n",
          "commitDate": "25/03/19 10:47 PM",
          "commitName": "5257f50abb71905ef3068fd45541d00ce9e8f355",
          "commitAuthor": "yufei",
          "commitDateOld": "15/03/19 4:20 PM",
          "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 10.27,
          "commitsBetweenForRepo": 62,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n-  void replaceQueueFromPlacementContext(\n+  private void copyPlacementQueueToSubmissionContext(\n       ApplicationPlacementContext placementContext,\n       ApplicationSubmissionContext context) {\n-    // Set it to ApplicationSubmissionContext\n-    //apply queue mapping only to new application submissions\n+    // Set the queue from the placement in the ApplicationSubmissionContext\n+    // Placement rule are only considered for new applications\n     if (placementContext !\u003d null \u0026\u0026 !StringUtils.equalsIgnoreCase(\n         context.getQueue(), placementContext.getQueue())) {\n-      LOG.info(\"Placed application\u003d\" + context.getApplicationId() +\n-          \" to queue\u003d\" + placementContext.getQueue() + \", original queue\u003d\"\n-          + context\n-          .getQueue());\n+      LOG.info(\"Placed application with ID \" + context.getApplicationId() +\n+          \" in queue: \" + placementContext.getQueue() +\n+          \", original submission queue was: \" + context.getQueue());\n       context.setQueue(placementContext.getQueue());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void copyPlacementQueueToSubmissionContext(\n      ApplicationPlacementContext placementContext,\n      ApplicationSubmissionContext context) {\n    // Set the queue from the placement in the ApplicationSubmissionContext\n    // Placement rule are only considered for new applications\n    if (placementContext !\u003d null \u0026\u0026 !StringUtils.equalsIgnoreCase(\n        context.getQueue(), placementContext.getQueue())) {\n      LOG.info(\"Placed application with ID \" + context.getApplicationId() +\n          \" in queue: \" + placementContext.getQueue() +\n          \", original submission queue was: \" + context.getQueue());\n      context.setQueue(placementContext.getQueue());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8967. Change FairScheduler to use PlacementRule interface. Contributed by Wilfred Spiegelenburg.\n",
          "commitDate": "25/03/19 10:47 PM",
          "commitName": "5257f50abb71905ef3068fd45541d00ce9e8f355",
          "commitAuthor": "yufei",
          "commitDateOld": "15/03/19 4:20 PM",
          "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 10.27,
          "commitsBetweenForRepo": 62,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n-  void replaceQueueFromPlacementContext(\n+  private void copyPlacementQueueToSubmissionContext(\n       ApplicationPlacementContext placementContext,\n       ApplicationSubmissionContext context) {\n-    // Set it to ApplicationSubmissionContext\n-    //apply queue mapping only to new application submissions\n+    // Set the queue from the placement in the ApplicationSubmissionContext\n+    // Placement rule are only considered for new applications\n     if (placementContext !\u003d null \u0026\u0026 !StringUtils.equalsIgnoreCase(\n         context.getQueue(), placementContext.getQueue())) {\n-      LOG.info(\"Placed application\u003d\" + context.getApplicationId() +\n-          \" to queue\u003d\" + placementContext.getQueue() + \", original queue\u003d\"\n-          + context\n-          .getQueue());\n+      LOG.info(\"Placed application with ID \" + context.getApplicationId() +\n+          \" in queue: \" + placementContext.getQueue() +\n+          \", original submission queue was: \" + context.getQueue());\n       context.setQueue(placementContext.getQueue());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void copyPlacementQueueToSubmissionContext(\n      ApplicationPlacementContext placementContext,\n      ApplicationSubmissionContext context) {\n    // Set the queue from the placement in the ApplicationSubmissionContext\n    // Placement rule are only considered for new applications\n    if (placementContext !\u003d null \u0026\u0026 !StringUtils.equalsIgnoreCase(\n        context.getQueue(), placementContext.getQueue())) {\n      LOG.info(\"Placed application with ID \" + context.getApplicationId() +\n          \" in queue: \" + placementContext.getQueue() +\n          \", original submission queue was: \" + context.getQueue());\n      context.setQueue(placementContext.getQueue());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "f9f317b70209d20161d66a73ddea3334d2b92f96": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-7586. Application Placement should be done before ACL checks in ResourceManager. Contributed by Suma Shivaprasad.\n",
      "commitDate": "05/12/17 4:58 AM",
      "commitName": "f9f317b70209d20161d66a73ddea3334d2b92f96",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-7586. Application Placement should be done before ACL checks in ResourceManager. Contributed by Suma Shivaprasad.\n",
          "commitDate": "05/12/17 4:58 AM",
          "commitName": "f9f317b70209d20161d66a73ddea3334d2b92f96",
          "commitAuthor": "Sunil G",
          "commitDateOld": "04/12/17 9:30 PM",
          "commitNameOld": "9f1bdafedb60f83598819c6a682f659d6e168eb0",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.31,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  static void replaceQueueFromPlacementContext(\n+  void replaceQueueFromPlacementContext(\n       ApplicationPlacementContext placementContext,\n       ApplicationSubmissionContext context) {\n     // Set it to ApplicationSubmissionContext\n     //apply queue mapping only to new application submissions\n-    if (placementContext !\u003d null \u0026\u0026 !StringUtils.equals(context.getQueue(),\n-        placementContext.getQueue())) {\n-      LOG.info(\"Placed application\u003d\" + context.getApplicationId() + \" to queue\u003d\"\n-          + placementContext.getQueue() + \", original queue\u003d\" + context\n+    if (placementContext !\u003d null \u0026\u0026 !StringUtils.equalsIgnoreCase(\n+        context.getQueue(), placementContext.getQueue())) {\n+      LOG.info(\"Placed application\u003d\" + context.getApplicationId() +\n+          \" to queue\u003d\" + placementContext.getQueue() + \", original queue\u003d\"\n+          + context\n           .getQueue());\n       context.setQueue(placementContext.getQueue());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void replaceQueueFromPlacementContext(\n      ApplicationPlacementContext placementContext,\n      ApplicationSubmissionContext context) {\n    // Set it to ApplicationSubmissionContext\n    //apply queue mapping only to new application submissions\n    if (placementContext !\u003d null \u0026\u0026 !StringUtils.equalsIgnoreCase(\n        context.getQueue(), placementContext.getQueue())) {\n      LOG.info(\"Placed application\u003d\" + context.getApplicationId() +\n          \" to queue\u003d\" + placementContext.getQueue() + \", original queue\u003d\"\n          + context\n          .getQueue());\n      context.setQueue(placementContext.getQueue());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
            "oldMethodName": "replaceQueueFromPlacementContext",
            "newMethodName": "replaceQueueFromPlacementContext"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-7586. Application Placement should be done before ACL checks in ResourceManager. Contributed by Suma Shivaprasad.\n",
          "commitDate": "05/12/17 4:58 AM",
          "commitName": "f9f317b70209d20161d66a73ddea3334d2b92f96",
          "commitAuthor": "Sunil G",
          "commitDateOld": "04/12/17 9:30 PM",
          "commitNameOld": "9f1bdafedb60f83598819c6a682f659d6e168eb0",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.31,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  static void replaceQueueFromPlacementContext(\n+  void replaceQueueFromPlacementContext(\n       ApplicationPlacementContext placementContext,\n       ApplicationSubmissionContext context) {\n     // Set it to ApplicationSubmissionContext\n     //apply queue mapping only to new application submissions\n-    if (placementContext !\u003d null \u0026\u0026 !StringUtils.equals(context.getQueue(),\n-        placementContext.getQueue())) {\n-      LOG.info(\"Placed application\u003d\" + context.getApplicationId() + \" to queue\u003d\"\n-          + placementContext.getQueue() + \", original queue\u003d\" + context\n+    if (placementContext !\u003d null \u0026\u0026 !StringUtils.equalsIgnoreCase(\n+        context.getQueue(), placementContext.getQueue())) {\n+      LOG.info(\"Placed application\u003d\" + context.getApplicationId() +\n+          \" to queue\u003d\" + placementContext.getQueue() + \", original queue\u003d\"\n+          + context\n           .getQueue());\n       context.setQueue(placementContext.getQueue());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void replaceQueueFromPlacementContext(\n      ApplicationPlacementContext placementContext,\n      ApplicationSubmissionContext context) {\n    // Set it to ApplicationSubmissionContext\n    //apply queue mapping only to new application submissions\n    if (placementContext !\u003d null \u0026\u0026 !StringUtils.equalsIgnoreCase(\n        context.getQueue(), placementContext.getQueue())) {\n      LOG.info(\"Placed application\u003d\" + context.getApplicationId() +\n          \" to queue\u003d\" + placementContext.getQueue() + \", original queue\u003d\"\n          + context\n          .getQueue());\n      context.setQueue(placementContext.getQueue());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
          "extendedDetails": {
            "oldValue": "[static]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7586. Application Placement should be done before ACL checks in ResourceManager. Contributed by Suma Shivaprasad.\n",
          "commitDate": "05/12/17 4:58 AM",
          "commitName": "f9f317b70209d20161d66a73ddea3334d2b92f96",
          "commitAuthor": "Sunil G",
          "commitDateOld": "04/12/17 9:30 PM",
          "commitNameOld": "9f1bdafedb60f83598819c6a682f659d6e168eb0",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.31,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  static void replaceQueueFromPlacementContext(\n+  void replaceQueueFromPlacementContext(\n       ApplicationPlacementContext placementContext,\n       ApplicationSubmissionContext context) {\n     // Set it to ApplicationSubmissionContext\n     //apply queue mapping only to new application submissions\n-    if (placementContext !\u003d null \u0026\u0026 !StringUtils.equals(context.getQueue(),\n-        placementContext.getQueue())) {\n-      LOG.info(\"Placed application\u003d\" + context.getApplicationId() + \" to queue\u003d\"\n-          + placementContext.getQueue() + \", original queue\u003d\" + context\n+    if (placementContext !\u003d null \u0026\u0026 !StringUtils.equalsIgnoreCase(\n+        context.getQueue(), placementContext.getQueue())) {\n+      LOG.info(\"Placed application\u003d\" + context.getApplicationId() +\n+          \" to queue\u003d\" + placementContext.getQueue() + \", original queue\u003d\"\n+          + context\n           .getQueue());\n       context.setQueue(placementContext.getQueue());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void replaceQueueFromPlacementContext(\n      ApplicationPlacementContext placementContext,\n      ApplicationSubmissionContext context) {\n    // Set it to ApplicationSubmissionContext\n    //apply queue mapping only to new application submissions\n    if (placementContext !\u003d null \u0026\u0026 !StringUtils.equalsIgnoreCase(\n        context.getQueue(), placementContext.getQueue())) {\n      LOG.info(\"Placed application\u003d\" + context.getApplicationId() +\n          \" to queue\u003d\" + placementContext.getQueue() + \", original queue\u003d\"\n          + context\n          .getQueue());\n      context.setQueue(placementContext.getQueue());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)\n\nChange-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6\n",
      "commitDate": "16/11/17 11:25 AM",
      "commitName": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,13 @@\n+  static void replaceQueueFromPlacementContext(\n+      ApplicationPlacementContext placementContext,\n+      ApplicationSubmissionContext context) {\n+    // Set it to ApplicationSubmissionContext\n+    //apply queue mapping only to new application submissions\n+    if (placementContext !\u003d null \u0026\u0026 !StringUtils.equals(context.getQueue(),\n+        placementContext.getQueue())) {\n+      LOG.info(\"Placed application\u003d\" + context.getApplicationId() + \" to queue\u003d\"\n+          + placementContext.getQueue() + \", original queue\u003d\" + context\n+          .getQueue());\n+      context.setQueue(placementContext.getQueue());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static void replaceQueueFromPlacementContext(\n      ApplicationPlacementContext placementContext,\n      ApplicationSubmissionContext context) {\n    // Set it to ApplicationSubmissionContext\n    //apply queue mapping only to new application submissions\n    if (placementContext !\u003d null \u0026\u0026 !StringUtils.equals(context.getQueue(),\n        placementContext.getQueue())) {\n      LOG.info(\"Placed application\u003d\" + context.getApplicationId() + \" to queue\u003d\"\n          + placementContext.getQueue() + \", original queue\u003d\" + context\n          .getQueue());\n      context.setQueue(placementContext.getQueue());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java"
    }
  }
}