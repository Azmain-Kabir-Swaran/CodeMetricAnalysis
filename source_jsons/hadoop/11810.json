{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsVolumeImpl.java",
  "functionName": "load",
  "functionId": "load",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeImpl.java",
  "functionStartLine": 874,
  "functionEndLine": 882,
  "numCommitsSeen": 71,
  "timeTaken": 3229,
  "changeHistory": [
    "73c660b43f3d5311947d2acc9488f17c1caf4de0",
    "e6a7044b8530afded8f8e86ff309dd0e4d39238a",
    "6e62a1a6728b1f782f64065424f92b292c3f163a"
  ],
  "changeHistoryShort": {
    "73c660b43f3d5311947d2acc9488f17c1caf4de0": "Ybodychange",
    "e6a7044b8530afded8f8e86ff309dd0e4d39238a": "Ybodychange",
    "6e62a1a6728b1f782f64065424f92b292c3f163a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "73c660b43f3d5311947d2acc9488f17c1caf4de0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13958. Miscellaneous Improvements for FsVolumeSpi. Contributed by BELUGA BEHR.\n",
      "commitDate": "05/10/18 9:32 AM",
      "commitName": "73c660b43f3d5311947d2acc9488f17c1caf4de0",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "30/04/18 1:28 PM",
      "commitNameOld": "fc074a359c44e84dd9612be2bd772763f943eb04",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 157.84,
      "commitsBetweenForRepo": 1255,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,9 @@\n     public void load() throws IOException {\n       File file \u003d getSaveFile();\n       this.state \u003d READER.readValue(file);\n-      LOG.trace(\"load({}, {}): loaded iterator {} from {}: {}\", storageID,\n-          bpid, name, file.getAbsoluteFile(),\n-          WRITER.writeValueAsString(state));\n+      if (LOG.isTraceEnabled()) {\n+        LOG.trace(\"load({}, {}): loaded iterator {} from {}: {}\", storageID,\n+            bpid, name, file.getAbsoluteFile(),\n+            WRITER.writeValueAsString(state));\n+      }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void load() throws IOException {\n      File file \u003d getSaveFile();\n      this.state \u003d READER.readValue(file);\n      if (LOG.isTraceEnabled()) {\n        LOG.trace(\"load({}, {}): loaded iterator {} from {}: {}\", storageID,\n            bpid, name, file.getAbsoluteFile(),\n            WRITER.writeValueAsString(state));\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeImpl.java",
      "extendedDetails": {}
    },
    "e6a7044b8530afded8f8e86ff309dd0e4d39238a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9768. Reuse ObjectMapper instance in HDFS to improve the performance. Contributed by Lin Yiqun.\n",
      "commitDate": "12/02/16 8:57 AM",
      "commitName": "e6a7044b8530afded8f8e86ff309dd0e4d39238a",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "01/02/16 12:56 PM",
      "commitNameOld": "e50aa53eed3d0ff1bc8fe60381524bb3bbe53bc1",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 10.83,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,7 @@\n     public void load() throws IOException {\n-      ObjectMapper mapper \u003d new ObjectMapper();\n       File file \u003d getSaveFile();\n-      this.state \u003d mapper.reader(BlockIteratorState.class).readValue(file);\n+      this.state \u003d READER.readValue(file);\n       LOG.trace(\"load({}, {}): loaded iterator {} from {}: {}\", storageID,\n           bpid, name, file.getAbsoluteFile(),\n-          mapper.writerWithDefaultPrettyPrinter().writeValueAsString(state));\n+          WRITER.writeValueAsString(state));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void load() throws IOException {\n      File file \u003d getSaveFile();\n      this.state \u003d READER.readValue(file);\n      LOG.trace(\"load({}, {}): loaded iterator {} from {}: {}\", storageID,\n          bpid, name, file.getAbsoluteFile(),\n          WRITER.writeValueAsString(state));\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeImpl.java",
      "extendedDetails": {}
    },
    "6e62a1a6728b1f782f64065424f92b292c3f163a": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7430. Refactor the BlockScanner to use O(1) memory and use multiple threads (cmccabe)\n",
      "commitDate": "21/01/15 7:00 PM",
      "commitName": "6e62a1a6728b1f782f64065424f92b292c3f163a",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,8 @@\n+    public void load() throws IOException {\n+      ObjectMapper mapper \u003d new ObjectMapper();\n+      File file \u003d getSaveFile();\n+      this.state \u003d mapper.reader(BlockIteratorState.class).readValue(file);\n+      LOG.trace(\"load({}, {}): loaded iterator {} from {}: {}\", storageID,\n+          bpid, name, file.getAbsoluteFile(),\n+          mapper.writerWithDefaultPrettyPrinter().writeValueAsString(state));\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void load() throws IOException {\n      ObjectMapper mapper \u003d new ObjectMapper();\n      File file \u003d getSaveFile();\n      this.state \u003d mapper.reader(BlockIteratorState.class).readValue(file);\n      LOG.trace(\"load({}, {}): loaded iterator {} from {}: {}\", storageID,\n          bpid, name, file.getAbsoluteFile(),\n          mapper.writerWithDefaultPrettyPrinter().writeValueAsString(state));\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeImpl.java"
    }
  }
}