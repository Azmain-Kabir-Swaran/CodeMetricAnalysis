{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Mover.java",
  "functionName": "newDBlock",
  "functionId": "newDBlock___lb-LocatedBlock__locations-List__MLocation____ecPolicy-ErasureCodingPolicy",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
  "functionStartLine": 190,
  "functionEndLine": 212,
  "numCommitsSeen": 106,
  "timeTaken": 3589,
  "changeHistory": [
    "c09dc258a8f64fab852bf6f26187163480dbee3c",
    "1d37a8812160bb030244a1e6b1c753f962d8d2ed",
    "673280df24f0228bf01777035ceeab8807da8c40",
    "84a0a629d3c63589b9aed7889e2a764538676471",
    "8ea20b53a861a2771c206afaacf8e7783568c4b1"
  ],
  "changeHistoryShort": {
    "c09dc258a8f64fab852bf6f26187163480dbee3c": "Ybodychange",
    "1d37a8812160bb030244a1e6b1c753f962d8d2ed": "Ymultichange(Yparameterchange,Ybodychange)",
    "673280df24f0228bf01777035ceeab8807da8c40": "Ymultichange(Yparameterchange,Ybodychange)",
    "84a0a629d3c63589b9aed7889e2a764538676471": "Ybodychange",
    "8ea20b53a861a2771c206afaacf8e7783568c4b1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c09dc258a8f64fab852bf6f26187163480dbee3c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8882. Erasure Coding: Use datablocks, parityblocks and cell size from ErasureCodingPolicy. Contributed by Vinayakumar B.\n\nChange-Id: Ic56da0b426f47c63dac440aef6f5fc8554f6cf13\n",
      "commitDate": "23/09/15 1:34 PM",
      "commitName": "c09dc258a8f64fab852bf6f26187163480dbee3c",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "24/08/15 12:59 PM",
      "commitNameOld": "6b6a63bbbda920315d3d24b61ed3344a78a981b6",
      "commitAuthorOld": "",
      "daysBetweenCommits": 30.02,
      "commitsBetweenForRepo": 189,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   DBlock newDBlock(LocatedBlock lb, List\u003cMLocation\u003e locations,\n                    ErasureCodingPolicy ecPolicy) {\n     Block blk \u003d lb.getBlock().getLocalBlock();\n     DBlock db;\n     if (lb.isStriped()) {\n       LocatedStripedBlock lsb \u003d (LocatedStripedBlock) lb;\n       byte[] indices \u003d new byte[lsb.getBlockIndices().length];\n       for (int i \u003d 0; i \u003c indices.length; i++) {\n         indices[i] \u003d (byte) lsb.getBlockIndices()[i];\n       }\n-      db \u003d new DBlockStriped(blk, indices, (short) ecPolicy.getNumDataUnits());\n+      db \u003d new DBlockStriped(blk, indices, (short) ecPolicy.getNumDataUnits(),\n+          ecPolicy.getCellSize());\n     } else {\n       db \u003d new DBlock(blk);\n     }\n     for(MLocation ml : locations) {\n       StorageGroup source \u003d storages.getSource(ml);\n       if (source !\u003d null) {\n         db.addLocation(source);\n       }\n     }\n     return db;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  DBlock newDBlock(LocatedBlock lb, List\u003cMLocation\u003e locations,\n                   ErasureCodingPolicy ecPolicy) {\n    Block blk \u003d lb.getBlock().getLocalBlock();\n    DBlock db;\n    if (lb.isStriped()) {\n      LocatedStripedBlock lsb \u003d (LocatedStripedBlock) lb;\n      byte[] indices \u003d new byte[lsb.getBlockIndices().length];\n      for (int i \u003d 0; i \u003c indices.length; i++) {\n        indices[i] \u003d (byte) lsb.getBlockIndices()[i];\n      }\n      db \u003d new DBlockStriped(blk, indices, (short) ecPolicy.getNumDataUnits(),\n          ecPolicy.getCellSize());\n    } else {\n      db \u003d new DBlock(blk);\n    }\n    for(MLocation ml : locations) {\n      StorageGroup source \u003d storages.getSource(ml);\n      if (source !\u003d null) {\n        db.addLocation(source);\n      }\n    }\n    return db;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
      "extendedDetails": {}
    },
    "1d37a8812160bb030244a1e6b1c753f962d8d2ed": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8854. Erasure coding: add ECPolicy to replace schema+cellSize in hadoop-hdfs. Contributed by Walter Su.\n",
      "commitDate": "13/08/15 10:04 AM",
      "commitName": "1d37a8812160bb030244a1e6b1c753f962d8d2ed",
      "commitAuthor": "Zhe Zhang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8854. Erasure coding: add ECPolicy to replace schema+cellSize in hadoop-hdfs. Contributed by Walter Su.\n",
          "commitDate": "13/08/15 10:04 AM",
          "commitName": "1d37a8812160bb030244a1e6b1c753f962d8d2ed",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "21/07/15 3:47 PM",
          "commitNameOld": "f8f7a923b76abcd1d0242c15a536b20af1c1695e",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 22.76,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n   DBlock newDBlock(LocatedBlock lb, List\u003cMLocation\u003e locations,\n-                   ECSchema ecSchema) {\n+                   ErasureCodingPolicy ecPolicy) {\n     Block blk \u003d lb.getBlock().getLocalBlock();\n     DBlock db;\n     if (lb.isStriped()) {\n       LocatedStripedBlock lsb \u003d (LocatedStripedBlock) lb;\n       byte[] indices \u003d new byte[lsb.getBlockIndices().length];\n       for (int i \u003d 0; i \u003c indices.length; i++) {\n         indices[i] \u003d (byte) lsb.getBlockIndices()[i];\n       }\n-      db \u003d new DBlockStriped(blk, indices, (short) ecSchema.getNumDataUnits());\n+      db \u003d new DBlockStriped(blk, indices, (short) ecPolicy.getNumDataUnits());\n     } else {\n       db \u003d new DBlock(blk);\n     }\n     for(MLocation ml : locations) {\n       StorageGroup source \u003d storages.getSource(ml);\n       if (source !\u003d null) {\n         db.addLocation(source);\n       }\n     }\n     return db;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  DBlock newDBlock(LocatedBlock lb, List\u003cMLocation\u003e locations,\n                   ErasureCodingPolicy ecPolicy) {\n    Block blk \u003d lb.getBlock().getLocalBlock();\n    DBlock db;\n    if (lb.isStriped()) {\n      LocatedStripedBlock lsb \u003d (LocatedStripedBlock) lb;\n      byte[] indices \u003d new byte[lsb.getBlockIndices().length];\n      for (int i \u003d 0; i \u003c indices.length; i++) {\n        indices[i] \u003d (byte) lsb.getBlockIndices()[i];\n      }\n      db \u003d new DBlockStriped(blk, indices, (short) ecPolicy.getNumDataUnits());\n    } else {\n      db \u003d new DBlock(blk);\n    }\n    for(MLocation ml : locations) {\n      StorageGroup source \u003d storages.getSource(ml);\n      if (source !\u003d null) {\n        db.addLocation(source);\n      }\n    }\n    return db;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
          "extendedDetails": {
            "oldValue": "[lb-LocatedBlock, locations-List\u003cMLocation\u003e, ecSchema-ECSchema]",
            "newValue": "[lb-LocatedBlock, locations-List\u003cMLocation\u003e, ecPolicy-ErasureCodingPolicy]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8854. Erasure coding: add ECPolicy to replace schema+cellSize in hadoop-hdfs. Contributed by Walter Su.\n",
          "commitDate": "13/08/15 10:04 AM",
          "commitName": "1d37a8812160bb030244a1e6b1c753f962d8d2ed",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "21/07/15 3:47 PM",
          "commitNameOld": "f8f7a923b76abcd1d0242c15a536b20af1c1695e",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 22.76,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n   DBlock newDBlock(LocatedBlock lb, List\u003cMLocation\u003e locations,\n-                   ECSchema ecSchema) {\n+                   ErasureCodingPolicy ecPolicy) {\n     Block blk \u003d lb.getBlock().getLocalBlock();\n     DBlock db;\n     if (lb.isStriped()) {\n       LocatedStripedBlock lsb \u003d (LocatedStripedBlock) lb;\n       byte[] indices \u003d new byte[lsb.getBlockIndices().length];\n       for (int i \u003d 0; i \u003c indices.length; i++) {\n         indices[i] \u003d (byte) lsb.getBlockIndices()[i];\n       }\n-      db \u003d new DBlockStriped(blk, indices, (short) ecSchema.getNumDataUnits());\n+      db \u003d new DBlockStriped(blk, indices, (short) ecPolicy.getNumDataUnits());\n     } else {\n       db \u003d new DBlock(blk);\n     }\n     for(MLocation ml : locations) {\n       StorageGroup source \u003d storages.getSource(ml);\n       if (source !\u003d null) {\n         db.addLocation(source);\n       }\n     }\n     return db;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  DBlock newDBlock(LocatedBlock lb, List\u003cMLocation\u003e locations,\n                   ErasureCodingPolicy ecPolicy) {\n    Block blk \u003d lb.getBlock().getLocalBlock();\n    DBlock db;\n    if (lb.isStriped()) {\n      LocatedStripedBlock lsb \u003d (LocatedStripedBlock) lb;\n      byte[] indices \u003d new byte[lsb.getBlockIndices().length];\n      for (int i \u003d 0; i \u003c indices.length; i++) {\n        indices[i] \u003d (byte) lsb.getBlockIndices()[i];\n      }\n      db \u003d new DBlockStriped(blk, indices, (short) ecPolicy.getNumDataUnits());\n    } else {\n      db \u003d new DBlock(blk);\n    }\n    for(MLocation ml : locations) {\n      StorageGroup source \u003d storages.getSource(ml);\n      if (source !\u003d null) {\n        db.addLocation(source);\n      }\n    }\n    return db;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
          "extendedDetails": {}
        }
      ]
    },
    "673280df24f0228bf01777035ceeab8807da8c40": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7621. Erasure Coding: update the Balancer/Mover data migration logic. Contributed by Walter Su.\n",
      "commitDate": "03/06/15 11:51 AM",
      "commitName": "673280df24f0228bf01777035ceeab8807da8c40",
      "commitAuthor": "Zhe Zhang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7621. Erasure Coding: update the Balancer/Mover data migration logic. Contributed by Walter Su.\n",
          "commitDate": "03/06/15 11:51 AM",
          "commitName": "673280df24f0228bf01777035ceeab8807da8c40",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "18/05/15 11:36 AM",
          "commitNameOld": "a2190bf15d25e01fb4b220ba6401ce2f787a5c61",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 16.01,
          "commitsBetweenForRepo": 202,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,22 @@\n-  DBlock newDBlock(Block block, List\u003cMLocation\u003e locations) {\n-    final DBlock db \u003d new DBlock(block);\n+  DBlock newDBlock(LocatedBlock lb, List\u003cMLocation\u003e locations,\n+                   ECSchema ecSchema) {\n+    Block blk \u003d lb.getBlock().getLocalBlock();\n+    DBlock db;\n+    if (lb.isStriped()) {\n+      LocatedStripedBlock lsb \u003d (LocatedStripedBlock) lb;\n+      byte[] indices \u003d new byte[lsb.getBlockIndices().length];\n+      for (int i \u003d 0; i \u003c indices.length; i++) {\n+        indices[i] \u003d (byte) lsb.getBlockIndices()[i];\n+      }\n+      db \u003d new DBlockStriped(blk, indices, (short) ecSchema.getNumDataUnits());\n+    } else {\n+      db \u003d new DBlock(blk);\n+    }\n     for(MLocation ml : locations) {\n       StorageGroup source \u003d storages.getSource(ml);\n       if (source !\u003d null) {\n         db.addLocation(source);\n       }\n     }\n     return db;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  DBlock newDBlock(LocatedBlock lb, List\u003cMLocation\u003e locations,\n                   ECSchema ecSchema) {\n    Block blk \u003d lb.getBlock().getLocalBlock();\n    DBlock db;\n    if (lb.isStriped()) {\n      LocatedStripedBlock lsb \u003d (LocatedStripedBlock) lb;\n      byte[] indices \u003d new byte[lsb.getBlockIndices().length];\n      for (int i \u003d 0; i \u003c indices.length; i++) {\n        indices[i] \u003d (byte) lsb.getBlockIndices()[i];\n      }\n      db \u003d new DBlockStriped(blk, indices, (short) ecSchema.getNumDataUnits());\n    } else {\n      db \u003d new DBlock(blk);\n    }\n    for(MLocation ml : locations) {\n      StorageGroup source \u003d storages.getSource(ml);\n      if (source !\u003d null) {\n        db.addLocation(source);\n      }\n    }\n    return db;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
          "extendedDetails": {
            "oldValue": "[block-Block, locations-List\u003cMLocation\u003e]",
            "newValue": "[lb-LocatedBlock, locations-List\u003cMLocation\u003e, ecSchema-ECSchema]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7621. Erasure Coding: update the Balancer/Mover data migration logic. Contributed by Walter Su.\n",
          "commitDate": "03/06/15 11:51 AM",
          "commitName": "673280df24f0228bf01777035ceeab8807da8c40",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "18/05/15 11:36 AM",
          "commitNameOld": "a2190bf15d25e01fb4b220ba6401ce2f787a5c61",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 16.01,
          "commitsBetweenForRepo": 202,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,22 @@\n-  DBlock newDBlock(Block block, List\u003cMLocation\u003e locations) {\n-    final DBlock db \u003d new DBlock(block);\n+  DBlock newDBlock(LocatedBlock lb, List\u003cMLocation\u003e locations,\n+                   ECSchema ecSchema) {\n+    Block blk \u003d lb.getBlock().getLocalBlock();\n+    DBlock db;\n+    if (lb.isStriped()) {\n+      LocatedStripedBlock lsb \u003d (LocatedStripedBlock) lb;\n+      byte[] indices \u003d new byte[lsb.getBlockIndices().length];\n+      for (int i \u003d 0; i \u003c indices.length; i++) {\n+        indices[i] \u003d (byte) lsb.getBlockIndices()[i];\n+      }\n+      db \u003d new DBlockStriped(blk, indices, (short) ecSchema.getNumDataUnits());\n+    } else {\n+      db \u003d new DBlock(blk);\n+    }\n     for(MLocation ml : locations) {\n       StorageGroup source \u003d storages.getSource(ml);\n       if (source !\u003d null) {\n         db.addLocation(source);\n       }\n     }\n     return db;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  DBlock newDBlock(LocatedBlock lb, List\u003cMLocation\u003e locations,\n                   ECSchema ecSchema) {\n    Block blk \u003d lb.getBlock().getLocalBlock();\n    DBlock db;\n    if (lb.isStriped()) {\n      LocatedStripedBlock lsb \u003d (LocatedStripedBlock) lb;\n      byte[] indices \u003d new byte[lsb.getBlockIndices().length];\n      for (int i \u003d 0; i \u003c indices.length; i++) {\n        indices[i] \u003d (byte) lsb.getBlockIndices()[i];\n      }\n      db \u003d new DBlockStriped(blk, indices, (short) ecSchema.getNumDataUnits());\n    } else {\n      db \u003d new DBlock(blk);\n    }\n    for(MLocation ml : locations) {\n      StorageGroup source \u003d storages.getSource(ml);\n      if (source !\u003d null) {\n        db.addLocation(source);\n      }\n    }\n    return db;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
          "extendedDetails": {}
        }
      ]
    },
    "84a0a629d3c63589b9aed7889e2a764538676471": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7095. Archival Storage: TestStorageMover often fails in Jenkins. Contributed by Jing Zhao.\n",
      "commitDate": "20/09/14 1:44 PM",
      "commitName": "84a0a629d3c63589b9aed7889e2a764538676471",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "17/09/14 9:40 AM",
      "commitNameOld": "b014e83bc5899ec135b1e7a54ca1902c970047a5",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 3.17,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,10 @@\n   DBlock newDBlock(Block block, List\u003cMLocation\u003e locations) {\n     final DBlock db \u003d new DBlock(block);\n     for(MLocation ml : locations) {\n-      db.addLocation(storages.getTarget(ml));\n+      StorageGroup source \u003d storages.getSource(ml);\n+      if (source !\u003d null) {\n+        db.addLocation(source);\n+      }\n     }\n     return db;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  DBlock newDBlock(Block block, List\u003cMLocation\u003e locations) {\n    final DBlock db \u003d new DBlock(block);\n    for(MLocation ml : locations) {\n      StorageGroup source \u003d storages.getSource(ml);\n      if (source !\u003d null) {\n        db.addLocation(source);\n      }\n    }\n    return db;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
      "extendedDetails": {}
    },
    "8ea20b53a861a2771c206afaacf8e7783568c4b1": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6911. Archival Storage: check if a block is already scheduled in Mover. Contributed by Tsz Wo Nicholas Sze.\n",
      "commitDate": "27/08/14 10:38 AM",
      "commitName": "8ea20b53a861a2771c206afaacf8e7783568c4b1",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,7 @@\n+  DBlock newDBlock(Block block, List\u003cMLocation\u003e locations) {\n+    final DBlock db \u003d new DBlock(block);\n+    for(MLocation ml : locations) {\n+      db.addLocation(storages.getTarget(ml));\n+    }\n+    return db;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  DBlock newDBlock(Block block, List\u003cMLocation\u003e locations) {\n    final DBlock db \u003d new DBlock(block);\n    for(MLocation ml : locations) {\n      db.addLocation(storages.getTarget(ml));\n    }\n    return db;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java"
    }
  }
}