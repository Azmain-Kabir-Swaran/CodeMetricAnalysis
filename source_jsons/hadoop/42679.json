{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppAttemptImpl.java",
  "functionName": "handle",
  "functionId": "handle___event-RMAppAttemptEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
  "functionStartLine": 905,
  "functionEndLine": 937,
  "numCommitsSeen": 176,
  "timeTaken": 11343,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "90c86d6e090d668414681fcb5eb02add5d419b33",
    "3325ef653d6f364a82dd32485d9ef6d987380ce3",
    "f216276d2164c6564632c571fd3adbb03bc8b3e4",
    "19295b36d90e26616accee73b1f7743aab5df692",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "68615600985dfadf067a4967a5e08c1421e7a1c8",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "90c86d6e090d668414681fcb5eb02add5d419b33": "Ybodychange",
    "3325ef653d6f364a82dd32485d9ef6d987380ce3": "Ybodychange",
    "f216276d2164c6564632c571fd3adbb03bc8b3e4": "Ybodychange",
    "19295b36d90e26616accee73b1f7743aab5df692": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "68615600985dfadf067a4967a5e08c1421e7a1c8": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "07/03/19 1:47 PM",
      "commitNameOld": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 8.06,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   public void handle(RMAppAttemptEvent event) {\n \n     this.writeLock.lock();\n \n     try {\n       ApplicationAttemptId appAttemptID \u003d event.getApplicationAttemptId();\n-      LOG.debug(\"Processing event for \" + appAttemptID + \" of type \"\n-          + event.getType());\n+      LOG.debug(\"Processing event for {} of type {}\",\n+          appAttemptID, event.getType());\n       final RMAppAttemptState oldState \u003d getAppAttemptState();\n       try {\n         /* keep the master in sync with the state machine */\n         this.stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.error(\"App attempt: \" + appAttemptID\n             + \" can\u0027t handle this event at current state\", e);\n         onInvalidTranstion(event.getType(), oldState);\n       }\n \n       // Log at INFO if we\u0027re not recovering or not in a terminal state.\n       // Log at DEBUG otherwise.\n       if ((oldState !\u003d getAppAttemptState()) \u0026\u0026\n           ((recoveredFinalState \u003d\u003d null) ||\n             (event.getType() !\u003d RMAppAttemptEventType.RECOVER))) {\n         LOG.info(String.format(STATE_CHANGE_MESSAGE, appAttemptID, oldState,\n             getAppAttemptState(), event.getType()));\n       } else if ((oldState !\u003d getAppAttemptState()) \u0026\u0026 LOG.isDebugEnabled()) {\n         LOG.debug(String.format(STATE_CHANGE_MESSAGE, appAttemptID, oldState,\n             getAppAttemptState(), event.getType()));\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(RMAppAttemptEvent event) {\n\n    this.writeLock.lock();\n\n    try {\n      ApplicationAttemptId appAttemptID \u003d event.getApplicationAttemptId();\n      LOG.debug(\"Processing event for {} of type {}\",\n          appAttemptID, event.getType());\n      final RMAppAttemptState oldState \u003d getAppAttemptState();\n      try {\n        /* keep the master in sync with the state machine */\n        this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(\"App attempt: \" + appAttemptID\n            + \" can\u0027t handle this event at current state\", e);\n        onInvalidTranstion(event.getType(), oldState);\n      }\n\n      // Log at INFO if we\u0027re not recovering or not in a terminal state.\n      // Log at DEBUG otherwise.\n      if ((oldState !\u003d getAppAttemptState()) \u0026\u0026\n          ((recoveredFinalState \u003d\u003d null) ||\n            (event.getType() !\u003d RMAppAttemptEventType.RECOVER))) {\n        LOG.info(String.format(STATE_CHANGE_MESSAGE, appAttemptID, oldState,\n            getAppAttemptState(), event.getType()));\n      } else if ((oldState !\u003d getAppAttemptState()) \u0026\u0026 LOG.isDebugEnabled()) {\n        LOG.debug(String.format(STATE_CHANGE_MESSAGE, appAttemptID, oldState,\n            getAppAttemptState(), event.getType()));\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "90c86d6e090d668414681fcb5eb02add5d419b33": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6948. Invalid event: ATTEMPT_ADDED at FINAL_SAVING. Contributed by lujie\n",
      "commitDate": "09/01/18 8:51 AM",
      "commitName": "90c86d6e090d668414681fcb5eb02add5d419b33",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "09/11/17 12:12 PM",
      "commitNameOld": "a2c150a7369cc629bbfaa2dfa3a8495b6f9c42e2",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 60.86,
      "commitsBetweenForRepo": 318,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   public void handle(RMAppAttemptEvent event) {\n \n     this.writeLock.lock();\n \n     try {\n       ApplicationAttemptId appAttemptID \u003d event.getApplicationAttemptId();\n       LOG.debug(\"Processing event for \" + appAttemptID + \" of type \"\n           + event.getType());\n       final RMAppAttemptState oldState \u003d getAppAttemptState();\n       try {\n         /* keep the master in sync with the state machine */\n         this.stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.error(\"App attempt: \" + appAttemptID\n             + \" can\u0027t handle this event at current state\", e);\n-        /* TODO fail the application on the failed transition */\n+        onInvalidTranstion(event.getType(), oldState);\n       }\n \n       // Log at INFO if we\u0027re not recovering or not in a terminal state.\n       // Log at DEBUG otherwise.\n       if ((oldState !\u003d getAppAttemptState()) \u0026\u0026\n           ((recoveredFinalState \u003d\u003d null) ||\n             (event.getType() !\u003d RMAppAttemptEventType.RECOVER))) {\n         LOG.info(String.format(STATE_CHANGE_MESSAGE, appAttemptID, oldState,\n             getAppAttemptState(), event.getType()));\n       } else if ((oldState !\u003d getAppAttemptState()) \u0026\u0026 LOG.isDebugEnabled()) {\n         LOG.debug(String.format(STATE_CHANGE_MESSAGE, appAttemptID, oldState,\n             getAppAttemptState(), event.getType()));\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(RMAppAttemptEvent event) {\n\n    this.writeLock.lock();\n\n    try {\n      ApplicationAttemptId appAttemptID \u003d event.getApplicationAttemptId();\n      LOG.debug(\"Processing event for \" + appAttemptID + \" of type \"\n          + event.getType());\n      final RMAppAttemptState oldState \u003d getAppAttemptState();\n      try {\n        /* keep the master in sync with the state machine */\n        this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(\"App attempt: \" + appAttemptID\n            + \" can\u0027t handle this event at current state\", e);\n        onInvalidTranstion(event.getType(), oldState);\n      }\n\n      // Log at INFO if we\u0027re not recovering or not in a terminal state.\n      // Log at DEBUG otherwise.\n      if ((oldState !\u003d getAppAttemptState()) \u0026\u0026\n          ((recoveredFinalState \u003d\u003d null) ||\n            (event.getType() !\u003d RMAppAttemptEventType.RECOVER))) {\n        LOG.info(String.format(STATE_CHANGE_MESSAGE, appAttemptID, oldState,\n            getAppAttemptState(), event.getType()));\n      } else if ((oldState !\u003d getAppAttemptState()) \u0026\u0026 LOG.isDebugEnabled()) {\n        LOG.debug(String.format(STATE_CHANGE_MESSAGE, appAttemptID, oldState,\n            getAppAttemptState(), event.getType()));\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "3325ef653d6f364a82dd32485d9ef6d987380ce3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6987. Log app attempt during InvalidStateTransition. Contributed by Jonathan Eagles\n",
      "commitDate": "14/08/17 12:40 PM",
      "commitName": "3325ef653d6f364a82dd32485d9ef6d987380ce3",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "11/08/17 2:28 PM",
      "commitNameOld": "65364defb4a633ca20b39ebc38cd9c0db63a5835",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 2.92,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,33 @@\n   public void handle(RMAppAttemptEvent event) {\n \n     this.writeLock.lock();\n \n     try {\n       ApplicationAttemptId appAttemptID \u003d event.getApplicationAttemptId();\n       LOG.debug(\"Processing event for \" + appAttemptID + \" of type \"\n           + event.getType());\n       final RMAppAttemptState oldState \u003d getAppAttemptState();\n       try {\n         /* keep the master in sync with the state machine */\n         this.stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n-        LOG.error(\"Can\u0027t handle this event at current state\", e);\n+        LOG.error(\"App attempt: \" + appAttemptID\n+            + \" can\u0027t handle this event at current state\", e);\n         /* TODO fail the application on the failed transition */\n       }\n \n       // Log at INFO if we\u0027re not recovering or not in a terminal state.\n       // Log at DEBUG otherwise.\n       if ((oldState !\u003d getAppAttemptState()) \u0026\u0026\n           ((recoveredFinalState \u003d\u003d null) ||\n             (event.getType() !\u003d RMAppAttemptEventType.RECOVER))) {\n         LOG.info(String.format(STATE_CHANGE_MESSAGE, appAttemptID, oldState,\n             getAppAttemptState(), event.getType()));\n       } else if ((oldState !\u003d getAppAttemptState()) \u0026\u0026 LOG.isDebugEnabled()) {\n         LOG.debug(String.format(STATE_CHANGE_MESSAGE, appAttemptID, oldState,\n             getAppAttemptState(), event.getType()));\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(RMAppAttemptEvent event) {\n\n    this.writeLock.lock();\n\n    try {\n      ApplicationAttemptId appAttemptID \u003d event.getApplicationAttemptId();\n      LOG.debug(\"Processing event for \" + appAttemptID + \" of type \"\n          + event.getType());\n      final RMAppAttemptState oldState \u003d getAppAttemptState();\n      try {\n        /* keep the master in sync with the state machine */\n        this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(\"App attempt: \" + appAttemptID\n            + \" can\u0027t handle this event at current state\", e);\n        /* TODO fail the application on the failed transition */\n      }\n\n      // Log at INFO if we\u0027re not recovering or not in a terminal state.\n      // Log at DEBUG otherwise.\n      if ((oldState !\u003d getAppAttemptState()) \u0026\u0026\n          ((recoveredFinalState \u003d\u003d null) ||\n            (event.getType() !\u003d RMAppAttemptEventType.RECOVER))) {\n        LOG.info(String.format(STATE_CHANGE_MESSAGE, appAttemptID, oldState,\n            getAppAttemptState(), event.getType()));\n      } else if ((oldState !\u003d getAppAttemptState()) \u0026\u0026 LOG.isDebugEnabled()) {\n        LOG.debug(String.format(STATE_CHANGE_MESSAGE, appAttemptID, oldState,\n            getAppAttemptState(), event.getType()));\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "f216276d2164c6564632c571fd3adbb03bc8b3e4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4882. Change the log level to DEBUG for recovering completed applications (templedf via rkanter)\n",
      "commitDate": "28/12/16 3:21 PM",
      "commitName": "f216276d2164c6564632c571fd3adbb03bc8b3e4",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "10/11/16 2:35 PM",
      "commitNameOld": "93eeb13164707d0e3556c2bf737bd2ee09a335c6",
      "commitAuthorOld": "Eric Payne",
      "daysBetweenCommits": 48.03,
      "commitsBetweenForRepo": 261,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,32 @@\n   public void handle(RMAppAttemptEvent event) {\n \n     this.writeLock.lock();\n \n     try {\n       ApplicationAttemptId appAttemptID \u003d event.getApplicationAttemptId();\n       LOG.debug(\"Processing event for \" + appAttemptID + \" of type \"\n           + event.getType());\n       final RMAppAttemptState oldState \u003d getAppAttemptState();\n       try {\n         /* keep the master in sync with the state machine */\n         this.stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.error(\"Can\u0027t handle this event at current state\", e);\n         /* TODO fail the application on the failed transition */\n       }\n \n-      if (oldState !\u003d getAppAttemptState()) {\n-        LOG.info(appAttemptID + \" State change from \" + oldState + \" to \"\n-            + getAppAttemptState());\n+      // Log at INFO if we\u0027re not recovering or not in a terminal state.\n+      // Log at DEBUG otherwise.\n+      if ((oldState !\u003d getAppAttemptState()) \u0026\u0026\n+          ((recoveredFinalState \u003d\u003d null) ||\n+            (event.getType() !\u003d RMAppAttemptEventType.RECOVER))) {\n+        LOG.info(String.format(STATE_CHANGE_MESSAGE, appAttemptID, oldState,\n+            getAppAttemptState(), event.getType()));\n+      } else if ((oldState !\u003d getAppAttemptState()) \u0026\u0026 LOG.isDebugEnabled()) {\n+        LOG.debug(String.format(STATE_CHANGE_MESSAGE, appAttemptID, oldState,\n+            getAppAttemptState(), event.getType()));\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(RMAppAttemptEvent event) {\n\n    this.writeLock.lock();\n\n    try {\n      ApplicationAttemptId appAttemptID \u003d event.getApplicationAttemptId();\n      LOG.debug(\"Processing event for \" + appAttemptID + \" of type \"\n          + event.getType());\n      final RMAppAttemptState oldState \u003d getAppAttemptState();\n      try {\n        /* keep the master in sync with the state machine */\n        this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        /* TODO fail the application on the failed transition */\n      }\n\n      // Log at INFO if we\u0027re not recovering or not in a terminal state.\n      // Log at DEBUG otherwise.\n      if ((oldState !\u003d getAppAttemptState()) \u0026\u0026\n          ((recoveredFinalState \u003d\u003d null) ||\n            (event.getType() !\u003d RMAppAttemptEventType.RECOVER))) {\n        LOG.info(String.format(STATE_CHANGE_MESSAGE, appAttemptID, oldState,\n            getAppAttemptState(), event.getType()));\n      } else if ((oldState !\u003d getAppAttemptState()) \u0026\u0026 LOG.isDebugEnabled()) {\n        LOG.debug(String.format(STATE_CHANGE_MESSAGE, appAttemptID, oldState,\n            getAppAttemptState(), event.getType()));\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "19295b36d90e26616accee73b1f7743aab5df692": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3381. Fix typo InvalidStateTransitonException. Contributed by Brahma Reddy Battula.\n",
      "commitDate": "13/07/15 1:52 AM",
      "commitName": "19295b36d90e26616accee73b1f7743aab5df692",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "04/06/15 11:14 AM",
      "commitNameOld": "1970ca7cbcdb7efa160d0cedc2e3e22c1401fad6",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 38.61,
      "commitsBetweenForRepo": 245,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public void handle(RMAppAttemptEvent event) {\n \n     this.writeLock.lock();\n \n     try {\n       ApplicationAttemptId appAttemptID \u003d event.getApplicationAttemptId();\n       LOG.debug(\"Processing event for \" + appAttemptID + \" of type \"\n           + event.getType());\n       final RMAppAttemptState oldState \u003d getAppAttemptState();\n       try {\n         /* keep the master in sync with the state machine */\n         this.stateMachine.doTransition(event.getType(), event);\n-      } catch (InvalidStateTransitonException e) {\n+      } catch (InvalidStateTransitionException e) {\n         LOG.error(\"Can\u0027t handle this event at current state\", e);\n         /* TODO fail the application on the failed transition */\n       }\n \n       if (oldState !\u003d getAppAttemptState()) {\n         LOG.info(appAttemptID + \" State change from \" + oldState + \" to \"\n             + getAppAttemptState());\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(RMAppAttemptEvent event) {\n\n    this.writeLock.lock();\n\n    try {\n      ApplicationAttemptId appAttemptID \u003d event.getApplicationAttemptId();\n      LOG.debug(\"Processing event for \" + appAttemptID + \" of type \"\n          + event.getType());\n      final RMAppAttemptState oldState \u003d getAppAttemptState();\n      try {\n        /* keep the master in sync with the state machine */\n        this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        /* TODO fail the application on the failed transition */\n      }\n\n      if (oldState !\u003d getAppAttemptState()) {\n        LOG.info(appAttemptID + \" State change from \" + oldState + \" to \"\n            + getAppAttemptState());\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void handle(RMAppAttemptEvent event) {\n\n    this.writeLock.lock();\n\n    try {\n      ApplicationAttemptId appAttemptID \u003d event.getApplicationAttemptId();\n      LOG.debug(\"Processing event for \" + appAttemptID + \" of type \"\n          + event.getType());\n      final RMAppAttemptState oldState \u003d getAppAttemptState();\n      try {\n        /* keep the master in sync with the state machine */\n        this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        /* TODO fail the application on the failed transition */\n      }\n\n      if (oldState !\u003d getAppAttemptState()) {\n        LOG.info(appAttemptID + \" State change from \" + oldState + \" to \"\n            + getAppAttemptState());\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java"
      }
    },
    "68615600985dfadf067a4967a5e08c1421e7a1c8": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3692. yarn-resourcemanager out and log files can get big. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233605 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/01/12 2:23 PM",
      "commitName": "68615600985dfadf067a4967a5e08c1421e7a1c8",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "16/12/11 3:41 PM",
      "commitNameOld": "feb3a23c71a5e000f1100e1ca6459c1fade8befc",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 33.95,
      "commitsBetweenForRepo": 123,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public void handle(RMAppAttemptEvent event) {\n \n     this.writeLock.lock();\n \n     try {\n       ApplicationAttemptId appAttemptID \u003d event.getApplicationAttemptId();\n-      LOG.info(\"Processing event for \" + appAttemptID + \" of type \"\n+      LOG.debug(\"Processing event for \" + appAttemptID + \" of type \"\n           + event.getType());\n       final RMAppAttemptState oldState \u003d getAppAttemptState();\n       try {\n         /* keep the master in sync with the state machine */\n         this.stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitonException e) {\n         LOG.error(\"Can\u0027t handle this event at current state\", e);\n         /* TODO fail the application on the failed transition */\n       }\n \n       if (oldState !\u003d getAppAttemptState()) {\n         LOG.info(appAttemptID + \" State change from \" + oldState + \" to \"\n             + getAppAttemptState());\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(RMAppAttemptEvent event) {\n\n    this.writeLock.lock();\n\n    try {\n      ApplicationAttemptId appAttemptID \u003d event.getApplicationAttemptId();\n      LOG.debug(\"Processing event for \" + appAttemptID + \" of type \"\n          + event.getType());\n      final RMAppAttemptState oldState \u003d getAppAttemptState();\n      try {\n        /* keep the master in sync with the state machine */\n        this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        /* TODO fail the application on the failed transition */\n      }\n\n      if (oldState !\u003d getAppAttemptState()) {\n        LOG.info(appAttemptID + \" State change from \" + oldState + \" to \"\n            + getAppAttemptState());\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void handle(RMAppAttemptEvent event) {\n\n    this.writeLock.lock();\n\n    try {\n      ApplicationAttemptId appAttemptID \u003d event.getApplicationAttemptId();\n      LOG.info(\"Processing event for \" + appAttemptID + \" of type \"\n          + event.getType());\n      final RMAppAttemptState oldState \u003d getAppAttemptState();\n      try {\n        /* keep the master in sync with the state machine */\n        this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        /* TODO fail the application on the failed transition */\n      }\n\n      if (oldState !\u003d getAppAttemptState()) {\n        LOG.info(appAttemptID + \" State change from \" + oldState + \" to \"\n            + getAppAttemptState());\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,25 @@\n+  public void handle(RMAppAttemptEvent event) {\n+\n+    this.writeLock.lock();\n+\n+    try {\n+      ApplicationAttemptId appAttemptID \u003d event.getApplicationAttemptId();\n+      LOG.info(\"Processing event for \" + appAttemptID + \" of type \"\n+          + event.getType());\n+      final RMAppAttemptState oldState \u003d getAppAttemptState();\n+      try {\n+        /* keep the master in sync with the state machine */\n+        this.stateMachine.doTransition(event.getType(), event);\n+      } catch (InvalidStateTransitonException e) {\n+        LOG.error(\"Can\u0027t handle this event at current state\", e);\n+        /* TODO fail the application on the failed transition */\n+      }\n+\n+      if (oldState !\u003d getAppAttemptState()) {\n+        LOG.info(appAttemptID + \" State change from \" + oldState + \" to \"\n+            + getAppAttemptState());\n+      }\n+    } finally {\n+      this.writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(RMAppAttemptEvent event) {\n\n    this.writeLock.lock();\n\n    try {\n      ApplicationAttemptId appAttemptID \u003d event.getApplicationAttemptId();\n      LOG.info(\"Processing event for \" + appAttemptID + \" of type \"\n          + event.getType());\n      final RMAppAttemptState oldState \u003d getAppAttemptState();\n      try {\n        /* keep the master in sync with the state machine */\n        this.stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        /* TODO fail the application on the failed transition */\n      }\n\n      if (oldState !\u003d getAppAttemptState()) {\n        LOG.info(appAttemptID + \" State change from \" + oldState + \" to \"\n            + getAppAttemptState());\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java"
    }
  }
}