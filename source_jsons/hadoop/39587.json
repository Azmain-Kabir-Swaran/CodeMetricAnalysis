{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ParentQueue.java",
  "functionName": "recoverContainer",
  "functionId": "recoverContainer___clusterResource-Resource__attempt-SchedulerApplicationAttempt__rmContainer-RMContainer",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
  "functionStartLine": 1154,
  "functionEndLine": 1177,
  "numCommitsSeen": 138,
  "timeTaken": 12494,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc",
    "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
    "ae14e5d07f1b6702a5160637438028bb03d9387e",
    "fa7a43529d529f0006c8033c2003f15b9b93f103",
    "7e8c9beb4156dcaeb3a11e60aaa06d2370626913",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434",
    "0fefda645bca935b87b6bb8ca63e6f18340d59f5",
    "fdf042dfffa4d2474e3cac86cfb8fe9ee4648beb",
    "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
    "424fd9494f144c035fdef8c533be51e2027ad8d9",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc": "Ybodychange",
    "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4": "Ybodychange",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": "Ybodychange",
    "ae14e5d07f1b6702a5160637438028bb03d9387e": "Ybodychange",
    "fa7a43529d529f0006c8033c2003f15b9b93f103": "Ybodychange",
    "7e8c9beb4156dcaeb3a11e60aaa06d2370626913": "Ybodychange",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": "Ybodychange",
    "0fefda645bca935b87b6bb8ca63e6f18340d59f5": "Ybodychange",
    "fdf042dfffa4d2474e3cac86cfb8fe9ee4648beb": "Ybodychange",
    "f2ea555ac6c06a3f2f6559731f48711fff05d3f1": "Ybodychange",
    "424fd9494f144c035fdef8c533be51e2027ad8d9": "Ymultichange(Yparameterchange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": "Yparameterchange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public void recoverContainer(Resource clusterResource,\n       SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n     if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n       return;\n     }\n     if (rmContainer.getExecutionType() !\u003d ExecutionType.GUARANTEED) {\n       return;\n     }\n \n     // Careful! Locking order is important!\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       FiCaSchedulerNode node \u003d scheduler.getNode(\n           rmContainer.getContainer().getNodeId());\n       allocateResource(clusterResource,\n           rmContainer.getContainer().getResource(), node.getPartition());\n     } finally {\n       writeLock.unlock();\n     }\n \n     if (parent !\u003d null) {\n       parent.recoverContainer(clusterResource, attempt, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recoverContainer(Resource clusterResource,\n      SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n    if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n      return;\n    }\n    if (rmContainer.getExecutionType() !\u003d ExecutionType.GUARANTEED) {\n      return;\n    }\n\n    // Careful! Locking order is important!\n    writeLock.lock();\n    try {\n      FiCaSchedulerNode node \u003d scheduler.getNode(\n          rmContainer.getContainer().getNodeId());\n      allocateResource(clusterResource,\n          rmContainer.getContainer().getResource(), node.getPartition());\n    } finally {\n      writeLock.unlock();\n    }\n\n    if (parent !\u003d null) {\n      parent.recoverContainer(clusterResource, attempt, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6849. NMContainerStatus should have the Container ExecutionType. (Kartheek Muthyala via asuresh)\n",
      "commitDate": "08/09/17 9:24 AM",
      "commitName": "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "14/08/17 1:31 PM",
      "commitNameOld": "5558792894169425bff054364a1ab4c48b347fb9",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 24.83,
      "commitsBetweenForRepo": 217,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,24 @@\n   public void recoverContainer(Resource clusterResource,\n       SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n     if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n       return;\n     }\n+    if (rmContainer.getExecutionType() !\u003d ExecutionType.GUARANTEED) {\n+      return;\n+    }\n \n     // Careful! Locking order is important!\n     try {\n       writeLock.lock();\n       FiCaSchedulerNode node \u003d scheduler.getNode(\n           rmContainer.getContainer().getNodeId());\n       allocateResource(clusterResource,\n           rmContainer.getContainer().getResource(), node.getPartition());\n     } finally {\n       writeLock.unlock();\n     }\n \n     if (parent !\u003d null) {\n       parent.recoverContainer(clusterResource, attempt, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recoverContainer(Resource clusterResource,\n      SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n    if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n      return;\n    }\n    if (rmContainer.getExecutionType() !\u003d ExecutionType.GUARANTEED) {\n      return;\n    }\n\n    // Careful! Locking order is important!\n    try {\n      writeLock.lock();\n      FiCaSchedulerNode node \u003d scheduler.getNode(\n          rmContainer.getContainer().getNodeId());\n      allocateResource(clusterResource,\n          rmContainer.getContainer().getResource(), node.getPartition());\n    } finally {\n      writeLock.unlock();\n    }\n\n    if (parent !\u003d null) {\n      parent.recoverContainer(clusterResource, attempt, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6216. Unify Container Resizing code paths with Container Updates making it scheduler agnostic. (Arun Suresh via wangda)\n",
      "commitDate": "28/02/17 10:35 AM",
      "commitName": "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "09/02/17 10:23 AM",
      "commitNameOld": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 19.01,
      "commitsBetweenForRepo": 112,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public void recoverContainer(Resource clusterResource,\n       SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n     if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n       return;\n     }\n \n     // Careful! Locking order is important!\n     try {\n       writeLock.lock();\n       FiCaSchedulerNode node \u003d scheduler.getNode(\n           rmContainer.getContainer().getNodeId());\n       allocateResource(clusterResource,\n-          rmContainer.getContainer().getResource(), node.getPartition(), false);\n+          rmContainer.getContainer().getResource(), node.getPartition());\n     } finally {\n       writeLock.unlock();\n     }\n \n     if (parent !\u003d null) {\n       parent.recoverContainer(clusterResource, attempt, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recoverContainer(Resource clusterResource,\n      SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n    if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n      return;\n    }\n\n    // Careful! Locking order is important!\n    try {\n      writeLock.lock();\n      FiCaSchedulerNode node \u003d scheduler.getNode(\n          rmContainer.getContainer().getNodeId());\n      allocateResource(clusterResource,\n          rmContainer.getContainer().getResource(), node.getPartition());\n    } finally {\n      writeLock.unlock();\n    }\n\n    if (parent !\u003d null) {\n      parent.recoverContainer(clusterResource, attempt, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
      "commitDate": "20/09/16 12:03 AM",
      "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
      "commitAuthor": "Jian He",
      "commitDateOld": "16/09/16 10:05 PM",
      "commitNameOld": "4174b9756c8c7877797545c4356b1f40df603ec5",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 3.08,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,21 @@\n   public void recoverContainer(Resource clusterResource,\n       SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n     if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n       return;\n     }\n-    // Careful! Locking order is important! \n-    synchronized (this) {\n-      FiCaSchedulerNode node \u003d\n-          scheduler.getNode(rmContainer.getContainer().getNodeId());\n+\n+    // Careful! Locking order is important!\n+    try {\n+      writeLock.lock();\n+      FiCaSchedulerNode node \u003d scheduler.getNode(\n+          rmContainer.getContainer().getNodeId());\n       allocateResource(clusterResource,\n           rmContainer.getContainer().getResource(), node.getPartition(), false);\n+    } finally {\n+      writeLock.unlock();\n     }\n+\n     if (parent !\u003d null) {\n       parent.recoverContainer(clusterResource, attempt, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recoverContainer(Resource clusterResource,\n      SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n    if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n      return;\n    }\n\n    // Careful! Locking order is important!\n    try {\n      writeLock.lock();\n      FiCaSchedulerNode node \u003d scheduler.getNode(\n          rmContainer.getContainer().getNodeId());\n      allocateResource(clusterResource,\n          rmContainer.getContainer().getResource(), node.getPartition(), false);\n    } finally {\n      writeLock.unlock();\n    }\n\n    if (parent !\u003d null) {\n      parent.recoverContainer(clusterResource, attempt, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "ae14e5d07f1b6702a5160637438028bb03d9387e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4108. CapacityScheduler: Improve preemption to only kill containers that would satisfy the incoming request. (Wangda Tan)\n\n(cherry picked from commit 7e8c9beb4156dcaeb3a11e60aaa06d2370626913)\n",
      "commitDate": "16/03/16 5:02 PM",
      "commitName": "ae14e5d07f1b6702a5160637438028bb03d9387e",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/03/16 5:02 PM",
      "commitNameOld": "fa7a43529d529f0006c8033c2003f15b9b93f103",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void recoverContainer(Resource clusterResource,\n       SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n     if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n       return;\n     }\n     // Careful! Locking order is important! \n     synchronized (this) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n-      super.allocateResource(clusterResource, rmContainer.getContainer()\n-          .getResource(), node.getPartition(), false);\n+      allocateResource(clusterResource,\n+          rmContainer.getContainer().getResource(), node.getPartition(), false);\n     }\n     if (parent !\u003d null) {\n       parent.recoverContainer(clusterResource, attempt, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recoverContainer(Resource clusterResource,\n      SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n    if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n      return;\n    }\n    // Careful! Locking order is important! \n    synchronized (this) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      allocateResource(clusterResource,\n          rmContainer.getContainer().getResource(), node.getPartition(), false);\n    }\n    if (parent !\u003d null) {\n      parent.recoverContainer(clusterResource, attempt, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "fa7a43529d529f0006c8033c2003f15b9b93f103": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"CapacityScheduler: Improve preemption to only kill containers that would satisfy the incoming request. (Wangda Tan)\"\n\nThis reverts commit 7e8c9beb4156dcaeb3a11e60aaa06d2370626913.\n",
      "commitDate": "16/03/16 5:02 PM",
      "commitName": "fa7a43529d529f0006c8033c2003f15b9b93f103",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/03/16 4:59 PM",
      "commitNameOld": "7e8c9beb4156dcaeb3a11e60aaa06d2370626913",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void recoverContainer(Resource clusterResource,\n       SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n     if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n       return;\n     }\n     // Careful! Locking order is important! \n     synchronized (this) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n-      allocateResource(clusterResource,\n-          rmContainer.getContainer().getResource(), node.getPartition(), false);\n+      super.allocateResource(clusterResource, rmContainer.getContainer()\n+          .getResource(), node.getPartition(), false);\n     }\n     if (parent !\u003d null) {\n       parent.recoverContainer(clusterResource, attempt, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recoverContainer(Resource clusterResource,\n      SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n    if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n      return;\n    }\n    // Careful! Locking order is important! \n    synchronized (this) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      super.allocateResource(clusterResource, rmContainer.getContainer()\n          .getResource(), node.getPartition(), false);\n    }\n    if (parent !\u003d null) {\n      parent.recoverContainer(clusterResource, attempt, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "7e8c9beb4156dcaeb3a11e60aaa06d2370626913": {
      "type": "Ybodychange",
      "commitMessage": "CapacityScheduler: Improve preemption to only kill containers that would satisfy the incoming request. (Wangda Tan)\n",
      "commitDate": "16/03/16 4:59 PM",
      "commitName": "7e8c9beb4156dcaeb3a11e60aaa06d2370626913",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "28/02/16 9:35 AM",
      "commitNameOld": "f9692770a58af0ab082eb7f15da9cbdcd177605b",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 17.27,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void recoverContainer(Resource clusterResource,\n       SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n     if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n       return;\n     }\n     // Careful! Locking order is important! \n     synchronized (this) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n-      super.allocateResource(clusterResource, rmContainer.getContainer()\n-          .getResource(), node.getPartition(), false);\n+      allocateResource(clusterResource,\n+          rmContainer.getContainer().getResource(), node.getPartition(), false);\n     }\n     if (parent !\u003d null) {\n       parent.recoverContainer(clusterResource, attempt, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recoverContainer(Resource clusterResource,\n      SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n    if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n      return;\n    }\n    // Careful! Locking order is important! \n    synchronized (this) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      allocateResource(clusterResource,\n          rmContainer.getContainer().getResource(), node.getPartition(), false);\n    }\n    if (parent !\u003d null) {\n      parent.recoverContainer(clusterResource, attempt, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1651. CapacityScheduler side changes to support container resize. Contributed by Wangda Tan\n",
      "commitDate": "23/09/15 1:29 PM",
      "commitName": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
      "commitAuthor": "Jian He",
      "commitDateOld": "07/08/15 9:46 AM",
      "commitNameOld": "4bc42d76e7fa53cb268cab0f9fe1fd8d8dbb17fd",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 47.15,
      "commitsBetweenForRepo": 271,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void recoverContainer(Resource clusterResource,\n       SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n     if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n       return;\n     }\n     // Careful! Locking order is important! \n     synchronized (this) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n       super.allocateResource(clusterResource, rmContainer.getContainer()\n-          .getResource(), node.getPartition());\n+          .getResource(), node.getPartition(), false);\n     }\n     if (parent !\u003d null) {\n       parent.recoverContainer(clusterResource, attempt, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recoverContainer(Resource clusterResource,\n      SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n    if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n      return;\n    }\n    // Careful! Locking order is important! \n    synchronized (this) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      super.allocateResource(clusterResource, rmContainer.getContainer()\n          .getResource(), node.getPartition(), false);\n    }\n    if (parent !\u003d null) {\n      parent.recoverContainer(clusterResource, attempt, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "0fefda645bca935b87b6bb8ca63e6f18340d59f5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3361. CapacityScheduler side changes to support non-exclusive node labels. Contributed by Wangda Tan\n",
      "commitDate": "14/04/15 11:45 AM",
      "commitName": "0fefda645bca935b87b6bb8ca63e6f18340d59f5",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/04/15 11:38 PM",
      "commitNameOld": "afa5d4715a3aea2a6e93380b014c7bb8f0880383",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 4.51,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void recoverContainer(Resource clusterResource,\n       SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n     if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n       return;\n     }\n     // Careful! Locking order is important! \n     synchronized (this) {\n       FiCaSchedulerNode node \u003d\n           scheduler.getNode(rmContainer.getContainer().getNodeId());\n       super.allocateResource(clusterResource, rmContainer.getContainer()\n-          .getResource(), node.getLabels());\n+          .getResource(), node.getPartition());\n     }\n     if (parent !\u003d null) {\n       parent.recoverContainer(clusterResource, attempt, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recoverContainer(Resource clusterResource,\n      SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n    if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n      return;\n    }\n    // Careful! Locking order is important! \n    synchronized (this) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      super.allocateResource(clusterResource, rmContainer.getContainer()\n          .getResource(), node.getPartition());\n    }\n    if (parent !\u003d null) {\n      parent.recoverContainer(clusterResource, attempt, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "fdf042dfffa4d2474e3cac86cfb8fe9ee4648beb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2920. Changed CapacityScheduler to kill containers on nodes where node labels are changed. Contributed by  Wangda Tan\n",
      "commitDate": "22/12/14 4:51 PM",
      "commitName": "fdf042dfffa4d2474e3cac86cfb8fe9ee4648beb",
      "commitAuthor": "Jian He",
      "commitDateOld": "15/10/14 6:33 PM",
      "commitNameOld": "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 67.97,
      "commitsBetweenForRepo": 558,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   public void recoverContainer(Resource clusterResource,\n       SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n     if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n       return;\n     }\n     // Careful! Locking order is important! \n     synchronized (this) {\n+      FiCaSchedulerNode node \u003d\n+          scheduler.getNode(rmContainer.getContainer().getNodeId());\n       super.allocateResource(clusterResource, rmContainer.getContainer()\n-          .getResource(), labelManager.getLabelsOnNode(rmContainer\n-          .getContainer().getNodeId()));\n+          .getResource(), node.getLabels());\n     }\n     if (parent !\u003d null) {\n       parent.recoverContainer(clusterResource, attempt, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recoverContainer(Resource clusterResource,\n      SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n    if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n      return;\n    }\n    // Careful! Locking order is important! \n    synchronized (this) {\n      FiCaSchedulerNode node \u003d\n          scheduler.getNode(rmContainer.getContainer().getNodeId());\n      super.allocateResource(clusterResource, rmContainer.getContainer()\n          .getResource(), node.getLabels());\n    }\n    if (parent !\u003d null) {\n      parent.recoverContainer(clusterResource, attempt, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "f2ea555ac6c06a3f2f6559731f48711fff05d3f1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2496. Enhanced Capacity Scheduler to have basic support for allocating resources based on node-labels. Contributed by Wangda Tan.\nYARN-2500. Ehnaced ResourceManager to support schedulers allocating resources based on node-labels. Contributed by Wangda Tan.\n",
      "commitDate": "15/10/14 6:33 PM",
      "commitName": "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/10/14 3:41 PM",
      "commitNameOld": "eb3e40b833b9d82c1556843f960194dc42e482f3",
      "commitAuthorOld": "carlo curino",
      "daysBetweenCommits": 12.12,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n   public void recoverContainer(Resource clusterResource,\n       SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n     if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n       return;\n     }\n     // Careful! Locking order is important! \n     synchronized (this) {\n-      allocateResource(clusterResource,rmContainer.getContainer().getResource());\n+      super.allocateResource(clusterResource, rmContainer.getContainer()\n+          .getResource(), labelManager.getLabelsOnNode(rmContainer\n+          .getContainer().getNodeId()));\n     }\n     if (parent !\u003d null) {\n       parent.recoverContainer(clusterResource, attempt, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recoverContainer(Resource clusterResource,\n      SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n    if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n      return;\n    }\n    // Careful! Locking order is important! \n    synchronized (this) {\n      super.allocateResource(clusterResource, rmContainer.getContainer()\n          .getResource(), labelManager.getLabelsOnNode(rmContainer\n          .getContainer().getNodeId()));\n    }\n    if (parent !\u003d null) {\n      parent.recoverContainer(clusterResource, attempt, rmContainer);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "424fd9494f144c035fdef8c533be51e2027ad8d9": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1368. Added core functionality of recovering container state into schedulers after ResourceManager Restart so as to preserve running work in the cluster. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601303 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/06/14 8:09 PM",
      "commitName": "424fd9494f144c035fdef8c533be51e2027ad8d9",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1368. Added core functionality of recovering container state into schedulers after ResourceManager Restart so as to preserve running work in the cluster. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601303 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/06/14 8:09 PM",
          "commitName": "424fd9494f144c035fdef8c533be51e2027ad8d9",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "21/05/14 10:32 PM",
          "commitNameOld": "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 17.9,
          "commitsBetweenForRepo": 83,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,13 @@\n   public void recoverContainer(Resource clusterResource,\n-      FiCaSchedulerApp application, Container container) {\n+      SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n+    if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n+      return;\n+    }\n     // Careful! Locking order is important! \n     synchronized (this) {\n-      allocateResource(clusterResource, container.getResource());\n+      allocateResource(clusterResource,rmContainer.getContainer().getResource());\n     }\n     if (parent !\u003d null) {\n-      parent.recoverContainer(clusterResource, application, container);\n+      parent.recoverContainer(clusterResource, attempt, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void recoverContainer(Resource clusterResource,\n      SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n    if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n      return;\n    }\n    // Careful! Locking order is important! \n    synchronized (this) {\n      allocateResource(clusterResource,rmContainer.getContainer().getResource());\n    }\n    if (parent !\u003d null) {\n      parent.recoverContainer(clusterResource, attempt, rmContainer);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
          "extendedDetails": {
            "oldValue": "[clusterResource-Resource, application-FiCaSchedulerApp, container-Container]",
            "newValue": "[clusterResource-Resource, attempt-SchedulerApplicationAttempt, rmContainer-RMContainer]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1368. Added core functionality of recovering container state into schedulers after ResourceManager Restart so as to preserve running work in the cluster. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601303 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/06/14 8:09 PM",
          "commitName": "424fd9494f144c035fdef8c533be51e2027ad8d9",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "21/05/14 10:32 PM",
          "commitNameOld": "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 17.9,
          "commitsBetweenForRepo": 83,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,13 @@\n   public void recoverContainer(Resource clusterResource,\n-      FiCaSchedulerApp application, Container container) {\n+      SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n+    if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n+      return;\n+    }\n     // Careful! Locking order is important! \n     synchronized (this) {\n-      allocateResource(clusterResource, container.getResource());\n+      allocateResource(clusterResource,rmContainer.getContainer().getResource());\n     }\n     if (parent !\u003d null) {\n-      parent.recoverContainer(clusterResource, application, container);\n+      parent.recoverContainer(clusterResource, attempt, rmContainer);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void recoverContainer(Resource clusterResource,\n      SchedulerApplicationAttempt attempt, RMContainer rmContainer) {\n    if (rmContainer.getState().equals(RMContainerState.COMPLETED)) {\n      return;\n    }\n    // Careful! Locking order is important! \n    synchronized (this) {\n      allocateResource(clusterResource,rmContainer.getContainer().getResource());\n    }\n    if (parent !\u003d null) {\n      parent.recoverContainer(clusterResource, attempt, rmContainer);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void recoverContainer(Resource clusterResource,\n      FiCaSchedulerApp application, Container container) {\n    // Careful! Locking order is important! \n    synchronized (this) {\n      allocateResource(clusterResource, container.getResource());\n    }\n    if (parent !\u003d null) {\n      parent.recoverContainer(clusterResource, application, container);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java"
      }
    },
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": {
      "type": "Yparameterchange",
      "commitMessage": "MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/12 6:43 PM",
      "commitName": "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "19/06/12 6:06 AM",
      "commitNameOld": "01b61c76a85858a0bc0cba24cc00f961affa4922",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 27.53,
      "commitsBetweenForRepo": 163,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   public void recoverContainer(Resource clusterResource,\n-      SchedulerApp application, Container container) {\n+      FiCaSchedulerApp application, Container container) {\n     // Careful! Locking order is important! \n     synchronized (this) {\n       allocateResource(clusterResource, container.getResource());\n     }\n     if (parent !\u003d null) {\n       parent.recoverContainer(clusterResource, application, container);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recoverContainer(Resource clusterResource,\n      FiCaSchedulerApp application, Container container) {\n    // Careful! Locking order is important! \n    synchronized (this) {\n      allocateResource(clusterResource, container.getResource());\n    }\n    if (parent !\u003d null) {\n      parent.recoverContainer(clusterResource, application, container);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {
        "oldValue": "[clusterResource-Resource, application-SchedulerApp, container-Container]",
        "newValue": "[clusterResource-Resource, application-FiCaSchedulerApp, container-Container]"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void recoverContainer(Resource clusterResource,\n      SchedulerApp application, Container container) {\n    // Careful! Locking order is important! \n    synchronized (this) {\n      allocateResource(clusterResource, container.getResource());\n    }\n    if (parent !\u003d null) {\n      parent.recoverContainer(clusterResource, application, container);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,10 @@\n+  public void recoverContainer(Resource clusterResource,\n+      SchedulerApp application, Container container) {\n+    // Careful! Locking order is important! \n+    synchronized (this) {\n+      allocateResource(clusterResource, container.getResource());\n+    }\n+    if (parent !\u003d null) {\n+      parent.recoverContainer(clusterResource, application, container);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void recoverContainer(Resource clusterResource,\n      SchedulerApp application, Container container) {\n    // Careful! Locking order is important! \n    synchronized (this) {\n      allocateResource(clusterResource, container.getResource());\n    }\n    if (parent !\u003d null) {\n      parent.recoverContainer(clusterResource, application, container);\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java"
    }
  }
}