{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DecayRpcScheduler.java",
  "functionName": "shouldBackOff",
  "functionId": "shouldBackOff___obj-Schedulable",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
  "functionStartLine": 601,
  "functionEndLine": 625,
  "numCommitsSeen": 19,
  "timeTaken": 1363,
  "changeHistory": [
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc"
  ],
  "changeHistoryShort": {
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12916. Allow RPC scheduler/callqueue backoff using response times. Contributed by Xiaoyu Yao.\n",
      "commitDate": "31/03/16 8:42 AM",
      "commitName": "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,25 @@\n+  public boolean shouldBackOff(Schedulable obj) {\n+    Boolean backOff \u003d false;\n+    if (backOffByResponseTimeEnabled) {\n+      int priorityLevel \u003d obj.getPriorityLevel();\n+      if (LOG.isDebugEnabled()) {\n+        double[] responseTimes \u003d getAverageResponseTime();\n+        LOG.debug(\"Current Caller: {}  Priority: {} \",\n+            obj.getUserGroupInformation().getUserName(),\n+            obj.getPriorityLevel());\n+        for (int i \u003d 0; i \u003c numLevels; i++) {\n+          LOG.debug(\"Queue: {} responseTime: {} backoffThreshold: {}\", i,\n+              responseTimes[i], backOffResponseTimeThresholds[i]);\n+        }\n+      }\n+      // High priority rpc over threshold triggers back off of low priority rpc\n+      for (int i \u003d 0; i \u003c priorityLevel + 1; i++) {\n+        if (responseTimeAvgInLastWindow.get(i) \u003e\n+            backOffResponseTimeThresholds[i]) {\n+          backOff \u003d true;\n+          break;\n+        }\n+      }\n+    }\n+    return backOff;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean shouldBackOff(Schedulable obj) {\n    Boolean backOff \u003d false;\n    if (backOffByResponseTimeEnabled) {\n      int priorityLevel \u003d obj.getPriorityLevel();\n      if (LOG.isDebugEnabled()) {\n        double[] responseTimes \u003d getAverageResponseTime();\n        LOG.debug(\"Current Caller: {}  Priority: {} \",\n            obj.getUserGroupInformation().getUserName(),\n            obj.getPriorityLevel());\n        for (int i \u003d 0; i \u003c numLevels; i++) {\n          LOG.debug(\"Queue: {} responseTime: {} backoffThreshold: {}\", i,\n              responseTimes[i], backOffResponseTimeThresholds[i]);\n        }\n      }\n      // High priority rpc over threshold triggers back off of low priority rpc\n      for (int i \u003d 0; i \u003c priorityLevel + 1; i++) {\n        if (responseTimeAvgInLastWindow.get(i) \u003e\n            backOffResponseTimeThresholds[i]) {\n          backOff \u003d true;\n          break;\n        }\n      }\n    }\n    return backOff;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java"
    }
  }
}