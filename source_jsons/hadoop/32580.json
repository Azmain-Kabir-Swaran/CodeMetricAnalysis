{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMWebServices.java",
  "functionName": "putAuxiliaryServices",
  "functionId": "putAuxiliaryServices___req-HttpServletRequest(annotations-@javax.ws.rs.core.Context)__services-AuxServiceRecords",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
  "functionStartLine": 583,
  "functionEndLine": 603,
  "numCommitsSeen": 32,
  "timeTaken": 1646,
  "changeHistory": [
    "1ab69a9543df555b878951e66e3da13485e7f6d5",
    "2fa9389c2e1ca4853a61533686941c685c889dbe"
  ],
  "changeHistoryShort": {
    "1ab69a9543df555b878951e66e3da13485e7f6d5": "Ybodychange",
    "2fa9389c2e1ca4853a61533686941c685c889dbe": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1ab69a9543df555b878951e66e3da13485e7f6d5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9221.  Added flag to disable dynamic auxiliary service feature.\n            Contributed by Billie Rinaldi\n",
      "commitDate": "25/01/19 4:05 PM",
      "commitName": "1ab69a9543df555b878951e66e3da13485e7f6d5",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "22/01/19 3:24 PM",
      "commitNameOld": "2fa9389c2e1ca4853a61533686941c685c889dbe",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 3.03,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,21 @@\n   public Response putAuxiliaryServices(@javax.ws.rs.core.Context\n       HttpServletRequest req, AuxServiceRecords services) {\n+    init();\n+    if (!this.nmContext.getAuxServices().isManifestEnabled()) {\n+      throw new BadRequestException(\"Auxiliary services manifest is not \" +\n+          \"enabled\");\n+    }\n     if (!hasAdminAccess(req)) {\n       return Response.status(Status.FORBIDDEN).build();\n     }\n     if (services \u003d\u003d null) {\n       return Response.status(Status.BAD_REQUEST).build();\n     }\n     try {\n       nmContext.getAuxServices().reload(services);\n     } catch (Exception e) {\n       LOG.error(\"Fail to reload auxiliary services, reason: \", e);\n       return Response.status(Status.INTERNAL_SERVER_ERROR).entity(e).build();\n     }\n     return Response.ok().build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response putAuxiliaryServices(@javax.ws.rs.core.Context\n      HttpServletRequest req, AuxServiceRecords services) {\n    init();\n    if (!this.nmContext.getAuxServices().isManifestEnabled()) {\n      throw new BadRequestException(\"Auxiliary services manifest is not \" +\n          \"enabled\");\n    }\n    if (!hasAdminAccess(req)) {\n      return Response.status(Status.FORBIDDEN).build();\n    }\n    if (services \u003d\u003d null) {\n      return Response.status(Status.BAD_REQUEST).build();\n    }\n    try {\n      nmContext.getAuxServices().reload(services);\n    } catch (Exception e) {\n      LOG.error(\"Fail to reload auxiliary services, reason: \", e);\n      return Response.status(Status.INTERNAL_SERVER_ERROR).entity(e).build();\n    }\n    return Response.ok().build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
      "extendedDetails": {}
    },
    "2fa9389c2e1ca4853a61533686941c685c889dbe": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9146.  Added REST API to configure auxiliary service.\n            Contributed by Billie Rinaldi\n",
      "commitDate": "22/01/19 3:24 PM",
      "commitName": "2fa9389c2e1ca4853a61533686941c685c889dbe",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,16 @@\n+  public Response putAuxiliaryServices(@javax.ws.rs.core.Context\n+      HttpServletRequest req, AuxServiceRecords services) {\n+    if (!hasAdminAccess(req)) {\n+      return Response.status(Status.FORBIDDEN).build();\n+    }\n+    if (services \u003d\u003d null) {\n+      return Response.status(Status.BAD_REQUEST).build();\n+    }\n+    try {\n+      nmContext.getAuxServices().reload(services);\n+    } catch (Exception e) {\n+      LOG.error(\"Fail to reload auxiliary services, reason: \", e);\n+      return Response.status(Status.INTERNAL_SERVER_ERROR).entity(e).build();\n+    }\n+    return Response.ok().build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Response putAuxiliaryServices(@javax.ws.rs.core.Context\n      HttpServletRequest req, AuxServiceRecords services) {\n    if (!hasAdminAccess(req)) {\n      return Response.status(Status.FORBIDDEN).build();\n    }\n    if (services \u003d\u003d null) {\n      return Response.status(Status.BAD_REQUEST).build();\n    }\n    try {\n      nmContext.getAuxServices().reload(services);\n    } catch (Exception e) {\n      LOG.error(\"Fail to reload auxiliary services, reason: \", e);\n      return Response.status(Status.INTERNAL_SERVER_ERROR).entity(e).build();\n    }\n    return Response.ok().build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java"
    }
  }
}