{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NetworkTopologyWithNodeGroup.java",
  "functionName": "sortByDistance",
  "functionId": "sortByDistance___reader-Node__nodes-Node[]__activeLen-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java",
  "functionStartLine": 286,
  "functionEndLine": 300,
  "numCommitsSeen": 38,
  "timeTaken": 2731,
  "changeHistory": [
    "8e73084491c9f317bc8cc3590f93ca67a63687a8",
    "cfeaf4cd093a83db5c84ce04a4438a2a60663df9",
    "c83c5b868ea34925ecb1597cf1ceb88524ded185",
    "123c563fe6f7a655f11d7414f992d448c5047006",
    "02fcb6b6bae7c3fe2a10b00b2a563e4098ff225e"
  ],
  "changeHistoryShort": {
    "8e73084491c9f317bc8cc3590f93ca67a63687a8": "Ymultichange(Yparameterchange,Ybodychange)",
    "cfeaf4cd093a83db5c84ce04a4438a2a60663df9": "Ybodychange",
    "c83c5b868ea34925ecb1597cf1ceb88524ded185": "Ymultichange(Yparameterchange,Ybodychange)",
    "123c563fe6f7a655f11d7414f992d448c5047006": "Ymultichange(Yparameterchange,Ybodychange)",
    "02fcb6b6bae7c3fe2a10b00b2a563e4098ff225e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8e73084491c9f317bc8cc3590f93ca67a63687a8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6840. Clients are always sent to the same datanode when read is off rack. (wang)\n",
      "commitDate": "18/09/14 5:49 PM",
      "commitName": "8e73084491c9f317bc8cc3590f93ca67a63687a8",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6840. Clients are always sent to the same datanode when read is off rack. (wang)\n",
          "commitDate": "18/09/14 5:49 PM",
          "commitName": "8e73084491c9f317bc8cc3590f93ca67a63687a8",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "14/08/14 10:50 PM",
          "commitNameOld": "cfeaf4cd093a83db5c84ce04a4438a2a60663df9",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 34.79,
          "commitsBetweenForRepo": 320,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,15 @@\n-  public void sortByDistance(Node reader, Node[] nodes, int activeLen,\n-      long seed, boolean randomizeBlockLocationsPerBlock) {\n+  public void sortByDistance(Node reader, Node[] nodes, int activeLen) {\n     // If reader is not a datanode (not in NetworkTopology tree), we need to\n     // replace this reader with a sibling leaf node in tree.\n     if (reader !\u003d null \u0026\u0026 !this.contains(reader)) {\n       Node nodeGroup \u003d getNode(reader.getNetworkLocation());\n       if (nodeGroup !\u003d null \u0026\u0026 nodeGroup instanceof InnerNode) {\n         InnerNode parentNode \u003d (InnerNode) nodeGroup;\n         // replace reader with the first children of its parent in tree\n         reader \u003d parentNode.getLeaf(0, null);\n       } else {\n         return;\n       }\n     }\n-    super.sortByDistance(reader, nodes, activeLen, seed,\n-        randomizeBlockLocationsPerBlock);\n+    super.sortByDistance(reader, nodes, activeLen);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void sortByDistance(Node reader, Node[] nodes, int activeLen) {\n    // If reader is not a datanode (not in NetworkTopology tree), we need to\n    // replace this reader with a sibling leaf node in tree.\n    if (reader !\u003d null \u0026\u0026 !this.contains(reader)) {\n      Node nodeGroup \u003d getNode(reader.getNetworkLocation());\n      if (nodeGroup !\u003d null \u0026\u0026 nodeGroup instanceof InnerNode) {\n        InnerNode parentNode \u003d (InnerNode) nodeGroup;\n        // replace reader with the first children of its parent in tree\n        reader \u003d parentNode.getLeaf(0, null);\n      } else {\n        return;\n      }\n    }\n    super.sortByDistance(reader, nodes, activeLen);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java",
          "extendedDetails": {
            "oldValue": "[reader-Node, nodes-Node[], activeLen-int, seed-long, randomizeBlockLocationsPerBlock-boolean]",
            "newValue": "[reader-Node, nodes-Node[], activeLen-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6840. Clients are always sent to the same datanode when read is off rack. (wang)\n",
          "commitDate": "18/09/14 5:49 PM",
          "commitName": "8e73084491c9f317bc8cc3590f93ca67a63687a8",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "14/08/14 10:50 PM",
          "commitNameOld": "cfeaf4cd093a83db5c84ce04a4438a2a60663df9",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 34.79,
          "commitsBetweenForRepo": 320,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,15 @@\n-  public void sortByDistance(Node reader, Node[] nodes, int activeLen,\n-      long seed, boolean randomizeBlockLocationsPerBlock) {\n+  public void sortByDistance(Node reader, Node[] nodes, int activeLen) {\n     // If reader is not a datanode (not in NetworkTopology tree), we need to\n     // replace this reader with a sibling leaf node in tree.\n     if (reader !\u003d null \u0026\u0026 !this.contains(reader)) {\n       Node nodeGroup \u003d getNode(reader.getNetworkLocation());\n       if (nodeGroup !\u003d null \u0026\u0026 nodeGroup instanceof InnerNode) {\n         InnerNode parentNode \u003d (InnerNode) nodeGroup;\n         // replace reader with the first children of its parent in tree\n         reader \u003d parentNode.getLeaf(0, null);\n       } else {\n         return;\n       }\n     }\n-    super.sortByDistance(reader, nodes, activeLen, seed,\n-        randomizeBlockLocationsPerBlock);\n+    super.sortByDistance(reader, nodes, activeLen);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void sortByDistance(Node reader, Node[] nodes, int activeLen) {\n    // If reader is not a datanode (not in NetworkTopology tree), we need to\n    // replace this reader with a sibling leaf node in tree.\n    if (reader !\u003d null \u0026\u0026 !this.contains(reader)) {\n      Node nodeGroup \u003d getNode(reader.getNetworkLocation());\n      if (nodeGroup !\u003d null \u0026\u0026 nodeGroup instanceof InnerNode) {\n        InnerNode parentNode \u003d (InnerNode) nodeGroup;\n        // replace reader with the first children of its parent in tree\n        reader \u003d parentNode.getLeaf(0, null);\n      } else {\n        return;\n      }\n    }\n    super.sortByDistance(reader, nodes, activeLen);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java",
          "extendedDetails": {}
        }
      ]
    },
    "cfeaf4cd093a83db5c84ce04a4438a2a60663df9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10964. Small fix for NetworkTopologyWithNodeGroup#sortByDistance. Contributed by Yi Liu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1618103 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/08/14 10:50 PM",
      "commitName": "cfeaf4cd093a83db5c84ce04a4438a2a60663df9",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "22/07/14 10:47 AM",
      "commitNameOld": "c83c5b868ea34925ecb1597cf1ceb88524ded185",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 23.5,
      "commitsBetweenForRepo": 193,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public void sortByDistance(Node reader, Node[] nodes, int activeLen,\n       long seed, boolean randomizeBlockLocationsPerBlock) {\n     // If reader is not a datanode (not in NetworkTopology tree), we need to\n     // replace this reader with a sibling leaf node in tree.\n     if (reader !\u003d null \u0026\u0026 !this.contains(reader)) {\n       Node nodeGroup \u003d getNode(reader.getNetworkLocation());\n       if (nodeGroup !\u003d null \u0026\u0026 nodeGroup instanceof InnerNode) {\n         InnerNode parentNode \u003d (InnerNode) nodeGroup;\n         // replace reader with the first children of its parent in tree\n         reader \u003d parentNode.getLeaf(0, null);\n       } else {\n         return;\n       }\n     }\n-    super.sortByDistance(reader, nodes, nodes.length, seed,\n+    super.sortByDistance(reader, nodes, activeLen, seed,\n         randomizeBlockLocationsPerBlock);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void sortByDistance(Node reader, Node[] nodes, int activeLen,\n      long seed, boolean randomizeBlockLocationsPerBlock) {\n    // If reader is not a datanode (not in NetworkTopology tree), we need to\n    // replace this reader with a sibling leaf node in tree.\n    if (reader !\u003d null \u0026\u0026 !this.contains(reader)) {\n      Node nodeGroup \u003d getNode(reader.getNetworkLocation());\n      if (nodeGroup !\u003d null \u0026\u0026 nodeGroup instanceof InnerNode) {\n        InnerNode parentNode \u003d (InnerNode) nodeGroup;\n        // replace reader with the first children of its parent in tree\n        reader \u003d parentNode.getLeaf(0, null);\n      } else {\n        return;\n      }\n    }\n    super.sortByDistance(reader, nodes, activeLen, seed,\n        randomizeBlockLocationsPerBlock);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java",
      "extendedDetails": {}
    },
    "c83c5b868ea34925ecb1597cf1ceb88524ded185": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6701. Make seed optional in NetworkTopology#sortByDistance. Contributed by Ashwin Shankar.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612625 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/07/14 10:47 AM",
      "commitName": "c83c5b868ea34925ecb1597cf1ceb88524ded185",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6701. Make seed optional in NetworkTopology#sortByDistance. Contributed by Ashwin Shankar.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612625 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/07/14 10:47 AM",
          "commitName": "c83c5b868ea34925ecb1597cf1ceb88524ded185",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "09/06/14 5:39 PM",
          "commitNameOld": "123c563fe6f7a655f11d7414f992d448c5047006",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 42.71,
          "commitsBetweenForRepo": 302,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  public void sortByDistance( Node reader, Node[] nodes,\n-      int activeLen, long seed) {\n+  public void sortByDistance(Node reader, Node[] nodes, int activeLen,\n+      long seed, boolean randomizeBlockLocationsPerBlock) {\n     // If reader is not a datanode (not in NetworkTopology tree), we need to\n     // replace this reader with a sibling leaf node in tree.\n     if (reader !\u003d null \u0026\u0026 !this.contains(reader)) {\n       Node nodeGroup \u003d getNode(reader.getNetworkLocation());\n       if (nodeGroup !\u003d null \u0026\u0026 nodeGroup instanceof InnerNode) {\n         InnerNode parentNode \u003d (InnerNode) nodeGroup;\n         // replace reader with the first children of its parent in tree\n         reader \u003d parentNode.getLeaf(0, null);\n       } else {\n         return;\n       }\n     }\n-    super.sortByDistance(reader, nodes, nodes.length, seed);\n+    super.sortByDistance(reader, nodes, nodes.length, seed,\n+        randomizeBlockLocationsPerBlock);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void sortByDistance(Node reader, Node[] nodes, int activeLen,\n      long seed, boolean randomizeBlockLocationsPerBlock) {\n    // If reader is not a datanode (not in NetworkTopology tree), we need to\n    // replace this reader with a sibling leaf node in tree.\n    if (reader !\u003d null \u0026\u0026 !this.contains(reader)) {\n      Node nodeGroup \u003d getNode(reader.getNetworkLocation());\n      if (nodeGroup !\u003d null \u0026\u0026 nodeGroup instanceof InnerNode) {\n        InnerNode parentNode \u003d (InnerNode) nodeGroup;\n        // replace reader with the first children of its parent in tree\n        reader \u003d parentNode.getLeaf(0, null);\n      } else {\n        return;\n      }\n    }\n    super.sortByDistance(reader, nodes, nodes.length, seed,\n        randomizeBlockLocationsPerBlock);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java",
          "extendedDetails": {
            "oldValue": "[reader-Node, nodes-Node[], activeLen-int, seed-long]",
            "newValue": "[reader-Node, nodes-Node[], activeLen-int, seed-long, randomizeBlockLocationsPerBlock-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6701. Make seed optional in NetworkTopology#sortByDistance. Contributed by Ashwin Shankar.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612625 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/07/14 10:47 AM",
          "commitName": "c83c5b868ea34925ecb1597cf1ceb88524ded185",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "09/06/14 5:39 PM",
          "commitNameOld": "123c563fe6f7a655f11d7414f992d448c5047006",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 42.71,
          "commitsBetweenForRepo": 302,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  public void sortByDistance( Node reader, Node[] nodes,\n-      int activeLen, long seed) {\n+  public void sortByDistance(Node reader, Node[] nodes, int activeLen,\n+      long seed, boolean randomizeBlockLocationsPerBlock) {\n     // If reader is not a datanode (not in NetworkTopology tree), we need to\n     // replace this reader with a sibling leaf node in tree.\n     if (reader !\u003d null \u0026\u0026 !this.contains(reader)) {\n       Node nodeGroup \u003d getNode(reader.getNetworkLocation());\n       if (nodeGroup !\u003d null \u0026\u0026 nodeGroup instanceof InnerNode) {\n         InnerNode parentNode \u003d (InnerNode) nodeGroup;\n         // replace reader with the first children of its parent in tree\n         reader \u003d parentNode.getLeaf(0, null);\n       } else {\n         return;\n       }\n     }\n-    super.sortByDistance(reader, nodes, nodes.length, seed);\n+    super.sortByDistance(reader, nodes, nodes.length, seed,\n+        randomizeBlockLocationsPerBlock);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void sortByDistance(Node reader, Node[] nodes, int activeLen,\n      long seed, boolean randomizeBlockLocationsPerBlock) {\n    // If reader is not a datanode (not in NetworkTopology tree), we need to\n    // replace this reader with a sibling leaf node in tree.\n    if (reader !\u003d null \u0026\u0026 !this.contains(reader)) {\n      Node nodeGroup \u003d getNode(reader.getNetworkLocation());\n      if (nodeGroup !\u003d null \u0026\u0026 nodeGroup instanceof InnerNode) {\n        InnerNode parentNode \u003d (InnerNode) nodeGroup;\n        // replace reader with the first children of its parent in tree\n        reader \u003d parentNode.getLeaf(0, null);\n      } else {\n        return;\n      }\n    }\n    super.sortByDistance(reader, nodes, nodes.length, seed,\n        randomizeBlockLocationsPerBlock);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java",
          "extendedDetails": {}
        }
      ]
    },
    "123c563fe6f7a655f11d7414f992d448c5047006": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6460. Ignore stale and decommissioned nodes in NetworkTopology#sortByDistance. Contributed by Yongjun Zhang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601535 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/06/14 5:39 PM",
      "commitName": "123c563fe6f7a655f11d7414f992d448c5047006",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6460. Ignore stale and decommissioned nodes in NetworkTopology#sortByDistance. Contributed by Yongjun Zhang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601535 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/06/14 5:39 PM",
          "commitName": "123c563fe6f7a655f11d7414f992d448c5047006",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "03/06/14 11:33 AM",
          "commitNameOld": "02fcb6b6bae7c3fe2a10b00b2a563e4098ff225e",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 6.25,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,16 @@\n-  public void sortByDistance( Node reader, Node[] nodes, long seed) {\n+  public void sortByDistance( Node reader, Node[] nodes,\n+      int activeLen, long seed) {\n     // If reader is not a datanode (not in NetworkTopology tree), we need to\n     // replace this reader with a sibling leaf node in tree.\n     if (reader !\u003d null \u0026\u0026 !this.contains(reader)) {\n       Node nodeGroup \u003d getNode(reader.getNetworkLocation());\n       if (nodeGroup !\u003d null \u0026\u0026 nodeGroup instanceof InnerNode) {\n         InnerNode parentNode \u003d (InnerNode) nodeGroup;\n         // replace reader with the first children of its parent in tree\n         reader \u003d parentNode.getLeaf(0, null);\n       } else {\n         return;\n       }\n     }\n-    super.sortByDistance(reader, nodes, seed);\n+    super.sortByDistance(reader, nodes, nodes.length, seed);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void sortByDistance( Node reader, Node[] nodes,\n      int activeLen, long seed) {\n    // If reader is not a datanode (not in NetworkTopology tree), we need to\n    // replace this reader with a sibling leaf node in tree.\n    if (reader !\u003d null \u0026\u0026 !this.contains(reader)) {\n      Node nodeGroup \u003d getNode(reader.getNetworkLocation());\n      if (nodeGroup !\u003d null \u0026\u0026 nodeGroup instanceof InnerNode) {\n        InnerNode parentNode \u003d (InnerNode) nodeGroup;\n        // replace reader with the first children of its parent in tree\n        reader \u003d parentNode.getLeaf(0, null);\n      } else {\n        return;\n      }\n    }\n    super.sortByDistance(reader, nodes, nodes.length, seed);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java",
          "extendedDetails": {
            "oldValue": "[reader-Node, nodes-Node[], seed-long]",
            "newValue": "[reader-Node, nodes-Node[], activeLen-int, seed-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6460. Ignore stale and decommissioned nodes in NetworkTopology#sortByDistance. Contributed by Yongjun Zhang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601535 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/06/14 5:39 PM",
          "commitName": "123c563fe6f7a655f11d7414f992d448c5047006",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "03/06/14 11:33 AM",
          "commitNameOld": "02fcb6b6bae7c3fe2a10b00b2a563e4098ff225e",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 6.25,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,16 @@\n-  public void sortByDistance( Node reader, Node[] nodes, long seed) {\n+  public void sortByDistance( Node reader, Node[] nodes,\n+      int activeLen, long seed) {\n     // If reader is not a datanode (not in NetworkTopology tree), we need to\n     // replace this reader with a sibling leaf node in tree.\n     if (reader !\u003d null \u0026\u0026 !this.contains(reader)) {\n       Node nodeGroup \u003d getNode(reader.getNetworkLocation());\n       if (nodeGroup !\u003d null \u0026\u0026 nodeGroup instanceof InnerNode) {\n         InnerNode parentNode \u003d (InnerNode) nodeGroup;\n         // replace reader with the first children of its parent in tree\n         reader \u003d parentNode.getLeaf(0, null);\n       } else {\n         return;\n       }\n     }\n-    super.sortByDistance(reader, nodes, seed);\n+    super.sortByDistance(reader, nodes, nodes.length, seed);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void sortByDistance( Node reader, Node[] nodes,\n      int activeLen, long seed) {\n    // If reader is not a datanode (not in NetworkTopology tree), we need to\n    // replace this reader with a sibling leaf node in tree.\n    if (reader !\u003d null \u0026\u0026 !this.contains(reader)) {\n      Node nodeGroup \u003d getNode(reader.getNetworkLocation());\n      if (nodeGroup !\u003d null \u0026\u0026 nodeGroup instanceof InnerNode) {\n        InnerNode parentNode \u003d (InnerNode) nodeGroup;\n        // replace reader with the first children of its parent in tree\n        reader \u003d parentNode.getLeaf(0, null);\n      } else {\n        return;\n      }\n    }\n    super.sortByDistance(reader, nodes, nodes.length, seed);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java",
          "extendedDetails": {}
        }
      ]
    },
    "02fcb6b6bae7c3fe2a10b00b2a563e4098ff225e": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6268. Better sorting in NetworkTopology#pseudoSortByDistance when no local node is found. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1599734 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/14 11:33 AM",
      "commitName": "02fcb6b6bae7c3fe2a10b00b2a563e4098ff225e",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,15 @@\n+  public void sortByDistance( Node reader, Node[] nodes, long seed) {\n+    // If reader is not a datanode (not in NetworkTopology tree), we need to\n+    // replace this reader with a sibling leaf node in tree.\n+    if (reader !\u003d null \u0026\u0026 !this.contains(reader)) {\n+      Node nodeGroup \u003d getNode(reader.getNetworkLocation());\n+      if (nodeGroup !\u003d null \u0026\u0026 nodeGroup instanceof InnerNode) {\n+        InnerNode parentNode \u003d (InnerNode) nodeGroup;\n+        // replace reader with the first children of its parent in tree\n+        reader \u003d parentNode.getLeaf(0, null);\n+      } else {\n+        return;\n+      }\n+    }\n+    super.sortByDistance(reader, nodes, seed);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void sortByDistance( Node reader, Node[] nodes, long seed) {\n    // If reader is not a datanode (not in NetworkTopology tree), we need to\n    // replace this reader with a sibling leaf node in tree.\n    if (reader !\u003d null \u0026\u0026 !this.contains(reader)) {\n      Node nodeGroup \u003d getNode(reader.getNetworkLocation());\n      if (nodeGroup !\u003d null \u0026\u0026 nodeGroup instanceof InnerNode) {\n        InnerNode parentNode \u003d (InnerNode) nodeGroup;\n        // replace reader with the first children of its parent in tree\n        reader \u003d parentNode.getLeaf(0, null);\n      } else {\n        return;\n      }\n    }\n    super.sortByDistance(reader, nodes, seed);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java"
    }
  }
}