{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractManagedParentQueue.java",
  "functionName": "initializeLeafQueueConfigs",
  "functionId": "initializeLeafQueueConfigs___configPrefix-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractManagedParentQueue.java",
  "functionStartLine": 198,
  "functionEndLine": 223,
  "numCommitsSeen": 10,
  "timeTaken": 4956,
  "changeHistory": [
    "9191e08f0ad4ebc2a3b776c4cc71d0fc5c053beb",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
    "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9"
  ],
  "changeHistoryShort": {
    "9191e08f0ad4ebc2a3b776c4cc71d0fc5c053beb": "Ybodychange",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9191e08f0ad4ebc2a3b776c4cc71d0fc5c053beb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9569. Auto-created leaf queues do not honor cluster-wide min/max memory/vcores. Contributed by Craig Condit.\n",
      "commitDate": "10/06/19 2:33 PM",
      "commitName": "9191e08f0ad4ebc2a3b776c4cc71d0fc5c053beb",
      "commitAuthor": "Suma Shivaprasad",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 86.93,
      "commitsBetweenForRepo": 537,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,26 @@\n   protected CapacitySchedulerConfiguration initializeLeafQueueConfigs(String\n       configPrefix) {\n \n     CapacitySchedulerConfiguration leafQueueConfigs \u003d new\n         CapacitySchedulerConfiguration(new Configuration(false), false);\n \n+    String prefix \u003d YarnConfiguration.RESOURCE_TYPES + \".\";\n+    Map\u003cString, String\u003e rtProps \u003d csContext\n+        .getConfiguration().getPropsWithPrefix(prefix);\n+    for (Map.Entry\u003cString, String\u003e entry : rtProps.entrySet()) {\n+      leafQueueConfigs.set(prefix + entry.getKey(), entry.getValue());\n+    }\n+\n     SortedMap\u003cString, String\u003e sortedConfigs \u003d sortCSConfigurations();\n     SortedMap\u003cString, String\u003e templateConfigs \u003d getConfigurationsWithPrefix\n         (sortedConfigs, configPrefix);\n \n     for (final Iterator\u003cMap.Entry\u003cString, String\u003e\u003e iterator \u003d\n          templateConfigs.entrySet().iterator(); iterator.hasNext(); ) {\n       Map.Entry\u003cString, String\u003e confKeyValuePair \u003d iterator.next();\n       leafQueueConfigs.set(confKeyValuePair.getKey(),\n           confKeyValuePair.getValue());\n     }\n \n     return leafQueueConfigs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected CapacitySchedulerConfiguration initializeLeafQueueConfigs(String\n      configPrefix) {\n\n    CapacitySchedulerConfiguration leafQueueConfigs \u003d new\n        CapacitySchedulerConfiguration(new Configuration(false), false);\n\n    String prefix \u003d YarnConfiguration.RESOURCE_TYPES + \".\";\n    Map\u003cString, String\u003e rtProps \u003d csContext\n        .getConfiguration().getPropsWithPrefix(prefix);\n    for (Map.Entry\u003cString, String\u003e entry : rtProps.entrySet()) {\n      leafQueueConfigs.set(prefix + entry.getKey(), entry.getValue());\n    }\n\n    SortedMap\u003cString, String\u003e sortedConfigs \u003d sortCSConfigurations();\n    SortedMap\u003cString, String\u003e templateConfigs \u003d getConfigurationsWithPrefix\n        (sortedConfigs, configPrefix);\n\n    for (final Iterator\u003cMap.Entry\u003cString, String\u003e\u003e iterator \u003d\n         templateConfigs.entrySet().iterator(); iterator.hasNext(); ) {\n      Map.Entry\u003cString, String\u003e confKeyValuePair \u003d iterator.next();\n      leafQueueConfigs.set(confKeyValuePair.getKey(),\n          confKeyValuePair.getValue());\n    }\n\n    return leafQueueConfigs;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractManagedParentQueue.java",
      "extendedDetails": {}
    },
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
      "commitDate": "08/12/17 3:10 PM",
      "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
          "commitDate": "08/12/17 3:10 PM",
          "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "16/11/17 11:25 AM",
          "commitNameOld": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 22.16,
          "commitsBetweenForRepo": 110,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,19 @@\n-  protected AutoCreatedLeafQueueTemplate.Builder initializeLeafQueueConfigs\n-    (String queuePath) {\n+  protected CapacitySchedulerConfiguration initializeLeafQueueConfigs(String\n+      configPrefix) {\n \n-    CapacitySchedulerConfiguration conf \u003d csContext.getConfiguration();\n+    CapacitySchedulerConfiguration leafQueueConfigs \u003d new\n+        CapacitySchedulerConfiguration(new Configuration(false), false);\n \n-    AutoCreatedLeafQueueTemplate.Builder leafQueueTemplateBuilder \u003d new\n-        AutoCreatedLeafQueueTemplate.Builder();\n-    int maxApps \u003d conf.getMaximumApplicationsPerQueue(queuePath);\n-    if (maxApps \u003c 0) {\n-      maxApps \u003d (int) (\n-          CapacitySchedulerConfiguration.DEFAULT_MAXIMUM_SYSTEM_APPLICATIIONS\n-              * getAbsoluteCapacity());\n+    SortedMap\u003cString, String\u003e sortedConfigs \u003d sortCSConfigurations();\n+    SortedMap\u003cString, String\u003e templateConfigs \u003d getConfigurationsWithPrefix\n+        (sortedConfigs, configPrefix);\n+\n+    for (final Iterator\u003cMap.Entry\u003cString, String\u003e\u003e iterator \u003d\n+         templateConfigs.entrySet().iterator(); iterator.hasNext(); ) {\n+      Map.Entry\u003cString, String\u003e confKeyValuePair \u003d iterator.next();\n+      leafQueueConfigs.set(confKeyValuePair.getKey(),\n+          confKeyValuePair.getValue());\n     }\n \n-    int userLimit \u003d conf.getUserLimit(queuePath);\n-    float userLimitFactor \u003d conf.getUserLimitFactor(queuePath);\n-    leafQueueTemplateBuilder.userLimit(userLimit)\n-          .userLimitFactor(userLimitFactor)\n-          .maxApps(maxApps)\n-          .maxAppsPerUser(\n-              (int) (maxApps * (userLimit / 100.0f) * userLimitFactor));\n-\n-    return leafQueueTemplateBuilder;\n+    return leafQueueConfigs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected CapacitySchedulerConfiguration initializeLeafQueueConfigs(String\n      configPrefix) {\n\n    CapacitySchedulerConfiguration leafQueueConfigs \u003d new\n        CapacitySchedulerConfiguration(new Configuration(false), false);\n\n    SortedMap\u003cString, String\u003e sortedConfigs \u003d sortCSConfigurations();\n    SortedMap\u003cString, String\u003e templateConfigs \u003d getConfigurationsWithPrefix\n        (sortedConfigs, configPrefix);\n\n    for (final Iterator\u003cMap.Entry\u003cString, String\u003e\u003e iterator \u003d\n         templateConfigs.entrySet().iterator(); iterator.hasNext(); ) {\n      Map.Entry\u003cString, String\u003e confKeyValuePair \u003d iterator.next();\n      leafQueueConfigs.set(confKeyValuePair.getKey(),\n          confKeyValuePair.getValue());\n    }\n\n    return leafQueueConfigs;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractManagedParentQueue.java",
          "extendedDetails": {
            "oldValue": "[queuePath-String]",
            "newValue": "[configPrefix-String]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
          "commitDate": "08/12/17 3:10 PM",
          "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "16/11/17 11:25 AM",
          "commitNameOld": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 22.16,
          "commitsBetweenForRepo": 110,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,19 @@\n-  protected AutoCreatedLeafQueueTemplate.Builder initializeLeafQueueConfigs\n-    (String queuePath) {\n+  protected CapacitySchedulerConfiguration initializeLeafQueueConfigs(String\n+      configPrefix) {\n \n-    CapacitySchedulerConfiguration conf \u003d csContext.getConfiguration();\n+    CapacitySchedulerConfiguration leafQueueConfigs \u003d new\n+        CapacitySchedulerConfiguration(new Configuration(false), false);\n \n-    AutoCreatedLeafQueueTemplate.Builder leafQueueTemplateBuilder \u003d new\n-        AutoCreatedLeafQueueTemplate.Builder();\n-    int maxApps \u003d conf.getMaximumApplicationsPerQueue(queuePath);\n-    if (maxApps \u003c 0) {\n-      maxApps \u003d (int) (\n-          CapacitySchedulerConfiguration.DEFAULT_MAXIMUM_SYSTEM_APPLICATIIONS\n-              * getAbsoluteCapacity());\n+    SortedMap\u003cString, String\u003e sortedConfigs \u003d sortCSConfigurations();\n+    SortedMap\u003cString, String\u003e templateConfigs \u003d getConfigurationsWithPrefix\n+        (sortedConfigs, configPrefix);\n+\n+    for (final Iterator\u003cMap.Entry\u003cString, String\u003e\u003e iterator \u003d\n+         templateConfigs.entrySet().iterator(); iterator.hasNext(); ) {\n+      Map.Entry\u003cString, String\u003e confKeyValuePair \u003d iterator.next();\n+      leafQueueConfigs.set(confKeyValuePair.getKey(),\n+          confKeyValuePair.getValue());\n     }\n \n-    int userLimit \u003d conf.getUserLimit(queuePath);\n-    float userLimitFactor \u003d conf.getUserLimitFactor(queuePath);\n-    leafQueueTemplateBuilder.userLimit(userLimit)\n-          .userLimitFactor(userLimitFactor)\n-          .maxApps(maxApps)\n-          .maxAppsPerUser(\n-              (int) (maxApps * (userLimit / 100.0f) * userLimitFactor));\n-\n-    return leafQueueTemplateBuilder;\n+    return leafQueueConfigs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected CapacitySchedulerConfiguration initializeLeafQueueConfigs(String\n      configPrefix) {\n\n    CapacitySchedulerConfiguration leafQueueConfigs \u003d new\n        CapacitySchedulerConfiguration(new Configuration(false), false);\n\n    SortedMap\u003cString, String\u003e sortedConfigs \u003d sortCSConfigurations();\n    SortedMap\u003cString, String\u003e templateConfigs \u003d getConfigurationsWithPrefix\n        (sortedConfigs, configPrefix);\n\n    for (final Iterator\u003cMap.Entry\u003cString, String\u003e\u003e iterator \u003d\n         templateConfigs.entrySet().iterator(); iterator.hasNext(); ) {\n      Map.Entry\u003cString, String\u003e confKeyValuePair \u003d iterator.next();\n      leafQueueConfigs.set(confKeyValuePair.getKey(),\n          confKeyValuePair.getValue());\n    }\n\n    return leafQueueConfigs;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractManagedParentQueue.java",
          "extendedDetails": {
            "oldValue": "AutoCreatedLeafQueueTemplate.Builder",
            "newValue": "CapacitySchedulerConfiguration"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
          "commitDate": "08/12/17 3:10 PM",
          "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "16/11/17 11:25 AM",
          "commitNameOld": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 22.16,
          "commitsBetweenForRepo": 110,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,19 @@\n-  protected AutoCreatedLeafQueueTemplate.Builder initializeLeafQueueConfigs\n-    (String queuePath) {\n+  protected CapacitySchedulerConfiguration initializeLeafQueueConfigs(String\n+      configPrefix) {\n \n-    CapacitySchedulerConfiguration conf \u003d csContext.getConfiguration();\n+    CapacitySchedulerConfiguration leafQueueConfigs \u003d new\n+        CapacitySchedulerConfiguration(new Configuration(false), false);\n \n-    AutoCreatedLeafQueueTemplate.Builder leafQueueTemplateBuilder \u003d new\n-        AutoCreatedLeafQueueTemplate.Builder();\n-    int maxApps \u003d conf.getMaximumApplicationsPerQueue(queuePath);\n-    if (maxApps \u003c 0) {\n-      maxApps \u003d (int) (\n-          CapacitySchedulerConfiguration.DEFAULT_MAXIMUM_SYSTEM_APPLICATIIONS\n-              * getAbsoluteCapacity());\n+    SortedMap\u003cString, String\u003e sortedConfigs \u003d sortCSConfigurations();\n+    SortedMap\u003cString, String\u003e templateConfigs \u003d getConfigurationsWithPrefix\n+        (sortedConfigs, configPrefix);\n+\n+    for (final Iterator\u003cMap.Entry\u003cString, String\u003e\u003e iterator \u003d\n+         templateConfigs.entrySet().iterator(); iterator.hasNext(); ) {\n+      Map.Entry\u003cString, String\u003e confKeyValuePair \u003d iterator.next();\n+      leafQueueConfigs.set(confKeyValuePair.getKey(),\n+          confKeyValuePair.getValue());\n     }\n \n-    int userLimit \u003d conf.getUserLimit(queuePath);\n-    float userLimitFactor \u003d conf.getUserLimitFactor(queuePath);\n-    leafQueueTemplateBuilder.userLimit(userLimit)\n-          .userLimitFactor(userLimitFactor)\n-          .maxApps(maxApps)\n-          .maxAppsPerUser(\n-              (int) (maxApps * (userLimit / 100.0f) * userLimitFactor));\n-\n-    return leafQueueTemplateBuilder;\n+    return leafQueueConfigs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected CapacitySchedulerConfiguration initializeLeafQueueConfigs(String\n      configPrefix) {\n\n    CapacitySchedulerConfiguration leafQueueConfigs \u003d new\n        CapacitySchedulerConfiguration(new Configuration(false), false);\n\n    SortedMap\u003cString, String\u003e sortedConfigs \u003d sortCSConfigurations();\n    SortedMap\u003cString, String\u003e templateConfigs \u003d getConfigurationsWithPrefix\n        (sortedConfigs, configPrefix);\n\n    for (final Iterator\u003cMap.Entry\u003cString, String\u003e\u003e iterator \u003d\n         templateConfigs.entrySet().iterator(); iterator.hasNext(); ) {\n      Map.Entry\u003cString, String\u003e confKeyValuePair \u003d iterator.next();\n      leafQueueConfigs.set(confKeyValuePair.getKey(),\n          confKeyValuePair.getValue());\n    }\n\n    return leafQueueConfigs;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractManagedParentQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)\n\nChange-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6\n",
      "commitDate": "16/11/17 11:25 AM",
      "commitName": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)\n\nChange-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6\n",
          "commitDate": "16/11/17 11:25 AM",
          "commitName": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "06/11/17 9:38 PM",
          "commitNameOld": "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 9.57,
          "commitsBetweenForRepo": 63,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,24 @@\n-  protected void initializeLeafQueueConfigs() {\n+  protected AutoCreatedLeafQueueTemplate.Builder initializeLeafQueueConfigs\n+    (String queuePath) {\n \n     CapacitySchedulerConfiguration conf \u003d csContext.getConfiguration();\n \n-    final String queuePath \u003d super.getQueuePath();\n+    AutoCreatedLeafQueueTemplate.Builder leafQueueTemplateBuilder \u003d new\n+        AutoCreatedLeafQueueTemplate.Builder();\n     int maxApps \u003d conf.getMaximumApplicationsPerQueue(queuePath);\n     if (maxApps \u003c 0) {\n       maxApps \u003d (int) (\n           CapacitySchedulerConfiguration.DEFAULT_MAXIMUM_SYSTEM_APPLICATIIONS\n               * getAbsoluteCapacity());\n     }\n-    userLimit \u003d conf.getUserLimit(queuePath);\n-    userLimitFactor \u003d conf.getUserLimitFactor(queuePath);\n-    maxAppsForAutoCreatedQueues \u003d maxApps;\n-    maxAppsPerUserForAutoCreatedQueues \u003d\n-        (int) (maxApps * (userLimit / 100.0f) * userLimitFactor);\n \n+    int userLimit \u003d conf.getUserLimit(queuePath);\n+    float userLimitFactor \u003d conf.getUserLimitFactor(queuePath);\n+    leafQueueTemplateBuilder.userLimit(userLimit)\n+          .userLimitFactor(userLimitFactor)\n+          .maxApps(maxApps)\n+          .maxAppsPerUser(\n+              (int) (maxApps * (userLimit / 100.0f) * userLimitFactor));\n+\n+    return leafQueueTemplateBuilder;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected AutoCreatedLeafQueueTemplate.Builder initializeLeafQueueConfigs\n    (String queuePath) {\n\n    CapacitySchedulerConfiguration conf \u003d csContext.getConfiguration();\n\n    AutoCreatedLeafQueueTemplate.Builder leafQueueTemplateBuilder \u003d new\n        AutoCreatedLeafQueueTemplate.Builder();\n    int maxApps \u003d conf.getMaximumApplicationsPerQueue(queuePath);\n    if (maxApps \u003c 0) {\n      maxApps \u003d (int) (\n          CapacitySchedulerConfiguration.DEFAULT_MAXIMUM_SYSTEM_APPLICATIIONS\n              * getAbsoluteCapacity());\n    }\n\n    int userLimit \u003d conf.getUserLimit(queuePath);\n    float userLimitFactor \u003d conf.getUserLimitFactor(queuePath);\n    leafQueueTemplateBuilder.userLimit(userLimit)\n          .userLimitFactor(userLimitFactor)\n          .maxApps(maxApps)\n          .maxAppsPerUser(\n              (int) (maxApps * (userLimit / 100.0f) * userLimitFactor));\n\n    return leafQueueTemplateBuilder;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractManagedParentQueue.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[queuePath-String]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)\n\nChange-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6\n",
          "commitDate": "16/11/17 11:25 AM",
          "commitName": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "06/11/17 9:38 PM",
          "commitNameOld": "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 9.57,
          "commitsBetweenForRepo": 63,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,24 @@\n-  protected void initializeLeafQueueConfigs() {\n+  protected AutoCreatedLeafQueueTemplate.Builder initializeLeafQueueConfigs\n+    (String queuePath) {\n \n     CapacitySchedulerConfiguration conf \u003d csContext.getConfiguration();\n \n-    final String queuePath \u003d super.getQueuePath();\n+    AutoCreatedLeafQueueTemplate.Builder leafQueueTemplateBuilder \u003d new\n+        AutoCreatedLeafQueueTemplate.Builder();\n     int maxApps \u003d conf.getMaximumApplicationsPerQueue(queuePath);\n     if (maxApps \u003c 0) {\n       maxApps \u003d (int) (\n           CapacitySchedulerConfiguration.DEFAULT_MAXIMUM_SYSTEM_APPLICATIIONS\n               * getAbsoluteCapacity());\n     }\n-    userLimit \u003d conf.getUserLimit(queuePath);\n-    userLimitFactor \u003d conf.getUserLimitFactor(queuePath);\n-    maxAppsForAutoCreatedQueues \u003d maxApps;\n-    maxAppsPerUserForAutoCreatedQueues \u003d\n-        (int) (maxApps * (userLimit / 100.0f) * userLimitFactor);\n \n+    int userLimit \u003d conf.getUserLimit(queuePath);\n+    float userLimitFactor \u003d conf.getUserLimitFactor(queuePath);\n+    leafQueueTemplateBuilder.userLimit(userLimit)\n+          .userLimitFactor(userLimitFactor)\n+          .maxApps(maxApps)\n+          .maxAppsPerUser(\n+              (int) (maxApps * (userLimit / 100.0f) * userLimitFactor));\n+\n+    return leafQueueTemplateBuilder;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected AutoCreatedLeafQueueTemplate.Builder initializeLeafQueueConfigs\n    (String queuePath) {\n\n    CapacitySchedulerConfiguration conf \u003d csContext.getConfiguration();\n\n    AutoCreatedLeafQueueTemplate.Builder leafQueueTemplateBuilder \u003d new\n        AutoCreatedLeafQueueTemplate.Builder();\n    int maxApps \u003d conf.getMaximumApplicationsPerQueue(queuePath);\n    if (maxApps \u003c 0) {\n      maxApps \u003d (int) (\n          CapacitySchedulerConfiguration.DEFAULT_MAXIMUM_SYSTEM_APPLICATIIONS\n              * getAbsoluteCapacity());\n    }\n\n    int userLimit \u003d conf.getUserLimit(queuePath);\n    float userLimitFactor \u003d conf.getUserLimitFactor(queuePath);\n    leafQueueTemplateBuilder.userLimit(userLimit)\n          .userLimitFactor(userLimitFactor)\n          .maxApps(maxApps)\n          .maxAppsPerUser(\n              (int) (maxApps * (userLimit / 100.0f) * userLimitFactor));\n\n    return leafQueueTemplateBuilder;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractManagedParentQueue.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "AutoCreatedLeafQueueTemplate.Builder"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)\n\nChange-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6\n",
          "commitDate": "16/11/17 11:25 AM",
          "commitName": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "06/11/17 9:38 PM",
          "commitNameOld": "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 9.57,
          "commitsBetweenForRepo": 63,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,24 @@\n-  protected void initializeLeafQueueConfigs() {\n+  protected AutoCreatedLeafQueueTemplate.Builder initializeLeafQueueConfigs\n+    (String queuePath) {\n \n     CapacitySchedulerConfiguration conf \u003d csContext.getConfiguration();\n \n-    final String queuePath \u003d super.getQueuePath();\n+    AutoCreatedLeafQueueTemplate.Builder leafQueueTemplateBuilder \u003d new\n+        AutoCreatedLeafQueueTemplate.Builder();\n     int maxApps \u003d conf.getMaximumApplicationsPerQueue(queuePath);\n     if (maxApps \u003c 0) {\n       maxApps \u003d (int) (\n           CapacitySchedulerConfiguration.DEFAULT_MAXIMUM_SYSTEM_APPLICATIIONS\n               * getAbsoluteCapacity());\n     }\n-    userLimit \u003d conf.getUserLimit(queuePath);\n-    userLimitFactor \u003d conf.getUserLimitFactor(queuePath);\n-    maxAppsForAutoCreatedQueues \u003d maxApps;\n-    maxAppsPerUserForAutoCreatedQueues \u003d\n-        (int) (maxApps * (userLimit / 100.0f) * userLimitFactor);\n \n+    int userLimit \u003d conf.getUserLimit(queuePath);\n+    float userLimitFactor \u003d conf.getUserLimitFactor(queuePath);\n+    leafQueueTemplateBuilder.userLimit(userLimit)\n+          .userLimitFactor(userLimitFactor)\n+          .maxApps(maxApps)\n+          .maxAppsPerUser(\n+              (int) (maxApps * (userLimit / 100.0f) * userLimitFactor));\n+\n+    return leafQueueTemplateBuilder;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected AutoCreatedLeafQueueTemplate.Builder initializeLeafQueueConfigs\n    (String queuePath) {\n\n    CapacitySchedulerConfiguration conf \u003d csContext.getConfiguration();\n\n    AutoCreatedLeafQueueTemplate.Builder leafQueueTemplateBuilder \u003d new\n        AutoCreatedLeafQueueTemplate.Builder();\n    int maxApps \u003d conf.getMaximumApplicationsPerQueue(queuePath);\n    if (maxApps \u003c 0) {\n      maxApps \u003d (int) (\n          CapacitySchedulerConfiguration.DEFAULT_MAXIMUM_SYSTEM_APPLICATIIONS\n              * getAbsoluteCapacity());\n    }\n\n    int userLimit \u003d conf.getUserLimit(queuePath);\n    float userLimitFactor \u003d conf.getUserLimitFactor(queuePath);\n    leafQueueTemplateBuilder.userLimit(userLimit)\n          .userLimitFactor(userLimitFactor)\n          .maxApps(maxApps)\n          .maxAppsPerUser(\n              (int) (maxApps * (userLimit / 100.0f) * userLimitFactor));\n\n    return leafQueueTemplateBuilder;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractManagedParentQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7394. Merge code paths for Reservation/Plan queues and Auto Created queues. (Suma Shivaprasad via wangda)\n",
      "commitDate": "06/11/17 9:38 PM",
      "commitName": "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,18 @@\n+  protected void initializeLeafQueueConfigs() {\n+\n+    CapacitySchedulerConfiguration conf \u003d csContext.getConfiguration();\n+\n+    final String queuePath \u003d super.getQueuePath();\n+    int maxApps \u003d conf.getMaximumApplicationsPerQueue(queuePath);\n+    if (maxApps \u003c 0) {\n+      maxApps \u003d (int) (\n+          CapacitySchedulerConfiguration.DEFAULT_MAXIMUM_SYSTEM_APPLICATIIONS\n+              * getAbsoluteCapacity());\n+    }\n+    userLimit \u003d conf.getUserLimit(queuePath);\n+    userLimitFactor \u003d conf.getUserLimitFactor(queuePath);\n+    maxAppsForAutoCreatedQueues \u003d maxApps;\n+    maxAppsPerUserForAutoCreatedQueues \u003d\n+        (int) (maxApps * (userLimit / 100.0f) * userLimitFactor);\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initializeLeafQueueConfigs() {\n\n    CapacitySchedulerConfiguration conf \u003d csContext.getConfiguration();\n\n    final String queuePath \u003d super.getQueuePath();\n    int maxApps \u003d conf.getMaximumApplicationsPerQueue(queuePath);\n    if (maxApps \u003c 0) {\n      maxApps \u003d (int) (\n          CapacitySchedulerConfiguration.DEFAULT_MAXIMUM_SYSTEM_APPLICATIIONS\n              * getAbsoluteCapacity());\n    }\n    userLimit \u003d conf.getUserLimit(queuePath);\n    userLimitFactor \u003d conf.getUserLimitFactor(queuePath);\n    maxAppsForAutoCreatedQueues \u003d maxApps;\n    maxAppsPerUserForAutoCreatedQueues \u003d\n        (int) (maxApps * (userLimit / 100.0f) * userLimitFactor);\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractManagedParentQueue.java"
    }
  }
}