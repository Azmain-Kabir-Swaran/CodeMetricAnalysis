{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UsersManager.java",
  "functionName": "updateUserResourceUsage",
  "functionId": "updateUserResourceUsage___userName-String__resource-Resource__nodePartition-String__isAllocate-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
  "functionStartLine": 1043,
  "functionEndLine": 1067,
  "numCommitsSeen": 13,
  "timeTaken": 2308,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public User updateUserResourceUsage(String userName, Resource resource,\n       String nodePartition, boolean isAllocate) {\n+    this.writeLock.lock();\n     try {\n-      this.writeLock.lock();\n \n       // TODO, should use getUser, use this method just to avoid UT failure\n       // which is caused by wrong invoking order, will fix UT separately\n       User user \u003d getUserAndAddIfAbsent(userName);\n \n       // New container is allocated. Invalidate user-limit.\n       updateResourceUsagePerUser(user, resource, nodePartition, isAllocate);\n \n       userLimitNeedsRecompute();\n \n       // Update usage ratios\n       Resource resourceByLabel \u003d labelManager.getResourceByLabel(nodePartition,\n           scheduler.getClusterResource());\n       incQueueUsageRatio(nodePartition, user.updateUsageRatio(\n           resourceCalculator, resourceByLabel, nodePartition));\n \n       return user;\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public User updateUserResourceUsage(String userName, Resource resource,\n      String nodePartition, boolean isAllocate) {\n    this.writeLock.lock();\n    try {\n\n      // TODO, should use getUser, use this method just to avoid UT failure\n      // which is caused by wrong invoking order, will fix UT separately\n      User user \u003d getUserAndAddIfAbsent(userName);\n\n      // New container is allocated. Invalidate user-limit.\n      updateResourceUsagePerUser(user, resource, nodePartition, isAllocate);\n\n      userLimitNeedsRecompute();\n\n      // Update usage ratios\n      Resource resourceByLabel \u003d labelManager.getResourceByLabel(nodePartition,\n          scheduler.getClusterResource());\n      incQueueUsageRatio(nodePartition, user.updateUsageRatio(\n          resourceCalculator, resourceByLabel, nodePartition));\n\n      return user;\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
      "extendedDetails": {}
    },
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5889. Improve and refactor user-limit calculation in Capacity Scheduler. (Sunil G via wangda)\n",
      "commitDate": "09/02/17 10:23 AM",
      "commitName": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,25 @@\n+  public User updateUserResourceUsage(String userName, Resource resource,\n+      String nodePartition, boolean isAllocate) {\n+    try {\n+      this.writeLock.lock();\n+\n+      // TODO, should use getUser, use this method just to avoid UT failure\n+      // which is caused by wrong invoking order, will fix UT separately\n+      User user \u003d getUserAndAddIfAbsent(userName);\n+\n+      // New container is allocated. Invalidate user-limit.\n+      updateResourceUsagePerUser(user, resource, nodePartition, isAllocate);\n+\n+      userLimitNeedsRecompute();\n+\n+      // Update usage ratios\n+      Resource resourceByLabel \u003d labelManager.getResourceByLabel(nodePartition,\n+          scheduler.getClusterResource());\n+      incQueueUsageRatio(nodePartition, user.updateUsageRatio(\n+          resourceCalculator, resourceByLabel, nodePartition));\n+\n+      return user;\n+    } finally {\n+      this.writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public User updateUserResourceUsage(String userName, Resource resource,\n      String nodePartition, boolean isAllocate) {\n    try {\n      this.writeLock.lock();\n\n      // TODO, should use getUser, use this method just to avoid UT failure\n      // which is caused by wrong invoking order, will fix UT separately\n      User user \u003d getUserAndAddIfAbsent(userName);\n\n      // New container is allocated. Invalidate user-limit.\n      updateResourceUsagePerUser(user, resource, nodePartition, isAllocate);\n\n      userLimitNeedsRecompute();\n\n      // Update usage ratios\n      Resource resourceByLabel \u003d labelManager.getResourceByLabel(nodePartition,\n          scheduler.getClusterResource());\n      incQueueUsageRatio(nodePartition, user.updateUsageRatio(\n          resourceCalculator, resourceByLabel, nodePartition));\n\n      return user;\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java"
    }
  }
}