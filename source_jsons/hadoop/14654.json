{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSTopologyNodeImpl.java",
  "functionName": "childRemoveStorage",
  "functionId": "childRemoveStorage___childName-String__type-StorageType",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/net/DFSTopologyNodeImpl.java",
  "functionStartLine": 413,
  "functionEndLine": 434,
  "numCommitsSeen": 4,
  "timeTaken": 1216,
  "changeHistory": [
    "97c2e576c91c2316c2b52bfc948bae9bff8ca49f"
  ],
  "changeHistoryShort": {
    "97c2e576c91c2316c2b52bfc948bae9bff8ca49f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "97c2e576c91c2316c2b52bfc948bae9bff8ca49f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11530. Use HDFS specific network topology to choose datanode in BlockPlacementPolicyDefault. Contributed by Yiqun Lin and Chen Liang.\n",
      "commitDate": "04/05/17 8:54 PM",
      "commitName": "97c2e576c91c2316c2b52bfc948bae9bff8ca49f",
      "commitAuthor": "Yiqun Lin",
      "diff": "@@ -0,0 +1,22 @@\n+  public synchronized void childRemoveStorage(\n+      String childName, StorageType type) {\n+    LOG.debug(\"child remove storage: {}:{}\", childName, type);\n+    Preconditions.checkArgument(childrenStorageInfo.containsKey(childName));\n+    EnumMap\u003cStorageType, Integer\u003e typeCount \u003d\n+        childrenStorageInfo.get(childName);\n+    Preconditions.checkArgument(typeCount.containsKey(type));\n+    if (typeCount.get(type) \u003e 1) {\n+      typeCount.put(type, typeCount.get(type) - 1);\n+    } else {\n+      typeCount.remove(type);\n+    }\n+    Preconditions.checkArgument(storageTypeCounts.containsKey(type));\n+    if (storageTypeCounts.get(type) \u003e 1) {\n+      storageTypeCounts.put(type, storageTypeCounts.get(type) - 1);\n+    } else {\n+      storageTypeCounts.remove(type);\n+    }\n+    if (getParent() !\u003d null) {\n+      ((DFSTopologyNodeImpl)getParent()).childRemoveStorage(getName(), type);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void childRemoveStorage(\n      String childName, StorageType type) {\n    LOG.debug(\"child remove storage: {}:{}\", childName, type);\n    Preconditions.checkArgument(childrenStorageInfo.containsKey(childName));\n    EnumMap\u003cStorageType, Integer\u003e typeCount \u003d\n        childrenStorageInfo.get(childName);\n    Preconditions.checkArgument(typeCount.containsKey(type));\n    if (typeCount.get(type) \u003e 1) {\n      typeCount.put(type, typeCount.get(type) - 1);\n    } else {\n      typeCount.remove(type);\n    }\n    Preconditions.checkArgument(storageTypeCounts.containsKey(type));\n    if (storageTypeCounts.get(type) \u003e 1) {\n      storageTypeCounts.put(type, storageTypeCounts.get(type) - 1);\n    } else {\n      storageTypeCounts.remove(type);\n    }\n    if (getParent() !\u003d null) {\n      ((DFSTopologyNodeImpl)getParent()).childRemoveStorage(getName(), type);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/net/DFSTopologyNodeImpl.java"
    }
  }
}