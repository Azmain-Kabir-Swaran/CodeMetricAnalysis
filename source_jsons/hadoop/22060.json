{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalFetcher.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/LocalFetcher.java",
  "functionStartLine": 72,
  "functionEndLine": 93,
  "numCommitsSeen": 6,
  "timeTaken": 933,
  "changeHistory": [
    "0cb2fdc3b4fbbaa6153b6421a63082dc006f8eb4"
  ],
  "changeHistoryShort": {
    "0cb2fdc3b4fbbaa6153b6421a63082dc006f8eb4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0cb2fdc3b4fbbaa6153b6421a63082dc006f8eb4": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-434. LocalJobRunner limited to single reducer (Sandy Ryza and Aaron Kimball via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1510866 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/08/13 11:36 PM",
      "commitName": "0cb2fdc3b4fbbaa6153b6421a63082dc006f8eb4",
      "commitAuthor": "Sanford Ryza",
      "diff": "@@ -0,0 +1,22 @@\n+  public void run() {\n+    // Create a worklist of task attempts to work over.\n+    Set\u003cTaskAttemptID\u003e maps \u003d new HashSet\u003cTaskAttemptID\u003e();\n+    for (TaskAttemptID map : localMapFiles.keySet()) {\n+      maps.add(map);\n+    }\n+\n+    while (maps.size() \u003e 0) {\n+      try {\n+        // If merge is on, block\n+        merger.waitForResource();\n+        metrics.threadBusy();\n+\n+        // Copy as much as is possible.\n+        doCopy(maps);\n+        metrics.threadFree();\n+      } catch (InterruptedException ie) {\n+      } catch (Throwable t) {\n+        exceptionReporter.reportException(t);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    // Create a worklist of task attempts to work over.\n    Set\u003cTaskAttemptID\u003e maps \u003d new HashSet\u003cTaskAttemptID\u003e();\n    for (TaskAttemptID map : localMapFiles.keySet()) {\n      maps.add(map);\n    }\n\n    while (maps.size() \u003e 0) {\n      try {\n        // If merge is on, block\n        merger.waitForResource();\n        metrics.threadBusy();\n\n        // Copy as much as is possible.\n        doCopy(maps);\n        metrics.threadFree();\n      } catch (InterruptedException ie) {\n      } catch (Throwable t) {\n        exceptionReporter.reportException(t);\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/LocalFetcher.java"
    }
  }
}