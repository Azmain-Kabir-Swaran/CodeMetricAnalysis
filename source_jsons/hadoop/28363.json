{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MemoryFederationStateStore.java",
  "functionName": "getSubClusters",
  "functionId": "getSubClusters___request-GetSubClustersInfoRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/impl/MemoryFederationStateStore.java",
  "functionStartLine": 176,
  "functionEndLine": 187,
  "numCommitsSeen": 8,
  "timeTaken": 530,
  "changeHistory": [
    "dcf8c52d80118edce70e310da4fc05045b4cf175"
  ],
  "changeHistoryShort": {
    "dcf8c52d80118edce70e310da4fc05045b4cf175": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dcf8c52d80118edce70e310da4fc05045b4cf175": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5406. In-memory based implementation of the FederationMembershipStateStore. Contributed by Ellen Hui.\n\n(cherry picked from commit 20d1d2be91bf841e0fee32522ee7b560a6f2598f)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "dcf8c52d80118edce70e310da4fc05045b4cf175",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,13 @@\n+  public GetSubClustersInfoResponse getSubClusters(\n+      GetSubClustersInfoRequest request) throws YarnException {\n+    List\u003cSubClusterInfo\u003e result \u003d new ArrayList\u003cSubClusterInfo\u003e();\n+\n+    for (SubClusterInfo info : membership.values()) {\n+      if (!request.getFilterInactiveSubClusters()\n+          || info.getState().isActive()) {\n+        result.add(info);\n+      }\n+    }\n+    return GetSubClustersInfoResponse.newInstance(result);\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public GetSubClustersInfoResponse getSubClusters(\n      GetSubClustersInfoRequest request) throws YarnException {\n    List\u003cSubClusterInfo\u003e result \u003d new ArrayList\u003cSubClusterInfo\u003e();\n\n    for (SubClusterInfo info : membership.values()) {\n      if (!request.getFilterInactiveSubClusters()\n          || info.getState().isActive()) {\n        result.add(info);\n      }\n    }\n    return GetSubClustersInfoResponse.newInstance(result);\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/impl/MemoryFederationStateStore.java"
    }
  }
}