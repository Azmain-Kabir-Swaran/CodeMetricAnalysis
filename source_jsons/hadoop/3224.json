{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WebHdfsFileSystem.java",
  "functionName": "create",
  "functionId": "create___f-Path(modifiers-final)__permission-FsPermission(modifiers-final)__overwrite-boolean(modifiers-final)__bufferSize-int(modifiers-final)__replication-short(modifiers-final)__blockSize-long(modifiers-final)__progress-Progressable(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
  "functionStartLine": 1496,
  "functionEndLine": 1512,
  "numCommitsSeen": 179,
  "timeTaken": 4649,
  "changeHistory": [
    "f0d5382ff3e31a47d13e4cb6c3a244cca82b17ce",
    "687233f20d24c29041929dd0a99d963cec54b6df",
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
    "e4ee1d111be15ae6cca2f79be7ca73c204288d2b",
    "7a2443e9f8b95816c7df61530cda29e8b040b12e",
    "cb787968c5deac3dd5d10291aae39c36656a1487",
    "556be2af92b68808aff71937d437ab9948164bb1",
    "e4eec269d91ae541a321ae2f28ff03310682b3fe",
    "61d0b7530c8978c095ab6f62d9d38e168bd829c6"
  ],
  "changeHistoryShort": {
    "f0d5382ff3e31a47d13e4cb6c3a244cca82b17ce": "Ybodychange",
    "687233f20d24c29041929dd0a99d963cec54b6df": "Ybodychange",
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": "Yfilerename",
    "e4ee1d111be15ae6cca2f79be7ca73c204288d2b": "Ybodychange",
    "7a2443e9f8b95816c7df61530cda29e8b040b12e": "Ybodychange",
    "cb787968c5deac3dd5d10291aae39c36656a1487": "Ybodychange",
    "556be2af92b68808aff71937d437ab9948164bb1": "Ybodychange",
    "e4eec269d91ae541a321ae2f28ff03310682b3fe": "Ybodychange",
    "61d0b7530c8978c095ab6f62d9d38e168bd829c6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f0d5382ff3e31a47d13e4cb6c3a244cca82b17ce": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6962. ACL inheritance conflicts with umaskmode. Contributed by Chris Nauroth.\n",
      "commitDate": "06/09/16 11:02 AM",
      "commitName": "f0d5382ff3e31a47d13e4cb6c3a244cca82b17ce",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "31/08/16 2:29 PM",
      "commitNameOld": "85bab5fb572194fda38854f1f21c670925058009",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 5.86,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,17 @@\n   public FSDataOutputStream create(final Path f, final FsPermission permission,\n       final boolean overwrite, final int bufferSize, final short replication,\n       final long blockSize, final Progressable progress) throws IOException {\n     statistics.incrementWriteOps(1);\n     storageStatistics.incrementOpCounter(OpType.CREATE);\n \n+    final FsPermission modes \u003d applyUMask(permission);\n     final HttpOpParam.Op op \u003d PutOpParam.Op.CREATE;\n     return new FsPathOutputStreamRunner(op, f, bufferSize,\n-        new PermissionParam(applyUMask(permission)),\n+        new PermissionParam(modes.getMasked()),\n+        new UnmaskedPermissionParam(modes.getUnmasked()),\n         new OverwriteParam(overwrite),\n         new BufferSizeParam(bufferSize),\n         new ReplicationParam(replication),\n         new BlockSizeParam(blockSize)\n     ).run();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(final Path f, final FsPermission permission,\n      final boolean overwrite, final int bufferSize, final short replication,\n      final long blockSize, final Progressable progress) throws IOException {\n    statistics.incrementWriteOps(1);\n    storageStatistics.incrementOpCounter(OpType.CREATE);\n\n    final FsPermission modes \u003d applyUMask(permission);\n    final HttpOpParam.Op op \u003d PutOpParam.Op.CREATE;\n    return new FsPathOutputStreamRunner(op, f, bufferSize,\n        new PermissionParam(modes.getMasked()),\n        new UnmaskedPermissionParam(modes.getUnmasked()),\n        new OverwriteParam(overwrite),\n        new BufferSizeParam(bufferSize),\n        new ReplicationParam(replication),\n        new BlockSizeParam(blockSize)\n    ).run();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "687233f20d24c29041929dd0a99d963cec54b6df": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13065. Add a new interface for retrieving FS and FC Statistics (Mingliang Liu via cmccabe)\n",
      "commitDate": "11/05/16 1:45 PM",
      "commitName": "687233f20d24c29041929dd0a99d963cec54b6df",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "23/04/16 7:37 AM",
      "commitNameOld": "6fcde2e38da04cae3aad6b13cf442af211f71506",
      "commitAuthorOld": "Masatake Iwasaki",
      "daysBetweenCommits": 18.26,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   public FSDataOutputStream create(final Path f, final FsPermission permission,\n       final boolean overwrite, final int bufferSize, final short replication,\n       final long blockSize, final Progressable progress) throws IOException {\n     statistics.incrementWriteOps(1);\n+    storageStatistics.incrementOpCounter(OpType.CREATE);\n \n     final HttpOpParam.Op op \u003d PutOpParam.Op.CREATE;\n     return new FsPathOutputStreamRunner(op, f, bufferSize,\n         new PermissionParam(applyUMask(permission)),\n         new OverwriteParam(overwrite),\n         new BufferSizeParam(bufferSize),\n         new ReplicationParam(replication),\n         new BlockSizeParam(blockSize)\n     ).run();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(final Path f, final FsPermission permission,\n      final boolean overwrite, final int bufferSize, final short replication,\n      final long blockSize, final Progressable progress) throws IOException {\n    statistics.incrementWriteOps(1);\n    storageStatistics.incrementOpCounter(OpType.CREATE);\n\n    final HttpOpParam.Op op \u003d PutOpParam.Op.CREATE;\n    return new FsPathOutputStreamRunner(op, f, bufferSize,\n        new PermissionParam(applyUMask(permission)),\n        new OverwriteParam(overwrite),\n        new BufferSizeParam(bufferSize),\n        new ReplicationParam(replication),\n        new BlockSizeParam(blockSize)\n    ).run();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8052. Move WebHdfsFileSystem into hadoop-hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "23/04/15 5:33 PM",
      "commitName": "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "23/04/15 4:40 PM",
      "commitNameOld": "0b3f8957a87ada1a275c9904b211fdbdcefafb02",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FSDataOutputStream create(final Path f, final FsPermission permission,\n      final boolean overwrite, final int bufferSize, final short replication,\n      final long blockSize, final Progressable progress) throws IOException {\n    statistics.incrementWriteOps(1);\n\n    final HttpOpParam.Op op \u003d PutOpParam.Op.CREATE;\n    return new FsPathOutputStreamRunner(op, f, bufferSize,\n        new PermissionParam(applyUMask(permission)),\n        new OverwriteParam(overwrite),\n        new BufferSizeParam(bufferSize),\n        new ReplicationParam(replication),\n        new BlockSizeParam(blockSize)\n    ).run();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java"
      }
    },
    "e4ee1d111be15ae6cca2f79be7ca73c204288d2b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6305. WebHdfs response decoding may throw RuntimeExceptions (Daryn Sharp via jeagles)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594273 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/14 9:40 AM",
      "commitName": "e4ee1d111be15ae6cca2f79be7ca73c204288d2b",
      "commitAuthor": "Jonathan Turner Eagles",
      "commitDateOld": "13/05/14 9:19 AM",
      "commitNameOld": "33ade356b35223654a077103ed7fbed89f3f2321",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,14 @@\n   public FSDataOutputStream create(final Path f, final FsPermission permission,\n       final boolean overwrite, final int bufferSize, final short replication,\n       final long blockSize, final Progressable progress) throws IOException {\n     statistics.incrementWriteOps(1);\n \n     final HttpOpParam.Op op \u003d PutOpParam.Op.CREATE;\n-    return new FsPathRunner(op, f,\n+    return new FsPathOutputStreamRunner(op, f, bufferSize,\n         new PermissionParam(applyUMask(permission)),\n         new OverwriteParam(overwrite),\n         new BufferSizeParam(bufferSize),\n         new ReplicationParam(replication),\n-        new BlockSizeParam(blockSize))\n-      .run()\n-      .write(bufferSize);\n+        new BlockSizeParam(blockSize)\n+    ).run();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(final Path f, final FsPermission permission,\n      final boolean overwrite, final int bufferSize, final short replication,\n      final long blockSize, final Progressable progress) throws IOException {\n    statistics.incrementWriteOps(1);\n\n    final HttpOpParam.Op op \u003d PutOpParam.Op.CREATE;\n    return new FsPathOutputStreamRunner(op, f, bufferSize,\n        new PermissionParam(applyUMask(permission)),\n        new OverwriteParam(overwrite),\n        new BufferSizeParam(bufferSize),\n        new ReplicationParam(replication),\n        new BlockSizeParam(blockSize)\n    ).run();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "7a2443e9f8b95816c7df61530cda29e8b040b12e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5122. Support failover and retry in WebHdfsFileSystem for NN HA. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1524562 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/09/13 1:47 PM",
      "commitName": "7a2443e9f8b95816c7df61530cda29e8b040b12e",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "18/09/13 10:29 AM",
      "commitNameOld": "f278a491dcec249a2ec22e14b645d8f890278be5",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public FSDataOutputStream create(final Path f, final FsPermission permission,\n       final boolean overwrite, final int bufferSize, final short replication,\n       final long blockSize, final Progressable progress) throws IOException {\n     statistics.incrementWriteOps(1);\n \n     final HttpOpParam.Op op \u003d PutOpParam.Op.CREATE;\n-    return new Runner(op, f, \n+    return new FsPathRunner(op, f,\n         new PermissionParam(applyUMask(permission)),\n         new OverwriteParam(overwrite),\n         new BufferSizeParam(bufferSize),\n         new ReplicationParam(replication),\n         new BlockSizeParam(blockSize))\n       .run()\n       .write(bufferSize);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(final Path f, final FsPermission permission,\n      final boolean overwrite, final int bufferSize, final short replication,\n      final long blockSize, final Progressable progress) throws IOException {\n    statistics.incrementWriteOps(1);\n\n    final HttpOpParam.Op op \u003d PutOpParam.Op.CREATE;\n    return new FsPathRunner(op, f,\n        new PermissionParam(applyUMask(permission)),\n        new OverwriteParam(overwrite),\n        new BufferSizeParam(bufferSize),\n        new ReplicationParam(replication),\n        new BlockSizeParam(blockSize))\n      .run()\n      .write(bufferSize);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "cb787968c5deac3dd5d10291aae39c36656a1487": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3667.  Add retry support to WebHdfsFileSystem.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1367841 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/07/12 6:41 PM",
      "commitName": "cb787968c5deac3dd5d10291aae39c36656a1487",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "30/07/12 9:33 PM",
      "commitNameOld": "556be2af92b68808aff71937d437ab9948164bb1",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.88,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   public FSDataOutputStream create(final Path f, final FsPermission permission,\n       final boolean overwrite, final int bufferSize, final short replication,\n       final long blockSize, final Progressable progress) throws IOException {\n     statistics.incrementWriteOps(1);\n \n     final HttpOpParam.Op op \u003d PutOpParam.Op.CREATE;\n-    final HttpURLConnection conn \u003d httpConnect(op, f, \n+    return new Runner(op, f, \n         new PermissionParam(applyUMask(permission)),\n         new OverwriteParam(overwrite),\n         new BufferSizeParam(bufferSize),\n         new ReplicationParam(replication),\n-        new BlockSizeParam(blockSize));\n-    return write(op, conn, bufferSize);\n+        new BlockSizeParam(blockSize))\n+      .run()\n+      .write(bufferSize);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(final Path f, final FsPermission permission,\n      final boolean overwrite, final int bufferSize, final short replication,\n      final long blockSize, final Progressable progress) throws IOException {\n    statistics.incrementWriteOps(1);\n\n    final HttpOpParam.Op op \u003d PutOpParam.Op.CREATE;\n    return new Runner(op, f, \n        new PermissionParam(applyUMask(permission)),\n        new OverwriteParam(overwrite),\n        new BufferSizeParam(bufferSize),\n        new ReplicationParam(replication),\n        new BlockSizeParam(blockSize))\n      .run()\n      .write(bufferSize);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "556be2af92b68808aff71937d437ab9948164bb1": {
      "type": "Ybodychange",
      "commitMessage": "svn merge -c -1366601 for reverting HDFS-3667.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1367407 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/07/12 9:33 PM",
      "commitName": "556be2af92b68808aff71937d437ab9948164bb1",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "27/07/12 10:57 PM",
      "commitNameOld": "e4eec269d91ae541a321ae2f28ff03310682b3fe",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 2.94,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,14 @@\n   public FSDataOutputStream create(final Path f, final FsPermission permission,\n       final boolean overwrite, final int bufferSize, final short replication,\n       final long blockSize, final Progressable progress) throws IOException {\n     statistics.incrementWriteOps(1);\n \n     final HttpOpParam.Op op \u003d PutOpParam.Op.CREATE;\n-    return new Runner(op, f, \n+    final HttpURLConnection conn \u003d httpConnect(op, f, \n         new PermissionParam(applyUMask(permission)),\n         new OverwriteParam(overwrite),\n         new BufferSizeParam(bufferSize),\n         new ReplicationParam(replication),\n-        new BlockSizeParam(blockSize))\n-      .run()\n-      .write(bufferSize);\n+        new BlockSizeParam(blockSize));\n+    return write(op, conn, bufferSize);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(final Path f, final FsPermission permission,\n      final boolean overwrite, final int bufferSize, final short replication,\n      final long blockSize, final Progressable progress) throws IOException {\n    statistics.incrementWriteOps(1);\n\n    final HttpOpParam.Op op \u003d PutOpParam.Op.CREATE;\n    final HttpURLConnection conn \u003d httpConnect(op, f, \n        new PermissionParam(applyUMask(permission)),\n        new OverwriteParam(overwrite),\n        new BufferSizeParam(bufferSize),\n        new ReplicationParam(replication),\n        new BlockSizeParam(blockSize));\n    return write(op, conn, bufferSize);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "e4eec269d91ae541a321ae2f28ff03310682b3fe": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3667.  Add retry support to WebHdfsFileSystem.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1366601 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/07/12 10:57 PM",
      "commitName": "e4eec269d91ae541a321ae2f28ff03310682b3fe",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "25/07/12 4:37 PM",
      "commitNameOld": "8f395c2f78e5813e613197c3078a4ebc5d42775a",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 2.26,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   public FSDataOutputStream create(final Path f, final FsPermission permission,\n       final boolean overwrite, final int bufferSize, final short replication,\n       final long blockSize, final Progressable progress) throws IOException {\n     statistics.incrementWriteOps(1);\n \n     final HttpOpParam.Op op \u003d PutOpParam.Op.CREATE;\n-    final HttpURLConnection conn \u003d httpConnect(op, f, \n+    return new Runner(op, f, \n         new PermissionParam(applyUMask(permission)),\n         new OverwriteParam(overwrite),\n         new BufferSizeParam(bufferSize),\n         new ReplicationParam(replication),\n-        new BlockSizeParam(blockSize));\n-    return write(op, conn, bufferSize);\n+        new BlockSizeParam(blockSize))\n+      .run()\n+      .write(bufferSize);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(final Path f, final FsPermission permission,\n      final boolean overwrite, final int bufferSize, final short replication,\n      final long blockSize, final Progressable progress) throws IOException {\n    statistics.incrementWriteOps(1);\n\n    final HttpOpParam.Op op \u003d PutOpParam.Op.CREATE;\n    return new Runner(op, f, \n        new PermissionParam(applyUMask(permission)),\n        new OverwriteParam(overwrite),\n        new BufferSizeParam(bufferSize),\n        new ReplicationParam(replication),\n        new BlockSizeParam(blockSize))\n      .run()\n      .write(bufferSize);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "61d0b7530c8978c095ab6f62d9d38e168bd829c6": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2284. Add a new FileSystem, webhdfs://, for supporting write Http access to HDFS.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1167662 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/09/11 6:41 PM",
      "commitName": "61d0b7530c8978c095ab6f62d9d38e168bd829c6",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,14 @@\n+  public FSDataOutputStream create(final Path f, final FsPermission permission,\n+      final boolean overwrite, final int bufferSize, final short replication,\n+      final long blockSize, final Progressable progress) throws IOException {\n+    statistics.incrementWriteOps(1);\n+\n+    final HttpOpParam.Op op \u003d PutOpParam.Op.CREATE;\n+    final HttpURLConnection conn \u003d httpConnect(op, f, \n+        new PermissionParam(applyUMask(permission)),\n+        new OverwriteParam(overwrite),\n+        new BufferSizeParam(bufferSize),\n+        new ReplicationParam(replication),\n+        new BlockSizeParam(blockSize));\n+    return write(op, conn, bufferSize);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(final Path f, final FsPermission permission,\n      final boolean overwrite, final int bufferSize, final short replication,\n      final long blockSize, final Progressable progress) throws IOException {\n    statistics.incrementWriteOps(1);\n\n    final HttpOpParam.Op op \u003d PutOpParam.Op.CREATE;\n    final HttpURLConnection conn \u003d httpConnect(op, f, \n        new PermissionParam(applyUMask(permission)),\n        new OverwriteParam(overwrite),\n        new BufferSizeParam(bufferSize),\n        new ReplicationParam(replication),\n        new BlockSizeParam(blockSize));\n    return write(op, conn, bufferSize);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java"
    }
  }
}