{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CommandWithDestination.java",
  "functionName": "copyFileToTarget",
  "functionId": "copyFileToTarget___src-PathData__target-PathData",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
  "functionStartLine": 343,
  "functionEndLine": 356,
  "numCommitsSeen": 29,
  "timeTaken": 1892,
  "changeHistory": [
    "e6bdb33784530f57a41e1b3cd1b0a1f601ca5b88",
    "c3e26735a662e478005c8c75b0909797a22cd640",
    "6e37dd331b52d3081bdda87664934a05834ea753",
    "23683321384339eac262d9fad97282f66d4352d4",
    "bfef63719d04a25d8105f82e24a77f5d66c30f58",
    "6a9ccd809bbc9d5f9cf1d75bf4819b211619440a",
    "7f7b05226e3ae1fdf3c440f8d26814f4d955f734",
    "8f9661da4823bfbb243e430252ec1bb5780ecbfc"
  ],
  "changeHistoryShort": {
    "e6bdb33784530f57a41e1b3cd1b0a1f601ca5b88": "Ybodychange",
    "c3e26735a662e478005c8c75b0909797a22cd640": "Ybodychange",
    "6e37dd331b52d3081bdda87664934a05834ea753": "Ybodychange",
    "23683321384339eac262d9fad97282f66d4352d4": "Ybodychange",
    "bfef63719d04a25d8105f82e24a77f5d66c30f58": "Ybodychange",
    "6a9ccd809bbc9d5f9cf1d75bf4819b211619440a": "Ybodychange",
    "7f7b05226e3ae1fdf3c440f8d26814f4d955f734": "Ybodychange",
    "8f9661da4823bfbb243e430252ec1bb5780ecbfc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e6bdb33784530f57a41e1b3cd1b0a1f601ca5b88": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10919. Copy command should preserve raw.* namespace extended attributes. (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1616840 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/14 10:58 AM",
      "commitName": "e6bdb33784530f57a41e1b3cd1b0a1f601ca5b88",
      "commitAuthor": "Charles Lamb",
      "commitDateOld": "25/06/14 10:36 PM",
      "commitNameOld": "c3e26735a662e478005c8c75b0909797a22cd640",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 43.51,
      "commitsBetweenForRepo": 335,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,14 @@\n-  protected void copyFileToTarget(PathData src, PathData target) throws IOException {\n+  protected void copyFileToTarget(PathData src, PathData target)\n+      throws IOException {\n+    final boolean preserveRawXattrs \u003d\n+        checkPathsForReservedRaw(src.path, target.path);\n     src.fs.setVerifyChecksum(verifyChecksum);\n     InputStream in \u003d null;\n     try {\n       in \u003d src.fs.open(src.path);\n       copyStreamToTarget(in, target);\n-      preserveAttributes(src, target);\n+      preserveAttributes(src, target, preserveRawXattrs);\n     } finally {\n       IOUtils.closeStream(in);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void copyFileToTarget(PathData src, PathData target)\n      throws IOException {\n    final boolean preserveRawXattrs \u003d\n        checkPathsForReservedRaw(src.path, target.path);\n    src.fs.setVerifyChecksum(verifyChecksum);\n    InputStream in \u003d null;\n    try {\n      in \u003d src.fs.open(src.path);\n      copyStreamToTarget(in, target);\n      preserveAttributes(src, target, preserveRawXattrs);\n    } finally {\n      IOUtils.closeStream(in);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
      "extendedDetails": {}
    },
    "c3e26735a662e478005c8c75b0909797a22cd640": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9705. FsShell cp -p does not preserve directory attibutes. Contributed by Akira AJISAKA.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605672 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/06/14 10:36 PM",
      "commitName": "c3e26735a662e478005c8c75b0909797a22cd640",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "17/06/14 10:08 AM",
      "commitNameOld": "6e37dd331b52d3081bdda87664934a05834ea753",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 8.52,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,11 @@\n   protected void copyFileToTarget(PathData src, PathData target) throws IOException {\n     src.fs.setVerifyChecksum(verifyChecksum);\n     InputStream in \u003d null;\n     try {\n       in \u003d src.fs.open(src.path);\n       copyStreamToTarget(in, target);\n-      if (shouldPreserve(FileAttribute.TIMESTAMPS)) {\n-        target.fs.setTimes(\n-          target.path,\n-          src.stat.getModificationTime(),\n-          src.stat.getAccessTime());\n-      }\n-      if (shouldPreserve(FileAttribute.OWNERSHIP)) {\n-        target.fs.setOwner(\n-          target.path,\n-          src.stat.getOwner(),\n-          src.stat.getGroup());\n-      }\n-      if (shouldPreserve(FileAttribute.PERMISSION) ||\n-          shouldPreserve(FileAttribute.ACL)) {\n-        target.fs.setPermission(\n-          target.path,\n-          src.stat.getPermission());\n-      }\n-      if (shouldPreserve(FileAttribute.ACL)) {\n-        FsPermission perm \u003d src.stat.getPermission();\n-        if (perm.getAclBit()) {\n-          List\u003cAclEntry\u003e srcEntries \u003d\n-              src.fs.getAclStatus(src.path).getEntries();\n-          List\u003cAclEntry\u003e srcFullEntries \u003d\n-              AclUtil.getAclFromPermAndEntries(perm, srcEntries);\n-          target.fs.setAcl(target.path, srcFullEntries);\n-        }\n-      }\n-      if (shouldPreserve(FileAttribute.XATTR)) {\n-        Map\u003cString, byte[]\u003e srcXAttrs \u003d src.fs.getXAttrs(src.path);\n-        if (srcXAttrs !\u003d null) {\n-          Iterator\u003cEntry\u003cString, byte[]\u003e\u003e iter \u003d srcXAttrs.entrySet().iterator();\n-          while (iter.hasNext()) {\n-            Entry\u003cString, byte[]\u003e entry \u003d iter.next();\n-            target.fs.setXAttr(target.path, entry.getKey(), entry.getValue());\n-          }\n-        }\n-      }\n+      preserveAttributes(src, target);\n     } finally {\n       IOUtils.closeStream(in);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void copyFileToTarget(PathData src, PathData target) throws IOException {\n    src.fs.setVerifyChecksum(verifyChecksum);\n    InputStream in \u003d null;\n    try {\n      in \u003d src.fs.open(src.path);\n      copyStreamToTarget(in, target);\n      preserveAttributes(src, target);\n    } finally {\n      IOUtils.closeStream(in);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
      "extendedDetails": {}
    },
    "6e37dd331b52d3081bdda87664934a05834ea753": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10557. FsShell -cp -pa option for preserving extended ACLs. Contributed by Akira Ajisaka.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603222 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/06/14 10:08 AM",
      "commitName": "6e37dd331b52d3081bdda87664934a05834ea753",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "12/06/14 9:34 AM",
      "commitNameOld": "23683321384339eac262d9fad97282f66d4352d4",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 5.02,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,48 @@\n   protected void copyFileToTarget(PathData src, PathData target) throws IOException {\n     src.fs.setVerifyChecksum(verifyChecksum);\n     InputStream in \u003d null;\n     try {\n       in \u003d src.fs.open(src.path);\n       copyStreamToTarget(in, target);\n       if (shouldPreserve(FileAttribute.TIMESTAMPS)) {\n         target.fs.setTimes(\n           target.path,\n           src.stat.getModificationTime(),\n           src.stat.getAccessTime());\n       }\n       if (shouldPreserve(FileAttribute.OWNERSHIP)) {\n         target.fs.setOwner(\n           target.path,\n           src.stat.getOwner(),\n           src.stat.getGroup());\n       }\n-      if (shouldPreserve(FileAttribute.PERMISSION)) {\n+      if (shouldPreserve(FileAttribute.PERMISSION) ||\n+          shouldPreserve(FileAttribute.ACL)) {\n         target.fs.setPermission(\n           target.path,\n           src.stat.getPermission());\n       }\n+      if (shouldPreserve(FileAttribute.ACL)) {\n+        FsPermission perm \u003d src.stat.getPermission();\n+        if (perm.getAclBit()) {\n+          List\u003cAclEntry\u003e srcEntries \u003d\n+              src.fs.getAclStatus(src.path).getEntries();\n+          List\u003cAclEntry\u003e srcFullEntries \u003d\n+              AclUtil.getAclFromPermAndEntries(perm, srcEntries);\n+          target.fs.setAcl(target.path, srcFullEntries);\n+        }\n+      }\n       if (shouldPreserve(FileAttribute.XATTR)) {\n         Map\u003cString, byte[]\u003e srcXAttrs \u003d src.fs.getXAttrs(src.path);\n         if (srcXAttrs !\u003d null) {\n           Iterator\u003cEntry\u003cString, byte[]\u003e\u003e iter \u003d srcXAttrs.entrySet().iterator();\n           while (iter.hasNext()) {\n             Entry\u003cString, byte[]\u003e entry \u003d iter.next();\n             target.fs.setXAttr(target.path, entry.getKey(), entry.getValue());\n           }\n         }\n       }\n     } finally {\n       IOUtils.closeStream(in);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void copyFileToTarget(PathData src, PathData target) throws IOException {\n    src.fs.setVerifyChecksum(verifyChecksum);\n    InputStream in \u003d null;\n    try {\n      in \u003d src.fs.open(src.path);\n      copyStreamToTarget(in, target);\n      if (shouldPreserve(FileAttribute.TIMESTAMPS)) {\n        target.fs.setTimes(\n          target.path,\n          src.stat.getModificationTime(),\n          src.stat.getAccessTime());\n      }\n      if (shouldPreserve(FileAttribute.OWNERSHIP)) {\n        target.fs.setOwner(\n          target.path,\n          src.stat.getOwner(),\n          src.stat.getGroup());\n      }\n      if (shouldPreserve(FileAttribute.PERMISSION) ||\n          shouldPreserve(FileAttribute.ACL)) {\n        target.fs.setPermission(\n          target.path,\n          src.stat.getPermission());\n      }\n      if (shouldPreserve(FileAttribute.ACL)) {\n        FsPermission perm \u003d src.stat.getPermission();\n        if (perm.getAclBit()) {\n          List\u003cAclEntry\u003e srcEntries \u003d\n              src.fs.getAclStatus(src.path).getEntries();\n          List\u003cAclEntry\u003e srcFullEntries \u003d\n              AclUtil.getAclFromPermAndEntries(perm, srcEntries);\n          target.fs.setAcl(target.path, srcFullEntries);\n        }\n      }\n      if (shouldPreserve(FileAttribute.XATTR)) {\n        Map\u003cString, byte[]\u003e srcXAttrs \u003d src.fs.getXAttrs(src.path);\n        if (srcXAttrs !\u003d null) {\n          Iterator\u003cEntry\u003cString, byte[]\u003e\u003e iter \u003d srcXAttrs.entrySet().iterator();\n          while (iter.hasNext()) {\n            Entry\u003cString, byte[]\u003e entry \u003d iter.next();\n            target.fs.setXAttr(target.path, entry.getKey(), entry.getValue());\n          }\n        }\n      }\n    } finally {\n      IOUtils.closeStream(in);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
      "extendedDetails": {}
    },
    "23683321384339eac262d9fad97282f66d4352d4": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10561. Copy command with preserve option should handle Xattrs. Contributed by Yi Liu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1602225 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/14 9:34 AM",
      "commitName": "23683321384339eac262d9fad97282f66d4352d4",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "09/10/13 3:57 PM",
      "commitNameOld": "a75794567bd029cd54281fb01800df2ea362a187",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 245.73,
      "commitsBetweenForRepo": 1619,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,37 @@\n   protected void copyFileToTarget(PathData src, PathData target) throws IOException {\n     src.fs.setVerifyChecksum(verifyChecksum);\n     InputStream in \u003d null;\n     try {\n       in \u003d src.fs.open(src.path);\n       copyStreamToTarget(in, target);\n-      if(preserve) {\n+      if (shouldPreserve(FileAttribute.TIMESTAMPS)) {\n         target.fs.setTimes(\n           target.path,\n           src.stat.getModificationTime(),\n           src.stat.getAccessTime());\n+      }\n+      if (shouldPreserve(FileAttribute.OWNERSHIP)) {\n         target.fs.setOwner(\n           target.path,\n           src.stat.getOwner(),\n           src.stat.getGroup());\n+      }\n+      if (shouldPreserve(FileAttribute.PERMISSION)) {\n         target.fs.setPermission(\n           target.path,\n           src.stat.getPermission());\n       }\n+      if (shouldPreserve(FileAttribute.XATTR)) {\n+        Map\u003cString, byte[]\u003e srcXAttrs \u003d src.fs.getXAttrs(src.path);\n+        if (srcXAttrs !\u003d null) {\n+          Iterator\u003cEntry\u003cString, byte[]\u003e\u003e iter \u003d srcXAttrs.entrySet().iterator();\n+          while (iter.hasNext()) {\n+            Entry\u003cString, byte[]\u003e entry \u003d iter.next();\n+            target.fs.setXAttr(target.path, entry.getKey(), entry.getValue());\n+          }\n+        }\n+      }\n     } finally {\n       IOUtils.closeStream(in);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void copyFileToTarget(PathData src, PathData target) throws IOException {\n    src.fs.setVerifyChecksum(verifyChecksum);\n    InputStream in \u003d null;\n    try {\n      in \u003d src.fs.open(src.path);\n      copyStreamToTarget(in, target);\n      if (shouldPreserve(FileAttribute.TIMESTAMPS)) {\n        target.fs.setTimes(\n          target.path,\n          src.stat.getModificationTime(),\n          src.stat.getAccessTime());\n      }\n      if (shouldPreserve(FileAttribute.OWNERSHIP)) {\n        target.fs.setOwner(\n          target.path,\n          src.stat.getOwner(),\n          src.stat.getGroup());\n      }\n      if (shouldPreserve(FileAttribute.PERMISSION)) {\n        target.fs.setPermission(\n          target.path,\n          src.stat.getPermission());\n      }\n      if (shouldPreserve(FileAttribute.XATTR)) {\n        Map\u003cString, byte[]\u003e srcXAttrs \u003d src.fs.getXAttrs(src.path);\n        if (srcXAttrs !\u003d null) {\n          Iterator\u003cEntry\u003cString, byte[]\u003e\u003e iter \u003d srcXAttrs.entrySet().iterator();\n          while (iter.hasNext()) {\n            Entry\u003cString, byte[]\u003e entry \u003d iter.next();\n            target.fs.setXAttr(target.path, entry.getKey(), entry.getValue());\n          }\n        }\n      }\n    } finally {\n      IOUtils.closeStream(in);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
      "extendedDetails": {}
    },
    "bfef63719d04a25d8105f82e24a77f5d66c30f58": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9338. FsShell Copy Commands Should Optionally Preserve File Attributes. Contributed by Nick White.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1477714 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/04/13 9:27 AM",
      "commitName": "bfef63719d04a25d8105f82e24a77f5d66c30f58",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "12/03/13 10:26 AM",
      "commitNameOld": "6a9ccd809bbc9d5f9cf1d75bf4819b211619440a",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 48.96,
      "commitsBetweenForRepo": 284,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,23 @@\n   protected void copyFileToTarget(PathData src, PathData target) throws IOException {\n     src.fs.setVerifyChecksum(verifyChecksum);\n     InputStream in \u003d null;\n     try {\n       in \u003d src.fs.open(src.path);\n       copyStreamToTarget(in, target);\n+      if(preserve) {\n+        target.fs.setTimes(\n+          target.path,\n+          src.stat.getModificationTime(),\n+          src.stat.getAccessTime());\n+        target.fs.setOwner(\n+          target.path,\n+          src.stat.getOwner(),\n+          src.stat.getGroup());\n+        target.fs.setPermission(\n+          target.path,\n+          src.stat.getPermission());\n+      }\n     } finally {\n       IOUtils.closeStream(in);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void copyFileToTarget(PathData src, PathData target) throws IOException {\n    src.fs.setVerifyChecksum(verifyChecksum);\n    InputStream in \u003d null;\n    try {\n      in \u003d src.fs.open(src.path);\n      copyStreamToTarget(in, target);\n      if(preserve) {\n        target.fs.setTimes(\n          target.path,\n          src.stat.getModificationTime(),\n          src.stat.getAccessTime());\n        target.fs.setOwner(\n          target.path,\n          src.stat.getOwner(),\n          src.stat.getGroup());\n        target.fs.setPermission(\n          target.path,\n          src.stat.getPermission());\n      }\n    } finally {\n      IOUtils.closeStream(in);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
      "extendedDetails": {}
    },
    "6a9ccd809bbc9d5f9cf1d75bf4819b211619440a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9388. TestFsShellCopy fails on Windows. Contributed by Ivan Mitic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1455637 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/03/13 10:26 AM",
      "commitName": "6a9ccd809bbc9d5f9cf1d75bf4819b211619440a",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "06/03/13 11:15 AM",
      "commitNameOld": "638801cce16fc1dc3259c541dc30a599faaddda1",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 5.92,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,10 @@\n   protected void copyFileToTarget(PathData src, PathData target) throws IOException {\n     src.fs.setVerifyChecksum(verifyChecksum);\n-    copyStreamToTarget(src.fs.open(src.path), target);\n+    InputStream in \u003d null;\n+    try {\n+      in \u003d src.fs.open(src.path);\n+      copyStreamToTarget(in, target);\n+    } finally {\n+      IOUtils.closeStream(in);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void copyFileToTarget(PathData src, PathData target) throws IOException {\n    src.fs.setVerifyChecksum(verifyChecksum);\n    InputStream in \u003d null;\n    try {\n      in \u003d src.fs.open(src.path);\n      copyStreamToTarget(in, target);\n    } finally {\n      IOUtils.closeStream(in);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
      "extendedDetails": {}
    },
    "7f7b05226e3ae1fdf3c440f8d26814f4d955f734": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8042.  When copying a file out of HDFS, modifying it, and uploading it back into HDFS, the put fails due to a CRC mismatch (Daryn Sharp via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1242389 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/02/12 8:41 AM",
      "commitName": "7f7b05226e3ae1fdf3c440f8d26814f4d955f734",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "31/10/11 6:50 PM",
      "commitNameOld": "8f9661da4823bfbb243e430252ec1bb5780ecbfc",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 100.62,
      "commitsBetweenForRepo": 559,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,4 @@\n   protected void copyFileToTarget(PathData src, PathData target) throws IOException {\n+    src.fs.setVerifyChecksum(verifyChecksum);\n     copyStreamToTarget(src.fs.open(src.path), target);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void copyFileToTarget(PathData src, PathData target) throws IOException {\n    src.fs.setVerifyChecksum(verifyChecksum);\n    copyStreamToTarget(src.fs.open(src.path), target);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
      "extendedDetails": {}
    },
    "8f9661da4823bfbb243e430252ec1bb5780ecbfc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7771. FsShell -copyToLocal, -get, etc. commands throw NPE if the destination directory does not exist.  Contributed by John George and Daryn Sharp\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195760 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/11 6:50 PM",
      "commitName": "8f9661da4823bfbb243e430252ec1bb5780ecbfc",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,3 @@\n+  protected void copyFileToTarget(PathData src, PathData target) throws IOException {\n+    copyStreamToTarget(src.fs.open(src.path), target);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void copyFileToTarget(PathData src, PathData target) throws IOException {\n    copyStreamToTarget(src.fs.open(src.path), target);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java"
    }
  }
}