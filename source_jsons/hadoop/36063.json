{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppManager.java",
  "functionName": "placeApplication",
  "functionId": "placeApplication___placementManager-PlacementManager__context-ApplicationSubmissionContext__user-String__isRecovery-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
  "functionStartLine": 849,
  "functionEndLine": 883,
  "numCommitsSeen": 335,
  "timeTaken": 8310,
  "changeHistory": [
    "dfdc6d6dd95e54665faf02de3a094bbe5e7d0f56",
    "5257f50abb71905ef3068fd45541d00ce9e8f355",
    "e673dd1d4d78b66e7b6705ec6dc3679d2347d704",
    "f9f317b70209d20161d66a73ddea3334d2b92f96",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df"
  ],
  "changeHistoryShort": {
    "dfdc6d6dd95e54665faf02de3a094bbe5e7d0f56": "Ybodychange",
    "5257f50abb71905ef3068fd45541d00ce9e8f355": "Ybodychange",
    "e673dd1d4d78b66e7b6705ec6dc3679d2347d704": "Ymultichange(Yparameterchange,Ybodychange)",
    "f9f317b70209d20161d66a73ddea3334d2b92f96": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dfdc6d6dd95e54665faf02de3a094bbe5e7d0f56": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9886. Queue mapping based on userid passed through application tag. Contributed by Julia Kinga Marton\n",
      "commitDate": "19/11/19 12:14 PM",
      "commitName": "dfdc6d6dd95e54665faf02de3a094bbe5e7d0f56",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "01/10/19 3:32 AM",
      "commitNameOld": "425a6c89aedb4d5ad9a524c9f1e631eea2816f9c",
      "commitAuthorOld": "bibinchundatt",
      "daysBetweenCommits": 49.4,
      "commitsBetweenForRepo": 244,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,35 @@\n   ApplicationPlacementContext placeApplication(\n       PlacementManager placementManager, ApplicationSubmissionContext context,\n       String user, boolean isRecovery) throws YarnException {\n     ApplicationPlacementContext placementContext \u003d null;\n     if (placementManager !\u003d null) {\n       try {\n-        placementContext \u003d placementManager.placeApplication(context, user);\n+        String usernameUsedForPlacement \u003d\n+                getUserNameForPlacement(user, context, placementManager);\n+        placementContext \u003d placementManager\n+                .placeApplication(context, usernameUsedForPlacement);\n       } catch (YarnException e) {\n         // Placement could also fail if the user doesn\u0027t exist in system\n         // skip if the user is not found during recovery.\n         if (isRecovery) {\n           LOG.warn(\"Application placement failed for user \" + user +\n               \" and application \" + context.getApplicationId() +\n               \", skipping placement on recovery of rm\", e);\n           return placementContext;\n         }\n         throw e;\n       }\n     }\n     // The submission context when created often has a queue set. In case of\n     // the FairScheduler a null placement context is still considered as a\n     // failure, even when a queue is provided on submit. This case handled in\n     // the scheduler.\n     if (placementContext \u003d\u003d null \u0026\u0026 (context.getQueue() \u003d\u003d null) ||\n         context.getQueue().isEmpty()) {\n       String msg \u003d \"Failed to place application \" + context.getApplicationId()\n           + \" in a queue and submit context queue is null or empty\";\n       LOG.error(msg);\n       throw new YarnException(msg);\n     }\n     return placementContext;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  ApplicationPlacementContext placeApplication(\n      PlacementManager placementManager, ApplicationSubmissionContext context,\n      String user, boolean isRecovery) throws YarnException {\n    ApplicationPlacementContext placementContext \u003d null;\n    if (placementManager !\u003d null) {\n      try {\n        String usernameUsedForPlacement \u003d\n                getUserNameForPlacement(user, context, placementManager);\n        placementContext \u003d placementManager\n                .placeApplication(context, usernameUsedForPlacement);\n      } catch (YarnException e) {\n        // Placement could also fail if the user doesn\u0027t exist in system\n        // skip if the user is not found during recovery.\n        if (isRecovery) {\n          LOG.warn(\"Application placement failed for user \" + user +\n              \" and application \" + context.getApplicationId() +\n              \", skipping placement on recovery of rm\", e);\n          return placementContext;\n        }\n        throw e;\n      }\n    }\n    // The submission context when created often has a queue set. In case of\n    // the FairScheduler a null placement context is still considered as a\n    // failure, even when a queue is provided on submit. This case handled in\n    // the scheduler.\n    if (placementContext \u003d\u003d null \u0026\u0026 (context.getQueue() \u003d\u003d null) ||\n        context.getQueue().isEmpty()) {\n      String msg \u003d \"Failed to place application \" + context.getApplicationId()\n          + \" in a queue and submit context queue is null or empty\";\n      LOG.error(msg);\n      throw new YarnException(msg);\n    }\n    return placementContext;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
      "extendedDetails": {}
    },
    "5257f50abb71905ef3068fd45541d00ce9e8f355": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8967. Change FairScheduler to use PlacementRule interface. Contributed by Wilfred Spiegelenburg.\n",
      "commitDate": "25/03/19 10:47 PM",
      "commitName": "5257f50abb71905ef3068fd45541d00ce9e8f355",
      "commitAuthor": "yufei",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 10.27,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,32 @@\n   ApplicationPlacementContext placeApplication(\n       PlacementManager placementManager, ApplicationSubmissionContext context,\n       String user, boolean isRecovery) throws YarnException {\n     ApplicationPlacementContext placementContext \u003d null;\n     if (placementManager !\u003d null) {\n       try {\n         placementContext \u003d placementManager.placeApplication(context, user);\n       } catch (YarnException e) {\n         // Placement could also fail if the user doesn\u0027t exist in system\n         // skip if the user is not found during recovery.\n         if (isRecovery) {\n-          LOG.warn(\"PlaceApplication failed,skipping on recovery of rm\");\n+          LOG.warn(\"Application placement failed for user \" + user +\n+              \" and application \" + context.getApplicationId() +\n+              \", skipping placement on recovery of rm\", e);\n           return placementContext;\n         }\n         throw e;\n       }\n     }\n-    if (placementContext \u003d\u003d null \u0026\u0026 (context.getQueue() \u003d\u003d null) || context\n-        .getQueue().isEmpty()) {\n+    // The submission context when created often has a queue set. In case of\n+    // the FairScheduler a null placement context is still considered as a\n+    // failure, even when a queue is provided on submit. This case handled in\n+    // the scheduler.\n+    if (placementContext \u003d\u003d null \u0026\u0026 (context.getQueue() \u003d\u003d null) ||\n+        context.getQueue().isEmpty()) {\n       String msg \u003d \"Failed to place application \" + context.getApplicationId()\n-          + \" to queue and specified \" + \"queue is invalid : \" + context\n-          .getQueue();\n+          + \" in a queue and submit context queue is null or empty\";\n       LOG.error(msg);\n       throw new YarnException(msg);\n     }\n     return placementContext;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  ApplicationPlacementContext placeApplication(\n      PlacementManager placementManager, ApplicationSubmissionContext context,\n      String user, boolean isRecovery) throws YarnException {\n    ApplicationPlacementContext placementContext \u003d null;\n    if (placementManager !\u003d null) {\n      try {\n        placementContext \u003d placementManager.placeApplication(context, user);\n      } catch (YarnException e) {\n        // Placement could also fail if the user doesn\u0027t exist in system\n        // skip if the user is not found during recovery.\n        if (isRecovery) {\n          LOG.warn(\"Application placement failed for user \" + user +\n              \" and application \" + context.getApplicationId() +\n              \", skipping placement on recovery of rm\", e);\n          return placementContext;\n        }\n        throw e;\n      }\n    }\n    // The submission context when created often has a queue set. In case of\n    // the FairScheduler a null placement context is still considered as a\n    // failure, even when a queue is provided on submit. This case handled in\n    // the scheduler.\n    if (placementContext \u003d\u003d null \u0026\u0026 (context.getQueue() \u003d\u003d null) ||\n        context.getQueue().isEmpty()) {\n      String msg \u003d \"Failed to place application \" + context.getApplicationId()\n          + \" in a queue and submit context queue is null or empty\";\n      LOG.error(msg);\n      throw new YarnException(msg);\n    }\n    return placementContext;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
      "extendedDetails": {}
    },
    "e673dd1d4d78b66e7b6705ec6dc3679d2347d704": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8541. RM startup failure on recovery after user deletion. Contributed by Bibin A Chundatt.\n",
      "commitDate": "24/07/18 10:56 AM",
      "commitName": "e673dd1d4d78b66e7b6705ec6dc3679d2347d704",
      "commitAuthor": "bibinchundatt",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8541. RM startup failure on recovery after user deletion. Contributed by Bibin A Chundatt.\n",
          "commitDate": "24/07/18 10:56 AM",
          "commitName": "e673dd1d4d78b66e7b6705ec6dc3679d2347d704",
          "commitAuthor": "bibinchundatt",
          "commitDateOld": "22/05/18 1:33 PM",
          "commitNameOld": "bd15d2396ef0c24fb6b60c6393d16b37651b828e",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 62.89,
          "commitsBetweenForRepo": 433,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,27 @@\n-  ApplicationPlacementContext placeApplication(RMContext rmContext,\n-      ApplicationSubmissionContext context, String user) throws YarnException {\n+  ApplicationPlacementContext placeApplication(\n+      PlacementManager placementManager, ApplicationSubmissionContext context,\n+      String user, boolean isRecovery) throws YarnException {\n     ApplicationPlacementContext placementContext \u003d null;\n-    PlacementManager placementManager \u003d rmContext.getQueuePlacementManager();\n-\n     if (placementManager !\u003d null) {\n-      placementContext \u003d placementManager.placeApplication(context, user);\n-    } else{\n-      if ( context.getQueue() \u003d\u003d null || context.getQueue().isEmpty()) {\n-        final String msg \u003d \"Queue Placement Manager is not set. Cannot place \"\n-            + \"application : \" + context.getApplicationId() + \" to queue and \"\n-            + \"specified queue is invalid \" + context.getQueue();\n-        LOG.error(msg);\n-        throw new YarnException(msg);\n+      try {\n+        placementContext \u003d placementManager.placeApplication(context, user);\n+      } catch (YarnException e) {\n+        // Placement could also fail if the user doesn\u0027t exist in system\n+        // skip if the user is not found during recovery.\n+        if (isRecovery) {\n+          LOG.warn(\"PlaceApplication failed,skipping on recovery of rm\");\n+          return placementContext;\n+        }\n+        throw e;\n       }\n     }\n-\n+    if (placementContext \u003d\u003d null \u0026\u0026 (context.getQueue() \u003d\u003d null) || context\n+        .getQueue().isEmpty()) {\n+      String msg \u003d \"Failed to place application \" + context.getApplicationId()\n+          + \" to queue and specified \" + \"queue is invalid : \" + context\n+          .getQueue();\n+      LOG.error(msg);\n+      throw new YarnException(msg);\n+    }\n     return placementContext;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  ApplicationPlacementContext placeApplication(\n      PlacementManager placementManager, ApplicationSubmissionContext context,\n      String user, boolean isRecovery) throws YarnException {\n    ApplicationPlacementContext placementContext \u003d null;\n    if (placementManager !\u003d null) {\n      try {\n        placementContext \u003d placementManager.placeApplication(context, user);\n      } catch (YarnException e) {\n        // Placement could also fail if the user doesn\u0027t exist in system\n        // skip if the user is not found during recovery.\n        if (isRecovery) {\n          LOG.warn(\"PlaceApplication failed,skipping on recovery of rm\");\n          return placementContext;\n        }\n        throw e;\n      }\n    }\n    if (placementContext \u003d\u003d null \u0026\u0026 (context.getQueue() \u003d\u003d null) || context\n        .getQueue().isEmpty()) {\n      String msg \u003d \"Failed to place application \" + context.getApplicationId()\n          + \" to queue and specified \" + \"queue is invalid : \" + context\n          .getQueue();\n      LOG.error(msg);\n      throw new YarnException(msg);\n    }\n    return placementContext;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
          "extendedDetails": {
            "oldValue": "[rmContext-RMContext, context-ApplicationSubmissionContext, user-String]",
            "newValue": "[placementManager-PlacementManager, context-ApplicationSubmissionContext, user-String, isRecovery-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8541. RM startup failure on recovery after user deletion. Contributed by Bibin A Chundatt.\n",
          "commitDate": "24/07/18 10:56 AM",
          "commitName": "e673dd1d4d78b66e7b6705ec6dc3679d2347d704",
          "commitAuthor": "bibinchundatt",
          "commitDateOld": "22/05/18 1:33 PM",
          "commitNameOld": "bd15d2396ef0c24fb6b60c6393d16b37651b828e",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 62.89,
          "commitsBetweenForRepo": 433,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,27 @@\n-  ApplicationPlacementContext placeApplication(RMContext rmContext,\n-      ApplicationSubmissionContext context, String user) throws YarnException {\n+  ApplicationPlacementContext placeApplication(\n+      PlacementManager placementManager, ApplicationSubmissionContext context,\n+      String user, boolean isRecovery) throws YarnException {\n     ApplicationPlacementContext placementContext \u003d null;\n-    PlacementManager placementManager \u003d rmContext.getQueuePlacementManager();\n-\n     if (placementManager !\u003d null) {\n-      placementContext \u003d placementManager.placeApplication(context, user);\n-    } else{\n-      if ( context.getQueue() \u003d\u003d null || context.getQueue().isEmpty()) {\n-        final String msg \u003d \"Queue Placement Manager is not set. Cannot place \"\n-            + \"application : \" + context.getApplicationId() + \" to queue and \"\n-            + \"specified queue is invalid \" + context.getQueue();\n-        LOG.error(msg);\n-        throw new YarnException(msg);\n+      try {\n+        placementContext \u003d placementManager.placeApplication(context, user);\n+      } catch (YarnException e) {\n+        // Placement could also fail if the user doesn\u0027t exist in system\n+        // skip if the user is not found during recovery.\n+        if (isRecovery) {\n+          LOG.warn(\"PlaceApplication failed,skipping on recovery of rm\");\n+          return placementContext;\n+        }\n+        throw e;\n       }\n     }\n-\n+    if (placementContext \u003d\u003d null \u0026\u0026 (context.getQueue() \u003d\u003d null) || context\n+        .getQueue().isEmpty()) {\n+      String msg \u003d \"Failed to place application \" + context.getApplicationId()\n+          + \" to queue and specified \" + \"queue is invalid : \" + context\n+          .getQueue();\n+      LOG.error(msg);\n+      throw new YarnException(msg);\n+    }\n     return placementContext;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  ApplicationPlacementContext placeApplication(\n      PlacementManager placementManager, ApplicationSubmissionContext context,\n      String user, boolean isRecovery) throws YarnException {\n    ApplicationPlacementContext placementContext \u003d null;\n    if (placementManager !\u003d null) {\n      try {\n        placementContext \u003d placementManager.placeApplication(context, user);\n      } catch (YarnException e) {\n        // Placement could also fail if the user doesn\u0027t exist in system\n        // skip if the user is not found during recovery.\n        if (isRecovery) {\n          LOG.warn(\"PlaceApplication failed,skipping on recovery of rm\");\n          return placementContext;\n        }\n        throw e;\n      }\n    }\n    if (placementContext \u003d\u003d null \u0026\u0026 (context.getQueue() \u003d\u003d null) || context\n        .getQueue().isEmpty()) {\n      String msg \u003d \"Failed to place application \" + context.getApplicationId()\n          + \" to queue and specified \" + \"queue is invalid : \" + context\n          .getQueue();\n      LOG.error(msg);\n      throw new YarnException(msg);\n    }\n    return placementContext;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "f9f317b70209d20161d66a73ddea3334d2b92f96": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-7586. Application Placement should be done before ACL checks in ResourceManager. Contributed by Suma Shivaprasad.\n",
      "commitDate": "05/12/17 4:58 AM",
      "commitName": "f9f317b70209d20161d66a73ddea3334d2b92f96",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-7586. Application Placement should be done before ACL checks in ResourceManager. Contributed by Suma Shivaprasad.\n",
          "commitDate": "05/12/17 4:58 AM",
          "commitName": "f9f317b70209d20161d66a73ddea3334d2b92f96",
          "commitAuthor": "Sunil G",
          "commitDateOld": "04/12/17 9:30 PM",
          "commitNameOld": "9f1bdafedb60f83598819c6a682f659d6e168eb0",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.31,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,19 @@\n-  static ApplicationPlacementContext placeApplication(RMContext rmContext,\n+  ApplicationPlacementContext placeApplication(RMContext rmContext,\n       ApplicationSubmissionContext context, String user) throws YarnException {\n-\n     ApplicationPlacementContext placementContext \u003d null;\n     PlacementManager placementManager \u003d rmContext.getQueuePlacementManager();\n \n     if (placementManager !\u003d null) {\n       placementContext \u003d placementManager.placeApplication(context, user);\n     } else{\n-      LOG.error(\n-          \"Queue Placement Manager is null. Cannot place application :\" + \" \"\n-              + context.getApplicationId() + \" to queue \");\n+      if ( context.getQueue() \u003d\u003d null || context.getQueue().isEmpty()) {\n+        final String msg \u003d \"Queue Placement Manager is not set. Cannot place \"\n+            + \"application : \" + context.getApplicationId() + \" to queue and \"\n+            + \"specified queue is invalid \" + context.getQueue();\n+        LOG.error(msg);\n+        throw new YarnException(msg);\n+      }\n     }\n \n     return placementContext;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  ApplicationPlacementContext placeApplication(RMContext rmContext,\n      ApplicationSubmissionContext context, String user) throws YarnException {\n    ApplicationPlacementContext placementContext \u003d null;\n    PlacementManager placementManager \u003d rmContext.getQueuePlacementManager();\n\n    if (placementManager !\u003d null) {\n      placementContext \u003d placementManager.placeApplication(context, user);\n    } else{\n      if ( context.getQueue() \u003d\u003d null || context.getQueue().isEmpty()) {\n        final String msg \u003d \"Queue Placement Manager is not set. Cannot place \"\n            + \"application : \" + context.getApplicationId() + \" to queue and \"\n            + \"specified queue is invalid \" + context.getQueue();\n        LOG.error(msg);\n        throw new YarnException(msg);\n      }\n    }\n\n    return placementContext;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
            "oldMethodName": "placeApplication",
            "newMethodName": "placeApplication"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-7586. Application Placement should be done before ACL checks in ResourceManager. Contributed by Suma Shivaprasad.\n",
          "commitDate": "05/12/17 4:58 AM",
          "commitName": "f9f317b70209d20161d66a73ddea3334d2b92f96",
          "commitAuthor": "Sunil G",
          "commitDateOld": "04/12/17 9:30 PM",
          "commitNameOld": "9f1bdafedb60f83598819c6a682f659d6e168eb0",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.31,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,19 @@\n-  static ApplicationPlacementContext placeApplication(RMContext rmContext,\n+  ApplicationPlacementContext placeApplication(RMContext rmContext,\n       ApplicationSubmissionContext context, String user) throws YarnException {\n-\n     ApplicationPlacementContext placementContext \u003d null;\n     PlacementManager placementManager \u003d rmContext.getQueuePlacementManager();\n \n     if (placementManager !\u003d null) {\n       placementContext \u003d placementManager.placeApplication(context, user);\n     } else{\n-      LOG.error(\n-          \"Queue Placement Manager is null. Cannot place application :\" + \" \"\n-              + context.getApplicationId() + \" to queue \");\n+      if ( context.getQueue() \u003d\u003d null || context.getQueue().isEmpty()) {\n+        final String msg \u003d \"Queue Placement Manager is not set. Cannot place \"\n+            + \"application : \" + context.getApplicationId() + \" to queue and \"\n+            + \"specified queue is invalid \" + context.getQueue();\n+        LOG.error(msg);\n+        throw new YarnException(msg);\n+      }\n     }\n \n     return placementContext;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  ApplicationPlacementContext placeApplication(RMContext rmContext,\n      ApplicationSubmissionContext context, String user) throws YarnException {\n    ApplicationPlacementContext placementContext \u003d null;\n    PlacementManager placementManager \u003d rmContext.getQueuePlacementManager();\n\n    if (placementManager !\u003d null) {\n      placementContext \u003d placementManager.placeApplication(context, user);\n    } else{\n      if ( context.getQueue() \u003d\u003d null || context.getQueue().isEmpty()) {\n        final String msg \u003d \"Queue Placement Manager is not set. Cannot place \"\n            + \"application : \" + context.getApplicationId() + \" to queue and \"\n            + \"specified queue is invalid \" + context.getQueue();\n        LOG.error(msg);\n        throw new YarnException(msg);\n      }\n    }\n\n    return placementContext;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
          "extendedDetails": {
            "oldValue": "[static]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7586. Application Placement should be done before ACL checks in ResourceManager. Contributed by Suma Shivaprasad.\n",
          "commitDate": "05/12/17 4:58 AM",
          "commitName": "f9f317b70209d20161d66a73ddea3334d2b92f96",
          "commitAuthor": "Sunil G",
          "commitDateOld": "04/12/17 9:30 PM",
          "commitNameOld": "9f1bdafedb60f83598819c6a682f659d6e168eb0",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.31,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,19 @@\n-  static ApplicationPlacementContext placeApplication(RMContext rmContext,\n+  ApplicationPlacementContext placeApplication(RMContext rmContext,\n       ApplicationSubmissionContext context, String user) throws YarnException {\n-\n     ApplicationPlacementContext placementContext \u003d null;\n     PlacementManager placementManager \u003d rmContext.getQueuePlacementManager();\n \n     if (placementManager !\u003d null) {\n       placementContext \u003d placementManager.placeApplication(context, user);\n     } else{\n-      LOG.error(\n-          \"Queue Placement Manager is null. Cannot place application :\" + \" \"\n-              + context.getApplicationId() + \" to queue \");\n+      if ( context.getQueue() \u003d\u003d null || context.getQueue().isEmpty()) {\n+        final String msg \u003d \"Queue Placement Manager is not set. Cannot place \"\n+            + \"application : \" + context.getApplicationId() + \" to queue and \"\n+            + \"specified queue is invalid \" + context.getQueue();\n+        LOG.error(msg);\n+        throw new YarnException(msg);\n+      }\n     }\n \n     return placementContext;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  ApplicationPlacementContext placeApplication(RMContext rmContext,\n      ApplicationSubmissionContext context, String user) throws YarnException {\n    ApplicationPlacementContext placementContext \u003d null;\n    PlacementManager placementManager \u003d rmContext.getQueuePlacementManager();\n\n    if (placementManager !\u003d null) {\n      placementContext \u003d placementManager.placeApplication(context, user);\n    } else{\n      if ( context.getQueue() \u003d\u003d null || context.getQueue().isEmpty()) {\n        final String msg \u003d \"Queue Placement Manager is not set. Cannot place \"\n            + \"application : \" + context.getApplicationId() + \" to queue and \"\n            + \"specified queue is invalid \" + context.getQueue();\n        LOG.error(msg);\n        throw new YarnException(msg);\n      }\n    }\n\n    return placementContext;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)\n\nChange-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6\n",
      "commitDate": "16/11/17 11:25 AM",
      "commitName": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,16 @@\n+  static ApplicationPlacementContext placeApplication(RMContext rmContext,\n+      ApplicationSubmissionContext context, String user) throws YarnException {\n+\n+    ApplicationPlacementContext placementContext \u003d null;\n+    PlacementManager placementManager \u003d rmContext.getQueuePlacementManager();\n+\n+    if (placementManager !\u003d null) {\n+      placementContext \u003d placementManager.placeApplication(context, user);\n+    } else{\n+      LOG.error(\n+          \"Queue Placement Manager is null. Cannot place application :\" + \" \"\n+              + context.getApplicationId() + \" to queue \");\n+    }\n+\n+    return placementContext;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static ApplicationPlacementContext placeApplication(RMContext rmContext,\n      ApplicationSubmissionContext context, String user) throws YarnException {\n\n    ApplicationPlacementContext placementContext \u003d null;\n    PlacementManager placementManager \u003d rmContext.getQueuePlacementManager();\n\n    if (placementManager !\u003d null) {\n      placementContext \u003d placementManager.placeApplication(context, user);\n    } else{\n      LOG.error(\n          \"Queue Placement Manager is null. Cannot place application :\" + \" \"\n              + context.getApplicationId() + \" to queue \");\n    }\n\n    return placementContext;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java"
    }
  }
}