{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogsCLI.java",
  "functionName": "handle",
  "functionId": "handle___cr-ClientRequest(modifiers-final)",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
  "functionStartLine": 1542,
  "functionEndLine": 1567,
  "numCommitsSeen": 52,
  "timeTaken": 1181,
  "changeHistory": [
    "1a84c24b0cf6674fa755403971fa57d8e412b320"
  ],
  "changeHistoryShort": {
    "1a84c24b0cf6674fa755403971fa57d8e412b320": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1a84c24b0cf6674fa755403971fa57d8e412b320": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7174. Add retry logic in LogsCLI when fetch running application logs. Contributed by Xuan Gong.\n",
      "commitDate": "15/09/17 3:33 PM",
      "commitName": "1a84c24b0cf6674fa755403971fa57d8e412b320",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,26 @@\n+    public ClientResponse handle(final ClientRequest cr)\n+        throws ClientHandlerException {\n+      // Set up the retry operation\n+      ClientRetryOp jerseyRetryOp \u003d new ClientRetryOp() {\n+        @Override\n+        public Object run() {\n+          // Try pass the request, if fail, keep retrying\n+          return getNext().handle(cr);\n+        }\n+\n+        @Override\n+        public boolean shouldRetryOn(Exception e) {\n+          // Only retry on connection exceptions\n+          return (e instanceof ClientHandlerException)\n+              \u0026\u0026 (e.getCause() instanceof ConnectException ||\n+                  e.getCause() instanceof SocketTimeoutException ||\n+                  e.getCause() instanceof SocketException);\n+        }\n+      };\n+      try {\n+        return (ClientResponse) connectionRetry.retryOn(jerseyRetryOp);\n+      } catch (IOException e) {\n+        throw new ClientHandlerException(\"Jersey retry failed!\\nMessage: \"\n+              + e.getMessage());\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public ClientResponse handle(final ClientRequest cr)\n        throws ClientHandlerException {\n      // Set up the retry operation\n      ClientRetryOp jerseyRetryOp \u003d new ClientRetryOp() {\n        @Override\n        public Object run() {\n          // Try pass the request, if fail, keep retrying\n          return getNext().handle(cr);\n        }\n\n        @Override\n        public boolean shouldRetryOn(Exception e) {\n          // Only retry on connection exceptions\n          return (e instanceof ClientHandlerException)\n              \u0026\u0026 (e.getCause() instanceof ConnectException ||\n                  e.getCause() instanceof SocketTimeoutException ||\n                  e.getCause() instanceof SocketException);\n        }\n      };\n      try {\n        return (ClientResponse) connectionRetry.retryOn(jerseyRetryOp);\n      } catch (IOException e) {\n        throw new ClientHandlerException(\"Jersey retry failed!\\nMessage: \"\n              + e.getMessage());\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java"
    }
  }
}