{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeManager.java",
  "functionName": "createNodeLabelsProvider",
  "functionId": "createNodeLabelsProvider___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeManager.java",
  "functionStartLine": 209,
  "functionEndLine": 242,
  "numCommitsSeen": 111,
  "timeTaken": 3356,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "3b3b6efe2103244febfe6b4f61989e92bd7bb08a",
    "5acdde4744c131e05db7b4b5f7d684fed7608b99",
    "fc07464d1a48b0413da5e921614430e41263fdb7",
    "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "3b3b6efe2103244febfe6b4f61989e92bd7bb08a": "Ybodychange",
    "5acdde4744c131e05db7b4b5f7d684fed7608b99": "Ybodychange",
    "fc07464d1a48b0413da5e921614430e41263fdb7": "Ybodychange",
    "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "18/12/18 2:05 PM",
      "commitNameOld": "c7a5a4435ec3098c2765e8ef53b7771e0532ff61",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 87.05,
      "commitsBetweenForRepo": 669,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,34 @@\n   protected NodeLabelsProvider createNodeLabelsProvider(Configuration conf)\n       throws IOException {\n     NodeLabelsProvider provider \u003d null;\n     String providerString \u003d\n         conf.get(YarnConfiguration.NM_NODE_LABELS_PROVIDER_CONFIG, null);\n     if (providerString \u003d\u003d null || providerString.trim().length() \u003d\u003d 0) {\n       // Seems like Distributed Node Labels configuration is not enabled\n       return provider;\n     }\n     switch (providerString.trim().toLowerCase()) {\n     case YarnConfiguration.CONFIG_NODE_DESCRIPTOR_PROVIDER:\n       provider \u003d new ConfigurationNodeLabelsProvider();\n       break;\n     case YarnConfiguration.SCRIPT_NODE_DESCRIPTOR_PROVIDER:\n       provider \u003d new ScriptBasedNodeLabelsProvider();\n       break;\n     default:\n       try {\n         Class\u003c? extends NodeLabelsProvider\u003e labelsProviderClass \u003d\n             conf.getClass(YarnConfiguration.NM_NODE_LABELS_PROVIDER_CONFIG,\n                 null, NodeLabelsProvider.class);\n         provider \u003d labelsProviderClass.newInstance();\n       } catch (InstantiationException | IllegalAccessException\n           | RuntimeException e) {\n         LOG.error(\"Failed to create NodeLabelsProvider based on Configuration\",\n             e);\n         throw new IOException(\n             \"Failed to create NodeLabelsProvider : \" + e.getMessage(), e);\n       }\n     }\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Distributed Node Labels is enabled\"\n-          + \" with provider class as : \" + provider.getClass().toString());\n-    }\n+    LOG.debug(\"Distributed Node Labels is enabled\"\n+        + \" with provider class as : {}\", provider.getClass());\n     return provider;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected NodeLabelsProvider createNodeLabelsProvider(Configuration conf)\n      throws IOException {\n    NodeLabelsProvider provider \u003d null;\n    String providerString \u003d\n        conf.get(YarnConfiguration.NM_NODE_LABELS_PROVIDER_CONFIG, null);\n    if (providerString \u003d\u003d null || providerString.trim().length() \u003d\u003d 0) {\n      // Seems like Distributed Node Labels configuration is not enabled\n      return provider;\n    }\n    switch (providerString.trim().toLowerCase()) {\n    case YarnConfiguration.CONFIG_NODE_DESCRIPTOR_PROVIDER:\n      provider \u003d new ConfigurationNodeLabelsProvider();\n      break;\n    case YarnConfiguration.SCRIPT_NODE_DESCRIPTOR_PROVIDER:\n      provider \u003d new ScriptBasedNodeLabelsProvider();\n      break;\n    default:\n      try {\n        Class\u003c? extends NodeLabelsProvider\u003e labelsProviderClass \u003d\n            conf.getClass(YarnConfiguration.NM_NODE_LABELS_PROVIDER_CONFIG,\n                null, NodeLabelsProvider.class);\n        provider \u003d labelsProviderClass.newInstance();\n      } catch (InstantiationException | IllegalAccessException\n          | RuntimeException e) {\n        LOG.error(\"Failed to create NodeLabelsProvider based on Configuration\",\n            e);\n        throw new IOException(\n            \"Failed to create NodeLabelsProvider : \" + e.getMessage(), e);\n      }\n    }\n    LOG.debug(\"Distributed Node Labels is enabled\"\n        + \" with provider class as : {}\", provider.getClass());\n    return provider;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeManager.java",
      "extendedDetails": {}
    },
    "3b3b6efe2103244febfe6b4f61989e92bd7bb08a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7871. Node attributes reporting from NM to RM. Contributed by Weiwei Yang.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "3b3b6efe2103244febfe6b4f61989e92bd7bb08a",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "14/08/18 5:19 PM",
      "commitNameOld": "363bd16e314490e31758cc82de584e75cd8357cc",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 28.43,
      "commitsBetweenForRepo": 188,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   protected NodeLabelsProvider createNodeLabelsProvider(Configuration conf)\n       throws IOException {\n     NodeLabelsProvider provider \u003d null;\n     String providerString \u003d\n         conf.get(YarnConfiguration.NM_NODE_LABELS_PROVIDER_CONFIG, null);\n     if (providerString \u003d\u003d null || providerString.trim().length() \u003d\u003d 0) {\n       // Seems like Distributed Node Labels configuration is not enabled\n       return provider;\n     }\n     switch (providerString.trim().toLowerCase()) {\n-    case YarnConfiguration.CONFIG_NODE_LABELS_PROVIDER:\n+    case YarnConfiguration.CONFIG_NODE_DESCRIPTOR_PROVIDER:\n       provider \u003d new ConfigurationNodeLabelsProvider();\n       break;\n-    case YarnConfiguration.SCRIPT_NODE_LABELS_PROVIDER:\n+    case YarnConfiguration.SCRIPT_NODE_DESCRIPTOR_PROVIDER:\n       provider \u003d new ScriptBasedNodeLabelsProvider();\n       break;\n     default:\n       try {\n         Class\u003c? extends NodeLabelsProvider\u003e labelsProviderClass \u003d\n             conf.getClass(YarnConfiguration.NM_NODE_LABELS_PROVIDER_CONFIG,\n                 null, NodeLabelsProvider.class);\n         provider \u003d labelsProviderClass.newInstance();\n       } catch (InstantiationException | IllegalAccessException\n           | RuntimeException e) {\n         LOG.error(\"Failed to create NodeLabelsProvider based on Configuration\",\n             e);\n         throw new IOException(\n             \"Failed to create NodeLabelsProvider : \" + e.getMessage(), e);\n       }\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Distributed Node Labels is enabled\"\n           + \" with provider class as : \" + provider.getClass().toString());\n     }\n     return provider;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected NodeLabelsProvider createNodeLabelsProvider(Configuration conf)\n      throws IOException {\n    NodeLabelsProvider provider \u003d null;\n    String providerString \u003d\n        conf.get(YarnConfiguration.NM_NODE_LABELS_PROVIDER_CONFIG, null);\n    if (providerString \u003d\u003d null || providerString.trim().length() \u003d\u003d 0) {\n      // Seems like Distributed Node Labels configuration is not enabled\n      return provider;\n    }\n    switch (providerString.trim().toLowerCase()) {\n    case YarnConfiguration.CONFIG_NODE_DESCRIPTOR_PROVIDER:\n      provider \u003d new ConfigurationNodeLabelsProvider();\n      break;\n    case YarnConfiguration.SCRIPT_NODE_DESCRIPTOR_PROVIDER:\n      provider \u003d new ScriptBasedNodeLabelsProvider();\n      break;\n    default:\n      try {\n        Class\u003c? extends NodeLabelsProvider\u003e labelsProviderClass \u003d\n            conf.getClass(YarnConfiguration.NM_NODE_LABELS_PROVIDER_CONFIG,\n                null, NodeLabelsProvider.class);\n        provider \u003d labelsProviderClass.newInstance();\n      } catch (InstantiationException | IllegalAccessException\n          | RuntimeException e) {\n        LOG.error(\"Failed to create NodeLabelsProvider based on Configuration\",\n            e);\n        throw new IOException(\n            \"Failed to create NodeLabelsProvider : \" + e.getMessage(), e);\n      }\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Distributed Node Labels is enabled\"\n          + \" with provider class as : \" + provider.getClass().toString());\n    }\n    return provider;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeManager.java",
      "extendedDetails": {}
    },
    "5acdde4744c131e05db7b4b5f7d684fed7608b99": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2729. Support script based NodeLabelsProvider Interface in Distributed Node Label Configuration Setup. (Naganarasimha G R via rohithsharmaks)\n",
      "commitDate": "26/10/15 3:12 AM",
      "commitName": "5acdde4744c131e05db7b4b5f7d684fed7608b99",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "05/10/15 10:56 AM",
      "commitNameOld": "f1c19b9365cbac88e45a9eed516fbfc6c9aa9947",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 20.68,
      "commitsBetweenForRepo": 170,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,36 @@\n   protected NodeLabelsProvider createNodeLabelsProvider(Configuration conf)\n       throws IOException {\n     NodeLabelsProvider provider \u003d null;\n     String providerString \u003d\n         conf.get(YarnConfiguration.NM_NODE_LABELS_PROVIDER_CONFIG, null);\n     if (providerString \u003d\u003d null || providerString.trim().length() \u003d\u003d 0) {\n       // Seems like Distributed Node Labels configuration is not enabled\n       return provider;\n     }\n     switch (providerString.trim().toLowerCase()) {\n     case YarnConfiguration.CONFIG_NODE_LABELS_PROVIDER:\n       provider \u003d new ConfigurationNodeLabelsProvider();\n       break;\n+    case YarnConfiguration.SCRIPT_NODE_LABELS_PROVIDER:\n+      provider \u003d new ScriptBasedNodeLabelsProvider();\n+      break;\n     default:\n       try {\n         Class\u003c? extends NodeLabelsProvider\u003e labelsProviderClass \u003d\n-            conf.getClass(YarnConfiguration.NM_NODE_LABELS_PROVIDER_CONFIG, null,\n-                NodeLabelsProvider.class);\n+            conf.getClass(YarnConfiguration.NM_NODE_LABELS_PROVIDER_CONFIG,\n+                null, NodeLabelsProvider.class);\n         provider \u003d labelsProviderClass.newInstance();\n       } catch (InstantiationException | IllegalAccessException\n           | RuntimeException e) {\n         LOG.error(\"Failed to create NodeLabelsProvider based on Configuration\",\n             e);\n-        throw new IOException(\"Failed to create NodeLabelsProvider : \"\n-            + e.getMessage(), e);\n+        throw new IOException(\n+            \"Failed to create NodeLabelsProvider : \" + e.getMessage(), e);\n       }\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Distributed Node Labels is enabled\"\n           + \" with provider class as : \" + provider.getClass().toString());\n     }\n     return provider;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected NodeLabelsProvider createNodeLabelsProvider(Configuration conf)\n      throws IOException {\n    NodeLabelsProvider provider \u003d null;\n    String providerString \u003d\n        conf.get(YarnConfiguration.NM_NODE_LABELS_PROVIDER_CONFIG, null);\n    if (providerString \u003d\u003d null || providerString.trim().length() \u003d\u003d 0) {\n      // Seems like Distributed Node Labels configuration is not enabled\n      return provider;\n    }\n    switch (providerString.trim().toLowerCase()) {\n    case YarnConfiguration.CONFIG_NODE_LABELS_PROVIDER:\n      provider \u003d new ConfigurationNodeLabelsProvider();\n      break;\n    case YarnConfiguration.SCRIPT_NODE_LABELS_PROVIDER:\n      provider \u003d new ScriptBasedNodeLabelsProvider();\n      break;\n    default:\n      try {\n        Class\u003c? extends NodeLabelsProvider\u003e labelsProviderClass \u003d\n            conf.getClass(YarnConfiguration.NM_NODE_LABELS_PROVIDER_CONFIG,\n                null, NodeLabelsProvider.class);\n        provider \u003d labelsProviderClass.newInstance();\n      } catch (InstantiationException | IllegalAccessException\n          | RuntimeException e) {\n        LOG.error(\"Failed to create NodeLabelsProvider based on Configuration\",\n            e);\n        throw new IOException(\n            \"Failed to create NodeLabelsProvider : \" + e.getMessage(), e);\n      }\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Distributed Node Labels is enabled\"\n          + \" with provider class as : \" + provider.getClass().toString());\n    }\n    return provider;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeManager.java",
      "extendedDetails": {}
    },
    "fc07464d1a48b0413da5e921614430e41263fdb7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2923. Support configuration based NodeLabelsProvider Service in Distributed Node Label Configuration Setup. (Naganarasimha G R)\n",
      "commitDate": "20/08/15 11:51 AM",
      "commitName": "fc07464d1a48b0413da5e921614430e41263fdb7",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/08/15 3:08 PM",
      "commitNameOld": "13604bd5f119fc81b9942190dfa366afad61bc92",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 3.86,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,33 @@\n-  protected NodeLabelsProvider createNodeLabelsProvider(\n-      Configuration conf) throws IOException {\n-    // TODO as part of YARN-2729\n-    // Need to get the implementation of provider service and return\n-    return null;\n+  protected NodeLabelsProvider createNodeLabelsProvider(Configuration conf)\n+      throws IOException {\n+    NodeLabelsProvider provider \u003d null;\n+    String providerString \u003d\n+        conf.get(YarnConfiguration.NM_NODE_LABELS_PROVIDER_CONFIG, null);\n+    if (providerString \u003d\u003d null || providerString.trim().length() \u003d\u003d 0) {\n+      // Seems like Distributed Node Labels configuration is not enabled\n+      return provider;\n+    }\n+    switch (providerString.trim().toLowerCase()) {\n+    case YarnConfiguration.CONFIG_NODE_LABELS_PROVIDER:\n+      provider \u003d new ConfigurationNodeLabelsProvider();\n+      break;\n+    default:\n+      try {\n+        Class\u003c? extends NodeLabelsProvider\u003e labelsProviderClass \u003d\n+            conf.getClass(YarnConfiguration.NM_NODE_LABELS_PROVIDER_CONFIG, null,\n+                NodeLabelsProvider.class);\n+        provider \u003d labelsProviderClass.newInstance();\n+      } catch (InstantiationException | IllegalAccessException\n+          | RuntimeException e) {\n+        LOG.error(\"Failed to create NodeLabelsProvider based on Configuration\",\n+            e);\n+        throw new IOException(\"Failed to create NodeLabelsProvider : \"\n+            + e.getMessage(), e);\n+      }\n+    }\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Distributed Node Labels is enabled\"\n+          + \" with provider class as : \" + provider.getClass().toString());\n+    }\n+    return provider;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected NodeLabelsProvider createNodeLabelsProvider(Configuration conf)\n      throws IOException {\n    NodeLabelsProvider provider \u003d null;\n    String providerString \u003d\n        conf.get(YarnConfiguration.NM_NODE_LABELS_PROVIDER_CONFIG, null);\n    if (providerString \u003d\u003d null || providerString.trim().length() \u003d\u003d 0) {\n      // Seems like Distributed Node Labels configuration is not enabled\n      return provider;\n    }\n    switch (providerString.trim().toLowerCase()) {\n    case YarnConfiguration.CONFIG_NODE_LABELS_PROVIDER:\n      provider \u003d new ConfigurationNodeLabelsProvider();\n      break;\n    default:\n      try {\n        Class\u003c? extends NodeLabelsProvider\u003e labelsProviderClass \u003d\n            conf.getClass(YarnConfiguration.NM_NODE_LABELS_PROVIDER_CONFIG, null,\n                NodeLabelsProvider.class);\n        provider \u003d labelsProviderClass.newInstance();\n      } catch (InstantiationException | IllegalAccessException\n          | RuntimeException e) {\n        LOG.error(\"Failed to create NodeLabelsProvider based on Configuration\",\n            e);\n        throw new IOException(\"Failed to create NodeLabelsProvider : \"\n            + e.getMessage(), e);\n      }\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Distributed Node Labels is enabled\"\n          + \" with provider class as : \" + provider.getClass().toString());\n    }\n    return provider;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeManager.java",
      "extendedDetails": {}
    },
    "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2495. Allow admin specify labels from each NM (Distributed configuration for node label). (Naganarasimha G R via wangda)\n",
      "commitDate": "30/03/15 12:05 PM",
      "commitName": "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,6 @@\n+  protected NodeLabelsProvider createNodeLabelsProvider(\n+      Configuration conf) throws IOException {\n+    // TODO as part of YARN-2729\n+    // Need to get the implementation of provider service and return\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected NodeLabelsProvider createNodeLabelsProvider(\n      Configuration conf) throws IOException {\n    // TODO as part of YARN-2729\n    // Need to get the implementation of provider service and return\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/NodeManager.java"
    }
  }
}