{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeQueueLoadMonitor.java",
  "functionName": "compare",
  "functionId": "compare___o1-ClusterNode__o2-ClusterNode",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/NodeQueueLoadMonitor.java",
  "functionStartLine": 71,
  "functionEndLine": 76,
  "numCommitsSeen": 13,
  "timeTaken": 2857,
  "changeHistory": [
    "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8",
    "f0ac18d001d97914a9ee810b1fab56c5cebff830",
    "341888a0aa23f24458b4e6e34868794b9735c06a"
  ],
  "changeHistoryShort": {
    "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8": "Ybodychange",
    "f0ac18d001d97914a9ee810b1fab56c5cebff830": "Ymultichange(Yfilerename,Ybodychange)",
    "341888a0aa23f24458b4e6e34868794b9735c06a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5938. Refactoring OpportunisticContainerAllocator to use SchedulerRequestKey instead of Priority and other misc fixes (asuresh)\n",
      "commitDate": "27/12/16 12:40 PM",
      "commitName": "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "23/11/16 9:53 AM",
      "commitNameOld": "005850b28feb2f7bb8c2844d11e3f9d21b45d754",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 34.12,
      "commitsBetweenForRepo": 181,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n     public int compare(ClusterNode o1, ClusterNode o2) {\n       if (getMetric(o1) \u003d\u003d getMetric(o2)) {\n-        return o1.timestamp \u003c o2.timestamp ? +1 : -1;\n+        return (int)(o2.timestamp - o1.timestamp);\n       }\n-      return getMetric(o1) \u003e getMetric(o2) ? +1 : -1;\n+      return getMetric(o1) - getMetric(o2);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public int compare(ClusterNode o1, ClusterNode o2) {\n      if (getMetric(o1) \u003d\u003d getMetric(o2)) {\n        return (int)(o2.timestamp - o1.timestamp);\n      }\n      return getMetric(o1) - getMetric(o2);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/NodeQueueLoadMonitor.java",
      "extendedDetails": {}
    },
    "f0ac18d001d97914a9ee810b1fab56c5cebff830": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "YARN-2888. Corrective mechanisms for rebalancing NM container queues. (asuresh)\n",
      "commitDate": "13/05/16 1:38 PM",
      "commitName": "f0ac18d001d97914a9ee810b1fab56c5cebff830",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-2888. Corrective mechanisms for rebalancing NM container queues. (asuresh)\n",
          "commitDate": "13/05/16 1:38 PM",
          "commitName": "f0ac18d001d97914a9ee810b1fab56c5cebff830",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "13/05/16 10:01 AM",
          "commitNameOld": "1f2794b4faf119a1ab66c8184ac84cec710d52a0",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n     public int compare(ClusterNode o1, ClusterNode o2) {\n-      if (getQuant(o1) \u003d\u003d getQuant(o2)) {\n+      if (getMetric(o1) \u003d\u003d getMetric(o2)) {\n         return o1.timestamp \u003c o2.timestamp ? +1 : -1;\n       }\n-      return getQuant(o1) \u003e getQuant(o2) ? +1 : -1;\n+      return getMetric(o1) \u003e getMetric(o2) ? +1 : -1;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public int compare(ClusterNode o1, ClusterNode o2) {\n      if (getMetric(o1) \u003d\u003d getMetric(o2)) {\n        return o1.timestamp \u003c o2.timestamp ? +1 : -1;\n      }\n      return getMetric(o1) \u003e getMetric(o2) ? +1 : -1;\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/NodeQueueLoadMonitor.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/TopKNodeSelector.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/NodeQueueLoadMonitor.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2888. Corrective mechanisms for rebalancing NM container queues. (asuresh)\n",
          "commitDate": "13/05/16 1:38 PM",
          "commitName": "f0ac18d001d97914a9ee810b1fab56c5cebff830",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "13/05/16 10:01 AM",
          "commitNameOld": "1f2794b4faf119a1ab66c8184ac84cec710d52a0",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n     public int compare(ClusterNode o1, ClusterNode o2) {\n-      if (getQuant(o1) \u003d\u003d getQuant(o2)) {\n+      if (getMetric(o1) \u003d\u003d getMetric(o2)) {\n         return o1.timestamp \u003c o2.timestamp ? +1 : -1;\n       }\n-      return getQuant(o1) \u003e getQuant(o2) ? +1 : -1;\n+      return getMetric(o1) \u003e getMetric(o2) ? +1 : -1;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public int compare(ClusterNode o1, ClusterNode o2) {\n      if (getMetric(o1) \u003d\u003d getMetric(o2)) {\n        return o1.timestamp \u003c o2.timestamp ? +1 : -1;\n      }\n      return getMetric(o1) \u003e getMetric(o2) ? +1 : -1;\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/NodeQueueLoadMonitor.java",
          "extendedDetails": {}
        }
      ]
    },
    "341888a0aa23f24458b4e6e34868794b9735c06a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4412. Create ClusterMonitor to compute ordered list of preferred NMs for OPPORTUNITIC containers. (asuresh)\n",
      "commitDate": "26/04/16 8:12 PM",
      "commitName": "341888a0aa23f24458b4e6e34868794b9735c06a",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,6 @@\n+    public int compare(ClusterNode o1, ClusterNode o2) {\n+      if (getQuant(o1) \u003d\u003d getQuant(o2)) {\n+        return o1.timestamp \u003c o2.timestamp ? +1 : -1;\n+      }\n+      return getQuant(o1) \u003e getQuant(o2) ? +1 : -1;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public int compare(ClusterNode o1, ClusterNode o2) {\n      if (getQuant(o1) \u003d\u003d getQuant(o2)) {\n        return o1.timestamp \u003c o2.timestamp ? +1 : -1;\n      }\n      return getQuant(o1) \u003e getQuant(o2) ? +1 : -1;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/TopKNodeSelector.java"
    }
  }
}