{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CommandWithDestination.java",
  "functionName": "processPathArgument",
  "functionId": "processPathArgument___src-PathData",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
  "functionStartLine": 241,
  "functionEndLine": 267,
  "numCommitsSeen": 34,
  "timeTaken": 1559,
  "changeHistory": [
    "3187dbd7a8b6376134a00e5c9c4693d8eb762c9d",
    "8f9661da4823bfbb243e430252ec1bb5780ecbfc",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99"
  ],
  "changeHistoryShort": {
    "3187dbd7a8b6376134a00e5c9c4693d8eb762c9d": "Ybodychange",
    "8f9661da4823bfbb243e430252ec1bb5780ecbfc": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3187dbd7a8b6376134a00e5c9c4693d8eb762c9d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9123. Copying from the root to a subdirectory should be forbidden. (Wei-Chiu Chuang via Yongjun Zhang)\n",
      "commitDate": "24/09/15 9:36 PM",
      "commitName": "3187dbd7a8b6376134a00e5c9c4693d8eb762c9d",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "08/09/15 6:41 AM",
      "commitNameOld": "090d26652c04916a1ede4ca55e7f2ca4fc5f6249",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 16.62,
      "commitsBetweenForRepo": 126,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,27 @@\n   protected void processPathArgument(PathData src)\n   throws IOException {\n     if (src.stat.isDirectory() \u0026\u0026 src.fs.equals(dst.fs)) {\n       PathData target \u003d getTargetPath(src);\n       String srcPath \u003d src.fs.makeQualified(src.path).toString();\n       String dstPath \u003d dst.fs.makeQualified(target.path).toString();\n       if (dstPath.equals(srcPath)) {\n         PathIOException e \u003d new PathIOException(src.toString(),\n             \"are identical\");\n         e.setTargetPath(dstPath.toString());\n         throw e;\n       }\n-      if (dstPath.startsWith(srcPath+Path.SEPARATOR)) {\n+      // When a path is normalized, all trailing slashes are removed\n+      // except for the root\n+      if(!srcPath.endsWith(Path.SEPARATOR)) {\n+        srcPath +\u003d Path.SEPARATOR;\n+      }\n+\n+      if(dstPath.startsWith(srcPath)) {\n         PathIOException e \u003d new PathIOException(src.toString(),\n             \"is a subdirectory of itself\");\n         e.setTargetPath(target.toString());\n         throw e;\n       }\n     }\n     super.processPathArgument(src);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processPathArgument(PathData src)\n  throws IOException {\n    if (src.stat.isDirectory() \u0026\u0026 src.fs.equals(dst.fs)) {\n      PathData target \u003d getTargetPath(src);\n      String srcPath \u003d src.fs.makeQualified(src.path).toString();\n      String dstPath \u003d dst.fs.makeQualified(target.path).toString();\n      if (dstPath.equals(srcPath)) {\n        PathIOException e \u003d new PathIOException(src.toString(),\n            \"are identical\");\n        e.setTargetPath(dstPath.toString());\n        throw e;\n      }\n      // When a path is normalized, all trailing slashes are removed\n      // except for the root\n      if(!srcPath.endsWith(Path.SEPARATOR)) {\n        srcPath +\u003d Path.SEPARATOR;\n      }\n\n      if(dstPath.startsWith(srcPath)) {\n        PathIOException e \u003d new PathIOException(src.toString(),\n            \"is a subdirectory of itself\");\n        e.setTargetPath(target.toString());\n        throw e;\n      }\n    }\n    super.processPathArgument(src);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
      "extendedDetails": {}
    },
    "8f9661da4823bfbb243e430252ec1bb5780ecbfc": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-7771. FsShell -copyToLocal, -get, etc. commands throw NPE if the destination directory does not exist.  Contributed by John George and Daryn Sharp\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195760 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/11 6:50 PM",
      "commitName": "8f9661da4823bfbb243e430252ec1bb5780ecbfc",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-7771. FsShell -copyToLocal, -get, etc. commands throw NPE if the destination directory does not exist.  Contributed by John George and Daryn Sharp\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195760 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/10/11 6:50 PM",
          "commitName": "8f9661da4823bfbb243e430252ec1bb5780ecbfc",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 68.07,
          "commitsBetweenForRepo": 517,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,21 @@\n-  protected void processPaths(PathData parent, PathData ... items)\n+  protected void processPathArgument(PathData src)\n   throws IOException {\n-    PathData savedDst \u003d dst;\n-    try {\n-      // modify dst as we descend to append the basename of the\n-      // current directory being processed\n-      if (parent !\u003d null) dst \u003d dst.getPathDataForChild(parent);\n-      super.processPaths(parent, items);\n-    } finally {\n-      dst \u003d savedDst;\n+    if (src.stat.isDirectory() \u0026\u0026 src.fs.equals(dst.fs)) {\n+      PathData target \u003d getTargetPath(src);\n+      String srcPath \u003d src.fs.makeQualified(src.path).toString();\n+      String dstPath \u003d dst.fs.makeQualified(target.path).toString();\n+      if (dstPath.equals(srcPath)) {\n+        PathIOException e \u003d new PathIOException(src.toString(),\n+            \"are identical\");\n+        e.setTargetPath(dstPath.toString());\n+        throw e;\n+      }\n+      if (dstPath.startsWith(srcPath+Path.SEPARATOR)) {\n+        PathIOException e \u003d new PathIOException(src.toString(),\n+            \"is a subdirectory of itself\");\n+        e.setTargetPath(target.toString());\n+        throw e;\n+      }\n     }\n+    super.processPathArgument(src);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void processPathArgument(PathData src)\n  throws IOException {\n    if (src.stat.isDirectory() \u0026\u0026 src.fs.equals(dst.fs)) {\n      PathData target \u003d getTargetPath(src);\n      String srcPath \u003d src.fs.makeQualified(src.path).toString();\n      String dstPath \u003d dst.fs.makeQualified(target.path).toString();\n      if (dstPath.equals(srcPath)) {\n        PathIOException e \u003d new PathIOException(src.toString(),\n            \"are identical\");\n        e.setTargetPath(dstPath.toString());\n        throw e;\n      }\n      if (dstPath.startsWith(srcPath+Path.SEPARATOR)) {\n        PathIOException e \u003d new PathIOException(src.toString(),\n            \"is a subdirectory of itself\");\n        e.setTargetPath(target.toString());\n        throw e;\n      }\n    }\n    super.processPathArgument(src);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
          "extendedDetails": {
            "oldValue": "processPaths",
            "newValue": "processPathArgument"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-7771. FsShell -copyToLocal, -get, etc. commands throw NPE if the destination directory does not exist.  Contributed by John George and Daryn Sharp\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195760 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/10/11 6:50 PM",
          "commitName": "8f9661da4823bfbb243e430252ec1bb5780ecbfc",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 68.07,
          "commitsBetweenForRepo": 517,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,21 @@\n-  protected void processPaths(PathData parent, PathData ... items)\n+  protected void processPathArgument(PathData src)\n   throws IOException {\n-    PathData savedDst \u003d dst;\n-    try {\n-      // modify dst as we descend to append the basename of the\n-      // current directory being processed\n-      if (parent !\u003d null) dst \u003d dst.getPathDataForChild(parent);\n-      super.processPaths(parent, items);\n-    } finally {\n-      dst \u003d savedDst;\n+    if (src.stat.isDirectory() \u0026\u0026 src.fs.equals(dst.fs)) {\n+      PathData target \u003d getTargetPath(src);\n+      String srcPath \u003d src.fs.makeQualified(src.path).toString();\n+      String dstPath \u003d dst.fs.makeQualified(target.path).toString();\n+      if (dstPath.equals(srcPath)) {\n+        PathIOException e \u003d new PathIOException(src.toString(),\n+            \"are identical\");\n+        e.setTargetPath(dstPath.toString());\n+        throw e;\n+      }\n+      if (dstPath.startsWith(srcPath+Path.SEPARATOR)) {\n+        PathIOException e \u003d new PathIOException(src.toString(),\n+            \"is a subdirectory of itself\");\n+        e.setTargetPath(target.toString());\n+        throw e;\n+      }\n     }\n+    super.processPathArgument(src);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void processPathArgument(PathData src)\n  throws IOException {\n    if (src.stat.isDirectory() \u0026\u0026 src.fs.equals(dst.fs)) {\n      PathData target \u003d getTargetPath(src);\n      String srcPath \u003d src.fs.makeQualified(src.path).toString();\n      String dstPath \u003d dst.fs.makeQualified(target.path).toString();\n      if (dstPath.equals(srcPath)) {\n        PathIOException e \u003d new PathIOException(src.toString(),\n            \"are identical\");\n        e.setTargetPath(dstPath.toString());\n        throw e;\n      }\n      if (dstPath.startsWith(srcPath+Path.SEPARATOR)) {\n        PathIOException e \u003d new PathIOException(src.toString(),\n            \"is a subdirectory of itself\");\n        e.setTargetPath(target.toString());\n        throw e;\n      }\n    }\n    super.processPathArgument(src);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
          "extendedDetails": {
            "oldValue": "[parent-PathData, items-PathData]",
            "newValue": "[src-PathData]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-7771. FsShell -copyToLocal, -get, etc. commands throw NPE if the destination directory does not exist.  Contributed by John George and Daryn Sharp\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195760 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/10/11 6:50 PM",
          "commitName": "8f9661da4823bfbb243e430252ec1bb5780ecbfc",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 68.07,
          "commitsBetweenForRepo": 517,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,21 @@\n-  protected void processPaths(PathData parent, PathData ... items)\n+  protected void processPathArgument(PathData src)\n   throws IOException {\n-    PathData savedDst \u003d dst;\n-    try {\n-      // modify dst as we descend to append the basename of the\n-      // current directory being processed\n-      if (parent !\u003d null) dst \u003d dst.getPathDataForChild(parent);\n-      super.processPaths(parent, items);\n-    } finally {\n-      dst \u003d savedDst;\n+    if (src.stat.isDirectory() \u0026\u0026 src.fs.equals(dst.fs)) {\n+      PathData target \u003d getTargetPath(src);\n+      String srcPath \u003d src.fs.makeQualified(src.path).toString();\n+      String dstPath \u003d dst.fs.makeQualified(target.path).toString();\n+      if (dstPath.equals(srcPath)) {\n+        PathIOException e \u003d new PathIOException(src.toString(),\n+            \"are identical\");\n+        e.setTargetPath(dstPath.toString());\n+        throw e;\n+      }\n+      if (dstPath.startsWith(srcPath+Path.SEPARATOR)) {\n+        PathIOException e \u003d new PathIOException(src.toString(),\n+            \"is a subdirectory of itself\");\n+        e.setTargetPath(target.toString());\n+        throw e;\n+      }\n     }\n+    super.processPathArgument(src);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void processPathArgument(PathData src)\n  throws IOException {\n    if (src.stat.isDirectory() \u0026\u0026 src.fs.equals(dst.fs)) {\n      PathData target \u003d getTargetPath(src);\n      String srcPath \u003d src.fs.makeQualified(src.path).toString();\n      String dstPath \u003d dst.fs.makeQualified(target.path).toString();\n      if (dstPath.equals(srcPath)) {\n        PathIOException e \u003d new PathIOException(src.toString(),\n            \"are identical\");\n        e.setTargetPath(dstPath.toString());\n        throw e;\n      }\n      if (dstPath.startsWith(srcPath+Path.SEPARATOR)) {\n        PathIOException e \u003d new PathIOException(src.toString(),\n            \"is a subdirectory of itself\");\n        e.setTargetPath(target.toString());\n        throw e;\n      }\n    }\n    super.processPathArgument(src);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void processPaths(PathData parent, PathData ... items)\n  throws IOException {\n    PathData savedDst \u003d dst;\n    try {\n      // modify dst as we descend to append the basename of the\n      // current directory being processed\n      if (parent !\u003d null) dst \u003d dst.getPathDataForChild(parent);\n      super.processPaths(parent, items);\n    } finally {\n      dst \u003d savedDst;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void processPaths(PathData parent, PathData ... items)\n  throws IOException {\n    PathData savedDst \u003d dst;\n    try {\n      // modify dst as we descend to append the basename of the\n      // current directory being processed\n      if (parent !\u003d null) dst \u003d dst.getPathDataForChild(parent);\n      super.processPaths(parent, items);\n    } finally {\n      dst \u003d savedDst;\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void processPaths(PathData parent, PathData ... items)\n  throws IOException {\n    PathData savedDst \u003d dst;\n    try {\n      // modify dst as we descend to append the basename of the\n      // current directory being processed\n      if (parent !\u003d null) dst \u003d dst.getPathDataForChild(parent);\n      super.processPaths(parent, items);\n    } finally {\n      dst \u003d savedDst;\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/shell/CommandWithDestination.java"
      }
    },
    "77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7320. Refactor the copy and move commands to conform to new FsCommand class. Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1127591 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/05/11 10:29 AM",
      "commitName": "77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,12 @@\n+  protected void processPaths(PathData parent, PathData ... items)\n+  throws IOException {\n+    PathData savedDst \u003d dst;\n+    try {\n+      // modify dst as we descend to append the basename of the\n+      // current directory being processed\n+      if (parent !\u003d null) dst \u003d dst.getPathDataForChild(parent);\n+      super.processPaths(parent, items);\n+    } finally {\n+      dst \u003d savedDst;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processPaths(PathData parent, PathData ... items)\n  throws IOException {\n    PathData savedDst \u003d dst;\n    try {\n      // modify dst as we descend to append the basename of the\n      // current directory being processed\n      if (parent !\u003d null) dst \u003d dst.getPathDataForChild(parent);\n      super.processPaths(parent, items);\n    } finally {\n      dst \u003d savedDst;\n    }\n  }",
      "path": "src/java/org/apache/hadoop/fs/shell/CommandWithDestination.java"
    }
  }
}