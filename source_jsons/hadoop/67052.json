{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StatePool.java",
  "functionName": "read",
  "functionId": "read___in-DataInput",
  "sourceFilePath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/state/StatePool.java",
  "functionStartLine": 208,
  "functionEndLine": 223,
  "numCommitsSeen": 5,
  "timeTaken": 1675,
  "changeHistory": [
    "82665a7887a4bbb3afbc257bec31089173f3a969",
    "2cc841f16ec9aa5336495fc20ee781a1276fddc5",
    "10325d97329c214bb3899c8535df5a366bc86d2f",
    "a238f931ea7dce0ca620d1798156c84ff77097ff"
  ],
  "changeHistoryShort": {
    "82665a7887a4bbb3afbc257bec31089173f3a969": "Ybodychange",
    "2cc841f16ec9aa5336495fc20ee781a1276fddc5": "Ybodychange",
    "10325d97329c214bb3899c8535df5a366bc86d2f": "Yfilerename",
    "a238f931ea7dce0ca620d1798156c84ff77097ff": "Yintroduced"
  },
  "changeHistoryDetails": {
    "82665a7887a4bbb3afbc257bec31089173f3a969": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15299. Bump Jackson 2 version to Jackson 2.9.x.\n",
      "commitDate": "26/03/18 1:05 PM",
      "commitName": "82665a7887a4bbb3afbc257bec31089173f3a969",
      "commitAuthor": "Sean Mackrory",
      "commitDateOld": "15/11/16 10:57 AM",
      "commitNameOld": "5af572b6443715b7a741296c1bd520a1840f9a7c",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 496.05,
      "commitsBetweenForRepo": 3268,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private void read(DataInput in) throws IOException {\n     ObjectMapper mapper \u003d new ObjectMapper();\n     // define a module\n     SimpleModule module \u003d new SimpleModule(\"State Serializer\",  \n         new Version(0, 1, 1, \"FINAL\", \"\", \"\"));\n     // add the state deserializer\n     module.addDeserializer(StatePair.class, new StateDeserializer());\n \n     // register the module with the object-mapper\n     mapper.registerModule(module);\n \n-    JsonParser parser \u003d mapper.getFactory().createParser((DataInputStream)in);\n+    JsonParser parser \u003d mapper.getFactory().createParser((InputStream)in);\n     StatePool statePool \u003d mapper.readValue(parser, StatePool.class);\n     this.setStates(statePool.getStates());\n     parser.close();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void read(DataInput in) throws IOException {\n    ObjectMapper mapper \u003d new ObjectMapper();\n    // define a module\n    SimpleModule module \u003d new SimpleModule(\"State Serializer\",  \n        new Version(0, 1, 1, \"FINAL\", \"\", \"\"));\n    // add the state deserializer\n    module.addDeserializer(StatePair.class, new StateDeserializer());\n\n    // register the module with the object-mapper\n    mapper.registerModule(module);\n\n    JsonParser parser \u003d mapper.getFactory().createParser((InputStream)in);\n    StatePool statePool \u003d mapper.readValue(parser, StatePool.class);\n    this.setStates(statePool.getStates());\n    parser.close();\n  }",
      "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/state/StatePool.java",
      "extendedDetails": {}
    },
    "2cc841f16ec9aa5336495fc20ee781a1276fddc5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13678 Update jackson from 1.9.13 to 2.x in hadoop-tools. Contributed by Akira Ajisaka.\n",
      "commitDate": "06/10/16 8:31 AM",
      "commitName": "2cc841f16ec9aa5336495fc20ee781a1276fddc5",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "18/01/12 2:10 PM",
      "commitNameOld": "10325d97329c214bb3899c8535df5a366bc86d2f",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 1722.72,
      "commitsBetweenForRepo": 12174,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,16 @@\n   private void read(DataInput in) throws IOException {\n     ObjectMapper mapper \u003d new ObjectMapper();\n-    mapper.configure(\n-        DeserializationConfig.Feature.CAN_OVERRIDE_ACCESS_MODIFIERS, true);\n-    \n     // define a module\n     SimpleModule module \u003d new SimpleModule(\"State Serializer\",  \n-        new Version(0, 1, 1, \"FINAL\"));\n+        new Version(0, 1, 1, \"FINAL\", \"\", \"\"));\n     // add the state deserializer\n     module.addDeserializer(StatePair.class, new StateDeserializer());\n \n     // register the module with the object-mapper\n     mapper.registerModule(module);\n \n-    JsonParser parser \u003d \n-      mapper.getJsonFactory().createJsonParser((DataInputStream)in);\n+    JsonParser parser \u003d mapper.getFactory().createParser((DataInputStream)in);\n     StatePool statePool \u003d mapper.readValue(parser, StatePool.class);\n     this.setStates(statePool.getStates());\n     parser.close();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void read(DataInput in) throws IOException {\n    ObjectMapper mapper \u003d new ObjectMapper();\n    // define a module\n    SimpleModule module \u003d new SimpleModule(\"State Serializer\",  \n        new Version(0, 1, 1, \"FINAL\", \"\", \"\"));\n    // add the state deserializer\n    module.addDeserializer(StatePair.class, new StateDeserializer());\n\n    // register the module with the object-mapper\n    mapper.registerModule(module);\n\n    JsonParser parser \u003d mapper.getFactory().createParser((DataInputStream)in);\n    StatePool statePool \u003d mapper.readValue(parser, StatePool.class);\n    this.setStates(statePool.getStates());\n    parser.close();\n  }",
      "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/state/StatePool.java",
      "extendedDetails": {}
    },
    "10325d97329c214bb3899c8535df5a366bc86d2f": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3582. Move successfully passing MR1 tests to MR2 maven tree.(ahmed via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233090 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/01/12 2:10 PM",
      "commitName": "10325d97329c214bb3899c8535df5a366bc86d2f",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/01/12 10:20 AM",
      "commitNameOld": "8b2f6909ec7df5cffb5ef417f5c9cffdee43e38a",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void read(DataInput in) throws IOException {\n    ObjectMapper mapper \u003d new ObjectMapper();\n    mapper.configure(\n        DeserializationConfig.Feature.CAN_OVERRIDE_ACCESS_MODIFIERS, true);\n    \n    // define a module\n    SimpleModule module \u003d new SimpleModule(\"State Serializer\",  \n        new Version(0, 1, 1, \"FINAL\"));\n    // add the state deserializer\n    module.addDeserializer(StatePair.class, new StateDeserializer());\n\n    // register the module with the object-mapper\n    mapper.registerModule(module);\n\n    JsonParser parser \u003d \n      mapper.getJsonFactory().createJsonParser((DataInputStream)in);\n    StatePool statePool \u003d mapper.readValue(parser, StatePool.class);\n    this.setStates(statePool.getStates());\n    parser.close();\n  }",
      "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/state/StatePool.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/state/StatePool.java",
        "newPath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/state/StatePool.java"
      }
    },
    "a238f931ea7dce0ca620d1798156c84ff77097ff": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-778. Rumen Anonymizer. (Amar Kamat and Chris Douglas via amarrk)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1215141 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/12/11 6:20 AM",
      "commitName": "a238f931ea7dce0ca620d1798156c84ff77097ff",
      "commitAuthor": "Amar Kamat",
      "diff": "@@ -0,0 +1,20 @@\n+  private void read(DataInput in) throws IOException {\n+    ObjectMapper mapper \u003d new ObjectMapper();\n+    mapper.configure(\n+        DeserializationConfig.Feature.CAN_OVERRIDE_ACCESS_MODIFIERS, true);\n+    \n+    // define a module\n+    SimpleModule module \u003d new SimpleModule(\"State Serializer\",  \n+        new Version(0, 1, 1, \"FINAL\"));\n+    // add the state deserializer\n+    module.addDeserializer(StatePair.class, new StateDeserializer());\n+\n+    // register the module with the object-mapper\n+    mapper.registerModule(module);\n+\n+    JsonParser parser \u003d \n+      mapper.getJsonFactory().createJsonParser((DataInputStream)in);\n+    StatePool statePool \u003d mapper.readValue(parser, StatePool.class);\n+    this.setStates(statePool.getStates());\n+    parser.close();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void read(DataInput in) throws IOException {\n    ObjectMapper mapper \u003d new ObjectMapper();\n    mapper.configure(\n        DeserializationConfig.Feature.CAN_OVERRIDE_ACCESS_MODIFIERS, true);\n    \n    // define a module\n    SimpleModule module \u003d new SimpleModule(\"State Serializer\",  \n        new Version(0, 1, 1, \"FINAL\"));\n    // add the state deserializer\n    module.addDeserializer(StatePair.class, new StateDeserializer());\n\n    // register the module with the object-mapper\n    mapper.registerModule(module);\n\n    JsonParser parser \u003d \n      mapper.getJsonFactory().createJsonParser((DataInputStream)in);\n    StatePool statePool \u003d mapper.readValue(parser, StatePool.class);\n    this.setStates(statePool.getStates());\n    parser.close();\n  }",
      "path": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/state/StatePool.java"
    }
  }
}