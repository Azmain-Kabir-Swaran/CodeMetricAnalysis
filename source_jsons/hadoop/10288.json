{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReplicaBuilder.java",
  "functionName": "buildFinalizedReplica",
  "functionId": "buildFinalizedReplica",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaBuilder.java",
  "functionStartLine": 258,
  "functionEndLine": 274,
  "numCommitsSeen": 7,
  "timeTaken": 2537,
  "changeHistory": [
    "2021f4bdce3b27c46edaad198f0007a26a8a1391",
    "b668eb91556b8c85c2b4925808ccb1f769031c20",
    "86c9862bec0248d671e657aa56094a2919b8ac14"
  ],
  "changeHistoryShort": {
    "2021f4bdce3b27c46edaad198f0007a26a8a1391": "Ybodychange",
    "b668eb91556b8c85c2b4925808ccb1f769031c20": "Yreturntypechange",
    "86c9862bec0248d671e657aa56094a2919b8ac14": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2021f4bdce3b27c46edaad198f0007a26a8a1391": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11187. Optimize disk access for last partial chunk checksum of Finalized replica. Contributed by Wei-Chiu Chuang.\n",
      "commitDate": "02/02/18 5:18 PM",
      "commitName": "2021f4bdce3b27c46edaad198f0007a26a8a1391",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "4531588a94dcd2b4141b12828cb60ca3b953a58c",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 48.98,
      "commitsBetweenForRepo": 262,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   private LocalReplica buildFinalizedReplica() throws IllegalArgumentException {\n     if (null !\u003d fromReplica \u0026\u0026\n         fromReplica.getState() \u003d\u003d ReplicaState.FINALIZED) {\n       return new FinalizedReplica((FinalizedReplica)fromReplica);\n     } else if (null !\u003d this.fromReplica) {\n       throw new IllegalArgumentException(\"Incompatible fromReplica \"\n           + \"state: \" + fromReplica.getState());\n     } else {\n       if (null !\u003d block) {\n-        return new FinalizedReplica(block, volume, directoryUsed);\n+        return new FinalizedReplica(block, volume, directoryUsed,\n+            lastPartialChunkChecksum);\n       } else {\n         return new FinalizedReplica(blockId, length, genStamp, volume,\n-            directoryUsed);\n+            directoryUsed, lastPartialChunkChecksum);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private LocalReplica buildFinalizedReplica() throws IllegalArgumentException {\n    if (null !\u003d fromReplica \u0026\u0026\n        fromReplica.getState() \u003d\u003d ReplicaState.FINALIZED) {\n      return new FinalizedReplica((FinalizedReplica)fromReplica);\n    } else if (null !\u003d this.fromReplica) {\n      throw new IllegalArgumentException(\"Incompatible fromReplica \"\n          + \"state: \" + fromReplica.getState());\n    } else {\n      if (null !\u003d block) {\n        return new FinalizedReplica(block, volume, directoryUsed,\n            lastPartialChunkChecksum);\n      } else {\n        return new FinalizedReplica(blockId, length, genStamp, volume,\n            directoryUsed, lastPartialChunkChecksum);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaBuilder.java",
      "extendedDetails": {}
    },
    "b668eb91556b8c85c2b4925808ccb1f769031c20": {
      "type": "Yreturntypechange",
      "commitMessage": "HDFS-10675. Datanode support to read from external stores.\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "b668eb91556b8c85c2b4925808ccb1f769031c20",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "13/09/16 12:54 PM",
      "commitNameOld": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 458.25,
      "commitsBetweenForRepo": 3031,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n-  private ReplicaInfo buildFinalizedReplica() throws IllegalArgumentException {\n+  private LocalReplica buildFinalizedReplica() throws IllegalArgumentException {\n     if (null !\u003d fromReplica \u0026\u0026\n         fromReplica.getState() \u003d\u003d ReplicaState.FINALIZED) {\n       return new FinalizedReplica((FinalizedReplica)fromReplica);\n     } else if (null !\u003d this.fromReplica) {\n       throw new IllegalArgumentException(\"Incompatible fromReplica \"\n           + \"state: \" + fromReplica.getState());\n     } else {\n       if (null !\u003d block) {\n         return new FinalizedReplica(block, volume, directoryUsed);\n       } else {\n         return new FinalizedReplica(blockId, length, genStamp, volume,\n             directoryUsed);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private LocalReplica buildFinalizedReplica() throws IllegalArgumentException {\n    if (null !\u003d fromReplica \u0026\u0026\n        fromReplica.getState() \u003d\u003d ReplicaState.FINALIZED) {\n      return new FinalizedReplica((FinalizedReplica)fromReplica);\n    } else if (null !\u003d this.fromReplica) {\n      throw new IllegalArgumentException(\"Incompatible fromReplica \"\n          + \"state: \" + fromReplica.getState());\n    } else {\n      if (null !\u003d block) {\n        return new FinalizedReplica(block, volume, directoryUsed);\n      } else {\n        return new FinalizedReplica(blockId, length, genStamp, volume,\n            directoryUsed);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaBuilder.java",
      "extendedDetails": {
        "oldValue": "ReplicaInfo",
        "newValue": "LocalReplica"
      }
    },
    "86c9862bec0248d671e657aa56094a2919b8ac14": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "13/09/16 12:54 PM",
      "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthor": "Lei Xu",
      "diff": "@@ -0,0 +1,16 @@\n+  private ReplicaInfo buildFinalizedReplica() throws IllegalArgumentException {\n+    if (null !\u003d fromReplica \u0026\u0026\n+        fromReplica.getState() \u003d\u003d ReplicaState.FINALIZED) {\n+      return new FinalizedReplica((FinalizedReplica)fromReplica);\n+    } else if (null !\u003d this.fromReplica) {\n+      throw new IllegalArgumentException(\"Incompatible fromReplica \"\n+          + \"state: \" + fromReplica.getState());\n+    } else {\n+      if (null !\u003d block) {\n+        return new FinalizedReplica(block, volume, directoryUsed);\n+      } else {\n+        return new FinalizedReplica(blockId, length, genStamp, volume,\n+            directoryUsed);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private ReplicaInfo buildFinalizedReplica() throws IllegalArgumentException {\n    if (null !\u003d fromReplica \u0026\u0026\n        fromReplica.getState() \u003d\u003d ReplicaState.FINALIZED) {\n      return new FinalizedReplica((FinalizedReplica)fromReplica);\n    } else if (null !\u003d this.fromReplica) {\n      throw new IllegalArgumentException(\"Incompatible fromReplica \"\n          + \"state: \" + fromReplica.getState());\n    } else {\n      if (null !\u003d block) {\n        return new FinalizedReplica(block, volume, directoryUsed);\n      } else {\n        return new FinalizedReplica(blockId, length, genStamp, volume,\n            directoryUsed);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaBuilder.java"
    }
  }
}