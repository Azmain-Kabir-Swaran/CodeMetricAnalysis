{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKDelegationTokenSecretManager.java",
  "functionName": "stopThreads",
  "functionId": "stopThreads",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java",
  "functionStartLine": 497,
  "functionEndLine": 548,
  "numCommitsSeen": 16,
  "timeTaken": 1800,
  "changeHistory": [
    "bd8196e85e49d44de57237a59bcd7ceae4332c2e",
    "db45f047ab6b19d8a3e7752bb2cde10827cd8dad",
    "70719e5c62f32836914bea88e1ddd99c0ed009e1",
    "db890eef3208cc557476fa510f7a253ba22bc68a"
  ],
  "changeHistoryShort": {
    "bd8196e85e49d44de57237a59bcd7ceae4332c2e": "Ybodychange",
    "db45f047ab6b19d8a3e7752bb2cde10827cd8dad": "Ymultichange(Ymodifierchange,Ybodychange)",
    "70719e5c62f32836914bea88e1ddd99c0ed009e1": "Ymodifierchange",
    "db890eef3208cc557476fa510f7a253ba22bc68a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bd8196e85e49d44de57237a59bcd7ceae4332c2e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11157. ZKDelegationTokenSecretManager never shuts down listenerThreadPool. Contributed by Arun Suresh.\n",
      "commitDate": "17/11/14 1:02 PM",
      "commitName": "bd8196e85e49d44de57237a59bcd7ceae4332c2e",
      "commitAuthor": "Aaron T. Myers",
      "commitDateOld": "05/11/14 5:47 PM",
      "commitNameOld": "8a261e68e4177b47be01ceae7310ea56aeb7ca38",
      "commitAuthorOld": "Aaron T. Myers",
      "daysBetweenCommits": 11.8,
      "commitsBetweenForRepo": 105,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,52 @@\n   public void stopThreads() {\n+    super.stopThreads();\n     try {\n-      if (!isExternalClient \u0026\u0026 (zkClient !\u003d null)) {\n-        zkClient.close();\n-      }\n-      if (delTokSeqCounter !\u003d null) {\n-        delTokSeqCounter.close();\n-      }\n-      if (keyIdSeqCounter !\u003d null) {\n-        keyIdSeqCounter.close();\n-      }\n-      if (keyCache !\u003d null) {\n-        keyCache.close();\n-      }\n       if (tokenCache !\u003d null) {\n         tokenCache.close();\n       }\n     } catch (Exception e) {\n-      LOG.error(\"Could not stop Curator Framework\", e);\n-      // Ignore\n+      LOG.error(\"Could not stop Delegation Token Cache\", e);\n     }\n-    super.stopThreads();\n+    try {\n+      if (delTokSeqCounter !\u003d null) {\n+        delTokSeqCounter.close();\n+      }\n+    } catch (Exception e) {\n+      LOG.error(\"Could not stop Delegation Token Counter\", e);\n+    }\n+    try {\n+      if (keyIdSeqCounter !\u003d null) {\n+        keyIdSeqCounter.close();\n+      }\n+    } catch (Exception e) {\n+      LOG.error(\"Could not stop Key Id Counter\", e);\n+    }\n+    try {\n+      if (keyCache !\u003d null) {\n+        keyCache.close();\n+      }\n+    } catch (Exception e) {\n+      LOG.error(\"Could not stop KeyCache\", e);\n+    }\n+    try {\n+      if (!isExternalClient \u0026\u0026 (zkClient !\u003d null)) {\n+        zkClient.close();\n+      }\n+    } catch (Exception e) {\n+      LOG.error(\"Could not stop Curator Framework\", e);\n+    }\n+    if (listenerThreadPool !\u003d null) {\n+      listenerThreadPool.shutdown();\n+      try {\n+        // wait for existing tasks to terminate\n+        if (!listenerThreadPool.awaitTermination(shutdownTimeout,\n+            TimeUnit.MILLISECONDS)) {\n+          LOG.error(\"Forcing Listener threadPool to shutdown !!\");\n+          listenerThreadPool.shutdownNow();\n+        }\n+      } catch (InterruptedException ie) {\n+        listenerThreadPool.shutdownNow();\n+        Thread.currentThread().interrupt();\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stopThreads() {\n    super.stopThreads();\n    try {\n      if (tokenCache !\u003d null) {\n        tokenCache.close();\n      }\n    } catch (Exception e) {\n      LOG.error(\"Could not stop Delegation Token Cache\", e);\n    }\n    try {\n      if (delTokSeqCounter !\u003d null) {\n        delTokSeqCounter.close();\n      }\n    } catch (Exception e) {\n      LOG.error(\"Could not stop Delegation Token Counter\", e);\n    }\n    try {\n      if (keyIdSeqCounter !\u003d null) {\n        keyIdSeqCounter.close();\n      }\n    } catch (Exception e) {\n      LOG.error(\"Could not stop Key Id Counter\", e);\n    }\n    try {\n      if (keyCache !\u003d null) {\n        keyCache.close();\n      }\n    } catch (Exception e) {\n      LOG.error(\"Could not stop KeyCache\", e);\n    }\n    try {\n      if (!isExternalClient \u0026\u0026 (zkClient !\u003d null)) {\n        zkClient.close();\n      }\n    } catch (Exception e) {\n      LOG.error(\"Could not stop Curator Framework\", e);\n    }\n    if (listenerThreadPool !\u003d null) {\n      listenerThreadPool.shutdown();\n      try {\n        // wait for existing tasks to terminate\n        if (!listenerThreadPool.awaitTermination(shutdownTimeout,\n            TimeUnit.MILLISECONDS)) {\n          LOG.error(\"Forcing Listener threadPool to shutdown !!\");\n          listenerThreadPool.shutdownNow();\n        }\n      } catch (InterruptedException ie) {\n        listenerThreadPool.shutdownNow();\n        Thread.currentThread().interrupt();\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "db45f047ab6b19d8a3e7752bb2cde10827cd8dad": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-11170. ZKDelegationTokenSecretManager fails to renewToken created by a peer. (Arun Suresh and Gregory Chanan via kasha)\n",
      "commitDate": "23/10/14 5:04 PM",
      "commitName": "db45f047ab6b19d8a3e7752bb2cde10827cd8dad",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-11170. ZKDelegationTokenSecretManager fails to renewToken created by a peer. (Arun Suresh and Gregory Chanan via kasha)\n",
          "commitDate": "23/10/14 5:04 PM",
          "commitName": "db45f047ab6b19d8a3e7752bb2cde10827cd8dad",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "22/10/14 2:26 PM",
          "commitNameOld": "70719e5c62f32836914bea88e1ddd99c0ed009e1",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 1.11,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,23 @@\n-  public synchronized void stopThreads() {\n+  public void stopThreads() {\n     try {\n       if (!isExternalClient \u0026\u0026 (zkClient !\u003d null)) {\n         zkClient.close();\n       }\n-      if (seqCounter !\u003d null) {\n-        seqCounter.close();\n+      if (delTokSeqCounter !\u003d null) {\n+        delTokSeqCounter.close();\n+      }\n+      if (keyIdSeqCounter !\u003d null) {\n+        keyIdSeqCounter.close();\n       }\n       if (keyCache !\u003d null) {\n         keyCache.close();\n       }\n       if (tokenCache !\u003d null) {\n         tokenCache.close();\n       }\n     } catch (Exception e) {\n       LOG.error(\"Could not stop Curator Framework\", e);\n       // Ignore\n     }\n     super.stopThreads();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void stopThreads() {\n    try {\n      if (!isExternalClient \u0026\u0026 (zkClient !\u003d null)) {\n        zkClient.close();\n      }\n      if (delTokSeqCounter !\u003d null) {\n        delTokSeqCounter.close();\n      }\n      if (keyIdSeqCounter !\u003d null) {\n        keyIdSeqCounter.close();\n      }\n      if (keyCache !\u003d null) {\n        keyCache.close();\n      }\n      if (tokenCache !\u003d null) {\n        tokenCache.close();\n      }\n    } catch (Exception e) {\n      LOG.error(\"Could not stop Curator Framework\", e);\n      // Ignore\n    }\n    super.stopThreads();\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-11170. ZKDelegationTokenSecretManager fails to renewToken created by a peer. (Arun Suresh and Gregory Chanan via kasha)\n",
          "commitDate": "23/10/14 5:04 PM",
          "commitName": "db45f047ab6b19d8a3e7752bb2cde10827cd8dad",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "22/10/14 2:26 PM",
          "commitNameOld": "70719e5c62f32836914bea88e1ddd99c0ed009e1",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 1.11,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,23 @@\n-  public synchronized void stopThreads() {\n+  public void stopThreads() {\n     try {\n       if (!isExternalClient \u0026\u0026 (zkClient !\u003d null)) {\n         zkClient.close();\n       }\n-      if (seqCounter !\u003d null) {\n-        seqCounter.close();\n+      if (delTokSeqCounter !\u003d null) {\n+        delTokSeqCounter.close();\n+      }\n+      if (keyIdSeqCounter !\u003d null) {\n+        keyIdSeqCounter.close();\n       }\n       if (keyCache !\u003d null) {\n         keyCache.close();\n       }\n       if (tokenCache !\u003d null) {\n         tokenCache.close();\n       }\n     } catch (Exception e) {\n       LOG.error(\"Could not stop Curator Framework\", e);\n       // Ignore\n     }\n     super.stopThreads();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void stopThreads() {\n    try {\n      if (!isExternalClient \u0026\u0026 (zkClient !\u003d null)) {\n        zkClient.close();\n      }\n      if (delTokSeqCounter !\u003d null) {\n        delTokSeqCounter.close();\n      }\n      if (keyIdSeqCounter !\u003d null) {\n        keyIdSeqCounter.close();\n      }\n      if (keyCache !\u003d null) {\n        keyCache.close();\n      }\n      if (tokenCache !\u003d null) {\n        tokenCache.close();\n      }\n    } catch (Exception e) {\n      LOG.error(\"Could not stop Curator Framework\", e);\n      // Ignore\n    }\n    super.stopThreads();\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "70719e5c62f32836914bea88e1ddd99c0ed009e1": {
      "type": "Ymodifierchange",
      "commitMessage": "HADOOP-11122. Fix findbugs in ZK DelegationTokenSecretManagers. (Arun Suresh via kasha)\n",
      "commitDate": "22/10/14 2:26 PM",
      "commitName": "70719e5c62f32836914bea88e1ddd99c0ed009e1",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "20/09/14 8:21 AM",
      "commitNameOld": "db890eef3208cc557476fa510f7a253ba22bc68a",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 32.25,
      "commitsBetweenForRepo": 299,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n-  public void stopThreads() {\n+  public synchronized void stopThreads() {\n     try {\n       if (!isExternalClient \u0026\u0026 (zkClient !\u003d null)) {\n         zkClient.close();\n       }\n       if (seqCounter !\u003d null) {\n         seqCounter.close();\n       }\n       if (keyCache !\u003d null) {\n         keyCache.close();\n       }\n       if (tokenCache !\u003d null) {\n         tokenCache.close();\n       }\n     } catch (Exception e) {\n       LOG.error(\"Could not stop Curator Framework\", e);\n       // Ignore\n     }\n     super.stopThreads();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void stopThreads() {\n    try {\n      if (!isExternalClient \u0026\u0026 (zkClient !\u003d null)) {\n        zkClient.close();\n      }\n      if (seqCounter !\u003d null) {\n        seqCounter.close();\n      }\n      if (keyCache !\u003d null) {\n        keyCache.close();\n      }\n      if (tokenCache !\u003d null) {\n        tokenCache.close();\n      }\n    } catch (Exception e) {\n      LOG.error(\"Could not stop Curator Framework\", e);\n      // Ignore\n    }\n    super.stopThreads();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[public, synchronized]"
      }
    },
    "db890eef3208cc557476fa510f7a253ba22bc68a": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11017. KMS delegation token secret manager should be able to use zookeeper as store. (asuresh via tucu)\n",
      "commitDate": "20/09/14 8:21 AM",
      "commitName": "db890eef3208cc557476fa510f7a253ba22bc68a",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,20 @@\n+  public void stopThreads() {\n+    try {\n+      if (!isExternalClient \u0026\u0026 (zkClient !\u003d null)) {\n+        zkClient.close();\n+      }\n+      if (seqCounter !\u003d null) {\n+        seqCounter.close();\n+      }\n+      if (keyCache !\u003d null) {\n+        keyCache.close();\n+      }\n+      if (tokenCache !\u003d null) {\n+        tokenCache.close();\n+      }\n+    } catch (Exception e) {\n+      LOG.error(\"Could not stop Curator Framework\", e);\n+      // Ignore\n+    }\n+    super.stopThreads();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void stopThreads() {\n    try {\n      if (!isExternalClient \u0026\u0026 (zkClient !\u003d null)) {\n        zkClient.close();\n      }\n      if (seqCounter !\u003d null) {\n        seqCounter.close();\n      }\n      if (keyCache !\u003d null) {\n        keyCache.close();\n      }\n      if (tokenCache !\u003d null) {\n        tokenCache.close();\n      }\n    } catch (Exception e) {\n      LOG.error(\"Could not stop Curator Framework\", e);\n      // Ignore\n    }\n    super.stopThreads();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java"
    }
  }
}