{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirDeleteOp.java",
  "functionName": "deleteAllowed",
  "functionId": "deleteAllowed___iip-INodesInPath(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirDeleteOp.java",
  "functionStartLine": 206,
  "functionEndLine": 221,
  "numCommitsSeen": 262,
  "timeTaken": 6901,
  "changeHistory": [
    "3565c9af17ab05bf9e7f68b71b6c6850df772bb9",
    "24315e7d374a1ddd4329b64350cf96fc9ab6f59c",
    "5776a41da08af653206bb94d7c76c9c4dcce059a"
  ],
  "changeHistoryShort": {
    "3565c9af17ab05bf9e7f68b71b6c6850df772bb9": "Ymultichange(Yparameterchange,Ybodychange)",
    "24315e7d374a1ddd4329b64350cf96fc9ab6f59c": "Ymultichange(Ymovefromfile,Ybodychange)",
    "5776a41da08af653206bb94d7c76c9c4dcce059a": "Ybodychange"
  },
  "changeHistoryDetails": {
    "3565c9af17ab05bf9e7f68b71b6c6850df772bb9": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10979. Pass IIP for FSDirDeleteOp methods. Contributed by Daryn Sharp.\n",
      "commitDate": "07/10/16 12:15 PM",
      "commitName": "3565c9af17ab05bf9e7f68b71b6c6850df772bb9",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10979. Pass IIP for FSDirDeleteOp methods. Contributed by Daryn Sharp.\n",
          "commitDate": "07/10/16 12:15 PM",
          "commitName": "3565c9af17ab05bf9e7f68b71b6c6850df772bb9",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "04/10/16 1:05 PM",
          "commitNameOld": "44f48ee96ee6b2a3909911c37bfddb0c963d5ffc",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 2.97,
          "commitsBetweenForRepo": 30,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,16 @@\n-  private static boolean deleteAllowed(final INodesInPath iip,\n-      final String src) {\n+  private static boolean deleteAllowed(final INodesInPath iip) {\n     if (iip.length() \u003c 1 || iip.getLastINode() \u003d\u003d null) {\n       if (NameNode.stateChangeLog.isDebugEnabled()) {\n         NameNode.stateChangeLog.debug(\n             \"DIR* FSDirectory.unprotectedDelete: failed to remove \"\n-                + src + \" because it does not exist\");\n+                + iip.getPath() + \" because it does not exist\");\n       }\n       return false;\n     } else if (iip.length() \u003d\u003d 1) { // src is the root\n       NameNode.stateChangeLog.warn(\n-          \"DIR* FSDirectory.unprotectedDelete: failed to remove \" + src +\n-              \" because the root is not allowed to be deleted\");\n+          \"DIR* FSDirectory.unprotectedDelete: failed to remove \" +\n+              iip.getPath() + \" because the root is not allowed to be deleted\");\n       return false;\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean deleteAllowed(final INodesInPath iip) {\n    if (iip.length() \u003c 1 || iip.getLastINode() \u003d\u003d null) {\n      if (NameNode.stateChangeLog.isDebugEnabled()) {\n        NameNode.stateChangeLog.debug(\n            \"DIR* FSDirectory.unprotectedDelete: failed to remove \"\n                + iip.getPath() + \" because it does not exist\");\n      }\n      return false;\n    } else if (iip.length() \u003d\u003d 1) { // src is the root\n      NameNode.stateChangeLog.warn(\n          \"DIR* FSDirectory.unprotectedDelete: failed to remove \" +\n              iip.getPath() + \" because the root is not allowed to be deleted\");\n      return false;\n    }\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirDeleteOp.java",
          "extendedDetails": {
            "oldValue": "[iip-INodesInPath(modifiers-final), src-String(modifiers-final)]",
            "newValue": "[iip-INodesInPath(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10979. Pass IIP for FSDirDeleteOp methods. Contributed by Daryn Sharp.\n",
          "commitDate": "07/10/16 12:15 PM",
          "commitName": "3565c9af17ab05bf9e7f68b71b6c6850df772bb9",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "04/10/16 1:05 PM",
          "commitNameOld": "44f48ee96ee6b2a3909911c37bfddb0c963d5ffc",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 2.97,
          "commitsBetweenForRepo": 30,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,16 @@\n-  private static boolean deleteAllowed(final INodesInPath iip,\n-      final String src) {\n+  private static boolean deleteAllowed(final INodesInPath iip) {\n     if (iip.length() \u003c 1 || iip.getLastINode() \u003d\u003d null) {\n       if (NameNode.stateChangeLog.isDebugEnabled()) {\n         NameNode.stateChangeLog.debug(\n             \"DIR* FSDirectory.unprotectedDelete: failed to remove \"\n-                + src + \" because it does not exist\");\n+                + iip.getPath() + \" because it does not exist\");\n       }\n       return false;\n     } else if (iip.length() \u003d\u003d 1) { // src is the root\n       NameNode.stateChangeLog.warn(\n-          \"DIR* FSDirectory.unprotectedDelete: failed to remove \" + src +\n-              \" because the root is not allowed to be deleted\");\n+          \"DIR* FSDirectory.unprotectedDelete: failed to remove \" +\n+              iip.getPath() + \" because the root is not allowed to be deleted\");\n       return false;\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean deleteAllowed(final INodesInPath iip) {\n    if (iip.length() \u003c 1 || iip.getLastINode() \u003d\u003d null) {\n      if (NameNode.stateChangeLog.isDebugEnabled()) {\n        NameNode.stateChangeLog.debug(\n            \"DIR* FSDirectory.unprotectedDelete: failed to remove \"\n                + iip.getPath() + \" because it does not exist\");\n      }\n      return false;\n    } else if (iip.length() \u003d\u003d 1) { // src is the root\n      NameNode.stateChangeLog.warn(\n          \"DIR* FSDirectory.unprotectedDelete: failed to remove \" +\n              iip.getPath() + \" because the root is not allowed to be deleted\");\n      return false;\n    }\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirDeleteOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "24315e7d374a1ddd4329b64350cf96fc9ab6f59c": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-7573. Consolidate the implementation of delete() into a single class. Contributed by Haohui Mai.\n",
      "commitDate": "17/01/15 12:56 PM",
      "commitName": "24315e7d374a1ddd4329b64350cf96fc9ab6f59c",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-7573. Consolidate the implementation of delete() into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "17/01/15 12:56 PM",
          "commitName": "24315e7d374a1ddd4329b64350cf96fc9ab6f59c",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "17/01/15 10:40 AM",
          "commitNameOld": "2908fe4ec52f78d74e4207274a34d88d54cd468f",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n   private static boolean deleteAllowed(final INodesInPath iip,\n       final String src) {\n     if (iip.length() \u003c 1 || iip.getLastINode() \u003d\u003d null) {\n-      if(NameNode.stateChangeLog.isDebugEnabled()) {\n-        NameNode.stateChangeLog.debug(\"DIR* FSDirectory.unprotectedDelete: \"\n-            + \"failed to remove \" + src + \" because it does not exist\");\n+      if (NameNode.stateChangeLog.isDebugEnabled()) {\n+        NameNode.stateChangeLog.debug(\n+            \"DIR* FSDirectory.unprotectedDelete: failed to remove \"\n+                + src + \" because it does not exist\");\n       }\n       return false;\n     } else if (iip.length() \u003d\u003d 1) { // src is the root\n-      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedDelete: \"\n-          + \"failed to remove \" + src\n-          + \" because the root is not allowed to be deleted\");\n+      NameNode.stateChangeLog.warn(\n+          \"DIR* FSDirectory.unprotectedDelete: failed to remove \" + src +\n+              \" because the root is not allowed to be deleted\");\n       return false;\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean deleteAllowed(final INodesInPath iip,\n      final String src) {\n    if (iip.length() \u003c 1 || iip.getLastINode() \u003d\u003d null) {\n      if (NameNode.stateChangeLog.isDebugEnabled()) {\n        NameNode.stateChangeLog.debug(\n            \"DIR* FSDirectory.unprotectedDelete: failed to remove \"\n                + src + \" because it does not exist\");\n      }\n      return false;\n    } else if (iip.length() \u003d\u003d 1) { // src is the root\n      NameNode.stateChangeLog.warn(\n          \"DIR* FSDirectory.unprotectedDelete: failed to remove \" + src +\n              \" because the root is not allowed to be deleted\");\n      return false;\n    }\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirDeleteOp.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirDeleteOp.java",
            "oldMethodName": "deleteAllowed",
            "newMethodName": "deleteAllowed"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7573. Consolidate the implementation of delete() into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "17/01/15 12:56 PM",
          "commitName": "24315e7d374a1ddd4329b64350cf96fc9ab6f59c",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "17/01/15 10:40 AM",
          "commitNameOld": "2908fe4ec52f78d74e4207274a34d88d54cd468f",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n   private static boolean deleteAllowed(final INodesInPath iip,\n       final String src) {\n     if (iip.length() \u003c 1 || iip.getLastINode() \u003d\u003d null) {\n-      if(NameNode.stateChangeLog.isDebugEnabled()) {\n-        NameNode.stateChangeLog.debug(\"DIR* FSDirectory.unprotectedDelete: \"\n-            + \"failed to remove \" + src + \" because it does not exist\");\n+      if (NameNode.stateChangeLog.isDebugEnabled()) {\n+        NameNode.stateChangeLog.debug(\n+            \"DIR* FSDirectory.unprotectedDelete: failed to remove \"\n+                + src + \" because it does not exist\");\n       }\n       return false;\n     } else if (iip.length() \u003d\u003d 1) { // src is the root\n-      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedDelete: \"\n-          + \"failed to remove \" + src\n-          + \" because the root is not allowed to be deleted\");\n+      NameNode.stateChangeLog.warn(\n+          \"DIR* FSDirectory.unprotectedDelete: failed to remove \" + src +\n+              \" because the root is not allowed to be deleted\");\n       return false;\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean deleteAllowed(final INodesInPath iip,\n      final String src) {\n    if (iip.length() \u003c 1 || iip.getLastINode() \u003d\u003d null) {\n      if (NameNode.stateChangeLog.isDebugEnabled()) {\n        NameNode.stateChangeLog.debug(\n            \"DIR* FSDirectory.unprotectedDelete: failed to remove \"\n                + src + \" because it does not exist\");\n      }\n      return false;\n    } else if (iip.length() \u003d\u003d 1) { // src is the root\n      NameNode.stateChangeLog.warn(\n          \"DIR* FSDirectory.unprotectedDelete: failed to remove \" + src +\n              \" because the root is not allowed to be deleted\");\n      return false;\n    }\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirDeleteOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "5776a41da08af653206bb94d7c76c9c4dcce059a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.\n",
      "commitDate": "09/12/14 11:37 AM",
      "commitName": "5776a41da08af653206bb94d7c76c9c4dcce059a",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "08/12/14 11:52 AM",
      "commitNameOld": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.99,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,16 @@\n   private static boolean deleteAllowed(final INodesInPath iip,\n       final String src) {\n-    final INode[] inodes \u003d iip.getINodes(); \n-    if (inodes \u003d\u003d null || inodes.length \u003d\u003d 0\n-        || inodes[inodes.length - 1] \u003d\u003d null) {\n+    if (iip.length() \u003c 1 || iip.getLastINode() \u003d\u003d null) {\n       if(NameNode.stateChangeLog.isDebugEnabled()) {\n         NameNode.stateChangeLog.debug(\"DIR* FSDirectory.unprotectedDelete: \"\n             + \"failed to remove \" + src + \" because it does not exist\");\n       }\n       return false;\n-    } else if (inodes.length \u003d\u003d 1) { // src is the root\n+    } else if (iip.length() \u003d\u003d 1) { // src is the root\n       NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedDelete: \"\n           + \"failed to remove \" + src\n           + \" because the root is not allowed to be deleted\");\n       return false;\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static boolean deleteAllowed(final INodesInPath iip,\n      final String src) {\n    if (iip.length() \u003c 1 || iip.getLastINode() \u003d\u003d null) {\n      if(NameNode.stateChangeLog.isDebugEnabled()) {\n        NameNode.stateChangeLog.debug(\"DIR* FSDirectory.unprotectedDelete: \"\n            + \"failed to remove \" + src + \" because it does not exist\");\n      }\n      return false;\n    } else if (iip.length() \u003d\u003d 1) { // src is the root\n      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedDelete: \"\n          + \"failed to remove \" + src\n          + \" because the root is not allowed to be deleted\");\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    }
  }
}