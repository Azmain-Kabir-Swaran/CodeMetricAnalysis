{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMNodeLabelsManager.java",
  "functionName": "removeFromClusterNodeLabels",
  "functionId": "removeFromClusterNodeLabels___labelsToRemove-Collection__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/RMNodeLabelsManager.java",
  "functionStartLine": 112,
  "functionEndLine": 134,
  "numCommitsSeen": 22,
  "timeTaken": 2101,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "b4078bd17b41fbfff5a5c0bca5bf903a327826a7",
    "91b42e7d6e8169feb54dbe3715a3269eea6153a9",
    "db7f1653198b950e89567c06898d64f6b930a0ee"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "b4078bd17b41fbfff5a5c0bca5bf903a327826a7": "Ybodychange",
    "91b42e7d6e8169feb54dbe3715a3269eea6153a9": "Ybodychange",
    "db7f1653198b950e89567c06898d64f6b930a0ee": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "19/06/17 10:12 AM",
      "commitNameOld": "ee89ac84e68d3e181b75c63f74a0444f9d28146f",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 626.19,
      "commitsBetweenForRepo": 5292,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public void removeFromClusterNodeLabels(Collection\u003cString\u003e labelsToRemove)\n       throws IOException {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       if (!isInitNodeLabelStoreInProgress()) {\n         // We cannot remove node labels from collection when some queue(s) are\n         // using any of them.\n         // We will not do remove when recovery is in prpgress. During\n         // service starting, we will replay edit logs and recover state. It is\n         // possible that a history operation removed some labels which were not\n         // used by some queues in the past but are used by current queues.\n         checkRemoveFromClusterNodeLabelsOfQueue(labelsToRemove);\n       }\n       // copy before NMs\n       Map\u003cString, Host\u003e before \u003d cloneNodeMap();\n \n       super.removeFromClusterNodeLabels(labelsToRemove);\n \n       updateResourceMappings(before, nodeCollections);\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeFromClusterNodeLabels(Collection\u003cString\u003e labelsToRemove)\n      throws IOException {\n    writeLock.lock();\n    try {\n      if (!isInitNodeLabelStoreInProgress()) {\n        // We cannot remove node labels from collection when some queue(s) are\n        // using any of them.\n        // We will not do remove when recovery is in prpgress. During\n        // service starting, we will replay edit logs and recover state. It is\n        // possible that a history operation removed some labels which were not\n        // used by some queues in the past but are used by current queues.\n        checkRemoveFromClusterNodeLabelsOfQueue(labelsToRemove);\n      }\n      // copy before NMs\n      Map\u003cString, Host\u003e before \u003d cloneNodeMap();\n\n      super.removeFromClusterNodeLabels(labelsToRemove);\n\n      updateResourceMappings(before, nodeCollections);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/RMNodeLabelsManager.java",
      "extendedDetails": {}
    },
    "b4078bd17b41fbfff5a5c0bca5bf903a327826a7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3971. Skip RMNodeLabelsManager#checkRemoveFromClusterNodeLabelsOfQueue on nodelabel recovery. (addendum patch). Contributed by Bibin A chundatt\n",
      "commitDate": "23/05/16 5:06 PM",
      "commitName": "b4078bd17b41fbfff5a5c0bca5bf903a327826a7",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "06/10/15 11:56 AM",
      "commitNameOld": "29a582ada0fe195989eca25e5a995895e178f4ea",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 230.22,
      "commitsBetweenForRepo": 1532,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public void removeFromClusterNodeLabels(Collection\u003cString\u003e labelsToRemove)\n       throws IOException {\n     try {\n       writeLock.lock();\n-      if (getServiceState() \u003d\u003d Service.STATE.STARTED) {\n+      if (!isInitNodeLabelStoreInProgress()) {\n         // We cannot remove node labels from collection when some queue(s) are\n         // using any of them.\n-        // We will only do this check when service starting finished. Before\n+        // We will not do remove when recovery is in prpgress. During\n         // service starting, we will replay edit logs and recover state. It is\n-        // possible that a history operation removed some labels which were being\n-        // used by some queues in the past but not used by current queues.\n+        // possible that a history operation removed some labels which were not\n+        // used by some queues in the past but are used by current queues.\n         checkRemoveFromClusterNodeLabelsOfQueue(labelsToRemove);\n       }\n       // copy before NMs\n       Map\u003cString, Host\u003e before \u003d cloneNodeMap();\n \n       super.removeFromClusterNodeLabels(labelsToRemove);\n \n       updateResourceMappings(before, nodeCollections);\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeFromClusterNodeLabels(Collection\u003cString\u003e labelsToRemove)\n      throws IOException {\n    try {\n      writeLock.lock();\n      if (!isInitNodeLabelStoreInProgress()) {\n        // We cannot remove node labels from collection when some queue(s) are\n        // using any of them.\n        // We will not do remove when recovery is in prpgress. During\n        // service starting, we will replay edit logs and recover state. It is\n        // possible that a history operation removed some labels which were not\n        // used by some queues in the past but are used by current queues.\n        checkRemoveFromClusterNodeLabelsOfQueue(labelsToRemove);\n      }\n      // copy before NMs\n      Map\u003cString, Host\u003e before \u003d cloneNodeMap();\n\n      super.removeFromClusterNodeLabels(labelsToRemove);\n\n      updateResourceMappings(before, nodeCollections);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/RMNodeLabelsManager.java",
      "extendedDetails": {}
    },
    "91b42e7d6e8169feb54dbe3715a3269eea6153a9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3971. Skip RMNodeLabelsManager#checkRemoveFromClusterNodeLabelsOfQueue on nodelabel recovery. (Bibin A Chundatt via wangda)\n",
      "commitDate": "30/07/15 10:00 AM",
      "commitName": "91b42e7d6e8169feb54dbe3715a3269eea6153a9",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "27/05/15 12:51 PM",
      "commitNameOld": "ec0a852a37d5c91a62d3d0ff3ddbd9d58235b312",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 63.88,
      "commitsBetweenForRepo": 432,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,23 @@\n   public void removeFromClusterNodeLabels(Collection\u003cString\u003e labelsToRemove)\n       throws IOException {\n     try {\n       writeLock.lock();\n-\n-      checkRemoveFromClusterNodeLabelsOfQueue(labelsToRemove);\n-\n+      if (getServiceState() \u003d\u003d Service.STATE.STARTED) {\n+        // We cannot remove node labels from collection when some queue(s) are\n+        // using any of them.\n+        // We will only do this check when service starting finished. Before\n+        // service starting, we will replay edit logs and recover state. It is\n+        // possible that a history operation removed some labels which were being\n+        // used by some queues in the past but not used by current queues.\n+        checkRemoveFromClusterNodeLabelsOfQueue(labelsToRemove);\n+      }\n       // copy before NMs\n       Map\u003cString, Host\u003e before \u003d cloneNodeMap();\n \n       super.removeFromClusterNodeLabels(labelsToRemove);\n \n       updateResourceMappings(before, nodeCollections);\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeFromClusterNodeLabels(Collection\u003cString\u003e labelsToRemove)\n      throws IOException {\n    try {\n      writeLock.lock();\n      if (getServiceState() \u003d\u003d Service.STATE.STARTED) {\n        // We cannot remove node labels from collection when some queue(s) are\n        // using any of them.\n        // We will only do this check when service starting finished. Before\n        // service starting, we will replay edit logs and recover state. It is\n        // possible that a history operation removed some labels which were being\n        // used by some queues in the past but not used by current queues.\n        checkRemoveFromClusterNodeLabelsOfQueue(labelsToRemove);\n      }\n      // copy before NMs\n      Map\u003cString, Host\u003e before \u003d cloneNodeMap();\n\n      super.removeFromClusterNodeLabels(labelsToRemove);\n\n      updateResourceMappings(before, nodeCollections);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/RMNodeLabelsManager.java",
      "extendedDetails": {}
    },
    "db7f1653198b950e89567c06898d64f6b930a0ee": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2494. Added NodeLabels Manager internal API and implementation. Contributed by Wangda Tan.\n",
      "commitDate": "10/10/14 11:44 AM",
      "commitName": "db7f1653198b950e89567c06898d64f6b930a0ee",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,17 @@\n+  public void removeFromClusterNodeLabels(Collection\u003cString\u003e labelsToRemove)\n+      throws IOException {\n+    try {\n+      writeLock.lock();\n+\n+      checkRemoveFromClusterNodeLabelsOfQueue(labelsToRemove);\n+\n+      // copy before NMs\n+      Map\u003cString, Host\u003e before \u003d cloneNodeMap();\n+\n+      super.removeFromClusterNodeLabels(labelsToRemove);\n+\n+      updateResourceMappings(before, nodeCollections);\n+    } finally {\n+      writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeFromClusterNodeLabels(Collection\u003cString\u003e labelsToRemove)\n      throws IOException {\n    try {\n      writeLock.lock();\n\n      checkRemoveFromClusterNodeLabelsOfQueue(labelsToRemove);\n\n      // copy before NMs\n      Map\u003cString, Host\u003e before \u003d cloneNodeMap();\n\n      super.removeFromClusterNodeLabels(labelsToRemove);\n\n      updateResourceMappings(before, nodeCollections);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/RMNodeLabelsManager.java"
    }
  }
}