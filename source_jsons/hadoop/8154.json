{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileJournalManager.java",
  "functionName": "isStaleInProgressLog",
  "functionId": "isStaleInProgressLog___minTxIdToKeep-long__log-EditLogFile",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
  "functionStartLine": 216,
  "functionEndLine": 224,
  "numCommitsSeen": 52,
  "timeTaken": 1485,
  "changeHistory": [
    "fcb7884bfc0146b083f928a223069bc0acaf6133"
  ],
  "changeHistoryShort": {
    "fcb7884bfc0146b083f928a223069bc0acaf6133": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fcb7884bfc0146b083f928a223069bc0acaf6133": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8178. QJM doesn\u0027t move aside stale inprogress edits files. Contributed by Istvan Fajth.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "29/08/19 4:56 PM",
      "commitName": "fcb7884bfc0146b083f928a223069bc0acaf6133",
      "commitAuthor": "Istvan Fajth",
      "diff": "@@ -0,0 +1,9 @@\n+  private boolean isStaleInProgressLog(long minTxIdToKeep, EditLogFile log) {\n+    return log.isInProgress() \u0026\u0026\n+        !log.getFile().equals(currentInProgress) \u0026\u0026\n+        log.getFirstTxId() \u003e\u003d minTxIdToKeep \u0026\u0026\n+        // at last we check if this segment is not already marked as .trash,\n+        // .empty or .corrupted, in which case it does not match the strict\n+        // regex pattern.\n+        EDITS_INPROGRESS_REGEX.matcher(log.getFile().getName()).matches();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isStaleInProgressLog(long minTxIdToKeep, EditLogFile log) {\n    return log.isInProgress() \u0026\u0026\n        !log.getFile().equals(currentInProgress) \u0026\u0026\n        log.getFirstTxId() \u003e\u003d minTxIdToKeep \u0026\u0026\n        // at last we check if this segment is not already marked as .trash,\n        // .empty or .corrupted, in which case it does not match the strict\n        // regex pattern.\n        EDITS_INPROGRESS_REGEX.matcher(log.getFile().getName()).matches();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java"
    }
  }
}