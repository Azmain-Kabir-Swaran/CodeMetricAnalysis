{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JsonUtilClient.java",
  "functionName": "toMD5MD5CRC32FileChecksum",
  "functionId": "toMD5MD5CRC32FileChecksum___json-Map__?,?__(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
  "functionStartLine": 515,
  "functionEndLine": 557,
  "numCommitsSeen": 95,
  "timeTaken": 3701,
  "changeHistory": [
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
    "ab04ff9efe632b4eca6faca7407ac35e00e6a379",
    "e2262d3d18c6d5c2aa20f96920104dc07271b869",
    "f2dd818201402d0ca8a7049ba7abf77188443a64",
    "e561cb9e78810bb6d2a7293fc8c46d571e7ec2bc",
    "8cb0d4b380e0fd4437310c1dd6ef8b8995cc383d",
    "1b1016beeb716bef8dad93bb2c7c4631a14b3d57",
    "dc8464f943b61b795df0cc8baec171bf07355763"
  ],
  "changeHistoryShort": {
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": "Yfilerename",
    "ab04ff9efe632b4eca6faca7407ac35e00e6a379": "Ymultichange(Ymovefromfile,Ymodifierchange)",
    "e2262d3d18c6d5c2aa20f96920104dc07271b869": "Ybodychange",
    "f2dd818201402d0ca8a7049ba7abf77188443a64": "Ybodychange",
    "e561cb9e78810bb6d2a7293fc8c46d571e7ec2bc": "Ybodychange",
    "8cb0d4b380e0fd4437310c1dd6ef8b8995cc383d": "Ybodychange",
    "1b1016beeb716bef8dad93bb2c7c4631a14b3d57": "Ymultichange(Yparameterchange,Ybodychange)",
    "dc8464f943b61b795df0cc8baec171bf07355763": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8052. Move WebHdfsFileSystem into hadoop-hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "23/04/15 5:33 PM",
      "commitName": "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "23/04/15 4:40 PM",
      "commitNameOld": "0b3f8957a87ada1a275c9904b211fdbdcefafb02",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n      final Map\u003c?, ?\u003e json) throws IOException {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(FileChecksum.class.getSimpleName());\n    final String algorithm \u003d (String)m.get(\"algorithm\");\n    final int length \u003d ((Number) m.get(\"length\")).intValue();\n    final byte[] bytes \u003d StringUtils.hexStringToByte((String) m.get(\"bytes\"));\n\n    final DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(bytes));\n    final DataChecksum.Type crcType \u003d\n        MD5MD5CRC32FileChecksum.getCrcTypeFromAlgorithmName(algorithm);\n    final MD5MD5CRC32FileChecksum checksum;\n\n    // Recreate what DFSClient would have returned.\n    switch(crcType) {\n      case CRC32:\n        checksum \u003d new MD5MD5CRC32GzipFileChecksum();\n        break;\n      case CRC32C:\n        checksum \u003d new MD5MD5CRC32CastagnoliFileChecksum();\n        break;\n      default:\n        throw new IOException(\"Unknown algorithm: \" + algorithm);\n    }\n    checksum.readFields(in);\n\n    //check algorithm name\n    if (!checksum.getAlgorithmName().equals(algorithm)) {\n      throw new IOException(\"Algorithm not matched. Expected \" + algorithm\n          + \", Received \" + checksum.getAlgorithmName());\n    }\n    //check length\n    if (length !\u003d checksum.getLength()) {\n      throw new IOException(\"Length not matched: length\u003d\" + length\n          + \", checksum.getLength()\u003d\" + checksum.getLength());\n    }\n\n    return checksum;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java"
      }
    },
    "ab04ff9efe632b4eca6faca7407ac35e00e6a379": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange)",
      "commitMessage": "HDFS-8080. Separate JSON related routines used by WebHdfsFileSystem to a package local class. Contributed by Haohui Mai.\n",
      "commitDate": "07/04/15 9:30 PM",
      "commitName": "ab04ff9efe632b4eca6faca7407ac35e00e6a379",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-8080. Separate JSON related routines used by WebHdfsFileSystem to a package local class. Contributed by Haohui Mai.\n",
          "commitDate": "07/04/15 9:30 PM",
          "commitName": "ab04ff9efe632b4eca6faca7407ac35e00e6a379",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "07/04/15 9:26 PM",
          "commitNameOld": "d505c8acd30d6f40d0632fe9c93c886a4499a9fc",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,42 @@\n-  public static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n+  static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n       final Map\u003c?, ?\u003e json) throws IOException {\n     if (json \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(FileChecksum.class.getSimpleName());\n     final String algorithm \u003d (String)m.get(\"algorithm\");\n     final int length \u003d ((Number) m.get(\"length\")).intValue();\n-    final byte[] bytes \u003d StringUtils.hexStringToByte((String)m.get(\"bytes\"));\n+    final byte[] bytes \u003d StringUtils.hexStringToByte((String) m.get(\"bytes\"));\n \n     final DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(bytes));\n-    final DataChecksum.Type crcType \u003d \n+    final DataChecksum.Type crcType \u003d\n         MD5MD5CRC32FileChecksum.getCrcTypeFromAlgorithmName(algorithm);\n     final MD5MD5CRC32FileChecksum checksum;\n \n     // Recreate what DFSClient would have returned.\n     switch(crcType) {\n       case CRC32:\n         checksum \u003d new MD5MD5CRC32GzipFileChecksum();\n         break;\n       case CRC32C:\n         checksum \u003d new MD5MD5CRC32CastagnoliFileChecksum();\n         break;\n       default:\n         throw new IOException(\"Unknown algorithm: \" + algorithm);\n     }\n     checksum.readFields(in);\n \n     //check algorithm name\n     if (!checksum.getAlgorithmName().equals(algorithm)) {\n       throw new IOException(\"Algorithm not matched. Expected \" + algorithm\n           + \", Received \" + checksum.getAlgorithmName());\n     }\n     //check length\n     if (length !\u003d checksum.getLength()) {\n       throw new IOException(\"Length not matched: length\u003d\" + length\n           + \", checksum.getLength()\u003d\" + checksum.getLength());\n     }\n \n     return checksum;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n      final Map\u003c?, ?\u003e json) throws IOException {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(FileChecksum.class.getSimpleName());\n    final String algorithm \u003d (String)m.get(\"algorithm\");\n    final int length \u003d ((Number) m.get(\"length\")).intValue();\n    final byte[] bytes \u003d StringUtils.hexStringToByte((String) m.get(\"bytes\"));\n\n    final DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(bytes));\n    final DataChecksum.Type crcType \u003d\n        MD5MD5CRC32FileChecksum.getCrcTypeFromAlgorithmName(algorithm);\n    final MD5MD5CRC32FileChecksum checksum;\n\n    // Recreate what DFSClient would have returned.\n    switch(crcType) {\n      case CRC32:\n        checksum \u003d new MD5MD5CRC32GzipFileChecksum();\n        break;\n      case CRC32C:\n        checksum \u003d new MD5MD5CRC32CastagnoliFileChecksum();\n        break;\n      default:\n        throw new IOException(\"Unknown algorithm: \" + algorithm);\n    }\n    checksum.readFields(in);\n\n    //check algorithm name\n    if (!checksum.getAlgorithmName().equals(algorithm)) {\n      throw new IOException(\"Algorithm not matched. Expected \" + algorithm\n          + \", Received \" + checksum.getAlgorithmName());\n    }\n    //check length\n    if (length !\u003d checksum.getLength()) {\n      throw new IOException(\"Length not matched: length\u003d\" + length\n          + \", checksum.getLength()\u003d\" + checksum.getLength());\n    }\n\n    return checksum;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
            "oldMethodName": "toMD5MD5CRC32FileChecksum",
            "newMethodName": "toMD5MD5CRC32FileChecksum"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-8080. Separate JSON related routines used by WebHdfsFileSystem to a package local class. Contributed by Haohui Mai.\n",
          "commitDate": "07/04/15 9:30 PM",
          "commitName": "ab04ff9efe632b4eca6faca7407ac35e00e6a379",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "07/04/15 9:26 PM",
          "commitNameOld": "d505c8acd30d6f40d0632fe9c93c886a4499a9fc",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,42 @@\n-  public static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n+  static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n       final Map\u003c?, ?\u003e json) throws IOException {\n     if (json \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(FileChecksum.class.getSimpleName());\n     final String algorithm \u003d (String)m.get(\"algorithm\");\n     final int length \u003d ((Number) m.get(\"length\")).intValue();\n-    final byte[] bytes \u003d StringUtils.hexStringToByte((String)m.get(\"bytes\"));\n+    final byte[] bytes \u003d StringUtils.hexStringToByte((String) m.get(\"bytes\"));\n \n     final DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(bytes));\n-    final DataChecksum.Type crcType \u003d \n+    final DataChecksum.Type crcType \u003d\n         MD5MD5CRC32FileChecksum.getCrcTypeFromAlgorithmName(algorithm);\n     final MD5MD5CRC32FileChecksum checksum;\n \n     // Recreate what DFSClient would have returned.\n     switch(crcType) {\n       case CRC32:\n         checksum \u003d new MD5MD5CRC32GzipFileChecksum();\n         break;\n       case CRC32C:\n         checksum \u003d new MD5MD5CRC32CastagnoliFileChecksum();\n         break;\n       default:\n         throw new IOException(\"Unknown algorithm: \" + algorithm);\n     }\n     checksum.readFields(in);\n \n     //check algorithm name\n     if (!checksum.getAlgorithmName().equals(algorithm)) {\n       throw new IOException(\"Algorithm not matched. Expected \" + algorithm\n           + \", Received \" + checksum.getAlgorithmName());\n     }\n     //check length\n     if (length !\u003d checksum.getLength()) {\n       throw new IOException(\"Length not matched: length\u003d\" + length\n           + \", checksum.getLength()\u003d\" + checksum.getLength());\n     }\n \n     return checksum;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n      final Map\u003c?, ?\u003e json) throws IOException {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(FileChecksum.class.getSimpleName());\n    final String algorithm \u003d (String)m.get(\"algorithm\");\n    final int length \u003d ((Number) m.get(\"length\")).intValue();\n    final byte[] bytes \u003d StringUtils.hexStringToByte((String) m.get(\"bytes\"));\n\n    final DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(bytes));\n    final DataChecksum.Type crcType \u003d\n        MD5MD5CRC32FileChecksum.getCrcTypeFromAlgorithmName(algorithm);\n    final MD5MD5CRC32FileChecksum checksum;\n\n    // Recreate what DFSClient would have returned.\n    switch(crcType) {\n      case CRC32:\n        checksum \u003d new MD5MD5CRC32GzipFileChecksum();\n        break;\n      case CRC32C:\n        checksum \u003d new MD5MD5CRC32CastagnoliFileChecksum();\n        break;\n      default:\n        throw new IOException(\"Unknown algorithm: \" + algorithm);\n    }\n    checksum.readFields(in);\n\n    //check algorithm name\n    if (!checksum.getAlgorithmName().equals(algorithm)) {\n      throw new IOException(\"Algorithm not matched. Expected \" + algorithm\n          + \", Received \" + checksum.getAlgorithmName());\n    }\n    //check length\n    if (length !\u003d checksum.getLength()) {\n      throw new IOException(\"Length not matched: length\u003d\" + length\n          + \", checksum.getLength()\u003d\" + checksum.getLength());\n    }\n\n    return checksum;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[static]"
          }
        }
      ]
    },
    "e2262d3d18c6d5c2aa20f96920104dc07271b869": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6565. Use jackson instead jetty json in hdfs-client. Contributed by Akira AJISAKA.\n",
      "commitDate": "03/03/15 5:54 PM",
      "commitName": "e2262d3d18c6d5c2aa20f96920104dc07271b869",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "08/12/14 10:23 AM",
      "commitNameOld": "ffe942b82c1208bc7b22899da3a233944cb5ab52",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 85.31,
      "commitsBetweenForRepo": 663,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,42 @@\n   public static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n       final Map\u003c?, ?\u003e json) throws IOException {\n     if (json \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(FileChecksum.class.getSimpleName());\n     final String algorithm \u003d (String)m.get(\"algorithm\");\n-    final int length \u003d (int)(long)(Long)m.get(\"length\");\n+    final int length \u003d ((Number) m.get(\"length\")).intValue();\n     final byte[] bytes \u003d StringUtils.hexStringToByte((String)m.get(\"bytes\"));\n \n     final DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(bytes));\n     final DataChecksum.Type crcType \u003d \n         MD5MD5CRC32FileChecksum.getCrcTypeFromAlgorithmName(algorithm);\n     final MD5MD5CRC32FileChecksum checksum;\n \n     // Recreate what DFSClient would have returned.\n     switch(crcType) {\n       case CRC32:\n         checksum \u003d new MD5MD5CRC32GzipFileChecksum();\n         break;\n       case CRC32C:\n         checksum \u003d new MD5MD5CRC32CastagnoliFileChecksum();\n         break;\n       default:\n         throw new IOException(\"Unknown algorithm: \" + algorithm);\n     }\n     checksum.readFields(in);\n \n     //check algorithm name\n     if (!checksum.getAlgorithmName().equals(algorithm)) {\n       throw new IOException(\"Algorithm not matched. Expected \" + algorithm\n           + \", Received \" + checksum.getAlgorithmName());\n     }\n     //check length\n     if (length !\u003d checksum.getLength()) {\n       throw new IOException(\"Length not matched: length\u003d\" + length\n           + \", checksum.getLength()\u003d\" + checksum.getLength());\n     }\n \n     return checksum;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n      final Map\u003c?, ?\u003e json) throws IOException {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(FileChecksum.class.getSimpleName());\n    final String algorithm \u003d (String)m.get(\"algorithm\");\n    final int length \u003d ((Number) m.get(\"length\")).intValue();\n    final byte[] bytes \u003d StringUtils.hexStringToByte((String)m.get(\"bytes\"));\n\n    final DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(bytes));\n    final DataChecksum.Type crcType \u003d \n        MD5MD5CRC32FileChecksum.getCrcTypeFromAlgorithmName(algorithm);\n    final MD5MD5CRC32FileChecksum checksum;\n\n    // Recreate what DFSClient would have returned.\n    switch(crcType) {\n      case CRC32:\n        checksum \u003d new MD5MD5CRC32GzipFileChecksum();\n        break;\n      case CRC32C:\n        checksum \u003d new MD5MD5CRC32CastagnoliFileChecksum();\n        break;\n      default:\n        throw new IOException(\"Unknown algorithm: \" + algorithm);\n    }\n    checksum.readFields(in);\n\n    //check algorithm name\n    if (!checksum.getAlgorithmName().equals(algorithm)) {\n      throw new IOException(\"Algorithm not matched. Expected \" + algorithm\n          + \", Received \" + checksum.getAlgorithmName());\n    }\n    //check length\n    if (length !\u003d checksum.getLength()) {\n      throw new IOException(\"Length not matched: length\u003d\" + length\n          + \", checksum.getLength()\u003d\" + checksum.getLength());\n    }\n\n    return checksum;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "f2dd818201402d0ca8a7049ba7abf77188443a64": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8239. Add subclasses of MD5MD5CRC32FileChecksum to support file checksum with CRC32C.  Contributed by Kihwal Lee\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1375450 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/08/12 2:44 AM",
      "commitName": "f2dd818201402d0ca8a7049ba7abf77188443a64",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "10/05/12 10:58 AM",
      "commitNameOld": "6a0865440e335dd306cba12f97fad703bb445216",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 102.66,
      "commitsBetweenForRepo": 526,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,42 @@\n   public static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n       final Map\u003c?, ?\u003e json) throws IOException {\n     if (json \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(FileChecksum.class.getSimpleName());\n     final String algorithm \u003d (String)m.get(\"algorithm\");\n     final int length \u003d (int)(long)(Long)m.get(\"length\");\n     final byte[] bytes \u003d StringUtils.hexStringToByte((String)m.get(\"bytes\"));\n \n     final DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(bytes));\n-    final MD5MD5CRC32FileChecksum checksum \u003d new MD5MD5CRC32FileChecksum();\n+    final DataChecksum.Type crcType \u003d \n+        MD5MD5CRC32FileChecksum.getCrcTypeFromAlgorithmName(algorithm);\n+    final MD5MD5CRC32FileChecksum checksum;\n+\n+    // Recreate what DFSClient would have returned.\n+    switch(crcType) {\n+      case CRC32:\n+        checksum \u003d new MD5MD5CRC32GzipFileChecksum();\n+        break;\n+      case CRC32C:\n+        checksum \u003d new MD5MD5CRC32CastagnoliFileChecksum();\n+        break;\n+      default:\n+        throw new IOException(\"Unknown algorithm: \" + algorithm);\n+    }\n     checksum.readFields(in);\n \n     //check algorithm name\n     if (!checksum.getAlgorithmName().equals(algorithm)) {\n       throw new IOException(\"Algorithm not matched. Expected \" + algorithm\n           + \", Received \" + checksum.getAlgorithmName());\n     }\n     //check length\n     if (length !\u003d checksum.getLength()) {\n       throw new IOException(\"Length not matched: length\u003d\" + length\n           + \", checksum.getLength()\u003d\" + checksum.getLength());\n     }\n \n     return checksum;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n      final Map\u003c?, ?\u003e json) throws IOException {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(FileChecksum.class.getSimpleName());\n    final String algorithm \u003d (String)m.get(\"algorithm\");\n    final int length \u003d (int)(long)(Long)m.get(\"length\");\n    final byte[] bytes \u003d StringUtils.hexStringToByte((String)m.get(\"bytes\"));\n\n    final DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(bytes));\n    final DataChecksum.Type crcType \u003d \n        MD5MD5CRC32FileChecksum.getCrcTypeFromAlgorithmName(algorithm);\n    final MD5MD5CRC32FileChecksum checksum;\n\n    // Recreate what DFSClient would have returned.\n    switch(crcType) {\n      case CRC32:\n        checksum \u003d new MD5MD5CRC32GzipFileChecksum();\n        break;\n      case CRC32C:\n        checksum \u003d new MD5MD5CRC32CastagnoliFileChecksum();\n        break;\n      default:\n        throw new IOException(\"Unknown algorithm: \" + algorithm);\n    }\n    checksum.readFields(in);\n\n    //check algorithm name\n    if (!checksum.getAlgorithmName().equals(algorithm)) {\n      throw new IOException(\"Algorithm not matched. Expected \" + algorithm\n          + \", Received \" + checksum.getAlgorithmName());\n    }\n    //check length\n    if (length !\u003d checksum.getLength()) {\n      throw new IOException(\"Length not matched: length\u003d\" + length\n          + \", checksum.getLength()\u003d\" + checksum.getLength());\n    }\n\n    return checksum;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "e561cb9e78810bb6d2a7293fc8c46d571e7ec2bc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3176. Use MD5MD5CRC32FileChecksum.readFields() in JsonUtil .  Contributed by Kihwal Lee\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1309114 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/04/12 12:44 PM",
      "commitName": "e561cb9e78810bb6d2a7293fc8c46d571e7ec2bc",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "01/04/12 3:12 PM",
      "commitNameOld": "be7dd8333a7e56e732171db0781786987de03195",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 1.9,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,28 @@\n   public static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n       final Map\u003c?, ?\u003e json) throws IOException {\n     if (json \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(FileChecksum.class.getSimpleName());\n     final String algorithm \u003d (String)m.get(\"algorithm\");\n     final int length \u003d (int)(long)(Long)m.get(\"length\");\n     final byte[] bytes \u003d StringUtils.hexStringToByte((String)m.get(\"bytes\"));\n \n     final DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(bytes));\n-    final int bytesPerCRC \u003d in.readInt();\n-    final long crcPerBlock \u003d in.readLong();\n-    final MD5Hash md5 \u003d MD5Hash.read(in);\n-    final MD5MD5CRC32FileChecksum checksum \u003d new MD5MD5CRC32FileChecksum(\n-        bytesPerCRC, crcPerBlock, md5);\n+    final MD5MD5CRC32FileChecksum checksum \u003d new MD5MD5CRC32FileChecksum();\n+    checksum.readFields(in);\n \n     //check algorithm name\n-    final String alg \u003d \"MD5-of-\" + crcPerBlock + \"MD5-of-\" + bytesPerCRC + \"CRC32\";\n-    if (!alg.equals(algorithm)) {\n-      throw new IOException(\"Algorithm not matched: algorithm\u003d\" + algorithm\n-          + \", crcPerBlock\u003d\" + crcPerBlock\n-          + \", bytesPerCRC\u003d\" + bytesPerCRC);\n+    if (!checksum.getAlgorithmName().equals(algorithm)) {\n+      throw new IOException(\"Algorithm not matched. Expected \" + algorithm\n+          + \", Received \" + checksum.getAlgorithmName());\n     }\n     //check length\n     if (length !\u003d checksum.getLength()) {\n       throw new IOException(\"Length not matched: length\u003d\" + length\n           + \", checksum.getLength()\u003d\" + checksum.getLength());\n     }\n \n     return checksum;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n      final Map\u003c?, ?\u003e json) throws IOException {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(FileChecksum.class.getSimpleName());\n    final String algorithm \u003d (String)m.get(\"algorithm\");\n    final int length \u003d (int)(long)(Long)m.get(\"length\");\n    final byte[] bytes \u003d StringUtils.hexStringToByte((String)m.get(\"bytes\"));\n\n    final DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(bytes));\n    final MD5MD5CRC32FileChecksum checksum \u003d new MD5MD5CRC32FileChecksum();\n    checksum.readFields(in);\n\n    //check algorithm name\n    if (!checksum.getAlgorithmName().equals(algorithm)) {\n      throw new IOException(\"Algorithm not matched. Expected \" + algorithm\n          + \", Received \" + checksum.getAlgorithmName());\n    }\n    //check length\n    if (length !\u003d checksum.getLength()) {\n      throw new IOException(\"Length not matched: length\u003d\" + length\n          + \", checksum.getLength()\u003d\" + checksum.getLength());\n    }\n\n    return checksum;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "8cb0d4b380e0fd4437310c1dd6ef8b8995cc383d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2432. Webhdfs: response FORBIDDEN when setReplication on non-files; clear umask before creating a flie; throw IllegalArgumentException if setOwner with both owner and group empty; throw FileNotFoundException if getFileStatus on non-existing files; fix bugs in getBlockLocations; and changed getFileChecksum json response root to \"FileChecksum\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190077 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 4:13 PM",
      "commitName": "8cb0d4b380e0fd4437310c1dd6ef8b8995cc383d",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "13/10/11 2:06 PM",
      "commitNameOld": "5904e00b4f7991014d57616fb613d647d4b5e58e",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 14.09,
      "commitsBetweenForRepo": 127,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,33 @@\n   public static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n       final Map\u003c?, ?\u003e json) throws IOException {\n     if (json \u003d\u003d null) {\n       return null;\n     }\n \n-    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(\n-        MD5MD5CRC32FileChecksum.class.getSimpleName());\n+    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(FileChecksum.class.getSimpleName());\n     final String algorithm \u003d (String)m.get(\"algorithm\");\n     final int length \u003d (int)(long)(Long)m.get(\"length\");\n     final byte[] bytes \u003d StringUtils.hexStringToByte((String)m.get(\"bytes\"));\n \n     final DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(bytes));\n     final int bytesPerCRC \u003d in.readInt();\n     final long crcPerBlock \u003d in.readLong();\n     final MD5Hash md5 \u003d MD5Hash.read(in);\n     final MD5MD5CRC32FileChecksum checksum \u003d new MD5MD5CRC32FileChecksum(\n         bytesPerCRC, crcPerBlock, md5);\n \n     //check algorithm name\n     final String alg \u003d \"MD5-of-\" + crcPerBlock + \"MD5-of-\" + bytesPerCRC + \"CRC32\";\n     if (!alg.equals(algorithm)) {\n       throw new IOException(\"Algorithm not matched: algorithm\u003d\" + algorithm\n           + \", crcPerBlock\u003d\" + crcPerBlock\n           + \", bytesPerCRC\u003d\" + bytesPerCRC);\n     }\n     //check length\n     if (length !\u003d checksum.getLength()) {\n       throw new IOException(\"Length not matched: length\u003d\" + length\n           + \", checksum.getLength()\u003d\" + checksum.getLength());\n     }\n \n     return checksum;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n      final Map\u003c?, ?\u003e json) throws IOException {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(FileChecksum.class.getSimpleName());\n    final String algorithm \u003d (String)m.get(\"algorithm\");\n    final int length \u003d (int)(long)(Long)m.get(\"length\");\n    final byte[] bytes \u003d StringUtils.hexStringToByte((String)m.get(\"bytes\"));\n\n    final DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(bytes));\n    final int bytesPerCRC \u003d in.readInt();\n    final long crcPerBlock \u003d in.readLong();\n    final MD5Hash md5 \u003d MD5Hash.read(in);\n    final MD5MD5CRC32FileChecksum checksum \u003d new MD5MD5CRC32FileChecksum(\n        bytesPerCRC, crcPerBlock, md5);\n\n    //check algorithm name\n    final String alg \u003d \"MD5-of-\" + crcPerBlock + \"MD5-of-\" + bytesPerCRC + \"CRC32\";\n    if (!alg.equals(algorithm)) {\n      throw new IOException(\"Algorithm not matched: algorithm\u003d\" + algorithm\n          + \", crcPerBlock\u003d\" + crcPerBlock\n          + \", bytesPerCRC\u003d\" + bytesPerCRC);\n    }\n    //check length\n    if (length !\u003d checksum.getLength()) {\n      throw new IOException(\"Length not matched: length\u003d\" + length\n          + \", checksum.getLength()\u003d\" + checksum.getLength());\n    }\n\n    return checksum;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "1b1016beeb716bef8dad93bb2c7c4631a14b3d57": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-2395. Add a root element in the JSON responses of webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/10/11 4:29 AM",
      "commitName": "1b1016beeb716bef8dad93bb2c7c4631a14b3d57",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-2395. Add a root element in the JSON responses of webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179169 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "05/10/11 4:29 AM",
          "commitName": "1b1016beeb716bef8dad93bb2c7c4631a14b3d57",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "30/09/11 9:49 PM",
          "commitNameOld": "dc8464f943b61b795df0cc8baec171bf07355763",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 4.28,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,34 @@\n   public static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n-      final Map\u003cString, Object\u003e m) throws IOException {\n-    if (m \u003d\u003d null) {\n+      final Map\u003c?, ?\u003e json) throws IOException {\n+    if (json \u003d\u003d null) {\n       return null;\n     }\n \n-    final int bytesPerCRC \u003d (int)(long)(Long)m.get(\"bytesPerCRC\");\n-    final long crcPerBlock \u003d (Long)m.get(\"crcPerBlock\");\n-    final String md5 \u003d (String)m.get(\"md5\");\n+    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(\n+        MD5MD5CRC32FileChecksum.class.getSimpleName());\n+    final String algorithm \u003d (String)m.get(\"algorithm\");\n+    final int length \u003d (int)(long)(Long)m.get(\"length\");\n+    final byte[] bytes \u003d StringUtils.hexStringToByte((String)m.get(\"bytes\"));\n \n-    return new MD5MD5CRC32FileChecksum(bytesPerCRC, crcPerBlock,\n-        new MD5Hash(md5));\n+    final DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(bytes));\n+    final int bytesPerCRC \u003d in.readInt();\n+    final long crcPerBlock \u003d in.readLong();\n+    final MD5Hash md5 \u003d MD5Hash.read(in);\n+    final MD5MD5CRC32FileChecksum checksum \u003d new MD5MD5CRC32FileChecksum(\n+        bytesPerCRC, crcPerBlock, md5);\n+\n+    //check algorithm name\n+    final String alg \u003d \"MD5-of-\" + crcPerBlock + \"MD5-of-\" + bytesPerCRC + \"CRC32\";\n+    if (!alg.equals(algorithm)) {\n+      throw new IOException(\"Algorithm not matched: algorithm\u003d\" + algorithm\n+          + \", crcPerBlock\u003d\" + crcPerBlock\n+          + \", bytesPerCRC\u003d\" + bytesPerCRC);\n+    }\n+    //check length\n+    if (length !\u003d checksum.getLength()) {\n+      throw new IOException(\"Length not matched: length\u003d\" + length\n+          + \", checksum.getLength()\u003d\" + checksum.getLength());\n+    }\n+\n+    return checksum;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n      final Map\u003c?, ?\u003e json) throws IOException {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(\n        MD5MD5CRC32FileChecksum.class.getSimpleName());\n    final String algorithm \u003d (String)m.get(\"algorithm\");\n    final int length \u003d (int)(long)(Long)m.get(\"length\");\n    final byte[] bytes \u003d StringUtils.hexStringToByte((String)m.get(\"bytes\"));\n\n    final DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(bytes));\n    final int bytesPerCRC \u003d in.readInt();\n    final long crcPerBlock \u003d in.readLong();\n    final MD5Hash md5 \u003d MD5Hash.read(in);\n    final MD5MD5CRC32FileChecksum checksum \u003d new MD5MD5CRC32FileChecksum(\n        bytesPerCRC, crcPerBlock, md5);\n\n    //check algorithm name\n    final String alg \u003d \"MD5-of-\" + crcPerBlock + \"MD5-of-\" + bytesPerCRC + \"CRC32\";\n    if (!alg.equals(algorithm)) {\n      throw new IOException(\"Algorithm not matched: algorithm\u003d\" + algorithm\n          + \", crcPerBlock\u003d\" + crcPerBlock\n          + \", bytesPerCRC\u003d\" + bytesPerCRC);\n    }\n    //check length\n    if (length !\u003d checksum.getLength()) {\n      throw new IOException(\"Length not matched: length\u003d\" + length\n          + \", checksum.getLength()\u003d\" + checksum.getLength());\n    }\n\n    return checksum;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
          "extendedDetails": {
            "oldValue": "[m-Map\u003cString,Object\u003e(modifiers-final)]",
            "newValue": "[json-Map\u003c?,?\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2395. Add a root element in the JSON responses of webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179169 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "05/10/11 4:29 AM",
          "commitName": "1b1016beeb716bef8dad93bb2c7c4631a14b3d57",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "30/09/11 9:49 PM",
          "commitNameOld": "dc8464f943b61b795df0cc8baec171bf07355763",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 4.28,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,34 @@\n   public static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n-      final Map\u003cString, Object\u003e m) throws IOException {\n-    if (m \u003d\u003d null) {\n+      final Map\u003c?, ?\u003e json) throws IOException {\n+    if (json \u003d\u003d null) {\n       return null;\n     }\n \n-    final int bytesPerCRC \u003d (int)(long)(Long)m.get(\"bytesPerCRC\");\n-    final long crcPerBlock \u003d (Long)m.get(\"crcPerBlock\");\n-    final String md5 \u003d (String)m.get(\"md5\");\n+    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(\n+        MD5MD5CRC32FileChecksum.class.getSimpleName());\n+    final String algorithm \u003d (String)m.get(\"algorithm\");\n+    final int length \u003d (int)(long)(Long)m.get(\"length\");\n+    final byte[] bytes \u003d StringUtils.hexStringToByte((String)m.get(\"bytes\"));\n \n-    return new MD5MD5CRC32FileChecksum(bytesPerCRC, crcPerBlock,\n-        new MD5Hash(md5));\n+    final DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(bytes));\n+    final int bytesPerCRC \u003d in.readInt();\n+    final long crcPerBlock \u003d in.readLong();\n+    final MD5Hash md5 \u003d MD5Hash.read(in);\n+    final MD5MD5CRC32FileChecksum checksum \u003d new MD5MD5CRC32FileChecksum(\n+        bytesPerCRC, crcPerBlock, md5);\n+\n+    //check algorithm name\n+    final String alg \u003d \"MD5-of-\" + crcPerBlock + \"MD5-of-\" + bytesPerCRC + \"CRC32\";\n+    if (!alg.equals(algorithm)) {\n+      throw new IOException(\"Algorithm not matched: algorithm\u003d\" + algorithm\n+          + \", crcPerBlock\u003d\" + crcPerBlock\n+          + \", bytesPerCRC\u003d\" + bytesPerCRC);\n+    }\n+    //check length\n+    if (length !\u003d checksum.getLength()) {\n+      throw new IOException(\"Length not matched: length\u003d\" + length\n+          + \", checksum.getLength()\u003d\" + checksum.getLength());\n+    }\n+\n+    return checksum;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n      final Map\u003c?, ?\u003e json) throws IOException {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(\n        MD5MD5CRC32FileChecksum.class.getSimpleName());\n    final String algorithm \u003d (String)m.get(\"algorithm\");\n    final int length \u003d (int)(long)(Long)m.get(\"length\");\n    final byte[] bytes \u003d StringUtils.hexStringToByte((String)m.get(\"bytes\"));\n\n    final DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(bytes));\n    final int bytesPerCRC \u003d in.readInt();\n    final long crcPerBlock \u003d in.readLong();\n    final MD5Hash md5 \u003d MD5Hash.read(in);\n    final MD5MD5CRC32FileChecksum checksum \u003d new MD5MD5CRC32FileChecksum(\n        bytesPerCRC, crcPerBlock, md5);\n\n    //check algorithm name\n    final String alg \u003d \"MD5-of-\" + crcPerBlock + \"MD5-of-\" + bytesPerCRC + \"CRC32\";\n    if (!alg.equals(algorithm)) {\n      throw new IOException(\"Algorithm not matched: algorithm\u003d\" + algorithm\n          + \", crcPerBlock\u003d\" + crcPerBlock\n          + \", bytesPerCRC\u003d\" + bytesPerCRC);\n    }\n    //check length\n    if (length !\u003d checksum.getLength()) {\n      throw new IOException(\"Length not matched: length\u003d\" + length\n          + \", checksum.getLength()\u003d\" + checksum.getLength());\n    }\n\n    return checksum;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "dc8464f943b61b795df0cc8baec171bf07355763": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2348. Support getContentSummary and getFileChecksum in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177905 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/09/11 9:49 PM",
      "commitName": "dc8464f943b61b795df0cc8baec171bf07355763",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,13 @@\n+  public static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n+      final Map\u003cString, Object\u003e m) throws IOException {\n+    if (m \u003d\u003d null) {\n+      return null;\n+    }\n+\n+    final int bytesPerCRC \u003d (int)(long)(Long)m.get(\"bytesPerCRC\");\n+    final long crcPerBlock \u003d (Long)m.get(\"crcPerBlock\");\n+    final String md5 \u003d (String)m.get(\"md5\");\n+\n+    return new MD5MD5CRC32FileChecksum(bytesPerCRC, crcPerBlock,\n+        new MD5Hash(md5));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static MD5MD5CRC32FileChecksum toMD5MD5CRC32FileChecksum(\n      final Map\u003cString, Object\u003e m) throws IOException {\n    if (m \u003d\u003d null) {\n      return null;\n    }\n\n    final int bytesPerCRC \u003d (int)(long)(Long)m.get(\"bytesPerCRC\");\n    final long crcPerBlock \u003d (Long)m.get(\"crcPerBlock\");\n    final String md5 \u003d (String)m.get(\"md5\");\n\n    return new MD5MD5CRC32FileChecksum(bytesPerCRC, crcPerBlock,\n        new MD5Hash(md5));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java"
    }
  }
}