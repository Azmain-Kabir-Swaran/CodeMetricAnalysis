{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMWebServices.java",
  "functionName": "getNodeApps",
  "functionId": "getNodeApps___hsr-HttpServletRequest(annotations-@javax.ws.rs.core.Context)__stateQuery-String(annotations-@QueryParam(\"state\"))__userQuery-String(annotations-@QueryParam(\"user\"))",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
  "functionStartLine": 168,
  "functionEndLine": 203,
  "numCommitsSeen": 59,
  "timeTaken": 3648,
  "changeHistory": [
    "c05b5d424b000bab766f57e88a07f2b4e9a56647",
    "34ef1a092bcab369bb845481efffb8c47adef53a",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "e7583d816a69677bbaa4280deb58ea73dbc42cef",
    "f025652fdafae4d385d4174f48cb4246d07caa3b",
    "0ea8570be578be60e2f32849900a1c50506d78d3"
  ],
  "changeHistoryShort": {
    "c05b5d424b000bab766f57e88a07f2b4e9a56647": "Ymultichange(Yparameterchange,Ybodychange)",
    "34ef1a092bcab369bb845481efffb8c47adef53a": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "e7583d816a69677bbaa4280deb58ea73dbc42cef": "Ybodychange",
    "f025652fdafae4d385d4174f48cb4246d07caa3b": "Ybodychange",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c05b5d424b000bab766f57e88a07f2b4e9a56647": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8319. More YARN pages need to honor yarn.resourcemanager.display.per-user-apps. Contributed by Sunil G.\n",
      "commitDate": "24/05/18 1:49 AM",
      "commitName": "c05b5d424b000bab766f57e88a07f2b4e9a56647",
      "commitAuthor": "Rohith Sharma K S",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8319. More YARN pages need to honor yarn.resourcemanager.display.per-user-apps. Contributed by Sunil G.\n",
          "commitDate": "24/05/18 1:49 AM",
          "commitName": "c05b5d424b000bab766f57e88a07f2b4e9a56647",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "29/11/17 5:46 PM",
          "commitNameOld": "c9a54aab6b1ad91b14de934178018d8e7eecd001",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 175.29,
          "commitsBetweenForRepo": 1789,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,36 @@\n-  public AppsInfo getNodeApps(@QueryParam(\"state\") String stateQuery,\n+  public AppsInfo getNodeApps(@javax.ws.rs.core.Context HttpServletRequest hsr,\n+      @QueryParam(\"state\") String stateQuery,\n       @QueryParam(\"user\") String userQuery) {\n     init();\n     AppsInfo allApps \u003d new AppsInfo();\n     for (Entry\u003cApplicationId, Application\u003e entry : this.nmContext\n         .getApplications().entrySet()) {\n \n       AppInfo appInfo \u003d new AppInfo(entry.getValue());\n       if (stateQuery !\u003d null \u0026\u0026 !stateQuery.isEmpty()) {\n         ApplicationState.valueOf(stateQuery);\n         if (!appInfo.getState().equalsIgnoreCase(stateQuery)) {\n           continue;\n         }\n       }\n       if (userQuery !\u003d null) {\n         if (userQuery.isEmpty()) {\n           String msg \u003d \"Error: You must specify a non-empty string for the user\";\n           throw new BadRequestException(msg);\n         }\n         if (!appInfo.getUser().equals(userQuery)) {\n           continue;\n         }\n       }\n+\n+      // Allow only application-owner/admin for any type of access on the\n+      // application.\n+      if (filterAppsByUser\n+          \u0026\u0026 !hasAccess(appInfo.getUser(), entry.getKey(), hsr)) {\n+        continue;\n+      }\n+\n       allApps.add(appInfo);\n     }\n     return allApps;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public AppsInfo getNodeApps(@javax.ws.rs.core.Context HttpServletRequest hsr,\n      @QueryParam(\"state\") String stateQuery,\n      @QueryParam(\"user\") String userQuery) {\n    init();\n    AppsInfo allApps \u003d new AppsInfo();\n    for (Entry\u003cApplicationId, Application\u003e entry : this.nmContext\n        .getApplications().entrySet()) {\n\n      AppInfo appInfo \u003d new AppInfo(entry.getValue());\n      if (stateQuery !\u003d null \u0026\u0026 !stateQuery.isEmpty()) {\n        ApplicationState.valueOf(stateQuery);\n        if (!appInfo.getState().equalsIgnoreCase(stateQuery)) {\n          continue;\n        }\n      }\n      if (userQuery !\u003d null) {\n        if (userQuery.isEmpty()) {\n          String msg \u003d \"Error: You must specify a non-empty string for the user\";\n          throw new BadRequestException(msg);\n        }\n        if (!appInfo.getUser().equals(userQuery)) {\n          continue;\n        }\n      }\n\n      // Allow only application-owner/admin for any type of access on the\n      // application.\n      if (filterAppsByUser\n          \u0026\u0026 !hasAccess(appInfo.getUser(), entry.getKey(), hsr)) {\n        continue;\n      }\n\n      allApps.add(appInfo);\n    }\n    return allApps;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
          "extendedDetails": {
            "oldValue": "[stateQuery-String(annotations-@QueryParam(\"state\")), userQuery-String(annotations-@QueryParam(\"user\"))]",
            "newValue": "[hsr-HttpServletRequest(annotations-@javax.ws.rs.core.Context), stateQuery-String(annotations-@QueryParam(\"state\")), userQuery-String(annotations-@QueryParam(\"user\"))]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8319. More YARN pages need to honor yarn.resourcemanager.display.per-user-apps. Contributed by Sunil G.\n",
          "commitDate": "24/05/18 1:49 AM",
          "commitName": "c05b5d424b000bab766f57e88a07f2b4e9a56647",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "29/11/17 5:46 PM",
          "commitNameOld": "c9a54aab6b1ad91b14de934178018d8e7eecd001",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 175.29,
          "commitsBetweenForRepo": 1789,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,36 @@\n-  public AppsInfo getNodeApps(@QueryParam(\"state\") String stateQuery,\n+  public AppsInfo getNodeApps(@javax.ws.rs.core.Context HttpServletRequest hsr,\n+      @QueryParam(\"state\") String stateQuery,\n       @QueryParam(\"user\") String userQuery) {\n     init();\n     AppsInfo allApps \u003d new AppsInfo();\n     for (Entry\u003cApplicationId, Application\u003e entry : this.nmContext\n         .getApplications().entrySet()) {\n \n       AppInfo appInfo \u003d new AppInfo(entry.getValue());\n       if (stateQuery !\u003d null \u0026\u0026 !stateQuery.isEmpty()) {\n         ApplicationState.valueOf(stateQuery);\n         if (!appInfo.getState().equalsIgnoreCase(stateQuery)) {\n           continue;\n         }\n       }\n       if (userQuery !\u003d null) {\n         if (userQuery.isEmpty()) {\n           String msg \u003d \"Error: You must specify a non-empty string for the user\";\n           throw new BadRequestException(msg);\n         }\n         if (!appInfo.getUser().equals(userQuery)) {\n           continue;\n         }\n       }\n+\n+      // Allow only application-owner/admin for any type of access on the\n+      // application.\n+      if (filterAppsByUser\n+          \u0026\u0026 !hasAccess(appInfo.getUser(), entry.getKey(), hsr)) {\n+        continue;\n+      }\n+\n       allApps.add(appInfo);\n     }\n     return allApps;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public AppsInfo getNodeApps(@javax.ws.rs.core.Context HttpServletRequest hsr,\n      @QueryParam(\"state\") String stateQuery,\n      @QueryParam(\"user\") String userQuery) {\n    init();\n    AppsInfo allApps \u003d new AppsInfo();\n    for (Entry\u003cApplicationId, Application\u003e entry : this.nmContext\n        .getApplications().entrySet()) {\n\n      AppInfo appInfo \u003d new AppInfo(entry.getValue());\n      if (stateQuery !\u003d null \u0026\u0026 !stateQuery.isEmpty()) {\n        ApplicationState.valueOf(stateQuery);\n        if (!appInfo.getState().equalsIgnoreCase(stateQuery)) {\n          continue;\n        }\n      }\n      if (userQuery !\u003d null) {\n        if (userQuery.isEmpty()) {\n          String msg \u003d \"Error: You must specify a non-empty string for the user\";\n          throw new BadRequestException(msg);\n        }\n        if (!appInfo.getUser().equals(userQuery)) {\n          continue;\n        }\n      }\n\n      // Allow only application-owner/admin for any type of access on the\n      // application.\n      if (filterAppsByUser\n          \u0026\u0026 !hasAccess(appInfo.getUser(), entry.getKey(), hsr)) {\n        continue;\n      }\n\n      allApps.add(appInfo);\n    }\n    return allApps;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
          "extendedDetails": {}
        }
      ]
    },
    "34ef1a092bcab369bb845481efffb8c47adef53a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4149. yarn logs -am should provide an option to fetch all the log\nfiles. Contributed by Varun Vasudev\n",
      "commitDate": "15/09/15 2:36 PM",
      "commitName": "34ef1a092bcab369bb845481efffb8c47adef53a",
      "commitAuthor": "Xuan",
      "commitDateOld": "01/09/13 5:09 PM",
      "commitNameOld": "a759abcd898224c3481c55aa7e424bc286f60b15",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 743.89,
      "commitsBetweenForRepo": 5644,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public AppsInfo getNodeApps(@QueryParam(\"state\") String stateQuery,\n       @QueryParam(\"user\") String userQuery) {\n     init();\n     AppsInfo allApps \u003d new AppsInfo();\n     for (Entry\u003cApplicationId, Application\u003e entry : this.nmContext\n         .getApplications().entrySet()) {\n \n       AppInfo appInfo \u003d new AppInfo(entry.getValue());\n       if (stateQuery !\u003d null \u0026\u0026 !stateQuery.isEmpty()) {\n         ApplicationState.valueOf(stateQuery);\n         if (!appInfo.getState().equalsIgnoreCase(stateQuery)) {\n           continue;\n         }\n       }\n       if (userQuery !\u003d null) {\n         if (userQuery.isEmpty()) {\n           String msg \u003d \"Error: You must specify a non-empty string for the user\";\n           throw new BadRequestException(msg);\n         }\n-        if (!appInfo.getUser().toString().equals(userQuery)) {\n+        if (!appInfo.getUser().equals(userQuery)) {\n           continue;\n         }\n       }\n       allApps.add(appInfo);\n     }\n     return allApps;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppsInfo getNodeApps(@QueryParam(\"state\") String stateQuery,\n      @QueryParam(\"user\") String userQuery) {\n    init();\n    AppsInfo allApps \u003d new AppsInfo();\n    for (Entry\u003cApplicationId, Application\u003e entry : this.nmContext\n        .getApplications().entrySet()) {\n\n      AppInfo appInfo \u003d new AppInfo(entry.getValue());\n      if (stateQuery !\u003d null \u0026\u0026 !stateQuery.isEmpty()) {\n        ApplicationState.valueOf(stateQuery);\n        if (!appInfo.getState().equalsIgnoreCase(stateQuery)) {\n          continue;\n        }\n      }\n      if (userQuery !\u003d null) {\n        if (userQuery.isEmpty()) {\n          String msg \u003d \"Error: You must specify a non-empty string for the user\";\n          throw new BadRequestException(msg);\n        }\n        if (!appInfo.getUser().equals(userQuery)) {\n          continue;\n        }\n      }\n      allApps.add(appInfo);\n    }\n    return allApps;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public AppsInfo getNodeApps(@QueryParam(\"state\") String stateQuery,\n      @QueryParam(\"user\") String userQuery) {\n    init();\n    AppsInfo allApps \u003d new AppsInfo();\n    for (Entry\u003cApplicationId, Application\u003e entry : this.nmContext\n        .getApplications().entrySet()) {\n\n      AppInfo appInfo \u003d new AppInfo(entry.getValue());\n      if (stateQuery !\u003d null \u0026\u0026 !stateQuery.isEmpty()) {\n        ApplicationState.valueOf(stateQuery);\n        if (!appInfo.getState().equalsIgnoreCase(stateQuery)) {\n          continue;\n        }\n      }\n      if (userQuery !\u003d null) {\n        if (userQuery.isEmpty()) {\n          String msg \u003d \"Error: You must specify a non-empty string for the user\";\n          throw new BadRequestException(msg);\n        }\n        if (!appInfo.getUser().toString().equals(userQuery)) {\n          continue;\n        }\n      }\n      allApps.add(appInfo);\n    }\n    return allApps;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java"
      }
    },
    "e7583d816a69677bbaa4280deb58ea73dbc42cef": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3613. web service calls header contains 2 content types (tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1330560 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/04/12 2:13 PM",
      "commitName": "e7583d816a69677bbaa4280deb58ea73dbc42cef",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "29/12/11 12:06 AM",
      "commitNameOld": "f025652fdafae4d385d4174f48cb4246d07caa3b",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 118.55,
      "commitsBetweenForRepo": 884,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   public AppsInfo getNodeApps(@QueryParam(\"state\") String stateQuery,\n       @QueryParam(\"user\") String userQuery) {\n+    init();\n     AppsInfo allApps \u003d new AppsInfo();\n     for (Entry\u003cApplicationId, Application\u003e entry : this.nmContext\n         .getApplications().entrySet()) {\n \n       AppInfo appInfo \u003d new AppInfo(entry.getValue());\n       if (stateQuery !\u003d null \u0026\u0026 !stateQuery.isEmpty()) {\n         ApplicationState.valueOf(stateQuery);\n         if (!appInfo.getState().equalsIgnoreCase(stateQuery)) {\n           continue;\n         }\n       }\n       if (userQuery !\u003d null) {\n         if (userQuery.isEmpty()) {\n           String msg \u003d \"Error: You must specify a non-empty string for the user\";\n           throw new BadRequestException(msg);\n         }\n         if (!appInfo.getUser().toString().equals(userQuery)) {\n           continue;\n         }\n       }\n       allApps.add(appInfo);\n     }\n     return allApps;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppsInfo getNodeApps(@QueryParam(\"state\") String stateQuery,\n      @QueryParam(\"user\") String userQuery) {\n    init();\n    AppsInfo allApps \u003d new AppsInfo();\n    for (Entry\u003cApplicationId, Application\u003e entry : this.nmContext\n        .getApplications().entrySet()) {\n\n      AppInfo appInfo \u003d new AppInfo(entry.getValue());\n      if (stateQuery !\u003d null \u0026\u0026 !stateQuery.isEmpty()) {\n        ApplicationState.valueOf(stateQuery);\n        if (!appInfo.getState().equalsIgnoreCase(stateQuery)) {\n          continue;\n        }\n      }\n      if (userQuery !\u003d null) {\n        if (userQuery.isEmpty()) {\n          String msg \u003d \"Error: You must specify a non-empty string for the user\";\n          throw new BadRequestException(msg);\n        }\n        if (!appInfo.getUser().toString().equals(userQuery)) {\n          continue;\n        }\n      }\n      allApps.add(appInfo);\n    }\n    return allApps;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
      "extendedDetails": {}
    },
    "f025652fdafae4d385d4174f48cb4246d07caa3b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3547. Added a bunch of unit tests for the the RM/NM webservices. Contributed by Thomas Graves.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1225463 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/12/11 12:06 AM",
      "commitName": "f025652fdafae4d385d4174f48cb4246d07caa3b",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "13/12/11 3:05 PM",
      "commitNameOld": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 15.38,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,26 @@\n   public AppsInfo getNodeApps(@QueryParam(\"state\") String stateQuery,\n       @QueryParam(\"user\") String userQuery) {\n     AppsInfo allApps \u003d new AppsInfo();\n     for (Entry\u003cApplicationId, Application\u003e entry : this.nmContext\n         .getApplications().entrySet()) {\n \n       AppInfo appInfo \u003d new AppInfo(entry.getValue());\n       if (stateQuery !\u003d null \u0026\u0026 !stateQuery.isEmpty()) {\n-        ApplicationState state \u003d ApplicationState.valueOf(stateQuery);\n+        ApplicationState.valueOf(stateQuery);\n         if (!appInfo.getState().equalsIgnoreCase(stateQuery)) {\n           continue;\n         }\n       }\n-      if (userQuery !\u003d null \u0026\u0026 !userQuery.isEmpty()) {\n+      if (userQuery !\u003d null) {\n+        if (userQuery.isEmpty()) {\n+          String msg \u003d \"Error: You must specify a non-empty string for the user\";\n+          throw new BadRequestException(msg);\n+        }\n         if (!appInfo.getUser().toString().equals(userQuery)) {\n           continue;\n         }\n       }\n       allApps.add(appInfo);\n     }\n     return allApps;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppsInfo getNodeApps(@QueryParam(\"state\") String stateQuery,\n      @QueryParam(\"user\") String userQuery) {\n    AppsInfo allApps \u003d new AppsInfo();\n    for (Entry\u003cApplicationId, Application\u003e entry : this.nmContext\n        .getApplications().entrySet()) {\n\n      AppInfo appInfo \u003d new AppInfo(entry.getValue());\n      if (stateQuery !\u003d null \u0026\u0026 !stateQuery.isEmpty()) {\n        ApplicationState.valueOf(stateQuery);\n        if (!appInfo.getState().equalsIgnoreCase(stateQuery)) {\n          continue;\n        }\n      }\n      if (userQuery !\u003d null) {\n        if (userQuery.isEmpty()) {\n          String msg \u003d \"Error: You must specify a non-empty string for the user\";\n          throw new BadRequestException(msg);\n        }\n        if (!appInfo.getUser().toString().equals(userQuery)) {\n          continue;\n        }\n      }\n      allApps.add(appInfo);\n    }\n    return allApps;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java",
      "extendedDetails": {}
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,22 @@\n+  public AppsInfo getNodeApps(@QueryParam(\"state\") String stateQuery,\n+      @QueryParam(\"user\") String userQuery) {\n+    AppsInfo allApps \u003d new AppsInfo();\n+    for (Entry\u003cApplicationId, Application\u003e entry : this.nmContext\n+        .getApplications().entrySet()) {\n+\n+      AppInfo appInfo \u003d new AppInfo(entry.getValue());\n+      if (stateQuery !\u003d null \u0026\u0026 !stateQuery.isEmpty()) {\n+        ApplicationState state \u003d ApplicationState.valueOf(stateQuery);\n+        if (!appInfo.getState().equalsIgnoreCase(stateQuery)) {\n+          continue;\n+        }\n+      }\n+      if (userQuery !\u003d null \u0026\u0026 !userQuery.isEmpty()) {\n+        if (!appInfo.getUser().toString().equals(userQuery)) {\n+          continue;\n+        }\n+      }\n+      allApps.add(appInfo);\n+    }\n+    return allApps;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public AppsInfo getNodeApps(@QueryParam(\"state\") String stateQuery,\n      @QueryParam(\"user\") String userQuery) {\n    AppsInfo allApps \u003d new AppsInfo();\n    for (Entry\u003cApplicationId, Application\u003e entry : this.nmContext\n        .getApplications().entrySet()) {\n\n      AppInfo appInfo \u003d new AppInfo(entry.getValue());\n      if (stateQuery !\u003d null \u0026\u0026 !stateQuery.isEmpty()) {\n        ApplicationState state \u003d ApplicationState.valueOf(stateQuery);\n        if (!appInfo.getState().equalsIgnoreCase(stateQuery)) {\n          continue;\n        }\n      }\n      if (userQuery !\u003d null \u0026\u0026 !userQuery.isEmpty()) {\n        if (!appInfo.getUser().toString().equals(userQuery)) {\n          continue;\n        }\n      }\n      allApps.add(appInfo);\n    }\n    return allApps;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NMWebServices.java"
    }
  }
}