{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HBaseTimelineWriterImpl.java",
  "functionName": "serviceInit",
  "functionId": "serviceInit___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
  "functionStartLine": 135,
  "functionEndLine": 156,
  "numCommitsSeen": 36,
  "timeTaken": 5201,
  "changeHistory": [
    "b220ec6f613dca4542e256008b1be2689c67bb03",
    "e3b7d7ac1694b8766ae11bc7e8ecf09763bb26db",
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "443523f9c0fcc4ba2503791090b1879c6031759b",
    "9f6540535d9148abbea836d54a9e94d25319c5d5",
    "643a20a358e2e7e7f6d39d6890409ef7cb73d030",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "a68e3839218523403f42acd7bdd7ce1da59a5e60",
    "00e85e7a2b9446dc37265feba07473b156d66367",
    "9e5155be363c6610ccf41fe08b7f1394f353ea65",
    "92d90c3a243134177f192d1d473dd606c79a91fc",
    "5a4278ccbd22b50ea1e80d28c3eea1777ffc2875"
  ],
  "changeHistoryShort": {
    "b220ec6f613dca4542e256008b1be2689c67bb03": "Ybodychange",
    "e3b7d7ac1694b8766ae11bc7e8ecf09763bb26db": "Ybodychange",
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Ymultichange(Yfilerename,Ybodychange)",
    "443523f9c0fcc4ba2503791090b1879c6031759b": "Ybodychange",
    "9f6540535d9148abbea836d54a9e94d25319c5d5": "Ybodychange",
    "643a20a358e2e7e7f6d39d6890409ef7cb73d030": "Ybodychange",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "a68e3839218523403f42acd7bdd7ce1da59a5e60": "Ybodychange",
    "00e85e7a2b9446dc37265feba07473b156d66367": "Ybodychange",
    "9e5155be363c6610ccf41fe08b7f1394f353ea65": "Ybodychange",
    "92d90c3a243134177f192d1d473dd606c79a91fc": "Ybodychange",
    "5a4278ccbd22b50ea1e80d28c3eea1777ffc2875": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b220ec6f613dca4542e256008b1be2689c67bb03": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9374.  Improve Timeline service resilience when HBase is unavailable.\n            Contributed by Prabhu Joseph and Szilard Nemeth\n",
      "commitDate": "24/06/19 9:19 AM",
      "commitName": "b220ec6f613dca4542e256008b1be2689c67bb03",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "16/05/18 1:00 PM",
      "commitNameOld": "e3b7d7ac1694b8766ae11bc7e8ecf09763bb26db",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 403.85,
      "commitsBetweenForRepo": 3022,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     super.serviceInit(conf);\n     Configuration hbaseConf \u003d\n         HBaseTimelineStorageUtils.getTimelineServiceHBaseConf(conf);\n     conn \u003d ConnectionFactory.createConnection(hbaseConf);\n     entityTable \u003d new EntityTableRW().getTableMutator(hbaseConf, conn);\n     appToFlowTable \u003d new AppToFlowTableRW().getTableMutator(hbaseConf, conn);\n     applicationTable \u003d\n         new ApplicationTableRW().getTableMutator(hbaseConf, conn);\n     flowRunTable \u003d new FlowRunTableRW().getTableMutator(hbaseConf, conn);\n     flowActivityTable \u003d\n         new FlowActivityTableRW().getTableMutator(hbaseConf, conn);\n     subApplicationTable \u003d\n         new SubApplicationTableRW().getTableMutator(hbaseConf, conn);\n     domainTable \u003d new DomainTableRW().getTableMutator(hbaseConf, conn);\n \n     UserGroupInformation ugi \u003d UserGroupInformation.isSecurityEnabled() ?\n         UserGroupInformation.getLoginUser() :\n         UserGroupInformation.getCurrentUser();\n+    storageMonitor \u003d new HBaseStorageMonitor(conf);\n     LOG.info(\"Initialized HBaseTimelineWriterImpl UGI to \" + ugi);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n    Configuration hbaseConf \u003d\n        HBaseTimelineStorageUtils.getTimelineServiceHBaseConf(conf);\n    conn \u003d ConnectionFactory.createConnection(hbaseConf);\n    entityTable \u003d new EntityTableRW().getTableMutator(hbaseConf, conn);\n    appToFlowTable \u003d new AppToFlowTableRW().getTableMutator(hbaseConf, conn);\n    applicationTable \u003d\n        new ApplicationTableRW().getTableMutator(hbaseConf, conn);\n    flowRunTable \u003d new FlowRunTableRW().getTableMutator(hbaseConf, conn);\n    flowActivityTable \u003d\n        new FlowActivityTableRW().getTableMutator(hbaseConf, conn);\n    subApplicationTable \u003d\n        new SubApplicationTableRW().getTableMutator(hbaseConf, conn);\n    domainTable \u003d new DomainTableRW().getTableMutator(hbaseConf, conn);\n\n    UserGroupInformation ugi \u003d UserGroupInformation.isSecurityEnabled() ?\n        UserGroupInformation.getLoginUser() :\n        UserGroupInformation.getCurrentUser();\n    storageMonitor \u003d new HBaseStorageMonitor(conf);\n    LOG.info(\"Initialized HBaseTimelineWriterImpl UGI to \" + ugi);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "e3b7d7ac1694b8766ae11bc7e8ecf09763bb26db": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7933. [atsv2 read acls] Add TimelineWriter#writeDomain. (Rohith Sharma K S via Haibo Chen)\n",
      "commitDate": "16/05/18 1:00 PM",
      "commitName": "e3b7d7ac1694b8766ae11bc7e8ecf09763bb26db",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "05/04/18 10:23 AM",
      "commitNameOld": "f8b8bd53c4797d406bea5b1b0cdb179e209169cc",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 41.11,
      "commitsBetweenForRepo": 803,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     super.serviceInit(conf);\n     Configuration hbaseConf \u003d\n         HBaseTimelineStorageUtils.getTimelineServiceHBaseConf(conf);\n     conn \u003d ConnectionFactory.createConnection(hbaseConf);\n     entityTable \u003d new EntityTableRW().getTableMutator(hbaseConf, conn);\n     appToFlowTable \u003d new AppToFlowTableRW().getTableMutator(hbaseConf, conn);\n     applicationTable \u003d\n         new ApplicationTableRW().getTableMutator(hbaseConf, conn);\n     flowRunTable \u003d new FlowRunTableRW().getTableMutator(hbaseConf, conn);\n     flowActivityTable \u003d\n         new FlowActivityTableRW().getTableMutator(hbaseConf, conn);\n     subApplicationTable \u003d\n         new SubApplicationTableRW().getTableMutator(hbaseConf, conn);\n+    domainTable \u003d new DomainTableRW().getTableMutator(hbaseConf, conn);\n \n     UserGroupInformation ugi \u003d UserGroupInformation.isSecurityEnabled() ?\n         UserGroupInformation.getLoginUser() :\n         UserGroupInformation.getCurrentUser();\n     LOG.info(\"Initialized HBaseTimelineWriterImpl UGI to \" + ugi);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n    Configuration hbaseConf \u003d\n        HBaseTimelineStorageUtils.getTimelineServiceHBaseConf(conf);\n    conn \u003d ConnectionFactory.createConnection(hbaseConf);\n    entityTable \u003d new EntityTableRW().getTableMutator(hbaseConf, conn);\n    appToFlowTable \u003d new AppToFlowTableRW().getTableMutator(hbaseConf, conn);\n    applicationTable \u003d\n        new ApplicationTableRW().getTableMutator(hbaseConf, conn);\n    flowRunTable \u003d new FlowRunTableRW().getTableMutator(hbaseConf, conn);\n    flowActivityTable \u003d\n        new FlowActivityTableRW().getTableMutator(hbaseConf, conn);\n    subApplicationTable \u003d\n        new SubApplicationTableRW().getTableMutator(hbaseConf, conn);\n    domainTable \u003d new DomainTableRW().getTableMutator(hbaseConf, conn);\n\n    UserGroupInformation ugi \u003d UserGroupInformation.isSecurityEnabled() ?\n        UserGroupInformation.getLoginUser() :\n        UserGroupInformation.getCurrentUser();\n    LOG.info(\"Initialized HBaseTimelineWriterImpl UGI to \" + ugi);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
          "commitDate": "17/02/18 7:00 AM",
          "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 3:24 AM",
          "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,20 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     super.serviceInit(conf);\n     Configuration hbaseConf \u003d\n         HBaseTimelineStorageUtils.getTimelineServiceHBaseConf(conf);\n     conn \u003d ConnectionFactory.createConnection(hbaseConf);\n-    entityTable \u003d new EntityTable().getTableMutator(hbaseConf, conn);\n-    appToFlowTable \u003d new AppToFlowTable().getTableMutator(hbaseConf, conn);\n-    applicationTable \u003d new ApplicationTable().getTableMutator(hbaseConf, conn);\n-    flowRunTable \u003d new FlowRunTable().getTableMutator(hbaseConf, conn);\n+    entityTable \u003d new EntityTableRW().getTableMutator(hbaseConf, conn);\n+    appToFlowTable \u003d new AppToFlowTableRW().getTableMutator(hbaseConf, conn);\n+    applicationTable \u003d\n+        new ApplicationTableRW().getTableMutator(hbaseConf, conn);\n+    flowRunTable \u003d new FlowRunTableRW().getTableMutator(hbaseConf, conn);\n     flowActivityTable \u003d\n-        new FlowActivityTable().getTableMutator(hbaseConf, conn);\n+        new FlowActivityTableRW().getTableMutator(hbaseConf, conn);\n     subApplicationTable \u003d\n-        new SubApplicationTable().getTableMutator(hbaseConf, conn);\n+        new SubApplicationTableRW().getTableMutator(hbaseConf, conn);\n \n     UserGroupInformation ugi \u003d UserGroupInformation.isSecurityEnabled() ?\n         UserGroupInformation.getLoginUser() :\n         UserGroupInformation.getCurrentUser();\n     LOG.info(\"Initialized HBaseTimelineWriterImpl UGI to \" + ugi);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n    Configuration hbaseConf \u003d\n        HBaseTimelineStorageUtils.getTimelineServiceHBaseConf(conf);\n    conn \u003d ConnectionFactory.createConnection(hbaseConf);\n    entityTable \u003d new EntityTableRW().getTableMutator(hbaseConf, conn);\n    appToFlowTable \u003d new AppToFlowTableRW().getTableMutator(hbaseConf, conn);\n    applicationTable \u003d\n        new ApplicationTableRW().getTableMutator(hbaseConf, conn);\n    flowRunTable \u003d new FlowRunTableRW().getTableMutator(hbaseConf, conn);\n    flowActivityTable \u003d\n        new FlowActivityTableRW().getTableMutator(hbaseConf, conn);\n    subApplicationTable \u003d\n        new SubApplicationTableRW().getTableMutator(hbaseConf, conn);\n\n    UserGroupInformation ugi \u003d UserGroupInformation.isSecurityEnabled() ?\n        UserGroupInformation.getLoginUser() :\n        UserGroupInformation.getCurrentUser();\n    LOG.info(\"Initialized HBaseTimelineWriterImpl UGI to \" + ugi);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
          "commitDate": "17/02/18 7:00 AM",
          "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 3:24 AM",
          "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,20 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     super.serviceInit(conf);\n     Configuration hbaseConf \u003d\n         HBaseTimelineStorageUtils.getTimelineServiceHBaseConf(conf);\n     conn \u003d ConnectionFactory.createConnection(hbaseConf);\n-    entityTable \u003d new EntityTable().getTableMutator(hbaseConf, conn);\n-    appToFlowTable \u003d new AppToFlowTable().getTableMutator(hbaseConf, conn);\n-    applicationTable \u003d new ApplicationTable().getTableMutator(hbaseConf, conn);\n-    flowRunTable \u003d new FlowRunTable().getTableMutator(hbaseConf, conn);\n+    entityTable \u003d new EntityTableRW().getTableMutator(hbaseConf, conn);\n+    appToFlowTable \u003d new AppToFlowTableRW().getTableMutator(hbaseConf, conn);\n+    applicationTable \u003d\n+        new ApplicationTableRW().getTableMutator(hbaseConf, conn);\n+    flowRunTable \u003d new FlowRunTableRW().getTableMutator(hbaseConf, conn);\n     flowActivityTable \u003d\n-        new FlowActivityTable().getTableMutator(hbaseConf, conn);\n+        new FlowActivityTableRW().getTableMutator(hbaseConf, conn);\n     subApplicationTable \u003d\n-        new SubApplicationTable().getTableMutator(hbaseConf, conn);\n+        new SubApplicationTableRW().getTableMutator(hbaseConf, conn);\n \n     UserGroupInformation ugi \u003d UserGroupInformation.isSecurityEnabled() ?\n         UserGroupInformation.getLoginUser() :\n         UserGroupInformation.getCurrentUser();\n     LOG.info(\"Initialized HBaseTimelineWriterImpl UGI to \" + ugi);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n    Configuration hbaseConf \u003d\n        HBaseTimelineStorageUtils.getTimelineServiceHBaseConf(conf);\n    conn \u003d ConnectionFactory.createConnection(hbaseConf);\n    entityTable \u003d new EntityTableRW().getTableMutator(hbaseConf, conn);\n    appToFlowTable \u003d new AppToFlowTableRW().getTableMutator(hbaseConf, conn);\n    applicationTable \u003d\n        new ApplicationTableRW().getTableMutator(hbaseConf, conn);\n    flowRunTable \u003d new FlowRunTableRW().getTableMutator(hbaseConf, conn);\n    flowActivityTable \u003d\n        new FlowActivityTableRW().getTableMutator(hbaseConf, conn);\n    subApplicationTable \u003d\n        new SubApplicationTableRW().getTableMutator(hbaseConf, conn);\n\n    UserGroupInformation ugi \u003d UserGroupInformation.isSecurityEnabled() ?\n        UserGroupInformation.getLoginUser() :\n        UserGroupInformation.getCurrentUser();\n    LOG.info(\"Initialized HBaseTimelineWriterImpl UGI to \" + ugi);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "443523f9c0fcc4ba2503791090b1879c6031759b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7765. Fixed an issue that kerberos tgt not found when NM posting timeline events. Contributed by Rohith Sharma K S\n",
      "commitDate": "27/01/18 10:18 PM",
      "commitName": "443523f9c0fcc4ba2503791090b1879c6031759b",
      "commitAuthor": "Jian He",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "9f6540535d9148abbea836d54a9e94d25319c5d5",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 151.01,
      "commitsBetweenForRepo": 1109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,19 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     super.serviceInit(conf);\n     Configuration hbaseConf \u003d\n         HBaseTimelineStorageUtils.getTimelineServiceHBaseConf(conf);\n     conn \u003d ConnectionFactory.createConnection(hbaseConf);\n     entityTable \u003d new EntityTable().getTableMutator(hbaseConf, conn);\n     appToFlowTable \u003d new AppToFlowTable().getTableMutator(hbaseConf, conn);\n     applicationTable \u003d new ApplicationTable().getTableMutator(hbaseConf, conn);\n     flowRunTable \u003d new FlowRunTable().getTableMutator(hbaseConf, conn);\n     flowActivityTable \u003d\n         new FlowActivityTable().getTableMutator(hbaseConf, conn);\n     subApplicationTable \u003d\n         new SubApplicationTable().getTableMutator(hbaseConf, conn);\n+\n+    UserGroupInformation ugi \u003d UserGroupInformation.isSecurityEnabled() ?\n+        UserGroupInformation.getLoginUser() :\n+        UserGroupInformation.getCurrentUser();\n+    LOG.info(\"Initialized HBaseTimelineWriterImpl UGI to \" + ugi);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n    Configuration hbaseConf \u003d\n        HBaseTimelineStorageUtils.getTimelineServiceHBaseConf(conf);\n    conn \u003d ConnectionFactory.createConnection(hbaseConf);\n    entityTable \u003d new EntityTable().getTableMutator(hbaseConf, conn);\n    appToFlowTable \u003d new AppToFlowTable().getTableMutator(hbaseConf, conn);\n    applicationTable \u003d new ApplicationTable().getTableMutator(hbaseConf, conn);\n    flowRunTable \u003d new FlowRunTable().getTableMutator(hbaseConf, conn);\n    flowActivityTable \u003d\n        new FlowActivityTable().getTableMutator(hbaseConf, conn);\n    subApplicationTable \u003d\n        new SubApplicationTable().getTableMutator(hbaseConf, conn);\n\n    UserGroupInformation ugi \u003d UserGroupInformation.isSecurityEnabled() ?\n        UserGroupInformation.getLoginUser() :\n        UserGroupInformation.getCurrentUser();\n    LOG.info(\"Initialized HBaseTimelineWriterImpl UGI to \" + ugi);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "9f6540535d9148abbea836d54a9e94d25319c5d5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6734. Ensure sub-application user is extracted \u0026 sent to timeline service (Rohith Sharma K S via Varun Saxena)\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "9f6540535d9148abbea836d54a9e94d25319c5d5",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "71847ed44dc5a1ef702eaf234150a2ff69c15341",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,14 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     super.serviceInit(conf);\n     Configuration hbaseConf \u003d\n         HBaseTimelineStorageUtils.getTimelineServiceHBaseConf(conf);\n     conn \u003d ConnectionFactory.createConnection(hbaseConf);\n     entityTable \u003d new EntityTable().getTableMutator(hbaseConf, conn);\n     appToFlowTable \u003d new AppToFlowTable().getTableMutator(hbaseConf, conn);\n     applicationTable \u003d new ApplicationTable().getTableMutator(hbaseConf, conn);\n     flowRunTable \u003d new FlowRunTable().getTableMutator(hbaseConf, conn);\n     flowActivityTable \u003d\n         new FlowActivityTable().getTableMutator(hbaseConf, conn);\n+    subApplicationTable \u003d\n+        new SubApplicationTable().getTableMutator(hbaseConf, conn);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n    Configuration hbaseConf \u003d\n        HBaseTimelineStorageUtils.getTimelineServiceHBaseConf(conf);\n    conn \u003d ConnectionFactory.createConnection(hbaseConf);\n    entityTable \u003d new EntityTable().getTableMutator(hbaseConf, conn);\n    appToFlowTable \u003d new AppToFlowTable().getTableMutator(hbaseConf, conn);\n    applicationTable \u003d new ApplicationTable().getTableMutator(hbaseConf, conn);\n    flowRunTable \u003d new FlowRunTable().getTableMutator(hbaseConf, conn);\n    flowActivityTable \u003d\n        new FlowActivityTable().getTableMutator(hbaseConf, conn);\n    subApplicationTable \u003d\n        new SubApplicationTable().getTableMutator(hbaseConf, conn);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "643a20a358e2e7e7f6d39d6890409ef7cb73d030": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5265. Make HBase configuration for the timeline service configurable. Contributed by Joep Rottinghuis.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "643a20a358e2e7e7f6d39d6890409ef7cb73d030",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "05ff04439e2edeef0460bc9e21034535b8b6eb9e",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     super.serviceInit(conf);\n-    Configuration hbaseConf \u003d HBaseConfiguration.create(conf);\n+    Configuration hbaseConf \u003d\n+        HBaseTimelineStorageUtils.getTimelineServiceHBaseConf(conf);\n     conn \u003d ConnectionFactory.createConnection(hbaseConf);\n     entityTable \u003d new EntityTable().getTableMutator(hbaseConf, conn);\n     appToFlowTable \u003d new AppToFlowTable().getTableMutator(hbaseConf, conn);\n     applicationTable \u003d new ApplicationTable().getTableMutator(hbaseConf, conn);\n     flowRunTable \u003d new FlowRunTable().getTableMutator(hbaseConf, conn);\n     flowActivityTable \u003d\n         new FlowActivityTable().getTableMutator(hbaseConf, conn);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n    Configuration hbaseConf \u003d\n        HBaseTimelineStorageUtils.getTimelineServiceHBaseConf(conf);\n    conn \u003d ConnectionFactory.createConnection(hbaseConf);\n    entityTable \u003d new EntityTable().getTableMutator(hbaseConf, conn);\n    appToFlowTable \u003d new AppToFlowTable().getTableMutator(hbaseConf, conn);\n    applicationTable \u003d new ApplicationTable().getTableMutator(hbaseConf, conn);\n    flowRunTable \u003d new FlowRunTable().getTableMutator(hbaseConf, conn);\n    flowActivityTable \u003d\n        new FlowActivityTable().getTableMutator(hbaseConf, conn);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n    Configuration hbaseConf \u003d HBaseConfiguration.create(conf);\n    conn \u003d ConnectionFactory.createConnection(hbaseConf);\n    entityTable \u003d new EntityTable().getTableMutator(hbaseConf, conn);\n    appToFlowTable \u003d new AppToFlowTable().getTableMutator(hbaseConf, conn);\n    applicationTable \u003d new ApplicationTable().getTableMutator(hbaseConf, conn);\n    flowRunTable \u003d new FlowRunTable().getTableMutator(hbaseConf, conn);\n    flowActivityTable \u003d\n        new FlowActivityTable().getTableMutator(hbaseConf, conn);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java"
      }
    },
    "a68e3839218523403f42acd7bdd7ce1da59a5e60": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3901. Populate flow run data in the flow_run \u0026 flow activity tables (Vrushali C via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "a68e3839218523403f42acd7bdd7ce1da59a5e60",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "7a41b5501ea76f94f15f53f6380b3c63f14b5a78",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,10 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     super.serviceInit(conf);\n     Configuration hbaseConf \u003d HBaseConfiguration.create(conf);\n     conn \u003d ConnectionFactory.createConnection(hbaseConf);\n     entityTable \u003d new EntityTable().getTableMutator(hbaseConf, conn);\n     appToFlowTable \u003d new AppToFlowTable().getTableMutator(hbaseConf, conn);\n     applicationTable \u003d new ApplicationTable().getTableMutator(hbaseConf, conn);\n+    flowRunTable \u003d new FlowRunTable().getTableMutator(hbaseConf, conn);\n+    flowActivityTable \u003d new FlowActivityTable().getTableMutator(hbaseConf, conn);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n    Configuration hbaseConf \u003d HBaseConfiguration.create(conf);\n    conn \u003d ConnectionFactory.createConnection(hbaseConf);\n    entityTable \u003d new EntityTable().getTableMutator(hbaseConf, conn);\n    appToFlowTable \u003d new AppToFlowTable().getTableMutator(hbaseConf, conn);\n    applicationTable \u003d new ApplicationTable().getTableMutator(hbaseConf, conn);\n    flowRunTable \u003d new FlowRunTable().getTableMutator(hbaseConf, conn);\n    flowActivityTable \u003d new FlowActivityTable().getTableMutator(hbaseConf, conn);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "00e85e7a2b9446dc37265feba07473b156d66367": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3906. Split the application table from the entity table. Contributed by Sangjin Lee.\n\n(cherry picked from commit bcd755eba9466ce277d3c14192c31da6462c4ab3)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "00e85e7a2b9446dc37265feba07473b156d66367",
      "commitAuthor": "Junping Du",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "9e5155be363c6610ccf41fe08b7f1394f353ea65",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,8 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     super.serviceInit(conf);\n     Configuration hbaseConf \u003d HBaseConfiguration.create(conf);\n     conn \u003d ConnectionFactory.createConnection(hbaseConf);\n     entityTable \u003d new EntityTable().getTableMutator(hbaseConf, conn);\n     appToFlowTable \u003d new AppToFlowTable().getTableMutator(hbaseConf, conn);\n+    applicationTable \u003d new ApplicationTable().getTableMutator(hbaseConf, conn);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n    Configuration hbaseConf \u003d HBaseConfiguration.create(conf);\n    conn \u003d ConnectionFactory.createConnection(hbaseConf);\n    entityTable \u003d new EntityTable().getTableMutator(hbaseConf, conn);\n    appToFlowTable \u003d new AppToFlowTable().getTableMutator(hbaseConf, conn);\n    applicationTable \u003d new ApplicationTable().getTableMutator(hbaseConf, conn);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "9e5155be363c6610ccf41fe08b7f1394f353ea65": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3049. [Storage Implementation] Implement storage reader interface to fetch raw data from HBase backend (Zhijie Shen via sjlee)\n\n(cherry picked from commit 07433c2ad52df9e844dbd90020c277d3df844dcd)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9e5155be363c6610ccf41fe08b7f1394f353ea65",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "9422d9b50d90a99062880cf648dd86a764bf97ec",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,7 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     super.serviceInit(conf);\n     Configuration hbaseConf \u003d HBaseConfiguration.create(conf);\n     conn \u003d ConnectionFactory.createConnection(hbaseConf);\n     entityTable \u003d new EntityTable().getTableMutator(hbaseConf, conn);\n+    appToFlowTable \u003d new AppToFlowTable().getTableMutator(hbaseConf, conn);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n    Configuration hbaseConf \u003d HBaseConfiguration.create(conf);\n    conn \u003d ConnectionFactory.createConnection(hbaseConf);\n    entityTable \u003d new EntityTable().getTableMutator(hbaseConf, conn);\n    appToFlowTable \u003d new AppToFlowTable().getTableMutator(hbaseConf, conn);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "92d90c3a243134177f192d1d473dd606c79a91fc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3706. Generalize native HBase writer for additional tables (Joep Rottinghuis via sjlee)\n\n(cherry picked from commit 9137aeae0dec83f9eff40d12cae712dfd508c0c5)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "92d90c3a243134177f192d1d473dd606c79a91fc",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "5a4278ccbd22b50ea1e80d28c3eea1777ffc2875",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,6 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     super.serviceInit(conf);\n     Configuration hbaseConf \u003d HBaseConfiguration.create(conf);\n     conn \u003d ConnectionFactory.createConnection(hbaseConf);\n-    TableName entityTableName \u003d TableName.valueOf(hbaseConf.get(\n-        TimelineEntitySchemaConstants.ENTITY_TABLE_NAME,\n-        TimelineEntitySchemaConstants.DEFAULT_ENTITY_TABLE_NAME));\n-    entityTable \u003d conn.getBufferedMutator(entityTableName);\n+    entityTable \u003d new EntityTable().getTableMutator(hbaseConf, conn);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n    Configuration hbaseConf \u003d HBaseConfiguration.create(conf);\n    conn \u003d ConnectionFactory.createConnection(hbaseConf);\n    entityTable \u003d new EntityTable().getTableMutator(hbaseConf, conn);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java",
      "extendedDetails": {}
    },
    "5a4278ccbd22b50ea1e80d28c3eea1777ffc2875": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3411. [Storage implementation] explore the native HBase write schema for storage (Vrushali C via sjlee)\n\n(cherry picked from commit 7a3068854d27eadae1c57545988f5b2029bf119a)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "5a4278ccbd22b50ea1e80d28c3eea1777ffc2875",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,9 @@\n+  protected void serviceInit(Configuration conf) throws Exception {\n+    super.serviceInit(conf);\n+    Configuration hbaseConf \u003d HBaseConfiguration.create(conf);\n+    conn \u003d ConnectionFactory.createConnection(hbaseConf);\n+    TableName entityTableName \u003d TableName.valueOf(hbaseConf.get(\n+        TimelineEntitySchemaConstants.ENTITY_TABLE_NAME,\n+        TimelineEntitySchemaConstants.DEFAULT_ENTITY_TABLE_NAME));\n+    entityTable \u003d conn.getBufferedMutator(entityTableName);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n    Configuration hbaseConf \u003d HBaseConfiguration.create(conf);\n    conn \u003d ConnectionFactory.createConnection(hbaseConf);\n    TableName entityTableName \u003d TableName.valueOf(hbaseConf.get(\n        TimelineEntitySchemaConstants.ENTITY_TABLE_NAME,\n        TimelineEntitySchemaConstants.DEFAULT_ENTITY_TABLE_NAME));\n    entityTable \u003d conn.getBufferedMutator(entityTableName);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineWriterImpl.java"
    }
  }
}