{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMClientImpl.java",
  "functionName": "registerApplicationMaster",
  "functionId": "registerApplicationMaster",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
  "functionStartLine": 238,
  "functionEndLine": 260,
  "numCommitsSeen": 52,
  "timeTaken": 2693,
  "changeHistory": [
    "3159bffce23abf35754da2d7d51de7d8c2631ae3",
    "29d9e4d5814900d5c59d77fe05d32186d4ad9385",
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
    "d751a61e5a8b65cb74f18d82f9a1249bfa5d4574"
  ],
  "changeHistoryShort": {
    "3159bffce23abf35754da2d7d51de7d8c2631ae3": "Ybodychange",
    "29d9e4d5814900d5c59d77fe05d32186d4ad9385": "Ybodychange",
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9": "Ybodychange",
    "d751a61e5a8b65cb74f18d82f9a1249bfa5d4574": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3159bffce23abf35754da2d7d51de7d8c2631ae3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7900. [AMRMProxy] AMRMClientRelayer for stateful FederationInterceptor. (Botong Huang via asuresh)\n",
      "commitDate": "17/05/18 8:00 PM",
      "commitName": "3159bffce23abf35754da2d7d51de7d8c2631ae3",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "27/04/18 1:07 PM",
      "commitNameOld": "b1833d9ba2c078582161da45ac392dd5c361dcdf",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 20.29,
      "commitsBetweenForRepo": 159,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private RegisterApplicationMasterResponse registerApplicationMaster()\n       throws YarnException, IOException {\n     RegisterApplicationMasterRequest request \u003d\n         RegisterApplicationMasterRequest.newInstance(this.appHostName,\n             this.appHostPort, this.appTrackingUrl);\n     if (!this.placementConstraints.isEmpty()) {\n       request.setPlacementConstraints(this.placementConstraints);\n     }\n     RegisterApplicationMasterResponse response \u003d\n         rmClient.registerApplicationMaster(request);\n     synchronized (this) {\n       lastResponseId \u003d 0;\n       if (!response.getNMTokensFromPreviousAttempts().isEmpty()) {\n         populateNMTokens(response.getNMTokensFromPreviousAttempts());\n       }\n       this.resourceProfilesMap \u003d response.getResourceProfiles();\n       List\u003cContainer\u003e prevContainers \u003d\n           response.getContainersFromPreviousAttempts();\n-      removeFromOutstandingSchedulingRequests(prevContainers);\n-      recreateSchedulingRequestBatch();\n+      AMRMClientUtils.removeFromOutstandingSchedulingRequests(prevContainers,\n+          this.outstandingSchedRequests);\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RegisterApplicationMasterResponse registerApplicationMaster()\n      throws YarnException, IOException {\n    RegisterApplicationMasterRequest request \u003d\n        RegisterApplicationMasterRequest.newInstance(this.appHostName,\n            this.appHostPort, this.appTrackingUrl);\n    if (!this.placementConstraints.isEmpty()) {\n      request.setPlacementConstraints(this.placementConstraints);\n    }\n    RegisterApplicationMasterResponse response \u003d\n        rmClient.registerApplicationMaster(request);\n    synchronized (this) {\n      lastResponseId \u003d 0;\n      if (!response.getNMTokensFromPreviousAttempts().isEmpty()) {\n        populateNMTokens(response.getNMTokensFromPreviousAttempts());\n      }\n      this.resourceProfilesMap \u003d response.getResourceProfiles();\n      List\u003cContainer\u003e prevContainers \u003d\n          response.getContainersFromPreviousAttempts();\n      AMRMClientUtils.removeFromOutstandingSchedulingRequests(prevContainers,\n          this.outstandingSchedRequests);\n    }\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "29d9e4d5814900d5c59d77fe05d32186d4ad9385": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6619. AMRMClient Changes to use the PlacementConstraint and SchcedulingRequest objects. (Arun Suresh via wangda)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "29d9e4d5814900d5c59d77fe05d32186d4ad9385",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "31/10/17 1:09 AM",
      "commitNameOld": "c02d2ba50db8a355ea03081c3984b2ea0c375a3f",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 92.06,
      "commitsBetweenForRepo": 618,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,23 @@\n   private RegisterApplicationMasterResponse registerApplicationMaster()\n       throws YarnException, IOException {\n     RegisterApplicationMasterRequest request \u003d\n         RegisterApplicationMasterRequest.newInstance(this.appHostName,\n             this.appHostPort, this.appTrackingUrl);\n+    if (!this.placementConstraints.isEmpty()) {\n+      request.setPlacementConstraints(this.placementConstraints);\n+    }\n     RegisterApplicationMasterResponse response \u003d\n         rmClient.registerApplicationMaster(request);\n     synchronized (this) {\n       lastResponseId \u003d 0;\n       if (!response.getNMTokensFromPreviousAttempts().isEmpty()) {\n         populateNMTokens(response.getNMTokensFromPreviousAttempts());\n       }\n       this.resourceProfilesMap \u003d response.getResourceProfiles();\n+      List\u003cContainer\u003e prevContainers \u003d\n+          response.getContainersFromPreviousAttempts();\n+      removeFromOutstandingSchedulingRequests(prevContainers);\n+      recreateSchedulingRequestBatch();\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RegisterApplicationMasterResponse registerApplicationMaster()\n      throws YarnException, IOException {\n    RegisterApplicationMasterRequest request \u003d\n        RegisterApplicationMasterRequest.newInstance(this.appHostName,\n            this.appHostPort, this.appTrackingUrl);\n    if (!this.placementConstraints.isEmpty()) {\n      request.setPlacementConstraints(this.placementConstraints);\n    }\n    RegisterApplicationMasterResponse response \u003d\n        rmClient.registerApplicationMaster(request);\n    synchronized (this) {\n      lastResponseId \u003d 0;\n      if (!response.getNMTokensFromPreviousAttempts().isEmpty()) {\n        populateNMTokens(response.getNMTokensFromPreviousAttempts());\n      }\n      this.resourceProfilesMap \u003d response.getResourceProfiles();\n      List\u003cContainer\u003e prevContainers \u003d\n          response.getContainersFromPreviousAttempts();\n      removeFromOutstandingSchedulingRequests(prevContainers);\n      recreateSchedulingRequestBatch();\n    }\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5587. Add support for resource profiles. (vvasudev via asuresh)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "24/07/17 12:03 PM",
      "commitNameOld": "4c40cd451cbdbce5d2b94ad0e7e3cc991c3439c5",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 49.89,
      "commitsBetweenForRepo": 442,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   private RegisterApplicationMasterResponse registerApplicationMaster()\n       throws YarnException, IOException {\n     RegisterApplicationMasterRequest request \u003d\n         RegisterApplicationMasterRequest.newInstance(this.appHostName,\n             this.appHostPort, this.appTrackingUrl);\n     RegisterApplicationMasterResponse response \u003d\n         rmClient.registerApplicationMaster(request);\n     synchronized (this) {\n       lastResponseId \u003d 0;\n       if (!response.getNMTokensFromPreviousAttempts().isEmpty()) {\n         populateNMTokens(response.getNMTokensFromPreviousAttempts());\n       }\n+      this.resourceProfilesMap \u003d response.getResourceProfiles();\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RegisterApplicationMasterResponse registerApplicationMaster()\n      throws YarnException, IOException {\n    RegisterApplicationMasterRequest request \u003d\n        RegisterApplicationMasterRequest.newInstance(this.appHostName,\n            this.appHostPort, this.appTrackingUrl);\n    RegisterApplicationMasterResponse response \u003d\n        rmClient.registerApplicationMaster(request);\n    synchronized (this) {\n      lastResponseId \u003d 0;\n      if (!response.getNMTokensFromPreviousAttempts().isEmpty()) {\n        populateNMTokens(response.getNMTokensFromPreviousAttempts());\n      }\n      this.resourceProfilesMap \u003d response.getResourceProfiles();\n    }\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "d751a61e5a8b65cb74f18d82f9a1249bfa5d4574": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1366. Changed AMRMClient to re-register with RM and send outstanding requests back to RM on work-preserving RM restart. Contributed by Rohith\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1609254 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/07/14 11:25 AM",
      "commitName": "d751a61e5a8b65cb74f18d82f9a1249bfa5d4574",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,15 @@\n+  private RegisterApplicationMasterResponse registerApplicationMaster()\n+      throws YarnException, IOException {\n+    RegisterApplicationMasterRequest request \u003d\n+        RegisterApplicationMasterRequest.newInstance(this.appHostName,\n+            this.appHostPort, this.appTrackingUrl);\n+    RegisterApplicationMasterResponse response \u003d\n+        rmClient.registerApplicationMaster(request);\n+    synchronized (this) {\n+      lastResponseId \u003d 0;\n+      if (!response.getNMTokensFromPreviousAttempts().isEmpty()) {\n+        populateNMTokens(response.getNMTokensFromPreviousAttempts());\n+      }\n+    }\n+    return response;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private RegisterApplicationMasterResponse registerApplicationMaster()\n      throws YarnException, IOException {\n    RegisterApplicationMasterRequest request \u003d\n        RegisterApplicationMasterRequest.newInstance(this.appHostName,\n            this.appHostPort, this.appTrackingUrl);\n    RegisterApplicationMasterResponse response \u003d\n        rmClient.registerApplicationMaster(request);\n    synchronized (this) {\n      lastResponseId \u003d 0;\n      if (!response.getNMTokensFromPreviousAttempts().isEmpty()) {\n        populateNMTokens(response.getNMTokensFromPreviousAttempts());\n      }\n    }\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java"
    }
  }
}