{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LevelDBCacheTimelineStore.java",
  "functionName": "serviceInit",
  "functionId": "serviceInit___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/LevelDBCacheTimelineStore.java",
  "functionStartLine": 88,
  "functionEndLine": 119,
  "numCommitsSeen": 7,
  "timeTaken": 1415,
  "changeHistory": [
    "63cfcb90ac6fbb79ba9ed6b3044cd999fc74e58c",
    "f16722d2ef31338a57a13e2c8d18c1c62d58bbaf",
    "9fab22b36673e7f1a0bb629d2c07966ac2482e99"
  ],
  "changeHistoryShort": {
    "63cfcb90ac6fbb79ba9ed6b3044cd999fc74e58c": "Ybodychange",
    "f16722d2ef31338a57a13e2c8d18c1c62d58bbaf": "Ymodifierchange",
    "9fab22b36673e7f1a0bb629d2c07966ac2482e99": "Yintroduced"
  },
  "changeHistoryDetails": {
    "63cfcb90ac6fbb79ba9ed6b3044cd999fc74e58c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6958. Moving logging APIs over to slf4j in hadoop-yarn-server-timelineservice. Contributed by Yeliang Cang.\n",
      "commitDate": "09/08/17 7:58 AM",
      "commitName": "63cfcb90ac6fbb79ba9ed6b3044cd999fc74e58c",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "27/06/17 3:12 PM",
      "commitNameOld": "63ce1593c5b78eb172773e7498d9c321debe81e8",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 42.7,
      "commitsBetweenForRepo": 284,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   protected synchronized void serviceInit(Configuration conf) throws Exception {\n     configuration \u003d conf;\n     Options options \u003d new Options();\n     options.createIfMissing(true);\n     options.cacheSize(conf.getLong(\n         YarnConfiguration.TIMELINE_SERVICE_LEVELDB_CACHE_READ_CACHE_SIZE,\n         YarnConfiguration.\n             DEFAULT_TIMELINE_SERVICE_LEVELDB_CACHE_READ_CACHE_SIZE));\n     JniDBFactory factory \u003d new JniDBFactory();\n     Path dbPath \u003d new Path(\n         conf.get(YarnConfiguration.TIMELINE_SERVICE_LEVELDB_PATH),\n         dbId + CACHED_LDB_FILE_PREFIX);\n     FileSystem localFS \u003d null;\n \n     try {\n       localFS \u003d FileSystem.getLocal(conf);\n       if (!localFS.exists(dbPath)) {\n         if (!localFS.mkdirs(dbPath)) {\n           throw new IOException(\"Couldn\u0027t create directory for leveldb \" +\n               \"timeline store \" + dbPath);\n         }\n         localFS.setPermission(dbPath, LeveldbUtils.LEVELDB_DIR_UMASK);\n       }\n     } finally {\n-      IOUtils.cleanup(LOG, localFS);\n+      IOUtils.cleanupWithLogger(LOG, localFS);\n     }\n     LOG.info(\"Using leveldb path \" + dbPath);\n     entityDb \u003d factory.open(new File(dbPath.toString()), options);\n     entities \u003d new LevelDBMapAdapter\u003c\u003e(entityDb);\n \n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void serviceInit(Configuration conf) throws Exception {\n    configuration \u003d conf;\n    Options options \u003d new Options();\n    options.createIfMissing(true);\n    options.cacheSize(conf.getLong(\n        YarnConfiguration.TIMELINE_SERVICE_LEVELDB_CACHE_READ_CACHE_SIZE,\n        YarnConfiguration.\n            DEFAULT_TIMELINE_SERVICE_LEVELDB_CACHE_READ_CACHE_SIZE));\n    JniDBFactory factory \u003d new JniDBFactory();\n    Path dbPath \u003d new Path(\n        conf.get(YarnConfiguration.TIMELINE_SERVICE_LEVELDB_PATH),\n        dbId + CACHED_LDB_FILE_PREFIX);\n    FileSystem localFS \u003d null;\n\n    try {\n      localFS \u003d FileSystem.getLocal(conf);\n      if (!localFS.exists(dbPath)) {\n        if (!localFS.mkdirs(dbPath)) {\n          throw new IOException(\"Couldn\u0027t create directory for leveldb \" +\n              \"timeline store \" + dbPath);\n        }\n        localFS.setPermission(dbPath, LeveldbUtils.LEVELDB_DIR_UMASK);\n      }\n    } finally {\n      IOUtils.cleanupWithLogger(LOG, localFS);\n    }\n    LOG.info(\"Using leveldb path \" + dbPath);\n    entityDb \u003d factory.open(new File(dbPath.toString()), options);\n    entities \u003d new LevelDBMapAdapter\u003c\u003e(entityDb);\n\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/LevelDBCacheTimelineStore.java",
      "extendedDetails": {}
    },
    "f16722d2ef31338a57a13e2c8d18c1c62d58bbaf": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-4956. findbug issue on LevelDBCacheTimelineStore. (Zhiyuan Yang via gtcarrera9)\n",
      "commitDate": "27/04/16 10:57 AM",
      "commitName": "f16722d2ef31338a57a13e2c8d18c1c62d58bbaf",
      "commitAuthor": "Li Lu",
      "commitDateOld": "28/01/16 10:21 PM",
      "commitNameOld": "09d831c95ba18e2892cddd749f6e06f112dda7f5",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 89.48,
      "commitsBetweenForRepo": 567,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n-  protected void serviceInit(Configuration conf) throws Exception {\n+  protected synchronized void serviceInit(Configuration conf) throws Exception {\n     configuration \u003d conf;\n     Options options \u003d new Options();\n     options.createIfMissing(true);\n     options.cacheSize(conf.getLong(\n         YarnConfiguration.TIMELINE_SERVICE_LEVELDB_CACHE_READ_CACHE_SIZE,\n         YarnConfiguration.\n             DEFAULT_TIMELINE_SERVICE_LEVELDB_CACHE_READ_CACHE_SIZE));\n     JniDBFactory factory \u003d new JniDBFactory();\n     Path dbPath \u003d new Path(\n         conf.get(YarnConfiguration.TIMELINE_SERVICE_LEVELDB_PATH),\n         dbId + CACHED_LDB_FILE_PREFIX);\n     FileSystem localFS \u003d null;\n \n     try {\n       localFS \u003d FileSystem.getLocal(conf);\n       if (!localFS.exists(dbPath)) {\n         if (!localFS.mkdirs(dbPath)) {\n           throw new IOException(\"Couldn\u0027t create directory for leveldb \" +\n               \"timeline store \" + dbPath);\n         }\n         localFS.setPermission(dbPath, LeveldbUtils.LEVELDB_DIR_UMASK);\n       }\n     } finally {\n       IOUtils.cleanup(LOG, localFS);\n     }\n     LOG.info(\"Using leveldb path \" + dbPath);\n     entityDb \u003d factory.open(new File(dbPath.toString()), options);\n     entities \u003d new LevelDBMapAdapter\u003c\u003e(entityDb);\n \n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void serviceInit(Configuration conf) throws Exception {\n    configuration \u003d conf;\n    Options options \u003d new Options();\n    options.createIfMissing(true);\n    options.cacheSize(conf.getLong(\n        YarnConfiguration.TIMELINE_SERVICE_LEVELDB_CACHE_READ_CACHE_SIZE,\n        YarnConfiguration.\n            DEFAULT_TIMELINE_SERVICE_LEVELDB_CACHE_READ_CACHE_SIZE));\n    JniDBFactory factory \u003d new JniDBFactory();\n    Path dbPath \u003d new Path(\n        conf.get(YarnConfiguration.TIMELINE_SERVICE_LEVELDB_PATH),\n        dbId + CACHED_LDB_FILE_PREFIX);\n    FileSystem localFS \u003d null;\n\n    try {\n      localFS \u003d FileSystem.getLocal(conf);\n      if (!localFS.exists(dbPath)) {\n        if (!localFS.mkdirs(dbPath)) {\n          throw new IOException(\"Couldn\u0027t create directory for leveldb \" +\n              \"timeline store \" + dbPath);\n        }\n        localFS.setPermission(dbPath, LeveldbUtils.LEVELDB_DIR_UMASK);\n      }\n    } finally {\n      IOUtils.cleanup(LOG, localFS);\n    }\n    LOG.info(\"Using leveldb path \" + dbPath);\n    entityDb \u003d factory.open(new File(dbPath.toString()), options);\n    entities \u003d new LevelDBMapAdapter\u003c\u003e(entityDb);\n\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/LevelDBCacheTimelineStore.java",
      "extendedDetails": {
        "oldValue": "[protected]",
        "newValue": "[protected, synchronized]"
      }
    },
    "9fab22b36673e7f1a0bb629d2c07966ac2482e99": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4219. New levelDB cache storage for timeline v1.5. Contributed by\nLi Lu\n",
      "commitDate": "28/01/16 2:24 PM",
      "commitName": "9fab22b36673e7f1a0bb629d2c07966ac2482e99",
      "commitAuthor": "Xuan",
      "diff": "@@ -0,0 +1,32 @@\n+  protected void serviceInit(Configuration conf) throws Exception {\n+    configuration \u003d conf;\n+    Options options \u003d new Options();\n+    options.createIfMissing(true);\n+    options.cacheSize(conf.getLong(\n+        YarnConfiguration.TIMELINE_SERVICE_LEVELDB_CACHE_READ_CACHE_SIZE,\n+        YarnConfiguration.\n+            DEFAULT_TIMELINE_SERVICE_LEVELDB_CACHE_READ_CACHE_SIZE));\n+    JniDBFactory factory \u003d new JniDBFactory();\n+    Path dbPath \u003d new Path(\n+        conf.get(YarnConfiguration.TIMELINE_SERVICE_LEVELDB_PATH),\n+        dbId + CACHED_LDB_FILE_PREFIX);\n+    FileSystem localFS \u003d null;\n+\n+    try {\n+      localFS \u003d FileSystem.getLocal(conf);\n+      if (!localFS.exists(dbPath)) {\n+        if (!localFS.mkdirs(dbPath)) {\n+          throw new IOException(\"Couldn\u0027t create directory for leveldb \" +\n+              \"timeline store \" + dbPath);\n+        }\n+        localFS.setPermission(dbPath, LeveldbUtils.LEVELDB_DIR_UMASK);\n+      }\n+    } finally {\n+      IOUtils.cleanup(LOG, localFS);\n+    }\n+    LOG.info(\"Using leveldb path \" + dbPath);\n+    entityDb \u003d factory.open(new File(dbPath.toString()), options);\n+    entities \u003d new LevelDBMapAdapter\u003c\u003e(entityDb);\n+\n+    super.serviceInit(conf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    configuration \u003d conf;\n    Options options \u003d new Options();\n    options.createIfMissing(true);\n    options.cacheSize(conf.getLong(\n        YarnConfiguration.TIMELINE_SERVICE_LEVELDB_CACHE_READ_CACHE_SIZE,\n        YarnConfiguration.\n            DEFAULT_TIMELINE_SERVICE_LEVELDB_CACHE_READ_CACHE_SIZE));\n    JniDBFactory factory \u003d new JniDBFactory();\n    Path dbPath \u003d new Path(\n        conf.get(YarnConfiguration.TIMELINE_SERVICE_LEVELDB_PATH),\n        dbId + CACHED_LDB_FILE_PREFIX);\n    FileSystem localFS \u003d null;\n\n    try {\n      localFS \u003d FileSystem.getLocal(conf);\n      if (!localFS.exists(dbPath)) {\n        if (!localFS.mkdirs(dbPath)) {\n          throw new IOException(\"Couldn\u0027t create directory for leveldb \" +\n              \"timeline store \" + dbPath);\n        }\n        localFS.setPermission(dbPath, LeveldbUtils.LEVELDB_DIR_UMASK);\n      }\n    } finally {\n      IOUtils.cleanup(LOG, localFS);\n    }\n    LOG.info(\"Using leveldb path \" + dbPath);\n    entityDb \u003d factory.open(new File(dbPath.toString()), options);\n    entities \u003d new LevelDBMapAdapter\u003c\u003e(entityDb);\n\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/LevelDBCacheTimelineStore.java"
    }
  }
}