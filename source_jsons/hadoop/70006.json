{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AzureBlobFileSystemStore.java",
  "functionName": "getPathStatus",
  "functionId": "getPathStatus___path-Path(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java",
  "functionStartLine": 347,
  "functionEndLine": 365,
  "numCommitsSeen": 75,
  "timeTaken": 6261,
  "changeHistory": [
    "b214bbd2d92a0c02b71d352dba85f3b87317933c",
    "b033c681e4fc3ee1a38caa807e130aee481d99d5",
    "e0260417ade5568ae37dcc3753aea0d1e0fd701b",
    "a8302e398c2ca4b0deff062c0e921053351b688e",
    "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be",
    "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462",
    "f044deedbbfee0812316d587139cb828f27172e9"
  ],
  "changeHistoryShort": {
    "b214bbd2d92a0c02b71d352dba85f3b87317933c": "Ybodychange",
    "b033c681e4fc3ee1a38caa807e130aee481d99d5": "Ybodychange",
    "e0260417ade5568ae37dcc3753aea0d1e0fd701b": "Ymultichange(Yrename,Ybodychange)",
    "a8302e398c2ca4b0deff062c0e921053351b688e": "Ybodychange",
    "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be": "Ybodychange",
    "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
    "f044deedbbfee0812316d587139cb828f27172e9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b214bbd2d92a0c02b71d352dba85f3b87317933c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16916: ABFS: Delegation SAS generator for integration with Ranger\n\nContributed by Thomas Marquardt.\n\nDETAILS:\n\nPreviously we had a SASGenerator class which generated Service SAS, but we need to add DelegationSASGenerator.\nI separated SASGenerator into a base class and two subclasses ServiceSASGenerator and DelegationSASGenreator.  The\ncode in ServiceSASGenerator is copied from SASGenerator but the DelegationSASGenrator code is new.  The\nDelegationSASGenerator code demonstrates how to use Delegation SAS with minimal permissions, as would be used\nby an authorization service such as Apache Ranger.  Adding this to the tests helps us lock in this behavior.\n\nAdded a MockDelegationSASTokenProvider for testing User Delegation SAS.\n\nFixed the ITestAzureBlobFileSystemCheckAccess tests to assume oauth client ID so that they are ignored when that\nis not configured.\n\nTo improve performance, AbfsInputStream/AbfsOutputStream re-use SAS tokens until the expiry is within 120 seconds.\nAfter this a new SAS will be requested.  The default period of 120 seconds can be changed using the configuration\nsetting \"fs.azure.sas.token.renew.period.for.streams\".\n\nThe SASTokenProvider operation names were updated to correspond better with the ADLS Gen2 REST API, since these\noperations must be provided tokens with appropriate SAS parameters to succeed.\n\nSupport for the version 2.0 AAD authentication endpoint was added to AzureADAuthenticator.\n\nThe getFileStatus method was mistakenly calling the ADLS Gen2 Get Properties API which requires read permission\nwhile the getFileStatus call only requires execute permission.  ADLS Gen2 Get Status API is supposed to be used\nfor this purpose, so the underlying AbfsClient.getPathStatus API was updated with a includeProperties\nparameter which is set to false for getFileStatus and true for getXAttr.\n\nAdded SASTokenProvider support for delete recursive.\n\nFixed bugs in AzureBlobFileSystem where public methods were not validating the Path by calling makeQualified.  This is\nnecessary to avoid passing null paths and to convert relative paths into absolute paths.\n\nCanonicalized the path used for root path internally so that root path can be used with SAS tokens, which requires\nthat the path in the URL and the path in the SAS token match.  Internally the code was using\n\"//\" instead of \"/\" for the root path, sometimes.  Also related to this, the AzureBlobFileSystemStore.getRelativePath\nAPI was updated so that we no longer remove and then add back a preceding forward / to paths.\n\nTo run ITestAzureBlobFileSystemDelegationSAS tests follow the instructions in testing_azure.md under the heading\n\"To run Delegation SAS test cases\".  You also need to set \"fs.azure.enable.check.access\" to true.\n\nTEST RESULTS:\n\nnamespace.enabled\u003dtrue\nauth.type\u003dSharedKey\n-------------------\n$mvn -T 1C -Dparallel-tests\u003dabfs -Dscale -DtestsThreadCount\u003d8 clean verify\nTests run: 63, Failures: 0, Errors: 0, Skipped: 0\nTests run: 432, Failures: 0, Errors: 0, Skipped: 41\nTests run: 206, Failures: 0, Errors: 0, Skipped: 24\n\nnamespace.enabled\u003dfalse\nauth.type\u003dSharedKey\n-------------------\n$mvn -T 1C -Dparallel-tests\u003dabfs -Dscale -DtestsThreadCount\u003d8 clean verify\nTests run: 63, Failures: 0, Errors: 0, Skipped: 0\nTests run: 432, Failures: 0, Errors: 0, Skipped: 244\nTests run: 206, Failures: 0, Errors: 0, Skipped: 24\n\nnamespace.enabled\u003dtrue\nauth.type\u003dSharedKey\nsas.token.provider.type\u003dMockDelegationSASTokenProvider\nenable.check.access\u003dtrue\n-------------------\n$mvn -T 1C -Dparallel-tests\u003dabfs -Dscale -DtestsThreadCount\u003d8 clean verify\nTests run: 63, Failures: 0, Errors: 0, Skipped: 0\nTests run: 432, Failures: 0, Errors: 0, Skipped: 33\nTests run: 206, Failures: 0, Errors: 0, Skipped: 24\n\nnamespace.enabled\u003dtrue\nauth.type\u003dOAuth\n-------------------\n$mvn -T 1C -Dparallel-tests\u003dabfs -Dscale -DtestsThreadCount\u003d8 clean verify\nTests run: 63, Failures: 0, Errors: 0, Skipped: 0\nTests run: 432, Failures: 0, Errors: 1, Skipped: 74\nTests run: 206, Failures: 0, Errors: 0, Skipped: 140\n",
      "commitDate": "12/05/20 11:35 AM",
      "commitName": "b214bbd2d92a0c02b71d352dba85f3b87317933c",
      "commitAuthor": "Thomas Marquardt",
      "commitDateOld": "23/04/20 5:46 PM",
      "commitNameOld": "30ef8d0f1a1463931fe581a46c739dad4c8260e4",
      "commitAuthorOld": "bilaharith",
      "daysBetweenCommits": 18.74,
      "commitsBetweenForRepo": 65,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public Hashtable\u003cString, String\u003e getPathStatus(final Path path) throws AzureBlobFileSystemException {\n     try (AbfsPerfInfo perfInfo \u003d startTracking(\"getPathStatus\", \"getPathStatus\")){\n       LOG.debug(\"getPathStatus for filesystem: {} path: {}\",\n               client.getFileSystem(),\n               path);\n \n       final Hashtable\u003cString, String\u003e parsedXmsProperties;\n-      final AbfsRestOperation op \u003d client.getPathStatus(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n+      final AbfsRestOperation op \u003d client.getPathStatus(getRelativePath(path), true);\n       perfInfo.registerResult(op.getResult());\n \n       final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n \n       parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n \n       perfInfo.registerSuccess(true);\n \n       return parsedXmsProperties;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Hashtable\u003cString, String\u003e getPathStatus(final Path path) throws AzureBlobFileSystemException {\n    try (AbfsPerfInfo perfInfo \u003d startTracking(\"getPathStatus\", \"getPathStatus\")){\n      LOG.debug(\"getPathStatus for filesystem: {} path: {}\",\n              client.getFileSystem(),\n              path);\n\n      final Hashtable\u003cString, String\u003e parsedXmsProperties;\n      final AbfsRestOperation op \u003d client.getPathStatus(getRelativePath(path), true);\n      perfInfo.registerResult(op.getResult());\n\n      final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n\n      parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n\n      perfInfo.registerSuccess(true);\n\n      return parsedXmsProperties;\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java",
      "extendedDetails": {}
    },
    "b033c681e4fc3ee1a38caa807e130aee481d99d5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16612. Track Azure Blob File System client-perceived latency\n\nContributed by Jeetesh Mangwani.\n\nThis add the ability to track the end-to-end performance of ADLS Gen 2 REST APIs by measuring latency in the Hadoop ABFS driver.\nThe latency information is sent back to the ADLS Gen 2 REST API endpoints in the subsequent requests.\n",
      "commitDate": "19/11/19 9:00 AM",
      "commitName": "b033c681e4fc3ee1a38caa807e130aee481d99d5",
      "commitAuthor": "Jeetesh Mangwani",
      "commitDateOld": "28/09/19 8:39 PM",
      "commitNameOld": "c0edc848a8e71b5e2a1586a589bbf2ac8685040d",
      "commitAuthorOld": "Sneha Vijayarajan",
      "daysBetweenCommits": 51.56,
      "commitsBetweenForRepo": 252,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,19 @@\n   public Hashtable\u003cString, String\u003e getPathStatus(final Path path) throws AzureBlobFileSystemException {\n-    LOG.debug(\"getPathStatus for filesystem: {} path: {}\",\n-            client.getFileSystem(),\n-           path);\n+    try (AbfsPerfInfo perfInfo \u003d startTracking(\"getPathStatus\", \"getPathStatus\")){\n+      LOG.debug(\"getPathStatus for filesystem: {} path: {}\",\n+              client.getFileSystem(),\n+              path);\n \n-    final Hashtable\u003cString, String\u003e parsedXmsProperties;\n-    final AbfsRestOperation op \u003d client.getPathStatus(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n+      final Hashtable\u003cString, String\u003e parsedXmsProperties;\n+      final AbfsRestOperation op \u003d client.getPathStatus(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n+      perfInfo.registerResult(op.getResult());\n \n-    final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n+      final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n \n-    parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n+      parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n \n-    return parsedXmsProperties;\n+      perfInfo.registerSuccess(true);\n+\n+      return parsedXmsProperties;\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Hashtable\u003cString, String\u003e getPathStatus(final Path path) throws AzureBlobFileSystemException {\n    try (AbfsPerfInfo perfInfo \u003d startTracking(\"getPathStatus\", \"getPathStatus\")){\n      LOG.debug(\"getPathStatus for filesystem: {} path: {}\",\n              client.getFileSystem(),\n              path);\n\n      final Hashtable\u003cString, String\u003e parsedXmsProperties;\n      final AbfsRestOperation op \u003d client.getPathStatus(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n      perfInfo.registerResult(op.getResult());\n\n      final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n\n      parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n\n      perfInfo.registerSuccess(true);\n\n      return parsedXmsProperties;\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java",
      "extendedDetails": {}
    },
    "e0260417ade5568ae37dcc3753aea0d1e0fd701b": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "HADOOP-16169. ABFS: Bug fix for getPathProperties.\n\nAuthor:    Da Zhou \u003cda.zhou@microsoft.com\u003e\n",
      "commitDate": "08/03/19 5:53 AM",
      "commitName": "e0260417ade5568ae37dcc3753aea0d1e0fd701b",
      "commitAuthor": "Da Zhou",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-16169. ABFS: Bug fix for getPathProperties.\n\nAuthor:    Da Zhou \u003cda.zhou@microsoft.com\u003e\n",
          "commitDate": "08/03/19 5:53 AM",
          "commitName": "e0260417ade5568ae37dcc3753aea0d1e0fd701b",
          "commitAuthor": "Da Zhou",
          "commitDateOld": "28/02/19 6:22 AM",
          "commitNameOld": "65f60e56b082faf92e1cd3daee2569d8fc669c67",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 7.98,
          "commitsBetweenForRepo": 77,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  public Hashtable\u003cString, String\u003e getPathProperties(final Path path) throws AzureBlobFileSystemException {\n-    LOG.debug(\"getPathProperties for filesystem: {} path: {}\",\n+  public Hashtable\u003cString, String\u003e getPathStatus(final Path path) throws AzureBlobFileSystemException {\n+    LOG.debug(\"getPathStatus for filesystem: {} path: {}\",\n             client.getFileSystem(),\n            path);\n \n     final Hashtable\u003cString, String\u003e parsedXmsProperties;\n-    final AbfsRestOperation op \u003d client.getPathProperties(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path), isNamespaceEnabled);\n+    final AbfsRestOperation op \u003d client.getPathStatus(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n \n     final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n \n     parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n \n     return parsedXmsProperties;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Hashtable\u003cString, String\u003e getPathStatus(final Path path) throws AzureBlobFileSystemException {\n    LOG.debug(\"getPathStatus for filesystem: {} path: {}\",\n            client.getFileSystem(),\n           path);\n\n    final Hashtable\u003cString, String\u003e parsedXmsProperties;\n    final AbfsRestOperation op \u003d client.getPathStatus(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n\n    final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n\n    parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n\n    return parsedXmsProperties;\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java",
          "extendedDetails": {
            "oldValue": "getPathProperties",
            "newValue": "getPathStatus"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16169. ABFS: Bug fix for getPathProperties.\n\nAuthor:    Da Zhou \u003cda.zhou@microsoft.com\u003e\n",
          "commitDate": "08/03/19 5:53 AM",
          "commitName": "e0260417ade5568ae37dcc3753aea0d1e0fd701b",
          "commitAuthor": "Da Zhou",
          "commitDateOld": "28/02/19 6:22 AM",
          "commitNameOld": "65f60e56b082faf92e1cd3daee2569d8fc669c67",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 7.98,
          "commitsBetweenForRepo": 77,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  public Hashtable\u003cString, String\u003e getPathProperties(final Path path) throws AzureBlobFileSystemException {\n-    LOG.debug(\"getPathProperties for filesystem: {} path: {}\",\n+  public Hashtable\u003cString, String\u003e getPathStatus(final Path path) throws AzureBlobFileSystemException {\n+    LOG.debug(\"getPathStatus for filesystem: {} path: {}\",\n             client.getFileSystem(),\n            path);\n \n     final Hashtable\u003cString, String\u003e parsedXmsProperties;\n-    final AbfsRestOperation op \u003d client.getPathProperties(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path), isNamespaceEnabled);\n+    final AbfsRestOperation op \u003d client.getPathStatus(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n \n     final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n \n     parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n \n     return parsedXmsProperties;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Hashtable\u003cString, String\u003e getPathStatus(final Path path) throws AzureBlobFileSystemException {\n    LOG.debug(\"getPathStatus for filesystem: {} path: {}\",\n            client.getFileSystem(),\n           path);\n\n    final Hashtable\u003cString, String\u003e parsedXmsProperties;\n    final AbfsRestOperation op \u003d client.getPathStatus(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n\n    final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n\n    parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n\n    return parsedXmsProperties;\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "a8302e398c2ca4b0deff062c0e921053351b688e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15872. ABFS: Update to target 2018-11-09 REST version for ADLS Gen 2.\n\nContributed by Junhua Gu and Da Zhou.\n",
      "commitDate": "23/11/18 6:17 AM",
      "commitName": "a8302e398c2ca4b0deff062c0e921053351b688e",
      "commitAuthor": "Da Zhou",
      "commitDateOld": "13/11/18 1:46 PM",
      "commitNameOld": "a13be203b7877ba56ef63aac4a2e65d4e1a4adbc",
      "commitAuthorOld": "Da Zhou",
      "daysBetweenCommits": 9.69,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public Hashtable\u003cString, String\u003e getPathProperties(final Path path) throws AzureBlobFileSystemException {\n     LOG.debug(\"getPathProperties for filesystem: {} path: {}\",\n             client.getFileSystem(),\n            path);\n \n     final Hashtable\u003cString, String\u003e parsedXmsProperties;\n-    final AbfsRestOperation op \u003d client.getPathProperties(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n+    final AbfsRestOperation op \u003d client.getPathProperties(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path), isNamespaceEnabled);\n \n     final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n \n     parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n \n     return parsedXmsProperties;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Hashtable\u003cString, String\u003e getPathProperties(final Path path) throws AzureBlobFileSystemException {\n    LOG.debug(\"getPathProperties for filesystem: {} path: {}\",\n            client.getFileSystem(),\n           path);\n\n    final Hashtable\u003cString, String\u003e parsedXmsProperties;\n    final AbfsRestOperation op \u003d client.getPathProperties(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path), isNamespaceEnabled);\n\n    final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n\n    parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n\n    return parsedXmsProperties;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java",
      "extendedDetails": {}
    },
    "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15446. ABFS: tune imports \u0026 javadocs; stabilise tests.\nContributed by Steve Loughran and Da Zhou.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be",
      "commitAuthor": "Thomas Marquardt",
      "commitDateOld": "17/09/18 12:54 PM",
      "commitNameOld": "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,14 @@\n   public Hashtable\u003cString, String\u003e getPathProperties(final Path path) throws AzureBlobFileSystemException {\n-    this.LOG.debug(\n-            \"getPathProperties for filesystem: {} path: {}\",\n+    LOG.debug(\"getPathProperties for filesystem: {} path: {}\",\n             client.getFileSystem(),\n-            path.toString());\n+           path);\n \n     final Hashtable\u003cString, String\u003e parsedXmsProperties;\n     final AbfsRestOperation op \u003d client.getPathProperties(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n \n     final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n \n     parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n \n     return parsedXmsProperties;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Hashtable\u003cString, String\u003e getPathProperties(final Path path) throws AzureBlobFileSystemException {\n    LOG.debug(\"getPathProperties for filesystem: {} path: {}\",\n            client.getFileSystem(),\n           path);\n\n    final Hashtable\u003cString, String\u003e parsedXmsProperties;\n    final AbfsRestOperation op \u003d client.getPathProperties(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n\n    final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n\n    parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n\n    return parsedXmsProperties;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java",
      "extendedDetails": {}
    },
    "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "HADOOP-15560. ABFS: removed dependency injection and unnecessary dependencies.\nContributed by Da Zhou.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HADOOP-15560. ABFS: removed dependency injection and unnecessary dependencies.\nContributed by Da Zhou.\n",
          "commitDate": "17/09/18 12:54 PM",
          "commitName": "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "17/09/18 12:54 PM",
          "commitNameOld": "f044deedbbfee0812316d587139cb828f27172e9",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,15 @@\n-  public Hashtable\u003cString, String\u003e getPathProperties(final AzureBlobFileSystem azureBlobFileSystem, final Path path) throws\n-      AzureBlobFileSystemException {\n-    final AbfsClient client \u003d this.getOrCreateClient(azureBlobFileSystem);\n-\n+  public Hashtable\u003cString, String\u003e getPathProperties(final Path path) throws AzureBlobFileSystemException {\n     this.LOG.debug(\n-        \"getPathProperties for filesystem: {} path: {}\",\n-        client.getFileSystem(),\n-        path.toString());\n+            \"getPathProperties for filesystem: {} path: {}\",\n+            client.getFileSystem(),\n+            path.toString());\n \n     final Hashtable\u003cString, String\u003e parsedXmsProperties;\n     final AbfsRestOperation op \u003d client.getPathProperties(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n \n     final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n \n     parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n \n     return parsedXmsProperties;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Hashtable\u003cString, String\u003e getPathProperties(final Path path) throws AzureBlobFileSystemException {\n    this.LOG.debug(\n            \"getPathProperties for filesystem: {} path: {}\",\n            client.getFileSystem(),\n            path.toString());\n\n    final Hashtable\u003cString, String\u003e parsedXmsProperties;\n    final AbfsRestOperation op \u003d client.getPathProperties(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n\n    final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n\n    parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n\n    return parsedXmsProperties;\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java",
          "extendedDetails": {
            "oldPath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsHttpServiceImpl.java",
            "newPath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-15560. ABFS: removed dependency injection and unnecessary dependencies.\nContributed by Da Zhou.\n",
          "commitDate": "17/09/18 12:54 PM",
          "commitName": "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "17/09/18 12:54 PM",
          "commitNameOld": "f044deedbbfee0812316d587139cb828f27172e9",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,15 @@\n-  public Hashtable\u003cString, String\u003e getPathProperties(final AzureBlobFileSystem azureBlobFileSystem, final Path path) throws\n-      AzureBlobFileSystemException {\n-    final AbfsClient client \u003d this.getOrCreateClient(azureBlobFileSystem);\n-\n+  public Hashtable\u003cString, String\u003e getPathProperties(final Path path) throws AzureBlobFileSystemException {\n     this.LOG.debug(\n-        \"getPathProperties for filesystem: {} path: {}\",\n-        client.getFileSystem(),\n-        path.toString());\n+            \"getPathProperties for filesystem: {} path: {}\",\n+            client.getFileSystem(),\n+            path.toString());\n \n     final Hashtable\u003cString, String\u003e parsedXmsProperties;\n     final AbfsRestOperation op \u003d client.getPathProperties(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n \n     final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n \n     parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n \n     return parsedXmsProperties;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Hashtable\u003cString, String\u003e getPathProperties(final Path path) throws AzureBlobFileSystemException {\n    this.LOG.debug(\n            \"getPathProperties for filesystem: {} path: {}\",\n            client.getFileSystem(),\n            path.toString());\n\n    final Hashtable\u003cString, String\u003e parsedXmsProperties;\n    final AbfsRestOperation op \u003d client.getPathProperties(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n\n    final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n\n    parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n\n    return parsedXmsProperties;\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-15560. ABFS: removed dependency injection and unnecessary dependencies.\nContributed by Da Zhou.\n",
          "commitDate": "17/09/18 12:54 PM",
          "commitName": "a271fd0eca75cef8b8ba940cdac8ad4fd21b4462",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "17/09/18 12:54 PM",
          "commitNameOld": "f044deedbbfee0812316d587139cb828f27172e9",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,15 @@\n-  public Hashtable\u003cString, String\u003e getPathProperties(final AzureBlobFileSystem azureBlobFileSystem, final Path path) throws\n-      AzureBlobFileSystemException {\n-    final AbfsClient client \u003d this.getOrCreateClient(azureBlobFileSystem);\n-\n+  public Hashtable\u003cString, String\u003e getPathProperties(final Path path) throws AzureBlobFileSystemException {\n     this.LOG.debug(\n-        \"getPathProperties for filesystem: {} path: {}\",\n-        client.getFileSystem(),\n-        path.toString());\n+            \"getPathProperties for filesystem: {} path: {}\",\n+            client.getFileSystem(),\n+            path.toString());\n \n     final Hashtable\u003cString, String\u003e parsedXmsProperties;\n     final AbfsRestOperation op \u003d client.getPathProperties(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n \n     final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n \n     parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n \n     return parsedXmsProperties;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Hashtable\u003cString, String\u003e getPathProperties(final Path path) throws AzureBlobFileSystemException {\n    this.LOG.debug(\n            \"getPathProperties for filesystem: {} path: {}\",\n            client.getFileSystem(),\n            path.toString());\n\n    final Hashtable\u003cString, String\u003e parsedXmsProperties;\n    final AbfsRestOperation op \u003d client.getPathProperties(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n\n    final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n\n    parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n\n    return parsedXmsProperties;\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystemStore.java",
          "extendedDetails": {
            "oldValue": "[azureBlobFileSystem-AzureBlobFileSystem(modifiers-final), path-Path(modifiers-final)]",
            "newValue": "[path-Path(modifiers-final)]"
          }
        }
      ]
    },
    "f044deedbbfee0812316d587139cb828f27172e9": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15407. HADOOP-15540. Support Windows Azure Storage - Blob file system \"ABFS\" in Hadoop: Core Commit.\n\nContributed by Shane Mainali, Thomas Marquardt, Zichen Sun, Georgi Chalakov, Esfandiar Manii, Amit Singh, Dana Kaban, Da Zhou, Junhua Gu, Saher Ahwal, Saurabh Pant, James Baker, Shaoyu Zhang, Lawrence Chen, Kevin Chen and Steve Loughran\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "f044deedbbfee0812316d587139cb828f27172e9",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,18 @@\n+  public Hashtable\u003cString, String\u003e getPathProperties(final AzureBlobFileSystem azureBlobFileSystem, final Path path) throws\n+      AzureBlobFileSystemException {\n+    final AbfsClient client \u003d this.getOrCreateClient(azureBlobFileSystem);\n+\n+    this.LOG.debug(\n+        \"getPathProperties for filesystem: {} path: {}\",\n+        client.getFileSystem(),\n+        path.toString());\n+\n+    final Hashtable\u003cString, String\u003e parsedXmsProperties;\n+    final AbfsRestOperation op \u003d client.getPathProperties(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n+\n+    final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n+\n+    parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n+\n+    return parsedXmsProperties;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Hashtable\u003cString, String\u003e getPathProperties(final AzureBlobFileSystem azureBlobFileSystem, final Path path) throws\n      AzureBlobFileSystemException {\n    final AbfsClient client \u003d this.getOrCreateClient(azureBlobFileSystem);\n\n    this.LOG.debug(\n        \"getPathProperties for filesystem: {} path: {}\",\n        client.getFileSystem(),\n        path.toString());\n\n    final Hashtable\u003cString, String\u003e parsedXmsProperties;\n    final AbfsRestOperation op \u003d client.getPathProperties(AbfsHttpConstants.FORWARD_SLASH + getRelativePath(path));\n\n    final String xMsProperties \u003d op.getResult().getResponseHeader(HttpHeaderConfigurations.X_MS_PROPERTIES);\n\n    parsedXmsProperties \u003d parseCommaSeparatedXmsProperties(xMsProperties);\n\n    return parsedXmsProperties;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsHttpServiceImpl.java"
    }
  }
}