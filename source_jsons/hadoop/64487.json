{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AUtils.java",
  "functionName": "getPassword",
  "functionId": "getPassword___conf-Configuration__key-String__val-String",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AUtils.java",
  "functionStartLine": 924,
  "functionEndLine": 927,
  "numCommitsSeen": 51,
  "timeTaken": 2862,
  "changeHistory": [
    "7ac88244c54ce483729af3d2736d9f4731e230ca",
    "667966c13c1e09077c2e2088bd66c9d7851dd14e",
    "763f0497bb996e331e40caed9ca0af966f5b3fac",
    "4aefe119a0203c03cdc893dcb3330fd37f26f0ee"
  ],
  "changeHistoryShort": {
    "7ac88244c54ce483729af3d2736d9f4731e230ca": "Ymultichange(Ymodifierchange,Ybodychange)",
    "667966c13c1e09077c2e2088bd66c9d7851dd14e": "Ybodychange",
    "763f0497bb996e331e40caed9ca0af966f5b3fac": "Ymultichange(Ymodifierchange,Ybodychange)",
    "4aefe119a0203c03cdc893dcb3330fd37f26f0ee": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ac88244c54ce483729af3d2736d9f4731e230ca": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-14507. Extend per-bucket secret key config with explicit getPassword() on fs.s3a.$bucket.secret.key.\nContributed by Steve Loughran.\n",
      "commitDate": "16/02/18 8:37 AM",
      "commitName": "7ac88244c54ce483729af3d2736d9f4731e230ca",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-14507. Extend per-bucket secret key config with explicit getPassword() on fs.s3a.$bucket.secret.key.\nContributed by Steve Loughran.\n",
          "commitDate": "16/02/18 8:37 AM",
          "commitName": "7ac88244c54ce483729af3d2736d9f4731e230ca",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "15/02/18 7:57 AM",
          "commitNameOld": "9a013b255f301c557c3868dc1ad657202e9e7a67",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 1.03,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,4 @@\n-  static String getPassword(Configuration conf, String key, String val)\n+  private static String getPassword(Configuration conf, String key, String val)\n       throws IOException {\n-    String defVal \u003d \"\";\n-    return getPassword(conf, key, val, defVal);\n+    return getPassword(conf, key, val, \"\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static String getPassword(Configuration conf, String key, String val)\n      throws IOException {\n    return getPassword(conf, key, val, \"\");\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AUtils.java",
          "extendedDetails": {
            "oldValue": "[static]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14507. Extend per-bucket secret key config with explicit getPassword() on fs.s3a.$bucket.secret.key.\nContributed by Steve Loughran.\n",
          "commitDate": "16/02/18 8:37 AM",
          "commitName": "7ac88244c54ce483729af3d2736d9f4731e230ca",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "15/02/18 7:57 AM",
          "commitNameOld": "9a013b255f301c557c3868dc1ad657202e9e7a67",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 1.03,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,4 @@\n-  static String getPassword(Configuration conf, String key, String val)\n+  private static String getPassword(Configuration conf, String key, String val)\n       throws IOException {\n-    String defVal \u003d \"\";\n-    return getPassword(conf, key, val, defVal);\n+    return getPassword(conf, key, val, \"\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static String getPassword(Configuration conf, String key, String val)\n      throws IOException {\n    return getPassword(conf, key, val, \"\");\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "667966c13c1e09077c2e2088bd66c9d7851dd14e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14324. Refine S3 server-side-encryption key as encryption secret; improve error reporting and diagnostics. Contributed by Steve Loughran\n",
      "commitDate": "20/04/17 5:13 PM",
      "commitName": "667966c13c1e09077c2e2088bd66c9d7851dd14e",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "12/04/17 10:02 AM",
      "commitNameOld": "b8305e6d06cbb9d44c728da14506d5cf825c12e5",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 8.3,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,5 @@\n   static String getPassword(Configuration conf, String key, String val)\n       throws IOException {\n-    return StringUtils.isEmpty(val)\n-        ? lookupPassword(conf, key, \"\")\n-        : val;\n+    String defVal \u003d \"\";\n+    return getPassword(conf, key, val, defVal);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static String getPassword(Configuration conf, String key, String val)\n      throws IOException {\n    String defVal \u003d \"\";\n    return getPassword(conf, key, val, defVal);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AUtils.java",
      "extendedDetails": {}
    },
    "763f0497bb996e331e40caed9ca0af966f5b3fac": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-13252. Tune S3A provider plugin mechanism. Contributed by Steve Loughran.\n",
      "commitDate": "19/08/16 10:48 AM",
      "commitName": "763f0497bb996e331e40caed9ca0af966f5b3fac",
      "commitAuthor": "Chris Nauroth",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-13252. Tune S3A provider plugin mechanism. Contributed by Steve Loughran.\n",
          "commitDate": "19/08/16 10:48 AM",
          "commitName": "763f0497bb996e331e40caed9ca0af966f5b3fac",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "17/08/16 2:54 PM",
          "commitNameOld": "822d661b8fcc42bec6eea958d9fd02ef1aaa4b6c",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 1.83,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,6 @@\n-  private static String getPassword(Configuration conf, String key, String val)\n+  static String getPassword(Configuration conf, String key, String val)\n       throws IOException {\n-    if (StringUtils.isEmpty(val)) {\n-      try {\n-        final char[] pass \u003d conf.getPassword(key);\n-        if (pass !\u003d null) {\n-          return (new String(pass)).trim();\n-        } else {\n-          return \"\";\n-        }\n-      } catch (IOException ioe) {\n-        throw new IOException(\"Cannot find password option \" + key, ioe);\n-      }\n-    } else {\n-      return val;\n-    }\n+    return StringUtils.isEmpty(val)\n+        ? lookupPassword(conf, key, \"\")\n+        : val;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static String getPassword(Configuration conf, String key, String val)\n      throws IOException {\n    return StringUtils.isEmpty(val)\n        ? lookupPassword(conf, key, \"\")\n        : val;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AUtils.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13252. Tune S3A provider plugin mechanism. Contributed by Steve Loughran.\n",
          "commitDate": "19/08/16 10:48 AM",
          "commitName": "763f0497bb996e331e40caed9ca0af966f5b3fac",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "17/08/16 2:54 PM",
          "commitNameOld": "822d661b8fcc42bec6eea958d9fd02ef1aaa4b6c",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 1.83,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,6 @@\n-  private static String getPassword(Configuration conf, String key, String val)\n+  static String getPassword(Configuration conf, String key, String val)\n       throws IOException {\n-    if (StringUtils.isEmpty(val)) {\n-      try {\n-        final char[] pass \u003d conf.getPassword(key);\n-        if (pass !\u003d null) {\n-          return (new String(pass)).trim();\n-        } else {\n-          return \"\";\n-        }\n-      } catch (IOException ioe) {\n-        throw new IOException(\"Cannot find password option \" + key, ioe);\n-      }\n-    } else {\n-      return val;\n-    }\n+    return StringUtils.isEmpty(val)\n+        ? lookupPassword(conf, key, \"\")\n+        : val;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static String getPassword(Configuration conf, String key, String val)\n      throws IOException {\n    return StringUtils.isEmpty(val)\n        ? lookupPassword(conf, key, \"\")\n        : val;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "4aefe119a0203c03cdc893dcb3330fd37f26f0ee": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-3733. \"s3x:\" URLs break when Secret Key contains a slash, even if encoded. Contributed by Steve Loughran.\n",
      "commitDate": "16/06/16 11:13 AM",
      "commitName": "4aefe119a0203c03cdc893dcb3330fd37f26f0ee",
      "commitAuthor": "Ravi Prakash",
      "diff": "@@ -0,0 +1,17 @@\n+  private static String getPassword(Configuration conf, String key, String val)\n+      throws IOException {\n+    if (StringUtils.isEmpty(val)) {\n+      try {\n+        final char[] pass \u003d conf.getPassword(key);\n+        if (pass !\u003d null) {\n+          return (new String(pass)).trim();\n+        } else {\n+          return \"\";\n+        }\n+      } catch (IOException ioe) {\n+        throw new IOException(\"Cannot find password option \" + key, ioe);\n+      }\n+    } else {\n+      return val;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static String getPassword(Configuration conf, String key, String val)\n      throws IOException {\n    if (StringUtils.isEmpty(val)) {\n      try {\n        final char[] pass \u003d conf.getPassword(key);\n        if (pass !\u003d null) {\n          return (new String(pass)).trim();\n        } else {\n          return \"\";\n        }\n      } catch (IOException ioe) {\n        throw new IOException(\"Cannot find password option \" + key, ioe);\n      }\n    } else {\n      return val;\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AUtils.java"
    }
  }
}