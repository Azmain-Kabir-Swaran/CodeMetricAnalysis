{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSPermissionChecker.java",
  "functionName": "getINodeAttrs",
  "functionId": "getINodeAttrs___pathByNameArr-byte[][]__pathIdx-int__inode-INode__snapshotId-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
  "functionStartLine": 370,
  "functionEndLine": 389,
  "numCommitsSeen": 51,
  "timeTaken": 2164,
  "changeHistory": [
    "b406d8e3755d24ce72c443fd893a5672fd56babc",
    "53a28afe293e5bf185c8d4f2c7aea212e66015c2"
  ],
  "changeHistoryShort": {
    "b406d8e3755d24ce72c443fd893a5672fd56babc": "Ybodychange",
    "53a28afe293e5bf185c8d4f2c7aea212e66015c2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b406d8e3755d24ce72c443fd893a5672fd56babc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12614. FSPermissionChecker#getINodeAttrs() throws NPE when INodeAttributesProvider configured.\n",
      "commitDate": "16/10/17 5:42 PM",
      "commitName": "b406d8e3755d24ce72c443fd893a5672fd56babc",
      "commitAuthor": "Manoj Govindassamy",
      "commitDateOld": "14/07/17 2:35 PM",
      "commitNameOld": "f413ee33df301659c4ca9024380c2354983dcc84",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 94.13,
      "commitsBetweenForRepo": 793,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,20 @@\n   private INodeAttributes getINodeAttrs(byte[][] pathByNameArr, int pathIdx,\n       INode inode, int snapshotId) {\n     INodeAttributes inodeAttrs \u003d inode.getSnapshotINode(snapshotId);\n     if (getAttributesProvider() !\u003d null) {\n       String[] elements \u003d new String[pathIdx + 1];\n-      for (int i \u003d 0; i \u003c elements.length; i++) {\n-        elements[i] \u003d DFSUtil.bytes2String(pathByNameArr[i]);\n+      /**\n+       * {@link INode#getPathComponents(String)} returns a null component\n+       * for the root only path \"/\". Assign an empty string if so.\n+       */\n+      if (pathByNameArr.length \u003d\u003d 1 \u0026\u0026 pathByNameArr[0] \u003d\u003d null) {\n+        elements[0] \u003d \"\";\n+      } else {\n+        for (int i \u003d 0; i \u003c elements.length; i++) {\n+          elements[i] \u003d DFSUtil.bytes2String(pathByNameArr[i]);\n+        }\n       }\n       inodeAttrs \u003d getAttributesProvider().getAttributes(elements, inodeAttrs);\n     }\n     return inodeAttrs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private INodeAttributes getINodeAttrs(byte[][] pathByNameArr, int pathIdx,\n      INode inode, int snapshotId) {\n    INodeAttributes inodeAttrs \u003d inode.getSnapshotINode(snapshotId);\n    if (getAttributesProvider() !\u003d null) {\n      String[] elements \u003d new String[pathIdx + 1];\n      /**\n       * {@link INode#getPathComponents(String)} returns a null component\n       * for the root only path \"/\". Assign an empty string if so.\n       */\n      if (pathByNameArr.length \u003d\u003d 1 \u0026\u0026 pathByNameArr[0] \u003d\u003d null) {\n        elements[0] \u003d \"\";\n      } else {\n        for (int i \u003d 0; i \u003c elements.length; i++) {\n          elements[i] \u003d DFSUtil.bytes2String(pathByNameArr[i]);\n        }\n      }\n      inodeAttrs \u003d getAttributesProvider().getAttributes(elements, inodeAttrs);\n    }\n    return inodeAttrs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
      "extendedDetails": {}
    },
    "53a28afe293e5bf185c8d4f2c7aea212e66015c2": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6826. Plugin interface to enable delegation of HDFS authorization assertions. Contributed by Arun Suresh.\n",
      "commitDate": "24/03/15 4:02 PM",
      "commitName": "53a28afe293e5bf185c8d4f2c7aea212e66015c2",
      "commitAuthor": "Jitendra Pandey",
      "diff": "@@ -0,0 +1,12 @@\n+  private INodeAttributes getINodeAttrs(byte[][] pathByNameArr, int pathIdx,\n+      INode inode, int snapshotId) {\n+    INodeAttributes inodeAttrs \u003d inode.getSnapshotINode(snapshotId);\n+    if (getAttributesProvider() !\u003d null) {\n+      String[] elements \u003d new String[pathIdx + 1];\n+      for (int i \u003d 0; i \u003c elements.length; i++) {\n+        elements[i] \u003d DFSUtil.bytes2String(pathByNameArr[i]);\n+      }\n+      inodeAttrs \u003d getAttributesProvider().getAttributes(elements, inodeAttrs);\n+    }\n+    return inodeAttrs;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private INodeAttributes getINodeAttrs(byte[][] pathByNameArr, int pathIdx,\n      INode inode, int snapshotId) {\n    INodeAttributes inodeAttrs \u003d inode.getSnapshotINode(snapshotId);\n    if (getAttributesProvider() !\u003d null) {\n      String[] elements \u003d new String[pathIdx + 1];\n      for (int i \u003d 0; i \u003c elements.length; i++) {\n        elements[i] \u003d DFSUtil.bytes2String(pathByNameArr[i]);\n      }\n      inodeAttrs \u003d getAttributesProvider().getAttributes(elements, inodeAttrs);\n    }\n    return inodeAttrs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java"
    }
  }
}