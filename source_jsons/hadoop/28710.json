{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BuilderUtils.java",
  "functionName": "newContainerTokenIdentifier",
  "functionId": "newContainerTokenIdentifier___containerToken-Token",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/BuilderUtils.java",
  "functionStartLine": 322,
  "functionEndLine": 331,
  "numCommitsSeen": 145,
  "timeTaken": 9062,
  "changeHistory": [
    "d33534c4fb35cb82ff8d56abeeb63a949e72a031",
    "a2c42330047bf955a6a585dcddf798920d4c8640",
    "259edf8dca44de54033e96f7eb65a83aaa6096f2",
    "1a119f87b4f0a78d56e1bb998b1cbc081484fbd1",
    "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "df2991c0cbc3f35c2640b93680667507c4f810dd",
    "1e6dfa7472ad78a252d05c8ebffe086d938b61fa",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "d33534c4fb35cb82ff8d56abeeb63a949e72a031": "Yfilerename",
    "a2c42330047bf955a6a585dcddf798920d4c8640": "Yparameterchange",
    "259edf8dca44de54033e96f7eb65a83aaa6096f2": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Yexceptionschange,Ybodychange)",
    "1a119f87b4f0a78d56e1bb998b1cbc081484fbd1": "Ymultichange(Yparameterchange,Ybodychange)",
    "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c": "Ymultichange(Yparameterchange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "df2991c0cbc3f35c2640b93680667507c4f810dd": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "1e6dfa7472ad78a252d05c8ebffe086d938b61fa": "Ymultichange(Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d33534c4fb35cb82ff8d56abeeb63a949e72a031": {
      "type": "Yfilerename",
      "commitMessage": "YARN-748. Moved BuilderUtils from yarn-common to yarn-server-common for eventual retirement. Contributed by Jian He.\nMAPREDUCE-5297. Updated MR App since BuilderUtils is no longer public after YARN-748. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489257 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 5:34 PM",
      "commitName": "d33534c4fb35cb82ff8d56abeeb63a949e72a031",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/06/13 4:56 PM",
      "commitNameOld": "72e1568be34ff9d8d50dc438ec3f6a86552a2f83",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static ContainerTokenIdentifier newContainerTokenIdentifier(\n      Token containerToken) throws IOException {\n    org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e token \u003d\n        new org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e(\n            containerToken.getIdentifier()\n                .array(), containerToken.getPassword().array(), new Text(\n                containerToken.getKind()),\n            new Text(containerToken.getService()));\n    return token.decodeIdentifier();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/BuilderUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/BuilderUtils.java"
      }
    },
    "a2c42330047bf955a6a585dcddf798920d4c8640": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-717. Put object creation factories for Token in the class itself and remove useless derivations for specific tokens. Contributed by Jian He.\nMAPREDUCE-5289. Updated MR App to use Token directly after YARN-717. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488616 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/06/13 2:43 PM",
      "commitName": "a2c42330047bf955a6a585dcddf798920d4c8640",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "31/05/13 5:14 PM",
      "commitNameOld": "39f019f41392d9e46ea1dc86ddd5563aabbeda1e",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 0.89,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   public static ContainerTokenIdentifier newContainerTokenIdentifier(\n-      ContainerToken containerToken) throws IOException {\n+      Token containerToken) throws IOException {\n     org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e token \u003d\n         new org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e(\n             containerToken.getIdentifier()\n                 .array(), containerToken.getPassword().array(), new Text(\n                 containerToken.getKind()),\n             new Text(containerToken.getService()));\n     return token.decodeIdentifier();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ContainerTokenIdentifier newContainerTokenIdentifier(\n      Token containerToken) throws IOException {\n    org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e token \u003d\n        new org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e(\n            containerToken.getIdentifier()\n                .array(), containerToken.getPassword().array(), new Text(\n                containerToken.getKind()),\n            new Text(containerToken.getService()));\n    return token.decodeIdentifier();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
      "extendedDetails": {
        "oldValue": "[containerToken-ContainerToken]",
        "newValue": "[containerToken-Token]"
      }
    },
    "259edf8dca44de54033e96f7eb65a83aaa6096f2": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-571. Remove user from ContainerLaunchContext. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485928 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/05/13 8:22 PM",
      "commitName": "259edf8dca44de54033e96f7eb65a83aaa6096f2",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-571. Remove user from ContainerLaunchContext. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485928 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/05/13 8:22 PM",
          "commitName": "259edf8dca44de54033e96f7eb65a83aaa6096f2",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "23/05/13 11:02 AM",
          "commitNameOld": "43876770d91a374563bf3379a5ffab5c2bac2264",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.39,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,10 @@\n-  public static ContainerLaunchContext newContainerLaunchContext(\n-      String user, Map\u003cString, LocalResource\u003e localResources,\n-      Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n-      Map\u003cString, ByteBuffer\u003e serviceData,  ByteBuffer tokens,\n-      Map\u003cApplicationAccessType, String\u003e acls) {\n-    ContainerLaunchContext container \u003d recordFactory\n-        .newRecordInstance(ContainerLaunchContext.class);\n-    container.setUser(user);\n-    container.setLocalResources(localResources);\n-    container.setEnvironment(environment);\n-    container.setCommands(commands);\n-    container.setServiceData(serviceData);\n-    container.setTokens(tokens);\n-    container.setApplicationACLs(acls);\n-    return container;\n+  public static ContainerTokenIdentifier newContainerTokenIdentifier(\n+      ContainerToken containerToken) throws IOException {\n+    org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e token \u003d\n+        new org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e(\n+            containerToken.getIdentifier()\n+                .array(), containerToken.getPassword().array(), new Text(\n+                containerToken.getKind()),\n+            new Text(containerToken.getService()));\n+    return token.decodeIdentifier();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContainerTokenIdentifier newContainerTokenIdentifier(\n      ContainerToken containerToken) throws IOException {\n    org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e token \u003d\n        new org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e(\n            containerToken.getIdentifier()\n                .array(), containerToken.getPassword().array(), new Text(\n                containerToken.getKind()),\n            new Text(containerToken.getService()));\n    return token.decodeIdentifier();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
          "extendedDetails": {
            "oldValue": "newContainerLaunchContext",
            "newValue": "newContainerTokenIdentifier"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-571. Remove user from ContainerLaunchContext. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485928 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/05/13 8:22 PM",
          "commitName": "259edf8dca44de54033e96f7eb65a83aaa6096f2",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "23/05/13 11:02 AM",
          "commitNameOld": "43876770d91a374563bf3379a5ffab5c2bac2264",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.39,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,10 @@\n-  public static ContainerLaunchContext newContainerLaunchContext(\n-      String user, Map\u003cString, LocalResource\u003e localResources,\n-      Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n-      Map\u003cString, ByteBuffer\u003e serviceData,  ByteBuffer tokens,\n-      Map\u003cApplicationAccessType, String\u003e acls) {\n-    ContainerLaunchContext container \u003d recordFactory\n-        .newRecordInstance(ContainerLaunchContext.class);\n-    container.setUser(user);\n-    container.setLocalResources(localResources);\n-    container.setEnvironment(environment);\n-    container.setCommands(commands);\n-    container.setServiceData(serviceData);\n-    container.setTokens(tokens);\n-    container.setApplicationACLs(acls);\n-    return container;\n+  public static ContainerTokenIdentifier newContainerTokenIdentifier(\n+      ContainerToken containerToken) throws IOException {\n+    org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e token \u003d\n+        new org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e(\n+            containerToken.getIdentifier()\n+                .array(), containerToken.getPassword().array(), new Text(\n+                containerToken.getKind()),\n+            new Text(containerToken.getService()));\n+    return token.decodeIdentifier();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContainerTokenIdentifier newContainerTokenIdentifier(\n      ContainerToken containerToken) throws IOException {\n    org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e token \u003d\n        new org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e(\n            containerToken.getIdentifier()\n                .array(), containerToken.getPassword().array(), new Text(\n                containerToken.getKind()),\n            new Text(containerToken.getService()));\n    return token.decodeIdentifier();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
          "extendedDetails": {
            "oldValue": "[user-String, localResources-Map\u003cString,LocalResource\u003e, environment-Map\u003cString,String\u003e, commands-List\u003cString\u003e, serviceData-Map\u003cString,ByteBuffer\u003e, tokens-ByteBuffer, acls-Map\u003cApplicationAccessType,String\u003e]",
            "newValue": "[containerToken-ContainerToken]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-571. Remove user from ContainerLaunchContext. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485928 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/05/13 8:22 PM",
          "commitName": "259edf8dca44de54033e96f7eb65a83aaa6096f2",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "23/05/13 11:02 AM",
          "commitNameOld": "43876770d91a374563bf3379a5ffab5c2bac2264",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.39,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,10 @@\n-  public static ContainerLaunchContext newContainerLaunchContext(\n-      String user, Map\u003cString, LocalResource\u003e localResources,\n-      Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n-      Map\u003cString, ByteBuffer\u003e serviceData,  ByteBuffer tokens,\n-      Map\u003cApplicationAccessType, String\u003e acls) {\n-    ContainerLaunchContext container \u003d recordFactory\n-        .newRecordInstance(ContainerLaunchContext.class);\n-    container.setUser(user);\n-    container.setLocalResources(localResources);\n-    container.setEnvironment(environment);\n-    container.setCommands(commands);\n-    container.setServiceData(serviceData);\n-    container.setTokens(tokens);\n-    container.setApplicationACLs(acls);\n-    return container;\n+  public static ContainerTokenIdentifier newContainerTokenIdentifier(\n+      ContainerToken containerToken) throws IOException {\n+    org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e token \u003d\n+        new org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e(\n+            containerToken.getIdentifier()\n+                .array(), containerToken.getPassword().array(), new Text(\n+                containerToken.getKind()),\n+            new Text(containerToken.getService()));\n+    return token.decodeIdentifier();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContainerTokenIdentifier newContainerTokenIdentifier(\n      ContainerToken containerToken) throws IOException {\n    org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e token \u003d\n        new org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e(\n            containerToken.getIdentifier()\n                .array(), containerToken.getPassword().array(), new Text(\n                containerToken.getKind()),\n            new Text(containerToken.getService()));\n    return token.decodeIdentifier();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
          "extendedDetails": {
            "oldValue": "ContainerLaunchContext",
            "newValue": "ContainerTokenIdentifier"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-571. Remove user from ContainerLaunchContext. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485928 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/05/13 8:22 PM",
          "commitName": "259edf8dca44de54033e96f7eb65a83aaa6096f2",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "23/05/13 11:02 AM",
          "commitNameOld": "43876770d91a374563bf3379a5ffab5c2bac2264",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.39,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,10 @@\n-  public static ContainerLaunchContext newContainerLaunchContext(\n-      String user, Map\u003cString, LocalResource\u003e localResources,\n-      Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n-      Map\u003cString, ByteBuffer\u003e serviceData,  ByteBuffer tokens,\n-      Map\u003cApplicationAccessType, String\u003e acls) {\n-    ContainerLaunchContext container \u003d recordFactory\n-        .newRecordInstance(ContainerLaunchContext.class);\n-    container.setUser(user);\n-    container.setLocalResources(localResources);\n-    container.setEnvironment(environment);\n-    container.setCommands(commands);\n-    container.setServiceData(serviceData);\n-    container.setTokens(tokens);\n-    container.setApplicationACLs(acls);\n-    return container;\n+  public static ContainerTokenIdentifier newContainerTokenIdentifier(\n+      ContainerToken containerToken) throws IOException {\n+    org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e token \u003d\n+        new org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e(\n+            containerToken.getIdentifier()\n+                .array(), containerToken.getPassword().array(), new Text(\n+                containerToken.getKind()),\n+            new Text(containerToken.getService()));\n+    return token.decodeIdentifier();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContainerTokenIdentifier newContainerTokenIdentifier(\n      ContainerToken containerToken) throws IOException {\n    org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e token \u003d\n        new org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e(\n            containerToken.getIdentifier()\n                .array(), containerToken.getPassword().array(), new Text(\n                containerToken.getKind()),\n            new Text(containerToken.getService()));\n    return token.decodeIdentifier();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-571. Remove user from ContainerLaunchContext. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485928 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/05/13 8:22 PM",
          "commitName": "259edf8dca44de54033e96f7eb65a83aaa6096f2",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "23/05/13 11:02 AM",
          "commitNameOld": "43876770d91a374563bf3379a5ffab5c2bac2264",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.39,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,10 @@\n-  public static ContainerLaunchContext newContainerLaunchContext(\n-      String user, Map\u003cString, LocalResource\u003e localResources,\n-      Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n-      Map\u003cString, ByteBuffer\u003e serviceData,  ByteBuffer tokens,\n-      Map\u003cApplicationAccessType, String\u003e acls) {\n-    ContainerLaunchContext container \u003d recordFactory\n-        .newRecordInstance(ContainerLaunchContext.class);\n-    container.setUser(user);\n-    container.setLocalResources(localResources);\n-    container.setEnvironment(environment);\n-    container.setCommands(commands);\n-    container.setServiceData(serviceData);\n-    container.setTokens(tokens);\n-    container.setApplicationACLs(acls);\n-    return container;\n+  public static ContainerTokenIdentifier newContainerTokenIdentifier(\n+      ContainerToken containerToken) throws IOException {\n+    org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e token \u003d\n+        new org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e(\n+            containerToken.getIdentifier()\n+                .array(), containerToken.getPassword().array(), new Text(\n+                containerToken.getKind()),\n+            new Text(containerToken.getService()));\n+    return token.decodeIdentifier();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContainerTokenIdentifier newContainerTokenIdentifier(\n      ContainerToken containerToken) throws IOException {\n    org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e token \u003d\n        new org.apache.hadoop.security.token.Token\u003cContainerTokenIdentifier\u003e(\n            containerToken.getIdentifier()\n                .array(), containerToken.getPassword().array(), new Text(\n                containerToken.getKind()),\n            new Text(containerToken.getService()));\n    return token.decodeIdentifier();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "1a119f87b4f0a78d56e1bb998b1cbc081484fbd1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-615. Rename ContainerLaunchContext.containerTokens to tokens. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1482199 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/13 9:11 PM",
      "commitName": "1a119f87b4f0a78d56e1bb998b1cbc081484fbd1",
      "commitAuthor": "Siddharth Seth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-615. Rename ContainerLaunchContext.containerTokens to tokens. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1482199 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/05/13 9:11 PM",
          "commitName": "1a119f87b4f0a78d56e1bb998b1cbc081484fbd1",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "06/05/13 11:12 PM",
          "commitNameOld": "1f5ac02a0d3034e6e7cf83e9b69553c16c07754c",
          "commitAuthorOld": "Christopher Douglas",
          "daysBetweenCommits": 6.92,
          "commitsBetweenForRepo": 46,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n   public static ContainerLaunchContext newContainerLaunchContext(\n       String user, Map\u003cString, LocalResource\u003e localResources,\n       Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n-      Map\u003cString, ByteBuffer\u003e serviceData,  ByteBuffer containerTokens,\n+      Map\u003cString, ByteBuffer\u003e serviceData,  ByteBuffer tokens,\n       Map\u003cApplicationAccessType, String\u003e acls) {\n     ContainerLaunchContext container \u003d recordFactory\n         .newRecordInstance(ContainerLaunchContext.class);\n     container.setUser(user);\n     container.setLocalResources(localResources);\n     container.setEnvironment(environment);\n     container.setCommands(commands);\n     container.setServiceData(serviceData);\n-    container.setContainerTokens(containerTokens);\n+    container.setTokens(tokens);\n     container.setApplicationACLs(acls);\n     return container;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContainerLaunchContext newContainerLaunchContext(\n      String user, Map\u003cString, LocalResource\u003e localResources,\n      Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n      Map\u003cString, ByteBuffer\u003e serviceData,  ByteBuffer tokens,\n      Map\u003cApplicationAccessType, String\u003e acls) {\n    ContainerLaunchContext container \u003d recordFactory\n        .newRecordInstance(ContainerLaunchContext.class);\n    container.setUser(user);\n    container.setLocalResources(localResources);\n    container.setEnvironment(environment);\n    container.setCommands(commands);\n    container.setServiceData(serviceData);\n    container.setTokens(tokens);\n    container.setApplicationACLs(acls);\n    return container;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
          "extendedDetails": {
            "oldValue": "[user-String, localResources-Map\u003cString,LocalResource\u003e, environment-Map\u003cString,String\u003e, commands-List\u003cString\u003e, serviceData-Map\u003cString,ByteBuffer\u003e, containerTokens-ByteBuffer, acls-Map\u003cApplicationAccessType,String\u003e]",
            "newValue": "[user-String, localResources-Map\u003cString,LocalResource\u003e, environment-Map\u003cString,String\u003e, commands-List\u003cString\u003e, serviceData-Map\u003cString,ByteBuffer\u003e, tokens-ByteBuffer, acls-Map\u003cApplicationAccessType,String\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-615. Rename ContainerLaunchContext.containerTokens to tokens. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1482199 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/05/13 9:11 PM",
          "commitName": "1a119f87b4f0a78d56e1bb998b1cbc081484fbd1",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "06/05/13 11:12 PM",
          "commitNameOld": "1f5ac02a0d3034e6e7cf83e9b69553c16c07754c",
          "commitAuthorOld": "Christopher Douglas",
          "daysBetweenCommits": 6.92,
          "commitsBetweenForRepo": 46,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n   public static ContainerLaunchContext newContainerLaunchContext(\n       String user, Map\u003cString, LocalResource\u003e localResources,\n       Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n-      Map\u003cString, ByteBuffer\u003e serviceData,  ByteBuffer containerTokens,\n+      Map\u003cString, ByteBuffer\u003e serviceData,  ByteBuffer tokens,\n       Map\u003cApplicationAccessType, String\u003e acls) {\n     ContainerLaunchContext container \u003d recordFactory\n         .newRecordInstance(ContainerLaunchContext.class);\n     container.setUser(user);\n     container.setLocalResources(localResources);\n     container.setEnvironment(environment);\n     container.setCommands(commands);\n     container.setServiceData(serviceData);\n-    container.setContainerTokens(containerTokens);\n+    container.setTokens(tokens);\n     container.setApplicationACLs(acls);\n     return container;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContainerLaunchContext newContainerLaunchContext(\n      String user, Map\u003cString, LocalResource\u003e localResources,\n      Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n      Map\u003cString, ByteBuffer\u003e serviceData,  ByteBuffer tokens,\n      Map\u003cApplicationAccessType, String\u003e acls) {\n    ContainerLaunchContext container \u003d recordFactory\n        .newRecordInstance(ContainerLaunchContext.class);\n    container.setUser(user);\n    container.setLocalResources(localResources);\n    container.setEnvironment(environment);\n    container.setCommands(commands);\n    container.setServiceData(serviceData);\n    container.setTokens(tokens);\n    container.setApplicationACLs(acls);\n    return container;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-486. Changed NM\u0027s startContainer API to accept Container record given by RM as a direct parameter instead of as part of the ContainerLaunchContext record. Contributed by Xuan Gong.\nMAPREDUCE-5139. Update MR AM to use the modified startContainer API after YARN-486. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1467063 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/04/13 12:28 PM",
      "commitName": "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-486. Changed NM\u0027s startContainer API to accept Container record given by RM as a direct parameter instead of as part of the ContainerLaunchContext record. Contributed by Xuan Gong.\nMAPREDUCE-5139. Update MR AM to use the modified startContainer API after YARN-486. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1467063 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/04/13 12:28 PM",
          "commitName": "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/04/13 8:41 PM",
          "commitNameOld": "1fd462b118664b302c67bcc9543cdccdaaec30e9",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 7.66,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,16 @@\n   public static ContainerLaunchContext newContainerLaunchContext(\n-      ContainerId containerID, String user, Resource assignedCapability,\n-      Map\u003cString, LocalResource\u003e localResources,\n+      String user, Map\u003cString, LocalResource\u003e localResources,\n       Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n-      Map\u003cString, ByteBuffer\u003e serviceData, ByteBuffer containerTokens,\n+      Map\u003cString, ByteBuffer\u003e serviceData,  ByteBuffer containerTokens,\n       Map\u003cApplicationAccessType, String\u003e acls) {\n     ContainerLaunchContext container \u003d recordFactory\n         .newRecordInstance(ContainerLaunchContext.class);\n-    container.setContainerId(containerID);\n     container.setUser(user);\n-    container.setResource(assignedCapability);\n     container.setLocalResources(localResources);\n     container.setEnvironment(environment);\n     container.setCommands(commands);\n     container.setServiceData(serviceData);\n     container.setContainerTokens(containerTokens);\n     container.setApplicationACLs(acls);\n     return container;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContainerLaunchContext newContainerLaunchContext(\n      String user, Map\u003cString, LocalResource\u003e localResources,\n      Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n      Map\u003cString, ByteBuffer\u003e serviceData,  ByteBuffer containerTokens,\n      Map\u003cApplicationAccessType, String\u003e acls) {\n    ContainerLaunchContext container \u003d recordFactory\n        .newRecordInstance(ContainerLaunchContext.class);\n    container.setUser(user);\n    container.setLocalResources(localResources);\n    container.setEnvironment(environment);\n    container.setCommands(commands);\n    container.setServiceData(serviceData);\n    container.setContainerTokens(containerTokens);\n    container.setApplicationACLs(acls);\n    return container;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
          "extendedDetails": {
            "oldValue": "[containerID-ContainerId, user-String, assignedCapability-Resource, localResources-Map\u003cString,LocalResource\u003e, environment-Map\u003cString,String\u003e, commands-List\u003cString\u003e, serviceData-Map\u003cString,ByteBuffer\u003e, containerTokens-ByteBuffer, acls-Map\u003cApplicationAccessType,String\u003e]",
            "newValue": "[user-String, localResources-Map\u003cString,LocalResource\u003e, environment-Map\u003cString,String\u003e, commands-List\u003cString\u003e, serviceData-Map\u003cString,ByteBuffer\u003e, containerTokens-ByteBuffer, acls-Map\u003cApplicationAccessType,String\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-486. Changed NM\u0027s startContainer API to accept Container record given by RM as a direct parameter instead of as part of the ContainerLaunchContext record. Contributed by Xuan Gong.\nMAPREDUCE-5139. Update MR AM to use the modified startContainer API after YARN-486. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1467063 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/04/13 12:28 PM",
          "commitName": "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/04/13 8:41 PM",
          "commitNameOld": "1fd462b118664b302c67bcc9543cdccdaaec30e9",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 7.66,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,16 @@\n   public static ContainerLaunchContext newContainerLaunchContext(\n-      ContainerId containerID, String user, Resource assignedCapability,\n-      Map\u003cString, LocalResource\u003e localResources,\n+      String user, Map\u003cString, LocalResource\u003e localResources,\n       Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n-      Map\u003cString, ByteBuffer\u003e serviceData, ByteBuffer containerTokens,\n+      Map\u003cString, ByteBuffer\u003e serviceData,  ByteBuffer containerTokens,\n       Map\u003cApplicationAccessType, String\u003e acls) {\n     ContainerLaunchContext container \u003d recordFactory\n         .newRecordInstance(ContainerLaunchContext.class);\n-    container.setContainerId(containerID);\n     container.setUser(user);\n-    container.setResource(assignedCapability);\n     container.setLocalResources(localResources);\n     container.setEnvironment(environment);\n     container.setCommands(commands);\n     container.setServiceData(serviceData);\n     container.setContainerTokens(containerTokens);\n     container.setApplicationACLs(acls);\n     return container;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContainerLaunchContext newContainerLaunchContext(\n      String user, Map\u003cString, LocalResource\u003e localResources,\n      Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n      Map\u003cString, ByteBuffer\u003e serviceData,  ByteBuffer containerTokens,\n      Map\u003cApplicationAccessType, String\u003e acls) {\n    ContainerLaunchContext container \u003d recordFactory\n        .newRecordInstance(ContainerLaunchContext.class);\n    container.setUser(user);\n    container.setLocalResources(localResources);\n    container.setEnvironment(environment);\n    container.setCommands(commands);\n    container.setServiceData(serviceData);\n    container.setContainerTokens(containerTokens);\n    container.setApplicationACLs(acls);\n    return container;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static ContainerLaunchContext newContainerLaunchContext(\n      ContainerId containerID, String user, Resource assignedCapability,\n      Map\u003cString, LocalResource\u003e localResources,\n      Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n      Map\u003cString, ByteBuffer\u003e serviceData, ByteBuffer containerTokens,\n      Map\u003cApplicationAccessType, String\u003e acls) {\n    ContainerLaunchContext container \u003d recordFactory\n        .newRecordInstance(ContainerLaunchContext.class);\n    container.setContainerId(containerID);\n    container.setUser(user);\n    container.setResource(assignedCapability);\n    container.setLocalResources(localResources);\n    container.setEnvironment(environment);\n    container.setCommands(commands);\n    container.setServiceData(serviceData);\n    container.setContainerTokens(containerTokens);\n    container.setApplicationACLs(acls);\n    return container;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java"
      }
    },
    "df2991c0cbc3f35c2640b93680667507c4f810dd": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "MAPREDUCE-3104. Implemented Application-acls. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186748 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/10/11 4:45 AM",
      "commitName": "df2991c0cbc3f35c2640b93680667507c4f810dd",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "MAPREDUCE-3104. Implemented Application-acls. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186748 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/10/11 4:45 AM",
          "commitName": "df2991c0cbc3f35c2640b93680667507c4f810dd",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "12/10/11 4:29 PM",
          "commitNameOld": "26d63ecdae0f1e27606301f90ca93b3a0f62c5d4",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 7.51,
          "commitsBetweenForRepo": 64,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,19 @@\n-  public static Container newContainer(ContainerId containerId,\n-      NodeId nodeId, String nodeHttpAddress,\n-      Resource resource, Priority priority) {\n-    Container container \u003d recordFactory.newRecordInstance(Container.class);\n-    container.setId(containerId);\n-    container.setNodeId(nodeId);\n-    container.setNodeHttpAddress(nodeHttpAddress);\n-    container.setResource(resource);\n-    container.setPriority(priority);\n-    container.setState(ContainerState.NEW);\n-    ContainerStatus containerStatus \u003d Records.newRecord(ContainerStatus.class);\n-    containerStatus.setContainerId(containerId);\n-    containerStatus.setState(ContainerState.NEW);\n-    container.setContainerStatus(containerStatus);\n+  public static ContainerLaunchContext newContainerLaunchContext(\n+      ContainerId containerID, String user, Resource assignedCapability,\n+      Map\u003cString, LocalResource\u003e localResources,\n+      Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n+      Map\u003cString, ByteBuffer\u003e serviceData, ByteBuffer containerTokens,\n+      Map\u003cApplicationAccessType, String\u003e acls) {\n+    ContainerLaunchContext container \u003d recordFactory\n+        .newRecordInstance(ContainerLaunchContext.class);\n+    container.setContainerId(containerID);\n+    container.setUser(user);\n+    container.setResource(assignedCapability);\n+    container.setLocalResources(localResources);\n+    container.setEnvironment(environment);\n+    container.setCommands(commands);\n+    container.setServiceData(serviceData);\n+    container.setContainerTokens(containerTokens);\n+    container.setApplicationACLs(acls);\n     return container;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContainerLaunchContext newContainerLaunchContext(\n      ContainerId containerID, String user, Resource assignedCapability,\n      Map\u003cString, LocalResource\u003e localResources,\n      Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n      Map\u003cString, ByteBuffer\u003e serviceData, ByteBuffer containerTokens,\n      Map\u003cApplicationAccessType, String\u003e acls) {\n    ContainerLaunchContext container \u003d recordFactory\n        .newRecordInstance(ContainerLaunchContext.class);\n    container.setContainerId(containerID);\n    container.setUser(user);\n    container.setResource(assignedCapability);\n    container.setLocalResources(localResources);\n    container.setEnvironment(environment);\n    container.setCommands(commands);\n    container.setServiceData(serviceData);\n    container.setContainerTokens(containerTokens);\n    container.setApplicationACLs(acls);\n    return container;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
          "extendedDetails": {
            "oldValue": "newContainer",
            "newValue": "newContainerLaunchContext"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-3104. Implemented Application-acls. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186748 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/10/11 4:45 AM",
          "commitName": "df2991c0cbc3f35c2640b93680667507c4f810dd",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "12/10/11 4:29 PM",
          "commitNameOld": "26d63ecdae0f1e27606301f90ca93b3a0f62c5d4",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 7.51,
          "commitsBetweenForRepo": 64,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,19 @@\n-  public static Container newContainer(ContainerId containerId,\n-      NodeId nodeId, String nodeHttpAddress,\n-      Resource resource, Priority priority) {\n-    Container container \u003d recordFactory.newRecordInstance(Container.class);\n-    container.setId(containerId);\n-    container.setNodeId(nodeId);\n-    container.setNodeHttpAddress(nodeHttpAddress);\n-    container.setResource(resource);\n-    container.setPriority(priority);\n-    container.setState(ContainerState.NEW);\n-    ContainerStatus containerStatus \u003d Records.newRecord(ContainerStatus.class);\n-    containerStatus.setContainerId(containerId);\n-    containerStatus.setState(ContainerState.NEW);\n-    container.setContainerStatus(containerStatus);\n+  public static ContainerLaunchContext newContainerLaunchContext(\n+      ContainerId containerID, String user, Resource assignedCapability,\n+      Map\u003cString, LocalResource\u003e localResources,\n+      Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n+      Map\u003cString, ByteBuffer\u003e serviceData, ByteBuffer containerTokens,\n+      Map\u003cApplicationAccessType, String\u003e acls) {\n+    ContainerLaunchContext container \u003d recordFactory\n+        .newRecordInstance(ContainerLaunchContext.class);\n+    container.setContainerId(containerID);\n+    container.setUser(user);\n+    container.setResource(assignedCapability);\n+    container.setLocalResources(localResources);\n+    container.setEnvironment(environment);\n+    container.setCommands(commands);\n+    container.setServiceData(serviceData);\n+    container.setContainerTokens(containerTokens);\n+    container.setApplicationACLs(acls);\n     return container;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContainerLaunchContext newContainerLaunchContext(\n      ContainerId containerID, String user, Resource assignedCapability,\n      Map\u003cString, LocalResource\u003e localResources,\n      Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n      Map\u003cString, ByteBuffer\u003e serviceData, ByteBuffer containerTokens,\n      Map\u003cApplicationAccessType, String\u003e acls) {\n    ContainerLaunchContext container \u003d recordFactory\n        .newRecordInstance(ContainerLaunchContext.class);\n    container.setContainerId(containerID);\n    container.setUser(user);\n    container.setResource(assignedCapability);\n    container.setLocalResources(localResources);\n    container.setEnvironment(environment);\n    container.setCommands(commands);\n    container.setServiceData(serviceData);\n    container.setContainerTokens(containerTokens);\n    container.setApplicationACLs(acls);\n    return container;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
          "extendedDetails": {
            "oldValue": "[containerId-ContainerId, nodeId-NodeId, nodeHttpAddress-String, resource-Resource, priority-Priority]",
            "newValue": "[containerID-ContainerId, user-String, assignedCapability-Resource, localResources-Map\u003cString,LocalResource\u003e, environment-Map\u003cString,String\u003e, commands-List\u003cString\u003e, serviceData-Map\u003cString,ByteBuffer\u003e, containerTokens-ByteBuffer, acls-Map\u003cApplicationAccessType,String\u003e]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "MAPREDUCE-3104. Implemented Application-acls. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186748 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/10/11 4:45 AM",
          "commitName": "df2991c0cbc3f35c2640b93680667507c4f810dd",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "12/10/11 4:29 PM",
          "commitNameOld": "26d63ecdae0f1e27606301f90ca93b3a0f62c5d4",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 7.51,
          "commitsBetweenForRepo": 64,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,19 @@\n-  public static Container newContainer(ContainerId containerId,\n-      NodeId nodeId, String nodeHttpAddress,\n-      Resource resource, Priority priority) {\n-    Container container \u003d recordFactory.newRecordInstance(Container.class);\n-    container.setId(containerId);\n-    container.setNodeId(nodeId);\n-    container.setNodeHttpAddress(nodeHttpAddress);\n-    container.setResource(resource);\n-    container.setPriority(priority);\n-    container.setState(ContainerState.NEW);\n-    ContainerStatus containerStatus \u003d Records.newRecord(ContainerStatus.class);\n-    containerStatus.setContainerId(containerId);\n-    containerStatus.setState(ContainerState.NEW);\n-    container.setContainerStatus(containerStatus);\n+  public static ContainerLaunchContext newContainerLaunchContext(\n+      ContainerId containerID, String user, Resource assignedCapability,\n+      Map\u003cString, LocalResource\u003e localResources,\n+      Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n+      Map\u003cString, ByteBuffer\u003e serviceData, ByteBuffer containerTokens,\n+      Map\u003cApplicationAccessType, String\u003e acls) {\n+    ContainerLaunchContext container \u003d recordFactory\n+        .newRecordInstance(ContainerLaunchContext.class);\n+    container.setContainerId(containerID);\n+    container.setUser(user);\n+    container.setResource(assignedCapability);\n+    container.setLocalResources(localResources);\n+    container.setEnvironment(environment);\n+    container.setCommands(commands);\n+    container.setServiceData(serviceData);\n+    container.setContainerTokens(containerTokens);\n+    container.setApplicationACLs(acls);\n     return container;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContainerLaunchContext newContainerLaunchContext(\n      ContainerId containerID, String user, Resource assignedCapability,\n      Map\u003cString, LocalResource\u003e localResources,\n      Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n      Map\u003cString, ByteBuffer\u003e serviceData, ByteBuffer containerTokens,\n      Map\u003cApplicationAccessType, String\u003e acls) {\n    ContainerLaunchContext container \u003d recordFactory\n        .newRecordInstance(ContainerLaunchContext.class);\n    container.setContainerId(containerID);\n    container.setUser(user);\n    container.setResource(assignedCapability);\n    container.setLocalResources(localResources);\n    container.setEnvironment(environment);\n    container.setCommands(commands);\n    container.setServiceData(serviceData);\n    container.setContainerTokens(containerTokens);\n    container.setApplicationACLs(acls);\n    return container;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
          "extendedDetails": {
            "oldValue": "Container",
            "newValue": "ContainerLaunchContext"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3104. Implemented Application-acls. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186748 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/10/11 4:45 AM",
          "commitName": "df2991c0cbc3f35c2640b93680667507c4f810dd",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "12/10/11 4:29 PM",
          "commitNameOld": "26d63ecdae0f1e27606301f90ca93b3a0f62c5d4",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 7.51,
          "commitsBetweenForRepo": 64,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,19 @@\n-  public static Container newContainer(ContainerId containerId,\n-      NodeId nodeId, String nodeHttpAddress,\n-      Resource resource, Priority priority) {\n-    Container container \u003d recordFactory.newRecordInstance(Container.class);\n-    container.setId(containerId);\n-    container.setNodeId(nodeId);\n-    container.setNodeHttpAddress(nodeHttpAddress);\n-    container.setResource(resource);\n-    container.setPriority(priority);\n-    container.setState(ContainerState.NEW);\n-    ContainerStatus containerStatus \u003d Records.newRecord(ContainerStatus.class);\n-    containerStatus.setContainerId(containerId);\n-    containerStatus.setState(ContainerState.NEW);\n-    container.setContainerStatus(containerStatus);\n+  public static ContainerLaunchContext newContainerLaunchContext(\n+      ContainerId containerID, String user, Resource assignedCapability,\n+      Map\u003cString, LocalResource\u003e localResources,\n+      Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n+      Map\u003cString, ByteBuffer\u003e serviceData, ByteBuffer containerTokens,\n+      Map\u003cApplicationAccessType, String\u003e acls) {\n+    ContainerLaunchContext container \u003d recordFactory\n+        .newRecordInstance(ContainerLaunchContext.class);\n+    container.setContainerId(containerID);\n+    container.setUser(user);\n+    container.setResource(assignedCapability);\n+    container.setLocalResources(localResources);\n+    container.setEnvironment(environment);\n+    container.setCommands(commands);\n+    container.setServiceData(serviceData);\n+    container.setContainerTokens(containerTokens);\n+    container.setApplicationACLs(acls);\n     return container;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContainerLaunchContext newContainerLaunchContext(\n      ContainerId containerID, String user, Resource assignedCapability,\n      Map\u003cString, LocalResource\u003e localResources,\n      Map\u003cString, String\u003e environment, List\u003cString\u003e commands,\n      Map\u003cString, ByteBuffer\u003e serviceData, ByteBuffer containerTokens,\n      Map\u003cApplicationAccessType, String\u003e acls) {\n    ContainerLaunchContext container \u003d recordFactory\n        .newRecordInstance(ContainerLaunchContext.class);\n    container.setContainerId(containerID);\n    container.setUser(user);\n    container.setResource(assignedCapability);\n    container.setLocalResources(localResources);\n    container.setEnvironment(environment);\n    container.setCommands(commands);\n    container.setServiceData(serviceData);\n    container.setContainerTokens(containerTokens);\n    container.setApplicationACLs(acls);\n    return container;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "1e6dfa7472ad78a252d05c8ebffe086d938b61fa": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-2646. Fixed AMRMProtocol to return containers based on priority. Contributed by Sharad Agarwal and Arun C Murthy.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1175859 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/09/11 6:25 AM",
      "commitName": "1e6dfa7472ad78a252d05c8ebffe086d938b61fa",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-2646. Fixed AMRMProtocol to return containers based on priority. Contributed by Sharad Agarwal and Arun C Murthy.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1175859 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "26/09/11 6:25 AM",
          "commitName": "1e6dfa7472ad78a252d05c8ebffe086d938b61fa",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "25/09/11 7:46 AM",
          "commitNameOld": "a5c9ede1433871fcf4e2e802ee2a65950ecd1e72",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.94,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,16 @@\n   public static Container newContainer(ContainerId containerId,\n-      NodeId nodeId, String nodeHttpAddress, Resource resource) {\n+      NodeId nodeId, String nodeHttpAddress, \n+      Resource resource, Priority priority) {\n     Container container \u003d recordFactory.newRecordInstance(Container.class);\n     container.setId(containerId);\n     container.setNodeId(nodeId);\n     container.setNodeHttpAddress(nodeHttpAddress);\n     container.setResource(resource);\n+    container.setPriority(priority);\n     container.setState(ContainerState.NEW);\n     ContainerStatus containerStatus \u003d Records.newRecord(ContainerStatus.class);\n     containerStatus.setContainerId(containerId);\n     containerStatus.setState(ContainerState.NEW);\n     container.setContainerStatus(containerStatus);\n     return container;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Container newContainer(ContainerId containerId,\n      NodeId nodeId, String nodeHttpAddress, \n      Resource resource, Priority priority) {\n    Container container \u003d recordFactory.newRecordInstance(Container.class);\n    container.setId(containerId);\n    container.setNodeId(nodeId);\n    container.setNodeHttpAddress(nodeHttpAddress);\n    container.setResource(resource);\n    container.setPriority(priority);\n    container.setState(ContainerState.NEW);\n    ContainerStatus containerStatus \u003d Records.newRecord(ContainerStatus.class);\n    containerStatus.setContainerId(containerId);\n    containerStatus.setState(ContainerState.NEW);\n    container.setContainerStatus(containerStatus);\n    return container;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
          "extendedDetails": {
            "oldValue": "[containerId-ContainerId, nodeId-NodeId, nodeHttpAddress-String, resource-Resource]",
            "newValue": "[containerId-ContainerId, nodeId-NodeId, nodeHttpAddress-String, resource-Resource, priority-Priority]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-2646. Fixed AMRMProtocol to return containers based on priority. Contributed by Sharad Agarwal and Arun C Murthy.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1175859 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "26/09/11 6:25 AM",
          "commitName": "1e6dfa7472ad78a252d05c8ebffe086d938b61fa",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "25/09/11 7:46 AM",
          "commitNameOld": "a5c9ede1433871fcf4e2e802ee2a65950ecd1e72",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.94,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,16 @@\n   public static Container newContainer(ContainerId containerId,\n-      NodeId nodeId, String nodeHttpAddress, Resource resource) {\n+      NodeId nodeId, String nodeHttpAddress, \n+      Resource resource, Priority priority) {\n     Container container \u003d recordFactory.newRecordInstance(Container.class);\n     container.setId(containerId);\n     container.setNodeId(nodeId);\n     container.setNodeHttpAddress(nodeHttpAddress);\n     container.setResource(resource);\n+    container.setPriority(priority);\n     container.setState(ContainerState.NEW);\n     ContainerStatus containerStatus \u003d Records.newRecord(ContainerStatus.class);\n     containerStatus.setContainerId(containerId);\n     containerStatus.setState(ContainerState.NEW);\n     container.setContainerStatus(containerStatus);\n     return container;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Container newContainer(ContainerId containerId,\n      NodeId nodeId, String nodeHttpAddress, \n      Resource resource, Priority priority) {\n    Container container \u003d recordFactory.newRecordInstance(Container.class);\n    container.setId(containerId);\n    container.setNodeId(nodeId);\n    container.setNodeHttpAddress(nodeHttpAddress);\n    container.setResource(resource);\n    container.setPriority(priority);\n    container.setState(ContainerState.NEW);\n    ContainerStatus containerStatus \u003d Records.newRecord(ContainerStatus.class);\n    containerStatus.setContainerId(containerId);\n    containerStatus.setState(ContainerState.NEW);\n    container.setContainerStatus(containerStatus);\n    return container;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static Container newContainer(ContainerId containerId,\n      NodeId nodeId, String nodeHttpAddress, Resource resource) {\n    Container container \u003d recordFactory.newRecordInstance(Container.class);\n    container.setId(containerId);\n    container.setNodeId(nodeId);\n    container.setNodeHttpAddress(nodeHttpAddress);\n    container.setResource(resource);\n    container.setState(ContainerState.NEW);\n    ContainerStatus containerStatus \u003d Records.newRecord(ContainerStatus.class);\n    containerStatus.setContainerId(containerId);\n    containerStatus.setState(ContainerState.NEW);\n    container.setContainerStatus(containerStatus);\n    return container;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,14 @@\n+  public static Container newContainer(ContainerId containerId,\n+      NodeId nodeId, String nodeHttpAddress, Resource resource) {\n+    Container container \u003d recordFactory.newRecordInstance(Container.class);\n+    container.setId(containerId);\n+    container.setNodeId(nodeId);\n+    container.setNodeHttpAddress(nodeHttpAddress);\n+    container.setResource(resource);\n+    container.setState(ContainerState.NEW);\n+    ContainerStatus containerStatus \u003d Records.newRecord(ContainerStatus.class);\n+    containerStatus.setContainerId(containerId);\n+    containerStatus.setState(ContainerState.NEW);\n+    container.setContainerStatus(containerStatus);\n+    return container;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Container newContainer(ContainerId containerId,\n      NodeId nodeId, String nodeHttpAddress, Resource resource) {\n    Container container \u003d recordFactory.newRecordInstance(Container.class);\n    container.setId(containerId);\n    container.setNodeId(nodeId);\n    container.setNodeHttpAddress(nodeHttpAddress);\n    container.setResource(resource);\n    container.setState(ContainerState.NEW);\n    ContainerStatus containerStatus \u003d Records.newRecord(ContainerStatus.class);\n    containerStatus.setContainerId(containerId);\n    containerStatus.setState(ContainerState.NEW);\n    container.setContainerStatus(containerStatus);\n    return container;\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/BuilderUtils.java"
    }
  }
}