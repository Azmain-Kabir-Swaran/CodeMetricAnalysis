{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DelegationTokenManager.java",
  "functionName": "createToken",
  "functionId": "createToken___ugi-UserGroupInformation__renewer-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenManager.java",
  "functionStartLine": 161,
  "functionEndLine": 164,
  "numCommitsSeen": 11,
  "timeTaken": 2482,
  "changeHistory": [
    "2b08a1fc644904a37545107666efc25b3552542d",
    "771f798edf97b27ae003395118c0317b484df6ee",
    "cdce88376a60918dfe2f3bcd82a7666d74992a19",
    "be9c67930b57c516723d566625f9036a88a84055",
    "4e7c4a6e1fd00767d966cd2482a364b2eacbd35b",
    "5e09ae1633fb7fcf293ea10e663064e566c70909",
    "4d4560189adccb941a3dc5eee7add134adbf6519"
  ],
  "changeHistoryShort": {
    "2b08a1fc644904a37545107666efc25b3552542d": "Ybodychange",
    "771f798edf97b27ae003395118c0317b484df6ee": "Ybodychange",
    "cdce88376a60918dfe2f3bcd82a7666d74992a19": "Ymultichange(Yreturntypechange,Ybodychange)",
    "be9c67930b57c516723d566625f9036a88a84055": "Ymultichange(Yexceptionschange,Ybodychange)",
    "4e7c4a6e1fd00767d966cd2482a364b2eacbd35b": "Yfilerename",
    "5e09ae1633fb7fcf293ea10e663064e566c70909": "Ybodychange",
    "4d4560189adccb941a3dc5eee7add134adbf6519": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2b08a1fc644904a37545107666efc25b3552542d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14920. KMSClientProvider won\u0027t work with KMS delegation token retrieved from non-Java client. Contributed by Xiaoyu Yao.\n",
      "commitDate": "06/10/17 10:12 AM",
      "commitName": "2b08a1fc644904a37545107666efc25b3552542d",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "27/06/16 6:20 PM",
      "commitNameOld": "771f798edf97b27ae003395118c0317b484df6ee",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 465.66,
      "commitsBetweenForRepo": 3098,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,4 @@\n   public Token\u003c? extends AbstractDelegationTokenIdentifier\u003e createToken(\n       UserGroupInformation ugi, String renewer) {\n-    LOG.debug(\"Creating token with ugi:{}, renewer:{}.\", ugi, renewer);\n-    renewer \u003d (renewer \u003d\u003d null) ? ugi.getShortUserName() : renewer;\n-    String user \u003d ugi.getUserName();\n-    Text owner \u003d new Text(user);\n-    Text realUser \u003d null;\n-    if (ugi.getRealUser() !\u003d null) {\n-      realUser \u003d new Text(ugi.getRealUser().getUserName());\n-    }\n-    AbstractDelegationTokenIdentifier tokenIdentifier \u003d\n-        (AbstractDelegationTokenIdentifier) secretManager.createIdentifier();\n-    tokenIdentifier.setOwner(owner);\n-    tokenIdentifier.setRenewer(new Text(renewer));\n-    tokenIdentifier.setRealUser(realUser);\n-    return new Token(tokenIdentifier, secretManager);\n+    return createToken(ugi, renewer, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003c? extends AbstractDelegationTokenIdentifier\u003e createToken(\n      UserGroupInformation ugi, String renewer) {\n    return createToken(ugi, renewer, null);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenManager.java",
      "extendedDetails": {}
    },
    "771f798edf97b27ae003395118c0317b484df6ee": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13251. Authenticate with Kerberos credentials when renewing KMS delegation token. Contributed by Xiao Chen.\n",
      "commitDate": "27/06/16 6:20 PM",
      "commitName": "771f798edf97b27ae003395118c0317b484df6ee",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "21/01/16 1:51 PM",
      "commitNameOld": "f3427d3766d7101d0d1c37d6281918551d221ebe",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 158.15,
      "commitsBetweenForRepo": 1051,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   public Token\u003c? extends AbstractDelegationTokenIdentifier\u003e createToken(\n       UserGroupInformation ugi, String renewer) {\n+    LOG.debug(\"Creating token with ugi:{}, renewer:{}.\", ugi, renewer);\n     renewer \u003d (renewer \u003d\u003d null) ? ugi.getShortUserName() : renewer;\n     String user \u003d ugi.getUserName();\n     Text owner \u003d new Text(user);\n     Text realUser \u003d null;\n     if (ugi.getRealUser() !\u003d null) {\n       realUser \u003d new Text(ugi.getRealUser().getUserName());\n     }\n     AbstractDelegationTokenIdentifier tokenIdentifier \u003d\n         (AbstractDelegationTokenIdentifier) secretManager.createIdentifier();\n     tokenIdentifier.setOwner(owner);\n     tokenIdentifier.setRenewer(new Text(renewer));\n     tokenIdentifier.setRealUser(realUser);\n     return new Token(tokenIdentifier, secretManager);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003c? extends AbstractDelegationTokenIdentifier\u003e createToken(\n      UserGroupInformation ugi, String renewer) {\n    LOG.debug(\"Creating token with ugi:{}, renewer:{}.\", ugi, renewer);\n    renewer \u003d (renewer \u003d\u003d null) ? ugi.getShortUserName() : renewer;\n    String user \u003d ugi.getUserName();\n    Text owner \u003d new Text(user);\n    Text realUser \u003d null;\n    if (ugi.getRealUser() !\u003d null) {\n      realUser \u003d new Text(ugi.getRealUser().getUserName());\n    }\n    AbstractDelegationTokenIdentifier tokenIdentifier \u003d\n        (AbstractDelegationTokenIdentifier) secretManager.createIdentifier();\n    tokenIdentifier.setOwner(owner);\n    tokenIdentifier.setRenewer(new Text(renewer));\n    tokenIdentifier.setRealUser(realUser);\n    return new Token(tokenIdentifier, secretManager);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenManager.java",
      "extendedDetails": {}
    },
    "cdce88376a60918dfe2f3bcd82a7666d74992a19": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HADOOP-11181. Generalized o.a.h.s.t.d.DelegationTokenManager to handle all sub-classes of AbstractDelegationTokenIdentifier. Contributed by Zhijie Shen.\n",
      "commitDate": "14/10/14 11:35 AM",
      "commitName": "cdce88376a60918dfe2f3bcd82a7666d74992a19",
      "commitAuthor": "Zhijie Shen",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-11181. Generalized o.a.h.s.t.d.DelegationTokenManager to handle all sub-classes of AbstractDelegationTokenIdentifier. Contributed by Zhijie Shen.\n",
          "commitDate": "14/10/14 11:35 AM",
          "commitName": "cdce88376a60918dfe2f3bcd82a7666d74992a19",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "20/09/14 8:21 AM",
          "commitNameOld": "db890eef3208cc557476fa510f7a253ba22bc68a",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 24.13,
          "commitsBetweenForRepo": 240,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,16 @@\n-  public Token\u003cDelegationTokenIdentifier\u003e createToken(UserGroupInformation ugi,\n-      String renewer) {\n+  public Token\u003c? extends AbstractDelegationTokenIdentifier\u003e createToken(\n+      UserGroupInformation ugi, String renewer) {\n     renewer \u003d (renewer \u003d\u003d null) ? ugi.getShortUserName() : renewer;\n     String user \u003d ugi.getUserName();\n     Text owner \u003d new Text(user);\n     Text realUser \u003d null;\n     if (ugi.getRealUser() !\u003d null) {\n       realUser \u003d new Text(ugi.getRealUser().getUserName());\n     }\n-    DelegationTokenIdentifier tokenIdentifier \u003d new DelegationTokenIdentifier(\n-        tokenKind, owner, new Text(renewer), realUser);\n-    return new Token\u003cDelegationTokenIdentifier\u003e(tokenIdentifier, secretManager);\n+    AbstractDelegationTokenIdentifier tokenIdentifier \u003d\n+        (AbstractDelegationTokenIdentifier) secretManager.createIdentifier();\n+    tokenIdentifier.setOwner(owner);\n+    tokenIdentifier.setRenewer(new Text(renewer));\n+    tokenIdentifier.setRealUser(realUser);\n+    return new Token(tokenIdentifier, secretManager);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003c? extends AbstractDelegationTokenIdentifier\u003e createToken(\n      UserGroupInformation ugi, String renewer) {\n    renewer \u003d (renewer \u003d\u003d null) ? ugi.getShortUserName() : renewer;\n    String user \u003d ugi.getUserName();\n    Text owner \u003d new Text(user);\n    Text realUser \u003d null;\n    if (ugi.getRealUser() !\u003d null) {\n      realUser \u003d new Text(ugi.getRealUser().getUserName());\n    }\n    AbstractDelegationTokenIdentifier tokenIdentifier \u003d\n        (AbstractDelegationTokenIdentifier) secretManager.createIdentifier();\n    tokenIdentifier.setOwner(owner);\n    tokenIdentifier.setRenewer(new Text(renewer));\n    tokenIdentifier.setRealUser(realUser);\n    return new Token(tokenIdentifier, secretManager);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenManager.java",
          "extendedDetails": {
            "oldValue": "Token\u003cDelegationTokenIdentifier\u003e",
            "newValue": "Token\u003c? extends AbstractDelegationTokenIdentifier\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-11181. Generalized o.a.h.s.t.d.DelegationTokenManager to handle all sub-classes of AbstractDelegationTokenIdentifier. Contributed by Zhijie Shen.\n",
          "commitDate": "14/10/14 11:35 AM",
          "commitName": "cdce88376a60918dfe2f3bcd82a7666d74992a19",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "20/09/14 8:21 AM",
          "commitNameOld": "db890eef3208cc557476fa510f7a253ba22bc68a",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 24.13,
          "commitsBetweenForRepo": 240,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,16 @@\n-  public Token\u003cDelegationTokenIdentifier\u003e createToken(UserGroupInformation ugi,\n-      String renewer) {\n+  public Token\u003c? extends AbstractDelegationTokenIdentifier\u003e createToken(\n+      UserGroupInformation ugi, String renewer) {\n     renewer \u003d (renewer \u003d\u003d null) ? ugi.getShortUserName() : renewer;\n     String user \u003d ugi.getUserName();\n     Text owner \u003d new Text(user);\n     Text realUser \u003d null;\n     if (ugi.getRealUser() !\u003d null) {\n       realUser \u003d new Text(ugi.getRealUser().getUserName());\n     }\n-    DelegationTokenIdentifier tokenIdentifier \u003d new DelegationTokenIdentifier(\n-        tokenKind, owner, new Text(renewer), realUser);\n-    return new Token\u003cDelegationTokenIdentifier\u003e(tokenIdentifier, secretManager);\n+    AbstractDelegationTokenIdentifier tokenIdentifier \u003d\n+        (AbstractDelegationTokenIdentifier) secretManager.createIdentifier();\n+    tokenIdentifier.setOwner(owner);\n+    tokenIdentifier.setRenewer(new Text(renewer));\n+    tokenIdentifier.setRealUser(realUser);\n+    return new Token(tokenIdentifier, secretManager);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003c? extends AbstractDelegationTokenIdentifier\u003e createToken(\n      UserGroupInformation ugi, String renewer) {\n    renewer \u003d (renewer \u003d\u003d null) ? ugi.getShortUserName() : renewer;\n    String user \u003d ugi.getUserName();\n    Text owner \u003d new Text(user);\n    Text realUser \u003d null;\n    if (ugi.getRealUser() !\u003d null) {\n      realUser \u003d new Text(ugi.getRealUser().getUserName());\n    }\n    AbstractDelegationTokenIdentifier tokenIdentifier \u003d\n        (AbstractDelegationTokenIdentifier) secretManager.createIdentifier();\n    tokenIdentifier.setOwner(owner);\n    tokenIdentifier.setRenewer(new Text(renewer));\n    tokenIdentifier.setRealUser(realUser);\n    return new Token(tokenIdentifier, secretManager);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "be9c67930b57c516723d566625f9036a88a84055": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-10771. Refactor HTTP delegation support out of httpfs to common, PART 2. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616672 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/14 9:58 PM",
      "commitName": "be9c67930b57c516723d566625f9036a88a84055",
      "commitAuthor": "Alejandro Abdelnur",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-10771. Refactor HTTP delegation support out of httpfs to common, PART 2. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616672 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/08/14 9:58 PM",
          "commitName": "be9c67930b57c516723d566625f9036a88a84055",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "07/08/14 9:55 PM",
          "commitNameOld": "4e7c4a6e1fd00767d966cd2482a364b2eacbd35b",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,13 @@\n   public Token\u003cDelegationTokenIdentifier\u003e createToken(UserGroupInformation ugi,\n-                                                      String renewer)\n-    throws DelegationTokenManagerException {\n+      String renewer) {\n     renewer \u003d (renewer \u003d\u003d null) ? ugi.getShortUserName() : renewer;\n     String user \u003d ugi.getUserName();\n     Text owner \u003d new Text(user);\n     Text realUser \u003d null;\n     if (ugi.getRealUser() !\u003d null) {\n       realUser \u003d new Text(ugi.getRealUser().getUserName());\n     }\n-    DelegationTokenIdentifier tokenIdentifier \u003d\n-      new DelegationTokenIdentifier(tokenKind, owner, new Text(renewer), realUser);\n-    Token\u003cDelegationTokenIdentifier\u003e token \u003d\n-      new Token\u003cDelegationTokenIdentifier\u003e(tokenIdentifier, secretManager);\n-    try {\n-      SecurityUtil.setTokenService(token,\n-                                   HttpFSServerWebApp.get().getAuthority());\n-    } catch (ServerException ex) {\n-      throw new DelegationTokenManagerException(\n-        DelegationTokenManagerException.ERROR.DT04, ex.toString(), ex);\n-    }\n-    return token;\n+    DelegationTokenIdentifier tokenIdentifier \u003d new DelegationTokenIdentifier(\n+        tokenKind, owner, new Text(renewer), realUser);\n+    return new Token\u003cDelegationTokenIdentifier\u003e(tokenIdentifier, secretManager);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003cDelegationTokenIdentifier\u003e createToken(UserGroupInformation ugi,\n      String renewer) {\n    renewer \u003d (renewer \u003d\u003d null) ? ugi.getShortUserName() : renewer;\n    String user \u003d ugi.getUserName();\n    Text owner \u003d new Text(user);\n    Text realUser \u003d null;\n    if (ugi.getRealUser() !\u003d null) {\n      realUser \u003d new Text(ugi.getRealUser().getUserName());\n    }\n    DelegationTokenIdentifier tokenIdentifier \u003d new DelegationTokenIdentifier(\n        tokenKind, owner, new Text(renewer), realUser);\n    return new Token\u003cDelegationTokenIdentifier\u003e(tokenIdentifier, secretManager);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenManager.java",
          "extendedDetails": {
            "oldValue": "[DelegationTokenManagerException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10771. Refactor HTTP delegation support out of httpfs to common, PART 2. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616672 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/08/14 9:58 PM",
          "commitName": "be9c67930b57c516723d566625f9036a88a84055",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "07/08/14 9:55 PM",
          "commitNameOld": "4e7c4a6e1fd00767d966cd2482a364b2eacbd35b",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,13 @@\n   public Token\u003cDelegationTokenIdentifier\u003e createToken(UserGroupInformation ugi,\n-                                                      String renewer)\n-    throws DelegationTokenManagerException {\n+      String renewer) {\n     renewer \u003d (renewer \u003d\u003d null) ? ugi.getShortUserName() : renewer;\n     String user \u003d ugi.getUserName();\n     Text owner \u003d new Text(user);\n     Text realUser \u003d null;\n     if (ugi.getRealUser() !\u003d null) {\n       realUser \u003d new Text(ugi.getRealUser().getUserName());\n     }\n-    DelegationTokenIdentifier tokenIdentifier \u003d\n-      new DelegationTokenIdentifier(tokenKind, owner, new Text(renewer), realUser);\n-    Token\u003cDelegationTokenIdentifier\u003e token \u003d\n-      new Token\u003cDelegationTokenIdentifier\u003e(tokenIdentifier, secretManager);\n-    try {\n-      SecurityUtil.setTokenService(token,\n-                                   HttpFSServerWebApp.get().getAuthority());\n-    } catch (ServerException ex) {\n-      throw new DelegationTokenManagerException(\n-        DelegationTokenManagerException.ERROR.DT04, ex.toString(), ex);\n-    }\n-    return token;\n+    DelegationTokenIdentifier tokenIdentifier \u003d new DelegationTokenIdentifier(\n+        tokenKind, owner, new Text(renewer), realUser);\n+    return new Token\u003cDelegationTokenIdentifier\u003e(tokenIdentifier, secretManager);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003cDelegationTokenIdentifier\u003e createToken(UserGroupInformation ugi,\n      String renewer) {\n    renewer \u003d (renewer \u003d\u003d null) ? ugi.getShortUserName() : renewer;\n    String user \u003d ugi.getUserName();\n    Text owner \u003d new Text(user);\n    Text realUser \u003d null;\n    if (ugi.getRealUser() !\u003d null) {\n      realUser \u003d new Text(ugi.getRealUser().getUserName());\n    }\n    DelegationTokenIdentifier tokenIdentifier \u003d new DelegationTokenIdentifier(\n        tokenKind, owner, new Text(renewer), realUser);\n    return new Token\u003cDelegationTokenIdentifier\u003e(tokenIdentifier, secretManager);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "4e7c4a6e1fd00767d966cd2482a364b2eacbd35b": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-10771. Refactor HTTP delegation support out of httpfs to common, PART 1. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616671 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/14 9:55 PM",
      "commitName": "4e7c4a6e1fd00767d966cd2482a364b2eacbd35b",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "07/08/14 9:27 PM",
      "commitNameOld": "2ac640ec751f665365d548104b3713e414f53351",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Token\u003cDelegationTokenIdentifier\u003e createToken(UserGroupInformation ugi,\n                                                      String renewer)\n    throws DelegationTokenManagerException {\n    renewer \u003d (renewer \u003d\u003d null) ? ugi.getShortUserName() : renewer;\n    String user \u003d ugi.getUserName();\n    Text owner \u003d new Text(user);\n    Text realUser \u003d null;\n    if (ugi.getRealUser() !\u003d null) {\n      realUser \u003d new Text(ugi.getRealUser().getUserName());\n    }\n    DelegationTokenIdentifier tokenIdentifier \u003d\n      new DelegationTokenIdentifier(tokenKind, owner, new Text(renewer), realUser);\n    Token\u003cDelegationTokenIdentifier\u003e token \u003d\n      new Token\u003cDelegationTokenIdentifier\u003e(tokenIdentifier, secretManager);\n    try {\n      SecurityUtil.setTokenService(token,\n                                   HttpFSServerWebApp.get().getAuthority());\n    } catch (ServerException ex) {\n      throw new DelegationTokenManagerException(\n        DelegationTokenManagerException.ERROR.DT04, ex.toString(), ex);\n    }\n    return token;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/lib/service/security/DelegationTokenManagerService.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenManager.java"
      }
    },
    "5e09ae1633fb7fcf293ea10e663064e566c70909": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5703. Add support for HTTPS and swebhdfs to HttpFS. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1560504 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/01/14 12:38 PM",
      "commitName": "5e09ae1633fb7fcf293ea10e663064e566c70909",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "01/08/12 4:14 PM",
      "commitNameOld": "08e89662170010dd619c0df859c670cb37b630dd",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 538.89,
      "commitsBetweenForRepo": 3159,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public Token\u003cDelegationTokenIdentifier\u003e createToken(UserGroupInformation ugi,\n                                                       String renewer)\n     throws DelegationTokenManagerException {\n     renewer \u003d (renewer \u003d\u003d null) ? ugi.getShortUserName() : renewer;\n     String user \u003d ugi.getUserName();\n     Text owner \u003d new Text(user);\n     Text realUser \u003d null;\n     if (ugi.getRealUser() !\u003d null) {\n       realUser \u003d new Text(ugi.getRealUser().getUserName());\n     }\n     DelegationTokenIdentifier tokenIdentifier \u003d\n-      new DelegationTokenIdentifier(owner, new Text(renewer), realUser);\n+      new DelegationTokenIdentifier(tokenKind, owner, new Text(renewer), realUser);\n     Token\u003cDelegationTokenIdentifier\u003e token \u003d\n       new Token\u003cDelegationTokenIdentifier\u003e(tokenIdentifier, secretManager);\n     try {\n       SecurityUtil.setTokenService(token,\n                                    HttpFSServerWebApp.get().getAuthority());\n     } catch (ServerException ex) {\n       throw new DelegationTokenManagerException(\n         DelegationTokenManagerException.ERROR.DT04, ex.toString(), ex);\n     }\n     return token;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003cDelegationTokenIdentifier\u003e createToken(UserGroupInformation ugi,\n                                                      String renewer)\n    throws DelegationTokenManagerException {\n    renewer \u003d (renewer \u003d\u003d null) ? ugi.getShortUserName() : renewer;\n    String user \u003d ugi.getUserName();\n    Text owner \u003d new Text(user);\n    Text realUser \u003d null;\n    if (ugi.getRealUser() !\u003d null) {\n      realUser \u003d new Text(ugi.getRealUser().getUserName());\n    }\n    DelegationTokenIdentifier tokenIdentifier \u003d\n      new DelegationTokenIdentifier(tokenKind, owner, new Text(renewer), realUser);\n    Token\u003cDelegationTokenIdentifier\u003e token \u003d\n      new Token\u003cDelegationTokenIdentifier\u003e(tokenIdentifier, secretManager);\n    try {\n      SecurityUtil.setTokenService(token,\n                                   HttpFSServerWebApp.get().getAuthority());\n    } catch (ServerException ex) {\n      throw new DelegationTokenManagerException(\n        DelegationTokenManagerException.ERROR.DT04, ex.toString(), ex);\n    }\n    return token;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/lib/service/security/DelegationTokenManagerService.java",
      "extendedDetails": {}
    },
    "4d4560189adccb941a3dc5eee7add134adbf6519": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3113. httpfs does not support delegation tokens. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1365988 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/07/12 6:39 AM",
      "commitName": "4d4560189adccb941a3dc5eee7add134adbf6519",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,23 @@\n+  public Token\u003cDelegationTokenIdentifier\u003e createToken(UserGroupInformation ugi,\n+                                                      String renewer)\n+    throws DelegationTokenManagerException {\n+    renewer \u003d (renewer \u003d\u003d null) ? ugi.getShortUserName() : renewer;\n+    String user \u003d ugi.getUserName();\n+    Text owner \u003d new Text(user);\n+    Text realUser \u003d null;\n+    if (ugi.getRealUser() !\u003d null) {\n+      realUser \u003d new Text(ugi.getRealUser().getUserName());\n+    }\n+    DelegationTokenIdentifier tokenIdentifier \u003d\n+      new DelegationTokenIdentifier(owner, new Text(renewer), realUser);\n+    Token\u003cDelegationTokenIdentifier\u003e token \u003d\n+      new Token\u003cDelegationTokenIdentifier\u003e(tokenIdentifier, secretManager);\n+    try {\n+      SecurityUtil.setTokenService(token,\n+                                   HttpFSServerWebApp.get().getAuthority());\n+    } catch (ServerException ex) {\n+      throw new DelegationTokenManagerException(\n+        DelegationTokenManagerException.ERROR.DT04, ex.toString(), ex);\n+    }\n+    return token;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003cDelegationTokenIdentifier\u003e createToken(UserGroupInformation ugi,\n                                                      String renewer)\n    throws DelegationTokenManagerException {\n    renewer \u003d (renewer \u003d\u003d null) ? ugi.getShortUserName() : renewer;\n    String user \u003d ugi.getUserName();\n    Text owner \u003d new Text(user);\n    Text realUser \u003d null;\n    if (ugi.getRealUser() !\u003d null) {\n      realUser \u003d new Text(ugi.getRealUser().getUserName());\n    }\n    DelegationTokenIdentifier tokenIdentifier \u003d\n      new DelegationTokenIdentifier(owner, new Text(renewer), realUser);\n    Token\u003cDelegationTokenIdentifier\u003e token \u003d\n      new Token\u003cDelegationTokenIdentifier\u003e(tokenIdentifier, secretManager);\n    try {\n      SecurityUtil.setTokenService(token,\n                                   HttpFSServerWebApp.get().getAuthority());\n    } catch (ServerException ex) {\n      throw new DelegationTokenManagerException(\n        DelegationTokenManagerException.ERROR.DT04, ex.toString(), ex);\n    }\n    return token;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/lib/service/security/DelegationTokenManagerService.java"
    }
  }
}