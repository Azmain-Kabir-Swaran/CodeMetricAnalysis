{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WebAppProxy.java",
  "functionName": "serviceInit",
  "functionId": "serviceInit___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
  "functionStartLine": 59,
  "functionEndLine": 100,
  "numCommitsSeen": 22,
  "timeTaken": 2670,
  "changeHistory": [
    "5df9fb16b9871618f19f3081b7006d3e77106737",
    "72fe54684198b7df5c5fb2114616dff6d17a4402",
    "78e995a37d44cfcf511dcaf7e149a6fd47ba3434",
    "0928502029ef141759008997335ea2cd836a7154",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "d41cb76b56e19f6eb411b3dacaf28a490d079c68",
    "8aabd3d4e67cad8dc7e46f5339981135badc7421"
  ],
  "changeHistoryShort": {
    "5df9fb16b9871618f19f3081b7006d3e77106737": "Ybodychange",
    "72fe54684198b7df5c5fb2114616dff6d17a4402": "Ybodychange",
    "78e995a37d44cfcf511dcaf7e149a6fd47ba3434": "Ybodychange",
    "0928502029ef141759008997335ea2cd836a7154": "Ymultichange(Yrename,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "d41cb76b56e19f6eb411b3dacaf28a490d079c68": "Ybodychange",
    "8aabd3d4e67cad8dc7e46f5339981135badc7421": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5df9fb16b9871618f19f3081b7006d3e77106737": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9130. Add Bind_HOST configuration for Yarn Web Proxy. Contributed by Rong Tang.\n",
      "commitDate": "19/12/18 6:58 PM",
      "commitName": "5df9fb16b9871618f19f3081b7006d3e77106737",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "16/10/18 1:36 PM",
      "commitNameOld": "c2288ac45b748b4119442c46147ccc324926c340",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 64.26,
      "commitsBetweenForRepo": 467,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,42 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n     if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n       isSecurityEnabled \u003d false;\n     } else if (\"kerberos\".equals(auth)) {\n       isSecurityEnabled \u003d true;\n     } else {\n       LOG.warn(\"Unrecognized attribute value for \" +\n           CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n           \" of \" + auth);\n     }\n     String proxy \u003d WebAppUtils.getProxyHostAndPort(conf);\n     String[] proxyParts \u003d proxy.split(\":\");\n     proxyHost \u003d proxyParts[0];\n \n     fetcher \u003d new AppReportFetcher(conf);\n     bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n     if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n-      throw new YarnRuntimeException(YarnConfiguration.PROXY_ADDRESS + \n+      throw new YarnRuntimeException(YarnConfiguration.PROXY_ADDRESS +\n           \" is not set so the proxy will not run.\");\n     }\n-    LOG.info(\"Instantiating Proxy at \" + bindAddress);\n+\n     String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n     port \u003d 0;\n     if (parts.length \u003d\u003d 2) {\n       bindAddress \u003d parts[0];\n       port \u003d Integer.parseInt(parts[1]);\n     }\n+\n+    String bindHost \u003d conf.getTrimmed(YarnConfiguration.PROXY_BIND_HOST, null);\n+    if (bindHost !\u003d null) {\n+      LOG.debug(\"{} is set, will be used to run proxy.\",\n+          YarnConfiguration.PROXY_BIND_HOST);\n+      bindAddress \u003d bindHost;\n+    }\n+\n+    LOG.info(\"Instantiating Proxy at {}:{}\", bindAddress, port);\n+\n     acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n    if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n      isSecurityEnabled \u003d false;\n    } else if (\"kerberos\".equals(auth)) {\n      isSecurityEnabled \u003d true;\n    } else {\n      LOG.warn(\"Unrecognized attribute value for \" +\n          CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n          \" of \" + auth);\n    }\n    String proxy \u003d WebAppUtils.getProxyHostAndPort(conf);\n    String[] proxyParts \u003d proxy.split(\":\");\n    proxyHost \u003d proxyParts[0];\n\n    fetcher \u003d new AppReportFetcher(conf);\n    bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n    if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n      throw new YarnRuntimeException(YarnConfiguration.PROXY_ADDRESS +\n          \" is not set so the proxy will not run.\");\n    }\n\n    String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n    port \u003d 0;\n    if (parts.length \u003d\u003d 2) {\n      bindAddress \u003d parts[0];\n      port \u003d Integer.parseInt(parts[1]);\n    }\n\n    String bindHost \u003d conf.getTrimmed(YarnConfiguration.PROXY_BIND_HOST, null);\n    if (bindHost !\u003d null) {\n      LOG.debug(\"{} is set, will be used to run proxy.\",\n          YarnConfiguration.PROXY_BIND_HOST);\n      bindAddress \u003d bindHost;\n    }\n\n    LOG.info(\"Instantiating Proxy at {}:{}\", bindAddress, port);\n\n    acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
      "extendedDetails": {}
    },
    "72fe54684198b7df5c5fb2114616dff6d17a4402": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5963. Spelling errors in logging and exceptions for node manager, client, web-proxy, common, and app history code (gsohn via rkanter)\n",
      "commitDate": "07/12/16 3:07 PM",
      "commitName": "72fe54684198b7df5c5fb2114616dff6d17a4402",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "12/02/15 10:57 AM",
      "commitNameOld": "83be450acc7fc9bb9f7bbd006e7b0804bf10279c",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 664.17,
      "commitsBetweenForRepo": 5063,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n     if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n       isSecurityEnabled \u003d false;\n     } else if (\"kerberos\".equals(auth)) {\n       isSecurityEnabled \u003d true;\n     } else {\n-      LOG.warn(\"Unrecongized attribute value for \" +\n+      LOG.warn(\"Unrecognized attribute value for \" +\n           CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n           \" of \" + auth);\n     }\n     String proxy \u003d WebAppUtils.getProxyHostAndPort(conf);\n     String[] proxyParts \u003d proxy.split(\":\");\n     proxyHost \u003d proxyParts[0];\n \n     fetcher \u003d new AppReportFetcher(conf);\n     bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n     if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n       throw new YarnRuntimeException(YarnConfiguration.PROXY_ADDRESS + \n           \" is not set so the proxy will not run.\");\n     }\n     LOG.info(\"Instantiating Proxy at \" + bindAddress);\n     String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n     port \u003d 0;\n     if (parts.length \u003d\u003d 2) {\n       bindAddress \u003d parts[0];\n       port \u003d Integer.parseInt(parts[1]);\n     }\n     acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n    if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n      isSecurityEnabled \u003d false;\n    } else if (\"kerberos\".equals(auth)) {\n      isSecurityEnabled \u003d true;\n    } else {\n      LOG.warn(\"Unrecognized attribute value for \" +\n          CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n          \" of \" + auth);\n    }\n    String proxy \u003d WebAppUtils.getProxyHostAndPort(conf);\n    String[] proxyParts \u003d proxy.split(\":\");\n    proxyHost \u003d proxyParts[0];\n\n    fetcher \u003d new AppReportFetcher(conf);\n    bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n    if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n      throw new YarnRuntimeException(YarnConfiguration.PROXY_ADDRESS + \n          \" is not set so the proxy will not run.\");\n    }\n    LOG.info(\"Instantiating Proxy at \" + bindAddress);\n    String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n    port \u003d 0;\n    if (parts.length \u003d\u003d 2) {\n      bindAddress \u003d parts[0];\n      port \u003d Integer.parseInt(parts[1]);\n    }\n    acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
      "extendedDetails": {}
    },
    "78e995a37d44cfcf511dcaf7e149a6fd47ba3434": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1204. Added separate configuration properties for https for RM and NM without which servers enabled with https will also start on http ports. Contributed by Omkar Vinit Joshi.\nMAPREDUCE-5523. Added separate configuration properties for https for JHS without which even when https is enabled, it starts on http port itself. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1525947 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/09/13 10:20 AM",
      "commitName": "78e995a37d44cfcf511dcaf7e149a6fd47ba3434",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "21/08/13 3:12 AM",
      "commitNameOld": "782191f1ba27e0ff0acf3c6cf8a88df00274d308",
      "commitAuthorOld": "Luke Lu",
      "daysBetweenCommits": 34.3,
      "commitsBetweenForRepo": 169,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n     if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n       isSecurityEnabled \u003d false;\n     } else if (\"kerberos\".equals(auth)) {\n       isSecurityEnabled \u003d true;\n     } else {\n       LOG.warn(\"Unrecongized attribute value for \" +\n           CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n           \" of \" + auth);\n     }\n-    String proxy \u003d YarnConfiguration.getProxyHostAndPort(conf);\n+    String proxy \u003d WebAppUtils.getProxyHostAndPort(conf);\n     String[] proxyParts \u003d proxy.split(\":\");\n     proxyHost \u003d proxyParts[0];\n \n     fetcher \u003d new AppReportFetcher(conf);\n     bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n     if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n       throw new YarnRuntimeException(YarnConfiguration.PROXY_ADDRESS + \n           \" is not set so the proxy will not run.\");\n     }\n     LOG.info(\"Instantiating Proxy at \" + bindAddress);\n     String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n     port \u003d 0;\n     if (parts.length \u003d\u003d 2) {\n       bindAddress \u003d parts[0];\n       port \u003d Integer.parseInt(parts[1]);\n     }\n     acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n    if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n      isSecurityEnabled \u003d false;\n    } else if (\"kerberos\".equals(auth)) {\n      isSecurityEnabled \u003d true;\n    } else {\n      LOG.warn(\"Unrecongized attribute value for \" +\n          CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n          \" of \" + auth);\n    }\n    String proxy \u003d WebAppUtils.getProxyHostAndPort(conf);\n    String[] proxyParts \u003d proxy.split(\":\");\n    proxyHost \u003d proxyParts[0];\n\n    fetcher \u003d new AppReportFetcher(conf);\n    bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n    if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n      throw new YarnRuntimeException(YarnConfiguration.PROXY_ADDRESS + \n          \" is not set so the proxy will not run.\");\n    }\n    LOG.info(\"Instantiating Proxy at \" + bindAddress);\n    String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n    port \u003d 0;\n    if (parts.length \u003d\u003d 2) {\n      bindAddress \u003d parts[0];\n      port \u003d Integer.parseInt(parts[1]);\n    }\n    acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
      "extendedDetails": {}
    },
    "0928502029ef141759008997335ea2cd836a7154": {
      "type": "Ymultichange(Yrename,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 8:54 AM",
      "commitName": "0928502029ef141759008997335ea2cd836a7154",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,32 @@\n-  public void init(Configuration conf) {\n+  protected void serviceInit(Configuration conf) throws Exception {\n     String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n     if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n       isSecurityEnabled \u003d false;\n     } else if (\"kerberos\".equals(auth)) {\n       isSecurityEnabled \u003d true;\n     } else {\n       LOG.warn(\"Unrecongized attribute value for \" +\n           CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n           \" of \" + auth);\n     }\n     String proxy \u003d YarnConfiguration.getProxyHostAndPort(conf);\n     String[] proxyParts \u003d proxy.split(\":\");\n     proxyHost \u003d proxyParts[0];\n \n     fetcher \u003d new AppReportFetcher(conf);\n     bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n     if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n       throw new YarnRuntimeException(YarnConfiguration.PROXY_ADDRESS + \n           \" is not set so the proxy will not run.\");\n     }\n     LOG.info(\"Instantiating Proxy at \" + bindAddress);\n     String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n     port \u003d 0;\n     if (parts.length \u003d\u003d 2) {\n       bindAddress \u003d parts[0];\n       port \u003d Integer.parseInt(parts[1]);\n     }\n     acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n-    super.init(conf);\n+    super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n    if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n      isSecurityEnabled \u003d false;\n    } else if (\"kerberos\".equals(auth)) {\n      isSecurityEnabled \u003d true;\n    } else {\n      LOG.warn(\"Unrecongized attribute value for \" +\n          CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n          \" of \" + auth);\n    }\n    String proxy \u003d YarnConfiguration.getProxyHostAndPort(conf);\n    String[] proxyParts \u003d proxy.split(\":\");\n    proxyHost \u003d proxyParts[0];\n\n    fetcher \u003d new AppReportFetcher(conf);\n    bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n    if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n      throw new YarnRuntimeException(YarnConfiguration.PROXY_ADDRESS + \n          \" is not set so the proxy will not run.\");\n    }\n    LOG.info(\"Instantiating Proxy at \" + bindAddress);\n    String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n    port \u003d 0;\n    if (parts.length \u003d\u003d 2) {\n      bindAddress \u003d parts[0];\n      port \u003d Integer.parseInt(parts[1]);\n    }\n    acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    super.serviceInit(conf);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
          "extendedDetails": {
            "oldValue": "init",
            "newValue": "serviceInit"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,32 @@\n-  public void init(Configuration conf) {\n+  protected void serviceInit(Configuration conf) throws Exception {\n     String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n     if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n       isSecurityEnabled \u003d false;\n     } else if (\"kerberos\".equals(auth)) {\n       isSecurityEnabled \u003d true;\n     } else {\n       LOG.warn(\"Unrecongized attribute value for \" +\n           CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n           \" of \" + auth);\n     }\n     String proxy \u003d YarnConfiguration.getProxyHostAndPort(conf);\n     String[] proxyParts \u003d proxy.split(\":\");\n     proxyHost \u003d proxyParts[0];\n \n     fetcher \u003d new AppReportFetcher(conf);\n     bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n     if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n       throw new YarnRuntimeException(YarnConfiguration.PROXY_ADDRESS + \n           \" is not set so the proxy will not run.\");\n     }\n     LOG.info(\"Instantiating Proxy at \" + bindAddress);\n     String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n     port \u003d 0;\n     if (parts.length \u003d\u003d 2) {\n       bindAddress \u003d parts[0];\n       port \u003d Integer.parseInt(parts[1]);\n     }\n     acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n-    super.init(conf);\n+    super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n    if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n      isSecurityEnabled \u003d false;\n    } else if (\"kerberos\".equals(auth)) {\n      isSecurityEnabled \u003d true;\n    } else {\n      LOG.warn(\"Unrecongized attribute value for \" +\n          CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n          \" of \" + auth);\n    }\n    String proxy \u003d YarnConfiguration.getProxyHostAndPort(conf);\n    String[] proxyParts \u003d proxy.split(\":\");\n    proxyHost \u003d proxyParts[0];\n\n    fetcher \u003d new AppReportFetcher(conf);\n    bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n    if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n      throw new YarnRuntimeException(YarnConfiguration.PROXY_ADDRESS + \n          \" is not set so the proxy will not run.\");\n    }\n    LOG.info(\"Instantiating Proxy at \" + bindAddress);\n    String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n    port \u003d 0;\n    if (parts.length \u003d\u003d 2) {\n      bindAddress \u003d parts[0];\n      port \u003d Integer.parseInt(parts[1]);\n    }\n    acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    super.serviceInit(conf);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,32 @@\n-  public void init(Configuration conf) {\n+  protected void serviceInit(Configuration conf) throws Exception {\n     String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n     if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n       isSecurityEnabled \u003d false;\n     } else if (\"kerberos\".equals(auth)) {\n       isSecurityEnabled \u003d true;\n     } else {\n       LOG.warn(\"Unrecongized attribute value for \" +\n           CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n           \" of \" + auth);\n     }\n     String proxy \u003d YarnConfiguration.getProxyHostAndPort(conf);\n     String[] proxyParts \u003d proxy.split(\":\");\n     proxyHost \u003d proxyParts[0];\n \n     fetcher \u003d new AppReportFetcher(conf);\n     bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n     if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n       throw new YarnRuntimeException(YarnConfiguration.PROXY_ADDRESS + \n           \" is not set so the proxy will not run.\");\n     }\n     LOG.info(\"Instantiating Proxy at \" + bindAddress);\n     String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n     port \u003d 0;\n     if (parts.length \u003d\u003d 2) {\n       bindAddress \u003d parts[0];\n       port \u003d Integer.parseInt(parts[1]);\n     }\n     acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n-    super.init(conf);\n+    super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n    if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n      isSecurityEnabled \u003d false;\n    } else if (\"kerberos\".equals(auth)) {\n      isSecurityEnabled \u003d true;\n    } else {\n      LOG.warn(\"Unrecongized attribute value for \" +\n          CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n          \" of \" + auth);\n    }\n    String proxy \u003d YarnConfiguration.getProxyHostAndPort(conf);\n    String[] proxyParts \u003d proxy.split(\":\");\n    proxyHost \u003d proxyParts[0];\n\n    fetcher \u003d new AppReportFetcher(conf);\n    bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n    if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n      throw new YarnRuntimeException(YarnConfiguration.PROXY_ADDRESS + \n          \" is not set so the proxy will not run.\");\n    }\n    LOG.info(\"Instantiating Proxy at \" + bindAddress);\n    String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n    port \u003d 0;\n    if (parts.length \u003d\u003d 2) {\n      bindAddress \u003d parts[0];\n      port \u003d Integer.parseInt(parts[1]);\n    }\n    acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    super.serviceInit(conf);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[Exception]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,32 @@\n-  public void init(Configuration conf) {\n+  protected void serviceInit(Configuration conf) throws Exception {\n     String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n     if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n       isSecurityEnabled \u003d false;\n     } else if (\"kerberos\".equals(auth)) {\n       isSecurityEnabled \u003d true;\n     } else {\n       LOG.warn(\"Unrecongized attribute value for \" +\n           CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n           \" of \" + auth);\n     }\n     String proxy \u003d YarnConfiguration.getProxyHostAndPort(conf);\n     String[] proxyParts \u003d proxy.split(\":\");\n     proxyHost \u003d proxyParts[0];\n \n     fetcher \u003d new AppReportFetcher(conf);\n     bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n     if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n       throw new YarnRuntimeException(YarnConfiguration.PROXY_ADDRESS + \n           \" is not set so the proxy will not run.\");\n     }\n     LOG.info(\"Instantiating Proxy at \" + bindAddress);\n     String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n     port \u003d 0;\n     if (parts.length \u003d\u003d 2) {\n       bindAddress \u003d parts[0];\n       port \u003d Integer.parseInt(parts[1]);\n     }\n     acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n-    super.init(conf);\n+    super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n    if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n      isSecurityEnabled \u003d false;\n    } else if (\"kerberos\".equals(auth)) {\n      isSecurityEnabled \u003d true;\n    } else {\n      LOG.warn(\"Unrecongized attribute value for \" +\n          CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n          \" of \" + auth);\n    }\n    String proxy \u003d YarnConfiguration.getProxyHostAndPort(conf);\n    String[] proxyParts \u003d proxy.split(\":\");\n    proxyHost \u003d proxyParts[0];\n\n    fetcher \u003d new AppReportFetcher(conf);\n    bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n    if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n      throw new YarnRuntimeException(YarnConfiguration.PROXY_ADDRESS + \n          \" is not set so the proxy will not run.\");\n    }\n    LOG.info(\"Instantiating Proxy at \" + bindAddress);\n    String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n    port \u003d 0;\n    if (parts.length \u003d\u003d 2) {\n      bindAddress \u003d parts[0];\n      port \u003d Integer.parseInt(parts[1]);\n    }\n    acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    super.serviceInit(conf);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
          "extendedDetails": {}
        }
      ]
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Ybodychange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "23/01/13 2:05 PM",
      "commitNameOld": "2e9e7601e162cc8b7ea787a354d915b6003759d7",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 131.25,
      "commitsBetweenForRepo": 754,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   public void init(Configuration conf) {\n     String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n     if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n       isSecurityEnabled \u003d false;\n     } else if (\"kerberos\".equals(auth)) {\n       isSecurityEnabled \u003d true;\n     } else {\n       LOG.warn(\"Unrecongized attribute value for \" +\n           CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n           \" of \" + auth);\n     }\n     String proxy \u003d YarnConfiguration.getProxyHostAndPort(conf);\n     String[] proxyParts \u003d proxy.split(\":\");\n     proxyHost \u003d proxyParts[0];\n \n     fetcher \u003d new AppReportFetcher(conf);\n     bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n     if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n-      throw new YarnException(YarnConfiguration.PROXY_ADDRESS + \n+      throw new YarnRuntimeException(YarnConfiguration.PROXY_ADDRESS + \n           \" is not set so the proxy will not run.\");\n     }\n     LOG.info(\"Instantiating Proxy at \" + bindAddress);\n     String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n     port \u003d 0;\n     if (parts.length \u003d\u003d 2) {\n       bindAddress \u003d parts[0];\n       port \u003d Integer.parseInt(parts[1]);\n     }\n     acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n     super.init(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(Configuration conf) {\n    String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n    if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n      isSecurityEnabled \u003d false;\n    } else if (\"kerberos\".equals(auth)) {\n      isSecurityEnabled \u003d true;\n    } else {\n      LOG.warn(\"Unrecongized attribute value for \" +\n          CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n          \" of \" + auth);\n    }\n    String proxy \u003d YarnConfiguration.getProxyHostAndPort(conf);\n    String[] proxyParts \u003d proxy.split(\":\");\n    proxyHost \u003d proxyParts[0];\n\n    fetcher \u003d new AppReportFetcher(conf);\n    bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n    if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n      throw new YarnRuntimeException(YarnConfiguration.PROXY_ADDRESS + \n          \" is not set so the proxy will not run.\");\n    }\n    LOG.info(\"Instantiating Proxy at \" + bindAddress);\n    String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n    port \u003d 0;\n    if (parts.length \u003d\u003d 2) {\n      bindAddress \u003d parts[0];\n      port \u003d Integer.parseInt(parts[1]);\n    }\n    acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    super.init(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void init(Configuration conf) {\n    String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n    if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n      isSecurityEnabled \u003d false;\n    } else if (\"kerberos\".equals(auth)) {\n      isSecurityEnabled \u003d true;\n    } else {\n      LOG.warn(\"Unrecongized attribute value for \" +\n          CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n          \" of \" + auth);\n    }\n    String proxy \u003d YarnConfiguration.getProxyHostAndPort(conf);\n    String[] proxyParts \u003d proxy.split(\":\");\n    proxyHost \u003d proxyParts[0];\n\n    fetcher \u003d new AppReportFetcher(conf);\n    bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n    if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n      throw new YarnException(YarnConfiguration.PROXY_ADDRESS + \n          \" is not set so the proxy will not run.\");\n    }\n    LOG.info(\"Instantiating Proxy at \" + bindAddress);\n    String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n    port \u003d 0;\n    if (parts.length \u003d\u003d 2) {\n      bindAddress \u003d parts[0];\n      port \u003d Integer.parseInt(parts[1]);\n    }\n    acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    super.init(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java"
      }
    },
    "d41cb76b56e19f6eb411b3dacaf28a490d079c68": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3960. Fix web-proxy to forward request to AM with configured hostname or IP. Contributed by Thomas Graves. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1296878 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/03/12 1:14 PM",
      "commitName": "d41cb76b56e19f6eb411b3dacaf28a490d079c68",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "25/10/11 11:29 PM",
      "commitNameOld": "8aabd3d4e67cad8dc7e46f5339981135badc7421",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 130.61,
      "commitsBetweenForRepo": 945,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,32 @@\n   public void init(Configuration conf) {\n     String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n     if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n       isSecurityEnabled \u003d false;\n     } else if (\"kerberos\".equals(auth)) {\n       isSecurityEnabled \u003d true;\n     } else {\n       LOG.warn(\"Unrecongized attribute value for \" +\n           CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n           \" of \" + auth);\n     }\n+    String proxy \u003d YarnConfiguration.getProxyHostAndPort(conf);\n+    String[] proxyParts \u003d proxy.split(\":\");\n+    proxyHost \u003d proxyParts[0];\n \n     fetcher \u003d new AppReportFetcher(conf);\n     bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n     if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n       throw new YarnException(YarnConfiguration.PROXY_ADDRESS + \n           \" is not set so the proxy will not run.\");\n     }\n     LOG.info(\"Instantiating Proxy at \" + bindAddress);\n     String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n     port \u003d 0;\n     if (parts.length \u003d\u003d 2) {\n       bindAddress \u003d parts[0];\n       port \u003d Integer.parseInt(parts[1]);\n     }\n     acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n         YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n     super.init(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(Configuration conf) {\n    String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n    if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n      isSecurityEnabled \u003d false;\n    } else if (\"kerberos\".equals(auth)) {\n      isSecurityEnabled \u003d true;\n    } else {\n      LOG.warn(\"Unrecongized attribute value for \" +\n          CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n          \" of \" + auth);\n    }\n    String proxy \u003d YarnConfiguration.getProxyHostAndPort(conf);\n    String[] proxyParts \u003d proxy.split(\":\");\n    proxyHost \u003d proxyParts[0];\n\n    fetcher \u003d new AppReportFetcher(conf);\n    bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n    if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n      throw new YarnException(YarnConfiguration.PROXY_ADDRESS + \n          \" is not set so the proxy will not run.\");\n    }\n    LOG.info(\"Instantiating Proxy at \" + bindAddress);\n    String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n    port \u003d 0;\n    if (parts.length \u003d\u003d 2) {\n      bindAddress \u003d parts[0];\n      port \u003d Integer.parseInt(parts[1]);\n    }\n    acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    super.init(conf);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
      "extendedDetails": {}
    },
    "8aabd3d4e67cad8dc7e46f5339981135badc7421": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2858. Added a WebApp Proxy for applications. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1189036 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/10/11 11:29 PM",
      "commitName": "8aabd3d4e67cad8dc7e46f5339981135badc7421",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,29 @@\n+  public void init(Configuration conf) {\n+    String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n+    if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n+      isSecurityEnabled \u003d false;\n+    } else if (\"kerberos\".equals(auth)) {\n+      isSecurityEnabled \u003d true;\n+    } else {\n+      LOG.warn(\"Unrecongized attribute value for \" +\n+          CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n+          \" of \" + auth);\n+    }\n+\n+    fetcher \u003d new AppReportFetcher(conf);\n+    bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n+    if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n+      throw new YarnException(YarnConfiguration.PROXY_ADDRESS + \n+          \" is not set so the proxy will not run.\");\n+    }\n+    LOG.info(\"Instantiating Proxy at \" + bindAddress);\n+    String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n+    port \u003d 0;\n+    if (parts.length \u003d\u003d 2) {\n+      bindAddress \u003d parts[0];\n+      port \u003d Integer.parseInt(parts[1]);\n+    }\n+    acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n+        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n+    super.init(conf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(Configuration conf) {\n    String auth \u003d  conf.get(CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION);\n    if (auth \u003d\u003d null || \"simple\".equals(auth)) {\n      isSecurityEnabled \u003d false;\n    } else if (\"kerberos\".equals(auth)) {\n      isSecurityEnabled \u003d true;\n    } else {\n      LOG.warn(\"Unrecongized attribute value for \" +\n          CommonConfigurationKeys.HADOOP_SECURITY_AUTHENTICATION +\n          \" of \" + auth);\n    }\n\n    fetcher \u003d new AppReportFetcher(conf);\n    bindAddress \u003d conf.get(YarnConfiguration.PROXY_ADDRESS);\n    if(bindAddress \u003d\u003d null || bindAddress.isEmpty()) {\n      throw new YarnException(YarnConfiguration.PROXY_ADDRESS + \n          \" is not set so the proxy will not run.\");\n    }\n    LOG.info(\"Instantiating Proxy at \" + bindAddress);\n    String[] parts \u003d StringUtils.split(bindAddress, \u0027:\u0027);\n    port \u003d 0;\n    if (parts.length \u003d\u003d 2) {\n      bindAddress \u003d parts[0];\n      port \u003d Integer.parseInt(parts[1]);\n    }\n    acl \u003d new AccessControlList(conf.get(YarnConfiguration.YARN_ADMIN_ACL, \n        YarnConfiguration.DEFAULT_YARN_ADMIN_ACL));\n    super.init(conf);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java"
    }
  }
}