{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Component.java",
  "functionName": "transition",
  "functionId": "transition___component-Component__componentEvent-ComponentEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
  "functionStartLine": 646,
  "functionEndLine": 666,
  "numCommitsSeen": 33,
  "timeTaken": 1633,
  "changeHistory": [
    "913f87dada27776c539dfb352400ecf8d40e7943",
    "4a7369b09547a78f532af66c763c6994a38b5d68"
  ],
  "changeHistoryShort": {
    "913f87dada27776c539dfb352400ecf8d40e7943": "Ybodychange",
    "4a7369b09547a78f532af66c763c6994a38b5d68": "Yintroduced"
  },
  "changeHistoryDetails": {
    "913f87dada27776c539dfb352400ecf8d40e7943": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8665.  Added Yarn service cancel upgrade option.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/09/18 11:51 AM",
      "commitName": "913f87dada27776c539dfb352400ecf8d40e7943",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "21/08/18 4:49 PM",
      "commitNameOld": "e557c6bd8de2811a561210f672f47b4d07a9d5c6",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 35.79,
      "commitsBetweenForRepo": 332,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     public ComponentState transition(Component component,\n         ComponentEvent componentEvent) {\n-      org.apache.hadoop.yarn.service.api.records.ComponentState currState \u003d\n-          component.componentSpec.getState();\n-      if (currState.equals(org.apache.hadoop.yarn.service.api.records\n-          .ComponentState.STABLE)) {\n-        return ComponentState.STABLE;\n-      }\n       // checkIfStable also updates the state in definition when STABLE\n       ComponentState targetState \u003d checkIfStable(component);\n-      if (targetState.equals(STABLE) \u0026\u0026 component.upgradeInProgress.get()) {\n-        component.componentSpec.overwrite(\n-            component.upgradeEvent.getTargetSpec());\n-        component.upgradeEvent \u003d null;\n+\n+      if (targetState.equals(STABLE) \u0026\u0026\n+          !(component.upgradeStatus.isCompleted() \u0026\u0026\n+              component.cancelUpgradeStatus.isCompleted())) {\n+        // Component stable after upgrade or cancel upgrade\n+        UpgradeStatus status \u003d !component.cancelUpgradeStatus.isCompleted() ?\n+            component.cancelUpgradeStatus : component.upgradeStatus;\n+\n+        component.componentSpec.overwrite(status.getTargetSpec());\n+        status.reset();\n+\n         ServiceEvent checkStable \u003d new ServiceEvent(ServiceEventType.\n             CHECK_STABLE);\n         component.dispatcher.getEventHandler().handle(checkStable);\n-        component.upgradeInProgress.set(false);\n       }\n       return targetState;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public ComponentState transition(Component component,\n        ComponentEvent componentEvent) {\n      // checkIfStable also updates the state in definition when STABLE\n      ComponentState targetState \u003d checkIfStable(component);\n\n      if (targetState.equals(STABLE) \u0026\u0026\n          !(component.upgradeStatus.isCompleted() \u0026\u0026\n              component.cancelUpgradeStatus.isCompleted())) {\n        // Component stable after upgrade or cancel upgrade\n        UpgradeStatus status \u003d !component.cancelUpgradeStatus.isCompleted() ?\n            component.cancelUpgradeStatus : component.upgradeStatus;\n\n        component.componentSpec.overwrite(status.getTargetSpec());\n        status.reset();\n\n        ServiceEvent checkStable \u003d new ServiceEvent(ServiceEventType.\n            CHECK_STABLE);\n        component.dispatcher.getEventHandler().handle(checkStable);\n      }\n      return targetState;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java",
      "extendedDetails": {}
    },
    "4a7369b09547a78f532af66c763c6994a38b5d68": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7939.  Added support to upgrade a component instance.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/04/18 1:54 PM",
      "commitName": "4a7369b09547a78f532af66c763c6994a38b5d68",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,21 @@\n+    public ComponentState transition(Component component,\n+        ComponentEvent componentEvent) {\n+      org.apache.hadoop.yarn.service.api.records.ComponentState currState \u003d\n+          component.componentSpec.getState();\n+      if (currState.equals(org.apache.hadoop.yarn.service.api.records\n+          .ComponentState.STABLE)) {\n+        return ComponentState.STABLE;\n+      }\n+      // checkIfStable also updates the state in definition when STABLE\n+      ComponentState targetState \u003d checkIfStable(component);\n+      if (targetState.equals(STABLE) \u0026\u0026 component.upgradeInProgress.get()) {\n+        component.componentSpec.overwrite(\n+            component.upgradeEvent.getTargetSpec());\n+        component.upgradeEvent \u003d null;\n+        ServiceEvent checkStable \u003d new ServiceEvent(ServiceEventType.\n+            CHECK_STABLE);\n+        component.dispatcher.getEventHandler().handle(checkStable);\n+        component.upgradeInProgress.set(false);\n+      }\n+      return targetState;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public ComponentState transition(Component component,\n        ComponentEvent componentEvent) {\n      org.apache.hadoop.yarn.service.api.records.ComponentState currState \u003d\n          component.componentSpec.getState();\n      if (currState.equals(org.apache.hadoop.yarn.service.api.records\n          .ComponentState.STABLE)) {\n        return ComponentState.STABLE;\n      }\n      // checkIfStable also updates the state in definition when STABLE\n      ComponentState targetState \u003d checkIfStable(component);\n      if (targetState.equals(STABLE) \u0026\u0026 component.upgradeInProgress.get()) {\n        component.componentSpec.overwrite(\n            component.upgradeEvent.getTargetSpec());\n        component.upgradeEvent \u003d null;\n        ServiceEvent checkStable \u003d new ServiceEvent(ServiceEventType.\n            CHECK_STABLE);\n        component.dispatcher.getEventHandler().handle(checkStable);\n        component.upgradeInProgress.set(false);\n      }\n      return targetState;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/Component.java"
    }
  }
}