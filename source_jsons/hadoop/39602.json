{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PriorityUtilizationQueueOrderingPolicy.java",
  "functionName": "compareQueueAccessToPartition",
  "functionId": "compareQueueAccessToPartition___q1-CSQueue__q2-CSQueue__partition-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/policy/PriorityUtilizationQueueOrderingPolicy.java",
  "functionStartLine": 177,
  "functionEndLine": 203,
  "numCommitsSeen": 4,
  "timeTaken": 1637,
  "changeHistory": [
    "ce832059db077fa95922198b066a737ed4f609fe"
  ],
  "changeHistoryShort": {
    "ce832059db077fa95922198b066a737ed4f609fe": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ce832059db077fa95922198b066a737ed4f609fe": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5864. Capacity Scheduler - Queue Priorities. (wangda)\n",
      "commitDate": "23/01/17 10:52 AM",
      "commitName": "ce832059db077fa95922198b066a737ed4f609fe",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,26 @@\n+    private int compareQueueAccessToPartition(CSQueue q1, CSQueue q2, String partition) {\n+      // Everybody has access to default partition\n+      if (StringUtils.equals(partition, RMNodeLabelsManager.NO_LABEL)) {\n+        return 0;\n+      }\n+\n+      /*\n+       * Check accessible to given partition, if one queue accessible and\n+       * the other not, accessible queue goes first.\n+       */\n+      boolean q1Accessible \u003d\n+          q1.getAccessibleNodeLabels() !\u003d null \u0026\u0026 q1.getAccessibleNodeLabels()\n+              .contains(partition) || q1.getAccessibleNodeLabels().contains(\n+              RMNodeLabelsManager.ANY);\n+      boolean q2Accessible \u003d\n+          q2.getAccessibleNodeLabels() !\u003d null \u0026\u0026 q2.getAccessibleNodeLabels()\n+              .contains(partition) || q2.getAccessibleNodeLabels().contains(\n+              RMNodeLabelsManager.ANY);\n+      if (q1Accessible \u0026\u0026 !q2Accessible) {\n+        return -1;\n+      } else if (!q1Accessible \u0026\u0026 q2Accessible) {\n+        return 1;\n+      }\n+\n+      return 0;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private int compareQueueAccessToPartition(CSQueue q1, CSQueue q2, String partition) {\n      // Everybody has access to default partition\n      if (StringUtils.equals(partition, RMNodeLabelsManager.NO_LABEL)) {\n        return 0;\n      }\n\n      /*\n       * Check accessible to given partition, if one queue accessible and\n       * the other not, accessible queue goes first.\n       */\n      boolean q1Accessible \u003d\n          q1.getAccessibleNodeLabels() !\u003d null \u0026\u0026 q1.getAccessibleNodeLabels()\n              .contains(partition) || q1.getAccessibleNodeLabels().contains(\n              RMNodeLabelsManager.ANY);\n      boolean q2Accessible \u003d\n          q2.getAccessibleNodeLabels() !\u003d null \u0026\u0026 q2.getAccessibleNodeLabels()\n              .contains(partition) || q2.getAccessibleNodeLabels().contains(\n              RMNodeLabelsManager.ANY);\n      if (q1Accessible \u0026\u0026 !q2Accessible) {\n        return -1;\n      } else if (!q1Accessible \u0026\u0026 q2Accessible) {\n        return 1;\n      }\n\n      return 0;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/policy/PriorityUtilizationQueueOrderingPolicy.java"
    }
  }
}