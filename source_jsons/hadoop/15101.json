{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OfflineImageReconstructor.java",
  "functionName": "createINodeDirectoryBuilder",
  "functionId": "createINodeDirectoryBuilder___node-Node",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java",
  "functionStartLine": 770,
  "functionEndLine": 825,
  "numCommitsSeen": 15,
  "timeTaken": 1265,
  "changeHistory": [
    "05391c1845639d4f01da8e5df966e2dc2682f2ca"
  ],
  "changeHistoryShort": {
    "05391c1845639d4f01da8e5df966e2dc2682f2ca": "Yintroduced"
  },
  "changeHistoryDetails": {
    "05391c1845639d4f01da8e5df966e2dc2682f2ca": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10506. OIV\u0027s ReverseXML processor cannot reconstruct some snapshot details. Contributed by Akira Ajisaka.\n",
      "commitDate": "25/02/17 2:38 PM",
      "commitName": "05391c1845639d4f01da8e5df966e2dc2682f2ca",
      "commitAuthor": "Wei-Chiu Chuang",
      "diff": "@@ -0,0 +1,56 @@\n+      createINodeDirectoryBuilder(Node node) throws IOException {\n+    INodeSection.INodeDirectory.Builder bld \u003d\n+        INodeSection.INodeDirectory.newBuilder();\n+    Long lval \u003d node.removeChildLong(INODE_SECTION_MTIME);\n+    if (lval !\u003d null) {\n+      bld.setModificationTime(lval);\n+    }\n+    lval \u003d node.removeChildLong(INODE_SECTION_NS_QUOTA);\n+    if (lval !\u003d null) {\n+      bld.setNsQuota(lval);\n+    }\n+    lval \u003d node.removeChildLong(INODE_SECTION_DS_QUOTA);\n+    if (lval !\u003d null) {\n+      bld.setDsQuota(lval);\n+    }\n+    String perm \u003d node.removeChildStr(INODE_SECTION_PERMISSION);\n+    if (perm !\u003d null) {\n+      bld.setPermission(permissionXmlToU64(perm));\n+    }\n+    Node acls \u003d node.removeChild(INODE_SECTION_ACLS);\n+    if (acls !\u003d null) {\n+      bld.setAcl(aclXmlToProto(acls));\n+    }\n+    Node xattrs \u003d node.removeChild(INODE_SECTION_XATTRS);\n+    if (xattrs !\u003d null) {\n+      bld.setXAttrs(xattrsXmlToProto(xattrs));\n+    }\n+    INodeSection.QuotaByStorageTypeFeatureProto.Builder qf \u003d\n+        INodeSection.QuotaByStorageTypeFeatureProto.newBuilder();\n+    while (true) {\n+      Node typeQuota \u003d node.removeChild(INODE_SECTION_TYPE_QUOTA);\n+      if (typeQuota \u003d\u003d null) {\n+        break;\n+      }\n+      INodeSection.QuotaByStorageTypeEntryProto.Builder qbld \u003d\n+          INodeSection.QuotaByStorageTypeEntryProto.newBuilder();\n+      String type \u003d typeQuota.removeChildStr(INODE_SECTION_TYPE);\n+      if (type \u003d\u003d null) {\n+        throw new IOException(\"\u003ctypeQuota\u003e was missing \u003ctype\u003e\");\n+      }\n+      HdfsProtos.StorageTypeProto storageType \u003d\n+          HdfsProtos.StorageTypeProto.valueOf(type);\n+      if (storageType \u003d\u003d null) {\n+        throw new IOException(\"\u003ctypeQuota\u003e had unknown \u003ctype\u003e \" + type);\n+      }\n+      qbld.setStorageType(storageType);\n+      Long quota \u003d typeQuota.removeChildLong(INODE_SECTION_QUOTA);\n+      if (quota \u003d\u003d null) {\n+        throw new IOException(\"\u003ctypeQuota\u003e was missing \u003cquota\u003e\");\n+      }\n+      qbld.setQuota(quota);\n+      qf.addQuotas(qbld);\n+    }\n+    bld.setTypeQuotas(qf);\n+    return bld;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "      createINodeDirectoryBuilder(Node node) throws IOException {\n    INodeSection.INodeDirectory.Builder bld \u003d\n        INodeSection.INodeDirectory.newBuilder();\n    Long lval \u003d node.removeChildLong(INODE_SECTION_MTIME);\n    if (lval !\u003d null) {\n      bld.setModificationTime(lval);\n    }\n    lval \u003d node.removeChildLong(INODE_SECTION_NS_QUOTA);\n    if (lval !\u003d null) {\n      bld.setNsQuota(lval);\n    }\n    lval \u003d node.removeChildLong(INODE_SECTION_DS_QUOTA);\n    if (lval !\u003d null) {\n      bld.setDsQuota(lval);\n    }\n    String perm \u003d node.removeChildStr(INODE_SECTION_PERMISSION);\n    if (perm !\u003d null) {\n      bld.setPermission(permissionXmlToU64(perm));\n    }\n    Node acls \u003d node.removeChild(INODE_SECTION_ACLS);\n    if (acls !\u003d null) {\n      bld.setAcl(aclXmlToProto(acls));\n    }\n    Node xattrs \u003d node.removeChild(INODE_SECTION_XATTRS);\n    if (xattrs !\u003d null) {\n      bld.setXAttrs(xattrsXmlToProto(xattrs));\n    }\n    INodeSection.QuotaByStorageTypeFeatureProto.Builder qf \u003d\n        INodeSection.QuotaByStorageTypeFeatureProto.newBuilder();\n    while (true) {\n      Node typeQuota \u003d node.removeChild(INODE_SECTION_TYPE_QUOTA);\n      if (typeQuota \u003d\u003d null) {\n        break;\n      }\n      INodeSection.QuotaByStorageTypeEntryProto.Builder qbld \u003d\n          INodeSection.QuotaByStorageTypeEntryProto.newBuilder();\n      String type \u003d typeQuota.removeChildStr(INODE_SECTION_TYPE);\n      if (type \u003d\u003d null) {\n        throw new IOException(\"\u003ctypeQuota\u003e was missing \u003ctype\u003e\");\n      }\n      HdfsProtos.StorageTypeProto storageType \u003d\n          HdfsProtos.StorageTypeProto.valueOf(type);\n      if (storageType \u003d\u003d null) {\n        throw new IOException(\"\u003ctypeQuota\u003e had unknown \u003ctype\u003e \" + type);\n      }\n      qbld.setStorageType(storageType);\n      Long quota \u003d typeQuota.removeChildLong(INODE_SECTION_QUOTA);\n      if (quota \u003d\u003d null) {\n        throw new IOException(\"\u003ctypeQuota\u003e was missing \u003cquota\u003e\");\n      }\n      qbld.setQuota(quota);\n      qf.addQuotas(qbld);\n    }\n    bld.setTypeQuotas(qf);\n    return bld;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java"
    }
  }
}