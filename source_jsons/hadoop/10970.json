{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockSender.java",
  "functionName": "readChecksum",
  "functionId": "readChecksum___buf-byte[]__checksumOffset-int(modifiers-final)__checksumLen-int(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockSender.java",
  "functionStartLine": 678,
  "functionEndLine": 699,
  "numCommitsSeen": 65,
  "timeTaken": 4054,
  "changeHistory": [
    "6ff509c32a781eede0e246a0593f6e753fb25d05",
    "df983b524ab68ea0c70cee9033bfff2d28052cbf",
    "dcedb72af468128458e597f08d22f5c34b744ae5",
    "aeecfa24f4fb6af289920cbf8830c394e66bd78e",
    "007c6ce1aff2f25a499d2213c240f5a519feb8bd",
    "e90a5b40430cc1fbce075d34b31e3cc05fd9831f"
  ],
  "changeHistoryShort": {
    "6ff509c32a781eede0e246a0593f6e753fb25d05": "Ybodychange",
    "df983b524ab68ea0c70cee9033bfff2d28052cbf": "Ybodychange",
    "dcedb72af468128458e597f08d22f5c34b744ae5": "Ybodychange",
    "aeecfa24f4fb6af289920cbf8830c394e66bd78e": "Ybodychange",
    "007c6ce1aff2f25a499d2213c240f5a519feb8bd": "Ybodychange",
    "e90a5b40430cc1fbce075d34b31e3cc05fd9831f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6ff509c32a781eede0e246a0593f6e753fb25d05": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11719. Arrays.fill() wrong index in BlockSender.readChecksum() exception handling. Contributed by Tao Zhang\n",
      "commitDate": "18/09/18 10:25 AM",
      "commitName": "6ff509c32a781eede0e246a0593f6e753fb25d05",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "02/02/18 5:18 PM",
      "commitNameOld": "2021f4bdce3b27c46edaad198f0007a26a8a1391",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 227.67,
      "commitsBetweenForRepo": 2267,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   private void readChecksum(byte[] buf, final int checksumOffset,\n       final int checksumLen) throws IOException {\n     if (checksumSize \u003c\u003d 0 \u0026\u0026 ris.getChecksumIn() \u003d\u003d null) {\n       return;\n     }\n     try {\n       ris.readChecksumFully(buf, checksumOffset, checksumLen);\n     } catch (IOException e) {\n       LOG.warn(\" Could not read or failed to verify checksum for data\"\n           + \" at offset \" + offset + \" for block \" + block, e);\n       ris.closeChecksumStream();\n       if (corruptChecksumOk) {\n-        if (checksumOffset \u003c checksumLen) {\n+        if (checksumLen \u003e 0) {\n           // Just fill the array with zeros.\n-          Arrays.fill(buf, checksumOffset, checksumLen, (byte) 0);\n+          Arrays.fill(buf, checksumOffset, checksumOffset + checksumLen,\n+              (byte) 0);\n         }\n       } else {\n         throw e;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void readChecksum(byte[] buf, final int checksumOffset,\n      final int checksumLen) throws IOException {\n    if (checksumSize \u003c\u003d 0 \u0026\u0026 ris.getChecksumIn() \u003d\u003d null) {\n      return;\n    }\n    try {\n      ris.readChecksumFully(buf, checksumOffset, checksumLen);\n    } catch (IOException e) {\n      LOG.warn(\" Could not read or failed to verify checksum for data\"\n          + \" at offset \" + offset + \" for block \" + block, e);\n      ris.closeChecksumStream();\n      if (corruptChecksumOk) {\n        if (checksumLen \u003e 0) {\n          // Just fill the array with zeros.\n          Arrays.fill(buf, checksumOffset, checksumOffset + checksumLen,\n              (byte) 0);\n        }\n      } else {\n        throw e;\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockSender.java",
      "extendedDetails": {}
    },
    "df983b524ab68ea0c70cee9033bfff2d28052cbf": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10930. Refactor: Wrap Datanode IO related operations. Contributed by Xiaoyu Yao.\n",
      "commitDate": "06/12/16 11:05 AM",
      "commitName": "df983b524ab68ea0c70cee9033bfff2d28052cbf",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "05/12/16 12:44 PM",
      "commitNameOld": "dcedb72af468128458e597f08d22f5c34b744ae5",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 0.93,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n   private void readChecksum(byte[] buf, final int checksumOffset,\n       final int checksumLen) throws IOException {\n-    if (checksumSize \u003c\u003d 0 \u0026\u0026 checksumIn \u003d\u003d null) {\n+    if (checksumSize \u003c\u003d 0 \u0026\u0026 ris.getChecksumIn() \u003d\u003d null) {\n       return;\n     }\n     try {\n-      checksumIn.readFully(buf, checksumOffset, checksumLen);\n+      ris.readChecksumFully(buf, checksumOffset, checksumLen);\n     } catch (IOException e) {\n       LOG.warn(\" Could not read or failed to verify checksum for data\"\n           + \" at offset \" + offset + \" for block \" + block, e);\n-      IOUtils.closeStream(checksumIn);\n-      checksumIn \u003d null;\n+      ris.closeChecksumStream();\n       if (corruptChecksumOk) {\n         if (checksumOffset \u003c checksumLen) {\n           // Just fill the array with zeros.\n           Arrays.fill(buf, checksumOffset, checksumLen, (byte) 0);\n         }\n       } else {\n         throw e;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void readChecksum(byte[] buf, final int checksumOffset,\n      final int checksumLen) throws IOException {\n    if (checksumSize \u003c\u003d 0 \u0026\u0026 ris.getChecksumIn() \u003d\u003d null) {\n      return;\n    }\n    try {\n      ris.readChecksumFully(buf, checksumOffset, checksumLen);\n    } catch (IOException e) {\n      LOG.warn(\" Could not read or failed to verify checksum for data\"\n          + \" at offset \" + offset + \" for block \" + block, e);\n      ris.closeChecksumStream();\n      if (corruptChecksumOk) {\n        if (checksumOffset \u003c checksumLen) {\n          // Just fill the array with zeros.\n          Arrays.fill(buf, checksumOffset, checksumLen, (byte) 0);\n        }\n      } else {\n        throw e;\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockSender.java",
      "extendedDetails": {}
    },
    "dcedb72af468128458e597f08d22f5c34b744ae5": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-10930. Refactor: Wrap Datanode IO related operations. Contributed by Xiaoyu Yao.\"\n\nThis reverts commit aeecfa24f4fb6af289920cbf8830c394e66bd78e.\n",
      "commitDate": "05/12/16 12:44 PM",
      "commitName": "dcedb72af468128458e597f08d22f5c34b744ae5",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "29/11/16 8:52 PM",
      "commitNameOld": "aeecfa24f4fb6af289920cbf8830c394e66bd78e",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 5.66,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   private void readChecksum(byte[] buf, final int checksumOffset,\n       final int checksumLen) throws IOException {\n-    if (checksumSize \u003c\u003d 0 \u0026\u0026 ris.getChecksumIn() \u003d\u003d null) {\n+    if (checksumSize \u003c\u003d 0 \u0026\u0026 checksumIn \u003d\u003d null) {\n       return;\n     }\n     try {\n-      ris.readChecksumFully(buf, checksumOffset, checksumLen);\n+      checksumIn.readFully(buf, checksumOffset, checksumLen);\n     } catch (IOException e) {\n       LOG.warn(\" Could not read or failed to verify checksum for data\"\n           + \" at offset \" + offset + \" for block \" + block, e);\n-      ris.closeChecksumStream();\n+      IOUtils.closeStream(checksumIn);\n+      checksumIn \u003d null;\n       if (corruptChecksumOk) {\n         if (checksumOffset \u003c checksumLen) {\n           // Just fill the array with zeros.\n           Arrays.fill(buf, checksumOffset, checksumLen, (byte) 0);\n         }\n       } else {\n         throw e;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void readChecksum(byte[] buf, final int checksumOffset,\n      final int checksumLen) throws IOException {\n    if (checksumSize \u003c\u003d 0 \u0026\u0026 checksumIn \u003d\u003d null) {\n      return;\n    }\n    try {\n      checksumIn.readFully(buf, checksumOffset, checksumLen);\n    } catch (IOException e) {\n      LOG.warn(\" Could not read or failed to verify checksum for data\"\n          + \" at offset \" + offset + \" for block \" + block, e);\n      IOUtils.closeStream(checksumIn);\n      checksumIn \u003d null;\n      if (corruptChecksumOk) {\n        if (checksumOffset \u003c checksumLen) {\n          // Just fill the array with zeros.\n          Arrays.fill(buf, checksumOffset, checksumLen, (byte) 0);\n        }\n      } else {\n        throw e;\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockSender.java",
      "extendedDetails": {}
    },
    "aeecfa24f4fb6af289920cbf8830c394e66bd78e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10930. Refactor: Wrap Datanode IO related operations. Contributed by Xiaoyu Yao.\n",
      "commitDate": "29/11/16 8:52 PM",
      "commitName": "aeecfa24f4fb6af289920cbf8830c394e66bd78e",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "27/10/16 4:14 AM",
      "commitNameOld": "1cf6ec4ad4e1f4ea71f912923b5e8627b61ef482",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 33.74,
      "commitsBetweenForRepo": 277,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n   private void readChecksum(byte[] buf, final int checksumOffset,\n       final int checksumLen) throws IOException {\n-    if (checksumSize \u003c\u003d 0 \u0026\u0026 checksumIn \u003d\u003d null) {\n+    if (checksumSize \u003c\u003d 0 \u0026\u0026 ris.getChecksumIn() \u003d\u003d null) {\n       return;\n     }\n     try {\n-      checksumIn.readFully(buf, checksumOffset, checksumLen);\n+      ris.readChecksumFully(buf, checksumOffset, checksumLen);\n     } catch (IOException e) {\n       LOG.warn(\" Could not read or failed to verify checksum for data\"\n           + \" at offset \" + offset + \" for block \" + block, e);\n-      IOUtils.closeStream(checksumIn);\n-      checksumIn \u003d null;\n+      ris.closeChecksumStream();\n       if (corruptChecksumOk) {\n         if (checksumOffset \u003c checksumLen) {\n           // Just fill the array with zeros.\n           Arrays.fill(buf, checksumOffset, checksumLen, (byte) 0);\n         }\n       } else {\n         throw e;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void readChecksum(byte[] buf, final int checksumOffset,\n      final int checksumLen) throws IOException {\n    if (checksumSize \u003c\u003d 0 \u0026\u0026 ris.getChecksumIn() \u003d\u003d null) {\n      return;\n    }\n    try {\n      ris.readChecksumFully(buf, checksumOffset, checksumLen);\n    } catch (IOException e) {\n      LOG.warn(\" Could not read or failed to verify checksum for data\"\n          + \" at offset \" + offset + \" for block \" + block, e);\n      ris.closeChecksumStream();\n      if (corruptChecksumOk) {\n        if (checksumOffset \u003c checksumLen) {\n          // Just fill the array with zeros.\n          Arrays.fill(buf, checksumOffset, checksumLen, (byte) 0);\n        }\n      } else {\n        throw e;\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockSender.java",
      "extendedDetails": {}
    },
    "007c6ce1aff2f25a499d2213c240f5a519feb8bd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9397. Fix typo for readChecksum() LOG.warn in BlockSender.java. (Contributed by Enrique Flores)\n",
      "commitDate": "16/11/15 9:02 PM",
      "commitName": "007c6ce1aff2f25a499d2213c240f5a519feb8bd",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "02/10/15 11:08 AM",
      "commitNameOld": "c6cafc77e697317dad0708309b67b900a2e3a413",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 45.45,
      "commitsBetweenForRepo": 352,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private void readChecksum(byte[] buf, final int checksumOffset,\n       final int checksumLen) throws IOException {\n     if (checksumSize \u003c\u003d 0 \u0026\u0026 checksumIn \u003d\u003d null) {\n       return;\n     }\n     try {\n       checksumIn.readFully(buf, checksumOffset, checksumLen);\n     } catch (IOException e) {\n-      LOG.warn(\" Could not read or failed to veirfy checksum for data\"\n+      LOG.warn(\" Could not read or failed to verify checksum for data\"\n           + \" at offset \" + offset + \" for block \" + block, e);\n       IOUtils.closeStream(checksumIn);\n       checksumIn \u003d null;\n       if (corruptChecksumOk) {\n         if (checksumOffset \u003c checksumLen) {\n           // Just fill the array with zeros.\n           Arrays.fill(buf, checksumOffset, checksumLen, (byte) 0);\n         }\n       } else {\n         throw e;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void readChecksum(byte[] buf, final int checksumOffset,\n      final int checksumLen) throws IOException {\n    if (checksumSize \u003c\u003d 0 \u0026\u0026 checksumIn \u003d\u003d null) {\n      return;\n    }\n    try {\n      checksumIn.readFully(buf, checksumOffset, checksumLen);\n    } catch (IOException e) {\n      LOG.warn(\" Could not read or failed to verify checksum for data\"\n          + \" at offset \" + offset + \" for block \" + block, e);\n      IOUtils.closeStream(checksumIn);\n      checksumIn \u003d null;\n      if (corruptChecksumOk) {\n        if (checksumOffset \u003c checksumLen) {\n          // Just fill the array with zeros.\n          Arrays.fill(buf, checksumOffset, checksumLen, (byte) 0);\n        }\n      } else {\n        throw e;\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockSender.java",
      "extendedDetails": {}
    },
    "e90a5b40430cc1fbce075d34b31e3cc05fd9831f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2371. Refactor BlockSender.java for better readability. Contributed by Suresh Srinivas.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177161 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/09/11 9:40 PM",
      "commitName": "e90a5b40430cc1fbce075d34b31e3cc05fd9831f",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,22 @@\n+  private void readChecksum(byte[] buf, final int checksumOffset,\n+      final int checksumLen) throws IOException {\n+    if (checksumSize \u003c\u003d 0 \u0026\u0026 checksumIn \u003d\u003d null) {\n+      return;\n+    }\n+    try {\n+      checksumIn.readFully(buf, checksumOffset, checksumLen);\n+    } catch (IOException e) {\n+      LOG.warn(\" Could not read or failed to veirfy checksum for data\"\n+          + \" at offset \" + offset + \" for block \" + block, e);\n+      IOUtils.closeStream(checksumIn);\n+      checksumIn \u003d null;\n+      if (corruptChecksumOk) {\n+        if (checksumOffset \u003c checksumLen) {\n+          // Just fill the array with zeros.\n+          Arrays.fill(buf, checksumOffset, checksumLen, (byte) 0);\n+        }\n+      } else {\n+        throw e;\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void readChecksum(byte[] buf, final int checksumOffset,\n      final int checksumLen) throws IOException {\n    if (checksumSize \u003c\u003d 0 \u0026\u0026 checksumIn \u003d\u003d null) {\n      return;\n    }\n    try {\n      checksumIn.readFully(buf, checksumOffset, checksumLen);\n    } catch (IOException e) {\n      LOG.warn(\" Could not read or failed to veirfy checksum for data\"\n          + \" at offset \" + offset + \" for block \" + block, e);\n      IOUtils.closeStream(checksumIn);\n      checksumIn \u003d null;\n      if (corruptChecksumOk) {\n        if (checksumOffset \u003c checksumLen) {\n          // Just fill the array with zeros.\n          Arrays.fill(buf, checksumOffset, checksumLen, (byte) 0);\n        }\n      } else {\n        throw e;\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockSender.java"
    }
  }
}