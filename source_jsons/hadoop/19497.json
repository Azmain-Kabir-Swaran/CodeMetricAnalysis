{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BackupStore.java",
  "functionName": "reset",
  "functionId": "reset",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/BackupStore.java",
  "functionStartLine": 182,
  "functionEndLine": 221,
  "numCommitsSeen": 8,
  "timeTaken": 9174,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymovefromfile",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void reset() throws IOException {\n\n    // Create a new segment for the previously written records only if we\n    // are not already in the reset mode\n    \n    if (!inReset) {\n      if (fileCache.isActive) {\n        fileCache.createInDiskSegment();\n      } else {\n        memCache.createInMemorySegment();\n      }\n    } \n\n    inReset \u003d true;\n    \n    // Reset the segments to the correct position from where the next read\n    // should begin. \n    for (int i \u003d 0; i \u003c segmentList.size(); i++) {\n      Segment\u003cK,V\u003e s \u003d segmentList.get(i);\n      if (s.inMemory()) {\n        int offset \u003d (i \u003d\u003d 0) ? firstSegmentOffset : 0;\n        s.getReader().reset(offset);\n      } else {\n        s.closeReader();\n        if (i \u003d\u003d 0) {\n          s.reinitReader(firstSegmentOffset);\n          s.getReader().disableChecksumValidation();\n        }\n      }\n    }\n    \n    currentKVOffset \u003d firstSegmentOffset;\n    nextKVOffset \u003d -1;\n    readSegmentIndex \u003d 0;\n    hasMore \u003d false;\n    lastSegmentEOF \u003d false;\n\n    LOG.debug(\"Reset - First segment offset is \" + firstSegmentOffset +\n        \" Segment List Size is \" + segmentList.size());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/BackupStore.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/BackupStore.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/BackupStore.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymovefromfile",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void reset() throws IOException {\n\n    // Create a new segment for the previously written records only if we\n    // are not already in the reset mode\n    \n    if (!inReset) {\n      if (fileCache.isActive) {\n        fileCache.createInDiskSegment();\n      } else {\n        memCache.createInMemorySegment();\n      }\n    } \n\n    inReset \u003d true;\n    \n    // Reset the segments to the correct position from where the next read\n    // should begin. \n    for (int i \u003d 0; i \u003c segmentList.size(); i++) {\n      Segment\u003cK,V\u003e s \u003d segmentList.get(i);\n      if (s.inMemory()) {\n        int offset \u003d (i \u003d\u003d 0) ? firstSegmentOffset : 0;\n        s.getReader().reset(offset);\n      } else {\n        s.closeReader();\n        if (i \u003d\u003d 0) {\n          s.reinitReader(firstSegmentOffset);\n          s.getReader().disableChecksumValidation();\n        }\n      }\n    }\n    \n    currentKVOffset \u003d firstSegmentOffset;\n    nextKVOffset \u003d -1;\n    readSegmentIndex \u003d 0;\n    hasMore \u003d false;\n    lastSegmentEOF \u003d false;\n\n    LOG.debug(\"Reset - First segment offset is \" + firstSegmentOffset +\n        \" Segment List Size is \" + segmentList.size());\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/BackupStore.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/BackupStore.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/BackupStore.java",
        "oldMethodName": "reset",
        "newMethodName": "reset"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,40 @@\n+  public void reset() throws IOException {\n+\n+    // Create a new segment for the previously written records only if we\n+    // are not already in the reset mode\n+    \n+    if (!inReset) {\n+      if (fileCache.isActive) {\n+        fileCache.createInDiskSegment();\n+      } else {\n+        memCache.createInMemorySegment();\n+      }\n+    } \n+\n+    inReset \u003d true;\n+    \n+    // Reset the segments to the correct position from where the next read\n+    // should begin. \n+    for (int i \u003d 0; i \u003c segmentList.size(); i++) {\n+      Segment\u003cK,V\u003e s \u003d segmentList.get(i);\n+      if (s.inMemory()) {\n+        int offset \u003d (i \u003d\u003d 0) ? firstSegmentOffset : 0;\n+        s.getReader().reset(offset);\n+      } else {\n+        s.closeReader();\n+        if (i \u003d\u003d 0) {\n+          s.reinitReader(firstSegmentOffset);\n+          s.getReader().disableChecksumValidation();\n+        }\n+      }\n+    }\n+    \n+    currentKVOffset \u003d firstSegmentOffset;\n+    nextKVOffset \u003d -1;\n+    readSegmentIndex \u003d 0;\n+    hasMore \u003d false;\n+    lastSegmentEOF \u003d false;\n+\n+    LOG.debug(\"Reset - First segment offset is \" + firstSegmentOffset +\n+        \" Segment List Size is \" + segmentList.size());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void reset() throws IOException {\n\n    // Create a new segment for the previously written records only if we\n    // are not already in the reset mode\n    \n    if (!inReset) {\n      if (fileCache.isActive) {\n        fileCache.createInDiskSegment();\n      } else {\n        memCache.createInMemorySegment();\n      }\n    } \n\n    inReset \u003d true;\n    \n    // Reset the segments to the correct position from where the next read\n    // should begin. \n    for (int i \u003d 0; i \u003c segmentList.size(); i++) {\n      Segment\u003cK,V\u003e s \u003d segmentList.get(i);\n      if (s.inMemory()) {\n        int offset \u003d (i \u003d\u003d 0) ? firstSegmentOffset : 0;\n        s.getReader().reset(offset);\n      } else {\n        s.closeReader();\n        if (i \u003d\u003d 0) {\n          s.reinitReader(firstSegmentOffset);\n          s.getReader().disableChecksumValidation();\n        }\n      }\n    }\n    \n    currentKVOffset \u003d firstSegmentOffset;\n    nextKVOffset \u003d -1;\n    readSegmentIndex \u003d 0;\n    hasMore \u003d false;\n    lastSegmentEOF \u003d false;\n\n    LOG.debug(\"Reset - First segment offset is \" + firstSegmentOffset +\n        \" Segment List Size is \" + segmentList.size());\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/BackupStore.java"
    }
  }
}