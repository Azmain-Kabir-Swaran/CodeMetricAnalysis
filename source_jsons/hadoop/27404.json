{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineParserForEqualityExpr.java",
  "functionName": "handleOpeningBracketChar",
  "functionId": "handleOpeningBracketChar___encounteredNot-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineParserForEqualityExpr.java",
  "functionStartLine": 167,
  "functionEndLine": 186,
  "numCommitsSeen": 2,
  "timeTaken": 632,
  "changeHistory": [
    "089caf49fe968cf4cd3fd4f9637da89ee143991a"
  ],
  "changeHistoryShort": {
    "089caf49fe968cf4cd3fd4f9637da89ee143991a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "089caf49fe968cf4cd3fd4f9637da89ee143991a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4447. Provide a mechanism to represent complex filters and parse them at the REST layer (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "089caf49fe968cf4cd3fd4f9637da89ee143991a",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,20 @@\n+  private void handleOpeningBracketChar(boolean encounteredNot)\n+      throws TimelineParseException {\n+    if (currentParseState \u003d\u003d ParseState.PARSING_COMPAREOP ||\n+        currentParseState \u003d\u003d ParseState.PARSING_VALUE) {\n+      offset++;\n+      startOffset \u003d offset;\n+      filterListStack.push(filterList);\n+      filterList \u003d null;\n+      if (currentFilter \u003d\u003d null) {\n+        currentFilter \u003d createFilter();\n+      }\n+      currentCompareOp \u003d encounteredNot ?\n+          TimelineCompareOp.NOT_EQUAL : TimelineCompareOp.EQUAL;\n+      setCompareOpToCurrentFilter(currentCompareOp);\n+      currentParseState \u003d ParseState.PARSING_VALUE;\n+    } else {\n+      throw new TimelineParseException(\"Encountered unexpected opening \" +\n+          \"bracket while parsing \" + exprName + \".\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleOpeningBracketChar(boolean encounteredNot)\n      throws TimelineParseException {\n    if (currentParseState \u003d\u003d ParseState.PARSING_COMPAREOP ||\n        currentParseState \u003d\u003d ParseState.PARSING_VALUE) {\n      offset++;\n      startOffset \u003d offset;\n      filterListStack.push(filterList);\n      filterList \u003d null;\n      if (currentFilter \u003d\u003d null) {\n        currentFilter \u003d createFilter();\n      }\n      currentCompareOp \u003d encounteredNot ?\n          TimelineCompareOp.NOT_EQUAL : TimelineCompareOp.EQUAL;\n      setCompareOpToCurrentFilter(currentCompareOp);\n      currentParseState \u003d ParseState.PARSING_VALUE;\n    } else {\n      throw new TimelineParseException(\"Encountered unexpected opening \" +\n          \"bracket while parsing \" + exprName + \".\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineParserForEqualityExpr.java"
    }
  }
}