{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationInterceptor.java",
  "functionName": "call",
  "functionId": "call",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
  "functionStartLine": 995,
  "functionEndLine": 1032,
  "numCommitsSeen": 21,
  "timeTaken": 4057,
  "changeHistory": [
    "b5ec85d96615e8214c14b57f8980a1dee6197ffa",
    "c3d22d3b4569b7f87af4ee4abfcc284deebe90de",
    "02b9bfdf9e4bd0b3c05ca5fd75399dedcb656e09",
    "f1525825623a1307b5aa55c456b6afa3e0c61135",
    "ea9b608237e7f2cf9b1e36b0f78c9674ec84096f",
    "d5f66888b8d767ee6706fab9950c194a1bf26d32",
    "70b1a757f13b01a9192ea5fb0820ba7babfd974e"
  ],
  "changeHistoryShort": {
    "b5ec85d96615e8214c14b57f8980a1dee6197ffa": "Ybodychange",
    "c3d22d3b4569b7f87af4ee4abfcc284deebe90de": "Ymultichange(Yreturntypechange,Ybodychange)",
    "02b9bfdf9e4bd0b3c05ca5fd75399dedcb656e09": "Ybodychange",
    "f1525825623a1307b5aa55c456b6afa3e0c61135": "Ybodychange",
    "ea9b608237e7f2cf9b1e36b0f78c9674ec84096f": "Ybodychange",
    "d5f66888b8d767ee6706fab9950c194a1bf26d32": "Ybodychange",
    "70b1a757f13b01a9192ea5fb0820ba7babfd974e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b5ec85d96615e8214c14b57f8980a1dee6197ffa": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8933. [AMRMProxy] Fix potential empty fields in allocation response, move SubClusterTimeout to FederationInterceptor. Contributed by Botong Huang.\n",
      "commitDate": "11/11/18 11:12 AM",
      "commitName": "b5ec85d96615e8214c14b57f8980a1dee6197ffa",
      "commitAuthor": "Botong Huang",
      "commitDateOld": "02/11/18 3:30 PM",
      "commitNameOld": "989715ec5066c6ac7868e25ad9234dc64723e61e",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 8.86,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,38 @@\n             public RegisterApplicationMasterResponse call() throws Exception {\n               RegisterApplicationMasterResponse response \u003d null;\n               try {\n                 // Create a config loaded with federation on and subclusterId\n                 // for each UAM\n                 YarnConfiguration config \u003d new YarnConfiguration(getConf());\n                 FederationProxyProviderUtil.updateConfForFederation(config,\n                     subClusterId.getId());\n \n                 uamPool.reAttachUAM(subClusterId.getId(), config, appId,\n                     amRegistrationResponse.getQueue(),\n                     getApplicationContext().getUser(), homeSubClusterId.getId(),\n                     amrmToken, subClusterId.toString());\n \n                 secondaryRelayers.put(subClusterId.getId(),\n                     uamPool.getAMRMClientRelayer(subClusterId.getId()));\n \n                 response \u003d uamPool.registerApplicationMaster(\n                     subClusterId.getId(), amRegistrationRequest);\n \n+                // Set sub-cluster to be timed out initially\n+                lastSCResponseTime.put(subClusterId,\n+                    clock.getTime() - subClusterTimeOut);\n+\n                 if (response !\u003d null\n                     \u0026\u0026 response.getContainersFromPreviousAttempts() !\u003d null) {\n                   cacheAllocatedContainers(\n                       response.getContainersFromPreviousAttempts(),\n                       subClusterId);\n                 }\n                 LOG.info(\"UAM {} reattached for {}\", subClusterId, appId);\n               } catch (Throwable e) {\n                 LOG.error(\n                     \"Reattaching UAM \" + subClusterId + \" failed for \" + appId,\n                     e);\n               }\n               return response;\n             }\n\\ No newline at end of file\n",
      "actualSource": "            public RegisterApplicationMasterResponse call() throws Exception {\n              RegisterApplicationMasterResponse response \u003d null;\n              try {\n                // Create a config loaded with federation on and subclusterId\n                // for each UAM\n                YarnConfiguration config \u003d new YarnConfiguration(getConf());\n                FederationProxyProviderUtil.updateConfForFederation(config,\n                    subClusterId.getId());\n\n                uamPool.reAttachUAM(subClusterId.getId(), config, appId,\n                    amRegistrationResponse.getQueue(),\n                    getApplicationContext().getUser(), homeSubClusterId.getId(),\n                    amrmToken, subClusterId.toString());\n\n                secondaryRelayers.put(subClusterId.getId(),\n                    uamPool.getAMRMClientRelayer(subClusterId.getId()));\n\n                response \u003d uamPool.registerApplicationMaster(\n                    subClusterId.getId(), amRegistrationRequest);\n\n                // Set sub-cluster to be timed out initially\n                lastSCResponseTime.put(subClusterId,\n                    clock.getTime() - subClusterTimeOut);\n\n                if (response !\u003d null\n                    \u0026\u0026 response.getContainersFromPreviousAttempts() !\u003d null) {\n                  cacheAllocatedContainers(\n                      response.getContainersFromPreviousAttempts(),\n                      subClusterId);\n                }\n                LOG.info(\"UAM {} reattached for {}\", subClusterId, appId);\n              } catch (Throwable e) {\n                LOG.error(\n                    \"Reattaching UAM \" + subClusterId + \" failed for \" + appId,\n                    e);\n              }\n              return response;\n            }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
      "extendedDetails": {}
    },
    "c3d22d3b4569b7f87af4ee4abfcc284deebe90de": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-7652. Handle AM register requests asynchronously in FederationInterceptor. Contributed by Botong Huang.\n",
      "commitDate": "09/10/18 10:29 AM",
      "commitName": "c3d22d3b4569b7f87af4ee4abfcc284deebe90de",
      "commitAuthor": "Inigo Goiri",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-7652. Handle AM register requests asynchronously in FederationInterceptor. Contributed by Botong Huang.\n",
          "commitDate": "09/10/18 10:29 AM",
          "commitName": "c3d22d3b4569b7f87af4ee4abfcc284deebe90de",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "01/10/18 1:12 PM",
          "commitNameOld": "59d5af21b7a8f52e8c89cbc2d25fe3d449b2657a",
          "commitAuthorOld": "Giovanni Matteo Fumarola",
          "daysBetweenCommits": 7.89,
          "commitsBetweenForRepo": 71,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,34 @@\n-              public RegisterApplicationMasterResponseInfo call()\n-                  throws Exception {\n-\n+            public RegisterApplicationMasterResponse call() throws Exception {\n+              RegisterApplicationMasterResponse response \u003d null;\n+              try {\n                 // Create a config loaded with federation on and subclusterId\n                 // for each UAM\n                 YarnConfiguration config \u003d new YarnConfiguration(getConf());\n                 FederationProxyProviderUtil.updateConfForFederation(config,\n-                    subClusterId);\n+                    subClusterId.getId());\n \n-                RegisterApplicationMasterResponse uamResponse \u003d null;\n-                Token\u003cAMRMTokenIdentifier\u003e token \u003d null;\n-                try {\n-                  // For appNameSuffix, use subClusterId of the home sub-cluster\n-                  token \u003d uamPool.launchUAM(subClusterId, config,\n-                      attemptId.getApplicationId(),\n-                      amRegistrationResponse.getQueue(), appContext.getUser(),\n-                      homeSubClusterId.toString(), true, subClusterId);\n+                uamPool.reAttachUAM(subClusterId.getId(), config, appId,\n+                    amRegistrationResponse.getQueue(),\n+                    getApplicationContext().getUser(), homeSubClusterId.getId(),\n+                    amrmToken, subClusterId.toString());\n \n-                  secondaryRelayers.put(subClusterId,\n-                      uamPool.getAMRMClientRelayer(subClusterId));\n+                secondaryRelayers.put(subClusterId.getId(),\n+                    uamPool.getAMRMClientRelayer(subClusterId.getId()));\n \n-                  uamResponse \u003d uamPool.registerApplicationMaster(subClusterId,\n-                      registerRequest);\n-                } catch (Throwable e) {\n-                  LOG.error(\"Failed to register application master: \"\n-                      + subClusterId + \" Application: \" + attemptId, e);\n+                response \u003d uamPool.registerApplicationMaster(\n+                    subClusterId.getId(), amRegistrationRequest);\n+\n+                if (response !\u003d null\n+                    \u0026\u0026 response.getContainersFromPreviousAttempts() !\u003d null) {\n+                  cacheAllocatedContainers(\n+                      response.getContainersFromPreviousAttempts(),\n+                      subClusterId);\n                 }\n-                return new RegisterApplicationMasterResponseInfo(uamResponse,\n-                    SubClusterId.newInstance(subClusterId), token);\n-              }\n\\ No newline at end of file\n+                LOG.info(\"UAM {} reattached for {}\", subClusterId, appId);\n+              } catch (Throwable e) {\n+                LOG.error(\n+                    \"Reattaching UAM \" + subClusterId + \" failed for \" + appId,\n+                    e);\n+              }\n+              return response;\n+            }\n\\ No newline at end of file\n",
          "actualSource": "            public RegisterApplicationMasterResponse call() throws Exception {\n              RegisterApplicationMasterResponse response \u003d null;\n              try {\n                // Create a config loaded with federation on and subclusterId\n                // for each UAM\n                YarnConfiguration config \u003d new YarnConfiguration(getConf());\n                FederationProxyProviderUtil.updateConfForFederation(config,\n                    subClusterId.getId());\n\n                uamPool.reAttachUAM(subClusterId.getId(), config, appId,\n                    amRegistrationResponse.getQueue(),\n                    getApplicationContext().getUser(), homeSubClusterId.getId(),\n                    amrmToken, subClusterId.toString());\n\n                secondaryRelayers.put(subClusterId.getId(),\n                    uamPool.getAMRMClientRelayer(subClusterId.getId()));\n\n                response \u003d uamPool.registerApplicationMaster(\n                    subClusterId.getId(), amRegistrationRequest);\n\n                if (response !\u003d null\n                    \u0026\u0026 response.getContainersFromPreviousAttempts() !\u003d null) {\n                  cacheAllocatedContainers(\n                      response.getContainersFromPreviousAttempts(),\n                      subClusterId);\n                }\n                LOG.info(\"UAM {} reattached for {}\", subClusterId, appId);\n              } catch (Throwable e) {\n                LOG.error(\n                    \"Reattaching UAM \" + subClusterId + \" failed for \" + appId,\n                    e);\n              }\n              return response;\n            }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
          "extendedDetails": {
            "oldValue": "RegisterApplicationMasterResponseInfo",
            "newValue": "RegisterApplicationMasterResponse"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7652. Handle AM register requests asynchronously in FederationInterceptor. Contributed by Botong Huang.\n",
          "commitDate": "09/10/18 10:29 AM",
          "commitName": "c3d22d3b4569b7f87af4ee4abfcc284deebe90de",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "01/10/18 1:12 PM",
          "commitNameOld": "59d5af21b7a8f52e8c89cbc2d25fe3d449b2657a",
          "commitAuthorOld": "Giovanni Matteo Fumarola",
          "daysBetweenCommits": 7.89,
          "commitsBetweenForRepo": 71,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,34 @@\n-              public RegisterApplicationMasterResponseInfo call()\n-                  throws Exception {\n-\n+            public RegisterApplicationMasterResponse call() throws Exception {\n+              RegisterApplicationMasterResponse response \u003d null;\n+              try {\n                 // Create a config loaded with federation on and subclusterId\n                 // for each UAM\n                 YarnConfiguration config \u003d new YarnConfiguration(getConf());\n                 FederationProxyProviderUtil.updateConfForFederation(config,\n-                    subClusterId);\n+                    subClusterId.getId());\n \n-                RegisterApplicationMasterResponse uamResponse \u003d null;\n-                Token\u003cAMRMTokenIdentifier\u003e token \u003d null;\n-                try {\n-                  // For appNameSuffix, use subClusterId of the home sub-cluster\n-                  token \u003d uamPool.launchUAM(subClusterId, config,\n-                      attemptId.getApplicationId(),\n-                      amRegistrationResponse.getQueue(), appContext.getUser(),\n-                      homeSubClusterId.toString(), true, subClusterId);\n+                uamPool.reAttachUAM(subClusterId.getId(), config, appId,\n+                    amRegistrationResponse.getQueue(),\n+                    getApplicationContext().getUser(), homeSubClusterId.getId(),\n+                    amrmToken, subClusterId.toString());\n \n-                  secondaryRelayers.put(subClusterId,\n-                      uamPool.getAMRMClientRelayer(subClusterId));\n+                secondaryRelayers.put(subClusterId.getId(),\n+                    uamPool.getAMRMClientRelayer(subClusterId.getId()));\n \n-                  uamResponse \u003d uamPool.registerApplicationMaster(subClusterId,\n-                      registerRequest);\n-                } catch (Throwable e) {\n-                  LOG.error(\"Failed to register application master: \"\n-                      + subClusterId + \" Application: \" + attemptId, e);\n+                response \u003d uamPool.registerApplicationMaster(\n+                    subClusterId.getId(), amRegistrationRequest);\n+\n+                if (response !\u003d null\n+                    \u0026\u0026 response.getContainersFromPreviousAttempts() !\u003d null) {\n+                  cacheAllocatedContainers(\n+                      response.getContainersFromPreviousAttempts(),\n+                      subClusterId);\n                 }\n-                return new RegisterApplicationMasterResponseInfo(uamResponse,\n-                    SubClusterId.newInstance(subClusterId), token);\n-              }\n\\ No newline at end of file\n+                LOG.info(\"UAM {} reattached for {}\", subClusterId, appId);\n+              } catch (Throwable e) {\n+                LOG.error(\n+                    \"Reattaching UAM \" + subClusterId + \" failed for \" + appId,\n+                    e);\n+              }\n+              return response;\n+            }\n\\ No newline at end of file\n",
          "actualSource": "            public RegisterApplicationMasterResponse call() throws Exception {\n              RegisterApplicationMasterResponse response \u003d null;\n              try {\n                // Create a config loaded with federation on and subclusterId\n                // for each UAM\n                YarnConfiguration config \u003d new YarnConfiguration(getConf());\n                FederationProxyProviderUtil.updateConfForFederation(config,\n                    subClusterId.getId());\n\n                uamPool.reAttachUAM(subClusterId.getId(), config, appId,\n                    amRegistrationResponse.getQueue(),\n                    getApplicationContext().getUser(), homeSubClusterId.getId(),\n                    amrmToken, subClusterId.toString());\n\n                secondaryRelayers.put(subClusterId.getId(),\n                    uamPool.getAMRMClientRelayer(subClusterId.getId()));\n\n                response \u003d uamPool.registerApplicationMaster(\n                    subClusterId.getId(), amRegistrationRequest);\n\n                if (response !\u003d null\n                    \u0026\u0026 response.getContainersFromPreviousAttempts() !\u003d null) {\n                  cacheAllocatedContainers(\n                      response.getContainersFromPreviousAttempts(),\n                      subClusterId);\n                }\n                LOG.info(\"UAM {} reattached for {}\", subClusterId, appId);\n              } catch (Throwable e) {\n                LOG.error(\n                    \"Reattaching UAM \" + subClusterId + \" failed for \" + appId,\n                    e);\n              }\n              return response;\n            }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
          "extendedDetails": {}
        }
      ]
    },
    "02b9bfdf9e4bd0b3c05ca5fd75399dedcb656e09": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8658. [AMRMProxy] Metrics for AMRMClientRelayer inside FederationInterceptor. Contributed by Young Chen.\n",
      "commitDate": "12/09/18 11:46 AM",
      "commitName": "02b9bfdf9e4bd0b3c05ca5fd75399dedcb656e09",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "27/08/18 10:32 AM",
      "commitNameOld": "f1525825623a1307b5aa55c456b6afa3e0c61135",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 16.05,
      "commitsBetweenForRepo": 142,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n               public RegisterApplicationMasterResponseInfo call()\n                   throws Exception {\n \n                 // Create a config loaded with federation on and subclusterId\n                 // for each UAM\n                 YarnConfiguration config \u003d new YarnConfiguration(getConf());\n                 FederationProxyProviderUtil.updateConfForFederation(config,\n                     subClusterId);\n \n                 RegisterApplicationMasterResponse uamResponse \u003d null;\n                 Token\u003cAMRMTokenIdentifier\u003e token \u003d null;\n                 try {\n                   // For appNameSuffix, use subClusterId of the home sub-cluster\n                   token \u003d uamPool.launchUAM(subClusterId, config,\n                       attemptId.getApplicationId(),\n                       amRegistrationResponse.getQueue(), appContext.getUser(),\n-                      homeSubClusterId.toString(), true);\n+                      homeSubClusterId.toString(), true, subClusterId);\n \n                   secondaryRelayers.put(subClusterId,\n                       uamPool.getAMRMClientRelayer(subClusterId));\n \n                   uamResponse \u003d uamPool.registerApplicationMaster(subClusterId,\n                       registerRequest);\n                 } catch (Throwable e) {\n                   LOG.error(\"Failed to register application master: \"\n                       + subClusterId + \" Application: \" + attemptId, e);\n                 }\n                 return new RegisterApplicationMasterResponseInfo(uamResponse,\n                     SubClusterId.newInstance(subClusterId), token);\n               }\n\\ No newline at end of file\n",
      "actualSource": "              public RegisterApplicationMasterResponseInfo call()\n                  throws Exception {\n\n                // Create a config loaded with federation on and subclusterId\n                // for each UAM\n                YarnConfiguration config \u003d new YarnConfiguration(getConf());\n                FederationProxyProviderUtil.updateConfForFederation(config,\n                    subClusterId);\n\n                RegisterApplicationMasterResponse uamResponse \u003d null;\n                Token\u003cAMRMTokenIdentifier\u003e token \u003d null;\n                try {\n                  // For appNameSuffix, use subClusterId of the home sub-cluster\n                  token \u003d uamPool.launchUAM(subClusterId, config,\n                      attemptId.getApplicationId(),\n                      amRegistrationResponse.getQueue(), appContext.getUser(),\n                      homeSubClusterId.toString(), true, subClusterId);\n\n                  secondaryRelayers.put(subClusterId,\n                      uamPool.getAMRMClientRelayer(subClusterId));\n\n                  uamResponse \u003d uamPool.registerApplicationMaster(subClusterId,\n                      registerRequest);\n                } catch (Throwable e) {\n                  LOG.error(\"Failed to register application master: \"\n                      + subClusterId + \" Application: \" + attemptId, e);\n                }\n                return new RegisterApplicationMasterResponseInfo(uamResponse,\n                    SubClusterId.newInstance(subClusterId), token);\n              }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
      "extendedDetails": {}
    },
    "f1525825623a1307b5aa55c456b6afa3e0c61135": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8705. Refactor the UAM heartbeat thread in preparation for YARN-8696. Contributed by Botong Huang.\n",
      "commitDate": "27/08/18 10:32 AM",
      "commitName": "f1525825623a1307b5aa55c456b6afa3e0c61135",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "20/08/18 12:22 PM",
      "commitNameOld": "8736fc39ac3b3de168d2c216f3d1c0edb48fb3f9",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 6.92,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,30 @@\n               public RegisterApplicationMasterResponseInfo call()\n                   throws Exception {\n \n                 // Create a config loaded with federation on and subclusterId\n                 // for each UAM\n                 YarnConfiguration config \u003d new YarnConfiguration(getConf());\n                 FederationProxyProviderUtil.updateConfForFederation(config,\n                     subClusterId);\n \n                 RegisterApplicationMasterResponse uamResponse \u003d null;\n                 Token\u003cAMRMTokenIdentifier\u003e token \u003d null;\n                 try {\n                   // For appNameSuffix, use subClusterId of the home sub-cluster\n                   token \u003d uamPool.launchUAM(subClusterId, config,\n-                      appContext.getApplicationAttemptId().getApplicationId(),\n+                      attemptId.getApplicationId(),\n                       amRegistrationResponse.getQueue(), appContext.getUser(),\n                       homeSubClusterId.toString(), true);\n \n                   secondaryRelayers.put(subClusterId,\n                       uamPool.getAMRMClientRelayer(subClusterId));\n \n                   uamResponse \u003d uamPool.registerApplicationMaster(subClusterId,\n                       registerRequest);\n                 } catch (Throwable e) {\n                   LOG.error(\"Failed to register application master: \"\n-                      + subClusterId + \" Application: \"\n-                      + appContext.getApplicationAttemptId(), e);\n+                      + subClusterId + \" Application: \" + attemptId, e);\n                 }\n                 return new RegisterApplicationMasterResponseInfo(uamResponse,\n                     SubClusterId.newInstance(subClusterId), token);\n               }\n\\ No newline at end of file\n",
      "actualSource": "              public RegisterApplicationMasterResponseInfo call()\n                  throws Exception {\n\n                // Create a config loaded with federation on and subclusterId\n                // for each UAM\n                YarnConfiguration config \u003d new YarnConfiguration(getConf());\n                FederationProxyProviderUtil.updateConfForFederation(config,\n                    subClusterId);\n\n                RegisterApplicationMasterResponse uamResponse \u003d null;\n                Token\u003cAMRMTokenIdentifier\u003e token \u003d null;\n                try {\n                  // For appNameSuffix, use subClusterId of the home sub-cluster\n                  token \u003d uamPool.launchUAM(subClusterId, config,\n                      attemptId.getApplicationId(),\n                      amRegistrationResponse.getQueue(), appContext.getUser(),\n                      homeSubClusterId.toString(), true);\n\n                  secondaryRelayers.put(subClusterId,\n                      uamPool.getAMRMClientRelayer(subClusterId));\n\n                  uamResponse \u003d uamPool.registerApplicationMaster(subClusterId,\n                      registerRequest);\n                } catch (Throwable e) {\n                  LOG.error(\"Failed to register application master: \"\n                      + subClusterId + \" Application: \" + attemptId, e);\n                }\n                return new RegisterApplicationMasterResponseInfo(uamResponse,\n                    SubClusterId.newInstance(subClusterId), token);\n              }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
      "extendedDetails": {}
    },
    "ea9b608237e7f2cf9b1e36b0f78c9674ec84096f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7899. [AMRMProxy] Stateful FederationInterceptor for pending requests. Contributed by Botong Huang.\n",
      "commitDate": "09/07/18 12:27 PM",
      "commitName": "ea9b608237e7f2cf9b1e36b0f78c9674ec84096f",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "17/05/18 8:00 PM",
      "commitNameOld": "3159bffce23abf35754da2d7d51de7d8c2631ae3",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 52.69,
      "commitsBetweenForRepo": 338,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,31 @@\n               public RegisterApplicationMasterResponseInfo call()\n                   throws Exception {\n \n                 // Create a config loaded with federation on and subclusterId\n                 // for each UAM\n                 YarnConfiguration config \u003d new YarnConfiguration(getConf());\n                 FederationProxyProviderUtil.updateConfForFederation(config,\n                     subClusterId);\n \n                 RegisterApplicationMasterResponse uamResponse \u003d null;\n                 Token\u003cAMRMTokenIdentifier\u003e token \u003d null;\n                 try {\n                   // For appNameSuffix, use subClusterId of the home sub-cluster\n                   token \u003d uamPool.launchUAM(subClusterId, config,\n                       appContext.getApplicationAttemptId().getApplicationId(),\n                       amRegistrationResponse.getQueue(), appContext.getUser(),\n-                      homeSubClusterId.toString(), registryClient !\u003d null);\n+                      homeSubClusterId.toString(), true);\n+\n+                  secondaryRelayers.put(subClusterId,\n+                      uamPool.getAMRMClientRelayer(subClusterId));\n \n                   uamResponse \u003d uamPool.registerApplicationMaster(subClusterId,\n                       registerRequest);\n                 } catch (Throwable e) {\n                   LOG.error(\"Failed to register application master: \"\n                       + subClusterId + \" Application: \"\n                       + appContext.getApplicationAttemptId(), e);\n                 }\n                 return new RegisterApplicationMasterResponseInfo(uamResponse,\n                     SubClusterId.newInstance(subClusterId), token);\n               }\n\\ No newline at end of file\n",
      "actualSource": "              public RegisterApplicationMasterResponseInfo call()\n                  throws Exception {\n\n                // Create a config loaded with federation on and subclusterId\n                // for each UAM\n                YarnConfiguration config \u003d new YarnConfiguration(getConf());\n                FederationProxyProviderUtil.updateConfForFederation(config,\n                    subClusterId);\n\n                RegisterApplicationMasterResponse uamResponse \u003d null;\n                Token\u003cAMRMTokenIdentifier\u003e token \u003d null;\n                try {\n                  // For appNameSuffix, use subClusterId of the home sub-cluster\n                  token \u003d uamPool.launchUAM(subClusterId, config,\n                      appContext.getApplicationAttemptId().getApplicationId(),\n                      amRegistrationResponse.getQueue(), appContext.getUser(),\n                      homeSubClusterId.toString(), true);\n\n                  secondaryRelayers.put(subClusterId,\n                      uamPool.getAMRMClientRelayer(subClusterId));\n\n                  uamResponse \u003d uamPool.registerApplicationMaster(subClusterId,\n                      registerRequest);\n                } catch (Throwable e) {\n                  LOG.error(\"Failed to register application master: \"\n                      + subClusterId + \" Application: \"\n                      + appContext.getApplicationAttemptId(), e);\n                }\n                return new RegisterApplicationMasterResponseInfo(uamResponse,\n                    SubClusterId.newInstance(subClusterId), token);\n              }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
      "extendedDetails": {}
    },
    "d5f66888b8d767ee6706fab9950c194a1bf26d32": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6128. Add support for AMRMProxy HA. (Botong Huang via Subru).\n",
      "commitDate": "17/11/17 5:39 PM",
      "commitName": "d5f66888b8d767ee6706fab9950c194a1bf26d32",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "28/09/17 1:04 PM",
      "commitNameOld": "ca669f9f8bc7abe5b7d4648c589aa1756bd336d1",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 50.23,
      "commitsBetweenForRepo": 444,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,28 @@\n               public RegisterApplicationMasterResponseInfo call()\n                   throws Exception {\n \n                 // Create a config loaded with federation on and subclusterId\n                 // for each UAM\n                 YarnConfiguration config \u003d new YarnConfiguration(getConf());\n                 FederationProxyProviderUtil.updateConfForFederation(config,\n                     subClusterId);\n \n                 RegisterApplicationMasterResponse uamResponse \u003d null;\n+                Token\u003cAMRMTokenIdentifier\u003e token \u003d null;\n                 try {\n                   // For appNameSuffix, use subClusterId of the home sub-cluster\n-                  uamResponse \u003d uamPool.createAndRegisterNewUAM(subClusterId,\n-                      registerRequest, config,\n+                  token \u003d uamPool.launchUAM(subClusterId, config,\n                       appContext.getApplicationAttemptId().getApplicationId(),\n                       amRegistrationResponse.getQueue(), appContext.getUser(),\n-                      homeSubClusterId.toString());\n+                      homeSubClusterId.toString(), registryClient !\u003d null);\n+\n+                  uamResponse \u003d uamPool.registerApplicationMaster(subClusterId,\n+                      registerRequest);\n                 } catch (Throwable e) {\n                   LOG.error(\"Failed to register application master: \"\n                       + subClusterId + \" Application: \"\n                       + appContext.getApplicationAttemptId(), e);\n                 }\n                 return new RegisterApplicationMasterResponseInfo(uamResponse,\n-                    SubClusterId.newInstance(subClusterId));\n+                    SubClusterId.newInstance(subClusterId), token);\n               }\n\\ No newline at end of file\n",
      "actualSource": "              public RegisterApplicationMasterResponseInfo call()\n                  throws Exception {\n\n                // Create a config loaded with federation on and subclusterId\n                // for each UAM\n                YarnConfiguration config \u003d new YarnConfiguration(getConf());\n                FederationProxyProviderUtil.updateConfForFederation(config,\n                    subClusterId);\n\n                RegisterApplicationMasterResponse uamResponse \u003d null;\n                Token\u003cAMRMTokenIdentifier\u003e token \u003d null;\n                try {\n                  // For appNameSuffix, use subClusterId of the home sub-cluster\n                  token \u003d uamPool.launchUAM(subClusterId, config,\n                      appContext.getApplicationAttemptId().getApplicationId(),\n                      amRegistrationResponse.getQueue(), appContext.getUser(),\n                      homeSubClusterId.toString(), registryClient !\u003d null);\n\n                  uamResponse \u003d uamPool.registerApplicationMaster(subClusterId,\n                      registerRequest);\n                } catch (Throwable e) {\n                  LOG.error(\"Failed to register application master: \"\n                      + subClusterId + \" Application: \"\n                      + appContext.getApplicationAttemptId(), e);\n                }\n                return new RegisterApplicationMasterResponseInfo(uamResponse,\n                    SubClusterId.newInstance(subClusterId), token);\n              }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
      "extendedDetails": {}
    },
    "70b1a757f13b01a9192ea5fb0820ba7babfd974e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6511. Federation: transparently spanning application across multiple sub-clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 8c988d235eaf0972783985b1ab24680d029aea79)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "70b1a757f13b01a9192ea5fb0820ba7babfd974e",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,25 @@\n+              public RegisterApplicationMasterResponseInfo call()\n+                  throws Exception {\n+\n+                // Create a config loaded with federation on and subclusterId\n+                // for each UAM\n+                YarnConfiguration config \u003d new YarnConfiguration(getConf());\n+                FederationProxyProviderUtil.updateConfForFederation(config,\n+                    subClusterId);\n+\n+                RegisterApplicationMasterResponse uamResponse \u003d null;\n+                try {\n+                  // For appNameSuffix, use subClusterId of the home sub-cluster\n+                  uamResponse \u003d uamPool.createAndRegisterNewUAM(subClusterId,\n+                      registerRequest, config,\n+                      appContext.getApplicationAttemptId().getApplicationId(),\n+                      amRegistrationResponse.getQueue(), appContext.getUser(),\n+                      homeSubClusterId.toString());\n+                } catch (Throwable e) {\n+                  LOG.error(\"Failed to register application master: \"\n+                      + subClusterId + \" Application: \"\n+                      + appContext.getApplicationAttemptId(), e);\n+                }\n+                return new RegisterApplicationMasterResponseInfo(uamResponse,\n+                    SubClusterId.newInstance(subClusterId));\n+              }\n\\ No newline at end of file\n",
      "actualSource": "              public RegisterApplicationMasterResponseInfo call()\n                  throws Exception {\n\n                // Create a config loaded with federation on and subclusterId\n                // for each UAM\n                YarnConfiguration config \u003d new YarnConfiguration(getConf());\n                FederationProxyProviderUtil.updateConfForFederation(config,\n                    subClusterId);\n\n                RegisterApplicationMasterResponse uamResponse \u003d null;\n                try {\n                  // For appNameSuffix, use subClusterId of the home sub-cluster\n                  uamResponse \u003d uamPool.createAndRegisterNewUAM(subClusterId,\n                      registerRequest, config,\n                      appContext.getApplicationAttemptId().getApplicationId(),\n                      amRegistrationResponse.getQueue(), appContext.getUser(),\n                      homeSubClusterId.toString());\n                } catch (Throwable e) {\n                  LOG.error(\"Failed to register application master: \"\n                      + subClusterId + \" Application: \"\n                      + appContext.getApplicationAttemptId(), e);\n                }\n                return new RegisterApplicationMasterResponseInfo(uamResponse,\n                    SubClusterId.newInstance(subClusterId));\n              }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java"
    }
  }
}