{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UnmanagedApplicationManager.java",
  "functionName": "submitUnmanagedApp",
  "functionId": "submitUnmanagedApp___appId-ApplicationId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/uam/UnmanagedApplicationManager.java",
  "functionStartLine": 405,
  "functionEndLine": 435,
  "numCommitsSeen": 13,
  "timeTaken": 1141,
  "changeHistory": [
    "d5f66888b8d767ee6706fab9950c194a1bf26d32",
    "859aa1f9d621d07693825e610bdc0149f7a2770a"
  ],
  "changeHistoryShort": {
    "d5f66888b8d767ee6706fab9950c194a1bf26d32": "Ybodychange",
    "859aa1f9d621d07693825e610bdc0149f7a2770a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d5f66888b8d767ee6706fab9950c194a1bf26d32": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6128. Add support for AMRMProxy HA. (Botong Huang via Subru).\n",
      "commitDate": "17/11/17 5:39 PM",
      "commitName": "d5f66888b8d767ee6706fab9950c194a1bf26d32",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "29/08/17 2:53 PM",
      "commitNameOld": "cc8893edc0b7960e958723c81062986c12f06ade",
      "commitAuthorOld": "Carlo Curino",
      "daysBetweenCommits": 80.16,
      "commitsBetweenForRepo": 783,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,31 @@\n   private void submitUnmanagedApp(ApplicationId appId)\n       throws YarnException, IOException {\n     SubmitApplicationRequest submitRequest \u003d\n         this.recordFactory.newRecordInstance(SubmitApplicationRequest.class);\n \n     ApplicationSubmissionContext context \u003d this.recordFactory\n         .newRecordInstance(ApplicationSubmissionContext.class);\n \n     context.setApplicationId(appId);\n     context.setApplicationName(APP_NAME + \"-\" + appNameSuffix);\n     if (StringUtils.isBlank(this.queueName)) {\n       context.setQueue(this.conf.get(DEFAULT_QUEUE_CONFIG,\n           YarnConfiguration.DEFAULT_QUEUE_NAME));\n     } else {\n       context.setQueue(this.queueName);\n     }\n \n     ContainerLaunchContext amContainer \u003d\n         this.recordFactory.newRecordInstance(ContainerLaunchContext.class);\n     Resource resource \u003d BuilderUtils.newResource(1024, 1);\n     context.setResource(resource);\n     context.setAMContainerSpec(amContainer);\n     submitRequest.setApplicationSubmissionContext(context);\n \n     context.setUnmanagedAM(true);\n+    context.setKeepContainersAcrossApplicationAttempts(\n+        this.keepContainersAcrossApplicationAttempts);\n \n     LOG.info(\"Submitting unmanaged application {}\", appId);\n     this.rmClient.submitApplication(submitRequest);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void submitUnmanagedApp(ApplicationId appId)\n      throws YarnException, IOException {\n    SubmitApplicationRequest submitRequest \u003d\n        this.recordFactory.newRecordInstance(SubmitApplicationRequest.class);\n\n    ApplicationSubmissionContext context \u003d this.recordFactory\n        .newRecordInstance(ApplicationSubmissionContext.class);\n\n    context.setApplicationId(appId);\n    context.setApplicationName(APP_NAME + \"-\" + appNameSuffix);\n    if (StringUtils.isBlank(this.queueName)) {\n      context.setQueue(this.conf.get(DEFAULT_QUEUE_CONFIG,\n          YarnConfiguration.DEFAULT_QUEUE_NAME));\n    } else {\n      context.setQueue(this.queueName);\n    }\n\n    ContainerLaunchContext amContainer \u003d\n        this.recordFactory.newRecordInstance(ContainerLaunchContext.class);\n    Resource resource \u003d BuilderUtils.newResource(1024, 1);\n    context.setResource(resource);\n    context.setAMContainerSpec(amContainer);\n    submitRequest.setApplicationSubmissionContext(context);\n\n    context.setUnmanagedAM(true);\n    context.setKeepContainersAcrossApplicationAttempts(\n        this.keepContainersAcrossApplicationAttempts);\n\n    LOG.info(\"Submitting unmanaged application {}\", appId);\n    this.rmClient.submitApplication(submitRequest);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/uam/UnmanagedApplicationManager.java",
      "extendedDetails": {}
    },
    "859aa1f9d621d07693825e610bdc0149f7a2770a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5531. UnmanagedAM pool manager for federating application across clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 73bb2102ce4b82b3a3bed91319f7c8f067ddc3e8)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "859aa1f9d621d07693825e610bdc0149f7a2770a",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,29 @@\n+  private void submitUnmanagedApp(ApplicationId appId)\n+      throws YarnException, IOException {\n+    SubmitApplicationRequest submitRequest \u003d\n+        this.recordFactory.newRecordInstance(SubmitApplicationRequest.class);\n+\n+    ApplicationSubmissionContext context \u003d this.recordFactory\n+        .newRecordInstance(ApplicationSubmissionContext.class);\n+\n+    context.setApplicationId(appId);\n+    context.setApplicationName(APP_NAME + \"-\" + appNameSuffix);\n+    if (StringUtils.isBlank(this.queueName)) {\n+      context.setQueue(this.conf.get(DEFAULT_QUEUE_CONFIG,\n+          YarnConfiguration.DEFAULT_QUEUE_NAME));\n+    } else {\n+      context.setQueue(this.queueName);\n+    }\n+\n+    ContainerLaunchContext amContainer \u003d\n+        this.recordFactory.newRecordInstance(ContainerLaunchContext.class);\n+    Resource resource \u003d BuilderUtils.newResource(1024, 1);\n+    context.setResource(resource);\n+    context.setAMContainerSpec(amContainer);\n+    submitRequest.setApplicationSubmissionContext(context);\n+\n+    context.setUnmanagedAM(true);\n+\n+    LOG.info(\"Submitting unmanaged application {}\", appId);\n+    this.rmClient.submitApplication(submitRequest);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void submitUnmanagedApp(ApplicationId appId)\n      throws YarnException, IOException {\n    SubmitApplicationRequest submitRequest \u003d\n        this.recordFactory.newRecordInstance(SubmitApplicationRequest.class);\n\n    ApplicationSubmissionContext context \u003d this.recordFactory\n        .newRecordInstance(ApplicationSubmissionContext.class);\n\n    context.setApplicationId(appId);\n    context.setApplicationName(APP_NAME + \"-\" + appNameSuffix);\n    if (StringUtils.isBlank(this.queueName)) {\n      context.setQueue(this.conf.get(DEFAULT_QUEUE_CONFIG,\n          YarnConfiguration.DEFAULT_QUEUE_NAME));\n    } else {\n      context.setQueue(this.queueName);\n    }\n\n    ContainerLaunchContext amContainer \u003d\n        this.recordFactory.newRecordInstance(ContainerLaunchContext.class);\n    Resource resource \u003d BuilderUtils.newResource(1024, 1);\n    context.setResource(resource);\n    context.setAMContainerSpec(amContainer);\n    submitRequest.setApplicationSubmissionContext(context);\n\n    context.setUnmanagedAM(true);\n\n    LOG.info(\"Submitting unmanaged application {}\", appId);\n    this.rmClient.submitApplication(submitRequest);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/uam/UnmanagedApplicationManager.java"
    }
  }
}