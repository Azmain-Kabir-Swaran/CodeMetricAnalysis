{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GangliaSink30.java",
  "functionName": "init",
  "functionId": "init___conf-SubsetConfiguration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/ganglia/GangliaSink30.java",
  "functionStartLine": 59,
  "functionEndLine": 84,
  "numCommitsSeen": 4,
  "timeTaken": 1025,
  "changeHistory": [
    "c0b1a44f6c6e6f9e4ac5cecea0d4a50e237a4c9c",
    "2ca9c8d926a8eeb871b2868e6eb4dfb97d7dc63d"
  ],
  "changeHistoryShort": {
    "c0b1a44f6c6e6f9e4ac5cecea0d4a50e237a4c9c": "Ybodychange",
    "2ca9c8d926a8eeb871b2868e6eb4dfb97d7dc63d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c0b1a44f6c6e6f9e4ac5cecea0d4a50e237a4c9c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13660. Upgrade commons-configuration version. Contributed by Sean Mackrory.\n",
      "commitDate": "17/11/16 8:48 PM",
      "commitName": "c0b1a44f6c6e6f9e4ac5cecea0d4a50e237a4c9c",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "07/09/11 3:59 PM",
      "commitNameOld": "2ca9c8d926a8eeb871b2868e6eb4dfb97d7dc63d",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 1898.24,
      "commitsBetweenForRepo": 13485,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,26 @@\n   public void init(SubsetConfiguration conf) {\n     super.init(conf);\n \n-    conf.setListDelimiter(\u0027,\u0027);\n+    conf.setListDelimiterHandler(new DefaultListDelimiterHandler(\u0027,\u0027));\n     Iterator\u003cString\u003e it \u003d (Iterator\u003cString\u003e) conf.getKeys();\n     while (it.hasNext()) {\n       String propertyName \u003d it.next();\n       if (propertyName.startsWith(TAGS_FOR_PREFIX_PROPERTY_PREFIX)) {\n         String contextName \u003d propertyName.substring(TAGS_FOR_PREFIX_PROPERTY_PREFIX.length());\n         String[] tags \u003d conf.getStringArray(propertyName);\n         boolean useAllTags \u003d false;\n-        Set\u003cString\u003e set \u003d null;\n-        if (tags.length \u003e 0) {\n-          set \u003d new HashSet\u003cString\u003e();\n-          for (String tag : tags) {\n-            tag \u003d tag.trim();\n-            useAllTags |\u003d tag.equals(\"*\");\n-            if (tag.length() \u003e 0) {\n-              set.add(tag);\n-            }\n+        Set\u003cString\u003e set \u003d new HashSet\u003c\u003e();\n+        for (String tag : tags) {\n+          tag \u003d tag.trim();\n+          useAllTags |\u003d tag.equals(\"*\");\n+          if (tag.length() \u003e 0) {\n+            set.add(tag);\n           }\n-          if (useAllTags) {\n-            set \u003d null;\n-          }\n+        }\n+        if (useAllTags) {\n+          set \u003d null;\n         }\n         useTagsMap.put(contextName, set);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(SubsetConfiguration conf) {\n    super.init(conf);\n\n    conf.setListDelimiterHandler(new DefaultListDelimiterHandler(\u0027,\u0027));\n    Iterator\u003cString\u003e it \u003d (Iterator\u003cString\u003e) conf.getKeys();\n    while (it.hasNext()) {\n      String propertyName \u003d it.next();\n      if (propertyName.startsWith(TAGS_FOR_PREFIX_PROPERTY_PREFIX)) {\n        String contextName \u003d propertyName.substring(TAGS_FOR_PREFIX_PROPERTY_PREFIX.length());\n        String[] tags \u003d conf.getStringArray(propertyName);\n        boolean useAllTags \u003d false;\n        Set\u003cString\u003e set \u003d new HashSet\u003c\u003e();\n        for (String tag : tags) {\n          tag \u003d tag.trim();\n          useAllTags |\u003d tag.equals(\"*\");\n          if (tag.length() \u003e 0) {\n            set.add(tag);\n          }\n        }\n        if (useAllTags) {\n          set \u003d null;\n        }\n        useTagsMap.put(contextName, set);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/ganglia/GangliaSink30.java",
      "extendedDetails": {}
    },
    "2ca9c8d926a8eeb871b2868e6eb4dfb97d7dc63d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7507. Allow ganglia metrics to include the metrics system tags in the gmetric names. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166460 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/09/11 3:59 PM",
      "commitName": "2ca9c8d926a8eeb871b2868e6eb4dfb97d7dc63d",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,29 @@\n+  public void init(SubsetConfiguration conf) {\n+    super.init(conf);\n+\n+    conf.setListDelimiter(\u0027,\u0027);\n+    Iterator\u003cString\u003e it \u003d (Iterator\u003cString\u003e) conf.getKeys();\n+    while (it.hasNext()) {\n+      String propertyName \u003d it.next();\n+      if (propertyName.startsWith(TAGS_FOR_PREFIX_PROPERTY_PREFIX)) {\n+        String contextName \u003d propertyName.substring(TAGS_FOR_PREFIX_PROPERTY_PREFIX.length());\n+        String[] tags \u003d conf.getStringArray(propertyName);\n+        boolean useAllTags \u003d false;\n+        Set\u003cString\u003e set \u003d null;\n+        if (tags.length \u003e 0) {\n+          set \u003d new HashSet\u003cString\u003e();\n+          for (String tag : tags) {\n+            tag \u003d tag.trim();\n+            useAllTags |\u003d tag.equals(\"*\");\n+            if (tag.length() \u003e 0) {\n+              set.add(tag);\n+            }\n+          }\n+          if (useAllTags) {\n+            set \u003d null;\n+          }\n+        }\n+        useTagsMap.put(contextName, set);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(SubsetConfiguration conf) {\n    super.init(conf);\n\n    conf.setListDelimiter(\u0027,\u0027);\n    Iterator\u003cString\u003e it \u003d (Iterator\u003cString\u003e) conf.getKeys();\n    while (it.hasNext()) {\n      String propertyName \u003d it.next();\n      if (propertyName.startsWith(TAGS_FOR_PREFIX_PROPERTY_PREFIX)) {\n        String contextName \u003d propertyName.substring(TAGS_FOR_PREFIX_PROPERTY_PREFIX.length());\n        String[] tags \u003d conf.getStringArray(propertyName);\n        boolean useAllTags \u003d false;\n        Set\u003cString\u003e set \u003d null;\n        if (tags.length \u003e 0) {\n          set \u003d new HashSet\u003cString\u003e();\n          for (String tag : tags) {\n            tag \u003d tag.trim();\n            useAllTags |\u003d tag.equals(\"*\");\n            if (tag.length() \u003e 0) {\n              set.add(tag);\n            }\n          }\n          if (useAllTags) {\n            set \u003d null;\n          }\n        }\n        useTagsMap.put(contextName, set);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/ganglia/GangliaSink30.java"
    }
  }
}