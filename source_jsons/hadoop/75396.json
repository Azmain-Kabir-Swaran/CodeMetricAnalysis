{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HealthMonitor.java",
  "functionName": "doHealthChecks",
  "functionId": "doHealthChecks",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HealthMonitor.java",
  "functionStartLine": 192,
  "functionEndLine": 224,
  "numCommitsSeen": 14,
  "timeTaken": 1449,
  "changeHistory": [
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
    "cf4b7f506dd338ecf2ed4c643b6a6a334e070fca",
    "84a97fbcf674e6f2403545fa6143c28e36f12fe3",
    "600e327a56593d84bb85ad0707d2d534a3653f57",
    "578f413778a6f005a35d18d7f015df128aeded5b",
    "1d5e7dde954ee49bc12a3b00acbba23b814cf3f5",
    "b795c65f4929330972c07ec2d5d7ce987c5c2316",
    "19495b2f4b9e621279b5e78be6464c6bf8f7cc92"
  ],
  "changeHistoryShort": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": "Ybodychange",
    "cf4b7f506dd338ecf2ed4c643b6a6a334e070fca": "Ybodychange",
    "84a97fbcf674e6f2403545fa6143c28e36f12fe3": "Ybodychange",
    "600e327a56593d84bb85ad0707d2d534a3653f57": "Ybodychange",
    "578f413778a6f005a35d18d7f015df128aeded5b": "Ybodychange",
    "1d5e7dde954ee49bc12a3b00acbba23b814cf3f5": "Ybodychange",
    "b795c65f4929330972c07ec2d5d7ce987c5c2316": "Ybodychange",
    "19495b2f4b9e621279b5e78be6464c6bf8f7cc92": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10571. Use Log.*(Object, Throwable) overload to log exceptions.\nContributed by Andras Bokor.\n",
      "commitDate": "14/02/18 8:20 AM",
      "commitName": "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 211.49,
      "commitsBetweenForRepo": 1578,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,33 @@\n   private void doHealthChecks() throws InterruptedException {\n     while (shouldRun) {\n       HAServiceStatus status \u003d null;\n       boolean healthy \u003d false;\n       try {\n         status \u003d proxy.getServiceStatus();\n         proxy.monitorHealth();\n         healthy \u003d true;\n       } catch (Throwable t) {\n         if (isHealthCheckFailedException(t)) {\n-          LOG.warn(\"Service health check failed for \" + targetToMonitor\n-              + \": \" + t.getMessage());\n+          LOG.warn(\"Service health check failed for {}\", targetToMonitor, t);\n           enterState(State.SERVICE_UNHEALTHY);\n         } else {\n-          LOG.warn(\"Transport-level exception trying to monitor health of \" +\n-              targetToMonitor + \": \" + t.getCause() + \" \" + t.getLocalizedMessage());\n+          LOG.warn(\"Transport-level exception trying to monitor health of {}\",\n+              targetToMonitor, t);\n           RPC.stopProxy(proxy);\n           proxy \u003d null;\n           enterState(State.SERVICE_NOT_RESPONDING);\n           Thread.sleep(sleepAfterDisconnectMillis);\n           return;\n         }\n       }\n       \n       if (status !\u003d null) {\n         setLastServiceStatus(status);\n       }\n       if (healthy) {\n         enterState(State.SERVICE_HEALTHY);\n       }\n \n       Thread.sleep(checkIntervalMillis);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void doHealthChecks() throws InterruptedException {\n    while (shouldRun) {\n      HAServiceStatus status \u003d null;\n      boolean healthy \u003d false;\n      try {\n        status \u003d proxy.getServiceStatus();\n        proxy.monitorHealth();\n        healthy \u003d true;\n      } catch (Throwable t) {\n        if (isHealthCheckFailedException(t)) {\n          LOG.warn(\"Service health check failed for {}\", targetToMonitor, t);\n          enterState(State.SERVICE_UNHEALTHY);\n        } else {\n          LOG.warn(\"Transport-level exception trying to monitor health of {}\",\n              targetToMonitor, t);\n          RPC.stopProxy(proxy);\n          proxy \u003d null;\n          enterState(State.SERVICE_NOT_RESPONDING);\n          Thread.sleep(sleepAfterDisconnectMillis);\n          return;\n        }\n      }\n      \n      if (status !\u003d null) {\n        setLastServiceStatus(status);\n      }\n      if (healthy) {\n        enterState(State.SERVICE_HEALTHY);\n      }\n\n      Thread.sleep(checkIntervalMillis);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HealthMonitor.java",
      "extendedDetails": {}
    },
    "cf4b7f506dd338ecf2ed4c643b6a6a334e070fca": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11000. HAServiceProtocol\u0027s health state is incorrectly transitioned to SERVICE_NOT_RESPONDING (Contributed by Ming Ma)\n",
      "commitDate": "17/02/15 1:25 AM",
      "commitName": "cf4b7f506dd338ecf2ed4c643b6a6a334e070fca",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "23/04/14 11:55 AM",
      "commitNameOld": "6eba48cbdeae7f7d46b2e0ad84bf3845c333000d",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 299.6,
      "commitsBetweenForRepo": 2419,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,34 @@\n   private void doHealthChecks() throws InterruptedException {\n     while (shouldRun) {\n       HAServiceStatus status \u003d null;\n       boolean healthy \u003d false;\n       try {\n         status \u003d proxy.getServiceStatus();\n         proxy.monitorHealth();\n         healthy \u003d true;\n-      } catch (HealthCheckFailedException e) {\n-        LOG.warn(\"Service health check failed for \" + targetToMonitor\n-            + \": \" + e.getMessage());\n-        enterState(State.SERVICE_UNHEALTHY);\n       } catch (Throwable t) {\n-        LOG.warn(\"Transport-level exception trying to monitor health of \" +\n-            targetToMonitor + \": \" + t.getLocalizedMessage());\n-        RPC.stopProxy(proxy);\n-        proxy \u003d null;\n-        enterState(State.SERVICE_NOT_RESPONDING);\n-        Thread.sleep(sleepAfterDisconnectMillis);\n-        return;\n+        if (isHealthCheckFailedException(t)) {\n+          LOG.warn(\"Service health check failed for \" + targetToMonitor\n+              + \": \" + t.getMessage());\n+          enterState(State.SERVICE_UNHEALTHY);\n+        } else {\n+          LOG.warn(\"Transport-level exception trying to monitor health of \" +\n+              targetToMonitor + \": \" + t.getCause() + \" \" + t.getLocalizedMessage());\n+          RPC.stopProxy(proxy);\n+          proxy \u003d null;\n+          enterState(State.SERVICE_NOT_RESPONDING);\n+          Thread.sleep(sleepAfterDisconnectMillis);\n+          return;\n+        }\n       }\n       \n       if (status !\u003d null) {\n         setLastServiceStatus(status);\n       }\n       if (healthy) {\n         enterState(State.SERVICE_HEALTHY);\n       }\n \n       Thread.sleep(checkIntervalMillis);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void doHealthChecks() throws InterruptedException {\n    while (shouldRun) {\n      HAServiceStatus status \u003d null;\n      boolean healthy \u003d false;\n      try {\n        status \u003d proxy.getServiceStatus();\n        proxy.monitorHealth();\n        healthy \u003d true;\n      } catch (Throwable t) {\n        if (isHealthCheckFailedException(t)) {\n          LOG.warn(\"Service health check failed for \" + targetToMonitor\n              + \": \" + t.getMessage());\n          enterState(State.SERVICE_UNHEALTHY);\n        } else {\n          LOG.warn(\"Transport-level exception trying to monitor health of \" +\n              targetToMonitor + \": \" + t.getCause() + \" \" + t.getLocalizedMessage());\n          RPC.stopProxy(proxy);\n          proxy \u003d null;\n          enterState(State.SERVICE_NOT_RESPONDING);\n          Thread.sleep(sleepAfterDisconnectMillis);\n          return;\n        }\n      }\n      \n      if (status !\u003d null) {\n        setLastServiceStatus(status);\n      }\n      if (healthy) {\n        enterState(State.SERVICE_HEALTHY);\n      }\n\n      Thread.sleep(checkIntervalMillis);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HealthMonitor.java",
      "extendedDetails": {}
    },
    "84a97fbcf674e6f2403545fa6143c28e36f12fe3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8218. RPC.closeProxy shouldn\u0027t throw error when closing a mock. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1306164 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/03/12 9:53 PM",
      "commitName": "84a97fbcf674e6f2403545fa6143c28e36f12fe3",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "26/03/12 6:31 PM",
      "commitNameOld": "600e327a56593d84bb85ad0707d2d534a3653f57",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 1.14,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,32 @@\n   private void doHealthChecks() throws InterruptedException {\n     while (shouldRun) {\n       HAServiceStatus status \u003d null;\n       boolean healthy \u003d false;\n       try {\n         status \u003d proxy.getServiceStatus();\n         proxy.monitorHealth();\n         healthy \u003d true;\n       } catch (HealthCheckFailedException e) {\n         LOG.warn(\"Service health check failed for \" + targetToMonitor\n             + \": \" + e.getMessage());\n         enterState(State.SERVICE_UNHEALTHY);\n       } catch (Throwable t) {\n         LOG.warn(\"Transport-level exception trying to monitor health of \" +\n             targetToMonitor + \": \" + t.getLocalizedMessage());\n-        if (proxy instanceof Closeable) {\n-          RPC.stopProxy(proxy);\n-        }\n+        RPC.stopProxy(proxy);\n         proxy \u003d null;\n         enterState(State.SERVICE_NOT_RESPONDING);\n         Thread.sleep(sleepAfterDisconnectMillis);\n         return;\n       }\n       \n       if (status !\u003d null) {\n         setLastServiceStatus(status);\n       }\n       if (healthy) {\n         enterState(State.SERVICE_HEALTHY);\n       }\n \n       Thread.sleep(checkIntervalMillis);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void doHealthChecks() throws InterruptedException {\n    while (shouldRun) {\n      HAServiceStatus status \u003d null;\n      boolean healthy \u003d false;\n      try {\n        status \u003d proxy.getServiceStatus();\n        proxy.monitorHealth();\n        healthy \u003d true;\n      } catch (HealthCheckFailedException e) {\n        LOG.warn(\"Service health check failed for \" + targetToMonitor\n            + \": \" + e.getMessage());\n        enterState(State.SERVICE_UNHEALTHY);\n      } catch (Throwable t) {\n        LOG.warn(\"Transport-level exception trying to monitor health of \" +\n            targetToMonitor + \": \" + t.getLocalizedMessage());\n        RPC.stopProxy(proxy);\n        proxy \u003d null;\n        enterState(State.SERVICE_NOT_RESPONDING);\n        Thread.sleep(sleepAfterDisconnectMillis);\n        return;\n      }\n      \n      if (status !\u003d null) {\n        setLastServiceStatus(status);\n      }\n      if (healthy) {\n        enterState(State.SERVICE_HEALTHY);\n      }\n\n      Thread.sleep(checkIntervalMillis);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HealthMonitor.java",
      "extendedDetails": {}
    },
    "600e327a56593d84bb85ad0707d2d534a3653f57": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8202. RPC stopProxy() does not close the proxy correctly. Contributed by Hari Mankude.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305704 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/12 6:31 PM",
      "commitName": "600e327a56593d84bb85ad0707d2d534a3653f57",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "26/03/12 4:37 PM",
      "commitNameOld": "578f413778a6f005a35d18d7f015df128aeded5b",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,34 @@\n   private void doHealthChecks() throws InterruptedException {\n     while (shouldRun) {\n       HAServiceStatus status \u003d null;\n       boolean healthy \u003d false;\n       try {\n         status \u003d proxy.getServiceStatus();\n         proxy.monitorHealth();\n         healthy \u003d true;\n       } catch (HealthCheckFailedException e) {\n         LOG.warn(\"Service health check failed for \" + targetToMonitor\n             + \": \" + e.getMessage());\n         enterState(State.SERVICE_UNHEALTHY);\n       } catch (Throwable t) {\n         LOG.warn(\"Transport-level exception trying to monitor health of \" +\n             targetToMonitor + \": \" + t.getLocalizedMessage());\n-        RPC.stopProxy(proxy);\n+        if (proxy instanceof Closeable) {\n+          RPC.stopProxy(proxy);\n+        }\n         proxy \u003d null;\n         enterState(State.SERVICE_NOT_RESPONDING);\n         Thread.sleep(sleepAfterDisconnectMillis);\n         return;\n       }\n       \n       if (status !\u003d null) {\n         setLastServiceStatus(status);\n       }\n       if (healthy) {\n         enterState(State.SERVICE_HEALTHY);\n       }\n \n       Thread.sleep(checkIntervalMillis);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void doHealthChecks() throws InterruptedException {\n    while (shouldRun) {\n      HAServiceStatus status \u003d null;\n      boolean healthy \u003d false;\n      try {\n        status \u003d proxy.getServiceStatus();\n        proxy.monitorHealth();\n        healthy \u003d true;\n      } catch (HealthCheckFailedException e) {\n        LOG.warn(\"Service health check failed for \" + targetToMonitor\n            + \": \" + e.getMessage());\n        enterState(State.SERVICE_UNHEALTHY);\n      } catch (Throwable t) {\n        LOG.warn(\"Transport-level exception trying to monitor health of \" +\n            targetToMonitor + \": \" + t.getLocalizedMessage());\n        if (proxy instanceof Closeable) {\n          RPC.stopProxy(proxy);\n        }\n        proxy \u003d null;\n        enterState(State.SERVICE_NOT_RESPONDING);\n        Thread.sleep(sleepAfterDisconnectMillis);\n        return;\n      }\n      \n      if (status !\u003d null) {\n        setLastServiceStatus(status);\n      }\n      if (healthy) {\n        enterState(State.SERVICE_HEALTHY);\n      }\n\n      Thread.sleep(checkIntervalMillis);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HealthMonitor.java",
      "extendedDetails": {}
    },
    "578f413778a6f005a35d18d7f015df128aeded5b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8206. Common portion of a ZK-based failover controller. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/12 4:37 PM",
      "commitName": "578f413778a6f005a35d18d7f015df128aeded5b",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "25/03/12 6:57 PM",
      "commitNameOld": "1d5e7dde954ee49bc12a3b00acbba23b814cf3f5",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.9,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,32 @@\n   private void doHealthChecks() throws InterruptedException {\n     while (shouldRun) {\n       HAServiceStatus status \u003d null;\n       boolean healthy \u003d false;\n       try {\n         status \u003d proxy.getServiceStatus();\n         proxy.monitorHealth();\n         healthy \u003d true;\n       } catch (HealthCheckFailedException e) {\n-        LOG.warn(\"Service health check failed: \" + e.getMessage());\n+        LOG.warn(\"Service health check failed for \" + targetToMonitor\n+            + \": \" + e.getMessage());\n         enterState(State.SERVICE_UNHEALTHY);\n       } catch (Throwable t) {\n         LOG.warn(\"Transport-level exception trying to monitor health of \" +\n             targetToMonitor + \": \" + t.getLocalizedMessage());\n         RPC.stopProxy(proxy);\n         proxy \u003d null;\n         enterState(State.SERVICE_NOT_RESPONDING);\n         Thread.sleep(sleepAfterDisconnectMillis);\n         return;\n       }\n       \n       if (status !\u003d null) {\n         setLastServiceStatus(status);\n       }\n       if (healthy) {\n         enterState(State.SERVICE_HEALTHY);\n       }\n \n       Thread.sleep(checkIntervalMillis);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void doHealthChecks() throws InterruptedException {\n    while (shouldRun) {\n      HAServiceStatus status \u003d null;\n      boolean healthy \u003d false;\n      try {\n        status \u003d proxy.getServiceStatus();\n        proxy.monitorHealth();\n        healthy \u003d true;\n      } catch (HealthCheckFailedException e) {\n        LOG.warn(\"Service health check failed for \" + targetToMonitor\n            + \": \" + e.getMessage());\n        enterState(State.SERVICE_UNHEALTHY);\n      } catch (Throwable t) {\n        LOG.warn(\"Transport-level exception trying to monitor health of \" +\n            targetToMonitor + \": \" + t.getLocalizedMessage());\n        RPC.stopProxy(proxy);\n        proxy \u003d null;\n        enterState(State.SERVICE_NOT_RESPONDING);\n        Thread.sleep(sleepAfterDisconnectMillis);\n        return;\n      }\n      \n      if (status !\u003d null) {\n        setLastServiceStatus(status);\n      }\n      if (healthy) {\n        enterState(State.SERVICE_HEALTHY);\n      }\n\n      Thread.sleep(checkIntervalMillis);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HealthMonitor.java",
      "extendedDetails": {}
    },
    "1d5e7dde954ee49bc12a3b00acbba23b814cf3f5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8204. TestHealthMonitor fails occasionally. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305199 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/03/12 6:57 PM",
      "commitName": "1d5e7dde954ee49bc12a3b00acbba23b814cf3f5",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "22/03/12 11:29 PM",
      "commitNameOld": "b795c65f4929330972c07ec2d5d7ce987c5c2316",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 2.81,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   private void doHealthChecks() throws InterruptedException {\n     while (shouldRun) {\n       HAServiceStatus status \u003d null;\n       boolean healthy \u003d false;\n       try {\n         status \u003d proxy.getServiceStatus();\n         proxy.monitorHealth();\n         healthy \u003d true;\n       } catch (HealthCheckFailedException e) {\n         LOG.warn(\"Service health check failed: \" + e.getMessage());\n         enterState(State.SERVICE_UNHEALTHY);\n       } catch (Throwable t) {\n         LOG.warn(\"Transport-level exception trying to monitor health of \" +\n-            addrToMonitor + \": \" + t.getLocalizedMessage());\n+            targetToMonitor + \": \" + t.getLocalizedMessage());\n         RPC.stopProxy(proxy);\n         proxy \u003d null;\n         enterState(State.SERVICE_NOT_RESPONDING);\n         Thread.sleep(sleepAfterDisconnectMillis);\n         return;\n       }\n       \n       if (status !\u003d null) {\n         setLastServiceStatus(status);\n       }\n       if (healthy) {\n         enterState(State.SERVICE_HEALTHY);\n       }\n \n       Thread.sleep(checkIntervalMillis);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void doHealthChecks() throws InterruptedException {\n    while (shouldRun) {\n      HAServiceStatus status \u003d null;\n      boolean healthy \u003d false;\n      try {\n        status \u003d proxy.getServiceStatus();\n        proxy.monitorHealth();\n        healthy \u003d true;\n      } catch (HealthCheckFailedException e) {\n        LOG.warn(\"Service health check failed: \" + e.getMessage());\n        enterState(State.SERVICE_UNHEALTHY);\n      } catch (Throwable t) {\n        LOG.warn(\"Transport-level exception trying to monitor health of \" +\n            targetToMonitor + \": \" + t.getLocalizedMessage());\n        RPC.stopProxy(proxy);\n        proxy \u003d null;\n        enterState(State.SERVICE_NOT_RESPONDING);\n        Thread.sleep(sleepAfterDisconnectMillis);\n        return;\n      }\n      \n      if (status !\u003d null) {\n        setLastServiceStatus(status);\n      }\n      if (healthy) {\n        enterState(State.SERVICE_HEALTHY);\n      }\n\n      Thread.sleep(checkIntervalMillis);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HealthMonitor.java",
      "extendedDetails": {}
    },
    "b795c65f4929330972c07ec2d5d7ce987c5c2316": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3071. haadmin failover command does not provide enough detail when target NN is not ready to be active. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304203 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/03/12 11:29 PM",
      "commitName": "b795c65f4929330972c07ec2d5d7ce987c5c2316",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "20/03/12 4:29 PM",
      "commitNameOld": "19495b2f4b9e621279b5e78be6464c6bf8f7cc92",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 2.29,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   private void doHealthChecks() throws InterruptedException {\n     while (shouldRun) {\n-      HAServiceState state \u003d null;\n+      HAServiceStatus status \u003d null;\n       boolean healthy \u003d false;\n       try {\n-        state \u003d proxy.getServiceState();\n+        status \u003d proxy.getServiceStatus();\n         proxy.monitorHealth();\n         healthy \u003d true;\n       } catch (HealthCheckFailedException e) {\n         LOG.warn(\"Service health check failed: \" + e.getMessage());\n         enterState(State.SERVICE_UNHEALTHY);\n       } catch (Throwable t) {\n         LOG.warn(\"Transport-level exception trying to monitor health of \" +\n             addrToMonitor + \": \" + t.getLocalizedMessage());\n         RPC.stopProxy(proxy);\n         proxy \u003d null;\n         enterState(State.SERVICE_NOT_RESPONDING);\n         Thread.sleep(sleepAfterDisconnectMillis);\n         return;\n       }\n       \n-      if (state !\u003d null) {\n-        setLastServiceState(state);\n+      if (status !\u003d null) {\n+        setLastServiceStatus(status);\n       }\n       if (healthy) {\n         enterState(State.SERVICE_HEALTHY);\n       }\n \n       Thread.sleep(checkIntervalMillis);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void doHealthChecks() throws InterruptedException {\n    while (shouldRun) {\n      HAServiceStatus status \u003d null;\n      boolean healthy \u003d false;\n      try {\n        status \u003d proxy.getServiceStatus();\n        proxy.monitorHealth();\n        healthy \u003d true;\n      } catch (HealthCheckFailedException e) {\n        LOG.warn(\"Service health check failed: \" + e.getMessage());\n        enterState(State.SERVICE_UNHEALTHY);\n      } catch (Throwable t) {\n        LOG.warn(\"Transport-level exception trying to monitor health of \" +\n            addrToMonitor + \": \" + t.getLocalizedMessage());\n        RPC.stopProxy(proxy);\n        proxy \u003d null;\n        enterState(State.SERVICE_NOT_RESPONDING);\n        Thread.sleep(sleepAfterDisconnectMillis);\n        return;\n      }\n      \n      if (status !\u003d null) {\n        setLastServiceStatus(status);\n      }\n      if (healthy) {\n        enterState(State.SERVICE_HEALTHY);\n      }\n\n      Thread.sleep(checkIntervalMillis);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HealthMonitor.java",
      "extendedDetails": {}
    },
    "19495b2f4b9e621279b5e78be6464c6bf8f7cc92": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7788. Add simple HealthMonitor class to watch an HAService. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1303208 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/03/12 4:29 PM",
      "commitName": "19495b2f4b9e621279b5e78be6464c6bf8f7cc92",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,31 @@\n+  private void doHealthChecks() throws InterruptedException {\n+    while (shouldRun) {\n+      HAServiceState state \u003d null;\n+      boolean healthy \u003d false;\n+      try {\n+        state \u003d proxy.getServiceState();\n+        proxy.monitorHealth();\n+        healthy \u003d true;\n+      } catch (HealthCheckFailedException e) {\n+        LOG.warn(\"Service health check failed: \" + e.getMessage());\n+        enterState(State.SERVICE_UNHEALTHY);\n+      } catch (Throwable t) {\n+        LOG.warn(\"Transport-level exception trying to monitor health of \" +\n+            addrToMonitor + \": \" + t.getLocalizedMessage());\n+        RPC.stopProxy(proxy);\n+        proxy \u003d null;\n+        enterState(State.SERVICE_NOT_RESPONDING);\n+        Thread.sleep(sleepAfterDisconnectMillis);\n+        return;\n+      }\n+      \n+      if (state !\u003d null) {\n+        setLastServiceState(state);\n+      }\n+      if (healthy) {\n+        enterState(State.SERVICE_HEALTHY);\n+      }\n+\n+      Thread.sleep(checkIntervalMillis);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void doHealthChecks() throws InterruptedException {\n    while (shouldRun) {\n      HAServiceState state \u003d null;\n      boolean healthy \u003d false;\n      try {\n        state \u003d proxy.getServiceState();\n        proxy.monitorHealth();\n        healthy \u003d true;\n      } catch (HealthCheckFailedException e) {\n        LOG.warn(\"Service health check failed: \" + e.getMessage());\n        enterState(State.SERVICE_UNHEALTHY);\n      } catch (Throwable t) {\n        LOG.warn(\"Transport-level exception trying to monitor health of \" +\n            addrToMonitor + \": \" + t.getLocalizedMessage());\n        RPC.stopProxy(proxy);\n        proxy \u003d null;\n        enterState(State.SERVICE_NOT_RESPONDING);\n        Thread.sleep(sleepAfterDisconnectMillis);\n        return;\n      }\n      \n      if (state !\u003d null) {\n        setLastServiceState(state);\n      }\n      if (healthy) {\n        enterState(State.SERVICE_HEALTHY);\n      }\n\n      Thread.sleep(checkIntervalMillis);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HealthMonitor.java"
    }
  }
}