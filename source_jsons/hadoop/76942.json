{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HHXORErasureDecodingStep.java",
  "functionName": "performCoding",
  "functionId": "performCoding___inputChunks-ECChunk[]__outputChunks-ECChunk[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/coder/HHXORErasureDecodingStep.java",
  "functionStartLine": 68,
  "functionEndLine": 77,
  "numCommitsSeen": 3,
  "timeTaken": 995,
  "changeHistory": [
    "31ebccc96238136560f4210bdf6766fe18e0650c",
    "1bb31fb22e6f8e6df8e9ff4e94adf20308b4c743"
  ],
  "changeHistoryShort": {
    "31ebccc96238136560f4210bdf6766fe18e0650c": "Yexceptionschange",
    "1bb31fb22e6f8e6df8e9ff4e94adf20308b4c743": "Yintroduced"
  },
  "changeHistoryDetails": {
    "31ebccc96238136560f4210bdf6766fe18e0650c": {
      "type": "Yexceptionschange",
      "commitMessage": "HDFS-12613. Native EC coder should implement release() as idempotent function. (Lei (Eddy) Xu)\n",
      "commitDate": "16/10/17 7:44 PM",
      "commitName": "31ebccc96238136560f4210bdf6766fe18e0650c",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "17/10/16 11:02 PM",
      "commitNameOld": "c023c748869063fb67d14ea996569c42578d1cea",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 363.86,
      "commitsBetweenForRepo": 2347,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,10 @@\n-  public void performCoding(ECChunk[] inputChunks, ECChunk[] outputChunks) {\n+  public void performCoding(ECChunk[] inputChunks, ECChunk[] outputChunks)\n+      throws IOException {\n     if (erasedIndexes.length \u003d\u003d 0) {\n       return;\n     }\n \n     ByteBuffer[] inputBuffers \u003d ECChunk.toBuffers(inputChunks);\n     ByteBuffer[] outputBuffers \u003d ECChunk.toBuffers(outputChunks);\n     performCoding(inputBuffers, outputBuffers);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void performCoding(ECChunk[] inputChunks, ECChunk[] outputChunks)\n      throws IOException {\n    if (erasedIndexes.length \u003d\u003d 0) {\n      return;\n    }\n\n    ByteBuffer[] inputBuffers \u003d ECChunk.toBuffers(inputChunks);\n    ByteBuffer[] outputBuffers \u003d ECChunk.toBuffers(outputChunks);\n    performCoding(inputBuffers, outputBuffers);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/coder/HHXORErasureDecodingStep.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[IOException]"
      }
    },
    "1bb31fb22e6f8e6df8e9ff4e94adf20308b4c743": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11828. Implement the Hitchhiker erasure coding algorithm. Contributed by Jack Liu Quan.\n\nChange-Id: If43475ccc2574df60949c947af562722db076251\n",
      "commitDate": "21/01/16 10:30 AM",
      "commitName": "1bb31fb22e6f8e6df8e9ff4e94adf20308b4c743",
      "commitAuthor": "Zhe Zhang",
      "diff": "@@ -0,0 +1,9 @@\n+  public void performCoding(ECChunk[] inputChunks, ECChunk[] outputChunks) {\n+    if (erasedIndexes.length \u003d\u003d 0) {\n+      return;\n+    }\n+\n+    ByteBuffer[] inputBuffers \u003d ECChunk.toBuffers(inputChunks);\n+    ByteBuffer[] outputBuffers \u003d ECChunk.toBuffers(outputChunks);\n+    performCoding(inputBuffers, outputBuffers);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void performCoding(ECChunk[] inputChunks, ECChunk[] outputChunks) {\n    if (erasedIndexes.length \u003d\u003d 0) {\n      return;\n    }\n\n    ByteBuffer[] inputBuffers \u003d ECChunk.toBuffers(inputChunks);\n    ByteBuffer[] outputBuffers \u003d ECChunk.toBuffers(outputChunks);\n    performCoding(inputBuffers, outputBuffers);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/coder/HHXORErasureDecodingStep.java"
    }
  }
}