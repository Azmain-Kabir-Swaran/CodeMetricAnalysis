{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TopCLI.java",
  "functionName": "run",
  "functionId": "run___args-String[]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/TopCLI.java",
  "functionStartLine": 455,
  "functionEndLine": 497,
  "numCommitsSeen": 12,
  "timeTaken": 1519,
  "changeHistory": [
    "7dc272199ffea28c8597151e17d4606928a7f9f3",
    "577d755e4bf72d6adedeba51be01ff5f3f028de0"
  ],
  "changeHistoryShort": {
    "7dc272199ffea28c8597151e17d4606928a7f9f3": "Ybodychange",
    "577d755e4bf72d6adedeba51be01ff5f3f028de0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7dc272199ffea28c8597151e17d4606928a7f9f3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9034. ApplicationCLI should have option to take clusterId. Contributed by Rohith Sharma K S.\n",
      "commitDate": "28/11/18 12:42 AM",
      "commitName": "7dc272199ffea28c8597151e17d4606928a7f9f3",
      "commitAuthor": "Suma Shivaprasad",
      "commitDateOld": "13/07/18 8:42 AM",
      "commitNameOld": "88625f5cd90766136a9ebd76a8d84b45a37e6c99",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 137.71,
      "commitsBetweenForRepo": 1164,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,43 @@\n   public int run(String[] args) throws Exception {\n     try {\n       parseOptions(args);\n       if (cliParser.hasOption(\"help\")) {\n         printUsage();\n         return 0;\n       }\n     } catch (Exception e) {\n       LOG.error(\"Unable to parse options\", e);\n       return 1;\n     }\n+    createAndStartYarnClient();\n     setAppsHeader();\n \n     Thread keyboardMonitor \u003d new KeyboardMonitor();\n     keyboardMonitor.start();\n \n     rmStartTime \u003d getRMStartTime();\n     clearScreen();\n \n     while (runMainLoop.get()) {\n       if (displayScreen \u003d\u003d DisplayScreen.TOP) {\n         showTopScreen();\n         try {\n           Thread.sleep(refreshPeriod);\n         } catch (InterruptedException ie) {\n           break;\n         }\n       } else if (displayScreen \u003d\u003d DisplayScreen.SORT) {\n         showSortScreen();\n         Thread.sleep(100);\n       } else if (displayScreen \u003d\u003d DisplayScreen.FIELDS) {\n         showFieldsScreen();\n         Thread.sleep(100);\n       }\n       if (rmStartTime \u003d\u003d -1) {\n         // we were unable to get it the first time, try again\n         rmStartTime \u003d getRMStartTime();\n       }\n     }\n     clearScreen();\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    try {\n      parseOptions(args);\n      if (cliParser.hasOption(\"help\")) {\n        printUsage();\n        return 0;\n      }\n    } catch (Exception e) {\n      LOG.error(\"Unable to parse options\", e);\n      return 1;\n    }\n    createAndStartYarnClient();\n    setAppsHeader();\n\n    Thread keyboardMonitor \u003d new KeyboardMonitor();\n    keyboardMonitor.start();\n\n    rmStartTime \u003d getRMStartTime();\n    clearScreen();\n\n    while (runMainLoop.get()) {\n      if (displayScreen \u003d\u003d DisplayScreen.TOP) {\n        showTopScreen();\n        try {\n          Thread.sleep(refreshPeriod);\n        } catch (InterruptedException ie) {\n          break;\n        }\n      } else if (displayScreen \u003d\u003d DisplayScreen.SORT) {\n        showSortScreen();\n        Thread.sleep(100);\n      } else if (displayScreen \u003d\u003d DisplayScreen.FIELDS) {\n        showFieldsScreen();\n        Thread.sleep(100);\n      }\n      if (rmStartTime \u003d\u003d -1) {\n        // we were unable to get it the first time, try again\n        rmStartTime \u003d getRMStartTime();\n      }\n    }\n    clearScreen();\n    return 0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/TopCLI.java",
      "extendedDetails": {}
    },
    "577d755e4bf72d6adedeba51be01ff5f3f028de0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3348. Add a \u0027yarn top\u0027 tool to help understand cluster usage. Contributed by Varun Vasudev\n",
      "commitDate": "10/04/15 9:57 AM",
      "commitName": "577d755e4bf72d6adedeba51be01ff5f3f028de0",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,42 @@\n+  public int run(String[] args) throws Exception {\n+    try {\n+      parseOptions(args);\n+      if (cliParser.hasOption(\"help\")) {\n+        printUsage();\n+        return 0;\n+      }\n+    } catch (Exception e) {\n+      LOG.error(\"Unable to parse options\", e);\n+      return 1;\n+    }\n+    setAppsHeader();\n+\n+    Thread keyboardMonitor \u003d new KeyboardMonitor();\n+    keyboardMonitor.start();\n+\n+    rmStartTime \u003d getRMStartTime();\n+    clearScreen();\n+\n+    while (runMainLoop.get()) {\n+      if (displayScreen \u003d\u003d DisplayScreen.TOP) {\n+        showTopScreen();\n+        try {\n+          Thread.sleep(refreshPeriod);\n+        } catch (InterruptedException ie) {\n+          break;\n+        }\n+      } else if (displayScreen \u003d\u003d DisplayScreen.SORT) {\n+        showSortScreen();\n+        Thread.sleep(100);\n+      } else if (displayScreen \u003d\u003d DisplayScreen.FIELDS) {\n+        showFieldsScreen();\n+        Thread.sleep(100);\n+      }\n+      if (rmStartTime \u003d\u003d -1) {\n+        // we were unable to get it the first time, try again\n+        rmStartTime \u003d getRMStartTime();\n+      }\n+    }\n+    clearScreen();\n+    return 0;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    try {\n      parseOptions(args);\n      if (cliParser.hasOption(\"help\")) {\n        printUsage();\n        return 0;\n      }\n    } catch (Exception e) {\n      LOG.error(\"Unable to parse options\", e);\n      return 1;\n    }\n    setAppsHeader();\n\n    Thread keyboardMonitor \u003d new KeyboardMonitor();\n    keyboardMonitor.start();\n\n    rmStartTime \u003d getRMStartTime();\n    clearScreen();\n\n    while (runMainLoop.get()) {\n      if (displayScreen \u003d\u003d DisplayScreen.TOP) {\n        showTopScreen();\n        try {\n          Thread.sleep(refreshPeriod);\n        } catch (InterruptedException ie) {\n          break;\n        }\n      } else if (displayScreen \u003d\u003d DisplayScreen.SORT) {\n        showSortScreen();\n        Thread.sleep(100);\n      } else if (displayScreen \u003d\u003d DisplayScreen.FIELDS) {\n        showFieldsScreen();\n        Thread.sleep(100);\n      }\n      if (rmStartTime \u003d\u003d -1) {\n        // we were unable to get it the first time, try again\n        rmStartTime \u003d getRMStartTime();\n      }\n    }\n    clearScreen();\n    return 0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/TopCLI.java"
    }
  }
}