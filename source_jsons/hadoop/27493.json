{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineCollectorWebService.java",
  "functionName": "putDomain",
  "functionId": "putDomain___req-HttpServletRequest(annotations-@Context)__res-HttpServletResponse(annotations-@Context)__appId-String(annotations-@QueryParam(\"appid\"))__domain-TimelineDomain",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorWebService.java",
  "functionStartLine": 224,
  "functionEndLine": 263,
  "numCommitsSeen": 16,
  "timeTaken": 1215,
  "changeHistory": [
    "9119b3cf8f883aa2d5df534afc0c50249fed03c6",
    "e3b7d7ac1694b8766ae11bc7e8ecf09763bb26db"
  ],
  "changeHistoryShort": {
    "9119b3cf8f883aa2d5df534afc0c50249fed03c6": "Ybodychange",
    "e3b7d7ac1694b8766ae11bc7e8ecf09763bb26db": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9119b3cf8f883aa2d5df534afc0c50249fed03c6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8155. Improve ATSv2 client logging in RM and NM publisher. Contributed by Abhishek Modi.\n",
      "commitDate": "14/06/18 12:08 AM",
      "commitName": "9119b3cf8f883aa2d5df534afc0c50249fed03c6",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "16/05/18 1:00 PM",
      "commitNameOld": "e3b7d7ac1694b8766ae11bc7e8ecf09763bb26db",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 28.46,
      "commitsBetweenForRepo": 239,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,40 @@\n   public Response putDomain(\n       @Context HttpServletRequest req,\n       @Context HttpServletResponse res,\n       @QueryParam(\"appid\") String appId,\n       TimelineDomain domain) {\n     init(res);\n     UserGroupInformation callerUgi \u003d getUser(req);\n     if (callerUgi \u003d\u003d null) {\n       String msg \u003d \"The owner of the posted timeline entities is not set\";\n       LOG.error(msg);\n       throw new ForbiddenException(msg);\n     }\n \n     try {\n       ApplicationId appID \u003d parseApplicationId(appId);\n       if (appID \u003d\u003d null) {\n         return Response.status(Response.Status.BAD_REQUEST).build();\n       }\n       NodeTimelineCollectorManager collectorManager \u003d\n           (NodeTimelineCollectorManager) context.getAttribute(\n               NodeTimelineCollectorManager.COLLECTOR_MANAGER_ATTR_KEY);\n       TimelineCollector collector \u003d collectorManager.get(appID);\n       if (collector \u003d\u003d null) {\n         LOG.error(\"Application: \" + appId + \" is not found\");\n-        throw new NotFoundException(); // different exception?\n+        throw new NotFoundException(\"Application: \" + appId + \" is not found\");\n       }\n \n       domain.setOwner(callerUgi.getShortUserName());\n       collector.putDomain(domain, callerUgi);\n \n       return Response.ok().build();\n-    } catch (Exception e) {\n+    } catch (NotFoundException e) {\n+      throw new WebApplicationException(e,\n+          Response.Status.INTERNAL_SERVER_ERROR);\n+    } catch (IOException e) {\n       LOG.error(\"Error putting entities\", e);\n       throw new WebApplicationException(e,\n           Response.Status.INTERNAL_SERVER_ERROR);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response putDomain(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @QueryParam(\"appid\") String appId,\n      TimelineDomain domain) {\n    init(res);\n    UserGroupInformation callerUgi \u003d getUser(req);\n    if (callerUgi \u003d\u003d null) {\n      String msg \u003d \"The owner of the posted timeline entities is not set\";\n      LOG.error(msg);\n      throw new ForbiddenException(msg);\n    }\n\n    try {\n      ApplicationId appID \u003d parseApplicationId(appId);\n      if (appID \u003d\u003d null) {\n        return Response.status(Response.Status.BAD_REQUEST).build();\n      }\n      NodeTimelineCollectorManager collectorManager \u003d\n          (NodeTimelineCollectorManager) context.getAttribute(\n              NodeTimelineCollectorManager.COLLECTOR_MANAGER_ATTR_KEY);\n      TimelineCollector collector \u003d collectorManager.get(appID);\n      if (collector \u003d\u003d null) {\n        LOG.error(\"Application: \" + appId + \" is not found\");\n        throw new NotFoundException(\"Application: \" + appId + \" is not found\");\n      }\n\n      domain.setOwner(callerUgi.getShortUserName());\n      collector.putDomain(domain, callerUgi);\n\n      return Response.ok().build();\n    } catch (NotFoundException e) {\n      throw new WebApplicationException(e,\n          Response.Status.INTERNAL_SERVER_ERROR);\n    } catch (IOException e) {\n      LOG.error(\"Error putting entities\", e);\n      throw new WebApplicationException(e,\n          Response.Status.INTERNAL_SERVER_ERROR);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorWebService.java",
      "extendedDetails": {}
    },
    "e3b7d7ac1694b8766ae11bc7e8ecf09763bb26db": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7933. [atsv2 read acls] Add TimelineWriter#writeDomain. (Rohith Sharma K S via Haibo Chen)\n",
      "commitDate": "16/05/18 1:00 PM",
      "commitName": "e3b7d7ac1694b8766ae11bc7e8ecf09763bb26db",
      "commitAuthor": "Haibo Chen",
      "diff": "@@ -0,0 +1,37 @@\n+  public Response putDomain(\n+      @Context HttpServletRequest req,\n+      @Context HttpServletResponse res,\n+      @QueryParam(\"appid\") String appId,\n+      TimelineDomain domain) {\n+    init(res);\n+    UserGroupInformation callerUgi \u003d getUser(req);\n+    if (callerUgi \u003d\u003d null) {\n+      String msg \u003d \"The owner of the posted timeline entities is not set\";\n+      LOG.error(msg);\n+      throw new ForbiddenException(msg);\n+    }\n+\n+    try {\n+      ApplicationId appID \u003d parseApplicationId(appId);\n+      if (appID \u003d\u003d null) {\n+        return Response.status(Response.Status.BAD_REQUEST).build();\n+      }\n+      NodeTimelineCollectorManager collectorManager \u003d\n+          (NodeTimelineCollectorManager) context.getAttribute(\n+              NodeTimelineCollectorManager.COLLECTOR_MANAGER_ATTR_KEY);\n+      TimelineCollector collector \u003d collectorManager.get(appID);\n+      if (collector \u003d\u003d null) {\n+        LOG.error(\"Application: \" + appId + \" is not found\");\n+        throw new NotFoundException(); // different exception?\n+      }\n+\n+      domain.setOwner(callerUgi.getShortUserName());\n+      collector.putDomain(domain, callerUgi);\n+\n+      return Response.ok().build();\n+    } catch (Exception e) {\n+      LOG.error(\"Error putting entities\", e);\n+      throw new WebApplicationException(e,\n+          Response.Status.INTERNAL_SERVER_ERROR);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Response putDomain(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @QueryParam(\"appid\") String appId,\n      TimelineDomain domain) {\n    init(res);\n    UserGroupInformation callerUgi \u003d getUser(req);\n    if (callerUgi \u003d\u003d null) {\n      String msg \u003d \"The owner of the posted timeline entities is not set\";\n      LOG.error(msg);\n      throw new ForbiddenException(msg);\n    }\n\n    try {\n      ApplicationId appID \u003d parseApplicationId(appId);\n      if (appID \u003d\u003d null) {\n        return Response.status(Response.Status.BAD_REQUEST).build();\n      }\n      NodeTimelineCollectorManager collectorManager \u003d\n          (NodeTimelineCollectorManager) context.getAttribute(\n              NodeTimelineCollectorManager.COLLECTOR_MANAGER_ATTR_KEY);\n      TimelineCollector collector \u003d collectorManager.get(appID);\n      if (collector \u003d\u003d null) {\n        LOG.error(\"Application: \" + appId + \" is not found\");\n        throw new NotFoundException(); // different exception?\n      }\n\n      domain.setOwner(callerUgi.getShortUserName());\n      collector.putDomain(domain, callerUgi);\n\n      return Response.ok().build();\n    } catch (Exception e) {\n      LOG.error(\"Error putting entities\", e);\n      throw new WebApplicationException(e,\n          Response.Status.INTERNAL_SERVER_ERROR);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorWebService.java"
    }
  }
}