{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBImageCorruption.java",
  "functionName": "getType",
  "functionId": "getType",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageCorruption.java",
  "functionStartLine": 87,
  "functionEndLine": 101,
  "numCommitsSeen": 1,
  "timeTaken": 831,
  "changeHistory": [
    "fb10803dfa67394650072bdea327296f8ad2a744"
  ],
  "changeHistoryShort": {
    "fb10803dfa67394650072bdea327296f8ad2a744": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb10803dfa67394650072bdea327296f8ad2a744": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13818. Extend OIV to detect FSImage corruption. Contributed by Adam Antal.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "03/12/18 10:34 AM",
      "commitName": "fb10803dfa67394650072bdea327296f8ad2a744",
      "commitAuthor": "Adam Antal",
      "diff": "@@ -0,0 +1,15 @@\n+  String getType() {\n+    StringBuffer s \u003d new StringBuffer();\n+    if (type.contains(PBImageCorruptionType.CORRUPT_NODE)) {\n+      s.append(PBImageCorruptionType.CORRUPT_NODE);\n+    }\n+    if (type.contains(PBImageCorruptionType.CORRUPT_NODE) \u0026\u0026\n+        type.contains(PBImageCorruptionType.MISSING_CHILD)) {\n+      s.append(WITH);\n+    }\n+\n+    if (type.contains(PBImageCorruptionType.MISSING_CHILD)) {\n+      s.append(PBImageCorruptionType.MISSING_CHILD);\n+    }\n+    return s.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  String getType() {\n    StringBuffer s \u003d new StringBuffer();\n    if (type.contains(PBImageCorruptionType.CORRUPT_NODE)) {\n      s.append(PBImageCorruptionType.CORRUPT_NODE);\n    }\n    if (type.contains(PBImageCorruptionType.CORRUPT_NODE) \u0026\u0026\n        type.contains(PBImageCorruptionType.MISSING_CHILD)) {\n      s.append(WITH);\n    }\n\n    if (type.contains(PBImageCorruptionType.MISSING_CHILD)) {\n      s.append(PBImageCorruptionType.MISSING_CHILD);\n    }\n    return s.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageCorruption.java"
    }
  }
}