{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppAttemptMetrics.java",
  "functionName": "updateUsageMap",
  "functionId": "updateUsageMap___allocated-Resource__deltaUsedMillis-long__targetMap-Map__String,AtomicLong__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptMetrics.java",
  "functionStartLine": 182,
  "functionEndLine": 195,
  "numCommitsSeen": 15,
  "timeTaken": 2444,
  "changeHistory": [
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
    "dae65f3bef8ffa34d02a37041f1dfdfeeee91845"
  ],
  "changeHistoryShort": {
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d": "Ybodychange",
    "dae65f3bef8ffa34d02a37041f1dfdfeeee91845": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6788. [YARN-3926] Improve performance of resource profile branch\n(Contributed by Sunil Govindan via Daniel Templeton)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "dae65f3bef8ffa34d02a37041f1dfdfeeee91845",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,14 @@\n   private void updateUsageMap(Resource allocated, long deltaUsedMillis,\n       Map\u003cString, AtomicLong\u003e targetMap) {\n-    for (Map.Entry\u003cString, ResourceInformation\u003e entry : allocated.getResources()\n-        .entrySet()) {\n+    for (ResourceInformation entry : allocated.getResources()) {\n       AtomicLong resourceUsed;\n-      if (!targetMap.containsKey(entry.getKey())) {\n+      if (!targetMap.containsKey(entry.getName())) {\n         resourceUsed \u003d new AtomicLong(0);\n-        targetMap.put(entry.getKey(), resourceUsed);\n+        targetMap.put(entry.getName(), resourceUsed);\n \n       }\n-      resourceUsed \u003d targetMap.get(entry.getKey());\n-      resourceUsed.addAndGet((entry.getValue().getValue() * deltaUsedMillis)\n+      resourceUsed \u003d targetMap.get(entry.getName());\n+      resourceUsed.addAndGet((entry.getValue() * deltaUsedMillis)\n           / DateUtils.MILLIS_PER_SECOND);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateUsageMap(Resource allocated, long deltaUsedMillis,\n      Map\u003cString, AtomicLong\u003e targetMap) {\n    for (ResourceInformation entry : allocated.getResources()) {\n      AtomicLong resourceUsed;\n      if (!targetMap.containsKey(entry.getName())) {\n        resourceUsed \u003d new AtomicLong(0);\n        targetMap.put(entry.getName(), resourceUsed);\n\n      }\n      resourceUsed \u003d targetMap.get(entry.getName());\n      resourceUsed.addAndGet((entry.getValue() * deltaUsedMillis)\n          / DateUtils.MILLIS_PER_SECOND);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptMetrics.java",
      "extendedDetails": {}
    },
    "dae65f3bef8ffa34d02a37041f1dfdfeeee91845": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6232. Update resource usage and preempted resource calculations to take into account all resource types. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "dae65f3bef8ffa34d02a37041f1dfdfeeee91845",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,15 @@\n+  private void updateUsageMap(Resource allocated, long deltaUsedMillis,\n+      Map\u003cString, AtomicLong\u003e targetMap) {\n+    for (Map.Entry\u003cString, ResourceInformation\u003e entry : allocated.getResources()\n+        .entrySet()) {\n+      AtomicLong resourceUsed;\n+      if (!targetMap.containsKey(entry.getKey())) {\n+        resourceUsed \u003d new AtomicLong(0);\n+        targetMap.put(entry.getKey(), resourceUsed);\n+\n+      }\n+      resourceUsed \u003d targetMap.get(entry.getKey());\n+      resourceUsed.addAndGet((entry.getValue().getValue() * deltaUsedMillis)\n+          / DateUtils.MILLIS_PER_SECOND);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateUsageMap(Resource allocated, long deltaUsedMillis,\n      Map\u003cString, AtomicLong\u003e targetMap) {\n    for (Map.Entry\u003cString, ResourceInformation\u003e entry : allocated.getResources()\n        .entrySet()) {\n      AtomicLong resourceUsed;\n      if (!targetMap.containsKey(entry.getKey())) {\n        resourceUsed \u003d new AtomicLong(0);\n        targetMap.put(entry.getKey(), resourceUsed);\n\n      }\n      resourceUsed \u003d targetMap.get(entry.getKey());\n      resourceUsed.addAndGet((entry.getValue().getValue() * deltaUsedMillis)\n          / DateUtils.MILLIS_PER_SECOND);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptMetrics.java"
    }
  }
}