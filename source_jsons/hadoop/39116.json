{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SchedulerApplicationAttempt.java",
  "functionName": "addRMContainer",
  "functionId": "addRMContainer___id-ContainerId__rmContainer-RMContainer",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
  "functionStartLine": 380,
  "functionEndLine": 403,
  "numCommitsSeen": 105,
  "timeTaken": 4013,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "fedabcad42067ac7dd24de40fab6be2d3485a540",
    "10be45986cdf86a89055065b752959bd6369d54f",
    "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
    "99e5dd68d0f44109c169d74824fa45a7396a5990"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "fedabcad42067ac7dd24de40fab6be2d3485a540": "Ybodychange",
    "10be45986cdf86a89055065b752959bd6369d54f": "Ybodychange",
    "b8a30f2f170ffbd590e7366c3c944ab4919e40df": "Ymultichange(Ymodifierchange,Ybodychange)",
    "99e5dd68d0f44109c169d74824fa45a7396a5990": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public void addRMContainer(\n       ContainerId id, RMContainer rmContainer) {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       if (!getApplicationAttemptId().equals(\n           rmContainer.getApplicationAttemptId()) \u0026\u0026\n           !liveContainers.containsKey(id)) {\n         LOG.info(\"recovered container \" + id +\n             \" from previous attempt \" + rmContainer.getApplicationAttemptId());\n         recoveredPreviousAttemptContainers.add(rmContainer.getContainer());\n       }\n       liveContainers.put(id, rmContainer);\n       if (rmContainer.getExecutionType() \u003d\u003d ExecutionType.OPPORTUNISTIC) {\n         this.attemptOpportunisticResourceUsage.incUsed(\n             rmContainer.getAllocatedResource());\n       }\n       if (rmContainer.isRemotelyAllocated()) {\n         this.attemptResourceUsageAllocatedRemotely.incUsed(\n             rmContainer.getAllocatedResource());\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addRMContainer(\n      ContainerId id, RMContainer rmContainer) {\n    writeLock.lock();\n    try {\n      if (!getApplicationAttemptId().equals(\n          rmContainer.getApplicationAttemptId()) \u0026\u0026\n          !liveContainers.containsKey(id)) {\n        LOG.info(\"recovered container \" + id +\n            \" from previous attempt \" + rmContainer.getApplicationAttemptId());\n        recoveredPreviousAttemptContainers.add(rmContainer.getContainer());\n      }\n      liveContainers.put(id, rmContainer);\n      if (rmContainer.getExecutionType() \u003d\u003d ExecutionType.OPPORTUNISTIC) {\n        this.attemptOpportunisticResourceUsage.incUsed(\n            rmContainer.getAllocatedResource());\n      }\n      if (rmContainer.isRemotelyAllocated()) {\n        this.attemptResourceUsageAllocatedRemotely.incUsed(\n            rmContainer.getAllocatedResource());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
      "extendedDetails": {}
    },
    "fedabcad42067ac7dd24de40fab6be2d3485a540": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6168. Restarted RM may not inform AM about all existing containers. Contributed by Chandni Singh\n",
      "commitDate": "27/11/17 10:19 AM",
      "commitName": "fedabcad42067ac7dd24de40fab6be2d3485a540",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/11/17 1:01 PM",
      "commitNameOld": "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
      "commitAuthorOld": "Konstantinos Karanasos",
      "daysBetweenCommits": 17.89,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,24 @@\n   public void addRMContainer(\n       ContainerId id, RMContainer rmContainer) {\n     try {\n       writeLock.lock();\n+      if (!getApplicationAttemptId().equals(\n+          rmContainer.getApplicationAttemptId()) \u0026\u0026\n+          !liveContainers.containsKey(id)) {\n+        LOG.info(\"recovered container \" + id +\n+            \" from previous attempt \" + rmContainer.getApplicationAttemptId());\n+        recoveredPreviousAttemptContainers.add(rmContainer.getContainer());\n+      }\n       liveContainers.put(id, rmContainer);\n       if (rmContainer.getExecutionType() \u003d\u003d ExecutionType.OPPORTUNISTIC) {\n         this.attemptOpportunisticResourceUsage.incUsed(\n             rmContainer.getAllocatedResource());\n       }\n       if (rmContainer.isRemotelyAllocated()) {\n         this.attemptResourceUsageAllocatedRemotely.incUsed(\n             rmContainer.getAllocatedResource());\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addRMContainer(\n      ContainerId id, RMContainer rmContainer) {\n    try {\n      writeLock.lock();\n      if (!getApplicationAttemptId().equals(\n          rmContainer.getApplicationAttemptId()) \u0026\u0026\n          !liveContainers.containsKey(id)) {\n        LOG.info(\"recovered container \" + id +\n            \" from previous attempt \" + rmContainer.getApplicationAttemptId());\n        recoveredPreviousAttemptContainers.add(rmContainer.getContainer());\n      }\n      liveContainers.put(id, rmContainer);\n      if (rmContainer.getExecutionType() \u003d\u003d ExecutionType.OPPORTUNISTIC) {\n        this.attemptOpportunisticResourceUsage.incUsed(\n            rmContainer.getAllocatedResource());\n      }\n      if (rmContainer.isRemotelyAllocated()) {\n        this.attemptResourceUsageAllocatedRemotely.incUsed(\n            rmContainer.getAllocatedResource());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
      "extendedDetails": {}
    },
    "10be45986cdf86a89055065b752959bd6369d54f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5486. Update OpportunisticContainerAllocatorAMService::allocate method to handle OPPORTUNISTIC container requests. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "29/09/16 3:11 PM",
      "commitName": "10be45986cdf86a89055065b752959bd6369d54f",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "19/09/16 2:08 AM",
      "commitNameOld": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 10.54,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,17 @@\n   public void addRMContainer(\n       ContainerId id, RMContainer rmContainer) {\n     try {\n       writeLock.lock();\n       liveContainers.put(id, rmContainer);\n+      if (rmContainer.getExecutionType() \u003d\u003d ExecutionType.OPPORTUNISTIC) {\n+        this.attemptOpportunisticResourceUsage.incUsed(\n+            rmContainer.getAllocatedResource());\n+      }\n       if (rmContainer.isRemotelyAllocated()) {\n         this.attemptResourceUsageAllocatedRemotely.incUsed(\n             rmContainer.getAllocatedResource());\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addRMContainer(\n      ContainerId id, RMContainer rmContainer) {\n    try {\n      writeLock.lock();\n      liveContainers.put(id, rmContainer);\n      if (rmContainer.getExecutionType() \u003d\u003d ExecutionType.OPPORTUNISTIC) {\n        this.attemptOpportunisticResourceUsage.incUsed(\n            rmContainer.getAllocatedResource());\n      }\n      if (rmContainer.isRemotelyAllocated()) {\n        this.attemptResourceUsageAllocatedRemotely.incUsed(\n            rmContainer.getAllocatedResource());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
      "extendedDetails": {}
    },
    "b8a30f2f170ffbd590e7366c3c944ab4919e40df": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3141. Improve locks in SchedulerApplicationAttempt/FSAppAttempt/FiCaSchedulerApp. Contributed by Wangda Tan\n",
      "commitDate": "19/09/16 2:08 AM",
      "commitName": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3141. Improve locks in SchedulerApplicationAttempt/FSAppAttempt/FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "19/09/16 2:08 AM",
          "commitName": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
          "commitAuthor": "Jian He",
          "commitDateOld": "30/08/16 3:52 PM",
          "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 19.43,
          "commitsBetweenForRepo": 91,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,13 @@\n-  public synchronized void addRMContainer(\n+  public void addRMContainer(\n       ContainerId id, RMContainer rmContainer) {\n-    liveContainers.put(id, rmContainer);\n-    if (rmContainer.isRemotelyAllocated()) {\n-      this.attemptResourceUsageAllocatedRemotely.incUsed(\n-          rmContainer.getAllocatedResource());\n+    try {\n+      writeLock.lock();\n+      liveContainers.put(id, rmContainer);\n+      if (rmContainer.isRemotelyAllocated()) {\n+        this.attemptResourceUsageAllocatedRemotely.incUsed(\n+            rmContainer.getAllocatedResource());\n+      }\n+    } finally {\n+      writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void addRMContainer(\n      ContainerId id, RMContainer rmContainer) {\n    try {\n      writeLock.lock();\n      liveContainers.put(id, rmContainer);\n      if (rmContainer.isRemotelyAllocated()) {\n        this.attemptResourceUsageAllocatedRemotely.incUsed(\n            rmContainer.getAllocatedResource());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3141. Improve locks in SchedulerApplicationAttempt/FSAppAttempt/FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "19/09/16 2:08 AM",
          "commitName": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
          "commitAuthor": "Jian He",
          "commitDateOld": "30/08/16 3:52 PM",
          "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 19.43,
          "commitsBetweenForRepo": 91,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,13 @@\n-  public synchronized void addRMContainer(\n+  public void addRMContainer(\n       ContainerId id, RMContainer rmContainer) {\n-    liveContainers.put(id, rmContainer);\n-    if (rmContainer.isRemotelyAllocated()) {\n-      this.attemptResourceUsageAllocatedRemotely.incUsed(\n-          rmContainer.getAllocatedResource());\n+    try {\n+      writeLock.lock();\n+      liveContainers.put(id, rmContainer);\n+      if (rmContainer.isRemotelyAllocated()) {\n+        this.attemptResourceUsageAllocatedRemotely.incUsed(\n+            rmContainer.getAllocatedResource());\n+      }\n+    } finally {\n+      writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void addRMContainer(\n      ContainerId id, RMContainer rmContainer) {\n    try {\n      writeLock.lock();\n      liveContainers.put(id, rmContainer);\n      if (rmContainer.isRemotelyAllocated()) {\n        this.attemptResourceUsageAllocatedRemotely.incUsed(\n            rmContainer.getAllocatedResource());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
          "extendedDetails": {}
        }
      ]
    },
    "99e5dd68d0f44109c169d74824fa45a7396a5990": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5171. Extend DistributedSchedulerProtocol to notify RM of containers allocated by the Node. (Inigo Goiri via asuresh)\n",
      "commitDate": "22/06/16 7:04 PM",
      "commitName": "99e5dd68d0f44109c169d74824fa45a7396a5990",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,8 @@\n+  public synchronized void addRMContainer(\n+      ContainerId id, RMContainer rmContainer) {\n+    liveContainers.put(id, rmContainer);\n+    if (rmContainer.isRemotelyAllocated()) {\n+      this.attemptResourceUsageAllocatedRemotely.incUsed(\n+          rmContainer.getAllocatedResource());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void addRMContainer(\n      ContainerId id, RMContainer rmContainer) {\n    liveContainers.put(id, rmContainer);\n    if (rmContainer.isRemotelyAllocated()) {\n      this.attemptResourceUsageAllocatedRemotely.incUsed(\n          rmContainer.getAllocatedResource());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java"
    }
  }
}