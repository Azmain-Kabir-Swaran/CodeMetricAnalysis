{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMClientAsyncImpl.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/async/impl/NMClientAsyncImpl.java",
  "functionStartLine": 953,
  "functionEndLine": 987,
  "numCommitsSeen": 15,
  "timeTaken": 1298,
  "changeHistory": [
    "243bcd367ff3130d74676280233041f88aca62a5",
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "52b189db908364f4737e604a1ad38673ea9e9e93",
    "edc6d7d3abac3ebad711dda43d7c6a3aeabe025b"
  ],
  "changeHistoryShort": {
    "243bcd367ff3130d74676280233041f88aca62a5": "Ybodychange",
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": "Yfilerename",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Ybodychange",
    "52b189db908364f4737e604a1ad38673ea9e9e93": "Ybodychange",
    "edc6d7d3abac3ebad711dda43d7c6a3aeabe025b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "243bcd367ff3130d74676280233041f88aca62a5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-694. Starting to use NMTokens to authenticate all communication with NodeManagers. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494369 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/13 4:19 PM",
      "commitName": "243bcd367ff3130d74676280233041f88aca62a5",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 9:02 PM",
      "commitNameOld": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.8,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n     public void run() {\n       ContainerId containerId \u003d event.getContainerId();\n       LOG.info(\"Processing Event \" + event + \" for Container \" + containerId);\n       if (event.getType() \u003d\u003d ContainerEventType.QUERY_CONTAINER) {\n         try {\n           ContainerStatus containerStatus \u003d client.getContainerStatus(\n-              containerId, event.getNodeId(), event.getContainerToken());\n+              containerId, event.getNodeId());\n           try {\n             callbackHandler.onContainerStatusReceived(\n                 containerId, containerStatus);\n           } catch (Throwable thr) {\n             // Don\u0027t process user created unchecked exception\n             LOG.info(\n                 \"Unchecked exception is thrown from onContainerStatusReceived\" +\n                     \" for Container \" + event.getContainerId(), thr);\n           }\n         } catch (YarnException e) {\n           onExceptionRaised(containerId, e);\n         } catch (IOException e) {\n           onExceptionRaised(containerId, e);\n         } catch (Throwable t) {\n           onExceptionRaised(containerId, t);\n         }\n       } else {\n         StatefulContainer container \u003d containers.get(containerId);\n         if (container \u003d\u003d null) {\n           LOG.info(\"Container \" + containerId + \" is already stopped or failed\");\n         } else {\n           container.handle(event);\n           if (isCompletelyDone(container)) {\n             containers.remove(containerId);\n           }\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      ContainerId containerId \u003d event.getContainerId();\n      LOG.info(\"Processing Event \" + event + \" for Container \" + containerId);\n      if (event.getType() \u003d\u003d ContainerEventType.QUERY_CONTAINER) {\n        try {\n          ContainerStatus containerStatus \u003d client.getContainerStatus(\n              containerId, event.getNodeId());\n          try {\n            callbackHandler.onContainerStatusReceived(\n                containerId, containerStatus);\n          } catch (Throwable thr) {\n            // Don\u0027t process user created unchecked exception\n            LOG.info(\n                \"Unchecked exception is thrown from onContainerStatusReceived\" +\n                    \" for Container \" + event.getContainerId(), thr);\n          }\n        } catch (YarnException e) {\n          onExceptionRaised(containerId, e);\n        } catch (IOException e) {\n          onExceptionRaised(containerId, e);\n        } catch (Throwable t) {\n          onExceptionRaised(containerId, t);\n        }\n      } else {\n        StatefulContainer container \u003d containers.get(containerId);\n        if (container \u003d\u003d null) {\n          LOG.info(\"Container \" + containerId + \" is already stopped or failed\");\n        } else {\n          container.handle(event);\n          if (isCompletelyDone(container)) {\n            containers.remove(containerId);\n          }\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/async/impl/NMClientAsyncImpl.java",
      "extendedDetails": {}
    },
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": {
      "type": "Yfilerename",
      "commitMessage": "YARN-834. Fixed annotations for yarn-client module, reorganized packages and clearly differentiated *Async apis. Contributed by Arun C Murthy and Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494017 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/06/13 9:02 PM",
      "commitName": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 8:10 PM",
      "commitNameOld": "2b14656ab5050dd75935b64681cdc25fb49db94f",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void run() {\n      ContainerId containerId \u003d event.getContainerId();\n      LOG.info(\"Processing Event \" + event + \" for Container \" + containerId);\n      if (event.getType() \u003d\u003d ContainerEventType.QUERY_CONTAINER) {\n        try {\n          ContainerStatus containerStatus \u003d client.getContainerStatus(\n              containerId, event.getNodeId(), event.getContainerToken());\n          try {\n            callbackHandler.onContainerStatusReceived(\n                containerId, containerStatus);\n          } catch (Throwable thr) {\n            // Don\u0027t process user created unchecked exception\n            LOG.info(\n                \"Unchecked exception is thrown from onContainerStatusReceived\" +\n                    \" for Container \" + event.getContainerId(), thr);\n          }\n        } catch (YarnException e) {\n          onExceptionRaised(containerId, e);\n        } catch (IOException e) {\n          onExceptionRaised(containerId, e);\n        } catch (Throwable t) {\n          onExceptionRaised(containerId, t);\n        }\n      } else {\n        StatefulContainer container \u003d containers.get(containerId);\n        if (container \u003d\u003d null) {\n          LOG.info(\"Container \" + containerId + \" is already stopped or failed\");\n        } else {\n          container.handle(event);\n          if (isCompletelyDone(container)) {\n            containers.remove(containerId);\n          }\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/async/impl/NMClientAsyncImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/NMClientAsync.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/async/impl/NMClientAsyncImpl.java"
      }
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Ybodychange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "02/06/13 9:11 PM",
      "commitNameOld": "52b189db908364f4737e604a1ad38673ea9e9e93",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 1.0,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n     public void run() {\n       ContainerId containerId \u003d event.getContainerId();\n       LOG.info(\"Processing Event \" + event + \" for Container \" + containerId);\n       if (event.getType() \u003d\u003d ContainerEventType.QUERY_CONTAINER) {\n         try {\n           ContainerStatus containerStatus \u003d client.getContainerStatus(\n               containerId, event.getNodeId(), event.getContainerToken());\n           try {\n             callbackHandler.onContainerStatusReceived(\n                 containerId, containerStatus);\n           } catch (Throwable thr) {\n             // Don\u0027t process user created unchecked exception\n             LOG.info(\n                 \"Unchecked exception is thrown from onContainerStatusReceived\" +\n                     \" for Container \" + event.getContainerId(), thr);\n           }\n-        } catch (YarnRemoteException e) {\n+        } catch (YarnException e) {\n           onExceptionRaised(containerId, e);\n         } catch (IOException e) {\n           onExceptionRaised(containerId, e);\n         } catch (Throwable t) {\n           onExceptionRaised(containerId, t);\n         }\n       } else {\n         StatefulContainer container \u003d containers.get(containerId);\n         if (container \u003d\u003d null) {\n           LOG.info(\"Container \" + containerId + \" is already stopped or failed\");\n         } else {\n           container.handle(event);\n           if (isCompletelyDone(container)) {\n             containers.remove(containerId);\n           }\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      ContainerId containerId \u003d event.getContainerId();\n      LOG.info(\"Processing Event \" + event + \" for Container \" + containerId);\n      if (event.getType() \u003d\u003d ContainerEventType.QUERY_CONTAINER) {\n        try {\n          ContainerStatus containerStatus \u003d client.getContainerStatus(\n              containerId, event.getNodeId(), event.getContainerToken());\n          try {\n            callbackHandler.onContainerStatusReceived(\n                containerId, containerStatus);\n          } catch (Throwable thr) {\n            // Don\u0027t process user created unchecked exception\n            LOG.info(\n                \"Unchecked exception is thrown from onContainerStatusReceived\" +\n                    \" for Container \" + event.getContainerId(), thr);\n          }\n        } catch (YarnException e) {\n          onExceptionRaised(containerId, e);\n        } catch (IOException e) {\n          onExceptionRaised(containerId, e);\n        } catch (Throwable t) {\n          onExceptionRaised(containerId, t);\n        }\n      } else {\n        StatefulContainer container \u003d containers.get(containerId);\n        if (container \u003d\u003d null) {\n          LOG.info(\"Container \" + containerId + \" is already stopped or failed\");\n        } else {\n          container.handle(event);\n          if (isCompletelyDone(container)) {\n            containers.remove(containerId);\n          }\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/NMClientAsync.java",
      "extendedDetails": {}
    },
    "52b189db908364f4737e604a1ad38673ea9e9e93": {
      "type": "Ybodychange",
      "commitMessage": "YARN-730. Fix NMClientAsync to remove completed containers. Contributed by Zhijie Shen.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488840 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/06/13 9:11 PM",
      "commitName": "52b189db908364f4737e604a1ad38673ea9e9e93",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "01/06/13 2:43 PM",
      "commitNameOld": "a2c42330047bf955a6a585dcddf798920d4c8640",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 1.27,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,35 @@\n     public void run() {\n       ContainerId containerId \u003d event.getContainerId();\n       LOG.info(\"Processing Event \" + event + \" for Container \" + containerId);\n       if (event.getType() \u003d\u003d ContainerEventType.QUERY_CONTAINER) {\n         try {\n           ContainerStatus containerStatus \u003d client.getContainerStatus(\n               containerId, event.getNodeId(), event.getContainerToken());\n           try {\n             callbackHandler.onContainerStatusReceived(\n                 containerId, containerStatus);\n           } catch (Throwable thr) {\n             // Don\u0027t process user created unchecked exception\n             LOG.info(\n                 \"Unchecked exception is thrown from onContainerStatusReceived\" +\n                     \" for Container \" + event.getContainerId(), thr);\n           }\n         } catch (YarnRemoteException e) {\n           onExceptionRaised(containerId, e);\n         } catch (IOException e) {\n           onExceptionRaised(containerId, e);\n         } catch (Throwable t) {\n           onExceptionRaised(containerId, t);\n         }\n       } else {\n         StatefulContainer container \u003d containers.get(containerId);\n         if (container \u003d\u003d null) {\n           LOG.info(\"Container \" + containerId + \" is already stopped or failed\");\n         } else {\n           container.handle(event);\n+          if (isCompletelyDone(container)) {\n+            containers.remove(containerId);\n+          }\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      ContainerId containerId \u003d event.getContainerId();\n      LOG.info(\"Processing Event \" + event + \" for Container \" + containerId);\n      if (event.getType() \u003d\u003d ContainerEventType.QUERY_CONTAINER) {\n        try {\n          ContainerStatus containerStatus \u003d client.getContainerStatus(\n              containerId, event.getNodeId(), event.getContainerToken());\n          try {\n            callbackHandler.onContainerStatusReceived(\n                containerId, containerStatus);\n          } catch (Throwable thr) {\n            // Don\u0027t process user created unchecked exception\n            LOG.info(\n                \"Unchecked exception is thrown from onContainerStatusReceived\" +\n                    \" for Container \" + event.getContainerId(), thr);\n          }\n        } catch (YarnRemoteException e) {\n          onExceptionRaised(containerId, e);\n        } catch (IOException e) {\n          onExceptionRaised(containerId, e);\n        } catch (Throwable t) {\n          onExceptionRaised(containerId, t);\n        }\n      } else {\n        StatefulContainer container \u003d containers.get(containerId);\n        if (container \u003d\u003d null) {\n          LOG.info(\"Container \" + containerId + \" is already stopped or failed\");\n        } else {\n          container.handle(event);\n          if (isCompletelyDone(container)) {\n            containers.remove(containerId);\n          }\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/NMClientAsync.java",
      "extendedDetails": {}
    },
    "edc6d7d3abac3ebad711dda43d7c6a3aeabe025b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-422. Add a NM Client library to help application-writers. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1487184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/05/13 6:41 PM",
      "commitName": "edc6d7d3abac3ebad711dda43d7c6a3aeabe025b",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,32 @@\n+    public void run() {\n+      ContainerId containerId \u003d event.getContainerId();\n+      LOG.info(\"Processing Event \" + event + \" for Container \" + containerId);\n+      if (event.getType() \u003d\u003d ContainerEventType.QUERY_CONTAINER) {\n+        try {\n+          ContainerStatus containerStatus \u003d client.getContainerStatus(\n+              containerId, event.getNodeId(), event.getContainerToken());\n+          try {\n+            callbackHandler.onContainerStatusReceived(\n+                containerId, containerStatus);\n+          } catch (Throwable thr) {\n+            // Don\u0027t process user created unchecked exception\n+            LOG.info(\n+                \"Unchecked exception is thrown from onContainerStatusReceived\" +\n+                    \" for Container \" + event.getContainerId(), thr);\n+          }\n+        } catch (YarnRemoteException e) {\n+          onExceptionRaised(containerId, e);\n+        } catch (IOException e) {\n+          onExceptionRaised(containerId, e);\n+        } catch (Throwable t) {\n+          onExceptionRaised(containerId, t);\n+        }\n+      } else {\n+        StatefulContainer container \u003d containers.get(containerId);\n+        if (container \u003d\u003d null) {\n+          LOG.info(\"Container \" + containerId + \" is already stopped or failed\");\n+        } else {\n+          container.handle(event);\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      ContainerId containerId \u003d event.getContainerId();\n      LOG.info(\"Processing Event \" + event + \" for Container \" + containerId);\n      if (event.getType() \u003d\u003d ContainerEventType.QUERY_CONTAINER) {\n        try {\n          ContainerStatus containerStatus \u003d client.getContainerStatus(\n              containerId, event.getNodeId(), event.getContainerToken());\n          try {\n            callbackHandler.onContainerStatusReceived(\n                containerId, containerStatus);\n          } catch (Throwable thr) {\n            // Don\u0027t process user created unchecked exception\n            LOG.info(\n                \"Unchecked exception is thrown from onContainerStatusReceived\" +\n                    \" for Container \" + event.getContainerId(), thr);\n          }\n        } catch (YarnRemoteException e) {\n          onExceptionRaised(containerId, e);\n        } catch (IOException e) {\n          onExceptionRaised(containerId, e);\n        } catch (Throwable t) {\n          onExceptionRaised(containerId, t);\n        }\n      } else {\n        StatefulContainer container \u003d containers.get(containerId);\n        if (container \u003d\u003d null) {\n          LOG.info(\"Container \" + containerId + \" is already stopped or failed\");\n        } else {\n          container.handle(event);\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/NMClientAsync.java"
    }
  }
}