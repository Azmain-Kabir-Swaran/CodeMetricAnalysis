{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockBlobAppendStream.java",
  "functionName": "addBlockUploadCommand",
  "functionId": "addBlockUploadCommand",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/BlockBlobAppendStream.java",
  "functionStartLine": 1069,
  "functionEndLine": 1091,
  "numCommitsSeen": 7,
  "timeTaken": 1631,
  "changeHistory": [
    "13eda5000304099d1145631f9be13ce8a00b600d"
  ],
  "changeHistoryShort": {
    "13eda5000304099d1145631f9be13ce8a00b600d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "13eda5000304099d1145631f9be13ce8a00b600d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14520. WASB: Block compaction for Azure Block Blobs.\nContributed by Georgi Chalakov\n",
      "commitDate": "07/09/17 10:35 AM",
      "commitName": "13eda5000304099d1145631f9be13ce8a00b600d",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,23 @@\n+  private synchronized void addBlockUploadCommand() throws IOException {\n+\n+    maybeThrowFirstError();\n+\n+    if (blobExist \u0026\u0026 lease.isFreed()) {\n+      throw new AzureException(String.format(\n+          \"Attempting to upload a block on blob : %s \"\n+              + \" that does not have lease on the Blob. Failing upload\", key));\n+    }\n+\n+    int blockSize \u003d outBuffer.position();\n+    if (blockSize \u003e 0) {\n+      UploadCommand command \u003d new UploadBlockCommand(generateBlockId(),\n+          outBuffer);\n+      activeBlockCommands.add(command);\n+\n+      blobLength +\u003d blockSize;\n+      outBuffer \u003d poolReadyByteBuffers.getBuffer(false, maxBlockSize.get());\n+\n+      ioThreadPool.execute(new WriteRequest(command));\n+\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addBlockUploadCommand() throws IOException {\n\n    maybeThrowFirstError();\n\n    if (blobExist \u0026\u0026 lease.isFreed()) {\n      throw new AzureException(String.format(\n          \"Attempting to upload a block on blob : %s \"\n              + \" that does not have lease on the Blob. Failing upload\", key));\n    }\n\n    int blockSize \u003d outBuffer.position();\n    if (blockSize \u003e 0) {\n      UploadCommand command \u003d new UploadBlockCommand(generateBlockId(),\n          outBuffer);\n      activeBlockCommands.add(command);\n\n      blobLength +\u003d blockSize;\n      outBuffer \u003d poolReadyByteBuffers.getBuffer(false, maxBlockSize.get());\n\n      ioThreadPool.execute(new WriteRequest(command));\n\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/BlockBlobAppendStream.java"
    }
  }
}