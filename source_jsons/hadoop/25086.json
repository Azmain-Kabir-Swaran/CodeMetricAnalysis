{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientServiceDelegate.java",
  "functionName": "getNotRunningJob",
  "functionId": "getNotRunningJob___applicationReport-ApplicationReport__state-JobState",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
  "functionStartLine": 127,
  "functionEndLine": 145,
  "numCommitsSeen": 56,
  "timeTaken": 1407,
  "changeHistory": [
    "a5c9ede1433871fcf4e2e802ee2a65950ecd1e72",
    "6bdf5746d5d677f9c17598768c4ae86384c000c6"
  ],
  "changeHistoryShort": {
    "a5c9ede1433871fcf4e2e802ee2a65950ecd1e72": "Ymultichange(Yparameterchange,Ybodychange)",
    "6bdf5746d5d677f9c17598768c4ae86384c000c6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a5c9ede1433871fcf4e2e802ee2a65950ecd1e72": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-2952. Fixed ResourceManager/MR-client to consume diagnostics for AM failures in a couple of corner cases. Contributed by Arun C Murthy.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1175403 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/09/11 7:46 AM",
      "commitName": "a5c9ede1433871fcf4e2e802ee2a65950ecd1e72",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-2952. Fixed ResourceManager/MR-client to consume diagnostics for AM failures in a couple of corner cases. Contributed by Arun C Murthy.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1175403 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/09/11 7:46 AM",
          "commitName": "a5c9ede1433871fcf4e2e802ee2a65950ecd1e72",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "19/09/11 5:26 AM",
          "commitNameOld": "29552eeb36dd8a9246fb648d65b5cfb94ae46d77",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 6.1,
          "commitsBetweenForRepo": 43,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,19 @@\n-  private NotRunningJob getNotRunningJob(String user, JobState state) {\n+  private NotRunningJob getNotRunningJob(ApplicationReport applicationReport, \n+      JobState state) {\n     synchronized (notRunningJobs) {\n       HashMap\u003cString, NotRunningJob\u003e map \u003d notRunningJobs.get(state);\n       if (map \u003d\u003d null) {\n         map \u003d new HashMap\u003cString, NotRunningJob\u003e();\n         notRunningJobs.put(state, map);\n       }\n+      String user \u003d \n+          (applicationReport \u003d\u003d null) ? \n+              UNKNOWN_USER : applicationReport.getUser();\n       NotRunningJob notRunningJob \u003d map.get(user);\n       if (notRunningJob \u003d\u003d null) {\n-        notRunningJob \u003d new NotRunningJob(user, state);\n+        notRunningJob \u003d new NotRunningJob(applicationReport, state);\n         map.put(user, notRunningJob);\n       }\n       return notRunningJob;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private NotRunningJob getNotRunningJob(ApplicationReport applicationReport, \n      JobState state) {\n    synchronized (notRunningJobs) {\n      HashMap\u003cString, NotRunningJob\u003e map \u003d notRunningJobs.get(state);\n      if (map \u003d\u003d null) {\n        map \u003d new HashMap\u003cString, NotRunningJob\u003e();\n        notRunningJobs.put(state, map);\n      }\n      String user \u003d \n          (applicationReport \u003d\u003d null) ? \n              UNKNOWN_USER : applicationReport.getUser();\n      NotRunningJob notRunningJob \u003d map.get(user);\n      if (notRunningJob \u003d\u003d null) {\n        notRunningJob \u003d new NotRunningJob(applicationReport, state);\n        map.put(user, notRunningJob);\n      }\n      return notRunningJob;\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
          "extendedDetails": {
            "oldValue": "[user-String, state-JobState]",
            "newValue": "[applicationReport-ApplicationReport, state-JobState]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-2952. Fixed ResourceManager/MR-client to consume diagnostics for AM failures in a couple of corner cases. Contributed by Arun C Murthy.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1175403 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/09/11 7:46 AM",
          "commitName": "a5c9ede1433871fcf4e2e802ee2a65950ecd1e72",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "19/09/11 5:26 AM",
          "commitNameOld": "29552eeb36dd8a9246fb648d65b5cfb94ae46d77",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 6.1,
          "commitsBetweenForRepo": 43,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,19 @@\n-  private NotRunningJob getNotRunningJob(String user, JobState state) {\n+  private NotRunningJob getNotRunningJob(ApplicationReport applicationReport, \n+      JobState state) {\n     synchronized (notRunningJobs) {\n       HashMap\u003cString, NotRunningJob\u003e map \u003d notRunningJobs.get(state);\n       if (map \u003d\u003d null) {\n         map \u003d new HashMap\u003cString, NotRunningJob\u003e();\n         notRunningJobs.put(state, map);\n       }\n+      String user \u003d \n+          (applicationReport \u003d\u003d null) ? \n+              UNKNOWN_USER : applicationReport.getUser();\n       NotRunningJob notRunningJob \u003d map.get(user);\n       if (notRunningJob \u003d\u003d null) {\n-        notRunningJob \u003d new NotRunningJob(user, state);\n+        notRunningJob \u003d new NotRunningJob(applicationReport, state);\n         map.put(user, notRunningJob);\n       }\n       return notRunningJob;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private NotRunningJob getNotRunningJob(ApplicationReport applicationReport, \n      JobState state) {\n    synchronized (notRunningJobs) {\n      HashMap\u003cString, NotRunningJob\u003e map \u003d notRunningJobs.get(state);\n      if (map \u003d\u003d null) {\n        map \u003d new HashMap\u003cString, NotRunningJob\u003e();\n        notRunningJobs.put(state, map);\n      }\n      String user \u003d \n          (applicationReport \u003d\u003d null) ? \n              UNKNOWN_USER : applicationReport.getUser();\n      NotRunningJob notRunningJob \u003d map.get(user);\n      if (notRunningJob \u003d\u003d null) {\n        notRunningJob \u003d new NotRunningJob(applicationReport, state);\n        map.put(user, notRunningJob);\n      }\n      return notRunningJob;\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
          "extendedDetails": {}
        }
      ]
    },
    "6bdf5746d5d677f9c17598768c4ae86384c000c6": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2716. MRReliabilityTest job fails because of missing job-file. Contributed by Jeffrey Naisbitt.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1164805 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/09/11 11:22 PM",
      "commitName": "6bdf5746d5d677f9c17598768c4ae86384c000c6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,15 @@\n+  private NotRunningJob getNotRunningJob(String user, JobState state) {\n+    synchronized (notRunningJobs) {\n+      HashMap\u003cString, NotRunningJob\u003e map \u003d notRunningJobs.get(state);\n+      if (map \u003d\u003d null) {\n+        map \u003d new HashMap\u003cString, NotRunningJob\u003e();\n+        notRunningJobs.put(state, map);\n+      }\n+      NotRunningJob notRunningJob \u003d map.get(user);\n+      if (notRunningJob \u003d\u003d null) {\n+        notRunningJob \u003d new NotRunningJob(user, state);\n+        map.put(user, notRunningJob);\n+      }\n+      return notRunningJob;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private NotRunningJob getNotRunningJob(String user, JobState state) {\n    synchronized (notRunningJobs) {\n      HashMap\u003cString, NotRunningJob\u003e map \u003d notRunningJobs.get(state);\n      if (map \u003d\u003d null) {\n        map \u003d new HashMap\u003cString, NotRunningJob\u003e();\n        notRunningJobs.put(state, map);\n      }\n      NotRunningJob notRunningJob \u003d map.get(user);\n      if (notRunningJob \u003d\u003d null) {\n        notRunningJob \u003d new NotRunningJob(user, state);\n        map.put(user, notRunningJob);\n      }\n      return notRunningJob;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java"
    }
  }
}