{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacityScheduler.java",
  "functionName": "validateConf",
  "functionId": "validateConf___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
  "functionStartLine": 208,
  "functionEndLine": 213,
  "numCommitsSeen": 239,
  "timeTaken": 5733,
  "changeHistory": [
    "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960",
    "334de8d21189109dcd2423d13fab56477980872b"
  ],
  "changeHistoryShort": {
    "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960": "Ybodychange",
    "334de8d21189109dcd2423d13fab56477980872b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10022. RM Rest API to validate the CapacityScheduler Configuration change\n\nContributed by Kinga Marton.\n",
      "commitDate": "28/01/20 9:46 AM",
      "commitName": "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960",
      "commitAuthor": "Prabhu Joseph",
      "commitDateOld": "05/12/19 11:21 PM",
      "commitNameOld": "e575df5ca6f9630199b5c1696136184e88af3160",
      "commitAuthorOld": "prabhujoseph",
      "daysBetweenCommits": 53.43,
      "commitsBetweenForRepo": 176,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,6 @@\n   private void validateConf(Configuration conf) {\n     // validate scheduler memory allocation setting\n-    int minMem \u003d conf.getInt(\n-      YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB,\n-      YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_MB);\n-    int maxMem \u003d conf.getInt(\n-      YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB,\n-      YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB);\n-\n-    if (minMem \u003c\u003d 0 || minMem \u003e maxMem) {\n-      throw new YarnRuntimeException(\"Invalid resource scheduler memory\"\n-        + \" allocation configuration\"\n-        + \", \" + YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB\n-        + \"\u003d\" + minMem\n-        + \", \" + YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB\n-        + \"\u003d\" + maxMem + \", min and max should be greater than 0\"\n-        + \", max should be no smaller than min.\");\n-    }\n-\n+    CapacitySchedulerConfigValidator.validateMemoryAllocation(conf);\n     // validate scheduler vcores allocation setting\n-    int minVcores \u003d conf.getInt(\n-      YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES,\n-      YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES);\n-    int maxVcores \u003d conf.getInt(\n-      YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES,\n-      YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES);\n-\n-    if (minVcores \u003c\u003d 0 || minVcores \u003e maxVcores) {\n-      throw new YarnRuntimeException(\"Invalid resource scheduler vcores\"\n-        + \" allocation configuration\"\n-        + \", \" + YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES\n-        + \"\u003d\" + minVcores\n-        + \", \" + YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES\n-        + \"\u003d\" + maxVcores + \", min and max should be greater than 0\"\n-        + \", max should be no smaller than min.\");\n-    }\n+    CapacitySchedulerConfigValidator.validateVCores(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void validateConf(Configuration conf) {\n    // validate scheduler memory allocation setting\n    CapacitySchedulerConfigValidator.validateMemoryAllocation(conf);\n    // validate scheduler vcores allocation setting\n    CapacitySchedulerConfigValidator.validateVCores(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "334de8d21189109dcd2423d13fab56477980872b": {
      "type": "Yintroduced",
      "commitMessage": " ARN-803. factor out scheduler config validation from the ResourceManager to each scheduler implementation. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493160 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/06/13 10:07 AM",
      "commitName": "334de8d21189109dcd2423d13fab56477980872b",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,37 @@\n+  private void validateConf(Configuration conf) {\n+    // validate scheduler memory allocation setting\n+    int minMem \u003d conf.getInt(\n+      YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB,\n+      YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_MB);\n+    int maxMem \u003d conf.getInt(\n+      YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB,\n+      YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB);\n+\n+    if (minMem \u003c\u003d 0 || minMem \u003e maxMem) {\n+      throw new YarnRuntimeException(\"Invalid resource scheduler memory\"\n+        + \" allocation configuration\"\n+        + \", \" + YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB\n+        + \"\u003d\" + minMem\n+        + \", \" + YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB\n+        + \"\u003d\" + maxMem + \", min and max should be greater than 0\"\n+        + \", max should be no smaller than min.\");\n+    }\n+\n+    // validate scheduler vcores allocation setting\n+    int minVcores \u003d conf.getInt(\n+      YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES,\n+      YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES);\n+    int maxVcores \u003d conf.getInt(\n+      YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES,\n+      YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES);\n+\n+    if (minVcores \u003c\u003d 0 || minVcores \u003e maxVcores) {\n+      throw new YarnRuntimeException(\"Invalid resource scheduler vcores\"\n+        + \" allocation configuration\"\n+        + \", \" + YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES\n+        + \"\u003d\" + minVcores\n+        + \", \" + YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES\n+        + \"\u003d\" + maxVcores + \", min and max should be greater than 0\"\n+        + \", max should be no smaller than min.\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void validateConf(Configuration conf) {\n    // validate scheduler memory allocation setting\n    int minMem \u003d conf.getInt(\n      YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB,\n      YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_MB);\n    int maxMem \u003d conf.getInt(\n      YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB,\n      YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_MB);\n\n    if (minMem \u003c\u003d 0 || minMem \u003e maxMem) {\n      throw new YarnRuntimeException(\"Invalid resource scheduler memory\"\n        + \" allocation configuration\"\n        + \", \" + YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_MB\n        + \"\u003d\" + minMem\n        + \", \" + YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_MB\n        + \"\u003d\" + maxMem + \", min and max should be greater than 0\"\n        + \", max should be no smaller than min.\");\n    }\n\n    // validate scheduler vcores allocation setting\n    int minVcores \u003d conf.getInt(\n      YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES,\n      YarnConfiguration.DEFAULT_RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES);\n    int maxVcores \u003d conf.getInt(\n      YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES,\n      YarnConfiguration.DEFAULT_RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES);\n\n    if (minVcores \u003c\u003d 0 || minVcores \u003e maxVcores) {\n      throw new YarnRuntimeException(\"Invalid resource scheduler vcores\"\n        + \" allocation configuration\"\n        + \", \" + YarnConfiguration.RM_SCHEDULER_MINIMUM_ALLOCATION_VCORES\n        + \"\u003d\" + minVcores\n        + \", \" + YarnConfiguration.RM_SCHEDULER_MAXIMUM_ALLOCATION_VCORES\n        + \"\u003d\" + maxVcores + \", min and max should be greater than 0\"\n        + \", max should be no smaller than min.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java"
    }
  }
}