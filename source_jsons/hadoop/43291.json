{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProviderUtils.java",
  "functionName": "substituteStrWithTokens",
  "functionId": "substituteStrWithTokens___content-String__tokensForSubstitution-Map__String,String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/ProviderUtils.java",
  "functionStartLine": 147,
  "functionEndLine": 154,
  "numCommitsSeen": 40,
  "timeTaken": 5158,
  "changeHistory": [
    "40ab068eabe50875449d601471619a4e82fff86d",
    "1888318c89776f0bf354c1b13e3ee169e14ff638",
    "845764da146e98927e8ea5b2209f19f4fc3feda5",
    "c31cd981ebabc0747cabcc07a8c8797619ed2c53"
  ],
  "changeHistoryShort": {
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yfilerename",
    "845764da146e98927e8ea5b2209f19f4fc3feda5": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
    "c31cd981ebabc0747cabcc07a8c8797619ed2c53": "Yintroduced"
  },
  "changeHistoryDetails": {
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static String substituteStrWithTokens(String content,\n      Map\u003cString, String\u003e tokensForSubstitution) {\n    for (Map.Entry\u003cString, String\u003e token : tokensForSubstitution.entrySet()) {\n      content \u003d\n          content.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n    }\n    return content;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/ProviderUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/provider/ProviderUtils.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/ProviderUtils.java"
      }
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yfilerename",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static String substituteStrWithTokens(String content,\n      Map\u003cString, String\u003e tokensForSubstitution) {\n    for (Map.Entry\u003cString, String\u003e token : tokensForSubstitution.entrySet()) {\n      content \u003d\n          content.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n    }\n    return content;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/provider/ProviderUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/providers/ProviderUtils.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/provider/ProviderUtils.java"
      }
    },
    "845764da146e98927e8ea5b2209f19f4fc3feda5": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-6405. Improve configuring services through REST API. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "845764da146e98927e8ea5b2209f19f4fc3feda5",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-6405. Improve configuring services through REST API. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:28 PM",
          "commitName": "845764da146e98927e8ea5b2209f19f4fc3feda5",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:28 PM",
          "commitNameOld": "c31cd981ebabc0747cabcc07a8c8797619ed2c53",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,8 @@\n-  public Map\u003cString, String\u003e substituteConfigs(Map\u003cString, String\u003e configs,\n-      Map\u003cString, String\u003e tokenMap) {\n-    String format \u003d \"${%s}\";\n-    Map\u003cString, String\u003e filteredOptions \u003d new HashMap\u003c\u003e();\n-    for (Map.Entry\u003cString, String\u003e entry : configs.entrySet()) {\n-      String key \u003d entry.getKey();\n-      String value \u003d entry.getValue();\n-      if (tokenMap !\u003d null) {\n-        for (Map.Entry\u003cString, String\u003e token : tokenMap.entrySet()) {\n-          value \u003d\n-              value.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n-        }\n-      }\n-      filteredOptions.put(String.format(format, key), value);\n+  public static String substituteStrWithTokens(String content,\n+      Map\u003cString, String\u003e tokensForSubstitution) {\n+    for (Map.Entry\u003cString, String\u003e token : tokensForSubstitution.entrySet()) {\n+      content \u003d\n+          content.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n     }\n-\n-    return filteredOptions;\n+    return content;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String substituteStrWithTokens(String content,\n      Map\u003cString, String\u003e tokensForSubstitution) {\n    for (Map.Entry\u003cString, String\u003e token : tokensForSubstitution.entrySet()) {\n      content \u003d\n          content.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n    }\n    return content;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/providers/ProviderUtils.java",
          "extendedDetails": {
            "oldValue": "substituteConfigs",
            "newValue": "substituteStrWithTokens"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6405. Improve configuring services through REST API. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:28 PM",
          "commitName": "845764da146e98927e8ea5b2209f19f4fc3feda5",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:28 PM",
          "commitNameOld": "c31cd981ebabc0747cabcc07a8c8797619ed2c53",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,8 @@\n-  public Map\u003cString, String\u003e substituteConfigs(Map\u003cString, String\u003e configs,\n-      Map\u003cString, String\u003e tokenMap) {\n-    String format \u003d \"${%s}\";\n-    Map\u003cString, String\u003e filteredOptions \u003d new HashMap\u003c\u003e();\n-    for (Map.Entry\u003cString, String\u003e entry : configs.entrySet()) {\n-      String key \u003d entry.getKey();\n-      String value \u003d entry.getValue();\n-      if (tokenMap !\u003d null) {\n-        for (Map.Entry\u003cString, String\u003e token : tokenMap.entrySet()) {\n-          value \u003d\n-              value.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n-        }\n-      }\n-      filteredOptions.put(String.format(format, key), value);\n+  public static String substituteStrWithTokens(String content,\n+      Map\u003cString, String\u003e tokensForSubstitution) {\n+    for (Map.Entry\u003cString, String\u003e token : tokensForSubstitution.entrySet()) {\n+      content \u003d\n+          content.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n     }\n-\n-    return filteredOptions;\n+    return content;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String substituteStrWithTokens(String content,\n      Map\u003cString, String\u003e tokensForSubstitution) {\n    for (Map.Entry\u003cString, String\u003e token : tokensForSubstitution.entrySet()) {\n      content \u003d\n          content.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n    }\n    return content;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/providers/ProviderUtils.java",
          "extendedDetails": {
            "oldValue": "[configs-Map\u003cString,String\u003e, tokenMap-Map\u003cString,String\u003e]",
            "newValue": "[content-String, tokensForSubstitution-Map\u003cString,String\u003e]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-6405. Improve configuring services through REST API. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:28 PM",
          "commitName": "845764da146e98927e8ea5b2209f19f4fc3feda5",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:28 PM",
          "commitNameOld": "c31cd981ebabc0747cabcc07a8c8797619ed2c53",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,8 @@\n-  public Map\u003cString, String\u003e substituteConfigs(Map\u003cString, String\u003e configs,\n-      Map\u003cString, String\u003e tokenMap) {\n-    String format \u003d \"${%s}\";\n-    Map\u003cString, String\u003e filteredOptions \u003d new HashMap\u003c\u003e();\n-    for (Map.Entry\u003cString, String\u003e entry : configs.entrySet()) {\n-      String key \u003d entry.getKey();\n-      String value \u003d entry.getValue();\n-      if (tokenMap !\u003d null) {\n-        for (Map.Entry\u003cString, String\u003e token : tokenMap.entrySet()) {\n-          value \u003d\n-              value.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n-        }\n-      }\n-      filteredOptions.put(String.format(format, key), value);\n+  public static String substituteStrWithTokens(String content,\n+      Map\u003cString, String\u003e tokensForSubstitution) {\n+    for (Map.Entry\u003cString, String\u003e token : tokensForSubstitution.entrySet()) {\n+      content \u003d\n+          content.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n     }\n-\n-    return filteredOptions;\n+    return content;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String substituteStrWithTokens(String content,\n      Map\u003cString, String\u003e tokensForSubstitution) {\n    for (Map.Entry\u003cString, String\u003e token : tokensForSubstitution.entrySet()) {\n      content \u003d\n          content.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n    }\n    return content;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/providers/ProviderUtils.java",
          "extendedDetails": {
            "oldValue": "Map\u003cString,String\u003e",
            "newValue": "String"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-6405. Improve configuring services through REST API. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:28 PM",
          "commitName": "845764da146e98927e8ea5b2209f19f4fc3feda5",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:28 PM",
          "commitNameOld": "c31cd981ebabc0747cabcc07a8c8797619ed2c53",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,8 @@\n-  public Map\u003cString, String\u003e substituteConfigs(Map\u003cString, String\u003e configs,\n-      Map\u003cString, String\u003e tokenMap) {\n-    String format \u003d \"${%s}\";\n-    Map\u003cString, String\u003e filteredOptions \u003d new HashMap\u003c\u003e();\n-    for (Map.Entry\u003cString, String\u003e entry : configs.entrySet()) {\n-      String key \u003d entry.getKey();\n-      String value \u003d entry.getValue();\n-      if (tokenMap !\u003d null) {\n-        for (Map.Entry\u003cString, String\u003e token : tokenMap.entrySet()) {\n-          value \u003d\n-              value.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n-        }\n-      }\n-      filteredOptions.put(String.format(format, key), value);\n+  public static String substituteStrWithTokens(String content,\n+      Map\u003cString, String\u003e tokensForSubstitution) {\n+    for (Map.Entry\u003cString, String\u003e token : tokensForSubstitution.entrySet()) {\n+      content \u003d\n+          content.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n     }\n-\n-    return filteredOptions;\n+    return content;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String substituteStrWithTokens(String content,\n      Map\u003cString, String\u003e tokensForSubstitution) {\n    for (Map.Entry\u003cString, String\u003e token : tokensForSubstitution.entrySet()) {\n      content \u003d\n          content.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n    }\n    return content;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/providers/ProviderUtils.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6405. Improve configuring services through REST API. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:28 PM",
          "commitName": "845764da146e98927e8ea5b2209f19f4fc3feda5",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:28 PM",
          "commitNameOld": "c31cd981ebabc0747cabcc07a8c8797619ed2c53",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,8 @@\n-  public Map\u003cString, String\u003e substituteConfigs(Map\u003cString, String\u003e configs,\n-      Map\u003cString, String\u003e tokenMap) {\n-    String format \u003d \"${%s}\";\n-    Map\u003cString, String\u003e filteredOptions \u003d new HashMap\u003c\u003e();\n-    for (Map.Entry\u003cString, String\u003e entry : configs.entrySet()) {\n-      String key \u003d entry.getKey();\n-      String value \u003d entry.getValue();\n-      if (tokenMap !\u003d null) {\n-        for (Map.Entry\u003cString, String\u003e token : tokenMap.entrySet()) {\n-          value \u003d\n-              value.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n-        }\n-      }\n-      filteredOptions.put(String.format(format, key), value);\n+  public static String substituteStrWithTokens(String content,\n+      Map\u003cString, String\u003e tokensForSubstitution) {\n+    for (Map.Entry\u003cString, String\u003e token : tokensForSubstitution.entrySet()) {\n+      content \u003d\n+          content.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n     }\n-\n-    return filteredOptions;\n+    return content;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String substituteStrWithTokens(String content,\n      Map\u003cString, String\u003e tokensForSubstitution) {\n    for (Map.Entry\u003cString, String\u003e token : tokensForSubstitution.entrySet()) {\n      content \u003d\n          content.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n    }\n    return content;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/providers/ProviderUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "c31cd981ebabc0747cabcc07a8c8797619ed2c53": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6255. Refactor yarn-native-services framework. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "c31cd981ebabc0747cabcc07a8c8797619ed2c53",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,18 @@\n+  public Map\u003cString, String\u003e substituteConfigs(Map\u003cString, String\u003e configs,\n+      Map\u003cString, String\u003e tokenMap) {\n+    String format \u003d \"${%s}\";\n+    Map\u003cString, String\u003e filteredOptions \u003d new HashMap\u003c\u003e();\n+    for (Map.Entry\u003cString, String\u003e entry : configs.entrySet()) {\n+      String key \u003d entry.getKey();\n+      String value \u003d entry.getValue();\n+      if (tokenMap !\u003d null) {\n+        for (Map.Entry\u003cString, String\u003e token : tokenMap.entrySet()) {\n+          value \u003d\n+              value.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n+        }\n+      }\n+      filteredOptions.put(String.format(format, key), value);\n+    }\n+\n+    return filteredOptions;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cString, String\u003e substituteConfigs(Map\u003cString, String\u003e configs,\n      Map\u003cString, String\u003e tokenMap) {\n    String format \u003d \"${%s}\";\n    Map\u003cString, String\u003e filteredOptions \u003d new HashMap\u003c\u003e();\n    for (Map.Entry\u003cString, String\u003e entry : configs.entrySet()) {\n      String key \u003d entry.getKey();\n      String value \u003d entry.getValue();\n      if (tokenMap !\u003d null) {\n        for (Map.Entry\u003cString, String\u003e token : tokenMap.entrySet()) {\n          value \u003d\n              value.replaceAll(Pattern.quote(token.getKey()), token.getValue());\n        }\n      }\n      filteredOptions.put(String.format(format, key), value);\n    }\n\n    return filteredOptions;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/providers/ProviderUtils.java"
    }
  }
}