{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KMSConfiguration.java",
  "functionName": "getConfiguration",
  "functionId": "getConfiguration___loadHadoopDefaults-boolean__resources-String",
  "sourceFilePath": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSConfiguration.java",
  "functionStartLine": 114,
  "functionEndLine": 137,
  "numCommitsSeen": 16,
  "timeTaken": 719,
  "changeHistory": [
    "957414d4cb57cb8172070cc53530b7da78b8c9ca",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6"
  ],
  "changeHistoryShort": {
    "957414d4cb57cb8172070cc53530b7da78b8c9ca": "Ybodychange",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "957414d4cb57cb8172070cc53530b7da78b8c9ca": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11088. Unittest TestKeyShell, TestCredShell and TestKMS assume UNIX path separator for JECKS key store path. Contributed by Xiaoyu Yao.\n",
      "commitDate": "12/09/14 2:50 PM",
      "commitName": "957414d4cb57cb8172070cc53530b7da78b8c9ca",
      "commitAuthor": "cnauroth",
      "commitDateOld": "10/09/14 2:26 PM",
      "commitNameOld": "b02a4b40610e93eef6559db09a11d287e859446d",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 2.02,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,24 @@\n   static Configuration getConfiguration(boolean loadHadoopDefaults,\n       String ... resources) {\n     Configuration conf \u003d new Configuration(loadHadoopDefaults);\n     String confDir \u003d System.getProperty(KMS_CONFIG_DIR);\n     if (confDir !\u003d null) {\n       try {\n-        if (!confDir.startsWith(\"/\")) {\n+        Path confPath \u003d new Path(confDir);\n+        if (!confPath.isUriPathAbsolute()) {\n           throw new RuntimeException(\"System property \u0027\" + KMS_CONFIG_DIR +\n               \"\u0027 must be an absolute path: \" + confDir);\n         }\n-        if (!confDir.endsWith(\"/\")) {\n-          confDir +\u003d \"/\";\n-        }\n         for (String resource : resources) {\n-          conf.addResource(new URL(\"file://\" + confDir + resource));\n+          conf.addResource(new URL(\"file://\" + new Path(confDir, resource).toUri()));\n         }\n       } catch (MalformedURLException ex) {\n         throw new RuntimeException(ex);\n       }\n     } else {\n       for (String resource : resources) {\n         conf.addResource(resource);\n       }\n     }\n     return conf;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static Configuration getConfiguration(boolean loadHadoopDefaults,\n      String ... resources) {\n    Configuration conf \u003d new Configuration(loadHadoopDefaults);\n    String confDir \u003d System.getProperty(KMS_CONFIG_DIR);\n    if (confDir !\u003d null) {\n      try {\n        Path confPath \u003d new Path(confDir);\n        if (!confPath.isUriPathAbsolute()) {\n          throw new RuntimeException(\"System property \u0027\" + KMS_CONFIG_DIR +\n              \"\u0027 must be an absolute path: \" + confDir);\n        }\n        for (String resource : resources) {\n          conf.addResource(new URL(\"file://\" + new Path(confDir, resource).toUri()));\n        }\n      } catch (MalformedURLException ex) {\n        throw new RuntimeException(ex);\n      }\n    } else {\n      for (String resource : resources) {\n        conf.addResource(resource);\n      }\n    }\n    return conf;\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSConfiguration.java",
      "extendedDetails": {}
    },
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10433. Key Management Server based on KeyProvider API. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1592637 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/05/14 2:43 PM",
      "commitName": "17d4fbbf0af9b93de9502afb274e91533140d1c6",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,26 @@\n+  static Configuration getConfiguration(boolean loadHadoopDefaults,\n+      String ... resources) {\n+    Configuration conf \u003d new Configuration(loadHadoopDefaults);\n+    String confDir \u003d System.getProperty(KMS_CONFIG_DIR);\n+    if (confDir !\u003d null) {\n+      try {\n+        if (!confDir.startsWith(\"/\")) {\n+          throw new RuntimeException(\"System property \u0027\" + KMS_CONFIG_DIR +\n+              \"\u0027 must be an absolute path: \" + confDir);\n+        }\n+        if (!confDir.endsWith(\"/\")) {\n+          confDir +\u003d \"/\";\n+        }\n+        for (String resource : resources) {\n+          conf.addResource(new URL(\"file://\" + confDir + resource));\n+        }\n+      } catch (MalformedURLException ex) {\n+        throw new RuntimeException(ex);\n+      }\n+    } else {\n+      for (String resource : resources) {\n+        conf.addResource(resource);\n+      }\n+    }\n+    return conf;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static Configuration getConfiguration(boolean loadHadoopDefaults,\n      String ... resources) {\n    Configuration conf \u003d new Configuration(loadHadoopDefaults);\n    String confDir \u003d System.getProperty(KMS_CONFIG_DIR);\n    if (confDir !\u003d null) {\n      try {\n        if (!confDir.startsWith(\"/\")) {\n          throw new RuntimeException(\"System property \u0027\" + KMS_CONFIG_DIR +\n              \"\u0027 must be an absolute path: \" + confDir);\n        }\n        if (!confDir.endsWith(\"/\")) {\n          confDir +\u003d \"/\";\n        }\n        for (String resource : resources) {\n          conf.addResource(new URL(\"file://\" + confDir + resource));\n        }\n      } catch (MalformedURLException ex) {\n        throw new RuntimeException(ex);\n      }\n    } else {\n      for (String resource : resources) {\n        conf.addResource(resource);\n      }\n    }\n    return conf;\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSConfiguration.java"
    }
  }
}