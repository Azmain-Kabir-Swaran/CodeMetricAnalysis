{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AdlFileSystem.java",
  "functionName": "getFileStatus",
  "functionId": "getFileStatus___f-Path(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-azure-datalake/src/main/java/org/apache/hadoop/fs/adl/AdlFileSystem.java",
  "functionStartLine": 503,
  "functionEndLine": 508,
  "numCommitsSeen": 22,
  "timeTaken": 2730,
  "changeHistory": [
    "924def78544a64449785f305cb6984c3559aea4d",
    "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417",
    "9581fb715cbc8a6ad28566e83c6d0242a7306688"
  ],
  "changeHistoryShort": {
    "924def78544a64449785f305cb6984c3559aea4d": "Ybodychange",
    "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417": "Ymultichange(Ymovefromfile,Ybodychange,Yparametermetachange)",
    "9581fb715cbc8a6ad28566e83c6d0242a7306688": "Yintroduced"
  },
  "changeHistoryDetails": {
    "924def78544a64449785f305cb6984c3559aea4d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14017. User friendly name for ADLS user and group. Contributed by Vishwajeet Dusane\n",
      "commitDate": "21/02/17 1:44 PM",
      "commitName": "924def78544a64449785f305cb6984c3559aea4d",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "16/02/17 3:14 PM",
      "commitNameOld": "f4329990250bed62efdebe3ce2bc740092cf9573",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 4.94,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,6 @@\n   public FileStatus getFileStatus(final Path f) throws IOException {\n     statistics.incrementReadOps(1);\n-    DirectoryEntry entry \u003d adlClient.getDirectoryEntry(toRelativeFilePath(f));\n+    DirectoryEntry entry \u003d\n+        adlClient.getDirectoryEntry(toRelativeFilePath(f), oidOrUpn);\n     return toFileStatus(entry, f);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FileStatus getFileStatus(final Path f) throws IOException {\n    statistics.incrementReadOps(1);\n    DirectoryEntry entry \u003d\n        adlClient.getDirectoryEntry(toRelativeFilePath(f), oidOrUpn);\n    return toFileStatus(entry, f);\n  }",
      "path": "hadoop-tools/hadoop-azure-datalake/src/main/java/org/apache/hadoop/fs/adl/AdlFileSystem.java",
      "extendedDetails": {}
    },
    "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparametermetachange)",
      "commitMessage": "HADOOP-13037. Refactor Azure Data Lake Store as an independent FileSystem. Contributed by Vishwajeet Dusane\n",
      "commitDate": "11/11/16 11:15 AM",
      "commitName": "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417",
      "commitAuthor": "Chris Douglas",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HADOOP-13037. Refactor Azure Data Lake Store as an independent FileSystem. Contributed by Vishwajeet Dusane\n",
          "commitDate": "11/11/16 11:15 AM",
          "commitName": "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417",
          "commitAuthor": "Chris Douglas",
          "commitDateOld": "11/11/16 10:58 AM",
          "commitNameOld": "a9ad5d6c815ddd840f4e12f9f2b56164b910da98",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,5 @@\n-  public FileStatus getFileStatus(Path f) throws IOException {\n+  public FileStatus getFileStatus(final Path f) throws IOException {\n     statistics.incrementReadOps(1);\n-    FileStatus status \u003d super.getFileStatus(f);\n-\n-    if (overrideOwner) {\n-      FileStatus proxiedStatus \u003d new FileStatus(status.getLen(),\n-          status.isDirectory(), status.getReplication(), status.getBlockSize(),\n-          status.getModificationTime(), status.getAccessTime(),\n-          status.getPermission(), userName, \"hdfs\", status.getPath());\n-      return proxiedStatus;\n-    } else {\n-      return status;\n-    }\n+    DirectoryEntry entry \u003d adlClient.getDirectoryEntry(toRelativeFilePath(f));\n+    return toFileStatus(entry, f);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public FileStatus getFileStatus(final Path f) throws IOException {\n    statistics.incrementReadOps(1);\n    DirectoryEntry entry \u003d adlClient.getDirectoryEntry(toRelativeFilePath(f));\n    return toFileStatus(entry, f);\n  }",
          "path": "hadoop-tools/hadoop-azure-datalake/src/main/java/org/apache/hadoop/fs/adl/AdlFileSystem.java",
          "extendedDetails": {
            "oldPath": "hadoop-tools/hadoop-azure-datalake/src/main/java/org/apache/hadoop/hdfs/web/PrivateAzureDataLakeFileSystem.java",
            "newPath": "hadoop-tools/hadoop-azure-datalake/src/main/java/org/apache/hadoop/fs/adl/AdlFileSystem.java",
            "oldMethodName": "getFileStatus",
            "newMethodName": "getFileStatus"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13037. Refactor Azure Data Lake Store as an independent FileSystem. Contributed by Vishwajeet Dusane\n",
          "commitDate": "11/11/16 11:15 AM",
          "commitName": "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417",
          "commitAuthor": "Chris Douglas",
          "commitDateOld": "11/11/16 10:58 AM",
          "commitNameOld": "a9ad5d6c815ddd840f4e12f9f2b56164b910da98",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,5 @@\n-  public FileStatus getFileStatus(Path f) throws IOException {\n+  public FileStatus getFileStatus(final Path f) throws IOException {\n     statistics.incrementReadOps(1);\n-    FileStatus status \u003d super.getFileStatus(f);\n-\n-    if (overrideOwner) {\n-      FileStatus proxiedStatus \u003d new FileStatus(status.getLen(),\n-          status.isDirectory(), status.getReplication(), status.getBlockSize(),\n-          status.getModificationTime(), status.getAccessTime(),\n-          status.getPermission(), userName, \"hdfs\", status.getPath());\n-      return proxiedStatus;\n-    } else {\n-      return status;\n-    }\n+    DirectoryEntry entry \u003d adlClient.getDirectoryEntry(toRelativeFilePath(f));\n+    return toFileStatus(entry, f);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public FileStatus getFileStatus(final Path f) throws IOException {\n    statistics.incrementReadOps(1);\n    DirectoryEntry entry \u003d adlClient.getDirectoryEntry(toRelativeFilePath(f));\n    return toFileStatus(entry, f);\n  }",
          "path": "hadoop-tools/hadoop-azure-datalake/src/main/java/org/apache/hadoop/fs/adl/AdlFileSystem.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HADOOP-13037. Refactor Azure Data Lake Store as an independent FileSystem. Contributed by Vishwajeet Dusane\n",
          "commitDate": "11/11/16 11:15 AM",
          "commitName": "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417",
          "commitAuthor": "Chris Douglas",
          "commitDateOld": "11/11/16 10:58 AM",
          "commitNameOld": "a9ad5d6c815ddd840f4e12f9f2b56164b910da98",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,5 @@\n-  public FileStatus getFileStatus(Path f) throws IOException {\n+  public FileStatus getFileStatus(final Path f) throws IOException {\n     statistics.incrementReadOps(1);\n-    FileStatus status \u003d super.getFileStatus(f);\n-\n-    if (overrideOwner) {\n-      FileStatus proxiedStatus \u003d new FileStatus(status.getLen(),\n-          status.isDirectory(), status.getReplication(), status.getBlockSize(),\n-          status.getModificationTime(), status.getAccessTime(),\n-          status.getPermission(), userName, \"hdfs\", status.getPath());\n-      return proxiedStatus;\n-    } else {\n-      return status;\n-    }\n+    DirectoryEntry entry \u003d adlClient.getDirectoryEntry(toRelativeFilePath(f));\n+    return toFileStatus(entry, f);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public FileStatus getFileStatus(final Path f) throws IOException {\n    statistics.incrementReadOps(1);\n    DirectoryEntry entry \u003d adlClient.getDirectoryEntry(toRelativeFilePath(f));\n    return toFileStatus(entry, f);\n  }",
          "path": "hadoop-tools/hadoop-azure-datalake/src/main/java/org/apache/hadoop/fs/adl/AdlFileSystem.java",
          "extendedDetails": {
            "oldValue": "[f-Path]",
            "newValue": "[f-Path(modifiers-final)]"
          }
        }
      ]
    },
    "9581fb715cbc8a6ad28566e83c6d0242a7306688": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12666. Support Microsoft Azure Data Lake - as a file system in Hadoop. Contributed by Vishwajeet Dusane.\n",
      "commitDate": "09/06/16 2:33 PM",
      "commitName": "9581fb715cbc8a6ad28566e83c6d0242a7306688",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,14 @@\n+  public FileStatus getFileStatus(Path f) throws IOException {\n+    statistics.incrementReadOps(1);\n+    FileStatus status \u003d super.getFileStatus(f);\n+\n+    if (overrideOwner) {\n+      FileStatus proxiedStatus \u003d new FileStatus(status.getLen(),\n+          status.isDirectory(), status.getReplication(), status.getBlockSize(),\n+          status.getModificationTime(), status.getAccessTime(),\n+          status.getPermission(), userName, \"hdfs\", status.getPath());\n+      return proxiedStatus;\n+    } else {\n+      return status;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FileStatus getFileStatus(Path f) throws IOException {\n    statistics.incrementReadOps(1);\n    FileStatus status \u003d super.getFileStatus(f);\n\n    if (overrideOwner) {\n      FileStatus proxiedStatus \u003d new FileStatus(status.getLen(),\n          status.isDirectory(), status.getReplication(), status.getBlockSize(),\n          status.getModificationTime(), status.getAccessTime(),\n          status.getPermission(), userName, \"hdfs\", status.getPath());\n      return proxiedStatus;\n    } else {\n      return status;\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure-datalake/src/main/java/org/apache/hadoop/hdfs/web/PrivateAzureDataLakeFileSystem.java"
    }
  }
}