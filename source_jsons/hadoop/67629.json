{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistCp.java",
  "functionName": "execute",
  "functionId": "execute",
  "sourceFilePath": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java",
  "functionStartLine": 179,
  "functionEndLine": 188,
  "numCommitsSeen": 31,
  "timeTaken": 1319,
  "changeHistory": [
    "26172a94d6431e70d7fe15d66be9a7e195f79f60",
    "5af693fde26755b6f175bd65f93cf4a80de0d1e0",
    "723ef662a9aba08f6d164d3275337f233372f901",
    "a9808de0d9a73a99c10a3e4290ec20778fed4f24",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67"
  ],
  "changeHistoryShort": {
    "26172a94d6431e70d7fe15d66be9a7e195f79f60": "Ybodychange",
    "5af693fde26755b6f175bd65f93cf4a80de0d1e0": "Ybodychange",
    "723ef662a9aba08f6d164d3275337f233372f901": "Ybodychange",
    "a9808de0d9a73a99c10a3e4290ec20778fed4f24": "Ybodychange",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": "Yintroduced"
  },
  "changeHistoryDetails": {
    "26172a94d6431e70d7fe15d66be9a7e195f79f60": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
      "commitDate": "31/03/17 8:04 PM",
      "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "30/03/17 5:38 PM",
      "commitNameOld": "bf3fb585aaf2b179836e139c041fc87920a3c886",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 1.1,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,10 @@\n   public Job execute() throws Exception {\n+    Preconditions.checkState(context !\u003d null,\n+        \"The DistCpContext should have been created before running DistCp!\");\n     Job job \u003d createAndSubmitJob();\n \n-    if (inputOptions.shouldBlock()) {\n+    if (context.shouldBlock()) {\n       waitForJobCompletion(job);\n     }\n     return job;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Job execute() throws Exception {\n    Preconditions.checkState(context !\u003d null,\n        \"The DistCpContext should have been created before running DistCp!\");\n    Job job \u003d createAndSubmitJob();\n\n    if (context.shouldBlock()) {\n      waitForJobCompletion(job);\n    }\n    return job;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java",
      "extendedDetails": {}
    },
    "5af693fde26755b6f175bd65f93cf4a80de0d1e0": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6248. Exposed the internal MapReduce job\u0027s information as a public API in DistCp. Contributed by Jing Zhao.\n",
      "commitDate": "03/03/15 4:28 PM",
      "commitName": "5af693fde26755b6f175bd65f93cf4a80de0d1e0",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/03/15 1:06 AM",
      "commitNameOld": "9ae7f9eb7baeb244e1b95aabc93ad8124870b9a9",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 0.64,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,8 @@\n   public Job execute() throws Exception {\n-    assert inputOptions !\u003d null;\n-    assert getConf() !\u003d null;\n+    Job job \u003d createAndSubmitJob();\n \n-    Job job \u003d null;\n-    try {\n-      synchronized(this) {\n-        //Don\u0027t cleanup while we are setting up.\n-        metaFolder \u003d createMetaFolderPath();\n-        jobFS \u003d metaFolder.getFileSystem(getConf());\n-\n-        job \u003d createJob();\n-      }\n-      createInputFileListing(job);\n-\n-      job.submit();\n-      submitted \u003d true;\n-    } finally {\n-      if (!submitted) {\n-        cleanup();\n-      }\n-    }\n-\n-    String jobID \u003d job.getJobID().toString();\n-    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n-    \n-    LOG.info(\"DistCp job-id: \" + jobID);\n-    if (inputOptions.shouldBlock() \u0026\u0026 !job.waitForCompletion(true)) {\n-      throw new IOException(\"DistCp failure: Job \" + jobID + \" has failed: \"\n-          + job.getStatus().getFailureInfo());\n+    if (inputOptions.shouldBlock()) {\n+      waitForJobCompletion(job);\n     }\n     return job;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Job execute() throws Exception {\n    Job job \u003d createAndSubmitJob();\n\n    if (inputOptions.shouldBlock()) {\n      waitForJobCompletion(job);\n    }\n    return job;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java",
      "extendedDetails": {}
    },
    "723ef662a9aba08f6d164d3275337f233372f901": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5315.  DistCp reports success even on failure. (mithun and jlowe via daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1491914 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/06/13 12:22 PM",
      "commitName": "723ef662a9aba08f6d164d3275337f233372f901",
      "commitAuthor": "Daryn Sharp",
      "commitDateOld": "22/03/13 3:09 AM",
      "commitNameOld": "6f92ad9868b008eb523ae3279e05004de31a08ce",
      "commitAuthorOld": "Amareshwari Sri Ramadasu",
      "daysBetweenCommits": 81.38,
      "commitsBetweenForRepo": 500,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,33 @@\n   public Job execute() throws Exception {\n     assert inputOptions !\u003d null;\n     assert getConf() !\u003d null;\n \n     Job job \u003d null;\n     try {\n       synchronized(this) {\n         //Don\u0027t cleanup while we are setting up.\n         metaFolder \u003d createMetaFolderPath();\n         jobFS \u003d metaFolder.getFileSystem(getConf());\n \n         job \u003d createJob();\n       }\n       createInputFileListing(job);\n \n       job.submit();\n       submitted \u003d true;\n     } finally {\n       if (!submitted) {\n         cleanup();\n       }\n     }\n \n     String jobID \u003d job.getJobID().toString();\n     job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n     \n     LOG.info(\"DistCp job-id: \" + jobID);\n-    if (inputOptions.shouldBlock()) {\n-      job.waitForCompletion(true);\n+    if (inputOptions.shouldBlock() \u0026\u0026 !job.waitForCompletion(true)) {\n+      throw new IOException(\"DistCp failure: Job \" + jobID + \" has failed: \"\n+          + job.getStatus().getFailureInfo());\n     }\n     return job;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Job execute() throws Exception {\n    assert inputOptions !\u003d null;\n    assert getConf() !\u003d null;\n\n    Job job \u003d null;\n    try {\n      synchronized(this) {\n        //Don\u0027t cleanup while we are setting up.\n        metaFolder \u003d createMetaFolderPath();\n        jobFS \u003d metaFolder.getFileSystem(getConf());\n\n        job \u003d createJob();\n      }\n      createInputFileListing(job);\n\n      job.submit();\n      submitted \u003d true;\n    } finally {\n      if (!submitted) {\n        cleanup();\n      }\n    }\n\n    String jobID \u003d job.getJobID().toString();\n    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n    \n    LOG.info(\"DistCp job-id: \" + jobID);\n    if (inputOptions.shouldBlock() \u0026\u0026 !job.waitForCompletion(true)) {\n      throw new IOException(\"DistCp failure: Job \" + jobID + \" has failed: \"\n          + job.getStatus().getFailureInfo());\n    }\n    return job;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java",
      "extendedDetails": {}
    },
    "a9808de0d9a73a99c10a3e4290ec20778fed4f24": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8341. Fix or filter findbugs issues in hadoop-tools (bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1335505 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/05/12 6:20 AM",
      "commitName": "a9808de0d9a73a99c10a3e4290ec20778fed4f24",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "03/05/12 8:20 PM",
      "commitNameOld": "0fca4fbaf35ad6b48c57125a9389aaf45a2c88a5",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 4.42,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,32 @@\n   public Job execute() throws Exception {\n     assert inputOptions !\u003d null;\n     assert getConf() !\u003d null;\n \n     Job job \u003d null;\n     try {\n-      metaFolder \u003d createMetaFolderPath();\n-      jobFS \u003d metaFolder.getFileSystem(getConf());\n+      synchronized(this) {\n+        //Don\u0027t cleanup while we are setting up.\n+        metaFolder \u003d createMetaFolderPath();\n+        jobFS \u003d metaFolder.getFileSystem(getConf());\n \n-      job \u003d createJob();\n+        job \u003d createJob();\n+      }\n       createInputFileListing(job);\n \n       job.submit();\n       submitted \u003d true;\n     } finally {\n       if (!submitted) {\n         cleanup();\n       }\n     }\n \n     String jobID \u003d job.getJobID().toString();\n     job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n     \n     LOG.info(\"DistCp job-id: \" + jobID);\n     if (inputOptions.shouldBlock()) {\n       job.waitForCompletion(true);\n     }\n     return job;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Job execute() throws Exception {\n    assert inputOptions !\u003d null;\n    assert getConf() !\u003d null;\n\n    Job job \u003d null;\n    try {\n      synchronized(this) {\n        //Don\u0027t cleanup while we are setting up.\n        metaFolder \u003d createMetaFolderPath();\n        jobFS \u003d metaFolder.getFileSystem(getConf());\n\n        job \u003d createJob();\n      }\n      createInputFileListing(job);\n\n      job.submit();\n      submitted \u003d true;\n    } finally {\n      if (!submitted) {\n        cleanup();\n      }\n    }\n\n    String jobID \u003d job.getJobID().toString();\n    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n    \n    LOG.info(\"DistCp job-id: \" + jobID);\n    if (inputOptions.shouldBlock()) {\n      job.waitForCompletion(true);\n    }\n    return job;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java",
      "extendedDetails": {}
    },
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2765. DistCp Rewrite. (Mithun Radhakrishnan via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236045 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/12 10:36 PM",
      "commitName": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,29 @@\n+  public Job execute() throws Exception {\n+    assert inputOptions !\u003d null;\n+    assert getConf() !\u003d null;\n+\n+    Job job \u003d null;\n+    try {\n+      metaFolder \u003d createMetaFolderPath();\n+      jobFS \u003d metaFolder.getFileSystem(getConf());\n+\n+      job \u003d createJob();\n+      createInputFileListing(job);\n+\n+      job.submit();\n+      submitted \u003d true;\n+    } finally {\n+      if (!submitted) {\n+        cleanup();\n+      }\n+    }\n+\n+    String jobID \u003d job.getJobID().toString();\n+    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n+    \n+    LOG.info(\"DistCp job-id: \" + jobID);\n+    if (inputOptions.shouldBlock()) {\n+      job.waitForCompletion(true);\n+    }\n+    return job;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Job execute() throws Exception {\n    assert inputOptions !\u003d null;\n    assert getConf() !\u003d null;\n\n    Job job \u003d null;\n    try {\n      metaFolder \u003d createMetaFolderPath();\n      jobFS \u003d metaFolder.getFileSystem(getConf());\n\n      job \u003d createJob();\n      createInputFileListing(job);\n\n      job.submit();\n      submitted \u003d true;\n    } finally {\n      if (!submitted) {\n        cleanup();\n      }\n    }\n\n    String jobID \u003d job.getJobID().toString();\n    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n    \n    LOG.info(\"DistCp job-id: \" + jobID);\n    if (inputOptions.shouldBlock()) {\n      job.waitForCompletion(true);\n    }\n    return job;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java"
    }
  }
}