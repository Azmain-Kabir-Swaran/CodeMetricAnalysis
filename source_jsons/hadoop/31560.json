{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FlowActivityEntityReader.java",
  "functionName": "parseEntity",
  "functionId": "parseEntity___result-Result",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowActivityEntityReader.java",
  "functionStartLine": 157,
  "functionEndLine": 187,
  "numCommitsSeen": 18,
  "timeTaken": 3956,
  "changeHistory": [
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "8bb26465956a37d7398818bc0919772e12953725",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "892b193bd77c15932b4c084c1d525b7017def0d4",
    "7b8cfa5c2ff62005c8b78867fedd64b48e50383d",
    "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
    "88f02941144824187b70fa2aaf0c6d90bcb77d8f",
    "8ef546c1ee9fce0b171813547253374d268566ba",
    "10fa6da7d8a6013698767c6136ae20f0e04415e9"
  ],
  "changeHistoryShort": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Ymultichange(Yfilerename,Ybodychange)",
    "8bb26465956a37d7398818bc0919772e12953725": "Ybodychange",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "892b193bd77c15932b4c084c1d525b7017def0d4": "Ybodychange",
    "7b8cfa5c2ff62005c8b78867fedd64b48e50383d": "Ybodychange",
    "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3": "Ybodychange",
    "88f02941144824187b70fa2aaf0c6d90bcb77d8f": "Yfilerename",
    "8ef546c1ee9fce0b171813547253374d268566ba": "Ybodychange",
    "10fa6da7d8a6013698767c6136ae20f0e04415e9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
          "commitDate": "17/02/18 7:00 AM",
          "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 3:24 AM",
          "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,31 @@\n   protected TimelineEntity parseEntity(Result result) throws IOException {\n     FlowActivityRowKey rowKey \u003d FlowActivityRowKey.parseRowKey(result.getRow());\n \n     Long time \u003d rowKey.getDayTimestamp();\n     String user \u003d rowKey.getUserId();\n     String flowName \u003d rowKey.getFlowName();\n \n     FlowActivityEntity flowActivity \u003d new FlowActivityEntity(\n         getContext().getClusterId(), time, user, flowName);\n     // set the id\n     flowActivity.setId(flowActivity.getId());\n     // get the list of run ids along with the version that are associated with\n     // this flow on this day\n-    Map\u003cLong, Object\u003e runIdsMap \u003d\n-        FlowActivityColumnPrefix.RUN_ID.readResults(result, longKeyConverter);\n+    Map\u003cLong, Object\u003e runIdsMap \u003d ColumnRWHelper.readResults(result,\n+        FlowActivityColumnPrefix.RUN_ID, longKeyConverter);\n     for (Map.Entry\u003cLong, Object\u003e e : runIdsMap.entrySet()) {\n       Long runId \u003d e.getKey();\n       String version \u003d (String)e.getValue();\n       FlowRunEntity flowRun \u003d new FlowRunEntity();\n       flowRun.setUser(user);\n       flowRun.setName(flowName);\n       flowRun.setRunId(runId);\n       flowRun.setVersion(version);\n       // set the id\n       flowRun.setId(flowRun.getId());\n       flowActivity.addFlowRun(flowRun);\n     }\n     flowActivity.getInfo().put(TimelineReaderUtils.FROMID_KEY,\n         rowKey.getRowKeyAsString());\n     return flowActivity;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected TimelineEntity parseEntity(Result result) throws IOException {\n    FlowActivityRowKey rowKey \u003d FlowActivityRowKey.parseRowKey(result.getRow());\n\n    Long time \u003d rowKey.getDayTimestamp();\n    String user \u003d rowKey.getUserId();\n    String flowName \u003d rowKey.getFlowName();\n\n    FlowActivityEntity flowActivity \u003d new FlowActivityEntity(\n        getContext().getClusterId(), time, user, flowName);\n    // set the id\n    flowActivity.setId(flowActivity.getId());\n    // get the list of run ids along with the version that are associated with\n    // this flow on this day\n    Map\u003cLong, Object\u003e runIdsMap \u003d ColumnRWHelper.readResults(result,\n        FlowActivityColumnPrefix.RUN_ID, longKeyConverter);\n    for (Map.Entry\u003cLong, Object\u003e e : runIdsMap.entrySet()) {\n      Long runId \u003d e.getKey();\n      String version \u003d (String)e.getValue();\n      FlowRunEntity flowRun \u003d new FlowRunEntity();\n      flowRun.setUser(user);\n      flowRun.setName(flowName);\n      flowRun.setRunId(runId);\n      flowRun.setVersion(version);\n      // set the id\n      flowRun.setId(flowRun.getId());\n      flowActivity.addFlowRun(flowRun);\n    }\n    flowActivity.getInfo().put(TimelineReaderUtils.FROMID_KEY,\n        rowKey.getRowKeyAsString());\n    return flowActivity;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowActivityEntityReader.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowActivityEntityReader.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowActivityEntityReader.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
          "commitDate": "17/02/18 7:00 AM",
          "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 3:24 AM",
          "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,31 @@\n   protected TimelineEntity parseEntity(Result result) throws IOException {\n     FlowActivityRowKey rowKey \u003d FlowActivityRowKey.parseRowKey(result.getRow());\n \n     Long time \u003d rowKey.getDayTimestamp();\n     String user \u003d rowKey.getUserId();\n     String flowName \u003d rowKey.getFlowName();\n \n     FlowActivityEntity flowActivity \u003d new FlowActivityEntity(\n         getContext().getClusterId(), time, user, flowName);\n     // set the id\n     flowActivity.setId(flowActivity.getId());\n     // get the list of run ids along with the version that are associated with\n     // this flow on this day\n-    Map\u003cLong, Object\u003e runIdsMap \u003d\n-        FlowActivityColumnPrefix.RUN_ID.readResults(result, longKeyConverter);\n+    Map\u003cLong, Object\u003e runIdsMap \u003d ColumnRWHelper.readResults(result,\n+        FlowActivityColumnPrefix.RUN_ID, longKeyConverter);\n     for (Map.Entry\u003cLong, Object\u003e e : runIdsMap.entrySet()) {\n       Long runId \u003d e.getKey();\n       String version \u003d (String)e.getValue();\n       FlowRunEntity flowRun \u003d new FlowRunEntity();\n       flowRun.setUser(user);\n       flowRun.setName(flowName);\n       flowRun.setRunId(runId);\n       flowRun.setVersion(version);\n       // set the id\n       flowRun.setId(flowRun.getId());\n       flowActivity.addFlowRun(flowRun);\n     }\n     flowActivity.getInfo().put(TimelineReaderUtils.FROMID_KEY,\n         rowKey.getRowKeyAsString());\n     return flowActivity;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected TimelineEntity parseEntity(Result result) throws IOException {\n    FlowActivityRowKey rowKey \u003d FlowActivityRowKey.parseRowKey(result.getRow());\n\n    Long time \u003d rowKey.getDayTimestamp();\n    String user \u003d rowKey.getUserId();\n    String flowName \u003d rowKey.getFlowName();\n\n    FlowActivityEntity flowActivity \u003d new FlowActivityEntity(\n        getContext().getClusterId(), time, user, flowName);\n    // set the id\n    flowActivity.setId(flowActivity.getId());\n    // get the list of run ids along with the version that are associated with\n    // this flow on this day\n    Map\u003cLong, Object\u003e runIdsMap \u003d ColumnRWHelper.readResults(result,\n        FlowActivityColumnPrefix.RUN_ID, longKeyConverter);\n    for (Map.Entry\u003cLong, Object\u003e e : runIdsMap.entrySet()) {\n      Long runId \u003d e.getKey();\n      String version \u003d (String)e.getValue();\n      FlowRunEntity flowRun \u003d new FlowRunEntity();\n      flowRun.setUser(user);\n      flowRun.setName(flowName);\n      flowRun.setRunId(runId);\n      flowRun.setVersion(version);\n      // set the id\n      flowRun.setId(flowRun.getId());\n      flowActivity.addFlowRun(flowRun);\n    }\n    flowActivity.getInfo().put(TimelineReaderUtils.FROMID_KEY,\n        rowKey.getRowKeyAsString());\n    return flowActivity;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowActivityEntityReader.java",
          "extendedDetails": {}
        }
      ]
    },
    "8bb26465956a37d7398818bc0919772e12953725": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6027. Support fromid(offset) filter for /flows API (Rohith Sharma K S via Varun Saxena)\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "8bb26465956a37d7398818bc0919772e12953725",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "02a9710a099fc9572122d87dd3e90c78522f5836",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,31 @@\n   protected TimelineEntity parseEntity(Result result) throws IOException {\n     FlowActivityRowKey rowKey \u003d FlowActivityRowKey.parseRowKey(result.getRow());\n \n     Long time \u003d rowKey.getDayTimestamp();\n     String user \u003d rowKey.getUserId();\n     String flowName \u003d rowKey.getFlowName();\n \n     FlowActivityEntity flowActivity \u003d new FlowActivityEntity(\n         getContext().getClusterId(), time, user, flowName);\n     // set the id\n     flowActivity.setId(flowActivity.getId());\n     // get the list of run ids along with the version that are associated with\n     // this flow on this day\n     Map\u003cLong, Object\u003e runIdsMap \u003d\n         FlowActivityColumnPrefix.RUN_ID.readResults(result, longKeyConverter);\n     for (Map.Entry\u003cLong, Object\u003e e : runIdsMap.entrySet()) {\n       Long runId \u003d e.getKey();\n       String version \u003d (String)e.getValue();\n       FlowRunEntity flowRun \u003d new FlowRunEntity();\n       flowRun.setUser(user);\n       flowRun.setName(flowName);\n       flowRun.setRunId(runId);\n       flowRun.setVersion(version);\n       // set the id\n       flowRun.setId(flowRun.getId());\n       flowActivity.addFlowRun(flowRun);\n     }\n-\n+    flowActivity.getInfo().put(TimelineReaderUtils.FROMID_KEY,\n+        rowKey.getRowKeyAsString());\n     return flowActivity;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected TimelineEntity parseEntity(Result result) throws IOException {\n    FlowActivityRowKey rowKey \u003d FlowActivityRowKey.parseRowKey(result.getRow());\n\n    Long time \u003d rowKey.getDayTimestamp();\n    String user \u003d rowKey.getUserId();\n    String flowName \u003d rowKey.getFlowName();\n\n    FlowActivityEntity flowActivity \u003d new FlowActivityEntity(\n        getContext().getClusterId(), time, user, flowName);\n    // set the id\n    flowActivity.setId(flowActivity.getId());\n    // get the list of run ids along with the version that are associated with\n    // this flow on this day\n    Map\u003cLong, Object\u003e runIdsMap \u003d\n        FlowActivityColumnPrefix.RUN_ID.readResults(result, longKeyConverter);\n    for (Map.Entry\u003cLong, Object\u003e e : runIdsMap.entrySet()) {\n      Long runId \u003d e.getKey();\n      String version \u003d (String)e.getValue();\n      FlowRunEntity flowRun \u003d new FlowRunEntity();\n      flowRun.setUser(user);\n      flowRun.setName(flowName);\n      flowRun.setRunId(runId);\n      flowRun.setVersion(version);\n      // set the id\n      flowRun.setId(flowRun.getId());\n      flowActivity.addFlowRun(flowRun);\n    }\n    flowActivity.getInfo().put(TimelineReaderUtils.FROMID_KEY,\n        rowKey.getRowKeyAsString());\n    return flowActivity;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowActivityEntityReader.java",
      "extendedDetails": {}
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected TimelineEntity parseEntity(Result result) throws IOException {\n    FlowActivityRowKey rowKey \u003d FlowActivityRowKey.parseRowKey(result.getRow());\n\n    Long time \u003d rowKey.getDayTimestamp();\n    String user \u003d rowKey.getUserId();\n    String flowName \u003d rowKey.getFlowName();\n\n    FlowActivityEntity flowActivity \u003d new FlowActivityEntity(\n        getContext().getClusterId(), time, user, flowName);\n    // set the id\n    flowActivity.setId(flowActivity.getId());\n    // get the list of run ids along with the version that are associated with\n    // this flow on this day\n    Map\u003cLong, Object\u003e runIdsMap \u003d\n        FlowActivityColumnPrefix.RUN_ID.readResults(result, longKeyConverter);\n    for (Map.Entry\u003cLong, Object\u003e e : runIdsMap.entrySet()) {\n      Long runId \u003d e.getKey();\n      String version \u003d (String)e.getValue();\n      FlowRunEntity flowRun \u003d new FlowRunEntity();\n      flowRun.setUser(user);\n      flowRun.setName(flowName);\n      flowRun.setRunId(runId);\n      flowRun.setVersion(version);\n      // set the id\n      flowRun.setId(flowRun.getId());\n      flowActivity.addFlowRun(flowRun);\n    }\n\n    return flowActivity;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowActivityEntityReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowActivityEntityReader.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowActivityEntityReader.java"
      }
    },
    "892b193bd77c15932b4c084c1d525b7017def0d4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5170. Eliminate singleton converters and static method access. (Joep Rottinghuis via Varun Saxena)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "892b193bd77c15932b4c084c1d525b7017def0d4",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "10/07/16 8:46 AM",
      "commitNameOld": "7b8cfa5c2ff62005c8b78867fedd64b48e50383d",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,30 @@\n   protected TimelineEntity parseEntity(Result result) throws IOException {\n     FlowActivityRowKey rowKey \u003d FlowActivityRowKey.parseRowKey(result.getRow());\n \n     Long time \u003d rowKey.getDayTimestamp();\n     String user \u003d rowKey.getUserId();\n     String flowName \u003d rowKey.getFlowName();\n \n     FlowActivityEntity flowActivity \u003d new FlowActivityEntity(\n         getContext().getClusterId(), time, user, flowName);\n     // set the id\n     flowActivity.setId(flowActivity.getId());\n     // get the list of run ids along with the version that are associated with\n     // this flow on this day\n     Map\u003cLong, Object\u003e runIdsMap \u003d\n-        FlowActivityColumnPrefix.RUN_ID.readResults(result,\n-            LongKeyConverter.getInstance());\n+        FlowActivityColumnPrefix.RUN_ID.readResults(result, longKeyConverter);\n     for (Map.Entry\u003cLong, Object\u003e e : runIdsMap.entrySet()) {\n       Long runId \u003d e.getKey();\n       String version \u003d (String)e.getValue();\n       FlowRunEntity flowRun \u003d new FlowRunEntity();\n       flowRun.setUser(user);\n       flowRun.setName(flowName);\n       flowRun.setRunId(runId);\n       flowRun.setVersion(version);\n       // set the id\n       flowRun.setId(flowRun.getId());\n       flowActivity.addFlowRun(flowRun);\n     }\n \n     return flowActivity;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected TimelineEntity parseEntity(Result result) throws IOException {\n    FlowActivityRowKey rowKey \u003d FlowActivityRowKey.parseRowKey(result.getRow());\n\n    Long time \u003d rowKey.getDayTimestamp();\n    String user \u003d rowKey.getUserId();\n    String flowName \u003d rowKey.getFlowName();\n\n    FlowActivityEntity flowActivity \u003d new FlowActivityEntity(\n        getContext().getClusterId(), time, user, flowName);\n    // set the id\n    flowActivity.setId(flowActivity.getId());\n    // get the list of run ids along with the version that are associated with\n    // this flow on this day\n    Map\u003cLong, Object\u003e runIdsMap \u003d\n        FlowActivityColumnPrefix.RUN_ID.readResults(result, longKeyConverter);\n    for (Map.Entry\u003cLong, Object\u003e e : runIdsMap.entrySet()) {\n      Long runId \u003d e.getKey();\n      String version \u003d (String)e.getValue();\n      FlowRunEntity flowRun \u003d new FlowRunEntity();\n      flowRun.setUser(user);\n      flowRun.setName(flowName);\n      flowRun.setRunId(runId);\n      flowRun.setVersion(version);\n      // set the id\n      flowRun.setId(flowRun.getId());\n      flowActivity.addFlowRun(flowRun);\n    }\n\n    return flowActivity;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowActivityEntityReader.java",
      "extendedDetails": {}
    },
    "7b8cfa5c2ff62005c8b78867fedd64b48e50383d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5109. timestamps are stored unencoded causing parse errors (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "7b8cfa5c2ff62005c8b78867fedd64b48e50383d",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "c2efdc415a13496da43a9a8d13c73d88ca8565a1",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,31 @@\n   protected TimelineEntity parseEntity(Result result) throws IOException {\n     FlowActivityRowKey rowKey \u003d FlowActivityRowKey.parseRowKey(result.getRow());\n \n-    long time \u003d rowKey.getDayTimestamp();\n+    Long time \u003d rowKey.getDayTimestamp();\n     String user \u003d rowKey.getUserId();\n     String flowName \u003d rowKey.getFlowName();\n \n     FlowActivityEntity flowActivity \u003d new FlowActivityEntity(\n         getContext().getClusterId(), time, user, flowName);\n     // set the id\n     flowActivity.setId(flowActivity.getId());\n     // get the list of run ids along with the version that are associated with\n     // this flow on this day\n-    Map\u003cString, Object\u003e runIdsMap \u003d\n-        FlowActivityColumnPrefix.RUN_ID.readResults(result);\n-    for (Map.Entry\u003cString, Object\u003e e : runIdsMap.entrySet()) {\n-      Long runId \u003d Long.valueOf(e.getKey());\n+    Map\u003cLong, Object\u003e runIdsMap \u003d\n+        FlowActivityColumnPrefix.RUN_ID.readResults(result,\n+            LongKeyConverter.getInstance());\n+    for (Map.Entry\u003cLong, Object\u003e e : runIdsMap.entrySet()) {\n+      Long runId \u003d e.getKey();\n       String version \u003d (String)e.getValue();\n       FlowRunEntity flowRun \u003d new FlowRunEntity();\n       flowRun.setUser(user);\n       flowRun.setName(flowName);\n       flowRun.setRunId(runId);\n       flowRun.setVersion(version);\n       // set the id\n       flowRun.setId(flowRun.getId());\n       flowActivity.addFlowRun(flowRun);\n     }\n \n     return flowActivity;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected TimelineEntity parseEntity(Result result) throws IOException {\n    FlowActivityRowKey rowKey \u003d FlowActivityRowKey.parseRowKey(result.getRow());\n\n    Long time \u003d rowKey.getDayTimestamp();\n    String user \u003d rowKey.getUserId();\n    String flowName \u003d rowKey.getFlowName();\n\n    FlowActivityEntity flowActivity \u003d new FlowActivityEntity(\n        getContext().getClusterId(), time, user, flowName);\n    // set the id\n    flowActivity.setId(flowActivity.getId());\n    // get the list of run ids along with the version that are associated with\n    // this flow on this day\n    Map\u003cLong, Object\u003e runIdsMap \u003d\n        FlowActivityColumnPrefix.RUN_ID.readResults(result,\n            LongKeyConverter.getInstance());\n    for (Map.Entry\u003cLong, Object\u003e e : runIdsMap.entrySet()) {\n      Long runId \u003d e.getKey();\n      String version \u003d (String)e.getValue();\n      FlowRunEntity flowRun \u003d new FlowRunEntity();\n      flowRun.setUser(user);\n      flowRun.setName(flowName);\n      flowRun.setRunId(runId);\n      flowRun.setVersion(version);\n      // set the id\n      flowRun.setId(flowRun.getId());\n      flowActivity.addFlowRun(flowRun);\n    }\n\n    return flowActivity;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowActivityEntityReader.java",
      "extendedDetails": {}
    },
    "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4446. Refactor reader API for better extensibility (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   protected TimelineEntity parseEntity(Result result) throws IOException {\n     FlowActivityRowKey rowKey \u003d FlowActivityRowKey.parseRowKey(result.getRow());\n \n     long time \u003d rowKey.getDayTimestamp();\n     String user \u003d rowKey.getUserId();\n     String flowName \u003d rowKey.getFlowName();\n \n-    FlowActivityEntity flowActivity \u003d\n-        new FlowActivityEntity(clusterId, time, user, flowName);\n+    FlowActivityEntity flowActivity \u003d new FlowActivityEntity(\n+        getContext().getClusterId(), time, user, flowName);\n     // set the id\n     flowActivity.setId(flowActivity.getId());\n     // get the list of run ids along with the version that are associated with\n     // this flow on this day\n     Map\u003cString, Object\u003e runIdsMap \u003d\n         FlowActivityColumnPrefix.RUN_ID.readResults(result);\n     for (Map.Entry\u003cString, Object\u003e e : runIdsMap.entrySet()) {\n       Long runId \u003d Long.valueOf(e.getKey());\n       String version \u003d (String)e.getValue();\n       FlowRunEntity flowRun \u003d new FlowRunEntity();\n       flowRun.setUser(user);\n       flowRun.setName(flowName);\n       flowRun.setRunId(runId);\n       flowRun.setVersion(version);\n       // set the id\n       flowRun.setId(flowRun.getId());\n       flowActivity.addFlowRun(flowRun);\n     }\n \n     return flowActivity;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected TimelineEntity parseEntity(Result result) throws IOException {\n    FlowActivityRowKey rowKey \u003d FlowActivityRowKey.parseRowKey(result.getRow());\n\n    long time \u003d rowKey.getDayTimestamp();\n    String user \u003d rowKey.getUserId();\n    String flowName \u003d rowKey.getFlowName();\n\n    FlowActivityEntity flowActivity \u003d new FlowActivityEntity(\n        getContext().getClusterId(), time, user, flowName);\n    // set the id\n    flowActivity.setId(flowActivity.getId());\n    // get the list of run ids along with the version that are associated with\n    // this flow on this day\n    Map\u003cString, Object\u003e runIdsMap \u003d\n        FlowActivityColumnPrefix.RUN_ID.readResults(result);\n    for (Map.Entry\u003cString, Object\u003e e : runIdsMap.entrySet()) {\n      Long runId \u003d Long.valueOf(e.getKey());\n      String version \u003d (String)e.getValue();\n      FlowRunEntity flowRun \u003d new FlowRunEntity();\n      flowRun.setUser(user);\n      flowRun.setName(flowName);\n      flowRun.setRunId(runId);\n      flowRun.setVersion(version);\n      // set the id\n      flowRun.setId(flowRun.getId());\n      flowActivity.addFlowRun(flowRun);\n    }\n\n    return flowActivity;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowActivityEntityReader.java",
      "extendedDetails": {}
    },
    "88f02941144824187b70fa2aaf0c6d90bcb77d8f": {
      "type": "Yfilerename",
      "commitMessage": "YARN-4200. Refactor reader classes in storage to nest under hbase\nspecific package name. Contributed by Li Lu.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "88f02941144824187b70fa2aaf0c6d90bcb77d8f",
      "commitAuthor": "Li Lu",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "cc16683cefe2611cf4de7819496aa54854f5394c",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected TimelineEntity parseEntity(Result result) throws IOException {\n    FlowActivityRowKey rowKey \u003d FlowActivityRowKey.parseRowKey(result.getRow());\n\n    long time \u003d rowKey.getDayTimestamp();\n    String user \u003d rowKey.getUserId();\n    String flowName \u003d rowKey.getFlowName();\n\n    FlowActivityEntity flowActivity \u003d\n        new FlowActivityEntity(clusterId, time, user, flowName);\n    // set the id\n    flowActivity.setId(flowActivity.getId());\n    // get the list of run ids along with the version that are associated with\n    // this flow on this day\n    Map\u003cString, Object\u003e runIdsMap \u003d\n        FlowActivityColumnPrefix.RUN_ID.readResults(result);\n    for (Map.Entry\u003cString, Object\u003e e : runIdsMap.entrySet()) {\n      Long runId \u003d Long.valueOf(e.getKey());\n      String version \u003d (String)e.getValue();\n      FlowRunEntity flowRun \u003d new FlowRunEntity();\n      flowRun.setUser(user);\n      flowRun.setName(flowName);\n      flowRun.setRunId(runId);\n      flowRun.setVersion(version);\n      // set the id\n      flowRun.setId(flowRun.getId());\n      flowActivity.addFlowRun(flowRun);\n    }\n\n    return flowActivity;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowActivityEntityReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FlowActivityEntityReader.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowActivityEntityReader.java"
      }
    },
    "8ef546c1ee9fce0b171813547253374d268566ba": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
      "commitAuthor": "Li Lu",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   protected TimelineEntity parseEntity(Result result) throws IOException {\n     FlowActivityRowKey rowKey \u003d FlowActivityRowKey.parseRowKey(result.getRow());\n \n     long time \u003d rowKey.getDayTimestamp();\n     String user \u003d rowKey.getUserId();\n-    String flowName \u003d rowKey.getFlowId();\n+    String flowName \u003d rowKey.getFlowName();\n \n     FlowActivityEntity flowActivity \u003d\n         new FlowActivityEntity(clusterId, time, user, flowName);\n     // set the id\n     flowActivity.setId(flowActivity.getId());\n     // get the list of run ids along with the version that are associated with\n     // this flow on this day\n     Map\u003cString, Object\u003e runIdsMap \u003d\n         FlowActivityColumnPrefix.RUN_ID.readResults(result);\n     for (Map.Entry\u003cString, Object\u003e e : runIdsMap.entrySet()) {\n       Long runId \u003d Long.valueOf(e.getKey());\n       String version \u003d (String)e.getValue();\n       FlowRunEntity flowRun \u003d new FlowRunEntity();\n       flowRun.setUser(user);\n       flowRun.setName(flowName);\n       flowRun.setRunId(runId);\n       flowRun.setVersion(version);\n       // set the id\n       flowRun.setId(flowRun.getId());\n       flowActivity.addFlowRun(flowRun);\n     }\n \n     return flowActivity;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected TimelineEntity parseEntity(Result result) throws IOException {\n    FlowActivityRowKey rowKey \u003d FlowActivityRowKey.parseRowKey(result.getRow());\n\n    long time \u003d rowKey.getDayTimestamp();\n    String user \u003d rowKey.getUserId();\n    String flowName \u003d rowKey.getFlowName();\n\n    FlowActivityEntity flowActivity \u003d\n        new FlowActivityEntity(clusterId, time, user, flowName);\n    // set the id\n    flowActivity.setId(flowActivity.getId());\n    // get the list of run ids along with the version that are associated with\n    // this flow on this day\n    Map\u003cString, Object\u003e runIdsMap \u003d\n        FlowActivityColumnPrefix.RUN_ID.readResults(result);\n    for (Map.Entry\u003cString, Object\u003e e : runIdsMap.entrySet()) {\n      Long runId \u003d Long.valueOf(e.getKey());\n      String version \u003d (String)e.getValue();\n      FlowRunEntity flowRun \u003d new FlowRunEntity();\n      flowRun.setUser(user);\n      flowRun.setName(flowName);\n      flowRun.setRunId(runId);\n      flowRun.setVersion(version);\n      // set the id\n      flowRun.setId(flowRun.getId());\n      flowActivity.addFlowRun(flowRun);\n    }\n\n    return flowActivity;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FlowActivityEntityReader.java",
      "extendedDetails": {}
    },
    "10fa6da7d8a6013698767c6136ae20f0e04415e9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4074. [timeline reader] implement support for querying for flows and flow runs (sjlee via vrushali)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "10fa6da7d8a6013698767c6136ae20f0e04415e9",
      "commitAuthor": "Vrushali",
      "diff": "@@ -0,0 +1,30 @@\n+  protected TimelineEntity parseEntity(Result result) throws IOException {\n+    FlowActivityRowKey rowKey \u003d FlowActivityRowKey.parseRowKey(result.getRow());\n+\n+    long time \u003d rowKey.getDayTimestamp();\n+    String user \u003d rowKey.getUserId();\n+    String flowName \u003d rowKey.getFlowId();\n+\n+    FlowActivityEntity flowActivity \u003d\n+        new FlowActivityEntity(clusterId, time, user, flowName);\n+    // set the id\n+    flowActivity.setId(flowActivity.getId());\n+    // get the list of run ids along with the version that are associated with\n+    // this flow on this day\n+    Map\u003cString, Object\u003e runIdsMap \u003d\n+        FlowActivityColumnPrefix.RUN_ID.readResults(result);\n+    for (Map.Entry\u003cString, Object\u003e e : runIdsMap.entrySet()) {\n+      Long runId \u003d Long.valueOf(e.getKey());\n+      String version \u003d (String)e.getValue();\n+      FlowRunEntity flowRun \u003d new FlowRunEntity();\n+      flowRun.setUser(user);\n+      flowRun.setName(flowName);\n+      flowRun.setRunId(runId);\n+      flowRun.setVersion(version);\n+      // set the id\n+      flowRun.setId(flowRun.getId());\n+      flowActivity.addFlowRun(flowRun);\n+    }\n+\n+    return flowActivity;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected TimelineEntity parseEntity(Result result) throws IOException {\n    FlowActivityRowKey rowKey \u003d FlowActivityRowKey.parseRowKey(result.getRow());\n\n    long time \u003d rowKey.getDayTimestamp();\n    String user \u003d rowKey.getUserId();\n    String flowName \u003d rowKey.getFlowId();\n\n    FlowActivityEntity flowActivity \u003d\n        new FlowActivityEntity(clusterId, time, user, flowName);\n    // set the id\n    flowActivity.setId(flowActivity.getId());\n    // get the list of run ids along with the version that are associated with\n    // this flow on this day\n    Map\u003cString, Object\u003e runIdsMap \u003d\n        FlowActivityColumnPrefix.RUN_ID.readResults(result);\n    for (Map.Entry\u003cString, Object\u003e e : runIdsMap.entrySet()) {\n      Long runId \u003d Long.valueOf(e.getKey());\n      String version \u003d (String)e.getValue();\n      FlowRunEntity flowRun \u003d new FlowRunEntity();\n      flowRun.setUser(user);\n      flowRun.setName(flowName);\n      flowRun.setRunId(runId);\n      flowRun.setVersion(version);\n      // set the id\n      flowRun.setId(flowRun.getId());\n      flowActivity.addFlowRun(flowRun);\n    }\n\n    return flowActivity;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FlowActivityEntityReader.java"
    }
  }
}