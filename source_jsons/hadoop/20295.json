{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Task.java",
  "functionName": "done",
  "functionId": "done___umbilical-TaskUmbilicalProtocol__reporter-TaskReporter",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/Task.java",
  "functionStartLine": 1232,
  "functionEndLine": 1288,
  "numCommitsSeen": 47,
  "timeTaken": 10145,
  "changeHistory": [
    "61bbdc511e4e98c11a05d7c3bc01f3e971adbe13",
    "47cca0cb6d1f4e5979d11d9a624b005e6e666f2f",
    "5b35f7df647e7432873f5322450cb457b63ee191",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "61bbdc511e4e98c11a05d7c3bc01f3e971adbe13": "Ybodychange",
    "47cca0cb6d1f4e5979d11d9a624b005e6e666f2f": "Ybodychange",
    "5b35f7df647e7432873f5322450cb457b63ee191": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymovefromfile",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "61bbdc511e4e98c11a05d7c3bc01f3e971adbe13": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6975. Logging task counters. Contributed by Prabhu Joseph.\n",
      "commitDate": "05/11/17 11:28 PM",
      "commitName": "61bbdc511e4e98c11a05d7c3bc01f3e971adbe13",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "02/11/17 1:43 AM",
      "commitNameOld": "178751ed8c9d47038acf8616c226f1f52e884feb",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 3.95,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,57 @@\n   public void done(TaskUmbilicalProtocol umbilical,\n                    TaskReporter reporter\n                    ) throws IOException, InterruptedException {\n     updateCounters();\n     if (taskStatus.getRunState() \u003d\u003d TaskStatus.State.PREEMPTED ) {\n       // If we are preempted, do no output promotion; signal done and exit\n       committer.commitTask(taskContext);\n       umbilical.preempted(taskId, taskStatus);\n       taskDone.set(true);\n       reporter.stopCommunicationThread();\n       return;\n     }\n     LOG.info(\"Task:\" + taskId + \" is done.\"\n         + \" And is in the process of committing\");\n     boolean commitRequired \u003d isCommitRequired();\n     if (commitRequired) {\n       int retries \u003d MAX_RETRIES;\n       setState(TaskStatus.State.COMMIT_PENDING);\n       // say the task tracker that task is commit pending\n       while (true) {\n         try {\n           umbilical.commitPending(taskId, taskStatus);\n           break;\n         } catch (InterruptedException ie) {\n           // ignore\n         } catch (IOException ie) {\n           LOG.warn(\"Failure sending commit pending: \" + \n                     StringUtils.stringifyException(ie));\n           if (--retries \u003d\u003d 0) {\n             System.exit(67);\n           }\n         }\n       }\n       //wait for commit approval and commit\n       commit(umbilical, reporter, committer);\n     }\n     taskDone.set(true);\n     reporter.stopCommunicationThread();\n     // Make sure we send at least one set of counter increments. It\u0027s\n     // ok to call updateCounters() in this thread after comm thread stopped.\n     updateCounters();\n     sendLastUpdate(umbilical);\n     //signal the tasktracker that we are done\n     sendDone(umbilical);\n+    LOG.info(\"Final Counters for \" + taskId + \": \" +\n+              getCounters().toString());\n+    /**\n+     *   File System Counters\n+     *           FILE: Number of bytes read\u003d0\n+     *           FILE: Number of bytes written\u003d146972\n+     *           ...\n+     *   Map-Reduce Framework\n+     *           Map output records\u003d6\n+     *           Map output records\u003d6\n+     *           ...\n+     */\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void done(TaskUmbilicalProtocol umbilical,\n                   TaskReporter reporter\n                   ) throws IOException, InterruptedException {\n    updateCounters();\n    if (taskStatus.getRunState() \u003d\u003d TaskStatus.State.PREEMPTED ) {\n      // If we are preempted, do no output promotion; signal done and exit\n      committer.commitTask(taskContext);\n      umbilical.preempted(taskId, taskStatus);\n      taskDone.set(true);\n      reporter.stopCommunicationThread();\n      return;\n    }\n    LOG.info(\"Task:\" + taskId + \" is done.\"\n        + \" And is in the process of committing\");\n    boolean commitRequired \u003d isCommitRequired();\n    if (commitRequired) {\n      int retries \u003d MAX_RETRIES;\n      setState(TaskStatus.State.COMMIT_PENDING);\n      // say the task tracker that task is commit pending\n      while (true) {\n        try {\n          umbilical.commitPending(taskId, taskStatus);\n          break;\n        } catch (InterruptedException ie) {\n          // ignore\n        } catch (IOException ie) {\n          LOG.warn(\"Failure sending commit pending: \" + \n                    StringUtils.stringifyException(ie));\n          if (--retries \u003d\u003d 0) {\n            System.exit(67);\n          }\n        }\n      }\n      //wait for commit approval and commit\n      commit(umbilical, reporter, committer);\n    }\n    taskDone.set(true);\n    reporter.stopCommunicationThread();\n    // Make sure we send at least one set of counter increments. It\u0027s\n    // ok to call updateCounters() in this thread after comm thread stopped.\n    updateCounters();\n    sendLastUpdate(umbilical);\n    //signal the tasktracker that we are done\n    sendDone(umbilical);\n    LOG.info(\"Final Counters for \" + taskId + \": \" +\n              getCounters().toString());\n    /**\n     *   File System Counters\n     *           FILE: Number of bytes read\u003d0\n     *           FILE: Number of bytes written\u003d146972\n     *           ...\n     *   Map-Reduce Framework\n     *           Map output records\u003d6\n     *           Map output records\u003d6\n     *           ...\n     */\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/Task.java",
      "extendedDetails": {}
    },
    "47cca0cb6d1f4e5979d11d9a624b005e6e666f2f": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5196. Add bookkeeping for managing checkpoints of task state.\nContributed by Carlo Curino\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1553939 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/12/13 1:58 PM",
      "commitName": "47cca0cb6d1f4e5979d11d9a624b005e6e666f2f",
      "commitAuthor": "Christopher Douglas",
      "commitDateOld": "15/03/13 2:09 PM",
      "commitNameOld": "7d7553c4eb7d9a282410a3213d26a89fea9b7865",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 288.03,
      "commitsBetweenForRepo": 1794,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,45 @@\n   public void done(TaskUmbilicalProtocol umbilical,\n                    TaskReporter reporter\n                    ) throws IOException, InterruptedException {\n-    LOG.info(\"Task:\" + taskId + \" is done.\"\n-             + \" And is in the process of committing\");\n     updateCounters();\n-\n+    if (taskStatus.getRunState() \u003d\u003d TaskStatus.State.PREEMPTED ) {\n+      // If we are preempted, do no output promotion; signal done and exit\n+      committer.commitTask(taskContext);\n+      umbilical.preempted(taskId, taskStatus);\n+      taskDone.set(true);\n+      reporter.stopCommunicationThread();\n+      return;\n+    }\n+    LOG.info(\"Task:\" + taskId + \" is done.\"\n+        + \" And is in the process of committing\");\n     boolean commitRequired \u003d isCommitRequired();\n     if (commitRequired) {\n       int retries \u003d MAX_RETRIES;\n       setState(TaskStatus.State.COMMIT_PENDING);\n       // say the task tracker that task is commit pending\n       while (true) {\n         try {\n           umbilical.commitPending(taskId, taskStatus);\n           break;\n         } catch (InterruptedException ie) {\n           // ignore\n         } catch (IOException ie) {\n           LOG.warn(\"Failure sending commit pending: \" + \n                     StringUtils.stringifyException(ie));\n           if (--retries \u003d\u003d 0) {\n             System.exit(67);\n           }\n         }\n       }\n       //wait for commit approval and commit\n       commit(umbilical, reporter, committer);\n     }\n     taskDone.set(true);\n     reporter.stopCommunicationThread();\n     // Make sure we send at least one set of counter increments. It\u0027s\n     // ok to call updateCounters() in this thread after comm thread stopped.\n     updateCounters();\n     sendLastUpdate(umbilical);\n     //signal the tasktracker that we are done\n     sendDone(umbilical);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void done(TaskUmbilicalProtocol umbilical,\n                   TaskReporter reporter\n                   ) throws IOException, InterruptedException {\n    updateCounters();\n    if (taskStatus.getRunState() \u003d\u003d TaskStatus.State.PREEMPTED ) {\n      // If we are preempted, do no output promotion; signal done and exit\n      committer.commitTask(taskContext);\n      umbilical.preempted(taskId, taskStatus);\n      taskDone.set(true);\n      reporter.stopCommunicationThread();\n      return;\n    }\n    LOG.info(\"Task:\" + taskId + \" is done.\"\n        + \" And is in the process of committing\");\n    boolean commitRequired \u003d isCommitRequired();\n    if (commitRequired) {\n      int retries \u003d MAX_RETRIES;\n      setState(TaskStatus.State.COMMIT_PENDING);\n      // say the task tracker that task is commit pending\n      while (true) {\n        try {\n          umbilical.commitPending(taskId, taskStatus);\n          break;\n        } catch (InterruptedException ie) {\n          // ignore\n        } catch (IOException ie) {\n          LOG.warn(\"Failure sending commit pending: \" + \n                    StringUtils.stringifyException(ie));\n          if (--retries \u003d\u003d 0) {\n            System.exit(67);\n          }\n        }\n      }\n      //wait for commit approval and commit\n      commit(umbilical, reporter, committer);\n    }\n    taskDone.set(true);\n    reporter.stopCommunicationThread();\n    // Make sure we send at least one set of counter increments. It\u0027s\n    // ok to call updateCounters() in this thread after comm thread stopped.\n    updateCounters();\n    sendLastUpdate(umbilical);\n    //signal the tasktracker that we are done\n    sendDone(umbilical);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/Task.java",
      "extendedDetails": {}
    },
    "5b35f7df647e7432873f5322450cb457b63ee191": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4165. Committing is misspelled as commiting in task logs (John Eagles via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1328086 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/04/12 12:32 PM",
      "commitName": "5b35f7df647e7432873f5322450cb457b63ee191",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "07/02/12 4:56 PM",
      "commitNameOld": "5fdfa2b4bdc2c75bcc920538ee1f8c2063c48e33",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 71.77,
      "commitsBetweenForRepo": 551,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   public void done(TaskUmbilicalProtocol umbilical,\n                    TaskReporter reporter\n                    ) throws IOException, InterruptedException {\n     LOG.info(\"Task:\" + taskId + \" is done.\"\n-             + \" And is in the process of commiting\");\n+             + \" And is in the process of committing\");\n     updateCounters();\n \n     boolean commitRequired \u003d isCommitRequired();\n     if (commitRequired) {\n       int retries \u003d MAX_RETRIES;\n       setState(TaskStatus.State.COMMIT_PENDING);\n       // say the task tracker that task is commit pending\n       while (true) {\n         try {\n           umbilical.commitPending(taskId, taskStatus);\n           break;\n         } catch (InterruptedException ie) {\n           // ignore\n         } catch (IOException ie) {\n           LOG.warn(\"Failure sending commit pending: \" + \n                     StringUtils.stringifyException(ie));\n           if (--retries \u003d\u003d 0) {\n             System.exit(67);\n           }\n         }\n       }\n       //wait for commit approval and commit\n       commit(umbilical, reporter, committer);\n     }\n     taskDone.set(true);\n     reporter.stopCommunicationThread();\n     // Make sure we send at least one set of counter increments. It\u0027s\n     // ok to call updateCounters() in this thread after comm thread stopped.\n     updateCounters();\n     sendLastUpdate(umbilical);\n     //signal the tasktracker that we are done\n     sendDone(umbilical);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void done(TaskUmbilicalProtocol umbilical,\n                   TaskReporter reporter\n                   ) throws IOException, InterruptedException {\n    LOG.info(\"Task:\" + taskId + \" is done.\"\n             + \" And is in the process of committing\");\n    updateCounters();\n\n    boolean commitRequired \u003d isCommitRequired();\n    if (commitRequired) {\n      int retries \u003d MAX_RETRIES;\n      setState(TaskStatus.State.COMMIT_PENDING);\n      // say the task tracker that task is commit pending\n      while (true) {\n        try {\n          umbilical.commitPending(taskId, taskStatus);\n          break;\n        } catch (InterruptedException ie) {\n          // ignore\n        } catch (IOException ie) {\n          LOG.warn(\"Failure sending commit pending: \" + \n                    StringUtils.stringifyException(ie));\n          if (--retries \u003d\u003d 0) {\n            System.exit(67);\n          }\n        }\n      }\n      //wait for commit approval and commit\n      commit(umbilical, reporter, committer);\n    }\n    taskDone.set(true);\n    reporter.stopCommunicationThread();\n    // Make sure we send at least one set of counter increments. It\u0027s\n    // ok to call updateCounters() in this thread after comm thread stopped.\n    updateCounters();\n    sendLastUpdate(umbilical);\n    //signal the tasktracker that we are done\n    sendDone(umbilical);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/Task.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void done(TaskUmbilicalProtocol umbilical,\n                   TaskReporter reporter\n                   ) throws IOException, InterruptedException {\n    LOG.info(\"Task:\" + taskId + \" is done.\"\n             + \" And is in the process of commiting\");\n    updateCounters();\n\n    boolean commitRequired \u003d isCommitRequired();\n    if (commitRequired) {\n      int retries \u003d MAX_RETRIES;\n      setState(TaskStatus.State.COMMIT_PENDING);\n      // say the task tracker that task is commit pending\n      while (true) {\n        try {\n          umbilical.commitPending(taskId, taskStatus);\n          break;\n        } catch (InterruptedException ie) {\n          // ignore\n        } catch (IOException ie) {\n          LOG.warn(\"Failure sending commit pending: \" + \n                    StringUtils.stringifyException(ie));\n          if (--retries \u003d\u003d 0) {\n            System.exit(67);\n          }\n        }\n      }\n      //wait for commit approval and commit\n      commit(umbilical, reporter, committer);\n    }\n    taskDone.set(true);\n    reporter.stopCommunicationThread();\n    // Make sure we send at least one set of counter increments. It\u0027s\n    // ok to call updateCounters() in this thread after comm thread stopped.\n    updateCounters();\n    sendLastUpdate(umbilical);\n    //signal the tasktracker that we are done\n    sendDone(umbilical);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/Task.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/Task.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/Task.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymovefromfile",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void done(TaskUmbilicalProtocol umbilical,\n                   TaskReporter reporter\n                   ) throws IOException, InterruptedException {\n    LOG.info(\"Task:\" + taskId + \" is done.\"\n             + \" And is in the process of commiting\");\n    updateCounters();\n\n    boolean commitRequired \u003d isCommitRequired();\n    if (commitRequired) {\n      int retries \u003d MAX_RETRIES;\n      setState(TaskStatus.State.COMMIT_PENDING);\n      // say the task tracker that task is commit pending\n      while (true) {\n        try {\n          umbilical.commitPending(taskId, taskStatus);\n          break;\n        } catch (InterruptedException ie) {\n          // ignore\n        } catch (IOException ie) {\n          LOG.warn(\"Failure sending commit pending: \" + \n                    StringUtils.stringifyException(ie));\n          if (--retries \u003d\u003d 0) {\n            System.exit(67);\n          }\n        }\n      }\n      //wait for commit approval and commit\n      commit(umbilical, reporter, committer);\n    }\n    taskDone.set(true);\n    reporter.stopCommunicationThread();\n    // Make sure we send at least one set of counter increments. It\u0027s\n    // ok to call updateCounters() in this thread after comm thread stopped.\n    updateCounters();\n    sendLastUpdate(umbilical);\n    //signal the tasktracker that we are done\n    sendDone(umbilical);\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/Task.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/Task.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/Task.java",
        "oldMethodName": "done",
        "newMethodName": "done"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,38 @@\n+  public void done(TaskUmbilicalProtocol umbilical,\n+                   TaskReporter reporter\n+                   ) throws IOException, InterruptedException {\n+    LOG.info(\"Task:\" + taskId + \" is done.\"\n+             + \" And is in the process of commiting\");\n+    updateCounters();\n+\n+    boolean commitRequired \u003d isCommitRequired();\n+    if (commitRequired) {\n+      int retries \u003d MAX_RETRIES;\n+      setState(TaskStatus.State.COMMIT_PENDING);\n+      // say the task tracker that task is commit pending\n+      while (true) {\n+        try {\n+          umbilical.commitPending(taskId, taskStatus);\n+          break;\n+        } catch (InterruptedException ie) {\n+          // ignore\n+        } catch (IOException ie) {\n+          LOG.warn(\"Failure sending commit pending: \" + \n+                    StringUtils.stringifyException(ie));\n+          if (--retries \u003d\u003d 0) {\n+            System.exit(67);\n+          }\n+        }\n+      }\n+      //wait for commit approval and commit\n+      commit(umbilical, reporter, committer);\n+    }\n+    taskDone.set(true);\n+    reporter.stopCommunicationThread();\n+    // Make sure we send at least one set of counter increments. It\u0027s\n+    // ok to call updateCounters() in this thread after comm thread stopped.\n+    updateCounters();\n+    sendLastUpdate(umbilical);\n+    //signal the tasktracker that we are done\n+    sendDone(umbilical);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void done(TaskUmbilicalProtocol umbilical,\n                   TaskReporter reporter\n                   ) throws IOException, InterruptedException {\n    LOG.info(\"Task:\" + taskId + \" is done.\"\n             + \" And is in the process of commiting\");\n    updateCounters();\n\n    boolean commitRequired \u003d isCommitRequired();\n    if (commitRequired) {\n      int retries \u003d MAX_RETRIES;\n      setState(TaskStatus.State.COMMIT_PENDING);\n      // say the task tracker that task is commit pending\n      while (true) {\n        try {\n          umbilical.commitPending(taskId, taskStatus);\n          break;\n        } catch (InterruptedException ie) {\n          // ignore\n        } catch (IOException ie) {\n          LOG.warn(\"Failure sending commit pending: \" + \n                    StringUtils.stringifyException(ie));\n          if (--retries \u003d\u003d 0) {\n            System.exit(67);\n          }\n        }\n      }\n      //wait for commit approval and commit\n      commit(umbilical, reporter, committer);\n    }\n    taskDone.set(true);\n    reporter.stopCommunicationThread();\n    // Make sure we send at least one set of counter increments. It\u0027s\n    // ok to call updateCounters() in this thread after comm thread stopped.\n    updateCounters();\n    sendLastUpdate(umbilical);\n    //signal the tasktracker that we are done\n    sendDone(umbilical);\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/Task.java"
    }
  }
}