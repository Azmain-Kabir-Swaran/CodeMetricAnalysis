{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceApiUtil.java",
  "functionName": "serviceDependencySatisfied",
  "functionId": "serviceDependencySatisfied___service-Service",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java",
  "functionStartLine": 746,
  "functionEndLine": 775,
  "numCommitsSeen": 32,
  "timeTaken": 713,
  "changeHistory": [
    "d1c1dde3097eea6a46a39d0312f94949f6884002"
  ],
  "changeHistoryShort": {
    "d1c1dde3097eea6a46a39d0312f94949f6884002": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d1c1dde3097eea6a46a39d0312f94949f6884002": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8734. Readiness check for remote service belonging to the same user. Contributed by Eric Yang\n",
      "commitDate": "28/09/18 9:40 AM",
      "commitName": "d1c1dde3097eea6a46a39d0312f94949f6884002",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,30 @@\n+  private static boolean serviceDependencySatisfied(Service service) {\n+    boolean result \u003d true;\n+    try {\n+      List\u003cString\u003e dependencies \u003d service\n+          .getDependencies();\n+      org.apache.hadoop.conf.Configuration conf \u003d\n+          new org.apache.hadoop.conf.Configuration();\n+      if (dependencies !\u003d null \u0026\u0026 dependencies.size() \u003e 0) {\n+        ServiceClient sc \u003d new ServiceClient();\n+        sc.init(conf);\n+        sc.start();\n+        for (String dependent : dependencies) {\n+          Service dependentService \u003d sc.getStatus(dependent);\n+          if (dependentService.getState() \u003d\u003d null ||\n+              !dependentService.getState().equals(ServiceState.STABLE)) {\n+            result \u003d false;\n+            LOG.info(\"Service dependency is not satisfied for \" +\n+                \"service: {} state: {}\", dependent,\n+                dependentService.getState());\n+          }\n+        }\n+        sc.close();\n+      }\n+    } catch (IOException | YarnException e) {\n+      LOG.warn(\"Caught exception: \", e);\n+      LOG.info(\"Service dependency is not satisified.\");\n+      result \u003d false;\n+    }\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static boolean serviceDependencySatisfied(Service service) {\n    boolean result \u003d true;\n    try {\n      List\u003cString\u003e dependencies \u003d service\n          .getDependencies();\n      org.apache.hadoop.conf.Configuration conf \u003d\n          new org.apache.hadoop.conf.Configuration();\n      if (dependencies !\u003d null \u0026\u0026 dependencies.size() \u003e 0) {\n        ServiceClient sc \u003d new ServiceClient();\n        sc.init(conf);\n        sc.start();\n        for (String dependent : dependencies) {\n          Service dependentService \u003d sc.getStatus(dependent);\n          if (dependentService.getState() \u003d\u003d null ||\n              !dependentService.getState().equals(ServiceState.STABLE)) {\n            result \u003d false;\n            LOG.info(\"Service dependency is not satisfied for \" +\n                \"service: {} state: {}\", dependent,\n                dependentService.getState());\n          }\n        }\n        sc.close();\n      }\n    } catch (IOException | YarnException e) {\n      LOG.warn(\"Caught exception: \", e);\n      LOG.info(\"Service dependency is not satisified.\");\n      result \u003d false;\n    }\n    return result;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java"
    }
  }
}