{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WebAppProxy.java",
  "functionName": "serviceStart",
  "functionId": "serviceStart",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
  "functionStartLine": 103,
  "functionEndLine": 128,
  "numCommitsSeen": 22,
  "timeTaken": 2454,
  "changeHistory": [
    "83be450acc7fc9bb9f7bbd006e7b0804bf10279c",
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
    "33a47743a5f4263bc21b345587370c5ecf43f5b4",
    "2214871d916fdcae62aa51afbb5fd571f2808745",
    "782191f1ba27e0ff0acf3c6cf8a88df00274d308",
    "0928502029ef141759008997335ea2cd836a7154",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "d41cb76b56e19f6eb411b3dacaf28a490d079c68",
    "8aabd3d4e67cad8dc7e46f5339981135badc7421"
  ],
  "changeHistoryShort": {
    "83be450acc7fc9bb9f7bbd006e7b0804bf10279c": "Ybodychange",
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d": "Ybodychange",
    "33a47743a5f4263bc21b345587370c5ecf43f5b4": "Ybodychange",
    "2214871d916fdcae62aa51afbb5fd571f2808745": "Ybodychange",
    "782191f1ba27e0ff0acf3c6cf8a88df00274d308": "Ybodychange",
    "0928502029ef141759008997335ea2cd836a7154": "Ymultichange(Yrename,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "d41cb76b56e19f6eb411b3dacaf28a490d079c68": "Ybodychange",
    "8aabd3d4e67cad8dc7e46f5339981135badc7421": "Yintroduced"
  },
  "changeHistoryDetails": {
    "83be450acc7fc9bb9f7bbd006e7b0804bf10279c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3147. Clean up RM web proxy code. Contributed by Steve Loughran\n",
      "commitDate": "12/02/15 10:57 AM",
      "commitName": "83be450acc7fc9bb9f7bbd006e7b0804bf10279c",
      "commitAuthor": "Xuan",
      "commitDateOld": "14/02/14 12:01 PM",
      "commitNameOld": "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 362.96,
      "commitsBetweenForRepo": 2902,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   protected void serviceStart() throws Exception {\n     try {\n       Configuration conf \u003d getConfig();\n       HttpServer2.Builder b \u003d new HttpServer2.Builder()\n           .setName(\"proxy\")\n           .addEndpoint(\n               URI.create(WebAppUtils.getHttpSchemePrefix(conf) + bindAddress\n                   + \":\" + port)).setFindPort(port \u003d\u003d 0).setConf(getConfig())\n           .setACL(acl);\n       if (YarnConfiguration.useHttps(conf)) {\n         WebAppUtils.loadSslConfiguration(b);\n       }\n       proxyServer \u003d b.build();\n       proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME,\n           ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n       proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n       proxyServer\n           .setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n       proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n       proxyServer.start();\n     } catch (IOException e) {\n-      LOG.fatal(\"Could not start proxy web server\",e);\n-      throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n+      LOG.error(\"Could not start proxy web server\",e);\n+      throw e;\n     }\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    try {\n      Configuration conf \u003d getConfig();\n      HttpServer2.Builder b \u003d new HttpServer2.Builder()\n          .setName(\"proxy\")\n          .addEndpoint(\n              URI.create(WebAppUtils.getHttpSchemePrefix(conf) + bindAddress\n                  + \":\" + port)).setFindPort(port \u003d\u003d 0).setConf(getConfig())\n          .setACL(acl);\n      if (YarnConfiguration.useHttps(conf)) {\n        WebAppUtils.loadSslConfiguration(b);\n      }\n      proxyServer \u003d b.build();\n      proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME,\n          ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n      proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n      proxyServer\n          .setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n      proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n      proxyServer.start();\n    } catch (IOException e) {\n      LOG.error(\"Could not start proxy web server\",e);\n      throw e;\n    }\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
      "extendedDetails": {}
    },
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1553. Modified YARN and MR to stop using HttpConfig.isSecure() and\ninstead rely on the http policy framework. And also fix some bugs related\nto https handling in YARN web-apps. Contributed by Haohui Mai.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1568501 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/02/14 12:01 PM",
      "commitName": "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "27/01/14 11:32 PM",
      "commitNameOld": "33a47743a5f4263bc21b345587370c5ecf43f5b4",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 17.52,
      "commitsBetweenForRepo": 143,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,26 @@\n   protected void serviceStart() throws Exception {\n     try {\n-      proxyServer \u003d new HttpServer2.Builder().setName(\"proxy\")\n-          .addEndpoint(URI.create(\"http://\" + bindAddress + \":\" + port))\n-          .setFindPort(port \u003d\u003d 0)\n-          .setConf(getConfig()).setACL(acl).build();\n-      proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n+      Configuration conf \u003d getConfig();\n+      HttpServer2.Builder b \u003d new HttpServer2.Builder()\n+          .setName(\"proxy\")\n+          .addEndpoint(\n+              URI.create(WebAppUtils.getHttpSchemePrefix(conf) + bindAddress\n+                  + \":\" + port)).setFindPort(port \u003d\u003d 0).setConf(getConfig())\n+          .setACL(acl);\n+      if (YarnConfiguration.useHttps(conf)) {\n+        WebAppUtils.loadSslConfiguration(b);\n+      }\n+      proxyServer \u003d b.build();\n+      proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME,\n           ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n       proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n-      proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n+      proxyServer\n+          .setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n       proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n       proxyServer.start();\n     } catch (IOException e) {\n       LOG.fatal(\"Could not start proxy web server\",e);\n       throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n     }\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    try {\n      Configuration conf \u003d getConfig();\n      HttpServer2.Builder b \u003d new HttpServer2.Builder()\n          .setName(\"proxy\")\n          .addEndpoint(\n              URI.create(WebAppUtils.getHttpSchemePrefix(conf) + bindAddress\n                  + \":\" + port)).setFindPort(port \u003d\u003d 0).setConf(getConfig())\n          .setACL(acl);\n      if (YarnConfiguration.useHttps(conf)) {\n        WebAppUtils.loadSslConfiguration(b);\n      }\n      proxyServer \u003d b.build();\n      proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME,\n          ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n      proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n      proxyServer\n          .setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n      proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n      proxyServer.start();\n    } catch (IOException e) {\n      LOG.fatal(\"Could not start proxy web server\",e);\n      throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n    }\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
      "extendedDetails": {}
    },
    "33a47743a5f4263bc21b345587370c5ecf43f5b4": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10255. Rename HttpServer to HttpServer2 to retain older HttpServer in branch-2 for compatibility. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561959 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/01/14 11:32 PM",
      "commitName": "33a47743a5f4263bc21b345587370c5ecf43f5b4",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "07/01/14 2:16 PM",
      "commitNameOld": "4931545f76f6c76e80e65c3bf6773e1983248044",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 20.39,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   protected void serviceStart() throws Exception {\n     try {\n-      proxyServer \u003d new HttpServer.Builder().setName(\"proxy\")\n+      proxyServer \u003d new HttpServer2.Builder().setName(\"proxy\")\n           .addEndpoint(URI.create(\"http://\" + bindAddress + \":\" + port))\n           .setFindPort(port \u003d\u003d 0)\n           .setConf(getConfig()).setACL(acl).build();\n       proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n           ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n       proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n       proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n       proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n       proxyServer.start();\n     } catch (IOException e) {\n       LOG.fatal(\"Could not start proxy web server\",e);\n       throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n     }\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    try {\n      proxyServer \u003d new HttpServer2.Builder().setName(\"proxy\")\n          .addEndpoint(URI.create(\"http://\" + bindAddress + \":\" + port))\n          .setFindPort(port \u003d\u003d 0)\n          .setConf(getConfig()).setACL(acl).build();\n      proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n          ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n      proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n      proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n      proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n      proxyServer.start();\n    } catch (IOException e) {\n      LOG.fatal(\"Could not start proxy web server\",e);\n      throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n    }\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
      "extendedDetails": {}
    },
    "2214871d916fdcae62aa51afbb5fd571f2808745": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5545. Allow specifying endpoints for listeners in HttpServer. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1546151 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/11/13 10:20 AM",
      "commitName": "2214871d916fdcae62aa51afbb5fd571f2808745",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "24/09/13 10:20 AM",
      "commitNameOld": "78e995a37d44cfcf511dcaf7e149a6fd47ba3434",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 64.04,
      "commitsBetweenForRepo": 419,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   protected void serviceStart() throws Exception {\n     try {\n       proxyServer \u003d new HttpServer.Builder().setName(\"proxy\")\n-          .setBindAddress(bindAddress).setPort(port).setFindPort(port \u003d\u003d 0)\n+          .addEndpoint(URI.create(\"http://\" + bindAddress + \":\" + port))\n+          .setFindPort(port \u003d\u003d 0)\n           .setConf(getConfig()).setACL(acl).build();\n       proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n           ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n       proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n       proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n       proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n       proxyServer.start();\n     } catch (IOException e) {\n       LOG.fatal(\"Could not start proxy web server\",e);\n       throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n     }\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    try {\n      proxyServer \u003d new HttpServer.Builder().setName(\"proxy\")\n          .addEndpoint(URI.create(\"http://\" + bindAddress + \":\" + port))\n          .setFindPort(port \u003d\u003d 0)\n          .setConf(getConfig()).setACL(acl).build();\n      proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n          ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n      proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n      proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n      proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n      proxyServer.start();\n    } catch (IOException e) {\n      LOG.fatal(\"Could not start proxy web server\",e);\n      throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n    }\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
      "extendedDetails": {}
    },
    "782191f1ba27e0ff0acf3c6cf8a88df00274d308": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9784. Add a builder for HttpServer. (Junping Du via llu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1516128 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/08/13 3:12 AM",
      "commitName": "782191f1ba27e0ff0acf3c6cf8a88df00274d308",
      "commitAuthor": "Luke Lu",
      "commitDateOld": "16/06/13 11:39 PM",
      "commitNameOld": "b9efe6bd4a1277b4067ecde715a7713a85968886",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 65.15,
      "commitsBetweenForRepo": 387,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   protected void serviceStart() throws Exception {\n     try {\n-      proxyServer \u003d new HttpServer(\"proxy\", bindAddress, port,\n-          port \u003d\u003d 0, getConfig(), acl);\n+      proxyServer \u003d new HttpServer.Builder().setName(\"proxy\")\n+          .setBindAddress(bindAddress).setPort(port).setFindPort(port \u003d\u003d 0)\n+          .setConf(getConfig()).setACL(acl).build();\n       proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n           ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n       proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n       proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n       proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n       proxyServer.start();\n     } catch (IOException e) {\n       LOG.fatal(\"Could not start proxy web server\",e);\n       throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n     }\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    try {\n      proxyServer \u003d new HttpServer.Builder().setName(\"proxy\")\n          .setBindAddress(bindAddress).setPort(port).setFindPort(port \u003d\u003d 0)\n          .setConf(getConfig()).setACL(acl).build();\n      proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n          ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n      proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n      proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n      proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n      proxyServer.start();\n    } catch (IOException e) {\n      LOG.fatal(\"Could not start proxy web server\",e);\n      throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n    }\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
      "extendedDetails": {}
    },
    "0928502029ef141759008997335ea2cd836a7154": {
      "type": "Ymultichange(Yrename,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 8:54 AM",
      "commitName": "0928502029ef141759008997335ea2cd836a7154",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  public void start() {\n+  protected void serviceStart() throws Exception {\n     try {\n       proxyServer \u003d new HttpServer(\"proxy\", bindAddress, port,\n           port \u003d\u003d 0, getConfig(), acl);\n       proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n           ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n       proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n       proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n       proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n       proxyServer.start();\n     } catch (IOException e) {\n       LOG.fatal(\"Could not start proxy web server\",e);\n       throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n     }\n-    super.start();\n+    super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n    try {\n      proxyServer \u003d new HttpServer(\"proxy\", bindAddress, port,\n          port \u003d\u003d 0, getConfig(), acl);\n      proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n          ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n      proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n      proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n      proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n      proxyServer.start();\n    } catch (IOException e) {\n      LOG.fatal(\"Could not start proxy web server\",e);\n      throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n    }\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
          "extendedDetails": {
            "oldValue": "start",
            "newValue": "serviceStart"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  public void start() {\n+  protected void serviceStart() throws Exception {\n     try {\n       proxyServer \u003d new HttpServer(\"proxy\", bindAddress, port,\n           port \u003d\u003d 0, getConfig(), acl);\n       proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n           ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n       proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n       proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n       proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n       proxyServer.start();\n     } catch (IOException e) {\n       LOG.fatal(\"Could not start proxy web server\",e);\n       throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n     }\n-    super.start();\n+    super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n    try {\n      proxyServer \u003d new HttpServer(\"proxy\", bindAddress, port,\n          port \u003d\u003d 0, getConfig(), acl);\n      proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n          ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n      proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n      proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n      proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n      proxyServer.start();\n    } catch (IOException e) {\n      LOG.fatal(\"Could not start proxy web server\",e);\n      throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n    }\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  public void start() {\n+  protected void serviceStart() throws Exception {\n     try {\n       proxyServer \u003d new HttpServer(\"proxy\", bindAddress, port,\n           port \u003d\u003d 0, getConfig(), acl);\n       proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n           ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n       proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n       proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n       proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n       proxyServer.start();\n     } catch (IOException e) {\n       LOG.fatal(\"Could not start proxy web server\",e);\n       throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n     }\n-    super.start();\n+    super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n    try {\n      proxyServer \u003d new HttpServer(\"proxy\", bindAddress, port,\n          port \u003d\u003d 0, getConfig(), acl);\n      proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n          ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n      proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n      proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n      proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n      proxyServer.start();\n    } catch (IOException e) {\n      LOG.fatal(\"Could not start proxy web server\",e);\n      throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n    }\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[Exception]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  public void start() {\n+  protected void serviceStart() throws Exception {\n     try {\n       proxyServer \u003d new HttpServer(\"proxy\", bindAddress, port,\n           port \u003d\u003d 0, getConfig(), acl);\n       proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n           ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n       proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n       proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n       proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n       proxyServer.start();\n     } catch (IOException e) {\n       LOG.fatal(\"Could not start proxy web server\",e);\n       throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n     }\n-    super.start();\n+    super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n    try {\n      proxyServer \u003d new HttpServer(\"proxy\", bindAddress, port,\n          port \u003d\u003d 0, getConfig(), acl);\n      proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n          ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n      proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n      proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n      proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n      proxyServer.start();\n    } catch (IOException e) {\n      LOG.fatal(\"Could not start proxy web server\",e);\n      throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n    }\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
          "extendedDetails": {}
        }
      ]
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Ybodychange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "23/01/13 2:05 PM",
      "commitNameOld": "2e9e7601e162cc8b7ea787a354d915b6003759d7",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 131.25,
      "commitsBetweenForRepo": 754,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void start() {\n     try {\n       proxyServer \u003d new HttpServer(\"proxy\", bindAddress, port,\n           port \u003d\u003d 0, getConfig(), acl);\n       proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n           ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n       proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n       proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n       proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n       proxyServer.start();\n     } catch (IOException e) {\n       LOG.fatal(\"Could not start proxy web server\",e);\n-      throw new YarnException(\"Could not start proxy web server\",e);\n+      throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n     }\n     super.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    try {\n      proxyServer \u003d new HttpServer(\"proxy\", bindAddress, port,\n          port \u003d\u003d 0, getConfig(), acl);\n      proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n          ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n      proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n      proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n      proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n      proxyServer.start();\n    } catch (IOException e) {\n      LOG.fatal(\"Could not start proxy web server\",e);\n      throw new YarnRuntimeException(\"Could not start proxy web server\",e);\n    }\n    super.start();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void start() {\n    try {\n      proxyServer \u003d new HttpServer(\"proxy\", bindAddress, port,\n          port \u003d\u003d 0, getConfig(), acl);\n      proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n          ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n      proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n      proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n      proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n      proxyServer.start();\n    } catch (IOException e) {\n      LOG.fatal(\"Could not start proxy web server\",e);\n      throw new YarnException(\"Could not start proxy web server\",e);\n    }\n    super.start();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java"
      }
    },
    "d41cb76b56e19f6eb411b3dacaf28a490d079c68": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3960. Fix web-proxy to forward request to AM with configured hostname or IP. Contributed by Thomas Graves. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1296878 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/03/12 1:14 PM",
      "commitName": "d41cb76b56e19f6eb411b3dacaf28a490d079c68",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "25/10/11 11:29 PM",
      "commitNameOld": "8aabd3d4e67cad8dc7e46f5339981135badc7421",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 130.61,
      "commitsBetweenForRepo": 945,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   public void start() {\n     try {\n       proxyServer \u003d new HttpServer(\"proxy\", bindAddress, port,\n           port \u003d\u003d 0, getConfig(), acl);\n       proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n           ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n       proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n       proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n+      proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n       proxyServer.start();\n     } catch (IOException e) {\n       LOG.fatal(\"Could not start proxy web server\",e);\n       throw new YarnException(\"Could not start proxy web server\",e);\n     }\n     super.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    try {\n      proxyServer \u003d new HttpServer(\"proxy\", bindAddress, port,\n          port \u003d\u003d 0, getConfig(), acl);\n      proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n          ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n      proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n      proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n      proxyServer.setAttribute(PROXY_HOST_ATTRIBUTE, proxyHost);\n      proxyServer.start();\n    } catch (IOException e) {\n      LOG.fatal(\"Could not start proxy web server\",e);\n      throw new YarnException(\"Could not start proxy web server\",e);\n    }\n    super.start();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java",
      "extendedDetails": {}
    },
    "8aabd3d4e67cad8dc7e46f5339981135badc7421": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2858. Added a WebApp Proxy for applications. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1189036 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/10/11 11:29 PM",
      "commitName": "8aabd3d4e67cad8dc7e46f5339981135badc7421",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,15 @@\n+  public void start() {\n+    try {\n+      proxyServer \u003d new HttpServer(\"proxy\", bindAddress, port,\n+          port \u003d\u003d 0, getConfig(), acl);\n+      proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n+          ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n+      proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n+      proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n+      proxyServer.start();\n+    } catch (IOException e) {\n+      LOG.fatal(\"Could not start proxy web server\",e);\n+      throw new YarnException(\"Could not start proxy web server\",e);\n+    }\n+    super.start();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    try {\n      proxyServer \u003d new HttpServer(\"proxy\", bindAddress, port,\n          port \u003d\u003d 0, getConfig(), acl);\n      proxyServer.addServlet(ProxyUriUtils.PROXY_SERVLET_NAME, \n          ProxyUriUtils.PROXY_PATH_SPEC, WebAppProxyServlet.class);\n      proxyServer.setAttribute(FETCHER_ATTRIBUTE, fetcher);\n      proxyServer.setAttribute(IS_SECURITY_ENABLED_ATTRIBUTE, isSecurityEnabled);\n      proxyServer.start();\n    } catch (IOException e) {\n      LOG.fatal(\"Could not start proxy web server\",e);\n      throw new YarnException(\"Could not start proxy web server\",e);\n    }\n    super.start();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/WebAppProxy.java"
    }
  }
}