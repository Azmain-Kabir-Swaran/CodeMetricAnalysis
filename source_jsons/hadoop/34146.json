{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerScheduler.java",
  "functionName": "getOpportunisticContainersStatus",
  "functionId": "getOpportunisticContainersStatus",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/scheduler/ContainerScheduler.java",
  "functionStartLine": 326,
  "functionEndLine": 340,
  "numCommitsSeen": 34,
  "timeTaken": 4093,
  "changeHistory": [
    "37ca4169508c3003dbe9044fefd37eb8cd8c0503",
    "b0aace21b1ef3436ba9d516186208fee9a9ceef2",
    "3219b7b4ac7d12aee343f6ab2980b3357fc618b6",
    "0aafc122d401a2f49d0f9ca556343f9ba871e979"
  ],
  "changeHistoryShort": {
    "37ca4169508c3003dbe9044fefd37eb8cd8c0503": "Ybodychange",
    "b0aace21b1ef3436ba9d516186208fee9a9ceef2": "Ybodychange",
    "3219b7b4ac7d12aee343f6ab2980b3357fc618b6": "Ymultichange(Ymovefromfile,Ybodychange)",
    "0aafc122d401a2f49d0f9ca556343f9ba871e979": "Yintroduced"
  },
  "changeHistoryDetails": {
    "37ca4169508c3003dbe9044fefd37eb8cd8c0503": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7587. Skip dispatching opportunistic containers to nodes whose queue is already full. (Weiwei Yang via asuresh)\n",
      "commitDate": "03/12/17 10:22 PM",
      "commitName": "37ca4169508c3003dbe9044fefd37eb8cd8c0503",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "16/10/17 1:12 PM",
      "commitNameOld": "a50be1b8f432f50c940b66d12c7de87b95ea47c0",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 48.42,
      "commitsBetweenForRepo": 369,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n   public OpportunisticContainersStatus getOpportunisticContainersStatus() {\n     this.opportunisticContainersStatus.setQueuedOpportContainers(\n         getNumQueuedOpportunisticContainers());\n     this.opportunisticContainersStatus.setWaitQueueLength(\n         getNumQueuedContainers());\n     this.opportunisticContainersStatus.setOpportMemoryUsed(\n         metrics.getAllocatedOpportunisticGB());\n     this.opportunisticContainersStatus.setOpportCoresUsed(\n         metrics.getAllocatedOpportunisticVCores());\n     this.opportunisticContainersStatus.setRunningOpportContainers(\n         metrics.getRunningOpportunisticContainers());\n+    this.opportunisticContainersStatus.setOpportQueueCapacity(\n+        getOpportunisticQueueCapacity());\n     return this.opportunisticContainersStatus;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public OpportunisticContainersStatus getOpportunisticContainersStatus() {\n    this.opportunisticContainersStatus.setQueuedOpportContainers(\n        getNumQueuedOpportunisticContainers());\n    this.opportunisticContainersStatus.setWaitQueueLength(\n        getNumQueuedContainers());\n    this.opportunisticContainersStatus.setOpportMemoryUsed(\n        metrics.getAllocatedOpportunisticGB());\n    this.opportunisticContainersStatus.setOpportCoresUsed(\n        metrics.getAllocatedOpportunisticVCores());\n    this.opportunisticContainersStatus.setRunningOpportContainers(\n        metrics.getRunningOpportunisticContainers());\n    this.opportunisticContainersStatus.setOpportQueueCapacity(\n        getOpportunisticQueueCapacity());\n    return this.opportunisticContainersStatus;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/scheduler/ContainerScheduler.java",
      "extendedDetails": {}
    },
    "b0aace21b1ef3436ba9d516186208fee9a9ceef2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5982. Simplify opportunistic container parameters and metrics. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "09/12/16 4:41 PM",
      "commitName": "b0aace21b1ef3436ba9d516186208fee9a9ceef2",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "15/11/16 7:56 AM",
      "commitNameOld": "3219b7b4ac7d12aee343f6ab2980b3357fc618b6",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 24.36,
      "commitsBetweenForRepo": 162,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public OpportunisticContainersStatus getOpportunisticContainersStatus() {\n     this.opportunisticContainersStatus.setQueuedOpportContainers(\n         getNumQueuedOpportunisticContainers());\n     this.opportunisticContainersStatus.setWaitQueueLength(\n         getNumQueuedContainers());\n     this.opportunisticContainersStatus.setOpportMemoryUsed(\n-        metrics.getOpportMemoryUsed());\n+        metrics.getAllocatedOpportunisticGB());\n     this.opportunisticContainersStatus.setOpportCoresUsed(\n-        metrics.getOpportCoresUsed());\n+        metrics.getAllocatedOpportunisticVCores());\n     this.opportunisticContainersStatus.setRunningOpportContainers(\n-        metrics.getRunningOpportContainers());\n+        metrics.getRunningOpportunisticContainers());\n     return this.opportunisticContainersStatus;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public OpportunisticContainersStatus getOpportunisticContainersStatus() {\n    this.opportunisticContainersStatus.setQueuedOpportContainers(\n        getNumQueuedOpportunisticContainers());\n    this.opportunisticContainersStatus.setWaitQueueLength(\n        getNumQueuedContainers());\n    this.opportunisticContainersStatus.setOpportMemoryUsed(\n        metrics.getAllocatedOpportunisticGB());\n    this.opportunisticContainersStatus.setOpportCoresUsed(\n        metrics.getAllocatedOpportunisticVCores());\n    this.opportunisticContainersStatus.setRunningOpportContainers(\n        metrics.getRunningOpportunisticContainers());\n    return this.opportunisticContainersStatus;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/scheduler/ContainerScheduler.java",
      "extendedDetails": {}
    },
    "3219b7b4ac7d12aee343f6ab2980b3357fc618b6": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-4597. Introduce ContainerScheduler and a SCHEDULED state to NodeManager container lifecycle. (asuresh)\n",
      "commitDate": "15/11/16 7:56 AM",
      "commitName": "3219b7b4ac7d12aee343f6ab2980b3357fc618b6",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-4597. Introduce ContainerScheduler and a SCHEDULED state to NodeManager container lifecycle. (asuresh)\n",
          "commitDate": "15/11/16 7:56 AM",
          "commitName": "3219b7b4ac7d12aee343f6ab2980b3357fc618b6",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "15/11/16 2:11 AM",
          "commitNameOld": "7ffb9943b8838a3bb56684e0722db40d800743a2",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 0.24,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n   public OpportunisticContainersStatus getOpportunisticContainersStatus() {\n-    opportunisticContainersStatus\n-        .setRunningOpportContainers(allocatedOpportunisticContainers.size());\n-    opportunisticContainersStatus\n-        .setOpportMemoryUsed(allocatedMemoryOpportunistic);\n-    opportunisticContainersStatus\n-        .setOpportCoresUsed(allocatedVCoresOpportunistic);\n-    opportunisticContainersStatus\n-        .setQueuedOpportContainers(queuedOpportunisticContainers.size());\n-    opportunisticContainersStatus.setWaitQueueLength(\n-        queuedGuaranteedContainers.size() +\n-            queuedOpportunisticContainers.size());\n-    return opportunisticContainersStatus;\n+    this.opportunisticContainersStatus.setQueuedOpportContainers(\n+        getNumQueuedOpportunisticContainers());\n+    this.opportunisticContainersStatus.setWaitQueueLength(\n+        getNumQueuedContainers());\n+    this.opportunisticContainersStatus.setOpportMemoryUsed(\n+        metrics.getOpportMemoryUsed());\n+    this.opportunisticContainersStatus.setOpportCoresUsed(\n+        metrics.getOpportCoresUsed());\n+    this.opportunisticContainersStatus.setRunningOpportContainers(\n+        metrics.getRunningOpportContainers());\n+    return this.opportunisticContainersStatus;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public OpportunisticContainersStatus getOpportunisticContainersStatus() {\n    this.opportunisticContainersStatus.setQueuedOpportContainers(\n        getNumQueuedOpportunisticContainers());\n    this.opportunisticContainersStatus.setWaitQueueLength(\n        getNumQueuedContainers());\n    this.opportunisticContainersStatus.setOpportMemoryUsed(\n        metrics.getOpportMemoryUsed());\n    this.opportunisticContainersStatus.setOpportCoresUsed(\n        metrics.getOpportCoresUsed());\n    this.opportunisticContainersStatus.setRunningOpportContainers(\n        metrics.getRunningOpportContainers());\n    return this.opportunisticContainersStatus;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/scheduler/ContainerScheduler.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/queuing/QueuingContainerManagerImpl.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/scheduler/ContainerScheduler.java",
            "oldMethodName": "getOpportunisticContainersStatus",
            "newMethodName": "getOpportunisticContainersStatus"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4597. Introduce ContainerScheduler and a SCHEDULED state to NodeManager container lifecycle. (asuresh)\n",
          "commitDate": "15/11/16 7:56 AM",
          "commitName": "3219b7b4ac7d12aee343f6ab2980b3357fc618b6",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "15/11/16 2:11 AM",
          "commitNameOld": "7ffb9943b8838a3bb56684e0722db40d800743a2",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 0.24,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n   public OpportunisticContainersStatus getOpportunisticContainersStatus() {\n-    opportunisticContainersStatus\n-        .setRunningOpportContainers(allocatedOpportunisticContainers.size());\n-    opportunisticContainersStatus\n-        .setOpportMemoryUsed(allocatedMemoryOpportunistic);\n-    opportunisticContainersStatus\n-        .setOpportCoresUsed(allocatedVCoresOpportunistic);\n-    opportunisticContainersStatus\n-        .setQueuedOpportContainers(queuedOpportunisticContainers.size());\n-    opportunisticContainersStatus.setWaitQueueLength(\n-        queuedGuaranteedContainers.size() +\n-            queuedOpportunisticContainers.size());\n-    return opportunisticContainersStatus;\n+    this.opportunisticContainersStatus.setQueuedOpportContainers(\n+        getNumQueuedOpportunisticContainers());\n+    this.opportunisticContainersStatus.setWaitQueueLength(\n+        getNumQueuedContainers());\n+    this.opportunisticContainersStatus.setOpportMemoryUsed(\n+        metrics.getOpportMemoryUsed());\n+    this.opportunisticContainersStatus.setOpportCoresUsed(\n+        metrics.getOpportCoresUsed());\n+    this.opportunisticContainersStatus.setRunningOpportContainers(\n+        metrics.getRunningOpportContainers());\n+    return this.opportunisticContainersStatus;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public OpportunisticContainersStatus getOpportunisticContainersStatus() {\n    this.opportunisticContainersStatus.setQueuedOpportContainers(\n        getNumQueuedOpportunisticContainers());\n    this.opportunisticContainersStatus.setWaitQueueLength(\n        getNumQueuedContainers());\n    this.opportunisticContainersStatus.setOpportMemoryUsed(\n        metrics.getOpportMemoryUsed());\n    this.opportunisticContainersStatus.setOpportCoresUsed(\n        metrics.getOpportCoresUsed());\n    this.opportunisticContainersStatus.setRunningOpportContainers(\n        metrics.getRunningOpportContainers());\n    return this.opportunisticContainersStatus;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/scheduler/ContainerScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "0aafc122d401a2f49d0f9ca556343f9ba871e979": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2995. Enhance UI to show cluster resource utilization of various container Execution types. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "04/11/16 7:31 AM",
      "commitName": "0aafc122d401a2f49d0f9ca556343f9ba871e979",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,14 @@\n+  public OpportunisticContainersStatus getOpportunisticContainersStatus() {\n+    opportunisticContainersStatus\n+        .setRunningOpportContainers(allocatedOpportunisticContainers.size());\n+    opportunisticContainersStatus\n+        .setOpportMemoryUsed(allocatedMemoryOpportunistic);\n+    opportunisticContainersStatus\n+        .setOpportCoresUsed(allocatedVCoresOpportunistic);\n+    opportunisticContainersStatus\n+        .setQueuedOpportContainers(queuedOpportunisticContainers.size());\n+    opportunisticContainersStatus.setWaitQueueLength(\n+        queuedGuaranteedContainers.size() +\n+            queuedOpportunisticContainers.size());\n+    return opportunisticContainersStatus;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public OpportunisticContainersStatus getOpportunisticContainersStatus() {\n    opportunisticContainersStatus\n        .setRunningOpportContainers(allocatedOpportunisticContainers.size());\n    opportunisticContainersStatus\n        .setOpportMemoryUsed(allocatedMemoryOpportunistic);\n    opportunisticContainersStatus\n        .setOpportCoresUsed(allocatedVCoresOpportunistic);\n    opportunisticContainersStatus\n        .setQueuedOpportContainers(queuedOpportunisticContainers.size());\n    opportunisticContainersStatus.setWaitQueueLength(\n        queuedGuaranteedContainers.size() +\n            queuedOpportunisticContainers.size());\n    return opportunisticContainersStatus;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/queuing/QueuingContainerManagerImpl.java"
    }
  }
}