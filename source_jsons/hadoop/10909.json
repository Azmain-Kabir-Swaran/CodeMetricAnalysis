{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StripedReader.java",
  "functionName": "initZeroStrip",
  "functionId": "initZeroStrip",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/StripedReader.java",
  "functionStartLine": 195,
  "functionEndLine": 211,
  "numCommitsSeen": 6,
  "timeTaken": 819,
  "changeHistory": [
    "3c18a53cbd2efabb2ad108d63a0b0b558424115f"
  ],
  "changeHistoryShort": {
    "3c18a53cbd2efabb2ad108d63a0b0b558424115f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3c18a53cbd2efabb2ad108d63a0b0b558424115f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9719. Refactoring ErasureCodingWorker into smaller reusable constructs. Contributed by Kai Zheng.\n",
      "commitDate": "06/04/16 10:50 PM",
      "commitName": "3c18a53cbd2efabb2ad108d63a0b0b558424115f",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,17 @@\n+  private void initZeroStrip() {\n+    if (zeroStripeBuffers !\u003d null) {\n+      for (int i \u003d 0; i \u003c zeroStripeBuffers.length; i++) {\n+        zeroStripeBuffers[i] \u003d reconstructor.allocateBuffer(bufferSize);\n+      }\n+    }\n+\n+    BitSet bitset \u003d reconstructor.getLiveBitSet();\n+    int k \u003d 0;\n+    for (int i \u003d 0; i \u003c dataBlkNum + parityBlkNum; i++) {\n+      if (!bitset.get(i)) {\n+        if (reconstructor.getBlockLen(i) \u003c\u003d 0) {\n+          zeroStripeIndices[k++] \u003d (short)i;\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initZeroStrip() {\n    if (zeroStripeBuffers !\u003d null) {\n      for (int i \u003d 0; i \u003c zeroStripeBuffers.length; i++) {\n        zeroStripeBuffers[i] \u003d reconstructor.allocateBuffer(bufferSize);\n      }\n    }\n\n    BitSet bitset \u003d reconstructor.getLiveBitSet();\n    int k \u003d 0;\n    for (int i \u003d 0; i \u003c dataBlkNum + parityBlkNum; i++) {\n      if (!bitset.get(i)) {\n        if (reconstructor.getBlockLen(i) \u003c\u003d 0) {\n          zeroStripeIndices[k++] \u003d (short)i;\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/StripedReader.java"
    }
  }
}