{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineReaderManager.java",
  "functionName": "getEntities",
  "functionId": "getEntities___context-TimelineReaderContext__filters-TimelineEntityFilters__dataToRetrieve-TimelineDataToRetrieve",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderManager.java",
  "functionStartLine": 149,
  "functionEndLine": 162,
  "numCommitsSeen": 32,
  "timeTaken": 3973,
  "changeHistory": [
    "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
    "9d40d9d34ce3b88e868ae91fcc09377107c094c7",
    "6934b05c7117a12286fb2ba7a47f75e227cacb22",
    "8ef546c1ee9fce0b171813547253374d268566ba",
    "1f710484e5b8ab4d5c67379c012004e8a4242d15",
    "d95dc89a02d5915363153e0d9254f2cc0cf73ca0",
    "451c13b1de1e42394a4c92888192da9a9519d9ac"
  ],
  "changeHistoryShort": {
    "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3": "Ymultichange(Yparameterchange,Ybodychange)",
    "9d40d9d34ce3b88e868ae91fcc09377107c094c7": "Ymultichange(Ymodifierchange,Ybodychange)",
    "6934b05c7117a12286fb2ba7a47f75e227cacb22": "Ymultichange(Yparameterchange,Ybodychange)",
    "8ef546c1ee9fce0b171813547253374d268566ba": "Ymultichange(Yparameterchange,Ybodychange)",
    "1f710484e5b8ab4d5c67379c012004e8a4242d15": "Ybodychange",
    "d95dc89a02d5915363153e0d9254f2cc0cf73ca0": "Ybodychange",
    "451c13b1de1e42394a4c92888192da9a9519d9ac": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4446. Refactor reader API for better extensibility (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4446. Refactor reader API for better extensibility (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9d40d9d34ce3b88e868ae91fcc09377107c094c7",
          "commitAuthorOld": "Li Lu",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,14 @@\n-  public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n-      String flowName, Long flowRunId, String appId, String entityType,\n-      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n-      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n-      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n-      Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n-      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n-    String cluster \u003d getClusterID(clusterId, getConfig());\n-    Set\u003cTimelineEntity\u003e entities \u003d\n-        reader.getEntities(userId, cluster, flowName, flowRunId, appId,\n-        entityType, limit, createdTimeBegin, createdTimeEnd, relatesTo,\n-        isRelatedTo, infoFilters, configFilters, metricFilters, eventFilters,\n-        null, null, fieldsToRetrieve);\n+  public Set\u003cTimelineEntity\u003e getEntities(TimelineReaderContext context,\n+      TimelineEntityFilters filters, TimelineDataToRetrieve dataToRetrieve)\n+      throws IOException {\n+    context.setClusterId(getClusterID(context.getClusterId(), getConfig()));\n+    Set\u003cTimelineEntity\u003e entities \u003d reader.getEntities(\n+        new TimelineReaderContext(context), filters, dataToRetrieve);\n     if (entities !\u003d null) {\n-      TimelineEntityType type \u003d getTimelineEntityType(entityType);\n-      TimelineReaderContext context \u003d new TimelineReaderContext(cluster, userId,\n-          flowName, flowRunId, appId, entityType, null);\n+      TimelineEntityType type \u003d getTimelineEntityType(context.getEntityType());\n       for (TimelineEntity entity : entities) {\n         fillUID(type, entity, context);\n       }\n     }\n     return entities;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(TimelineReaderContext context,\n      TimelineEntityFilters filters, TimelineDataToRetrieve dataToRetrieve)\n      throws IOException {\n    context.setClusterId(getClusterID(context.getClusterId(), getConfig()));\n    Set\u003cTimelineEntity\u003e entities \u003d reader.getEntities(\n        new TimelineReaderContext(context), filters, dataToRetrieve);\n    if (entities !\u003d null) {\n      TimelineEntityType type \u003d getTimelineEntityType(context.getEntityType());\n      for (TimelineEntity entity : entities) {\n        fillUID(type, entity, context);\n      }\n    }\n    return entities;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderManager.java",
          "extendedDetails": {
            "oldValue": "[userId-String, clusterId-String, flowName-String, flowRunId-Long, appId-String, entityType-String, limit-Long, createdTimeBegin-Long, createdTimeEnd-Long, relatesTo-Map\u003cString,Set\u003cString\u003e\u003e, isRelatedTo-Map\u003cString,Set\u003cString\u003e\u003e, infoFilters-Map\u003cString,Object\u003e, configFilters-Map\u003cString,String\u003e, metricFilters-Set\u003cString\u003e, eventFilters-Set\u003cString\u003e, fieldsToRetrieve-EnumSet\u003cField\u003e]",
            "newValue": "[context-TimelineReaderContext, filters-TimelineEntityFilters, dataToRetrieve-TimelineDataToRetrieve]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4446. Refactor reader API for better extensibility (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9d40d9d34ce3b88e868ae91fcc09377107c094c7",
          "commitAuthorOld": "Li Lu",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,14 @@\n-  public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n-      String flowName, Long flowRunId, String appId, String entityType,\n-      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n-      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n-      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n-      Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n-      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n-    String cluster \u003d getClusterID(clusterId, getConfig());\n-    Set\u003cTimelineEntity\u003e entities \u003d\n-        reader.getEntities(userId, cluster, flowName, flowRunId, appId,\n-        entityType, limit, createdTimeBegin, createdTimeEnd, relatesTo,\n-        isRelatedTo, infoFilters, configFilters, metricFilters, eventFilters,\n-        null, null, fieldsToRetrieve);\n+  public Set\u003cTimelineEntity\u003e getEntities(TimelineReaderContext context,\n+      TimelineEntityFilters filters, TimelineDataToRetrieve dataToRetrieve)\n+      throws IOException {\n+    context.setClusterId(getClusterID(context.getClusterId(), getConfig()));\n+    Set\u003cTimelineEntity\u003e entities \u003d reader.getEntities(\n+        new TimelineReaderContext(context), filters, dataToRetrieve);\n     if (entities !\u003d null) {\n-      TimelineEntityType type \u003d getTimelineEntityType(entityType);\n-      TimelineReaderContext context \u003d new TimelineReaderContext(cluster, userId,\n-          flowName, flowRunId, appId, entityType, null);\n+      TimelineEntityType type \u003d getTimelineEntityType(context.getEntityType());\n       for (TimelineEntity entity : entities) {\n         fillUID(type, entity, context);\n       }\n     }\n     return entities;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(TimelineReaderContext context,\n      TimelineEntityFilters filters, TimelineDataToRetrieve dataToRetrieve)\n      throws IOException {\n    context.setClusterId(getClusterID(context.getClusterId(), getConfig()));\n    Set\u003cTimelineEntity\u003e entities \u003d reader.getEntities(\n        new TimelineReaderContext(context), filters, dataToRetrieve);\n    if (entities !\u003d null) {\n      TimelineEntityType type \u003d getTimelineEntityType(context.getEntityType());\n      for (TimelineEntity entity : entities) {\n        fillUID(type, entity, context);\n      }\n    }\n    return entities;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "9d40d9d34ce3b88e868ae91fcc09377107c094c7": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-4224. Support fetching entities by UID and change the REST\ninterface to conform to current REST APIs\u0027 in YARN. (Varun Saxena via\ngtcarrera9)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9d40d9d34ce3b88e868ae91fcc09377107c094c7",
      "commitAuthor": "Li Lu",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-4224. Support fetching entities by UID and change the REST\ninterface to conform to current REST APIs\u0027 in YARN. (Varun Saxena via\ngtcarrera9)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "9d40d9d34ce3b88e868ae91fcc09377107c094c7",
          "commitAuthor": "Li Lu",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,23 @@\n-  Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n+  public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n       String flowName, Long flowRunId, String appId, String entityType,\n       Long limit, Long createdTimeBegin, Long createdTimeEnd,\n       Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n       Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n       Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n       EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n     String cluster \u003d getClusterID(clusterId, getConfig());\n-    return reader.getEntities(userId, cluster, flowName, flowRunId, appId,\n+    Set\u003cTimelineEntity\u003e entities \u003d\n+        reader.getEntities(userId, cluster, flowName, flowRunId, appId,\n         entityType, limit, createdTimeBegin, createdTimeEnd, relatesTo,\n         isRelatedTo, infoFilters, configFilters, metricFilters, eventFilters,\n         null, null, fieldsToRetrieve);\n+    if (entities !\u003d null) {\n+      TimelineEntityType type \u003d getTimelineEntityType(entityType);\n+      TimelineReaderContext context \u003d new TimelineReaderContext(cluster, userId,\n+          flowName, flowRunId, appId, entityType, null);\n+      for (TimelineEntity entity : entities) {\n+        fillUID(type, entity, context);\n+      }\n+    }\n+    return entities;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n      String flowName, Long flowRunId, String appId, String entityType,\n      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n      Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n    String cluster \u003d getClusterID(clusterId, getConfig());\n    Set\u003cTimelineEntity\u003e entities \u003d\n        reader.getEntities(userId, cluster, flowName, flowRunId, appId,\n        entityType, limit, createdTimeBegin, createdTimeEnd, relatesTo,\n        isRelatedTo, infoFilters, configFilters, metricFilters, eventFilters,\n        null, null, fieldsToRetrieve);\n    if (entities !\u003d null) {\n      TimelineEntityType type \u003d getTimelineEntityType(entityType);\n      TimelineReaderContext context \u003d new TimelineReaderContext(cluster, userId,\n          flowName, flowRunId, appId, entityType, null);\n      for (TimelineEntity entity : entities) {\n        fillUID(type, entity, context);\n      }\n    }\n    return entities;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderManager.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4224. Support fetching entities by UID and change the REST\ninterface to conform to current REST APIs\u0027 in YARN. (Varun Saxena via\ngtcarrera9)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "9d40d9d34ce3b88e868ae91fcc09377107c094c7",
          "commitAuthor": "Li Lu",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,23 @@\n-  Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n+  public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n       String flowName, Long flowRunId, String appId, String entityType,\n       Long limit, Long createdTimeBegin, Long createdTimeEnd,\n       Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n       Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n       Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n       EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n     String cluster \u003d getClusterID(clusterId, getConfig());\n-    return reader.getEntities(userId, cluster, flowName, flowRunId, appId,\n+    Set\u003cTimelineEntity\u003e entities \u003d\n+        reader.getEntities(userId, cluster, flowName, flowRunId, appId,\n         entityType, limit, createdTimeBegin, createdTimeEnd, relatesTo,\n         isRelatedTo, infoFilters, configFilters, metricFilters, eventFilters,\n         null, null, fieldsToRetrieve);\n+    if (entities !\u003d null) {\n+      TimelineEntityType type \u003d getTimelineEntityType(entityType);\n+      TimelineReaderContext context \u003d new TimelineReaderContext(cluster, userId,\n+          flowName, flowRunId, appId, entityType, null);\n+      for (TimelineEntity entity : entities) {\n+        fillUID(type, entity, context);\n+      }\n+    }\n+    return entities;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n      String flowName, Long flowRunId, String appId, String entityType,\n      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n      Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n    String cluster \u003d getClusterID(clusterId, getConfig());\n    Set\u003cTimelineEntity\u003e entities \u003d\n        reader.getEntities(userId, cluster, flowName, flowRunId, appId,\n        entityType, limit, createdTimeBegin, createdTimeEnd, relatesTo,\n        isRelatedTo, infoFilters, configFilters, metricFilters, eventFilters,\n        null, null, fieldsToRetrieve);\n    if (entities !\u003d null) {\n      TimelineEntityType type \u003d getTimelineEntityType(entityType);\n      TimelineReaderContext context \u003d new TimelineReaderContext(cluster, userId,\n          flowName, flowRunId, appId, entityType, null);\n      for (TimelineEntity entity : entities) {\n        fillUID(type, entity, context);\n      }\n    }\n    return entities;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "6934b05c7117a12286fb2ba7a47f75e227cacb22": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4238. createdTime and modifiedTime is not reported while publishing entities to ATSv2. (Varun Saxena via Naganarasimha G R)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
      "commitAuthor": "Naganarasimha",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4238. createdTime and modifiedTime is not reported while publishing entities to ATSv2. (Varun Saxena via Naganarasimha G R)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
          "commitAuthor": "Naganarasimha",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "8ef546c1ee9fce0b171813547253374d268566ba",
          "commitAuthorOld": "Li Lu",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n   Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n       String flowName, Long flowRunId, String appId, String entityType,\n       Long limit, Long createdTimeBegin, Long createdTimeEnd,\n-      Long modifiedTimeBegin, Long modifiedTimeEnd,\n       Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n       Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n       Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n       EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n     String cluster \u003d getClusterID(clusterId, getConfig());\n     return reader.getEntities(userId, cluster, flowName, flowRunId, appId,\n-        entityType, limit, createdTimeBegin, createdTimeEnd, modifiedTimeBegin,\n-        modifiedTimeEnd, relatesTo, isRelatedTo, infoFilters, configFilters,\n-        metricFilters, eventFilters, null, null, fieldsToRetrieve);\n+        entityType, limit, createdTimeBegin, createdTimeEnd, relatesTo,\n+        isRelatedTo, infoFilters, configFilters, metricFilters, eventFilters,\n+        null, null, fieldsToRetrieve);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n      String flowName, Long flowRunId, String appId, String entityType,\n      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n      Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n    String cluster \u003d getClusterID(clusterId, getConfig());\n    return reader.getEntities(userId, cluster, flowName, flowRunId, appId,\n        entityType, limit, createdTimeBegin, createdTimeEnd, relatesTo,\n        isRelatedTo, infoFilters, configFilters, metricFilters, eventFilters,\n        null, null, fieldsToRetrieve);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderManager.java",
          "extendedDetails": {
            "oldValue": "[userId-String, clusterId-String, flowName-String, flowRunId-Long, appId-String, entityType-String, limit-Long, createdTimeBegin-Long, createdTimeEnd-Long, modifiedTimeBegin-Long, modifiedTimeEnd-Long, relatesTo-Map\u003cString,Set\u003cString\u003e\u003e, isRelatedTo-Map\u003cString,Set\u003cString\u003e\u003e, infoFilters-Map\u003cString,Object\u003e, configFilters-Map\u003cString,String\u003e, metricFilters-Set\u003cString\u003e, eventFilters-Set\u003cString\u003e, fieldsToRetrieve-EnumSet\u003cField\u003e]",
            "newValue": "[userId-String, clusterId-String, flowName-String, flowRunId-Long, appId-String, entityType-String, limit-Long, createdTimeBegin-Long, createdTimeEnd-Long, relatesTo-Map\u003cString,Set\u003cString\u003e\u003e, isRelatedTo-Map\u003cString,Set\u003cString\u003e\u003e, infoFilters-Map\u003cString,Object\u003e, configFilters-Map\u003cString,String\u003e, metricFilters-Set\u003cString\u003e, eventFilters-Set\u003cString\u003e, fieldsToRetrieve-EnumSet\u003cField\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4238. createdTime and modifiedTime is not reported while publishing entities to ATSv2. (Varun Saxena via Naganarasimha G R)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
          "commitAuthor": "Naganarasimha",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "8ef546c1ee9fce0b171813547253374d268566ba",
          "commitAuthorOld": "Li Lu",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n   Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n       String flowName, Long flowRunId, String appId, String entityType,\n       Long limit, Long createdTimeBegin, Long createdTimeEnd,\n-      Long modifiedTimeBegin, Long modifiedTimeEnd,\n       Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n       Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n       Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n       EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n     String cluster \u003d getClusterID(clusterId, getConfig());\n     return reader.getEntities(userId, cluster, flowName, flowRunId, appId,\n-        entityType, limit, createdTimeBegin, createdTimeEnd, modifiedTimeBegin,\n-        modifiedTimeEnd, relatesTo, isRelatedTo, infoFilters, configFilters,\n-        metricFilters, eventFilters, null, null, fieldsToRetrieve);\n+        entityType, limit, createdTimeBegin, createdTimeEnd, relatesTo,\n+        isRelatedTo, infoFilters, configFilters, metricFilters, eventFilters,\n+        null, null, fieldsToRetrieve);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n      String flowName, Long flowRunId, String appId, String entityType,\n      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n      Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n    String cluster \u003d getClusterID(clusterId, getConfig());\n    return reader.getEntities(userId, cluster, flowName, flowRunId, appId,\n        entityType, limit, createdTimeBegin, createdTimeEnd, relatesTo,\n        isRelatedTo, infoFilters, configFilters, metricFilters, eventFilters,\n        null, null, fieldsToRetrieve);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "8ef546c1ee9fce0b171813547253374d268566ba": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
      "commitAuthor": "Li Lu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
          "commitAuthor": "Li Lu",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n-      String flowId, Long flowRunId, String appId, String entityType,\n+      String flowName, Long flowRunId, String appId, String entityType,\n       Long limit, Long createdTimeBegin, Long createdTimeEnd,\n       Long modifiedTimeBegin, Long modifiedTimeEnd,\n       Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n       Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n       Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n       EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n     String cluster \u003d getClusterID(clusterId, getConfig());\n-    return reader.getEntities(userId, cluster, flowId, flowRunId, appId,\n+    return reader.getEntities(userId, cluster, flowName, flowRunId, appId,\n         entityType, limit, createdTimeBegin, createdTimeEnd, modifiedTimeBegin,\n         modifiedTimeEnd, relatesTo, isRelatedTo, infoFilters, configFilters,\n         metricFilters, eventFilters, null, null, fieldsToRetrieve);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n      String flowName, Long flowRunId, String appId, String entityType,\n      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n      Long modifiedTimeBegin, Long modifiedTimeEnd,\n      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n      Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n    String cluster \u003d getClusterID(clusterId, getConfig());\n    return reader.getEntities(userId, cluster, flowName, flowRunId, appId,\n        entityType, limit, createdTimeBegin, createdTimeEnd, modifiedTimeBegin,\n        modifiedTimeEnd, relatesTo, isRelatedTo, infoFilters, configFilters,\n        metricFilters, eventFilters, null, null, fieldsToRetrieve);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderManager.java",
          "extendedDetails": {
            "oldValue": "[userId-String, clusterId-String, flowId-String, flowRunId-Long, appId-String, entityType-String, limit-Long, createdTimeBegin-Long, createdTimeEnd-Long, modifiedTimeBegin-Long, modifiedTimeEnd-Long, relatesTo-Map\u003cString,Set\u003cString\u003e\u003e, isRelatedTo-Map\u003cString,Set\u003cString\u003e\u003e, infoFilters-Map\u003cString,Object\u003e, configFilters-Map\u003cString,String\u003e, metricFilters-Set\u003cString\u003e, eventFilters-Set\u003cString\u003e, fieldsToRetrieve-EnumSet\u003cField\u003e]",
            "newValue": "[userId-String, clusterId-String, flowName-String, flowRunId-Long, appId-String, entityType-String, limit-Long, createdTimeBegin-Long, createdTimeEnd-Long, modifiedTimeBegin-Long, modifiedTimeEnd-Long, relatesTo-Map\u003cString,Set\u003cString\u003e\u003e, isRelatedTo-Map\u003cString,Set\u003cString\u003e\u003e, infoFilters-Map\u003cString,Object\u003e, configFilters-Map\u003cString,String\u003e, metricFilters-Set\u003cString\u003e, eventFilters-Set\u003cString\u003e, fieldsToRetrieve-EnumSet\u003cField\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
          "commitAuthor": "Li Lu",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n-      String flowId, Long flowRunId, String appId, String entityType,\n+      String flowName, Long flowRunId, String appId, String entityType,\n       Long limit, Long createdTimeBegin, Long createdTimeEnd,\n       Long modifiedTimeBegin, Long modifiedTimeEnd,\n       Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n       Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n       Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n       EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n     String cluster \u003d getClusterID(clusterId, getConfig());\n-    return reader.getEntities(userId, cluster, flowId, flowRunId, appId,\n+    return reader.getEntities(userId, cluster, flowName, flowRunId, appId,\n         entityType, limit, createdTimeBegin, createdTimeEnd, modifiedTimeBegin,\n         modifiedTimeEnd, relatesTo, isRelatedTo, infoFilters, configFilters,\n         metricFilters, eventFilters, null, null, fieldsToRetrieve);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n      String flowName, Long flowRunId, String appId, String entityType,\n      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n      Long modifiedTimeBegin, Long modifiedTimeEnd,\n      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n      Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n    String cluster \u003d getClusterID(clusterId, getConfig());\n    return reader.getEntities(userId, cluster, flowName, flowRunId, appId,\n        entityType, limit, createdTimeBegin, createdTimeEnd, modifiedTimeBegin,\n        modifiedTimeEnd, relatesTo, isRelatedTo, infoFilters, configFilters,\n        metricFilters, eventFilters, null, null, fieldsToRetrieve);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "1f710484e5b8ab4d5c67379c012004e8a4242d15": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3862. Support for fetching specific configs and metrics based on prefixes (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "d95dc89a02d5915363153e0d9254f2cc0cf73ca0",
      "commitAuthorOld": "Vrushali Channapattan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n       String flowId, Long flowRunId, String appId, String entityType,\n       Long limit, Long createdTimeBegin, Long createdTimeEnd,\n       Long modifiedTimeBegin, Long modifiedTimeEnd,\n       Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n       Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n       Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n       EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n     String cluster \u003d getClusterID(clusterId, getConfig());\n     return reader.getEntities(userId, cluster, flowId, flowRunId, appId,\n         entityType, limit, createdTimeBegin, createdTimeEnd, modifiedTimeBegin,\n         modifiedTimeEnd, relatesTo, isRelatedTo, infoFilters, configFilters,\n-        metricFilters, eventFilters, fieldsToRetrieve);\n+        metricFilters, eventFilters, null, null, fieldsToRetrieve);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n      String flowId, Long flowRunId, String appId, String entityType,\n      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n      Long modifiedTimeBegin, Long modifiedTimeEnd,\n      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n      Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n    String cluster \u003d getClusterID(clusterId, getConfig());\n    return reader.getEntities(userId, cluster, flowId, flowRunId, appId,\n        entityType, limit, createdTimeBegin, createdTimeEnd, modifiedTimeBegin,\n        modifiedTimeEnd, relatesTo, isRelatedTo, infoFilters, configFilters,\n        metricFilters, eventFilters, null, null, fieldsToRetrieve);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderManager.java",
      "extendedDetails": {}
    },
    "d95dc89a02d5915363153e0d9254f2cc0cf73ca0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4075 [reader REST API] implement support for querying for flows and flow runs (Varun Saxena via vrushali)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "d95dc89a02d5915363153e0d9254f2cc0cf73ca0",
      "commitAuthor": "Vrushali Channapattan",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "451c13b1de1e42394a4c92888192da9a9519d9ac",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n       String flowId, Long flowRunId, String appId, String entityType,\n       Long limit, Long createdTimeBegin, Long createdTimeEnd,\n       Long modifiedTimeBegin, Long modifiedTimeEnd,\n       Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n       Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n       Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n       EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n-    return reader.getEntities(userId, clusterId, flowId, flowRunId, appId,\n+    String cluster \u003d getClusterID(clusterId, getConfig());\n+    return reader.getEntities(userId, cluster, flowId, flowRunId, appId,\n         entityType, limit, createdTimeBegin, createdTimeEnd, modifiedTimeBegin,\n         modifiedTimeEnd, relatesTo, isRelatedTo, infoFilters, configFilters,\n         metricFilters, eventFilters, fieldsToRetrieve);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n      String flowId, Long flowRunId, String appId, String entityType,\n      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n      Long modifiedTimeBegin, Long modifiedTimeEnd,\n      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n      Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n    String cluster \u003d getClusterID(clusterId, getConfig());\n    return reader.getEntities(userId, cluster, flowId, flowRunId, appId,\n        entityType, limit, createdTimeBegin, createdTimeEnd, modifiedTimeBegin,\n        modifiedTimeEnd, relatesTo, isRelatedTo, infoFilters, configFilters,\n        metricFilters, eventFilters, fieldsToRetrieve);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderManager.java",
      "extendedDetails": {}
    },
    "451c13b1de1e42394a4c92888192da9a9519d9ac": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3814. REST API implementation for getting raw entities in TimelineReader (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "451c13b1de1e42394a4c92888192da9a9519d9ac",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,13 @@\n+  Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n+      String flowId, Long flowRunId, String appId, String entityType,\n+      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n+      Long modifiedTimeBegin, Long modifiedTimeEnd,\n+      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n+      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n+      Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n+      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n+    return reader.getEntities(userId, clusterId, flowId, flowRunId, appId,\n+        entityType, limit, createdTimeBegin, createdTimeEnd, modifiedTimeBegin,\n+        modifiedTimeEnd, relatesTo, isRelatedTo, infoFilters, configFilters,\n+        metricFilters, eventFilters, fieldsToRetrieve);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n      String flowId, Long flowRunId, String appId, String entityType,\n      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n      Long modifiedTimeBegin, Long modifiedTimeEnd,\n      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n      Set\u003cString\u003e  metricFilters, Set\u003cString\u003e eventFilters,\n      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n    return reader.getEntities(userId, clusterId, flowId, flowRunId, appId,\n        entityType, limit, createdTimeBegin, createdTimeEnd, modifiedTimeBegin,\n        modifiedTimeEnd, relatesTo, isRelatedTo, infoFilters, configFilters,\n        metricFilters, eventFilters, fieldsToRetrieve);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderManager.java"
    }
  }
}