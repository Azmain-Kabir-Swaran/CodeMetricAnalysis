{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKSignerSecretProvider.java",
  "functionName": "pullFromZK",
  "functionId": "pullFromZK___isInit-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/ZKSignerSecretProvider.java",
  "functionStartLine": 311,
  "functionEndLine": 343,
  "numCommitsSeen": 11,
  "timeTaken": 699,
  "changeHistory": [
    "932ae036acb96634c5dd435d57ba02ce4d5e8918"
  ],
  "changeHistoryShort": {
    "932ae036acb96634c5dd435d57ba02ce4d5e8918": "Yintroduced"
  },
  "changeHistoryDetails": {
    "932ae036acb96634c5dd435d57ba02ce4d5e8918": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10868. AuthenticationFilter should support externalizing the secret for signing and provide rotation support. (rkanter via tucu)\n",
      "commitDate": "15/09/14 5:05 PM",
      "commitName": "932ae036acb96634c5dd435d57ba02ce4d5e8918",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,33 @@\n+  private synchronized void pullFromZK(boolean isInit) {\n+    try {\n+      Stat stat \u003d new Stat();\n+      byte[] bytes \u003d client.getData().storingStatIn(stat).forPath(path);\n+      ByteBuffer bb \u003d ByteBuffer.wrap(bytes);\n+      int dataVersion \u003d bb.getInt();\n+      if (dataVersion \u003e DATA_VERSION) {\n+        throw new IllegalStateException(\"Cannot load data from ZooKeeper; it\"\n+                + \"was written with a newer version\");\n+      }\n+      int nextSecretLength \u003d bb.getInt();\n+      byte[] nextSecret \u003d new byte[nextSecretLength];\n+      bb.get(nextSecret);\n+      this.nextSecret \u003d nextSecret;\n+      zkVersion \u003d stat.getVersion();\n+      if (isInit) {\n+        int currentSecretLength \u003d bb.getInt();\n+        byte[] currentSecret \u003d new byte[currentSecretLength];\n+        bb.get(currentSecret);\n+        int previousSecretLength \u003d bb.getInt();\n+        byte[] previousSecret \u003d null;\n+        if (previousSecretLength \u003e 0) {\n+          previousSecret \u003d new byte[previousSecretLength];\n+          bb.get(previousSecret);\n+        }\n+        super.initSecrets(currentSecret, previousSecret);\n+        nextRolloverDate \u003d bb.getLong();\n+      }\n+    } catch (Exception ex) {\n+      LOG.error(\"An unexpected exception occurred while pulling data from\"\n+              + \"ZooKeeper\", ex);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void pullFromZK(boolean isInit) {\n    try {\n      Stat stat \u003d new Stat();\n      byte[] bytes \u003d client.getData().storingStatIn(stat).forPath(path);\n      ByteBuffer bb \u003d ByteBuffer.wrap(bytes);\n      int dataVersion \u003d bb.getInt();\n      if (dataVersion \u003e DATA_VERSION) {\n        throw new IllegalStateException(\"Cannot load data from ZooKeeper; it\"\n                + \"was written with a newer version\");\n      }\n      int nextSecretLength \u003d bb.getInt();\n      byte[] nextSecret \u003d new byte[nextSecretLength];\n      bb.get(nextSecret);\n      this.nextSecret \u003d nextSecret;\n      zkVersion \u003d stat.getVersion();\n      if (isInit) {\n        int currentSecretLength \u003d bb.getInt();\n        byte[] currentSecret \u003d new byte[currentSecretLength];\n        bb.get(currentSecret);\n        int previousSecretLength \u003d bb.getInt();\n        byte[] previousSecret \u003d null;\n        if (previousSecretLength \u003e 0) {\n          previousSecret \u003d new byte[previousSecretLength];\n          bb.get(previousSecret);\n        }\n        super.initSecrets(currentSecret, previousSecret);\n        nextRolloverDate \u003d bb.getLong();\n      }\n    } catch (Exception ex) {\n      LOG.error(\"An unexpected exception occurred while pulling data from\"\n              + \"ZooKeeper\", ex);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/ZKSignerSecretProvider.java"
    }
  }
}