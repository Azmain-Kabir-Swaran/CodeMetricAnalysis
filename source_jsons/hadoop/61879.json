{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceCalculatorProcessTree.java",
  "functionName": "getResourceCalculatorProcessTree",
  "functionId": "getResourceCalculatorProcessTree___pid-String__clazz-Class__? extends ResourceCalculatorProcessTree____conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.java",
  "functionStartLine": 171,
  "functionEndLine": 196,
  "numCommitsSeen": 14,
  "timeTaken": 1333,
  "changeHistory": [
    "649ef7ac334e63a7c676f8e7406f59d9466eb6f2",
    "638801cce16fc1dc3259c541dc30a599faaddda1",
    "244ec4a5d175801382f7d6d5bf67c0dce61361c8",
    "a1aa1b93497034411d76906405bb6a70a441a0b7"
  ],
  "changeHistoryShort": {
    "649ef7ac334e63a7c676f8e7406f59d9466eb6f2": "Ybodychange",
    "638801cce16fc1dc3259c541dc30a599faaddda1": "Ybodychange",
    "244ec4a5d175801382f7d6d5bf67c0dce61361c8": "Ybodychange",
    "a1aa1b93497034411d76906405bb6a70a441a0b7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "649ef7ac334e63a7c676f8e7406f59d9466eb6f2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7064. Use cgroup to get container resource utilization. (Miklos Szegedi via Haibo Chen)\n",
      "commitDate": "26/01/18 4:27 PM",
      "commitName": "649ef7ac334e63a7c676f8e7406f59d9466eb6f2",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "19/04/17 10:31 AM",
      "commitNameOld": "15acdbdba26c8c869c7dcd2fa398af5427735798",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 282.29,
      "commitsBetweenForRepo": 1904,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   public static ResourceCalculatorProcessTree getResourceCalculatorProcessTree(\n     String pid, Class\u003c? extends ResourceCalculatorProcessTree\u003e clazz, Configuration conf) {\n \n     if (clazz !\u003d null) {\n       try {\n         Constructor \u003c? extends ResourceCalculatorProcessTree\u003e c \u003d clazz.getConstructor(String.class);\n         ResourceCalculatorProcessTree rctree \u003d c.newInstance(pid);\n         rctree.setConf(conf);\n+        rctree.initialize();\n         return rctree;\n       } catch(Exception e) {\n         throw new RuntimeException(e);\n       }\n     }\n \n     // No class given, try a os specific class\n     if (ProcfsBasedProcessTree.isAvailable()) {\n       return new ProcfsBasedProcessTree(pid);\n     }\n     if (WindowsBasedProcessTree.isAvailable()) {\n       return new WindowsBasedProcessTree(pid);\n     }\n \n     // Not supported on this system.\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ResourceCalculatorProcessTree getResourceCalculatorProcessTree(\n    String pid, Class\u003c? extends ResourceCalculatorProcessTree\u003e clazz, Configuration conf) {\n\n    if (clazz !\u003d null) {\n      try {\n        Constructor \u003c? extends ResourceCalculatorProcessTree\u003e c \u003d clazz.getConstructor(String.class);\n        ResourceCalculatorProcessTree rctree \u003d c.newInstance(pid);\n        rctree.setConf(conf);\n        rctree.initialize();\n        return rctree;\n      } catch(Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n    // No class given, try a os specific class\n    if (ProcfsBasedProcessTree.isAvailable()) {\n      return new ProcfsBasedProcessTree(pid);\n    }\n    if (WindowsBasedProcessTree.isAvailable()) {\n      return new WindowsBasedProcessTree(pid);\n    }\n\n    // Not supported on this system.\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.java",
      "extendedDetails": {}
    },
    "638801cce16fc1dc3259c541dc30a599faaddda1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1453486 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/13 11:15 AM",
      "commitName": "638801cce16fc1dc3259c541dc30a599faaddda1",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "19/12/12 4:20 PM",
      "commitNameOld": "1a49c854386d3ba4aef6f29f46e2bd5e71e86dc1",
      "commitAuthorOld": "Luke Lu",
      "daysBetweenCommits": 76.79,
      "commitsBetweenForRepo": 320,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,25 @@\n   public static ResourceCalculatorProcessTree getResourceCalculatorProcessTree(\n     String pid, Class\u003c? extends ResourceCalculatorProcessTree\u003e clazz, Configuration conf) {\n \n     if (clazz !\u003d null) {\n       try {\n         Constructor \u003c? extends ResourceCalculatorProcessTree\u003e c \u003d clazz.getConstructor(String.class);\n         ResourceCalculatorProcessTree rctree \u003d c.newInstance(pid);\n         rctree.setConf(conf);\n         return rctree;\n       } catch(Exception e) {\n         throw new RuntimeException(e);\n       }\n     }\n \n     // No class given, try a os specific class\n-    try {\n-      String osName \u003d System.getProperty(\"os.name\");\n-      if (osName.startsWith(\"Linux\")) {\n-        return new ProcfsBasedProcessTree(pid);\n-      }\n-    } catch (SecurityException se) {\n-      // Failed to get Operating System name.\n-      return null;\n+    if (ProcfsBasedProcessTree.isAvailable()) {\n+      return new ProcfsBasedProcessTree(pid);\n+    }\n+    if (WindowsBasedProcessTree.isAvailable()) {\n+      return new WindowsBasedProcessTree(pid);\n     }\n \n     // Not supported on this system.\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ResourceCalculatorProcessTree getResourceCalculatorProcessTree(\n    String pid, Class\u003c? extends ResourceCalculatorProcessTree\u003e clazz, Configuration conf) {\n\n    if (clazz !\u003d null) {\n      try {\n        Constructor \u003c? extends ResourceCalculatorProcessTree\u003e c \u003d clazz.getConstructor(String.class);\n        ResourceCalculatorProcessTree rctree \u003d c.newInstance(pid);\n        rctree.setConf(conf);\n        return rctree;\n      } catch(Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n    // No class given, try a os specific class\n    if (ProcfsBasedProcessTree.isAvailable()) {\n      return new ProcfsBasedProcessTree(pid);\n    }\n    if (WindowsBasedProcessTree.isAvailable()) {\n      return new WindowsBasedProcessTree(pid);\n    }\n\n    // Not supported on this system.\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.java",
      "extendedDetails": {}
    },
    "244ec4a5d175801382f7d6d5bf67c0dce61361c8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-178. Fix custom ProcessTree instance creation (Radim Kolar via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1401698 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/10/12 7:07 AM",
      "commitName": "244ec4a5d175801382f7d6d5bf67c0dce61361c8",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "07/09/12 8:48 AM",
      "commitNameOld": "a1aa1b93497034411d76906405bb6a70a441a0b7",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 46.93,
      "commitsBetweenForRepo": 267,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,28 @@\n   public static ResourceCalculatorProcessTree getResourceCalculatorProcessTree(\n-\t  String pid, Class\u003c? extends ResourceCalculatorProcessTree\u003e clazz, Configuration conf) {\n+    String pid, Class\u003c? extends ResourceCalculatorProcessTree\u003e clazz, Configuration conf) {\n \n     if (clazz !\u003d null) {\n-      return ReflectionUtils.newInstance(clazz, conf);\n+      try {\n+        Constructor \u003c? extends ResourceCalculatorProcessTree\u003e c \u003d clazz.getConstructor(String.class);\n+        ResourceCalculatorProcessTree rctree \u003d c.newInstance(pid);\n+        rctree.setConf(conf);\n+        return rctree;\n+      } catch(Exception e) {\n+        throw new RuntimeException(e);\n+      }\n     }\n \n     // No class given, try a os specific class\n     try {\n       String osName \u003d System.getProperty(\"os.name\");\n       if (osName.startsWith(\"Linux\")) {\n         return new ProcfsBasedProcessTree(pid);\n       }\n     } catch (SecurityException se) {\n       // Failed to get Operating System name.\n       return null;\n     }\n \n     // Not supported on this system.\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ResourceCalculatorProcessTree getResourceCalculatorProcessTree(\n    String pid, Class\u003c? extends ResourceCalculatorProcessTree\u003e clazz, Configuration conf) {\n\n    if (clazz !\u003d null) {\n      try {\n        Constructor \u003c? extends ResourceCalculatorProcessTree\u003e c \u003d clazz.getConstructor(String.class);\n        ResourceCalculatorProcessTree rctree \u003d c.newInstance(pid);\n        rctree.setConf(conf);\n        return rctree;\n      } catch(Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n    // No class given, try a os specific class\n    try {\n      String osName \u003d System.getProperty(\"os.name\");\n      if (osName.startsWith(\"Linux\")) {\n        return new ProcfsBasedProcessTree(pid);\n      }\n    } catch (SecurityException se) {\n      // Failed to get Operating System name.\n      return null;\n    }\n\n    // Not supported on this system.\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.java",
      "extendedDetails": {}
    },
    "a1aa1b93497034411d76906405bb6a70a441a0b7": {
      "type": "Yintroduced",
      "commitMessage": "YARN-57. Allow process-tree based resource calculation et al. to be pluggable to support it on multiple platforms. Contributed by Radim Kolar.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1382072 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/09/12 8:48 AM",
      "commitName": "a1aa1b93497034411d76906405bb6a70a441a0b7",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,21 @@\n+  public static ResourceCalculatorProcessTree getResourceCalculatorProcessTree(\n+\t  String pid, Class\u003c? extends ResourceCalculatorProcessTree\u003e clazz, Configuration conf) {\n+\n+    if (clazz !\u003d null) {\n+      return ReflectionUtils.newInstance(clazz, conf);\n+    }\n+\n+    // No class given, try a os specific class\n+    try {\n+      String osName \u003d System.getProperty(\"os.name\");\n+      if (osName.startsWith(\"Linux\")) {\n+        return new ProcfsBasedProcessTree(pid);\n+      }\n+    } catch (SecurityException se) {\n+      // Failed to get Operating System name.\n+      return null;\n+    }\n+\n+    // Not supported on this system.\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static ResourceCalculatorProcessTree getResourceCalculatorProcessTree(\n\t  String pid, Class\u003c? extends ResourceCalculatorProcessTree\u003e clazz, Configuration conf) {\n\n    if (clazz !\u003d null) {\n      return ReflectionUtils.newInstance(clazz, conf);\n    }\n\n    // No class given, try a os specific class\n    try {\n      String osName \u003d System.getProperty(\"os.name\");\n      if (osName.startsWith(\"Linux\")) {\n        return new ProcfsBasedProcessTree(pid);\n      }\n    } catch (SecurityException se) {\n      // Failed to get Operating System name.\n      return null;\n    }\n\n    // Not supported on this system.\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ResourceCalculatorProcessTree.java"
    }
  }
}