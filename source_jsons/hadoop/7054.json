{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSPermissionChecker.java",
  "functionName": "checkStickyBit",
  "functionId": "checkStickyBit___inodes-INodeAttributes[]__components-byte[][]__index-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
  "functionStartLine": 606,
  "functionEndLine": 620,
  "numCommitsSeen": 205,
  "timeTaken": 6682,
  "changeHistory": [
    "5690b51ef7c708c0a71162ddaff04466bc71cdcc",
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
    "438a9f047eb6af2a4b916a4f6ef6f68adeab8068",
    "970daaa5e44d3c09afd46d1c8e923a5096708c44",
    "53a28afe293e5bf185c8d4f2c7aea212e66015c2",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795"
  ],
  "changeHistoryShort": {
    "5690b51ef7c708c0a71162ddaff04466bc71cdcc": "Ybodychange",
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": "Ymultichange(Yparameterchange,Ybodychange)",
    "438a9f047eb6af2a4b916a4f6ef6f68adeab8068": "Ymultichange(Yparameterchange,Ybodychange)",
    "970daaa5e44d3c09afd46d1c8e923a5096708c44": "Ymultichange(Yparameterchange,Ybodychange)",
    "53a28afe293e5bf185c8d4f2c7aea212e66015c2": "Ymultichange(Yparameterchange,Ybodychange)",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": "Ymultichange(Yparameterchange,Ybodychange)"
  },
  "changeHistoryDetails": {
    "5690b51ef7c708c0a71162ddaff04466bc71cdcc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11100. Recursively deleting file protected by sticky bit should fail. Contributed by John Zhuge.\n",
      "commitDate": "16/02/17 5:39 AM",
      "commitName": "5690b51ef7c708c0a71162ddaff04466bc71cdcc",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "24/10/16 3:14 PM",
      "commitNameOld": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 114.64,
      "commitsBetweenForRepo": 711,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,15 @@\n   private void checkStickyBit(INodeAttributes[] inodes, byte[][] components,\n       int index) throws AccessControlException {\n     INodeAttributes parent \u003d inodes[index];\n     if (!parent.getFsPermission().getStickyBit()) {\n       return;\n     }\n \n-    // If this user is the directory owner, return\n-    if (parent.getUserName().equals(getUser())) {\n-      return;\n-    }\n-\n     INodeAttributes inode \u003d inodes[index + 1];\n-    // if this user is the file owner, return\n-    if (inode.getUserName().equals(getUser())) {\n+    if (!isStickyBitViolated(parent, inode)) {\n       return;\n     }\n \n-    throw new AccessControlException(String.format(\n-        \"Permission denied by sticky bit: user\u003d%s, path\u003d\\\"%s\\\":%s:%s:%s%s, \" +\n-        \"parent\u003d\\\"%s\\\":%s:%s:%s%s\", user,\n-        getPath(components, 0, index + 1),\n-        inode.getUserName(), inode.getGroupName(),\n-        inode.isDirectory() ? \"d\" : \"-\", inode.getFsPermission().toString(),\n-        getPath(components, 0, index),\n-        parent.getUserName(), parent.getGroupName(),\n-        parent.isDirectory() ? \"d\" : \"-\", parent.getFsPermission().toString()));\n+    throwStickyBitException(getPath(components, 0, index + 1), inode,\n+        getPath(components, 0, index), parent);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkStickyBit(INodeAttributes[] inodes, byte[][] components,\n      int index) throws AccessControlException {\n    INodeAttributes parent \u003d inodes[index];\n    if (!parent.getFsPermission().getStickyBit()) {\n      return;\n    }\n\n    INodeAttributes inode \u003d inodes[index + 1];\n    if (!isStickyBitViolated(parent, inode)) {\n      return;\n    }\n\n    throwStickyBitException(getPath(components, 0, index + 1), inode,\n        getPath(components, 0, index), parent);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
      "extendedDetails": {}
    },
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
      "commitDate": "24/10/16 3:14 PM",
      "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
          "commitDate": "24/10/16 3:14 PM",
          "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "19/08/16 7:12 AM",
          "commitNameOld": "2550371f66c49fe0e40aadaa68744311270084ce",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 66.34,
          "commitsBetweenForRepo": 421,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-  private void checkStickyBit(INodeAttributes[] inodes, int index)\n-      throws AccessControlException {\n+  private void checkStickyBit(INodeAttributes[] inodes, byte[][] components,\n+      int index) throws AccessControlException {\n     INodeAttributes parent \u003d inodes[index];\n     if (!parent.getFsPermission().getStickyBit()) {\n       return;\n     }\n \n     // If this user is the directory owner, return\n     if (parent.getUserName().equals(getUser())) {\n       return;\n     }\n \n     INodeAttributes inode \u003d inodes[index + 1];\n     // if this user is the file owner, return\n     if (inode.getUserName().equals(getUser())) {\n       return;\n     }\n \n     throw new AccessControlException(String.format(\n         \"Permission denied by sticky bit: user\u003d%s, path\u003d\\\"%s\\\":%s:%s:%s%s, \" +\n         \"parent\u003d\\\"%s\\\":%s:%s:%s%s\", user,\n-        constructPath(inodes, index + 1),\n+        getPath(components, 0, index + 1),\n         inode.getUserName(), inode.getGroupName(),\n         inode.isDirectory() ? \"d\" : \"-\", inode.getFsPermission().toString(),\n-        constructPath(inodes, index),\n+        getPath(components, 0, index),\n         parent.getUserName(), parent.getGroupName(),\n         parent.isDirectory() ? \"d\" : \"-\", parent.getFsPermission().toString()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkStickyBit(INodeAttributes[] inodes, byte[][] components,\n      int index) throws AccessControlException {\n    INodeAttributes parent \u003d inodes[index];\n    if (!parent.getFsPermission().getStickyBit()) {\n      return;\n    }\n\n    // If this user is the directory owner, return\n    if (parent.getUserName().equals(getUser())) {\n      return;\n    }\n\n    INodeAttributes inode \u003d inodes[index + 1];\n    // if this user is the file owner, return\n    if (inode.getUserName().equals(getUser())) {\n      return;\n    }\n\n    throw new AccessControlException(String.format(\n        \"Permission denied by sticky bit: user\u003d%s, path\u003d\\\"%s\\\":%s:%s:%s%s, \" +\n        \"parent\u003d\\\"%s\\\":%s:%s:%s%s\", user,\n        getPath(components, 0, index + 1),\n        inode.getUserName(), inode.getGroupName(),\n        inode.isDirectory() ? \"d\" : \"-\", inode.getFsPermission().toString(),\n        getPath(components, 0, index),\n        parent.getUserName(), parent.getGroupName(),\n        parent.isDirectory() ? \"d\" : \"-\", parent.getFsPermission().toString()));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {
            "oldValue": "[inodes-INodeAttributes[], index-int]",
            "newValue": "[inodes-INodeAttributes[], components-byte[][], index-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
          "commitDate": "24/10/16 3:14 PM",
          "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "19/08/16 7:12 AM",
          "commitNameOld": "2550371f66c49fe0e40aadaa68744311270084ce",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 66.34,
          "commitsBetweenForRepo": 421,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-  private void checkStickyBit(INodeAttributes[] inodes, int index)\n-      throws AccessControlException {\n+  private void checkStickyBit(INodeAttributes[] inodes, byte[][] components,\n+      int index) throws AccessControlException {\n     INodeAttributes parent \u003d inodes[index];\n     if (!parent.getFsPermission().getStickyBit()) {\n       return;\n     }\n \n     // If this user is the directory owner, return\n     if (parent.getUserName().equals(getUser())) {\n       return;\n     }\n \n     INodeAttributes inode \u003d inodes[index + 1];\n     // if this user is the file owner, return\n     if (inode.getUserName().equals(getUser())) {\n       return;\n     }\n \n     throw new AccessControlException(String.format(\n         \"Permission denied by sticky bit: user\u003d%s, path\u003d\\\"%s\\\":%s:%s:%s%s, \" +\n         \"parent\u003d\\\"%s\\\":%s:%s:%s%s\", user,\n-        constructPath(inodes, index + 1),\n+        getPath(components, 0, index + 1),\n         inode.getUserName(), inode.getGroupName(),\n         inode.isDirectory() ? \"d\" : \"-\", inode.getFsPermission().toString(),\n-        constructPath(inodes, index),\n+        getPath(components, 0, index),\n         parent.getUserName(), parent.getGroupName(),\n         parent.isDirectory() ? \"d\" : \"-\", parent.getFsPermission().toString()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkStickyBit(INodeAttributes[] inodes, byte[][] components,\n      int index) throws AccessControlException {\n    INodeAttributes parent \u003d inodes[index];\n    if (!parent.getFsPermission().getStickyBit()) {\n      return;\n    }\n\n    // If this user is the directory owner, return\n    if (parent.getUserName().equals(getUser())) {\n      return;\n    }\n\n    INodeAttributes inode \u003d inodes[index + 1];\n    // if this user is the file owner, return\n    if (inode.getUserName().equals(getUser())) {\n      return;\n    }\n\n    throw new AccessControlException(String.format(\n        \"Permission denied by sticky bit: user\u003d%s, path\u003d\\\"%s\\\":%s:%s:%s%s, \" +\n        \"parent\u003d\\\"%s\\\":%s:%s:%s%s\", user,\n        getPath(components, 0, index + 1),\n        inode.getUserName(), inode.getGroupName(),\n        inode.isDirectory() ? \"d\" : \"-\", inode.getFsPermission().toString(),\n        getPath(components, 0, index),\n        parent.getUserName(), parent.getGroupName(),\n        parent.isDirectory() ? \"d\" : \"-\", parent.getFsPermission().toString()));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {}
        }
      ]
    },
    "438a9f047eb6af2a4b916a4f6ef6f68adeab8068": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10673. Optimize FSPermissionChecker\u0027s internal path usage. Contributed by Daryn Sharp.\n",
      "commitDate": "04/08/16 2:14 PM",
      "commitName": "438a9f047eb6af2a4b916a4f6ef6f68adeab8068",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10673. Optimize FSPermissionChecker\u0027s internal path usage. Contributed by Daryn Sharp.\n",
          "commitDate": "04/08/16 2:14 PM",
          "commitName": "438a9f047eb6af2a4b916a4f6ef6f68adeab8068",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "27/05/16 10:02 AM",
          "commitNameOld": "5ea6fd85c7aff6df28b87789f607bb57ee920639",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 69.18,
          "commitsBetweenForRepo": 580,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,28 @@\n-  private void checkStickyBit(INodeAttributes parent, INodeAttributes inode,\n-      String path) throws AccessControlException {\n+  private void checkStickyBit(INodeAttributes[] inodes, int index)\n+      throws AccessControlException {\n+    INodeAttributes parent \u003d inodes[index];\n     if (!parent.getFsPermission().getStickyBit()) {\n       return;\n     }\n \n     // If this user is the directory owner, return\n     if (parent.getUserName().equals(getUser())) {\n       return;\n     }\n \n+    INodeAttributes inode \u003d inodes[index + 1];\n     // if this user is the file owner, return\n     if (inode.getUserName().equals(getUser())) {\n       return;\n     }\n \n     throw new AccessControlException(String.format(\n         \"Permission denied by sticky bit: user\u003d%s, path\u003d\\\"%s\\\":%s:%s:%s%s, \" +\n         \"parent\u003d\\\"%s\\\":%s:%s:%s%s\", user,\n-        path, inode.getUserName(), inode.getGroupName(),\n+        constructPath(inodes, index + 1),\n+        inode.getUserName(), inode.getGroupName(),\n         inode.isDirectory() ? \"d\" : \"-\", inode.getFsPermission().toString(),\n-        path.substring(0, path.length() - inode.toString().length() - 1 ),\n+        constructPath(inodes, index),\n         parent.getUserName(), parent.getGroupName(),\n         parent.isDirectory() ? \"d\" : \"-\", parent.getFsPermission().toString()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkStickyBit(INodeAttributes[] inodes, int index)\n      throws AccessControlException {\n    INodeAttributes parent \u003d inodes[index];\n    if (!parent.getFsPermission().getStickyBit()) {\n      return;\n    }\n\n    // If this user is the directory owner, return\n    if (parent.getUserName().equals(getUser())) {\n      return;\n    }\n\n    INodeAttributes inode \u003d inodes[index + 1];\n    // if this user is the file owner, return\n    if (inode.getUserName().equals(getUser())) {\n      return;\n    }\n\n    throw new AccessControlException(String.format(\n        \"Permission denied by sticky bit: user\u003d%s, path\u003d\\\"%s\\\":%s:%s:%s%s, \" +\n        \"parent\u003d\\\"%s\\\":%s:%s:%s%s\", user,\n        constructPath(inodes, index + 1),\n        inode.getUserName(), inode.getGroupName(),\n        inode.isDirectory() ? \"d\" : \"-\", inode.getFsPermission().toString(),\n        constructPath(inodes, index),\n        parent.getUserName(), parent.getGroupName(),\n        parent.isDirectory() ? \"d\" : \"-\", parent.getFsPermission().toString()));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {
            "oldValue": "[parent-INodeAttributes, inode-INodeAttributes, path-String]",
            "newValue": "[inodes-INodeAttributes[], index-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10673. Optimize FSPermissionChecker\u0027s internal path usage. Contributed by Daryn Sharp.\n",
          "commitDate": "04/08/16 2:14 PM",
          "commitName": "438a9f047eb6af2a4b916a4f6ef6f68adeab8068",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "27/05/16 10:02 AM",
          "commitNameOld": "5ea6fd85c7aff6df28b87789f607bb57ee920639",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 69.18,
          "commitsBetweenForRepo": 580,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,28 @@\n-  private void checkStickyBit(INodeAttributes parent, INodeAttributes inode,\n-      String path) throws AccessControlException {\n+  private void checkStickyBit(INodeAttributes[] inodes, int index)\n+      throws AccessControlException {\n+    INodeAttributes parent \u003d inodes[index];\n     if (!parent.getFsPermission().getStickyBit()) {\n       return;\n     }\n \n     // If this user is the directory owner, return\n     if (parent.getUserName().equals(getUser())) {\n       return;\n     }\n \n+    INodeAttributes inode \u003d inodes[index + 1];\n     // if this user is the file owner, return\n     if (inode.getUserName().equals(getUser())) {\n       return;\n     }\n \n     throw new AccessControlException(String.format(\n         \"Permission denied by sticky bit: user\u003d%s, path\u003d\\\"%s\\\":%s:%s:%s%s, \" +\n         \"parent\u003d\\\"%s\\\":%s:%s:%s%s\", user,\n-        path, inode.getUserName(), inode.getGroupName(),\n+        constructPath(inodes, index + 1),\n+        inode.getUserName(), inode.getGroupName(),\n         inode.isDirectory() ? \"d\" : \"-\", inode.getFsPermission().toString(),\n-        path.substring(0, path.length() - inode.toString().length() - 1 ),\n+        constructPath(inodes, index),\n         parent.getUserName(), parent.getGroupName(),\n         parent.isDirectory() ? \"d\" : \"-\", parent.getFsPermission().toString()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkStickyBit(INodeAttributes[] inodes, int index)\n      throws AccessControlException {\n    INodeAttributes parent \u003d inodes[index];\n    if (!parent.getFsPermission().getStickyBit()) {\n      return;\n    }\n\n    // If this user is the directory owner, return\n    if (parent.getUserName().equals(getUser())) {\n      return;\n    }\n\n    INodeAttributes inode \u003d inodes[index + 1];\n    // if this user is the file owner, return\n    if (inode.getUserName().equals(getUser())) {\n      return;\n    }\n\n    throw new AccessControlException(String.format(\n        \"Permission denied by sticky bit: user\u003d%s, path\u003d\\\"%s\\\":%s:%s:%s%s, \" +\n        \"parent\u003d\\\"%s\\\":%s:%s:%s%s\", user,\n        constructPath(inodes, index + 1),\n        inode.getUserName(), inode.getGroupName(),\n        inode.isDirectory() ? \"d\" : \"-\", inode.getFsPermission().toString(),\n        constructPath(inodes, index),\n        parent.getUserName(), parent.getGroupName(),\n        parent.isDirectory() ? \"d\" : \"-\", parent.getFsPermission().toString()));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {}
        }
      ]
    },
    "970daaa5e44d3c09afd46d1c8e923a5096708c44": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-9019. Adding informative message to sticky bit permission denied exception. Contributed by Xiaoyu Yao.\n",
      "commitDate": "08/09/15 9:57 AM",
      "commitName": "970daaa5e44d3c09afd46d1c8e923a5096708c44",
      "commitAuthor": "Xiaoyu Yao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-9019. Adding informative message to sticky bit permission denied exception. Contributed by Xiaoyu Yao.\n",
          "commitDate": "08/09/15 9:57 AM",
          "commitName": "970daaa5e44d3c09afd46d1c8e923a5096708c44",
          "commitAuthor": "Xiaoyu Yao",
          "commitDateOld": "24/03/15 4:02 PM",
          "commitNameOld": "53a28afe293e5bf185c8d4f2c7aea212e66015c2",
          "commitAuthorOld": "Jitendra Pandey",
          "daysBetweenCommits": 167.75,
          "commitsBetweenForRepo": 1241,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,25 @@\n-  private void checkStickyBit(INodeAttributes parent, INodeAttributes inode\n-      ) throws AccessControlException {\n+  private void checkStickyBit(INodeAttributes parent, INodeAttributes inode,\n+      String path) throws AccessControlException {\n     if (!parent.getFsPermission().getStickyBit()) {\n       return;\n     }\n \n     // If this user is the directory owner, return\n     if (parent.getUserName().equals(getUser())) {\n       return;\n     }\n \n     // if this user is the file owner, return\n     if (inode.getUserName().equals(getUser())) {\n       return;\n     }\n \n-    throw new AccessControlException(\"Permission denied by sticky bit setting:\" +\n-      \" user\u003d\" + getUser() + \", inode\u003d\" + inode);\n+    throw new AccessControlException(String.format(\n+        \"Permission denied by sticky bit: user\u003d%s, path\u003d\\\"%s\\\":%s:%s:%s%s, \" +\n+        \"parent\u003d\\\"%s\\\":%s:%s:%s%s\", user,\n+        path, inode.getUserName(), inode.getGroupName(),\n+        inode.isDirectory() ? \"d\" : \"-\", inode.getFsPermission().toString(),\n+        path.substring(0, path.length() - inode.toString().length() - 1 ),\n+        parent.getUserName(), parent.getGroupName(),\n+        parent.isDirectory() ? \"d\" : \"-\", parent.getFsPermission().toString()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkStickyBit(INodeAttributes parent, INodeAttributes inode,\n      String path) throws AccessControlException {\n    if (!parent.getFsPermission().getStickyBit()) {\n      return;\n    }\n\n    // If this user is the directory owner, return\n    if (parent.getUserName().equals(getUser())) {\n      return;\n    }\n\n    // if this user is the file owner, return\n    if (inode.getUserName().equals(getUser())) {\n      return;\n    }\n\n    throw new AccessControlException(String.format(\n        \"Permission denied by sticky bit: user\u003d%s, path\u003d\\\"%s\\\":%s:%s:%s%s, \" +\n        \"parent\u003d\\\"%s\\\":%s:%s:%s%s\", user,\n        path, inode.getUserName(), inode.getGroupName(),\n        inode.isDirectory() ? \"d\" : \"-\", inode.getFsPermission().toString(),\n        path.substring(0, path.length() - inode.toString().length() - 1 ),\n        parent.getUserName(), parent.getGroupName(),\n        parent.isDirectory() ? \"d\" : \"-\", parent.getFsPermission().toString()));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {
            "oldValue": "[parent-INodeAttributes, inode-INodeAttributes]",
            "newValue": "[parent-INodeAttributes, inode-INodeAttributes, path-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9019. Adding informative message to sticky bit permission denied exception. Contributed by Xiaoyu Yao.\n",
          "commitDate": "08/09/15 9:57 AM",
          "commitName": "970daaa5e44d3c09afd46d1c8e923a5096708c44",
          "commitAuthor": "Xiaoyu Yao",
          "commitDateOld": "24/03/15 4:02 PM",
          "commitNameOld": "53a28afe293e5bf185c8d4f2c7aea212e66015c2",
          "commitAuthorOld": "Jitendra Pandey",
          "daysBetweenCommits": 167.75,
          "commitsBetweenForRepo": 1241,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,25 @@\n-  private void checkStickyBit(INodeAttributes parent, INodeAttributes inode\n-      ) throws AccessControlException {\n+  private void checkStickyBit(INodeAttributes parent, INodeAttributes inode,\n+      String path) throws AccessControlException {\n     if (!parent.getFsPermission().getStickyBit()) {\n       return;\n     }\n \n     // If this user is the directory owner, return\n     if (parent.getUserName().equals(getUser())) {\n       return;\n     }\n \n     // if this user is the file owner, return\n     if (inode.getUserName().equals(getUser())) {\n       return;\n     }\n \n-    throw new AccessControlException(\"Permission denied by sticky bit setting:\" +\n-      \" user\u003d\" + getUser() + \", inode\u003d\" + inode);\n+    throw new AccessControlException(String.format(\n+        \"Permission denied by sticky bit: user\u003d%s, path\u003d\\\"%s\\\":%s:%s:%s%s, \" +\n+        \"parent\u003d\\\"%s\\\":%s:%s:%s%s\", user,\n+        path, inode.getUserName(), inode.getGroupName(),\n+        inode.isDirectory() ? \"d\" : \"-\", inode.getFsPermission().toString(),\n+        path.substring(0, path.length() - inode.toString().length() - 1 ),\n+        parent.getUserName(), parent.getGroupName(),\n+        parent.isDirectory() ? \"d\" : \"-\", parent.getFsPermission().toString()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkStickyBit(INodeAttributes parent, INodeAttributes inode,\n      String path) throws AccessControlException {\n    if (!parent.getFsPermission().getStickyBit()) {\n      return;\n    }\n\n    // If this user is the directory owner, return\n    if (parent.getUserName().equals(getUser())) {\n      return;\n    }\n\n    // if this user is the file owner, return\n    if (inode.getUserName().equals(getUser())) {\n      return;\n    }\n\n    throw new AccessControlException(String.format(\n        \"Permission denied by sticky bit: user\u003d%s, path\u003d\\\"%s\\\":%s:%s:%s%s, \" +\n        \"parent\u003d\\\"%s\\\":%s:%s:%s%s\", user,\n        path, inode.getUserName(), inode.getGroupName(),\n        inode.isDirectory() ? \"d\" : \"-\", inode.getFsPermission().toString(),\n        path.substring(0, path.length() - inode.toString().length() - 1 ),\n        parent.getUserName(), parent.getGroupName(),\n        parent.isDirectory() ? \"d\" : \"-\", parent.getFsPermission().toString()));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {}
        }
      ]
    },
    "53a28afe293e5bf185c8d4f2c7aea212e66015c2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6826. Plugin interface to enable delegation of HDFS authorization assertions. Contributed by Arun Suresh.\n",
      "commitDate": "24/03/15 4:02 PM",
      "commitName": "53a28afe293e5bf185c8d4f2c7aea212e66015c2",
      "commitAuthor": "Jitendra Pandey",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6826. Plugin interface to enable delegation of HDFS authorization assertions. Contributed by Arun Suresh.\n",
          "commitDate": "24/03/15 4:02 PM",
          "commitName": "53a28afe293e5bf185c8d4f2c7aea212e66015c2",
          "commitAuthor": "Jitendra Pandey",
          "commitDateOld": "09/12/14 6:57 PM",
          "commitNameOld": "d93f3b9815f90d24c838574a56013e6dc60dc5ad",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 104.84,
          "commitsBetweenForRepo": 828,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-  private void checkStickyBit(INode parent, INode inode, int snapshotId\n+  private void checkStickyBit(INodeAttributes parent, INodeAttributes inode\n       ) throws AccessControlException {\n-    if(!parent.getFsPermission(snapshotId).getStickyBit()) {\n+    if (!parent.getFsPermission().getStickyBit()) {\n       return;\n     }\n \n     // If this user is the directory owner, return\n-    if(parent.getUserName(snapshotId).equals(user)) {\n+    if (parent.getUserName().equals(getUser())) {\n       return;\n     }\n \n     // if this user is the file owner, return\n-    if(inode.getUserName(snapshotId).equals(user)) {\n+    if (inode.getUserName().equals(getUser())) {\n       return;\n     }\n \n     throw new AccessControlException(\"Permission denied by sticky bit setting:\" +\n-      \" user\u003d\" + user + \", inode\u003d\" + inode);\n+      \" user\u003d\" + getUser() + \", inode\u003d\" + inode);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkStickyBit(INodeAttributes parent, INodeAttributes inode\n      ) throws AccessControlException {\n    if (!parent.getFsPermission().getStickyBit()) {\n      return;\n    }\n\n    // If this user is the directory owner, return\n    if (parent.getUserName().equals(getUser())) {\n      return;\n    }\n\n    // if this user is the file owner, return\n    if (inode.getUserName().equals(getUser())) {\n      return;\n    }\n\n    throw new AccessControlException(\"Permission denied by sticky bit setting:\" +\n      \" user\u003d\" + getUser() + \", inode\u003d\" + inode);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {
            "oldValue": "[parent-INode, inode-INode, snapshotId-int]",
            "newValue": "[parent-INodeAttributes, inode-INodeAttributes]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6826. Plugin interface to enable delegation of HDFS authorization assertions. Contributed by Arun Suresh.\n",
          "commitDate": "24/03/15 4:02 PM",
          "commitName": "53a28afe293e5bf185c8d4f2c7aea212e66015c2",
          "commitAuthor": "Jitendra Pandey",
          "commitDateOld": "09/12/14 6:57 PM",
          "commitNameOld": "d93f3b9815f90d24c838574a56013e6dc60dc5ad",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 104.84,
          "commitsBetweenForRepo": 828,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-  private void checkStickyBit(INode parent, INode inode, int snapshotId\n+  private void checkStickyBit(INodeAttributes parent, INodeAttributes inode\n       ) throws AccessControlException {\n-    if(!parent.getFsPermission(snapshotId).getStickyBit()) {\n+    if (!parent.getFsPermission().getStickyBit()) {\n       return;\n     }\n \n     // If this user is the directory owner, return\n-    if(parent.getUserName(snapshotId).equals(user)) {\n+    if (parent.getUserName().equals(getUser())) {\n       return;\n     }\n \n     // if this user is the file owner, return\n-    if(inode.getUserName(snapshotId).equals(user)) {\n+    if (inode.getUserName().equals(getUser())) {\n       return;\n     }\n \n     throw new AccessControlException(\"Permission denied by sticky bit setting:\" +\n-      \" user\u003d\" + user + \", inode\u003d\" + inode);\n+      \" user\u003d\" + getUser() + \", inode\u003d\" + inode);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkStickyBit(INodeAttributes parent, INodeAttributes inode\n      ) throws AccessControlException {\n    if (!parent.getFsPermission().getStickyBit()) {\n      return;\n    }\n\n    // If this user is the directory owner, return\n    if (parent.getUserName().equals(getUser())) {\n      return;\n    }\n\n    // if this user is the file owner, return\n    if (inode.getUserName().equals(getUser())) {\n      return;\n    }\n\n    throw new AccessControlException(\"Permission denied by sticky bit setting:\" +\n      \" user\u003d\" + getUser() + \", inode\u003d\" + inode);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {}
        }
      ]
    },
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/01/14 12:52 PM",
      "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/01/14 12:52 PM",
          "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "12/11/13 3:52 PM",
          "commitNameOld": "ce35e0950cef9250ce2ceffb3b8bfcff533c6b92",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 55.88,
          "commitsBetweenForRepo": 301,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-  private void checkStickyBit(INode parent, INode inode, Snapshot snapshot\n+  private void checkStickyBit(INode parent, INode inode, int snapshotId\n       ) throws AccessControlException {\n-    if(!parent.getFsPermission(snapshot).getStickyBit()) {\n+    if(!parent.getFsPermission(snapshotId).getStickyBit()) {\n       return;\n     }\n \n     // If this user is the directory owner, return\n-    if(parent.getUserName(snapshot).equals(user)) {\n+    if(parent.getUserName(snapshotId).equals(user)) {\n       return;\n     }\n \n     // if this user is the file owner, return\n-    if(inode.getUserName(snapshot).equals(user)) {\n+    if(inode.getUserName(snapshotId).equals(user)) {\n       return;\n     }\n \n     throw new AccessControlException(\"Permission denied by sticky bit setting:\" +\n       \" user\u003d\" + user + \", inode\u003d\" + inode);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkStickyBit(INode parent, INode inode, int snapshotId\n      ) throws AccessControlException {\n    if(!parent.getFsPermission(snapshotId).getStickyBit()) {\n      return;\n    }\n\n    // If this user is the directory owner, return\n    if(parent.getUserName(snapshotId).equals(user)) {\n      return;\n    }\n\n    // if this user is the file owner, return\n    if(inode.getUserName(snapshotId).equals(user)) {\n      return;\n    }\n\n    throw new AccessControlException(\"Permission denied by sticky bit setting:\" +\n      \" user\u003d\" + user + \", inode\u003d\" + inode);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {
            "oldValue": "[parent-INode, inode-INode, snapshot-Snapshot]",
            "newValue": "[parent-INode, inode-INode, snapshotId-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/01/14 12:52 PM",
          "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "12/11/13 3:52 PM",
          "commitNameOld": "ce35e0950cef9250ce2ceffb3b8bfcff533c6b92",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 55.88,
          "commitsBetweenForRepo": 301,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-  private void checkStickyBit(INode parent, INode inode, Snapshot snapshot\n+  private void checkStickyBit(INode parent, INode inode, int snapshotId\n       ) throws AccessControlException {\n-    if(!parent.getFsPermission(snapshot).getStickyBit()) {\n+    if(!parent.getFsPermission(snapshotId).getStickyBit()) {\n       return;\n     }\n \n     // If this user is the directory owner, return\n-    if(parent.getUserName(snapshot).equals(user)) {\n+    if(parent.getUserName(snapshotId).equals(user)) {\n       return;\n     }\n \n     // if this user is the file owner, return\n-    if(inode.getUserName(snapshot).equals(user)) {\n+    if(inode.getUserName(snapshotId).equals(user)) {\n       return;\n     }\n \n     throw new AccessControlException(\"Permission denied by sticky bit setting:\" +\n       \" user\u003d\" + user + \", inode\u003d\" + inode);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkStickyBit(INode parent, INode inode, int snapshotId\n      ) throws AccessControlException {\n    if(!parent.getFsPermission(snapshotId).getStickyBit()) {\n      return;\n    }\n\n    // If this user is the directory owner, return\n    if(parent.getUserName(snapshotId).equals(user)) {\n      return;\n    }\n\n    // if this user is the file owner, return\n    if(inode.getUserName(snapshotId).equals(user)) {\n      return;\n    }\n\n    throw new AccessControlException(\"Permission denied by sticky bit setting:\" +\n      \" user\u003d\" + user + \", inode\u003d\" + inode);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
          "extendedDetails": {}
        }
      ]
    }
  }
}