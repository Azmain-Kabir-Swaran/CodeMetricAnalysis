{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Configuration.java",
  "functionName": "getLocalPath",
  "functionId": "getLocalPath___dirsProp-String__path-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
  "functionStartLine": 2757,
  "functionEndLine": 2777,
  "numCommitsSeen": 166,
  "timeTaken": 4201,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "02f996d5946cbd6c36ffd361e64188abde3732d9",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "02f996d5946cbd6c36ffd361e64188abde3732d9": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Path getLocalPath(String dirsProp, String path)\n    throws IOException {\n    String[] dirs \u003d getTrimmedStrings(dirsProp);\n    int hashCode \u003d path.hashCode();\n    FileSystem fs \u003d FileSystem.getLocal(this);\n    for (int i \u003d 0; i \u003c dirs.length; i++) {  // try each local dir\n      int index \u003d (hashCode+i \u0026 Integer.MAX_VALUE) % dirs.length;\n      Path file \u003d new Path(dirs[index], path);\n      Path dir \u003d file.getParent();\n      if (fs.mkdirs(dir) || fs.exists(dir)) {\n        return file;\n      }\n    }\n    LOG.warn(\"Could not make \" + path + \n             \" in local directories from \" + dirsProp);\n    for(int i\u003d0; i \u003c dirs.length; i++) {\n      int index \u003d (hashCode+i \u0026 Integer.MAX_VALUE) % dirs.length;\n      LOG.warn(dirsProp + \"[\" + index + \"]\u003d\" + dirs[index]);\n    }\n    throw new IOException(\"No valid local directories in property: \"+dirsProp);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Path getLocalPath(String dirsProp, String path)\n    throws IOException {\n    String[] dirs \u003d getTrimmedStrings(dirsProp);\n    int hashCode \u003d path.hashCode();\n    FileSystem fs \u003d FileSystem.getLocal(this);\n    for (int i \u003d 0; i \u003c dirs.length; i++) {  // try each local dir\n      int index \u003d (hashCode+i \u0026 Integer.MAX_VALUE) % dirs.length;\n      Path file \u003d new Path(dirs[index], path);\n      Path dir \u003d file.getParent();\n      if (fs.mkdirs(dir) || fs.exists(dir)) {\n        return file;\n      }\n    }\n    LOG.warn(\"Could not make \" + path + \n             \" in local directories from \" + dirsProp);\n    for(int i\u003d0; i \u003c dirs.length; i++) {\n      int index \u003d (hashCode+i \u0026 Integer.MAX_VALUE) % dirs.length;\n      LOG.warn(dirsProp + \"[\" + index + \"]\u003d\" + dirs[index]);\n    }\n    throw new IOException(\"No valid local directories in property: \"+dirsProp);\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/conf/Configuration.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Path getLocalPath(String dirsProp, String path)\n    throws IOException {\n    String[] dirs \u003d getTrimmedStrings(dirsProp);\n    int hashCode \u003d path.hashCode();\n    FileSystem fs \u003d FileSystem.getLocal(this);\n    for (int i \u003d 0; i \u003c dirs.length; i++) {  // try each local dir\n      int index \u003d (hashCode+i \u0026 Integer.MAX_VALUE) % dirs.length;\n      Path file \u003d new Path(dirs[index], path);\n      Path dir \u003d file.getParent();\n      if (fs.mkdirs(dir) || fs.exists(dir)) {\n        return file;\n      }\n    }\n    LOG.warn(\"Could not make \" + path + \n             \" in local directories from \" + dirsProp);\n    for(int i\u003d0; i \u003c dirs.length; i++) {\n      int index \u003d (hashCode+i \u0026 Integer.MAX_VALUE) % dirs.length;\n      LOG.warn(dirsProp + \"[\" + index + \"]\u003d\" + dirs[index]);\n    }\n    throw new IOException(\"No valid local directories in property: \"+dirsProp);\n  }",
      "path": "common/src/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/conf/Configuration.java",
        "newPath": "common/src/java/org/apache/hadoop/conf/Configuration.java"
      }
    },
    "02f996d5946cbd6c36ffd361e64188abde3732d9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7145. Configuration.getLocalPath should trim whitespace from the provided directories. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1071035 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/02/11 12:19 PM",
      "commitName": "02f996d5946cbd6c36ffd361e64188abde3732d9",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "25/01/11 10:59 PM",
      "commitNameOld": "160b6fd4966f5189f988eaf0f094867fb2155c04",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 20.56,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public Path getLocalPath(String dirsProp, String path)\n     throws IOException {\n-    String[] dirs \u003d getStrings(dirsProp);\n+    String[] dirs \u003d getTrimmedStrings(dirsProp);\n     int hashCode \u003d path.hashCode();\n     FileSystem fs \u003d FileSystem.getLocal(this);\n     for (int i \u003d 0; i \u003c dirs.length; i++) {  // try each local dir\n       int index \u003d (hashCode+i \u0026 Integer.MAX_VALUE) % dirs.length;\n       Path file \u003d new Path(dirs[index], path);\n       Path dir \u003d file.getParent();\n       if (fs.mkdirs(dir) || fs.exists(dir)) {\n         return file;\n       }\n     }\n     LOG.warn(\"Could not make \" + path + \n              \" in local directories from \" + dirsProp);\n     for(int i\u003d0; i \u003c dirs.length; i++) {\n       int index \u003d (hashCode+i \u0026 Integer.MAX_VALUE) % dirs.length;\n       LOG.warn(dirsProp + \"[\" + index + \"]\u003d\" + dirs[index]);\n     }\n     throw new IOException(\"No valid local directories in property: \"+dirsProp);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Path getLocalPath(String dirsProp, String path)\n    throws IOException {\n    String[] dirs \u003d getTrimmedStrings(dirsProp);\n    int hashCode \u003d path.hashCode();\n    FileSystem fs \u003d FileSystem.getLocal(this);\n    for (int i \u003d 0; i \u003c dirs.length; i++) {  // try each local dir\n      int index \u003d (hashCode+i \u0026 Integer.MAX_VALUE) % dirs.length;\n      Path file \u003d new Path(dirs[index], path);\n      Path dir \u003d file.getParent();\n      if (fs.mkdirs(dir) || fs.exists(dir)) {\n        return file;\n      }\n    }\n    LOG.warn(\"Could not make \" + path + \n             \" in local directories from \" + dirsProp);\n    for(int i\u003d0; i \u003c dirs.length; i++) {\n      int index \u003d (hashCode+i \u0026 Integer.MAX_VALUE) % dirs.length;\n      LOG.warn(dirsProp + \"[\" + index + \"]\u003d\" + dirs[index]);\n    }\n    throw new IOException(\"No valid local directories in property: \"+dirsProp);\n  }",
      "path": "src/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,21 @@\n+  public Path getLocalPath(String dirsProp, String path)\n+    throws IOException {\n+    String[] dirs \u003d getStrings(dirsProp);\n+    int hashCode \u003d path.hashCode();\n+    FileSystem fs \u003d FileSystem.getLocal(this);\n+    for (int i \u003d 0; i \u003c dirs.length; i++) {  // try each local dir\n+      int index \u003d (hashCode+i \u0026 Integer.MAX_VALUE) % dirs.length;\n+      Path file \u003d new Path(dirs[index], path);\n+      Path dir \u003d file.getParent();\n+      if (fs.mkdirs(dir) || fs.exists(dir)) {\n+        return file;\n+      }\n+    }\n+    LOG.warn(\"Could not make \" + path + \n+             \" in local directories from \" + dirsProp);\n+    for(int i\u003d0; i \u003c dirs.length; i++) {\n+      int index \u003d (hashCode+i \u0026 Integer.MAX_VALUE) % dirs.length;\n+      LOG.warn(dirsProp + \"[\" + index + \"]\u003d\" + dirs[index]);\n+    }\n+    throw new IOException(\"No valid local directories in property: \"+dirsProp);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Path getLocalPath(String dirsProp, String path)\n    throws IOException {\n    String[] dirs \u003d getStrings(dirsProp);\n    int hashCode \u003d path.hashCode();\n    FileSystem fs \u003d FileSystem.getLocal(this);\n    for (int i \u003d 0; i \u003c dirs.length; i++) {  // try each local dir\n      int index \u003d (hashCode+i \u0026 Integer.MAX_VALUE) % dirs.length;\n      Path file \u003d new Path(dirs[index], path);\n      Path dir \u003d file.getParent();\n      if (fs.mkdirs(dir) || fs.exists(dir)) {\n        return file;\n      }\n    }\n    LOG.warn(\"Could not make \" + path + \n             \" in local directories from \" + dirsProp);\n    for(int i\u003d0; i \u003c dirs.length; i++) {\n      int index \u003d (hashCode+i \u0026 Integer.MAX_VALUE) % dirs.length;\n      LOG.warn(dirsProp + \"[\" + index + \"]\u003d\" + dirs[index]);\n    }\n    throw new IOException(\"No valid local directories in property: \"+dirsProp);\n  }",
      "path": "src/java/org/apache/hadoop/conf/Configuration.java"
    }
  }
}