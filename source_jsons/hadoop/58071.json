{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UpdateNodeResourceRequestPBImpl.java",
  "functionName": "addNodeResourceMap",
  "functionId": "addNodeResourceMap",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/UpdateNodeResourceRequestPBImpl.java",
  "functionStartLine": 128,
  "functionEndLine": 164,
  "numCommitsSeen": 2,
  "timeTaken": 581,
  "changeHistory": [
    "49ad07af9782c2c2608799573e815a7cfc26851f"
  ],
  "changeHistoryShort": {
    "49ad07af9782c2c2608799573e815a7cfc26851f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "49ad07af9782c2c2608799573e815a7cfc26851f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-312. Introduced ResourceManagerAdministrationProtocol changes to support changing resources on node. Contributed by Junping Du.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1551403 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/12/13 3:36 PM",
      "commitName": "49ad07af9782c2c2608799573e815a7cfc26851f",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,37 @@\n+  private void addNodeResourceMap() {\n+    maybeInitBuilder();\n+    builder.clearNodeResourceMap();\n+    if (nodeResourceMap \u003d\u003d null) {\n+      return;\n+    }\n+    Iterable\u003c? extends NodeResourceMapProto\u003e values\n+        \u003d new Iterable\u003cNodeResourceMapProto\u003e() {\n+\n+      @Override\n+      public Iterator\u003cNodeResourceMapProto\u003e iterator() {\n+        return new Iterator\u003cNodeResourceMapProto\u003e() {\n+          Iterator\u003cNodeId\u003e nodeIterator \u003d nodeResourceMap\n+              .keySet().iterator();\n+\n+          @Override\n+          public boolean hasNext() {\n+            return nodeIterator.hasNext();\n+          }\n+\n+          @Override\n+          public NodeResourceMapProto next() {\n+            NodeId nodeId \u003d nodeIterator.next();\n+            return NodeResourceMapProto.newBuilder().setNodeId(\n+                convertToProtoFormat(nodeId)).setResourceOption(\n+                convertToProtoFormat(nodeResourceMap.get(nodeId))).build();\n+          }\n+\n+          @Override\n+          public void remove() {\n+            throw new UnsupportedOperationException();\n+          }\n+        };\n+      }\n+    };\n+    this.builder.addAllNodeResourceMap(values);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addNodeResourceMap() {\n    maybeInitBuilder();\n    builder.clearNodeResourceMap();\n    if (nodeResourceMap \u003d\u003d null) {\n      return;\n    }\n    Iterable\u003c? extends NodeResourceMapProto\u003e values\n        \u003d new Iterable\u003cNodeResourceMapProto\u003e() {\n\n      @Override\n      public Iterator\u003cNodeResourceMapProto\u003e iterator() {\n        return new Iterator\u003cNodeResourceMapProto\u003e() {\n          Iterator\u003cNodeId\u003e nodeIterator \u003d nodeResourceMap\n              .keySet().iterator();\n\n          @Override\n          public boolean hasNext() {\n            return nodeIterator.hasNext();\n          }\n\n          @Override\n          public NodeResourceMapProto next() {\n            NodeId nodeId \u003d nodeIterator.next();\n            return NodeResourceMapProto.newBuilder().setNodeId(\n                convertToProtoFormat(nodeId)).setResourceOption(\n                convertToProtoFormat(nodeResourceMap.get(nodeId))).build();\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n    this.builder.addAllNodeResourceMap(values);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/UpdateNodeResourceRequestPBImpl.java"
    }
  }
}