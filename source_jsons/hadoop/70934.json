{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AliyunOSSFileSystem.java",
  "functionName": "open",
  "functionId": "open___path-Path__bufferSize-int",
  "sourceFilePath": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java",
  "functionStartLine": 589,
  "functionEndLine": 601,
  "numCommitsSeen": 22,
  "timeTaken": 1337,
  "changeHistory": [
    "9195a6e302028ed3921d1016ac2fa5754f06ebf0",
    "d33e928fbeb1764a724c8f3c051bb0d8be82bbff",
    "a5d5342228050a778b20e95adf7885bdba39985d"
  ],
  "changeHistoryShort": {
    "9195a6e302028ed3921d1016ac2fa5754f06ebf0": "Ybodychange",
    "d33e928fbeb1764a724c8f3c051bb0d8be82bbff": "Ybodychange",
    "a5d5342228050a778b20e95adf7885bdba39985d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9195a6e302028ed3921d1016ac2fa5754f06ebf0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15027. AliyunOSS: Support multi-thread pre-read to improve sequential read from Hadoop to Aliyun OSS performance. (Contributed by Jinhu Wu)\n",
      "commitDate": "16/01/18 11:55 PM",
      "commitName": "9195a6e302028ed3921d1016ac2fa5754f06ebf0",
      "commitAuthor": "Sammi Chen",
      "commitDateOld": "14/11/17 1:58 AM",
      "commitNameOld": "18621af7ae8f8ed703245744f8f2a770d07bbfb9",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 63.91,
      "commitsBetweenForRepo": 328,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,13 @@\n   public FSDataInputStream open(Path path, int bufferSize) throws IOException {\n     final FileStatus fileStatus \u003d getFileStatus(path);\n     if (fileStatus.isDirectory()) {\n       throw new FileNotFoundException(\"Can\u0027t open \" + path +\n           \" because it is a directory\");\n     }\n \n-    return new FSDataInputStream(new AliyunOSSInputStream(getConf(), store,\n-        pathToKey(path), fileStatus.getLen(), statistics));\n+    return new FSDataInputStream(new AliyunOSSInputStream(getConf(),\n+        new SemaphoredDelegatingExecutor(\n+            boundedThreadPool, maxReadAheadPartNumber, true),\n+        maxReadAheadPartNumber, store, pathToKey(path), fileStatus.getLen(),\n+        statistics));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataInputStream open(Path path, int bufferSize) throws IOException {\n    final FileStatus fileStatus \u003d getFileStatus(path);\n    if (fileStatus.isDirectory()) {\n      throw new FileNotFoundException(\"Can\u0027t open \" + path +\n          \" because it is a directory\");\n    }\n\n    return new FSDataInputStream(new AliyunOSSInputStream(getConf(),\n        new SemaphoredDelegatingExecutor(\n            boundedThreadPool, maxReadAheadPartNumber, true),\n        maxReadAheadPartNumber, store, pathToKey(path), fileStatus.getLen(),\n        statistics));\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java",
      "extendedDetails": {}
    },
    "d33e928fbeb1764a724c8f3c051bb0d8be82bbff": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13529. Do some code refactoring. Contributed by Genmao Yu.\n",
      "commitDate": "06/09/16 8:15 PM",
      "commitName": "d33e928fbeb1764a724c8f3c051bb0d8be82bbff",
      "commitAuthor": "Mingfei",
      "commitDateOld": "06/09/16 8:15 PM",
      "commitNameOld": "cdb77110e77b70ed0c1125b2a6a422a8c7c28ec7",
      "commitAuthorOld": "Mingfei",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   public FSDataInputStream open(Path path, int bufferSize) throws IOException {\n     final FileStatus fileStatus \u003d getFileStatus(path);\n     if (fileStatus.isDirectory()) {\n       throw new FileNotFoundException(\"Can\u0027t open \" + path +\n           \" because it is a directory\");\n     }\n \n-    return new FSDataInputStream(new AliyunOSSInputStream(getConf(), ossClient,\n-        bucketName, pathToKey(path), fileStatus.getLen(), statistics));\n+    return new FSDataInputStream(new AliyunOSSInputStream(getConf(), store,\n+        pathToKey(path), fileStatus.getLen(), statistics));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataInputStream open(Path path, int bufferSize) throws IOException {\n    final FileStatus fileStatus \u003d getFileStatus(path);\n    if (fileStatus.isDirectory()) {\n      throw new FileNotFoundException(\"Can\u0027t open \" + path +\n          \" because it is a directory\");\n    }\n\n    return new FSDataInputStream(new AliyunOSSInputStream(getConf(), store,\n        pathToKey(path), fileStatus.getLen(), statistics));\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java",
      "extendedDetails": {}
    },
    "a5d5342228050a778b20e95adf7885bdba39985d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12756. Incorporate Aliyun OSS file system implementation. Contributed by Mingfei Shi and Lin Zhou\n",
      "commitDate": "06/09/16 8:15 PM",
      "commitName": "a5d5342228050a778b20e95adf7885bdba39985d",
      "commitAuthor": "Kai Zheng",
      "diff": "@@ -0,0 +1,10 @@\n+  public FSDataInputStream open(Path path, int bufferSize) throws IOException {\n+    final FileStatus fileStatus \u003d getFileStatus(path);\n+    if (fileStatus.isDirectory()) {\n+      throw new FileNotFoundException(\"Can\u0027t open \" + path +\n+          \" because it is a directory\");\n+    }\n+\n+    return new FSDataInputStream(new AliyunOSSInputStream(getConf(), ossClient,\n+        bucketName, pathToKey(path), fileStatus.getLen(), statistics));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataInputStream open(Path path, int bufferSize) throws IOException {\n    final FileStatus fileStatus \u003d getFileStatus(path);\n    if (fileStatus.isDirectory()) {\n      throw new FileNotFoundException(\"Can\u0027t open \" + path +\n          \" because it is a directory\");\n    }\n\n    return new FSDataInputStream(new AliyunOSSInputStream(getConf(), ossClient,\n        bucketName, pathToKey(path), fileStatus.getLen(), statistics));\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java"
    }
  }
}