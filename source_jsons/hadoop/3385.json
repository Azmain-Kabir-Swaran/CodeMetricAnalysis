{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TokenAspect.java",
  "functionName": "renew",
  "functionId": "renew___token-Token__?____conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/TokenAspect.java",
  "functionStartLine": 68,
  "functionEndLine": 70,
  "numCommitsSeen": 87,
  "timeTaken": 6545,
  "changeHistory": [
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
    "1c211f6749d2bd4113801aa39ca85ab731d2ef56",
    "547d2b0bac3f089688157783ec2c7f7e5e39fde9",
    "8f395c2f78e5813e613197c3078a4ebc5d42775a",
    "205f0470f43303e16d6a62afd633ce8f19040810",
    "32cad9affe159ff7c6e4c7e31f57174967ef210a",
    "002dd6968b89ded6a77858ccb50c9b2df074c226",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": "Yfilerename",
    "1c211f6749d2bd4113801aa39ca85ab731d2ef56": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange,Yparametermetachange)",
    "547d2b0bac3f089688157783ec2c7f7e5e39fde9": "Ybodychange",
    "8f395c2f78e5813e613197c3078a4ebc5d42775a": "Ybodychange",
    "205f0470f43303e16d6a62afd633ce8f19040810": "Ybodychange",
    "32cad9affe159ff7c6e4c7e31f57174967ef210a": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yparameterchange)",
    "002dd6968b89ded6a77858ccb50c9b2df074c226": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8052. Move WebHdfsFileSystem into hadoop-hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "23/04/15 5:33 PM",
      "commitName": "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "23/04/15 4:40 PM",
      "commitNameOld": "0b3f8957a87ada1a275c9904b211fdbdcefafb02",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public long renew(Token\u003c?\u003e token, Configuration conf) throws IOException {\n      return getInstance(token, conf).renewDelegationToken(token);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/TokenAspect.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/TokenAspect.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/TokenAspect.java"
      }
    },
    "1c211f6749d2bd4113801aa39ca85ab731d2ef56": {
      "type": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange,Yparametermetachange)",
      "commitMessage": "HDFS-5440. Extract the logic of handling delegation tokens in HftpFileSystem to the TokenAspect class. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1541665 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/11/13 11:25 AM",
      "commitName": "1c211f6749d2bd4113801aa39ca85ab731d2ef56",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-5440. Extract the logic of handling delegation tokens in HftpFileSystem to the TokenAspect class. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1541665 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/11/13 11:25 AM",
          "commitName": "1c211f6749d2bd4113801aa39ca85ab731d2ef56",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "13/11/13 10:18 AM",
          "commitNameOld": "3c591aa442d342bdd4a0c4abe9a43c64d8ef3e65",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,3 @@\n-    public long renew(final Token\u003c?\u003e token, final Configuration conf\n-        ) throws IOException, InterruptedException {\n-      return getWebHdfs(token, conf).renewDelegationToken(token);\n+    public long renew(Token\u003c?\u003e token, Configuration conf) throws IOException {\n+      return getInstance(token, conf).renewDelegationToken(token);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public long renew(Token\u003c?\u003e token, Configuration conf) throws IOException {\n      return getInstance(token, conf).renewDelegationToken(token);\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/TokenAspect.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/TokenAspect.java",
            "oldMethodName": "renew",
            "newMethodName": "renew"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-5440. Extract the logic of handling delegation tokens in HftpFileSystem to the TokenAspect class. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1541665 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/11/13 11:25 AM",
          "commitName": "1c211f6749d2bd4113801aa39ca85ab731d2ef56",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "13/11/13 10:18 AM",
          "commitNameOld": "3c591aa442d342bdd4a0c4abe9a43c64d8ef3e65",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,3 @@\n-    public long renew(final Token\u003c?\u003e token, final Configuration conf\n-        ) throws IOException, InterruptedException {\n-      return getWebHdfs(token, conf).renewDelegationToken(token);\n+    public long renew(Token\u003c?\u003e token, Configuration conf) throws IOException {\n+      return getInstance(token, conf).renewDelegationToken(token);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public long renew(Token\u003c?\u003e token, Configuration conf) throws IOException {\n      return getInstance(token, conf).renewDelegationToken(token);\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/TokenAspect.java",
          "extendedDetails": {
            "oldValue": "[IOException, InterruptedException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5440. Extract the logic of handling delegation tokens in HftpFileSystem to the TokenAspect class. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1541665 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/11/13 11:25 AM",
          "commitName": "1c211f6749d2bd4113801aa39ca85ab731d2ef56",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "13/11/13 10:18 AM",
          "commitNameOld": "3c591aa442d342bdd4a0c4abe9a43c64d8ef3e65",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,3 @@\n-    public long renew(final Token\u003c?\u003e token, final Configuration conf\n-        ) throws IOException, InterruptedException {\n-      return getWebHdfs(token, conf).renewDelegationToken(token);\n+    public long renew(Token\u003c?\u003e token, Configuration conf) throws IOException {\n+      return getInstance(token, conf).renewDelegationToken(token);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public long renew(Token\u003c?\u003e token, Configuration conf) throws IOException {\n      return getInstance(token, conf).renewDelegationToken(token);\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/TokenAspect.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HDFS-5440. Extract the logic of handling delegation tokens in HftpFileSystem to the TokenAspect class. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1541665 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/11/13 11:25 AM",
          "commitName": "1c211f6749d2bd4113801aa39ca85ab731d2ef56",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "13/11/13 10:18 AM",
          "commitNameOld": "3c591aa442d342bdd4a0c4abe9a43c64d8ef3e65",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,3 @@\n-    public long renew(final Token\u003c?\u003e token, final Configuration conf\n-        ) throws IOException, InterruptedException {\n-      return getWebHdfs(token, conf).renewDelegationToken(token);\n+    public long renew(Token\u003c?\u003e token, Configuration conf) throws IOException {\n+      return getInstance(token, conf).renewDelegationToken(token);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public long renew(Token\u003c?\u003e token, Configuration conf) throws IOException {\n      return getInstance(token, conf).renewDelegationToken(token);\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/TokenAspect.java",
          "extendedDetails": {
            "oldValue": "[token-Token\u003c?\u003e(modifiers-final), conf-Configuration(modifiers-final)]",
            "newValue": "[token-Token\u003c?\u003e, conf-Configuration]"
          }
        }
      ]
    },
    "547d2b0bac3f089688157783ec2c7f7e5e39fde9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4548. Webhdfs doesn\u0027t renegotiate SPNEGO token. Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1464548 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/04/13 6:50 AM",
      "commitName": "547d2b0bac3f089688157783ec2c7f7e5e39fde9",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "28/03/13 1:58 PM",
      "commitNameOld": "1611b51a9780d18e76c0e9f9777bfae6ee70df12",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 6.7,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,4 @@\n     public long renew(final Token\u003c?\u003e token, final Configuration conf\n         ) throws IOException, InterruptedException {\n-      final UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n-      // update the kerberos credentials, if they are coming from a keytab\n-      ugi.reloginFromKeytab();\n-\n       return getWebHdfs(token, conf).renewDelegationToken(token);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public long renew(final Token\u003c?\u003e token, final Configuration conf\n        ) throws IOException, InterruptedException {\n      return getWebHdfs(token, conf).renewDelegationToken(token);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "8f395c2f78e5813e613197c3078a4ebc5d42775a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3696. Set chunked streaming mode in WebHdfsFileSystem write operations to get around a Java library bug causing OutOfMemoryError.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1365839 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/07/12 4:37 PM",
      "commitName": "8f395c2f78e5813e613197c3078a4ebc5d42775a",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "25/06/12 6:58 PM",
      "commitNameOld": "361ea9a62cb85e6d60682c4a73e874d305625d8b",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 29.9,
      "commitsBetweenForRepo": 186,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,8 @@\n     public long renew(final Token\u003c?\u003e token, final Configuration conf\n         ) throws IOException, InterruptedException {\n       final UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n       // update the kerberos credentials, if they are coming from a keytab\n       ugi.reloginFromKeytab();\n \n-      try {\n-        WebHdfsFileSystem webhdfs \u003d getWebHdfs(token, conf);\n-        return webhdfs.renewDelegationToken(token);\n-      } catch (URISyntaxException e) {\n-        throw new IOException(e);\n-      }\n+      return getWebHdfs(token, conf).renewDelegationToken(token);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public long renew(final Token\u003c?\u003e token, final Configuration conf\n        ) throws IOException, InterruptedException {\n      final UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n      // update the kerberos credentials, if they are coming from a keytab\n      ugi.reloginFromKeytab();\n\n      return getWebHdfs(token, conf).renewDelegationToken(token);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "205f0470f43303e16d6a62afd633ce8f19040810": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2785. Update webhdfs and httpfs for host-based token support. Contributed by Robert Joseph Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1240460 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/02/12 10:57 PM",
      "commitName": "205f0470f43303e16d6a62afd633ce8f19040810",
      "commitAuthor": "Jitendra Nath Pandey",
      "commitDateOld": "04/01/12 6:15 AM",
      "commitNameOld": "075122690c5c17ac443a8eb3fb7387001e4907c0",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 30.7,
      "commitsBetweenForRepo": 184,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     public long renew(final Token\u003c?\u003e token, final Configuration conf\n         ) throws IOException, InterruptedException {\n       final UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n       // update the kerberos credentials, if they are coming from a keytab\n-      ugi.checkTGTAndReloginFromKeytab();\n+      ugi.reloginFromKeytab();\n \n       try {\n         WebHdfsFileSystem webhdfs \u003d getWebHdfs(token, conf);\n         return webhdfs.renewDelegationToken(token);\n       } catch (URISyntaxException e) {\n         throw new IOException(e);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public long renew(final Token\u003c?\u003e token, final Configuration conf\n        ) throws IOException, InterruptedException {\n      final UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n      // update the kerberos credentials, if they are coming from a keytab\n      ugi.reloginFromKeytab();\n\n      try {\n        WebHdfsFileSystem webhdfs \u003d getWebHdfs(token, conf);\n        return webhdfs.renewDelegationToken(token);\n      } catch (URISyntaxException e) {\n        throw new IOException(e);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "32cad9affe159ff7c6e4c7e31f57174967ef210a": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-2385. Support renew and cancel delegation tokens in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195656 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/11 1:37 PM",
      "commitName": "32cad9affe159ff7c6e4c7e31f57174967ef210a",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-2385. Support renew and cancel delegation tokens in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195656 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/10/11 1:37 PM",
          "commitName": "32cad9affe159ff7c6e4c7e31f57174967ef210a",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "31/10/11 12:03 PM",
          "commitNameOld": "7cb77a3b1bf9e41384a1f74a60d34214199755d8",
          "commitAuthorOld": "Jitendra Nath Pandey",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,13 @@\n-    public boolean renew() throws IOException, InterruptedException {\n-      final HftpFileSystem fs \u003d weakFs.get();\n-      if (fs !\u003d null) {\n-        synchronized (fs) {\n-          try {\n-            fs.renewToken.renew(fs.getConf());\n-          } catch (IOException ie) {\n-            try {\n-              fs.setDelegationToken(fs.getDelegationToken(null));\n-            } catch (IOException ie2) {\n-              throw new IOException(\"Can\u0027t renew or get new delegation \"\n-                  + \"token \", ie);\n-            }\n-          }\n-        }\n+    public long renew(final Token\u003c?\u003e token, final Configuration conf\n+        ) throws IOException, InterruptedException {\n+      final UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n+      // update the kerberos credentials, if they are coming from a keytab\n+      ugi.checkTGTAndReloginFromKeytab();\n+\n+      try {\n+        WebHdfsFileSystem webhdfs \u003d getWebHdfs(token, conf);\n+        return webhdfs.renewDelegationToken(token);\n+      } catch (URISyntaxException e) {\n+        throw new IOException(e);\n       }\n-      return fs !\u003d null;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public long renew(final Token\u003c?\u003e token, final Configuration conf\n        ) throws IOException, InterruptedException {\n      final UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n      // update the kerberos credentials, if they are coming from a keytab\n      ugi.checkTGTAndReloginFromKeytab();\n\n      try {\n        WebHdfsFileSystem webhdfs \u003d getWebHdfs(token, conf);\n        return webhdfs.renewDelegationToken(token);\n      } catch (URISyntaxException e) {\n        throw new IOException(e);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HftpFileSystem.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
            "oldMethodName": "renew",
            "newMethodName": "renew"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-2385. Support renew and cancel delegation tokens in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195656 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/10/11 1:37 PM",
          "commitName": "32cad9affe159ff7c6e4c7e31f57174967ef210a",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "31/10/11 12:03 PM",
          "commitNameOld": "7cb77a3b1bf9e41384a1f74a60d34214199755d8",
          "commitAuthorOld": "Jitendra Nath Pandey",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,13 @@\n-    public boolean renew() throws IOException, InterruptedException {\n-      final HftpFileSystem fs \u003d weakFs.get();\n-      if (fs !\u003d null) {\n-        synchronized (fs) {\n-          try {\n-            fs.renewToken.renew(fs.getConf());\n-          } catch (IOException ie) {\n-            try {\n-              fs.setDelegationToken(fs.getDelegationToken(null));\n-            } catch (IOException ie2) {\n-              throw new IOException(\"Can\u0027t renew or get new delegation \"\n-                  + \"token \", ie);\n-            }\n-          }\n-        }\n+    public long renew(final Token\u003c?\u003e token, final Configuration conf\n+        ) throws IOException, InterruptedException {\n+      final UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n+      // update the kerberos credentials, if they are coming from a keytab\n+      ugi.checkTGTAndReloginFromKeytab();\n+\n+      try {\n+        WebHdfsFileSystem webhdfs \u003d getWebHdfs(token, conf);\n+        return webhdfs.renewDelegationToken(token);\n+      } catch (URISyntaxException e) {\n+        throw new IOException(e);\n       }\n-      return fs !\u003d null;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public long renew(final Token\u003c?\u003e token, final Configuration conf\n        ) throws IOException, InterruptedException {\n      final UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n      // update the kerberos credentials, if they are coming from a keytab\n      ugi.checkTGTAndReloginFromKeytab();\n\n      try {\n        WebHdfsFileSystem webhdfs \u003d getWebHdfs(token, conf);\n        return webhdfs.renewDelegationToken(token);\n      } catch (URISyntaxException e) {\n        throw new IOException(e);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
          "extendedDetails": {
            "oldValue": "boolean",
            "newValue": "long"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2385. Support renew and cancel delegation tokens in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195656 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/10/11 1:37 PM",
          "commitName": "32cad9affe159ff7c6e4c7e31f57174967ef210a",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "31/10/11 12:03 PM",
          "commitNameOld": "7cb77a3b1bf9e41384a1f74a60d34214199755d8",
          "commitAuthorOld": "Jitendra Nath Pandey",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,13 @@\n-    public boolean renew() throws IOException, InterruptedException {\n-      final HftpFileSystem fs \u003d weakFs.get();\n-      if (fs !\u003d null) {\n-        synchronized (fs) {\n-          try {\n-            fs.renewToken.renew(fs.getConf());\n-          } catch (IOException ie) {\n-            try {\n-              fs.setDelegationToken(fs.getDelegationToken(null));\n-            } catch (IOException ie2) {\n-              throw new IOException(\"Can\u0027t renew or get new delegation \"\n-                  + \"token \", ie);\n-            }\n-          }\n-        }\n+    public long renew(final Token\u003c?\u003e token, final Configuration conf\n+        ) throws IOException, InterruptedException {\n+      final UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n+      // update the kerberos credentials, if they are coming from a keytab\n+      ugi.checkTGTAndReloginFromKeytab();\n+\n+      try {\n+        WebHdfsFileSystem webhdfs \u003d getWebHdfs(token, conf);\n+        return webhdfs.renewDelegationToken(token);\n+      } catch (URISyntaxException e) {\n+        throw new IOException(e);\n       }\n-      return fs !\u003d null;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public long renew(final Token\u003c?\u003e token, final Configuration conf\n        ) throws IOException, InterruptedException {\n      final UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n      // update the kerberos credentials, if they are coming from a keytab\n      ugi.checkTGTAndReloginFromKeytab();\n\n      try {\n        WebHdfsFileSystem webhdfs \u003d getWebHdfs(token, conf);\n        return webhdfs.renewDelegationToken(token);\n      } catch (URISyntaxException e) {\n        throw new IOException(e);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-2385. Support renew and cancel delegation tokens in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195656 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/10/11 1:37 PM",
          "commitName": "32cad9affe159ff7c6e4c7e31f57174967ef210a",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "31/10/11 12:03 PM",
          "commitNameOld": "7cb77a3b1bf9e41384a1f74a60d34214199755d8",
          "commitAuthorOld": "Jitendra Nath Pandey",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,13 @@\n-    public boolean renew() throws IOException, InterruptedException {\n-      final HftpFileSystem fs \u003d weakFs.get();\n-      if (fs !\u003d null) {\n-        synchronized (fs) {\n-          try {\n-            fs.renewToken.renew(fs.getConf());\n-          } catch (IOException ie) {\n-            try {\n-              fs.setDelegationToken(fs.getDelegationToken(null));\n-            } catch (IOException ie2) {\n-              throw new IOException(\"Can\u0027t renew or get new delegation \"\n-                  + \"token \", ie);\n-            }\n-          }\n-        }\n+    public long renew(final Token\u003c?\u003e token, final Configuration conf\n+        ) throws IOException, InterruptedException {\n+      final UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n+      // update the kerberos credentials, if they are coming from a keytab\n+      ugi.checkTGTAndReloginFromKeytab();\n+\n+      try {\n+        WebHdfsFileSystem webhdfs \u003d getWebHdfs(token, conf);\n+        return webhdfs.renewDelegationToken(token);\n+      } catch (URISyntaxException e) {\n+        throw new IOException(e);\n       }\n-      return fs !\u003d null;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public long renew(final Token\u003c?\u003e token, final Configuration conf\n        ) throws IOException, InterruptedException {\n      final UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n      // update the kerberos credentials, if they are coming from a keytab\n      ugi.checkTGTAndReloginFromKeytab();\n\n      try {\n        WebHdfsFileSystem webhdfs \u003d getWebHdfs(token, conf);\n        return webhdfs.renewDelegationToken(token);\n      } catch (URISyntaxException e) {\n        throw new IOException(e);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[token-Token\u003c?\u003e(modifiers-final), conf-Configuration(modifiers-final)]"
          }
        }
      ]
    },
    "002dd6968b89ded6a77858ccb50c9b2df074c226": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2764. Fix renewal of dfs delegation tokens. Contributed by Owen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1183187 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/10/11 6:24 PM",
      "commitName": "002dd6968b89ded6a77858ccb50c9b2df074c226",
      "commitAuthor": "Jitendra Nath Pandey",
      "commitDateOld": "10/09/11 6:41 PM",
      "commitNameOld": "61d0b7530c8978c095ab6f62d9d38e168bd829c6",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 32.99,
      "commitsBetweenForRepo": 243,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,18 @@\n     public boolean renew() throws IOException, InterruptedException {\n       final HftpFileSystem fs \u003d weakFs.get();\n       if (fs !\u003d null) {\n         synchronized (fs) {\n-          fs.ugi.reloginFromKeytab();\n-          fs.ugi.doAs(new PrivilegedExceptionAction\u003cVoid\u003e() {\n-\n-            @Override\n-            public Void run() throws Exception {\n-              try {\n-                DelegationTokenFetcher.renewDelegationToken(fs.nnHttpUrl, \n-                    fs.delegationToken);\n-              } catch (IOException ie) {\n-                try {\n-                  fs.delegationToken \u003d \n-                    (Token\u003cDelegationTokenIdentifier\u003e) fs.getDelegationToken(null);\n-                } catch (IOException ie2) {\n-                  throw new IOException(\"Can\u0027t renew or get new delegation token \", \n-                      ie);\n-                }\n-              }\n-              return null;\n-            } \n-          });\n+          try {\n+            fs.renewToken.renew(fs.getConf());\n+          } catch (IOException ie) {\n+            try {\n+              fs.setDelegationToken(fs.getDelegationToken(null));\n+            } catch (IOException ie2) {\n+              throw new IOException(\"Can\u0027t renew or get new delegation \"\n+                  + \"token \", ie);\n+            }\n+          }\n         }\n       }\n       return fs !\u003d null;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean renew() throws IOException, InterruptedException {\n      final HftpFileSystem fs \u003d weakFs.get();\n      if (fs !\u003d null) {\n        synchronized (fs) {\n          try {\n            fs.renewToken.renew(fs.getConf());\n          } catch (IOException ie) {\n            try {\n              fs.setDelegationToken(fs.getDelegationToken(null));\n            } catch (IOException ie2) {\n              throw new IOException(\"Can\u0027t renew or get new delegation \"\n                  + \"token \", ie);\n            }\n          }\n        }\n      }\n      return fs !\u003d null;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HftpFileSystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public boolean renew() throws IOException, InterruptedException {\n      final HftpFileSystem fs \u003d weakFs.get();\n      if (fs !\u003d null) {\n        synchronized (fs) {\n          fs.ugi.reloginFromKeytab();\n          fs.ugi.doAs(new PrivilegedExceptionAction\u003cVoid\u003e() {\n\n            @Override\n            public Void run() throws Exception {\n              try {\n                DelegationTokenFetcher.renewDelegationToken(fs.nnHttpUrl, \n                    fs.delegationToken);\n              } catch (IOException ie) {\n                try {\n                  fs.delegationToken \u003d \n                    (Token\u003cDelegationTokenIdentifier\u003e) fs.getDelegationToken(null);\n                } catch (IOException ie2) {\n                  throw new IOException(\"Can\u0027t renew or get new delegation token \", \n                      ie);\n                }\n              }\n              return null;\n            } \n          });\n        }\n      }\n      return fs !\u003d null;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HftpFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HftpFileSystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HftpFileSystem.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public boolean renew() throws IOException, InterruptedException {\n      final HftpFileSystem fs \u003d weakFs.get();\n      if (fs !\u003d null) {\n        synchronized (fs) {\n          fs.ugi.reloginFromKeytab();\n          fs.ugi.doAs(new PrivilegedExceptionAction\u003cVoid\u003e() {\n\n            @Override\n            public Void run() throws Exception {\n              try {\n                DelegationTokenFetcher.renewDelegationToken(fs.nnHttpUrl, \n                    fs.delegationToken);\n              } catch (IOException ie) {\n                try {\n                  fs.delegationToken \u003d \n                    (Token\u003cDelegationTokenIdentifier\u003e) fs.getDelegationToken(null);\n                } catch (IOException ie2) {\n                  throw new IOException(\"Can\u0027t renew or get new delegation token \", \n                      ie);\n                }\n              }\n              return null;\n            } \n          });\n        }\n      }\n      return fs !\u003d null;\n    }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HftpFileSystem.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/HftpFileSystem.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HftpFileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,28 @@\n+    public boolean renew() throws IOException, InterruptedException {\n+      final HftpFileSystem fs \u003d weakFs.get();\n+      if (fs !\u003d null) {\n+        synchronized (fs) {\n+          fs.ugi.reloginFromKeytab();\n+          fs.ugi.doAs(new PrivilegedExceptionAction\u003cVoid\u003e() {\n+\n+            @Override\n+            public Void run() throws Exception {\n+              try {\n+                DelegationTokenFetcher.renewDelegationToken(fs.nnHttpUrl, \n+                    fs.delegationToken);\n+              } catch (IOException ie) {\n+                try {\n+                  fs.delegationToken \u003d \n+                    (Token\u003cDelegationTokenIdentifier\u003e) fs.getDelegationToken(null);\n+                } catch (IOException ie2) {\n+                  throw new IOException(\"Can\u0027t renew or get new delegation token \", \n+                      ie);\n+                }\n+              }\n+              return null;\n+            } \n+          });\n+        }\n+      }\n+      return fs !\u003d null;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean renew() throws IOException, InterruptedException {\n      final HftpFileSystem fs \u003d weakFs.get();\n      if (fs !\u003d null) {\n        synchronized (fs) {\n          fs.ugi.reloginFromKeytab();\n          fs.ugi.doAs(new PrivilegedExceptionAction\u003cVoid\u003e() {\n\n            @Override\n            public Void run() throws Exception {\n              try {\n                DelegationTokenFetcher.renewDelegationToken(fs.nnHttpUrl, \n                    fs.delegationToken);\n              } catch (IOException ie) {\n                try {\n                  fs.delegationToken \u003d \n                    (Token\u003cDelegationTokenIdentifier\u003e) fs.getDelegationToken(null);\n                } catch (IOException ie2) {\n                  throw new IOException(\"Can\u0027t renew or get new delegation token \", \n                      ie);\n                }\n              }\n              return null;\n            } \n          });\n        }\n      }\n      return fs !\u003d null;\n    }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/HftpFileSystem.java"
    }
  }
}