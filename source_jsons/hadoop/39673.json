{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeafQueue.java",
  "functionName": "recalculateQueueUsageRatio",
  "functionId": "recalculateQueueUsageRatio___clusterResource-Resource__nodePartition-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
  "functionStartLine": 1609,
  "functionEndLine": 1627,
  "numCommitsSeen": 176,
  "timeTaken": 4254,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
    "444b2ea7afebf9f6c3d356154b71abfd0ea95b23"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e": "Ymultichange(Ymodifierchange,Ybodychange)",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": "Ymultichange(Ymodifierchange,Ybodychange)",
    "444b2ea7afebf9f6c3d356154b71abfd0ea95b23": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public void recalculateQueueUsageRatio(Resource clusterResource,\n       String nodePartition) {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       ResourceUsage queueResourceUsage \u003d getQueueResourceUsage();\n \n       if (nodePartition \u003d\u003d null) {\n         for (String partition : Sets.union(\n             getQueueCapacities().getNodePartitionsSet(),\n             queueResourceUsage.getNodePartitionsSet())) {\n           usersManager.updateUsageRatio(partition, clusterResource);\n         }\n       } else {\n         usersManager.updateUsageRatio(nodePartition, clusterResource);\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recalculateQueueUsageRatio(Resource clusterResource,\n      String nodePartition) {\n    writeLock.lock();\n    try {\n      ResourceUsage queueResourceUsage \u003d getQueueResourceUsage();\n\n      if (nodePartition \u003d\u003d null) {\n        for (String partition : Sets.union(\n            getQueueCapacities().getNodePartitionsSet(),\n            queueResourceUsage.getNodePartitionsSet())) {\n          usersManager.updateUsageRatio(partition, clusterResource);\n        }\n      } else {\n        usersManager.updateUsageRatio(nodePartition, clusterResource);\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-5889. Improve and refactor user-limit calculation in Capacity Scheduler. (Sunil G via wangda)\n",
      "commitDate": "09/02/17 10:23 AM",
      "commitName": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-5889. Improve and refactor user-limit calculation in Capacity Scheduler. (Sunil G via wangda)\n",
          "commitDate": "09/02/17 10:23 AM",
          "commitName": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "23/01/17 10:52 AM",
          "commitNameOld": "ce832059db077fa95922198b066a737ed4f609fe",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 16.98,
          "commitsBetweenForRepo": 67,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,19 @@\n-  private void recalculateQueueUsageRatio(Resource clusterResource,\n+  public void recalculateQueueUsageRatio(Resource clusterResource,\n       String nodePartition) {\n     try {\n       writeLock.lock();\n-      ResourceUsage queueResourceUsage \u003d this.getQueueResourceUsage();\n+      ResourceUsage queueResourceUsage \u003d getQueueResourceUsage();\n \n       if (nodePartition \u003d\u003d null) {\n         for (String partition : Sets.union(\n-            queueCapacities.getNodePartitionsSet(),\n+            getQueueCapacities().getNodePartitionsSet(),\n             queueResourceUsage.getNodePartitionsSet())) {\n-          qUsageRatios.setUsageRatio(partition,\n-              calculateUserUsageRatio(clusterResource, partition));\n+          usersManager.updateUsageRatio(partition, clusterResource);\n         }\n-      } else{\n-        qUsageRatios.setUsageRatio(nodePartition,\n-            calculateUserUsageRatio(clusterResource, nodePartition));\n+      } else {\n+        usersManager.updateUsageRatio(nodePartition, clusterResource);\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void recalculateQueueUsageRatio(Resource clusterResource,\n      String nodePartition) {\n    try {\n      writeLock.lock();\n      ResourceUsage queueResourceUsage \u003d getQueueResourceUsage();\n\n      if (nodePartition \u003d\u003d null) {\n        for (String partition : Sets.union(\n            getQueueCapacities().getNodePartitionsSet(),\n            queueResourceUsage.getNodePartitionsSet())) {\n          usersManager.updateUsageRatio(partition, clusterResource);\n        }\n      } else {\n        usersManager.updateUsageRatio(nodePartition, clusterResource);\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5889. Improve and refactor user-limit calculation in Capacity Scheduler. (Sunil G via wangda)\n",
          "commitDate": "09/02/17 10:23 AM",
          "commitName": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "23/01/17 10:52 AM",
          "commitNameOld": "ce832059db077fa95922198b066a737ed4f609fe",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 16.98,
          "commitsBetweenForRepo": 67,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,19 @@\n-  private void recalculateQueueUsageRatio(Resource clusterResource,\n+  public void recalculateQueueUsageRatio(Resource clusterResource,\n       String nodePartition) {\n     try {\n       writeLock.lock();\n-      ResourceUsage queueResourceUsage \u003d this.getQueueResourceUsage();\n+      ResourceUsage queueResourceUsage \u003d getQueueResourceUsage();\n \n       if (nodePartition \u003d\u003d null) {\n         for (String partition : Sets.union(\n-            queueCapacities.getNodePartitionsSet(),\n+            getQueueCapacities().getNodePartitionsSet(),\n             queueResourceUsage.getNodePartitionsSet())) {\n-          qUsageRatios.setUsageRatio(partition,\n-              calculateUserUsageRatio(clusterResource, partition));\n+          usersManager.updateUsageRatio(partition, clusterResource);\n         }\n-      } else{\n-        qUsageRatios.setUsageRatio(nodePartition,\n-            calculateUserUsageRatio(clusterResource, nodePartition));\n+      } else {\n+        usersManager.updateUsageRatio(nodePartition, clusterResource);\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void recalculateQueueUsageRatio(Resource clusterResource,\n      String nodePartition) {\n    try {\n      writeLock.lock();\n      ResourceUsage queueResourceUsage \u003d getQueueResourceUsage();\n\n      if (nodePartition \u003d\u003d null) {\n        for (String partition : Sets.union(\n            getQueueCapacities().getNodePartitionsSet(),\n            queueResourceUsage.getNodePartitionsSet())) {\n          usersManager.updateUsageRatio(partition, clusterResource);\n        }\n      } else {\n        usersManager.updateUsageRatio(nodePartition, clusterResource);\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
      "commitDate": "20/09/16 12:03 AM",
      "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
          "commitDate": "20/09/16 12:03 AM",
          "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthor": "Jian He",
          "commitDateOld": "16/09/16 10:05 PM",
          "commitNameOld": "4174b9756c8c7877797545c4356b1f40df603ec5",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 3.08,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,21 @@\n-  private synchronized void recalculateQueueUsageRatio(Resource clusterResource,\n+  private void recalculateQueueUsageRatio(Resource clusterResource,\n       String nodePartition) {\n-    ResourceUsage queueResourceUsage \u003d this.getQueueResourceUsage();\n+    try {\n+      writeLock.lock();\n+      ResourceUsage queueResourceUsage \u003d this.getQueueResourceUsage();\n \n-    if (nodePartition \u003d\u003d null) {\n-      for (String partition : Sets.union(queueCapacities.getNodePartitionsSet(),\n-          queueResourceUsage.getNodePartitionsSet())) {\n-        qUsageRatios.setUsageRatio(partition,\n-            calculateUserUsageRatio(clusterResource, partition));\n+      if (nodePartition \u003d\u003d null) {\n+        for (String partition : Sets.union(\n+            queueCapacities.getNodePartitionsSet(),\n+            queueResourceUsage.getNodePartitionsSet())) {\n+          qUsageRatios.setUsageRatio(partition,\n+              calculateUserUsageRatio(clusterResource, partition));\n+        }\n+      } else{\n+        qUsageRatios.setUsageRatio(nodePartition,\n+            calculateUserUsageRatio(clusterResource, nodePartition));\n       }\n-    } else {\n-      qUsageRatios.setUsageRatio(nodePartition,\n-          calculateUserUsageRatio(clusterResource, nodePartition));\n+    } finally {\n+      writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void recalculateQueueUsageRatio(Resource clusterResource,\n      String nodePartition) {\n    try {\n      writeLock.lock();\n      ResourceUsage queueResourceUsage \u003d this.getQueueResourceUsage();\n\n      if (nodePartition \u003d\u003d null) {\n        for (String partition : Sets.union(\n            queueCapacities.getNodePartitionsSet(),\n            queueResourceUsage.getNodePartitionsSet())) {\n          qUsageRatios.setUsageRatio(partition,\n              calculateUserUsageRatio(clusterResource, partition));\n        }\n      } else{\n        qUsageRatios.setUsageRatio(nodePartition,\n            calculateUserUsageRatio(clusterResource, nodePartition));\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "[private, synchronized]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
          "commitDate": "20/09/16 12:03 AM",
          "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthor": "Jian He",
          "commitDateOld": "16/09/16 10:05 PM",
          "commitNameOld": "4174b9756c8c7877797545c4356b1f40df603ec5",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 3.08,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,21 @@\n-  private synchronized void recalculateQueueUsageRatio(Resource clusterResource,\n+  private void recalculateQueueUsageRatio(Resource clusterResource,\n       String nodePartition) {\n-    ResourceUsage queueResourceUsage \u003d this.getQueueResourceUsage();\n+    try {\n+      writeLock.lock();\n+      ResourceUsage queueResourceUsage \u003d this.getQueueResourceUsage();\n \n-    if (nodePartition \u003d\u003d null) {\n-      for (String partition : Sets.union(queueCapacities.getNodePartitionsSet(),\n-          queueResourceUsage.getNodePartitionsSet())) {\n-        qUsageRatios.setUsageRatio(partition,\n-            calculateUserUsageRatio(clusterResource, partition));\n+      if (nodePartition \u003d\u003d null) {\n+        for (String partition : Sets.union(\n+            queueCapacities.getNodePartitionsSet(),\n+            queueResourceUsage.getNodePartitionsSet())) {\n+          qUsageRatios.setUsageRatio(partition,\n+              calculateUserUsageRatio(clusterResource, partition));\n+        }\n+      } else{\n+        qUsageRatios.setUsageRatio(nodePartition,\n+            calculateUserUsageRatio(clusterResource, nodePartition));\n       }\n-    } else {\n-      qUsageRatios.setUsageRatio(nodePartition,\n-          calculateUserUsageRatio(clusterResource, nodePartition));\n+    } finally {\n+      writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void recalculateQueueUsageRatio(Resource clusterResource,\n      String nodePartition) {\n    try {\n      writeLock.lock();\n      ResourceUsage queueResourceUsage \u003d this.getQueueResourceUsage();\n\n      if (nodePartition \u003d\u003d null) {\n        for (String partition : Sets.union(\n            queueCapacities.getNodePartitionsSet(),\n            queueResourceUsage.getNodePartitionsSet())) {\n          qUsageRatios.setUsageRatio(partition,\n              calculateUserUsageRatio(clusterResource, partition));\n        }\n      } else{\n        qUsageRatios.setUsageRatio(nodePartition,\n            calculateUserUsageRatio(clusterResource, nodePartition));\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "444b2ea7afebf9f6c3d356154b71abfd0ea95b23": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3388. Allocation in LeafQueue could get stuck because DRF calculator isn\u0027t well supported when computing user-limit. (Nathan Roberts via wangda)\n",
      "commitDate": "19/08/16 4:28 PM",
      "commitName": "444b2ea7afebf9f6c3d356154b71abfd0ea95b23",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,15 @@\n+  private synchronized void recalculateQueueUsageRatio(Resource clusterResource,\n+      String nodePartition) {\n+    ResourceUsage queueResourceUsage \u003d this.getQueueResourceUsage();\n+\n+    if (nodePartition \u003d\u003d null) {\n+      for (String partition : Sets.union(queueCapacities.getNodePartitionsSet(),\n+          queueResourceUsage.getNodePartitionsSet())) {\n+        qUsageRatios.setUsageRatio(partition,\n+            calculateUserUsageRatio(clusterResource, partition));\n+      }\n+    } else {\n+      qUsageRatios.setUsageRatio(nodePartition,\n+          calculateUserUsageRatio(clusterResource, nodePartition));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void recalculateQueueUsageRatio(Resource clusterResource,\n      String nodePartition) {\n    ResourceUsage queueResourceUsage \u003d this.getQueueResourceUsage();\n\n    if (nodePartition \u003d\u003d null) {\n      for (String partition : Sets.union(queueCapacities.getNodePartitionsSet(),\n          queueResourceUsage.getNodePartitionsSet())) {\n        qUsageRatios.setUsageRatio(partition,\n            calculateUserUsageRatio(clusterResource, partition));\n      }\n    } else {\n      qUsageRatios.setUsageRatio(nodePartition,\n          calculateUserUsageRatio(clusterResource, nodePartition));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
    }
  }
}