{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedFileSystem.java",
  "functionName": "getEZForPath",
  "functionId": "getEZForPath___path-Path(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
  "functionStartLine": 2694,
  "functionEndLine": 2720,
  "numCommitsSeen": 315,
  "timeTaken": 6066,
  "changeHistory": [
    "f048512bb89f4d1edbb54360622adc61ffacbde3",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
    "1c030c6e58dc83152f933323bb7743ad47f5af27",
    "2e8ea780a45c0eccb8f106b2bf072b59446a1cc4",
    "20dcb841ce55b0d414885ceba530c30b5b528b0f"
  ],
  "changeHistoryShort": {
    "f048512bb89f4d1edbb54360622adc61ffacbde3": "Ybodychange",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": "Ybodychange",
    "1c030c6e58dc83152f933323bb7743ad47f5af27": "Yfilerename",
    "2e8ea780a45c0eccb8f106b2bf072b59446a1cc4": "Ymultichange(Ybodychange,Yparametermetachange)",
    "20dcb841ce55b0d414885ceba530c30b5b528b0f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f048512bb89f4d1edbb54360622adc61ffacbde3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14192. Track missing DFS operations in Statistics and StorageStatistics. Contributed by Ayush Saxena.\n",
      "commitDate": "16/01/19 10:14 AM",
      "commitName": "f048512bb89f4d1edbb54360622adc61ffacbde3",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "16/12/18 9:54 PM",
      "commitNameOld": "788e7473a404fa074b3af522416ee3d2fae865a0",
      "commitAuthorOld": "Surendra Singh Lilhore",
      "daysBetweenCommits": 30.51,
      "commitsBetweenForRepo": 179,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,27 @@\n   public EncryptionZone getEZForPath(final Path path)\n       throws IOException {\n+    statistics.incrementReadOps(1);\n+    storageStatistics.incrementOpCounter(OpType.GET_ENCRYPTION_ZONE);\n     Preconditions.checkNotNull(path);\n     Path absF \u003d fixRelativePart(path);\n     return new FileSystemLinkResolver\u003cEncryptionZone\u003e() {\n       @Override\n       public EncryptionZone doCall(final Path p) throws IOException {\n         return dfs.getEZForPath(getPathName(p));\n       }\n \n       @Override\n       public EncryptionZone next(final FileSystem fs, final Path p)\n           throws IOException {\n         if (fs instanceof DistributedFileSystem) {\n           DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n           return myDfs.getEZForPath(p);\n         } else {\n           throw new UnsupportedOperationException(\n               \"Cannot call getEZForPath\"\n                   + \" on a symlink to a non-DistributedFileSystem: \" + path\n                   + \" -\u003e \" + p);\n         }\n       }\n     }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public EncryptionZone getEZForPath(final Path path)\n      throws IOException {\n    statistics.incrementReadOps(1);\n    storageStatistics.incrementOpCounter(OpType.GET_ENCRYPTION_ZONE);\n    Preconditions.checkNotNull(path);\n    Path absF \u003d fixRelativePart(path);\n    return new FileSystemLinkResolver\u003cEncryptionZone\u003e() {\n      @Override\n      public EncryptionZone doCall(final Path p) throws IOException {\n        return dfs.getEZForPath(getPathName(p));\n      }\n\n      @Override\n      public EncryptionZone next(final FileSystem fs, final Path p)\n          throws IOException {\n        if (fs instanceof DistributedFileSystem) {\n          DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n          return myDfs.getEZForPath(p);\n        } else {\n          throw new UnsupportedOperationException(\n              \"Cannot call getEZForPath\"\n                  + \" on a symlink to a non-DistributedFileSystem: \" + path\n                  + \" -\u003e \" + p);\n        }\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "03/10/15 11:38 AM",
      "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/09/15 1:39 AM",
      "commitNameOld": "8fd55202468b28422b0df888641c9b08906fe4a7",
      "commitAuthorOld": "",
      "daysBetweenCommits": 4.42,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,25 @@\n   public EncryptionZone getEZForPath(final Path path)\n-          throws IOException {\n+      throws IOException {\n     Preconditions.checkNotNull(path);\n     Path absF \u003d fixRelativePart(path);\n     return new FileSystemLinkResolver\u003cEncryptionZone\u003e() {\n       @Override\n-      public EncryptionZone doCall(final Path p) throws IOException,\n-          UnresolvedLinkException {\n+      public EncryptionZone doCall(final Path p) throws IOException {\n         return dfs.getEZForPath(getPathName(p));\n       }\n \n       @Override\n       public EncryptionZone next(final FileSystem fs, final Path p)\n           throws IOException {\n         if (fs instanceof DistributedFileSystem) {\n           DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n           return myDfs.getEZForPath(p);\n         } else {\n           throw new UnsupportedOperationException(\n               \"Cannot call getEZForPath\"\n                   + \" on a symlink to a non-DistributedFileSystem: \" + path\n                   + \" -\u003e \" + p);\n         }\n       }\n     }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public EncryptionZone getEZForPath(final Path path)\n      throws IOException {\n    Preconditions.checkNotNull(path);\n    Path absF \u003d fixRelativePart(path);\n    return new FileSystemLinkResolver\u003cEncryptionZone\u003e() {\n      @Override\n      public EncryptionZone doCall(final Path p) throws IOException {\n        return dfs.getEZForPath(getPathName(p));\n      }\n\n      @Override\n      public EncryptionZone next(final FileSystem fs, final Path p)\n          throws IOException {\n        if (fs instanceof DistributedFileSystem) {\n          DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n          return myDfs.getEZForPath(p);\n        } else {\n          throw new UnsupportedOperationException(\n              \"Cannot call getEZForPath\"\n                  + \" on a symlink to a non-DistributedFileSystem: \" + path\n                  + \" -\u003e \" + p);\n        }\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "1c030c6e58dc83152f933323bb7743ad47f5af27": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8740. Move DistributedFileSystem to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "27/09/15 10:54 AM",
      "commitName": "1c030c6e58dc83152f933323bb7743ad47f5af27",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "27/09/15 1:42 AM",
      "commitNameOld": "f0f984e4e63d0dbafe93062a122ee051330db301",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.38,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public EncryptionZone getEZForPath(final Path path)\n          throws IOException {\n    Preconditions.checkNotNull(path);\n    Path absF \u003d fixRelativePart(path);\n    return new FileSystemLinkResolver\u003cEncryptionZone\u003e() {\n      @Override\n      public EncryptionZone doCall(final Path p) throws IOException,\n          UnresolvedLinkException {\n        return dfs.getEZForPath(getPathName(p));\n      }\n\n      @Override\n      public EncryptionZone next(final FileSystem fs, final Path p)\n          throws IOException {\n        if (fs instanceof DistributedFileSystem) {\n          DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n          return myDfs.getEZForPath(p);\n        } else {\n          throw new UnsupportedOperationException(\n              \"Cannot call getEZForPath\"\n                  + \" on a symlink to a non-DistributedFileSystem: \" + path\n                  + \" -\u003e \" + p);\n        }\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
      }
    },
    "2e8ea780a45c0eccb8f106b2bf072b59446a1cc4": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "HDFS-8142. DistributedFileSystem encryption zone commands should resolve relative paths. Contributed by Rakesh R.\n",
      "commitDate": "16/04/15 7:14 AM",
      "commitName": "2e8ea780a45c0eccb8f106b2bf072b59446a1cc4",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8142. DistributedFileSystem encryption zone commands should resolve relative paths. Contributed by Rakesh R.\n",
          "commitDate": "16/04/15 7:14 AM",
          "commitName": "2e8ea780a45c0eccb8f106b2bf072b59446a1cc4",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "10/04/15 2:48 PM",
          "commitNameOld": "2cc9514ad643ae49d30524743420ee9744e571bd",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 5.68,
          "commitsBetweenForRepo": 33,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,26 @@\n-  public EncryptionZone getEZForPath(Path path)\n+  public EncryptionZone getEZForPath(final Path path)\n           throws IOException {\n     Preconditions.checkNotNull(path);\n-    return dfs.getEZForPath(getPathName(path));\n+    Path absF \u003d fixRelativePart(path);\n+    return new FileSystemLinkResolver\u003cEncryptionZone\u003e() {\n+      @Override\n+      public EncryptionZone doCall(final Path p) throws IOException,\n+          UnresolvedLinkException {\n+        return dfs.getEZForPath(getPathName(p));\n+      }\n+\n+      @Override\n+      public EncryptionZone next(final FileSystem fs, final Path p)\n+          throws IOException {\n+        if (fs instanceof DistributedFileSystem) {\n+          DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n+          return myDfs.getEZForPath(p);\n+        } else {\n+          throw new UnsupportedOperationException(\n+              \"Cannot call getEZForPath\"\n+                  + \" on a symlink to a non-DistributedFileSystem: \" + path\n+                  + \" -\u003e \" + p);\n+        }\n+      }\n+    }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public EncryptionZone getEZForPath(final Path path)\n          throws IOException {\n    Preconditions.checkNotNull(path);\n    Path absF \u003d fixRelativePart(path);\n    return new FileSystemLinkResolver\u003cEncryptionZone\u003e() {\n      @Override\n      public EncryptionZone doCall(final Path p) throws IOException,\n          UnresolvedLinkException {\n        return dfs.getEZForPath(getPathName(p));\n      }\n\n      @Override\n      public EncryptionZone next(final FileSystem fs, final Path p)\n          throws IOException {\n        if (fs instanceof DistributedFileSystem) {\n          DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n          return myDfs.getEZForPath(p);\n        } else {\n          throw new UnsupportedOperationException(\n              \"Cannot call getEZForPath\"\n                  + \" on a symlink to a non-DistributedFileSystem: \" + path\n                  + \" -\u003e \" + p);\n        }\n      }\n    }.resolve(this, absF);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HDFS-8142. DistributedFileSystem encryption zone commands should resolve relative paths. Contributed by Rakesh R.\n",
          "commitDate": "16/04/15 7:14 AM",
          "commitName": "2e8ea780a45c0eccb8f106b2bf072b59446a1cc4",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "10/04/15 2:48 PM",
          "commitNameOld": "2cc9514ad643ae49d30524743420ee9744e571bd",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 5.68,
          "commitsBetweenForRepo": 33,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,26 @@\n-  public EncryptionZone getEZForPath(Path path)\n+  public EncryptionZone getEZForPath(final Path path)\n           throws IOException {\n     Preconditions.checkNotNull(path);\n-    return dfs.getEZForPath(getPathName(path));\n+    Path absF \u003d fixRelativePart(path);\n+    return new FileSystemLinkResolver\u003cEncryptionZone\u003e() {\n+      @Override\n+      public EncryptionZone doCall(final Path p) throws IOException,\n+          UnresolvedLinkException {\n+        return dfs.getEZForPath(getPathName(p));\n+      }\n+\n+      @Override\n+      public EncryptionZone next(final FileSystem fs, final Path p)\n+          throws IOException {\n+        if (fs instanceof DistributedFileSystem) {\n+          DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n+          return myDfs.getEZForPath(p);\n+        } else {\n+          throw new UnsupportedOperationException(\n+              \"Cannot call getEZForPath\"\n+                  + \" on a symlink to a non-DistributedFileSystem: \" + path\n+                  + \" -\u003e \" + p);\n+        }\n+      }\n+    }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public EncryptionZone getEZForPath(final Path path)\n          throws IOException {\n    Preconditions.checkNotNull(path);\n    Path absF \u003d fixRelativePart(path);\n    return new FileSystemLinkResolver\u003cEncryptionZone\u003e() {\n      @Override\n      public EncryptionZone doCall(final Path p) throws IOException,\n          UnresolvedLinkException {\n        return dfs.getEZForPath(getPathName(p));\n      }\n\n      @Override\n      public EncryptionZone next(final FileSystem fs, final Path p)\n          throws IOException {\n        if (fs instanceof DistributedFileSystem) {\n          DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n          return myDfs.getEZForPath(p);\n        } else {\n          throw new UnsupportedOperationException(\n              \"Cannot call getEZForPath\"\n                  + \" on a symlink to a non-DistributedFileSystem: \" + path\n                  + \" -\u003e \" + p);\n        }\n      }\n    }.resolve(this, absF);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
          "extendedDetails": {
            "oldValue": "[path-Path]",
            "newValue": "[path-Path(modifiers-final)]"
          }
        }
      ]
    },
    "20dcb841ce55b0d414885ceba530c30b5b528b0f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6546. Add non-superuser capability to get the encryption zone for a specific path. (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1618022 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/08/14 12:11 PM",
      "commitName": "20dcb841ce55b0d414885ceba530c30b5b528b0f",
      "commitAuthor": "Charles Lamb",
      "diff": "@@ -0,0 +1,5 @@\n+  public EncryptionZone getEZForPath(Path path)\n+          throws IOException {\n+    Preconditions.checkNotNull(path);\n+    return dfs.getEZForPath(getPathName(path));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public EncryptionZone getEZForPath(Path path)\n          throws IOException {\n    Preconditions.checkNotNull(path);\n    return dfs.getEZForPath(getPathName(path));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
    }
  }
}