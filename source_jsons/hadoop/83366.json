{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceLauncher.java",
  "functionName": "launchServiceAndExit",
  "functionId": "launchServiceAndExit___args-List__String__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/service/launcher/ServiceLauncher.java",
  "functionStartLine": 280,
  "functionEndLine": 314,
  "numCommitsSeen": 3,
  "timeTaken": 1177,
  "changeHistory": [
    "b15ef7dc3d91c6d50fa515158104fba29f43e6b0",
    "373bb4931fb392e3ca6bfd78992887e5a405e186"
  ],
  "changeHistoryShort": {
    "b15ef7dc3d91c6d50fa515158104fba29f43e6b0": "Ybodychange",
    "373bb4931fb392e3ca6bfd78992887e5a405e186": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b15ef7dc3d91c6d50fa515158104fba29f43e6b0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16384: S3A: Avoid inconsistencies between DDB and S3.\n\nContributed by Steve Loughran\n\nContains\n\n- HADOOP-16397. Hadoop S3Guard Prune command to support a -tombstone option.\n- HADOOP-16406. ITestDynamoDBMetadataStore.testProvisionTable times out intermittently\n\nThis patch doesn\u0027t fix the underlying problem but it\n\n* changes some tests to clean up better\n* does a lot more in logging operations in against DDB, if enabled\n* adds an entry point to dump the state of the metastore and s3 tables (precursor to fsck)\n* adds a purge entry point to help clean up after a test run has got a store into a mess\n* s3guard prune command adds -tombstone option to only clear tombstones\n\nThe outcome is that tests should pass consistently and if problems occur we have better diagnostics.\n\nChange-Id: I3eca3f5529d7f6fec398c0ff0472919f08f054eb\n",
      "commitDate": "12/07/19 5:02 AM",
      "commitName": "b15ef7dc3d91c6d50fa515158104fba29f43e6b0",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "10/10/18 9:51 PM",
      "commitNameOld": "7b57f2f71fbaa5af4897309597cca70a95b04edd",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 274.3,
      "commitsBetweenForRepo": 2016,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n   public void launchServiceAndExit(List\u003cString\u003e args) {\n     StringBuilder builder \u003d new StringBuilder();\n     for (String arg : args) {\n       builder.append(\u0027\"\u0027).append(arg).append(\"\\\" \");\n     }\n     String argumentString \u003d builder.toString();\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(startupShutdownMessage(serviceName, args));\n       LOG.debug(argumentString);\n     }\n     registerFailureHandling();\n     // set up the configs, using reflection to push in the -site.xml files\n     loadConfigurationClasses();\n     Configuration conf \u003d createConfiguration();\n     for (URL resourceUrl : confResourceUrls) {\n       conf.addResource(resourceUrl);\n     }\n     bindCommandOptions();\n     ExitUtil.ExitException exitException;\n     try {\n       List\u003cString\u003e processedArgs \u003d extractCommandOptions(conf, args);\n       exitException \u003d launchService(conf, processedArgs, true, true);\n     } catch (ExitUtil.ExitException e) {\n       exitException \u003d e;\n       noteException(exitException);\n     }\n-    if (exitException.getExitCode() !\u003d 0) {\n+    if (exitException.getExitCode() \u003d\u003d LauncherExitCodes.EXIT_USAGE) {\n       // something went wrong. Print the usage and commands\n       System.err.println(getUsageMessage());\n       System.err.println(\"Command: \" + argumentString);\n     }\n     System.out.flush();\n     System.err.flush();\n     exit(exitException);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void launchServiceAndExit(List\u003cString\u003e args) {\n    StringBuilder builder \u003d new StringBuilder();\n    for (String arg : args) {\n      builder.append(\u0027\"\u0027).append(arg).append(\"\\\" \");\n    }\n    String argumentString \u003d builder.toString();\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(startupShutdownMessage(serviceName, args));\n      LOG.debug(argumentString);\n    }\n    registerFailureHandling();\n    // set up the configs, using reflection to push in the -site.xml files\n    loadConfigurationClasses();\n    Configuration conf \u003d createConfiguration();\n    for (URL resourceUrl : confResourceUrls) {\n      conf.addResource(resourceUrl);\n    }\n    bindCommandOptions();\n    ExitUtil.ExitException exitException;\n    try {\n      List\u003cString\u003e processedArgs \u003d extractCommandOptions(conf, args);\n      exitException \u003d launchService(conf, processedArgs, true, true);\n    } catch (ExitUtil.ExitException e) {\n      exitException \u003d e;\n      noteException(exitException);\n    }\n    if (exitException.getExitCode() \u003d\u003d LauncherExitCodes.EXIT_USAGE) {\n      // something went wrong. Print the usage and commands\n      System.err.println(getUsageMessage());\n      System.err.println(\"Command: \" + argumentString);\n    }\n    System.out.flush();\n    System.err.flush();\n    exit(exitException);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/service/launcher/ServiceLauncher.java",
      "extendedDetails": {}
    },
    "373bb4931fb392e3ca6bfd78992887e5a405e186": {
      "type": "Yintroduced",
      "commitMessage": "YARN-679. Add an entry point that can start any Yarn service. Contributed by Steve Loughran.\n",
      "commitDate": "28/04/17 10:45 AM",
      "commitName": "373bb4931fb392e3ca6bfd78992887e5a405e186",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,35 @@\n+  public void launchServiceAndExit(List\u003cString\u003e args) {\n+    StringBuilder builder \u003d new StringBuilder();\n+    for (String arg : args) {\n+      builder.append(\u0027\"\u0027).append(arg).append(\"\\\" \");\n+    }\n+    String argumentString \u003d builder.toString();\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(startupShutdownMessage(serviceName, args));\n+      LOG.debug(argumentString);\n+    }\n+    registerFailureHandling();\n+    // set up the configs, using reflection to push in the -site.xml files\n+    loadConfigurationClasses();\n+    Configuration conf \u003d createConfiguration();\n+    for (URL resourceUrl : confResourceUrls) {\n+      conf.addResource(resourceUrl);\n+    }\n+    bindCommandOptions();\n+    ExitUtil.ExitException exitException;\n+    try {\n+      List\u003cString\u003e processedArgs \u003d extractCommandOptions(conf, args);\n+      exitException \u003d launchService(conf, processedArgs, true, true);\n+    } catch (ExitUtil.ExitException e) {\n+      exitException \u003d e;\n+      noteException(exitException);\n+    }\n+    if (exitException.getExitCode() !\u003d 0) {\n+      // something went wrong. Print the usage and commands\n+      System.err.println(getUsageMessage());\n+      System.err.println(\"Command: \" + argumentString);\n+    }\n+    System.out.flush();\n+    System.err.flush();\n+    exit(exitException);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void launchServiceAndExit(List\u003cString\u003e args) {\n    StringBuilder builder \u003d new StringBuilder();\n    for (String arg : args) {\n      builder.append(\u0027\"\u0027).append(arg).append(\"\\\" \");\n    }\n    String argumentString \u003d builder.toString();\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(startupShutdownMessage(serviceName, args));\n      LOG.debug(argumentString);\n    }\n    registerFailureHandling();\n    // set up the configs, using reflection to push in the -site.xml files\n    loadConfigurationClasses();\n    Configuration conf \u003d createConfiguration();\n    for (URL resourceUrl : confResourceUrls) {\n      conf.addResource(resourceUrl);\n    }\n    bindCommandOptions();\n    ExitUtil.ExitException exitException;\n    try {\n      List\u003cString\u003e processedArgs \u003d extractCommandOptions(conf, args);\n      exitException \u003d launchService(conf, processedArgs, true, true);\n    } catch (ExitUtil.ExitException e) {\n      exitException \u003d e;\n      noteException(exitException);\n    }\n    if (exitException.getExitCode() !\u003d 0) {\n      // something went wrong. Print the usage and commands\n      System.err.println(getUsageMessage());\n      System.err.println(\"Command: \" + argumentString);\n    }\n    System.out.flush();\n    System.err.flush();\n    exit(exitException);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/service/launcher/ServiceLauncher.java"
    }
  }
}