{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockManager.java",
  "functionName": "shouldProcessExtraRedundancy",
  "functionId": "shouldProcessExtraRedundancy___num-NumberReplicas__expectedNum-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
  "functionStartLine": 3554,
  "functionEndLine": 3558,
  "numCommitsSeen": 1127,
  "timeTaken": 9458,
  "changeHistory": [
    "4852a90e4b077ece2d68595210e62959a9923683",
    "32d043d9c5f4615058ea4f65a58ba271ba47fcb5",
    "f2ba7da4f0df6cf0fc245093aeb4500158e6ee0b",
    "47b92f2b6f2dafc129a41b247f35e77c8e47ffba"
  ],
  "changeHistoryShort": {
    "4852a90e4b077ece2d68595210e62959a9923683": "Ybodychange",
    "32d043d9c5f4615058ea4f65a58ba271ba47fcb5": "Yrename",
    "f2ba7da4f0df6cf0fc245093aeb4500158e6ee0b": "Ymultichange(Yparameterchange,Ybodychange)",
    "47b92f2b6f2dafc129a41b247f35e77c8e47ffba": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4852a90e4b077ece2d68595210e62959a9923683": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14754. Erasure Coding : The number of Under-Replicated Blocks never reduced. Contributed by  hemanthboyina.\n",
      "commitDate": "12/09/19 11:47 AM",
      "commitName": "4852a90e4b077ece2d68595210e62959a9923683",
      "commitAuthor": "Surendra Singh Lilhore",
      "commitDateOld": "12/09/19 6:41 AM",
      "commitNameOld": "d1c303a49763029fffa5164295034af8e81e74a0",
      "commitAuthorOld": "Surendra Singh Lilhore",
      "daysBetweenCommits": 0.21,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,5 @@\n   private boolean shouldProcessExtraRedundancy(NumberReplicas num,\n       int expectedNum) {\n     final int numCurrent \u003d num.liveReplicas();\n-    return numCurrent \u003e expectedNum ||\n-        (numCurrent \u003d\u003d expectedNum \u0026\u0026 num.redundantInternalBlocks() \u003e 0);\n+    return numCurrent \u003e expectedNum || num.redundantInternalBlocks() \u003e 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean shouldProcessExtraRedundancy(NumberReplicas num,\n      int expectedNum) {\n    final int numCurrent \u003d num.liveReplicas();\n    return numCurrent \u003e expectedNum || num.redundantInternalBlocks() \u003e 0;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "32d043d9c5f4615058ea4f65a58ba271ba47fcb5": {
      "type": "Yrename",
      "commitMessage": "HDFS-9857. Erasure Coding: Rename replication-based names in BlockManager to more generic [part-1]. Contributed by Rakesh R.\n",
      "commitDate": "16/03/16 4:53 PM",
      "commitName": "32d043d9c5f4615058ea4f65a58ba271ba47fcb5",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "10/03/16 7:03 PM",
      "commitNameOld": "e01c6ea688e62f25c4310e771a0cd85b53a5fb87",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 5.87,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n-  private boolean shouldProcessOverReplicated(NumberReplicas num,\n+  private boolean shouldProcessExtraRedundancy(NumberReplicas num,\n       int expectedNum) {\n     final int numCurrent \u003d num.liveReplicas();\n     return numCurrent \u003e expectedNum ||\n         (numCurrent \u003d\u003d expectedNum \u0026\u0026 num.redundantInternalBlocks() \u003e 0);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean shouldProcessExtraRedundancy(NumberReplicas num,\n      int expectedNum) {\n    final int numCurrent \u003d num.liveReplicas();\n    return numCurrent \u003e expectedNum ||\n        (numCurrent \u003d\u003d expectedNum \u0026\u0026 num.redundantInternalBlocks() \u003e 0);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {
        "oldValue": "shouldProcessOverReplicated",
        "newValue": "shouldProcessExtraRedundancy"
      }
    },
    "f2ba7da4f0df6cf0fc245093aeb4500158e6ee0b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-9876. shouldProcessOverReplicated should not count number of pending replicas. Contributed by Jing Zhao.\n",
      "commitDate": "01/03/16 6:41 PM",
      "commitName": "f2ba7da4f0df6cf0fc245093aeb4500158e6ee0b",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-9876. shouldProcessOverReplicated should not count number of pending replicas. Contributed by Jing Zhao.\n",
          "commitDate": "01/03/16 6:41 PM",
          "commitName": "f2ba7da4f0df6cf0fc245093aeb4500158e6ee0b",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "28/02/16 2:54 PM",
          "commitNameOld": "408f2c807bbaaaa37ce1b69a5dfa9d76ed427d6e",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 2.16,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n   private boolean shouldProcessOverReplicated(NumberReplicas num,\n-      int pendingNum, int expectedNum) {\n-    int numCurrent \u003d num.liveReplicas() + pendingNum;\n+      int expectedNum) {\n+    final int numCurrent \u003d num.liveReplicas();\n     return numCurrent \u003e expectedNum ||\n         (numCurrent \u003d\u003d expectedNum \u0026\u0026 num.redundantInternalBlocks() \u003e 0);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean shouldProcessOverReplicated(NumberReplicas num,\n      int expectedNum) {\n    final int numCurrent \u003d num.liveReplicas();\n    return numCurrent \u003e expectedNum ||\n        (numCurrent \u003d\u003d expectedNum \u0026\u0026 num.redundantInternalBlocks() \u003e 0);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[num-NumberReplicas, pendingNum-int, expectedNum-int]",
            "newValue": "[num-NumberReplicas, expectedNum-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9876. shouldProcessOverReplicated should not count number of pending replicas. Contributed by Jing Zhao.\n",
          "commitDate": "01/03/16 6:41 PM",
          "commitName": "f2ba7da4f0df6cf0fc245093aeb4500158e6ee0b",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "28/02/16 2:54 PM",
          "commitNameOld": "408f2c807bbaaaa37ce1b69a5dfa9d76ed427d6e",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 2.16,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n   private boolean shouldProcessOverReplicated(NumberReplicas num,\n-      int pendingNum, int expectedNum) {\n-    int numCurrent \u003d num.liveReplicas() + pendingNum;\n+      int expectedNum) {\n+    final int numCurrent \u003d num.liveReplicas();\n     return numCurrent \u003e expectedNum ||\n         (numCurrent \u003d\u003d expectedNum \u0026\u0026 num.redundantInternalBlocks() \u003e 0);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean shouldProcessOverReplicated(NumberReplicas num,\n      int expectedNum) {\n    final int numCurrent \u003d num.liveReplicas();\n    return numCurrent \u003e expectedNum ||\n        (numCurrent \u003d\u003d expectedNum \u0026\u0026 num.redundantInternalBlocks() \u003e 0);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "47b92f2b6f2dafc129a41b247f35e77c8e47ffba": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9837. BlockManager#countNodes should be able to detect duplicated internal blocks. Contributed by Jing Zhao.\n",
      "commitDate": "24/02/16 3:13 PM",
      "commitName": "47b92f2b6f2dafc129a41b247f35e77c8e47ffba",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,6 @@\n+  private boolean shouldProcessOverReplicated(NumberReplicas num,\n+      int pendingNum, int expectedNum) {\n+    int numCurrent \u003d num.liveReplicas() + pendingNum;\n+    return numCurrent \u003e expectedNum ||\n+        (numCurrent \u003d\u003d expectedNum \u0026\u0026 num.redundantInternalBlocks() \u003e 0);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean shouldProcessOverReplicated(NumberReplicas num,\n      int pendingNum, int expectedNum) {\n    int numCurrent \u003d num.liveReplicas() + pendingNum;\n    return numCurrent \u003e expectedNum ||\n        (numCurrent \u003d\u003d expectedNum \u0026\u0026 num.redundantInternalBlocks() \u003e 0);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
    }
  }
}