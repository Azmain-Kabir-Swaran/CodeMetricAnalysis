{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WindowsSecureContainerExecutor.java",
  "functionName": "mkOneDirWithMode",
  "functionId": "mkOneDirWithMode___path-Path__p2f-File__permission-FsPermission",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/WindowsSecureContainerExecutor.java",
  "functionStartLine": 320,
  "functionEndLine": 341,
  "numCommitsSeen": 23,
  "timeTaken": 3264,
  "changeHistory": [
    "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf",
    "3b12fd6cfbf4cc91ef8e8616c7aafa9de006cde5"
  ],
  "changeHistoryShort": {
    "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "3b12fd6cfbf4cc91ef8e8616c7aafa9de006cde5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-11321. copyToLocal cannot save a file to an SMB share unless the user has Full Control permissions. Contributed by Chris Nauroth.\n",
      "commitDate": "16/12/14 3:29 PM",
      "commitName": "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf",
      "commitAuthor": "cnauroth",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-11321. copyToLocal cannot save a file to an SMB share unless the user has Full Control permissions. Contributed by Chris Nauroth.\n",
          "commitDate": "16/12/14 3:29 PM",
          "commitName": "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf",
          "commitAuthor": "cnauroth",
          "commitDateOld": "22/10/14 3:57 PM",
          "commitNameOld": "3b12fd6cfbf4cc91ef8e8616c7aafa9de006cde5",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 55.02,
          "commitsBetweenForRepo": 458,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,22 @@\n-      protected boolean mkOneDir(File p2f) throws IOException {\n-        Path path \u003d new Path(p2f.getAbsolutePath());\n+      protected boolean mkOneDirWithMode(Path path, File p2f,\n+          FsPermission permission) throws IOException {\n         if (LOG.isDebugEnabled()) {\n-          LOG.debug(String.format(\"EFS:mkOneDir: %s\", path));\n+          LOG.debug(String.format(\"EFS:mkOneDirWithMode: %s %s\", path,\n+              permission));\n         }\n         boolean ret \u003d false;\n \n         // File.mkdir returns false, does not throw. Must mimic it.\n         try {\n           Native.Elevated.mkdir(path);\n+          setPermission(path, permission);\n           ret \u003d true;\n         }\n         catch(Throwable e) {\n           if (LOG.isDebugEnabled()) {\n-            LOG.debug(String.format(\"EFS:mkOneDir: %s\", \n+            LOG.debug(String.format(\"EFS:mkOneDirWithMode: %s\",\n                 org.apache.hadoop.util.StringUtils.stringifyException(e)));\n           }\n         }\n         return ret;\n       }\n\\ No newline at end of file\n",
          "actualSource": "      protected boolean mkOneDirWithMode(Path path, File p2f,\n          FsPermission permission) throws IOException {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(String.format(\"EFS:mkOneDirWithMode: %s %s\", path,\n              permission));\n        }\n        boolean ret \u003d false;\n\n        // File.mkdir returns false, does not throw. Must mimic it.\n        try {\n          Native.Elevated.mkdir(path);\n          setPermission(path, permission);\n          ret \u003d true;\n        }\n        catch(Throwable e) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(String.format(\"EFS:mkOneDirWithMode: %s\",\n                org.apache.hadoop.util.StringUtils.stringifyException(e)));\n          }\n        }\n        return ret;\n      }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/WindowsSecureContainerExecutor.java",
          "extendedDetails": {
            "oldValue": "mkOneDir",
            "newValue": "mkOneDirWithMode"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-11321. copyToLocal cannot save a file to an SMB share unless the user has Full Control permissions. Contributed by Chris Nauroth.\n",
          "commitDate": "16/12/14 3:29 PM",
          "commitName": "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf",
          "commitAuthor": "cnauroth",
          "commitDateOld": "22/10/14 3:57 PM",
          "commitNameOld": "3b12fd6cfbf4cc91ef8e8616c7aafa9de006cde5",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 55.02,
          "commitsBetweenForRepo": 458,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,22 @@\n-      protected boolean mkOneDir(File p2f) throws IOException {\n-        Path path \u003d new Path(p2f.getAbsolutePath());\n+      protected boolean mkOneDirWithMode(Path path, File p2f,\n+          FsPermission permission) throws IOException {\n         if (LOG.isDebugEnabled()) {\n-          LOG.debug(String.format(\"EFS:mkOneDir: %s\", path));\n+          LOG.debug(String.format(\"EFS:mkOneDirWithMode: %s %s\", path,\n+              permission));\n         }\n         boolean ret \u003d false;\n \n         // File.mkdir returns false, does not throw. Must mimic it.\n         try {\n           Native.Elevated.mkdir(path);\n+          setPermission(path, permission);\n           ret \u003d true;\n         }\n         catch(Throwable e) {\n           if (LOG.isDebugEnabled()) {\n-            LOG.debug(String.format(\"EFS:mkOneDir: %s\", \n+            LOG.debug(String.format(\"EFS:mkOneDirWithMode: %s\",\n                 org.apache.hadoop.util.StringUtils.stringifyException(e)));\n           }\n         }\n         return ret;\n       }\n\\ No newline at end of file\n",
          "actualSource": "      protected boolean mkOneDirWithMode(Path path, File p2f,\n          FsPermission permission) throws IOException {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(String.format(\"EFS:mkOneDirWithMode: %s %s\", path,\n              permission));\n        }\n        boolean ret \u003d false;\n\n        // File.mkdir returns false, does not throw. Must mimic it.\n        try {\n          Native.Elevated.mkdir(path);\n          setPermission(path, permission);\n          ret \u003d true;\n        }\n        catch(Throwable e) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(String.format(\"EFS:mkOneDirWithMode: %s\",\n                org.apache.hadoop.util.StringUtils.stringifyException(e)));\n          }\n        }\n        return ret;\n      }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/WindowsSecureContainerExecutor.java",
          "extendedDetails": {
            "oldValue": "[p2f-File]",
            "newValue": "[path-Path, p2f-File, permission-FsPermission]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-11321. copyToLocal cannot save a file to an SMB share unless the user has Full Control permissions. Contributed by Chris Nauroth.\n",
          "commitDate": "16/12/14 3:29 PM",
          "commitName": "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf",
          "commitAuthor": "cnauroth",
          "commitDateOld": "22/10/14 3:57 PM",
          "commitNameOld": "3b12fd6cfbf4cc91ef8e8616c7aafa9de006cde5",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 55.02,
          "commitsBetweenForRepo": 458,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,22 @@\n-      protected boolean mkOneDir(File p2f) throws IOException {\n-        Path path \u003d new Path(p2f.getAbsolutePath());\n+      protected boolean mkOneDirWithMode(Path path, File p2f,\n+          FsPermission permission) throws IOException {\n         if (LOG.isDebugEnabled()) {\n-          LOG.debug(String.format(\"EFS:mkOneDir: %s\", path));\n+          LOG.debug(String.format(\"EFS:mkOneDirWithMode: %s %s\", path,\n+              permission));\n         }\n         boolean ret \u003d false;\n \n         // File.mkdir returns false, does not throw. Must mimic it.\n         try {\n           Native.Elevated.mkdir(path);\n+          setPermission(path, permission);\n           ret \u003d true;\n         }\n         catch(Throwable e) {\n           if (LOG.isDebugEnabled()) {\n-            LOG.debug(String.format(\"EFS:mkOneDir: %s\", \n+            LOG.debug(String.format(\"EFS:mkOneDirWithMode: %s\",\n                 org.apache.hadoop.util.StringUtils.stringifyException(e)));\n           }\n         }\n         return ret;\n       }\n\\ No newline at end of file\n",
          "actualSource": "      protected boolean mkOneDirWithMode(Path path, File p2f,\n          FsPermission permission) throws IOException {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(String.format(\"EFS:mkOneDirWithMode: %s %s\", path,\n              permission));\n        }\n        boolean ret \u003d false;\n\n        // File.mkdir returns false, does not throw. Must mimic it.\n        try {\n          Native.Elevated.mkdir(path);\n          setPermission(path, permission);\n          ret \u003d true;\n        }\n        catch(Throwable e) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(String.format(\"EFS:mkOneDirWithMode: %s\",\n                org.apache.hadoop.util.StringUtils.stringifyException(e)));\n          }\n        }\n        return ret;\n      }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/WindowsSecureContainerExecutor.java",
          "extendedDetails": {}
        }
      ]
    },
    "3b12fd6cfbf4cc91ef8e8616c7aafa9de006cde5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2198. Remove the need to run NodeManager as privileged account for Windows Secure Container Executor. Contributed by Remus Rusanu\n",
      "commitDate": "22/10/14 3:57 PM",
      "commitName": "3b12fd6cfbf4cc91ef8e8616c7aafa9de006cde5",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,20 @@\n+      protected boolean mkOneDir(File p2f) throws IOException {\n+        Path path \u003d new Path(p2f.getAbsolutePath());\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(String.format(\"EFS:mkOneDir: %s\", path));\n+        }\n+        boolean ret \u003d false;\n+\n+        // File.mkdir returns false, does not throw. Must mimic it.\n+        try {\n+          Native.Elevated.mkdir(path);\n+          ret \u003d true;\n+        }\n+        catch(Throwable e) {\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(String.format(\"EFS:mkOneDir: %s\", \n+                org.apache.hadoop.util.StringUtils.stringifyException(e)));\n+          }\n+        }\n+        return ret;\n+      }\n\\ No newline at end of file\n",
      "actualSource": "      protected boolean mkOneDir(File p2f) throws IOException {\n        Path path \u003d new Path(p2f.getAbsolutePath());\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(String.format(\"EFS:mkOneDir: %s\", path));\n        }\n        boolean ret \u003d false;\n\n        // File.mkdir returns false, does not throw. Must mimic it.\n        try {\n          Native.Elevated.mkdir(path);\n          ret \u003d true;\n        }\n        catch(Throwable e) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(String.format(\"EFS:mkOneDir: %s\", \n                org.apache.hadoop.util.StringUtils.stringifyException(e)));\n          }\n        }\n        return ret;\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/WindowsSecureContainerExecutor.java"
    }
  }
}