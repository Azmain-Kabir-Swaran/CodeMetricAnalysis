{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SharedKeyCredentials.java",
  "functionName": "canonicalizeHttpRequest",
  "functionId": "canonicalizeHttpRequest___address-URL(modifiers-final)__accountName-String(modifiers-final)__method-String(modifiers-final)__contentType-String(modifiers-final)__contentLength-long(modifiers-final)__date-String(modifiers-final)__conn-HttpURLConnection(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/SharedKeyCredentials.java",
  "functionStartLine": 206,
  "functionEndLine": 249,
  "numCommitsSeen": 5,
  "timeTaken": 1118,
  "changeHistory": [
    "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be",
    "f044deedbbfee0812316d587139cb828f27172e9"
  ],
  "changeHistoryShort": {
    "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be": "Yparameterchange",
    "f044deedbbfee0812316d587139cb828f27172e9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be": {
      "type": "Yparameterchange",
      "commitMessage": "HADOOP-15446. ABFS: tune imports \u0026 javadocs; stabilise tests.\nContributed by Steve Loughran and Da Zhou.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be",
      "commitAuthor": "Thomas Marquardt",
      "commitDateOld": "17/09/18 12:54 PM",
      "commitNameOld": "f044deedbbfee0812316d587139cb828f27172e9",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,44 @@\n-  private static String canonicalizeHttpRequest(final java.net.URL address, final String accountName,\n-                                                final String method, final String contentType, final long contentLength, final String date,\n-                                                final HttpURLConnection conn) throws UnsupportedEncodingException {\n+  private static String canonicalizeHttpRequest(final URL address,\n+      final String accountName, final String method, final String contentType,\n+      final long contentLength, final String date, final HttpURLConnection conn)\n+      throws UnsupportedEncodingException {\n \n     // The first element should be the Method of the request.\n     // I.e. GET, POST, PUT, or HEAD.\n     final StringBuilder canonicalizedString \u003d new StringBuilder(EXPECTED_BLOB_QUEUE_CANONICALIZED_STRING_LENGTH);\n     canonicalizedString.append(conn.getRequestMethod());\n \n     // The next elements are\n     // If any element is missing it may be empty.\n     appendCanonicalizedElement(canonicalizedString,\n         getHeaderValue(conn, HttpHeaderConfigurations.CONTENT_ENCODING, AbfsHttpConstants.EMPTY_STRING));\n     appendCanonicalizedElement(canonicalizedString,\n         getHeaderValue(conn, HttpHeaderConfigurations.CONTENT_LANGUAGE, AbfsHttpConstants.EMPTY_STRING));\n     appendCanonicalizedElement(canonicalizedString,\n         contentLength \u003c\u003d 0 ? \"\" : String.valueOf(contentLength));\n     appendCanonicalizedElement(canonicalizedString,\n         getHeaderValue(conn, HttpHeaderConfigurations.CONTENT_MD5, AbfsHttpConstants.EMPTY_STRING));\n     appendCanonicalizedElement(canonicalizedString, contentType !\u003d null ? contentType : AbfsHttpConstants.EMPTY_STRING);\n \n     final String dateString \u003d getHeaderValue(conn, HttpHeaderConfigurations.X_MS_DATE, AbfsHttpConstants.EMPTY_STRING);\n     // If x-ms-date header exists, Date should be empty string\n     appendCanonicalizedElement(canonicalizedString, dateString.equals(AbfsHttpConstants.EMPTY_STRING) ? date\n         : \"\");\n \n     appendCanonicalizedElement(canonicalizedString,\n         getHeaderValue(conn, HttpHeaderConfigurations.IF_MODIFIED_SINCE, AbfsHttpConstants.EMPTY_STRING));\n     appendCanonicalizedElement(canonicalizedString,\n         getHeaderValue(conn, HttpHeaderConfigurations.IF_MATCH, AbfsHttpConstants.EMPTY_STRING));\n     appendCanonicalizedElement(canonicalizedString,\n         getHeaderValue(conn, HttpHeaderConfigurations.IF_NONE_MATCH, AbfsHttpConstants.EMPTY_STRING));\n     appendCanonicalizedElement(canonicalizedString,\n         getHeaderValue(conn, HttpHeaderConfigurations.IF_UNMODIFIED_SINCE, AbfsHttpConstants.EMPTY_STRING));\n     appendCanonicalizedElement(canonicalizedString,\n         getHeaderValue(conn, HttpHeaderConfigurations.RANGE, AbfsHttpConstants.EMPTY_STRING));\n \n     addCanonicalizedHeaders(conn, canonicalizedString);\n \n     appendCanonicalizedElement(canonicalizedString, getCanonicalizedResource(address, accountName));\n \n     return canonicalizedString.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static String canonicalizeHttpRequest(final URL address,\n      final String accountName, final String method, final String contentType,\n      final long contentLength, final String date, final HttpURLConnection conn)\n      throws UnsupportedEncodingException {\n\n    // The first element should be the Method of the request.\n    // I.e. GET, POST, PUT, or HEAD.\n    final StringBuilder canonicalizedString \u003d new StringBuilder(EXPECTED_BLOB_QUEUE_CANONICALIZED_STRING_LENGTH);\n    canonicalizedString.append(conn.getRequestMethod());\n\n    // The next elements are\n    // If any element is missing it may be empty.\n    appendCanonicalizedElement(canonicalizedString,\n        getHeaderValue(conn, HttpHeaderConfigurations.CONTENT_ENCODING, AbfsHttpConstants.EMPTY_STRING));\n    appendCanonicalizedElement(canonicalizedString,\n        getHeaderValue(conn, HttpHeaderConfigurations.CONTENT_LANGUAGE, AbfsHttpConstants.EMPTY_STRING));\n    appendCanonicalizedElement(canonicalizedString,\n        contentLength \u003c\u003d 0 ? \"\" : String.valueOf(contentLength));\n    appendCanonicalizedElement(canonicalizedString,\n        getHeaderValue(conn, HttpHeaderConfigurations.CONTENT_MD5, AbfsHttpConstants.EMPTY_STRING));\n    appendCanonicalizedElement(canonicalizedString, contentType !\u003d null ? contentType : AbfsHttpConstants.EMPTY_STRING);\n\n    final String dateString \u003d getHeaderValue(conn, HttpHeaderConfigurations.X_MS_DATE, AbfsHttpConstants.EMPTY_STRING);\n    // If x-ms-date header exists, Date should be empty string\n    appendCanonicalizedElement(canonicalizedString, dateString.equals(AbfsHttpConstants.EMPTY_STRING) ? date\n        : \"\");\n\n    appendCanonicalizedElement(canonicalizedString,\n        getHeaderValue(conn, HttpHeaderConfigurations.IF_MODIFIED_SINCE, AbfsHttpConstants.EMPTY_STRING));\n    appendCanonicalizedElement(canonicalizedString,\n        getHeaderValue(conn, HttpHeaderConfigurations.IF_MATCH, AbfsHttpConstants.EMPTY_STRING));\n    appendCanonicalizedElement(canonicalizedString,\n        getHeaderValue(conn, HttpHeaderConfigurations.IF_NONE_MATCH, AbfsHttpConstants.EMPTY_STRING));\n    appendCanonicalizedElement(canonicalizedString,\n        getHeaderValue(conn, HttpHeaderConfigurations.IF_UNMODIFIED_SINCE, AbfsHttpConstants.EMPTY_STRING));\n    appendCanonicalizedElement(canonicalizedString,\n        getHeaderValue(conn, HttpHeaderConfigurations.RANGE, AbfsHttpConstants.EMPTY_STRING));\n\n    addCanonicalizedHeaders(conn, canonicalizedString);\n\n    appendCanonicalizedElement(canonicalizedString, getCanonicalizedResource(address, accountName));\n\n    return canonicalizedString.toString();\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/SharedKeyCredentials.java",
      "extendedDetails": {
        "oldValue": "[address-java.net.URL(modifiers-final), accountName-String(modifiers-final), method-String(modifiers-final), contentType-String(modifiers-final), contentLength-long(modifiers-final), date-String(modifiers-final), conn-HttpURLConnection(modifiers-final)]",
        "newValue": "[address-URL(modifiers-final), accountName-String(modifiers-final), method-String(modifiers-final), contentType-String(modifiers-final), contentLength-long(modifiers-final), date-String(modifiers-final), conn-HttpURLConnection(modifiers-final)]"
      }
    },
    "f044deedbbfee0812316d587139cb828f27172e9": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15407. HADOOP-15540. Support Windows Azure Storage - Blob file system \"ABFS\" in Hadoop: Core Commit.\n\nContributed by Shane Mainali, Thomas Marquardt, Zichen Sun, Georgi Chalakov, Esfandiar Manii, Amit Singh, Dana Kaban, Da Zhou, Junhua Gu, Saher Ahwal, Saurabh Pant, James Baker, Shaoyu Zhang, Lawrence Chen, Kevin Chen and Steve Loughran\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "f044deedbbfee0812316d587139cb828f27172e9",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,43 @@\n+  private static String canonicalizeHttpRequest(final java.net.URL address, final String accountName,\n+                                                final String method, final String contentType, final long contentLength, final String date,\n+                                                final HttpURLConnection conn) throws UnsupportedEncodingException {\n+\n+    // The first element should be the Method of the request.\n+    // I.e. GET, POST, PUT, or HEAD.\n+    final StringBuilder canonicalizedString \u003d new StringBuilder(EXPECTED_BLOB_QUEUE_CANONICALIZED_STRING_LENGTH);\n+    canonicalizedString.append(conn.getRequestMethod());\n+\n+    // The next elements are\n+    // If any element is missing it may be empty.\n+    appendCanonicalizedElement(canonicalizedString,\n+        getHeaderValue(conn, HttpHeaderConfigurations.CONTENT_ENCODING, AbfsHttpConstants.EMPTY_STRING));\n+    appendCanonicalizedElement(canonicalizedString,\n+        getHeaderValue(conn, HttpHeaderConfigurations.CONTENT_LANGUAGE, AbfsHttpConstants.EMPTY_STRING));\n+    appendCanonicalizedElement(canonicalizedString,\n+        contentLength \u003c\u003d 0 ? \"\" : String.valueOf(contentLength));\n+    appendCanonicalizedElement(canonicalizedString,\n+        getHeaderValue(conn, HttpHeaderConfigurations.CONTENT_MD5, AbfsHttpConstants.EMPTY_STRING));\n+    appendCanonicalizedElement(canonicalizedString, contentType !\u003d null ? contentType : AbfsHttpConstants.EMPTY_STRING);\n+\n+    final String dateString \u003d getHeaderValue(conn, HttpHeaderConfigurations.X_MS_DATE, AbfsHttpConstants.EMPTY_STRING);\n+    // If x-ms-date header exists, Date should be empty string\n+    appendCanonicalizedElement(canonicalizedString, dateString.equals(AbfsHttpConstants.EMPTY_STRING) ? date\n+        : \"\");\n+\n+    appendCanonicalizedElement(canonicalizedString,\n+        getHeaderValue(conn, HttpHeaderConfigurations.IF_MODIFIED_SINCE, AbfsHttpConstants.EMPTY_STRING));\n+    appendCanonicalizedElement(canonicalizedString,\n+        getHeaderValue(conn, HttpHeaderConfigurations.IF_MATCH, AbfsHttpConstants.EMPTY_STRING));\n+    appendCanonicalizedElement(canonicalizedString,\n+        getHeaderValue(conn, HttpHeaderConfigurations.IF_NONE_MATCH, AbfsHttpConstants.EMPTY_STRING));\n+    appendCanonicalizedElement(canonicalizedString,\n+        getHeaderValue(conn, HttpHeaderConfigurations.IF_UNMODIFIED_SINCE, AbfsHttpConstants.EMPTY_STRING));\n+    appendCanonicalizedElement(canonicalizedString,\n+        getHeaderValue(conn, HttpHeaderConfigurations.RANGE, AbfsHttpConstants.EMPTY_STRING));\n+\n+    addCanonicalizedHeaders(conn, canonicalizedString);\n+\n+    appendCanonicalizedElement(canonicalizedString, getCanonicalizedResource(address, accountName));\n+\n+    return canonicalizedString.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static String canonicalizeHttpRequest(final java.net.URL address, final String accountName,\n                                                final String method, final String contentType, final long contentLength, final String date,\n                                                final HttpURLConnection conn) throws UnsupportedEncodingException {\n\n    // The first element should be the Method of the request.\n    // I.e. GET, POST, PUT, or HEAD.\n    final StringBuilder canonicalizedString \u003d new StringBuilder(EXPECTED_BLOB_QUEUE_CANONICALIZED_STRING_LENGTH);\n    canonicalizedString.append(conn.getRequestMethod());\n\n    // The next elements are\n    // If any element is missing it may be empty.\n    appendCanonicalizedElement(canonicalizedString,\n        getHeaderValue(conn, HttpHeaderConfigurations.CONTENT_ENCODING, AbfsHttpConstants.EMPTY_STRING));\n    appendCanonicalizedElement(canonicalizedString,\n        getHeaderValue(conn, HttpHeaderConfigurations.CONTENT_LANGUAGE, AbfsHttpConstants.EMPTY_STRING));\n    appendCanonicalizedElement(canonicalizedString,\n        contentLength \u003c\u003d 0 ? \"\" : String.valueOf(contentLength));\n    appendCanonicalizedElement(canonicalizedString,\n        getHeaderValue(conn, HttpHeaderConfigurations.CONTENT_MD5, AbfsHttpConstants.EMPTY_STRING));\n    appendCanonicalizedElement(canonicalizedString, contentType !\u003d null ? contentType : AbfsHttpConstants.EMPTY_STRING);\n\n    final String dateString \u003d getHeaderValue(conn, HttpHeaderConfigurations.X_MS_DATE, AbfsHttpConstants.EMPTY_STRING);\n    // If x-ms-date header exists, Date should be empty string\n    appendCanonicalizedElement(canonicalizedString, dateString.equals(AbfsHttpConstants.EMPTY_STRING) ? date\n        : \"\");\n\n    appendCanonicalizedElement(canonicalizedString,\n        getHeaderValue(conn, HttpHeaderConfigurations.IF_MODIFIED_SINCE, AbfsHttpConstants.EMPTY_STRING));\n    appendCanonicalizedElement(canonicalizedString,\n        getHeaderValue(conn, HttpHeaderConfigurations.IF_MATCH, AbfsHttpConstants.EMPTY_STRING));\n    appendCanonicalizedElement(canonicalizedString,\n        getHeaderValue(conn, HttpHeaderConfigurations.IF_NONE_MATCH, AbfsHttpConstants.EMPTY_STRING));\n    appendCanonicalizedElement(canonicalizedString,\n        getHeaderValue(conn, HttpHeaderConfigurations.IF_UNMODIFIED_SINCE, AbfsHttpConstants.EMPTY_STRING));\n    appendCanonicalizedElement(canonicalizedString,\n        getHeaderValue(conn, HttpHeaderConfigurations.RANGE, AbfsHttpConstants.EMPTY_STRING));\n\n    addCanonicalizedHeaders(conn, canonicalizedString);\n\n    appendCanonicalizedElement(canonicalizedString, getCanonicalizedResource(address, accountName));\n\n    return canonicalizedString.toString();\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/SharedKeyCredentials.java"
    }
  }
}