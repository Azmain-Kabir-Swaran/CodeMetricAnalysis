{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SharedCacheChecksumFactory.java",
  "functionName": "getChecksum",
  "functionId": "getChecksum___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/sharedcache/SharedCacheChecksumFactory.java",
  "functionStartLine": 65,
  "functionEndLine": 83,
  "numCommitsSeen": 1,
  "timeTaken": 905,
  "changeHistory": [
    "a04143039e7fe310d807f40584633096181cfada"
  ],
  "changeHistoryShort": {
    "a04143039e7fe310d807f40584633096181cfada": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a04143039e7fe310d807f40584633096181cfada": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2236. [YARN-1492] Shared Cache uploader service on the Node Manager. (Chris Trezzo and Sanjin Lee via kasha)\n",
      "commitDate": "12/11/14 9:31 AM",
      "commitName": "a04143039e7fe310d807f40584633096181cfada",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,19 @@\n+  public static SharedCacheChecksum getChecksum(Configuration conf) {\n+    Class\u003c? extends SharedCacheChecksum\u003e clazz \u003d\n+        conf.getClass(YarnConfiguration.SHARED_CACHE_CHECKSUM_ALGO_IMPL,\n+        defaultAlgorithm, SharedCacheChecksum.class);\n+    SharedCacheChecksum checksum \u003d instances.get(clazz);\n+    if (checksum \u003d\u003d null) {\n+      try {\n+        checksum \u003d ReflectionUtils.newInstance(clazz, conf);\n+        SharedCacheChecksum old \u003d instances.putIfAbsent(clazz, checksum);\n+        if (old !\u003d null) {\n+          checksum \u003d old;\n+        }\n+      } catch (Exception e) {\n+        throw new YarnRuntimeException(e);\n+      }\n+    }\n+\n+    return checksum;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static SharedCacheChecksum getChecksum(Configuration conf) {\n    Class\u003c? extends SharedCacheChecksum\u003e clazz \u003d\n        conf.getClass(YarnConfiguration.SHARED_CACHE_CHECKSUM_ALGO_IMPL,\n        defaultAlgorithm, SharedCacheChecksum.class);\n    SharedCacheChecksum checksum \u003d instances.get(clazz);\n    if (checksum \u003d\u003d null) {\n      try {\n        checksum \u003d ReflectionUtils.newInstance(clazz, conf);\n        SharedCacheChecksum old \u003d instances.putIfAbsent(clazz, checksum);\n        if (old !\u003d null) {\n          checksum \u003d old;\n        }\n      } catch (Exception e) {\n        throw new YarnRuntimeException(e);\n      }\n    }\n\n    return checksum;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/sharedcache/SharedCacheChecksumFactory.java"
    }
  }
}