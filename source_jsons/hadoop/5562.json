{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "INodeFile.java",
  "functionName": "cleanSubtree",
  "functionId": "cleanSubtree___reclaimContext-ReclaimContext__snapshot-int(modifiers-final)__priorSnapshotId-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
  "functionStartLine": 739,
  "functionEndLine": 767,
  "numCommitsSeen": 678,
  "timeTaken": 9453,
  "changeHistory": [
    "6ef6594c7ee09b561e42c16ce4e91c0479908ad8",
    "73ff09b79a5cf9932edc21c58f3a730f7379086b",
    "b2c85db86c9a62b0a03ee87547265077f664970a",
    "4536399d47f6c061e149e2504600804a0f1e093d",
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
    "5dae97a584d30cef3e34141edfaca49c4ec57913",
    "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
    "f36f0dde8866e2233dad26b38a8d432d2302a51a",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795",
    "4c87a27ad851ffaa3cc3e2074a9ef7073b5a164a",
    "ce68f410b05a58ad05965f32ad7f5b246b363a75",
    "d46e1608626c64400d2b6c7693a4c035783c55b4"
  ],
  "changeHistoryShort": {
    "6ef6594c7ee09b561e42c16ce4e91c0479908ad8": "Ybodychange",
    "73ff09b79a5cf9932edc21c58f3a730f7379086b": "Ybodychange",
    "b2c85db86c9a62b0a03ee87547265077f664970a": "Ymultichange(Yreturntypechange,Ybodychange)",
    "4536399d47f6c061e149e2504600804a0f1e093d": "Ymultichange(Yparameterchange,Ybodychange)",
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63": "Ymultichange(Yparameterchange,Ybodychange)",
    "5dae97a584d30cef3e34141edfaca49c4ec57913": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "f36f0dde8866e2233dad26b38a8d432d2302a51a": "Ybodychange",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": "Ymultichange(Yparameterchange,Ybodychange)",
    "4c87a27ad851ffaa3cc3e2074a9ef7073b5a164a": "Ybodychange",
    "ce68f410b05a58ad05965f32ad7f5b246b363a75": "Ybodychange",
    "d46e1608626c64400d2b6c7693a4c035783c55b4": "Yparameterchange"
  },
  "changeHistoryDetails": {
    "6ef6594c7ee09b561e42c16ce4e91c0479908ad8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14492. Snapshot memory leak. Contributed by Wei-Chiu Chuang. (#1370)\n\n* HDFS-14492. Snapshot memory leak. Contributed by Wei-Chiu Chuang.\r\n\r\nChange-Id: I9e5e450c07ad70aa1905973896c4f627042dbd37\r\n\r\n* Fix checkstyle\r\n\r\nChange-Id: I16d4bd4f03a971e1ed36cf57d89dc42357ef8fbf\r\n",
      "commitDate": "01/10/19 8:46 AM",
      "commitName": "6ef6594c7ee09b561e42c16ce4e91c0479908ad8",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "14/08/19 9:46 PM",
      "commitNameOld": "0a85af959ce505f0659e5c69d0ca83a5dce0a7c2",
      "commitAuthorOld": "Shashikant Banerjee",
      "daysBetweenCommits": 47.46,
      "commitsBetweenForRepo": 405,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,29 @@\n   public void cleanSubtree(ReclaimContext reclaimContext,\n       final int snapshot, int priorSnapshotId) {\n     FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n     if (sf !\u003d null) {\n       // TODO: avoid calling getStoragePolicyID\n       sf.cleanFile(reclaimContext, this, snapshot, priorSnapshotId,\n           getStoragePolicyID());\n       updateRemovedUnderConstructionFiles(reclaimContext);\n+      if (sf.getDiffs().isEmpty()) {\n+        this.removeFeature(sf);\n+      }\n     } else {\n       if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n         if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n           // this only happens when deleting the current file and it is not\n           // in any snapshot\n           destroyAndCollectBlocks(reclaimContext);\n         } else {\n           FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n           // when deleting the current file and it is in snapshot, we should\n           // clean the 0-sized block if the file is UC\n           if (uc !\u003d null) {\n             uc.cleanZeroSizeBlock(this, reclaimContext.collectedBlocks);\n             updateRemovedUnderConstructionFiles(reclaimContext);\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void cleanSubtree(ReclaimContext reclaimContext,\n      final int snapshot, int priorSnapshotId) {\n    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n    if (sf !\u003d null) {\n      // TODO: avoid calling getStoragePolicyID\n      sf.cleanFile(reclaimContext, this, snapshot, priorSnapshotId,\n          getStoragePolicyID());\n      updateRemovedUnderConstructionFiles(reclaimContext);\n      if (sf.getDiffs().isEmpty()) {\n        this.removeFeature(sf);\n      }\n    } else {\n      if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n        if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n          // this only happens when deleting the current file and it is not\n          // in any snapshot\n          destroyAndCollectBlocks(reclaimContext);\n        } else {\n          FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n          // when deleting the current file and it is in snapshot, we should\n          // clean the 0-sized block if the file is UC\n          if (uc !\u003d null) {\n            uc.cleanZeroSizeBlock(this, reclaimContext.collectedBlocks);\n            updateRemovedUnderConstructionFiles(reclaimContext);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
      "extendedDetails": {}
    },
    "73ff09b79a5cf9932edc21c58f3a730f7379086b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12985. NameNode crashes during restart after an OpenForWrite file present in the Snapshot got deleted.\n",
      "commitDate": "08/01/18 3:34 PM",
      "commitName": "73ff09b79a5cf9932edc21c58f3a730f7379086b",
      "commitAuthor": "Manoj Govindassamy",
      "commitDateOld": "29/12/17 12:21 PM",
      "commitNameOld": "6e3e1b8cde737e4c03b0f5279cab0239e7069a72",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 10.13,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,26 @@\n   public void cleanSubtree(ReclaimContext reclaimContext,\n       final int snapshot, int priorSnapshotId) {\n     FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n     if (sf !\u003d null) {\n       // TODO: avoid calling getStoragePolicyID\n       sf.cleanFile(reclaimContext, this, snapshot, priorSnapshotId,\n           getStoragePolicyID());\n+      updateRemovedUnderConstructionFiles(reclaimContext);\n     } else {\n       if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n         if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n           // this only happens when deleting the current file and it is not\n           // in any snapshot\n           destroyAndCollectBlocks(reclaimContext);\n         } else {\n           FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n           // when deleting the current file and it is in snapshot, we should\n           // clean the 0-sized block if the file is UC\n           if (uc !\u003d null) {\n             uc.cleanZeroSizeBlock(this, reclaimContext.collectedBlocks);\n-            if (reclaimContext.removedUCFiles !\u003d null) {\n-              reclaimContext.removedUCFiles.add(getId());\n-            }\n+            updateRemovedUnderConstructionFiles(reclaimContext);\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void cleanSubtree(ReclaimContext reclaimContext,\n      final int snapshot, int priorSnapshotId) {\n    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n    if (sf !\u003d null) {\n      // TODO: avoid calling getStoragePolicyID\n      sf.cleanFile(reclaimContext, this, snapshot, priorSnapshotId,\n          getStoragePolicyID());\n      updateRemovedUnderConstructionFiles(reclaimContext);\n    } else {\n      if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n        if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n          // this only happens when deleting the current file and it is not\n          // in any snapshot\n          destroyAndCollectBlocks(reclaimContext);\n        } else {\n          FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n          // when deleting the current file and it is in snapshot, we should\n          // clean the 0-sized block if the file is UC\n          if (uc !\u003d null) {\n            uc.cleanZeroSizeBlock(this, reclaimContext.collectedBlocks);\n            updateRemovedUnderConstructionFiles(reclaimContext);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
      "extendedDetails": {}
    },
    "b2c85db86c9a62b0a03ee87547265077f664970a": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7728. Avoid updating quota usage while loading edits. Contributed by Jing Zhao.\n",
      "commitDate": "13/05/15 9:50 PM",
      "commitName": "b2c85db86c9a62b0a03ee87547265077f664970a",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7728. Avoid updating quota usage while loading edits. Contributed by Jing Zhao.\n",
          "commitDate": "13/05/15 9:50 PM",
          "commitName": "b2c85db86c9a62b0a03ee87547265077f664970a",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "12/05/15 6:29 AM",
          "commitNameOld": "6d5da9484185ca9f585195d6da069b9cd5be4044",
          "commitAuthorOld": "yliu",
          "daysBetweenCommits": 1.64,
          "commitsBetweenForRepo": 24,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,27 @@\n-  public QuotaCounts cleanSubtree(\n-      ReclaimContext reclaimContext, final int snapshot, int priorSnapshotId) {\n+  public void cleanSubtree(ReclaimContext reclaimContext,\n+      final int snapshot, int priorSnapshotId) {\n     FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n     if (sf !\u003d null) {\n-      return sf.cleanFile(reclaimContext, this, snapshot, priorSnapshotId);\n-    }\n-    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n-\n-    if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n-      if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n-        // this only happens when deleting the current file and the file is not\n-        // in any snapshot\n-        computeQuotaUsage(reclaimContext.bsps, counts, false);\n-        destroyAndCollectBlocks(reclaimContext);\n-      } else {\n-        FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n-        // when deleting the current file and the file is in snapshot, we should\n-        // clean the 0-sized block if the file is UC\n-        if (uc !\u003d null) {\n-          uc.cleanZeroSizeBlock(this, reclaimContext.collectedBlocks);\n-          if (reclaimContext.removedUCFiles !\u003d null) {\n-            reclaimContext.removedUCFiles.add(getId());\n+      // TODO: avoid calling getStoragePolicyID\n+      sf.cleanFile(reclaimContext, this, snapshot, priorSnapshotId,\n+          getStoragePolicyID());\n+    } else {\n+      if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n+        if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n+          // this only happens when deleting the current file and it is not\n+          // in any snapshot\n+          destroyAndCollectBlocks(reclaimContext);\n+        } else {\n+          FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n+          // when deleting the current file and it is in snapshot, we should\n+          // clean the 0-sized block if the file is UC\n+          if (uc !\u003d null) {\n+            uc.cleanZeroSizeBlock(this, reclaimContext.collectedBlocks);\n+            if (reclaimContext.removedUCFiles !\u003d null) {\n+              reclaimContext.removedUCFiles.add(getId());\n+            }\n           }\n         }\n       }\n     }\n-    return counts;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void cleanSubtree(ReclaimContext reclaimContext,\n      final int snapshot, int priorSnapshotId) {\n    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n    if (sf !\u003d null) {\n      // TODO: avoid calling getStoragePolicyID\n      sf.cleanFile(reclaimContext, this, snapshot, priorSnapshotId,\n          getStoragePolicyID());\n    } else {\n      if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n        if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n          // this only happens when deleting the current file and it is not\n          // in any snapshot\n          destroyAndCollectBlocks(reclaimContext);\n        } else {\n          FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n          // when deleting the current file and it is in snapshot, we should\n          // clean the 0-sized block if the file is UC\n          if (uc !\u003d null) {\n            uc.cleanZeroSizeBlock(this, reclaimContext.collectedBlocks);\n            if (reclaimContext.removedUCFiles !\u003d null) {\n              reclaimContext.removedUCFiles.add(getId());\n            }\n          }\n        }\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
          "extendedDetails": {
            "oldValue": "QuotaCounts",
            "newValue": "void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7728. Avoid updating quota usage while loading edits. Contributed by Jing Zhao.\n",
          "commitDate": "13/05/15 9:50 PM",
          "commitName": "b2c85db86c9a62b0a03ee87547265077f664970a",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "12/05/15 6:29 AM",
          "commitNameOld": "6d5da9484185ca9f585195d6da069b9cd5be4044",
          "commitAuthorOld": "yliu",
          "daysBetweenCommits": 1.64,
          "commitsBetweenForRepo": 24,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,27 @@\n-  public QuotaCounts cleanSubtree(\n-      ReclaimContext reclaimContext, final int snapshot, int priorSnapshotId) {\n+  public void cleanSubtree(ReclaimContext reclaimContext,\n+      final int snapshot, int priorSnapshotId) {\n     FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n     if (sf !\u003d null) {\n-      return sf.cleanFile(reclaimContext, this, snapshot, priorSnapshotId);\n-    }\n-    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n-\n-    if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n-      if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n-        // this only happens when deleting the current file and the file is not\n-        // in any snapshot\n-        computeQuotaUsage(reclaimContext.bsps, counts, false);\n-        destroyAndCollectBlocks(reclaimContext);\n-      } else {\n-        FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n-        // when deleting the current file and the file is in snapshot, we should\n-        // clean the 0-sized block if the file is UC\n-        if (uc !\u003d null) {\n-          uc.cleanZeroSizeBlock(this, reclaimContext.collectedBlocks);\n-          if (reclaimContext.removedUCFiles !\u003d null) {\n-            reclaimContext.removedUCFiles.add(getId());\n+      // TODO: avoid calling getStoragePolicyID\n+      sf.cleanFile(reclaimContext, this, snapshot, priorSnapshotId,\n+          getStoragePolicyID());\n+    } else {\n+      if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n+        if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n+          // this only happens when deleting the current file and it is not\n+          // in any snapshot\n+          destroyAndCollectBlocks(reclaimContext);\n+        } else {\n+          FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n+          // when deleting the current file and it is in snapshot, we should\n+          // clean the 0-sized block if the file is UC\n+          if (uc !\u003d null) {\n+            uc.cleanZeroSizeBlock(this, reclaimContext.collectedBlocks);\n+            if (reclaimContext.removedUCFiles !\u003d null) {\n+              reclaimContext.removedUCFiles.add(getId());\n+            }\n           }\n         }\n       }\n     }\n-    return counts;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void cleanSubtree(ReclaimContext reclaimContext,\n      final int snapshot, int priorSnapshotId) {\n    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n    if (sf !\u003d null) {\n      // TODO: avoid calling getStoragePolicyID\n      sf.cleanFile(reclaimContext, this, snapshot, priorSnapshotId,\n          getStoragePolicyID());\n    } else {\n      if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n        if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n          // this only happens when deleting the current file and it is not\n          // in any snapshot\n          destroyAndCollectBlocks(reclaimContext);\n        } else {\n          FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n          // when deleting the current file and it is in snapshot, we should\n          // clean the 0-sized block if the file is UC\n          if (uc !\u003d null) {\n            uc.cleanZeroSizeBlock(this, reclaimContext.collectedBlocks);\n            if (reclaimContext.removedUCFiles !\u003d null) {\n              reclaimContext.removedUCFiles.add(getId());\n            }\n          }\n        }\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
          "extendedDetails": {}
        }
      ]
    },
    "4536399d47f6c061e149e2504600804a0f1e093d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8357. Consolidate parameters of INode.CleanSubtree() into a parameter objects. Contributed by Li Lu.\n",
      "commitDate": "09/05/15 10:51 PM",
      "commitName": "4536399d47f6c061e149e2504600804a0f1e093d",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8357. Consolidate parameters of INode.CleanSubtree() into a parameter objects. Contributed by Li Lu.\n",
          "commitDate": "09/05/15 10:51 PM",
          "commitName": "4536399d47f6c061e149e2504600804a0f1e093d",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/05/15 11:09 PM",
          "commitNameOld": "02a4a22b9c0e22c2e7dd6ec85edd5c5a167fe19f",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.99,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,28 @@\n   public QuotaCounts cleanSubtree(\n-      BlockStoragePolicySuite bsps, final int snapshot, int priorSnapshotId,\n-      final BlocksMapUpdateInfo collectedBlocks,\n-      final List\u003cINode\u003e removedINodes, List\u003cLong\u003e removedUCFiles) {\n+      ReclaimContext reclaimContext, final int snapshot, int priorSnapshotId) {\n     FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n     if (sf !\u003d null) {\n-      return sf.cleanFile(bsps, this, snapshot, priorSnapshotId, collectedBlocks,\n-          removedINodes);\n+      return sf.cleanFile(reclaimContext, this, snapshot, priorSnapshotId);\n     }\n     QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n \n     if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n       if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n         // this only happens when deleting the current file and the file is not\n         // in any snapshot\n-        computeQuotaUsage(bsps, counts, false);\n-        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes,\n-                                removedUCFiles);\n+        computeQuotaUsage(reclaimContext.bsps, counts, false);\n+        destroyAndCollectBlocks(reclaimContext);\n       } else {\n         FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n         // when deleting the current file and the file is in snapshot, we should\n         // clean the 0-sized block if the file is UC\n         if (uc !\u003d null) {\n-          uc.cleanZeroSizeBlock(this, collectedBlocks);\n-          if (removedUCFiles !\u003d null) {\n-            removedUCFiles.add(getId());\n+          uc.cleanZeroSizeBlock(this, reclaimContext.collectedBlocks);\n+          if (reclaimContext.removedUCFiles !\u003d null) {\n+            reclaimContext.removedUCFiles.add(getId());\n           }\n         }\n       }\n     }\n     return counts;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public QuotaCounts cleanSubtree(\n      ReclaimContext reclaimContext, final int snapshot, int priorSnapshotId) {\n    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n    if (sf !\u003d null) {\n      return sf.cleanFile(reclaimContext, this, snapshot, priorSnapshotId);\n    }\n    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n\n    if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n      if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n        // this only happens when deleting the current file and the file is not\n        // in any snapshot\n        computeQuotaUsage(reclaimContext.bsps, counts, false);\n        destroyAndCollectBlocks(reclaimContext);\n      } else {\n        FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n        // when deleting the current file and the file is in snapshot, we should\n        // clean the 0-sized block if the file is UC\n        if (uc !\u003d null) {\n          uc.cleanZeroSizeBlock(this, reclaimContext.collectedBlocks);\n          if (reclaimContext.removedUCFiles !\u003d null) {\n            reclaimContext.removedUCFiles.add(getId());\n          }\n        }\n      }\n    }\n    return counts;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
          "extendedDetails": {
            "oldValue": "[bsps-BlockStoragePolicySuite, snapshot-int(modifiers-final), priorSnapshotId-int, collectedBlocks-BlocksMapUpdateInfo(modifiers-final), removedINodes-List\u003cINode\u003e(modifiers-final), removedUCFiles-List\u003cLong\u003e]",
            "newValue": "[reclaimContext-ReclaimContext, snapshot-int(modifiers-final), priorSnapshotId-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8357. Consolidate parameters of INode.CleanSubtree() into a parameter objects. Contributed by Li Lu.\n",
          "commitDate": "09/05/15 10:51 PM",
          "commitName": "4536399d47f6c061e149e2504600804a0f1e093d",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/05/15 11:09 PM",
          "commitNameOld": "02a4a22b9c0e22c2e7dd6ec85edd5c5a167fe19f",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.99,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,28 @@\n   public QuotaCounts cleanSubtree(\n-      BlockStoragePolicySuite bsps, final int snapshot, int priorSnapshotId,\n-      final BlocksMapUpdateInfo collectedBlocks,\n-      final List\u003cINode\u003e removedINodes, List\u003cLong\u003e removedUCFiles) {\n+      ReclaimContext reclaimContext, final int snapshot, int priorSnapshotId) {\n     FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n     if (sf !\u003d null) {\n-      return sf.cleanFile(bsps, this, snapshot, priorSnapshotId, collectedBlocks,\n-          removedINodes);\n+      return sf.cleanFile(reclaimContext, this, snapshot, priorSnapshotId);\n     }\n     QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n \n     if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n       if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n         // this only happens when deleting the current file and the file is not\n         // in any snapshot\n-        computeQuotaUsage(bsps, counts, false);\n-        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes,\n-                                removedUCFiles);\n+        computeQuotaUsage(reclaimContext.bsps, counts, false);\n+        destroyAndCollectBlocks(reclaimContext);\n       } else {\n         FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n         // when deleting the current file and the file is in snapshot, we should\n         // clean the 0-sized block if the file is UC\n         if (uc !\u003d null) {\n-          uc.cleanZeroSizeBlock(this, collectedBlocks);\n-          if (removedUCFiles !\u003d null) {\n-            removedUCFiles.add(getId());\n+          uc.cleanZeroSizeBlock(this, reclaimContext.collectedBlocks);\n+          if (reclaimContext.removedUCFiles !\u003d null) {\n+            reclaimContext.removedUCFiles.add(getId());\n           }\n         }\n       }\n     }\n     return counts;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public QuotaCounts cleanSubtree(\n      ReclaimContext reclaimContext, final int snapshot, int priorSnapshotId) {\n    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n    if (sf !\u003d null) {\n      return sf.cleanFile(reclaimContext, this, snapshot, priorSnapshotId);\n    }\n    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n\n    if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n      if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n        // this only happens when deleting the current file and the file is not\n        // in any snapshot\n        computeQuotaUsage(reclaimContext.bsps, counts, false);\n        destroyAndCollectBlocks(reclaimContext);\n      } else {\n        FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n        // when deleting the current file and the file is in snapshot, we should\n        // clean the 0-sized block if the file is UC\n        if (uc !\u003d null) {\n          uc.cleanZeroSizeBlock(this, reclaimContext.collectedBlocks);\n          if (reclaimContext.removedUCFiles !\u003d null) {\n            reclaimContext.removedUCFiles.add(getId());\n          }\n        }\n      }\n    }\n    return counts;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
          "extendedDetails": {}
        }
      ]
    },
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6757. Simplify lease manager with INodeID. Contributed by Haohui Mai.\n",
      "commitDate": "08/05/15 11:04 PM",
      "commitName": "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6757. Simplify lease manager with INodeID. Contributed by Haohui Mai.\n",
          "commitDate": "08/05/15 11:04 PM",
          "commitName": "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "02/05/15 10:03 AM",
          "commitNameOld": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 6.54,
          "commitsBetweenForRepo": 129,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,32 @@\n-  public QuotaCounts cleanSubtree(BlockStoragePolicySuite bsps, final int snapshot,\n-                                  int priorSnapshotId,\n+  public QuotaCounts cleanSubtree(\n+      BlockStoragePolicySuite bsps, final int snapshot, int priorSnapshotId,\n       final BlocksMapUpdateInfo collectedBlocks,\n-      final List\u003cINode\u003e removedINodes) {\n+      final List\u003cINode\u003e removedINodes, List\u003cLong\u003e removedUCFiles) {\n     FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n     if (sf !\u003d null) {\n       return sf.cleanFile(bsps, this, snapshot, priorSnapshotId, collectedBlocks,\n           removedINodes);\n     }\n     QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n+\n     if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n       if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n         // this only happens when deleting the current file and the file is not\n         // in any snapshot\n         computeQuotaUsage(bsps, counts, false);\n-        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes);\n+        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes,\n+                                removedUCFiles);\n       } else {\n+        FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n         // when deleting the current file and the file is in snapshot, we should\n         // clean the 0-sized block if the file is UC\n-        FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n         if (uc !\u003d null) {\n           uc.cleanZeroSizeBlock(this, collectedBlocks);\n+          if (removedUCFiles !\u003d null) {\n+            removedUCFiles.add(getId());\n+          }\n         }\n       }\n     }\n     return counts;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public QuotaCounts cleanSubtree(\n      BlockStoragePolicySuite bsps, final int snapshot, int priorSnapshotId,\n      final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes, List\u003cLong\u003e removedUCFiles) {\n    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n    if (sf !\u003d null) {\n      return sf.cleanFile(bsps, this, snapshot, priorSnapshotId, collectedBlocks,\n          removedINodes);\n    }\n    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n\n    if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n      if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n        // this only happens when deleting the current file and the file is not\n        // in any snapshot\n        computeQuotaUsage(bsps, counts, false);\n        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes,\n                                removedUCFiles);\n      } else {\n        FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n        // when deleting the current file and the file is in snapshot, we should\n        // clean the 0-sized block if the file is UC\n        if (uc !\u003d null) {\n          uc.cleanZeroSizeBlock(this, collectedBlocks);\n          if (removedUCFiles !\u003d null) {\n            removedUCFiles.add(getId());\n          }\n        }\n      }\n    }\n    return counts;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
          "extendedDetails": {
            "oldValue": "[bsps-BlockStoragePolicySuite, snapshot-int(modifiers-final), priorSnapshotId-int, collectedBlocks-BlocksMapUpdateInfo(modifiers-final), removedINodes-List\u003cINode\u003e(modifiers-final)]",
            "newValue": "[bsps-BlockStoragePolicySuite, snapshot-int(modifiers-final), priorSnapshotId-int, collectedBlocks-BlocksMapUpdateInfo(modifiers-final), removedINodes-List\u003cINode\u003e(modifiers-final), removedUCFiles-List\u003cLong\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6757. Simplify lease manager with INodeID. Contributed by Haohui Mai.\n",
          "commitDate": "08/05/15 11:04 PM",
          "commitName": "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "02/05/15 10:03 AM",
          "commitNameOld": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 6.54,
          "commitsBetweenForRepo": 129,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,32 @@\n-  public QuotaCounts cleanSubtree(BlockStoragePolicySuite bsps, final int snapshot,\n-                                  int priorSnapshotId,\n+  public QuotaCounts cleanSubtree(\n+      BlockStoragePolicySuite bsps, final int snapshot, int priorSnapshotId,\n       final BlocksMapUpdateInfo collectedBlocks,\n-      final List\u003cINode\u003e removedINodes) {\n+      final List\u003cINode\u003e removedINodes, List\u003cLong\u003e removedUCFiles) {\n     FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n     if (sf !\u003d null) {\n       return sf.cleanFile(bsps, this, snapshot, priorSnapshotId, collectedBlocks,\n           removedINodes);\n     }\n     QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n+\n     if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n       if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n         // this only happens when deleting the current file and the file is not\n         // in any snapshot\n         computeQuotaUsage(bsps, counts, false);\n-        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes);\n+        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes,\n+                                removedUCFiles);\n       } else {\n+        FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n         // when deleting the current file and the file is in snapshot, we should\n         // clean the 0-sized block if the file is UC\n-        FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n         if (uc !\u003d null) {\n           uc.cleanZeroSizeBlock(this, collectedBlocks);\n+          if (removedUCFiles !\u003d null) {\n+            removedUCFiles.add(getId());\n+          }\n         }\n       }\n     }\n     return counts;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public QuotaCounts cleanSubtree(\n      BlockStoragePolicySuite bsps, final int snapshot, int priorSnapshotId,\n      final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes, List\u003cLong\u003e removedUCFiles) {\n    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n    if (sf !\u003d null) {\n      return sf.cleanFile(bsps, this, snapshot, priorSnapshotId, collectedBlocks,\n          removedINodes);\n    }\n    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n\n    if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n      if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n        // this only happens when deleting the current file and the file is not\n        // in any snapshot\n        computeQuotaUsage(bsps, counts, false);\n        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes,\n                                removedUCFiles);\n      } else {\n        FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n        // when deleting the current file and the file is in snapshot, we should\n        // clean the 0-sized block if the file is UC\n        if (uc !\u003d null) {\n          uc.cleanZeroSizeBlock(this, collectedBlocks);\n          if (removedUCFiles !\u003d null) {\n            removedUCFiles.add(getId());\n          }\n        }\n      }\n    }\n    return counts;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
          "extendedDetails": {}
        }
      ]
    },
    "5dae97a584d30cef3e34141edfaca49c4ec57913": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
      "commitDate": "11/02/15 10:41 AM",
      "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/02/15 11:51 AM",
          "commitNameOld": "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 2.95,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,27 @@\n-  public Quota.Counts cleanSubtree(final int snapshot, int priorSnapshotId,\n+  public QuotaCounts cleanSubtree(BlockStoragePolicySuite bsps, final int snapshot,\n+                                  int priorSnapshotId,\n       final BlocksMapUpdateInfo collectedBlocks,\n       final List\u003cINode\u003e removedINodes) {\n     FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n     if (sf !\u003d null) {\n-      return sf.cleanFile(this, snapshot, priorSnapshotId, collectedBlocks,\n+      return sf.cleanFile(bsps, this, snapshot, priorSnapshotId, collectedBlocks,\n           removedINodes);\n     }\n-    Quota.Counts counts \u003d Quota.Counts.newInstance();\n+    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n     if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n       if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n         // this only happens when deleting the current file and the file is not\n         // in any snapshot\n-        computeQuotaUsage(counts, false);\n-        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n+        computeQuotaUsage(bsps, counts, false);\n+        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes);\n       } else {\n         // when deleting the current file and the file is in snapshot, we should\n         // clean the 0-sized block if the file is UC\n         FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n         if (uc !\u003d null) {\n           uc.cleanZeroSizeBlock(this, collectedBlocks);\n         }\n       }\n     }\n     return counts;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public QuotaCounts cleanSubtree(BlockStoragePolicySuite bsps, final int snapshot,\n                                  int priorSnapshotId,\n      final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) {\n    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n    if (sf !\u003d null) {\n      return sf.cleanFile(bsps, this, snapshot, priorSnapshotId, collectedBlocks,\n          removedINodes);\n    }\n    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n    if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n      if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n        // this only happens when deleting the current file and the file is not\n        // in any snapshot\n        computeQuotaUsage(bsps, counts, false);\n        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes);\n      } else {\n        // when deleting the current file and the file is in snapshot, we should\n        // clean the 0-sized block if the file is UC\n        FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n        if (uc !\u003d null) {\n          uc.cleanZeroSizeBlock(this, collectedBlocks);\n        }\n      }\n    }\n    return counts;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
          "extendedDetails": {
            "oldValue": "[snapshot-int(modifiers-final), priorSnapshotId-int, collectedBlocks-BlocksMapUpdateInfo(modifiers-final), removedINodes-List\u003cINode\u003e(modifiers-final)]",
            "newValue": "[bsps-BlockStoragePolicySuite, snapshot-int(modifiers-final), priorSnapshotId-int, collectedBlocks-BlocksMapUpdateInfo(modifiers-final), removedINodes-List\u003cINode\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/02/15 11:51 AM",
          "commitNameOld": "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 2.95,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,27 @@\n-  public Quota.Counts cleanSubtree(final int snapshot, int priorSnapshotId,\n+  public QuotaCounts cleanSubtree(BlockStoragePolicySuite bsps, final int snapshot,\n+                                  int priorSnapshotId,\n       final BlocksMapUpdateInfo collectedBlocks,\n       final List\u003cINode\u003e removedINodes) {\n     FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n     if (sf !\u003d null) {\n-      return sf.cleanFile(this, snapshot, priorSnapshotId, collectedBlocks,\n+      return sf.cleanFile(bsps, this, snapshot, priorSnapshotId, collectedBlocks,\n           removedINodes);\n     }\n-    Quota.Counts counts \u003d Quota.Counts.newInstance();\n+    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n     if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n       if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n         // this only happens when deleting the current file and the file is not\n         // in any snapshot\n-        computeQuotaUsage(counts, false);\n-        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n+        computeQuotaUsage(bsps, counts, false);\n+        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes);\n       } else {\n         // when deleting the current file and the file is in snapshot, we should\n         // clean the 0-sized block if the file is UC\n         FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n         if (uc !\u003d null) {\n           uc.cleanZeroSizeBlock(this, collectedBlocks);\n         }\n       }\n     }\n     return counts;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public QuotaCounts cleanSubtree(BlockStoragePolicySuite bsps, final int snapshot,\n                                  int priorSnapshotId,\n      final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) {\n    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n    if (sf !\u003d null) {\n      return sf.cleanFile(bsps, this, snapshot, priorSnapshotId, collectedBlocks,\n          removedINodes);\n    }\n    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n    if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n      if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n        // this only happens when deleting the current file and the file is not\n        // in any snapshot\n        computeQuotaUsage(bsps, counts, false);\n        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes);\n      } else {\n        // when deleting the current file and the file is in snapshot, we should\n        // clean the 0-sized block if the file is UC\n        FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n        if (uc !\u003d null) {\n          uc.cleanZeroSizeBlock(this, collectedBlocks);\n        }\n      }\n    }\n    return counts;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
          "extendedDetails": {
            "oldValue": "Quota.Counts",
            "newValue": "QuotaCounts"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/02/15 11:51 AM",
          "commitNameOld": "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 2.95,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,27 @@\n-  public Quota.Counts cleanSubtree(final int snapshot, int priorSnapshotId,\n+  public QuotaCounts cleanSubtree(BlockStoragePolicySuite bsps, final int snapshot,\n+                                  int priorSnapshotId,\n       final BlocksMapUpdateInfo collectedBlocks,\n       final List\u003cINode\u003e removedINodes) {\n     FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n     if (sf !\u003d null) {\n-      return sf.cleanFile(this, snapshot, priorSnapshotId, collectedBlocks,\n+      return sf.cleanFile(bsps, this, snapshot, priorSnapshotId, collectedBlocks,\n           removedINodes);\n     }\n-    Quota.Counts counts \u003d Quota.Counts.newInstance();\n+    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n     if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n       if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n         // this only happens when deleting the current file and the file is not\n         // in any snapshot\n-        computeQuotaUsage(counts, false);\n-        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n+        computeQuotaUsage(bsps, counts, false);\n+        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes);\n       } else {\n         // when deleting the current file and the file is in snapshot, we should\n         // clean the 0-sized block if the file is UC\n         FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n         if (uc !\u003d null) {\n           uc.cleanZeroSizeBlock(this, collectedBlocks);\n         }\n       }\n     }\n     return counts;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public QuotaCounts cleanSubtree(BlockStoragePolicySuite bsps, final int snapshot,\n                                  int priorSnapshotId,\n      final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) {\n    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n    if (sf !\u003d null) {\n      return sf.cleanFile(bsps, this, snapshot, priorSnapshotId, collectedBlocks,\n          removedINodes);\n    }\n    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n    if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n      if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n        // this only happens when deleting the current file and the file is not\n        // in any snapshot\n        computeQuotaUsage(bsps, counts, false);\n        destroyAndCollectBlocks(bsps, collectedBlocks, removedINodes);\n      } else {\n        // when deleting the current file and the file is in snapshot, we should\n        // clean the 0-sized block if the file is UC\n        FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n        if (uc !\u003d null) {\n          uc.cleanZeroSizeBlock(this, collectedBlocks);\n        }\n      }\n    }\n    return counts;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
          "extendedDetails": {}
        }
      ]
    },
    "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-6651. Deletion failure can leak inodes permanently. Contributed by Jing Zhao.\n",
      "commitDate": "02/02/15 4:32 PM",
      "commitName": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6651. Deletion failure can leak inodes permanently. Contributed by Jing Zhao.\n",
          "commitDate": "02/02/15 4:32 PM",
          "commitName": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "27/01/15 12:58 PM",
          "commitNameOld": "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 6.15,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,26 @@\n   public Quota.Counts cleanSubtree(final int snapshot, int priorSnapshotId,\n       final BlocksMapUpdateInfo collectedBlocks,\n-      final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n-      throws QuotaExceededException {\n+      final List\u003cINode\u003e removedINodes) {\n     FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n     if (sf !\u003d null) {\n       return sf.cleanFile(this, snapshot, priorSnapshotId, collectedBlocks,\n-          removedINodes, countDiffChange);\n+          removedINodes);\n     }\n     Quota.Counts counts \u003d Quota.Counts.newInstance();\n     if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n       if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n         // this only happens when deleting the current file and the file is not\n         // in any snapshot\n         computeQuotaUsage(counts, false);\n         destroyAndCollectBlocks(collectedBlocks, removedINodes);\n       } else {\n         // when deleting the current file and the file is in snapshot, we should\n         // clean the 0-sized block if the file is UC\n         FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n         if (uc !\u003d null) {\n           uc.cleanZeroSizeBlock(this, collectedBlocks);\n         }\n       }\n     }\n     return counts;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Quota.Counts cleanSubtree(final int snapshot, int priorSnapshotId,\n      final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) {\n    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n    if (sf !\u003d null) {\n      return sf.cleanFile(this, snapshot, priorSnapshotId, collectedBlocks,\n          removedINodes);\n    }\n    Quota.Counts counts \u003d Quota.Counts.newInstance();\n    if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n      if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n        // this only happens when deleting the current file and the file is not\n        // in any snapshot\n        computeQuotaUsage(counts, false);\n        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n      } else {\n        // when deleting the current file and the file is in snapshot, we should\n        // clean the 0-sized block if the file is UC\n        FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n        if (uc !\u003d null) {\n          uc.cleanZeroSizeBlock(this, collectedBlocks);\n        }\n      }\n    }\n    return counts;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
          "extendedDetails": {
            "oldValue": "[snapshot-int(modifiers-final), priorSnapshotId-int, collectedBlocks-BlocksMapUpdateInfo(modifiers-final), removedINodes-List\u003cINode\u003e(modifiers-final), countDiffChange-boolean(modifiers-final)]",
            "newValue": "[snapshot-int(modifiers-final), priorSnapshotId-int, collectedBlocks-BlocksMapUpdateInfo(modifiers-final), removedINodes-List\u003cINode\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-6651. Deletion failure can leak inodes permanently. Contributed by Jing Zhao.\n",
          "commitDate": "02/02/15 4:32 PM",
          "commitName": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "27/01/15 12:58 PM",
          "commitNameOld": "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 6.15,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,26 @@\n   public Quota.Counts cleanSubtree(final int snapshot, int priorSnapshotId,\n       final BlocksMapUpdateInfo collectedBlocks,\n-      final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n-      throws QuotaExceededException {\n+      final List\u003cINode\u003e removedINodes) {\n     FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n     if (sf !\u003d null) {\n       return sf.cleanFile(this, snapshot, priorSnapshotId, collectedBlocks,\n-          removedINodes, countDiffChange);\n+          removedINodes);\n     }\n     Quota.Counts counts \u003d Quota.Counts.newInstance();\n     if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n       if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n         // this only happens when deleting the current file and the file is not\n         // in any snapshot\n         computeQuotaUsage(counts, false);\n         destroyAndCollectBlocks(collectedBlocks, removedINodes);\n       } else {\n         // when deleting the current file and the file is in snapshot, we should\n         // clean the 0-sized block if the file is UC\n         FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n         if (uc !\u003d null) {\n           uc.cleanZeroSizeBlock(this, collectedBlocks);\n         }\n       }\n     }\n     return counts;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Quota.Counts cleanSubtree(final int snapshot, int priorSnapshotId,\n      final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) {\n    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n    if (sf !\u003d null) {\n      return sf.cleanFile(this, snapshot, priorSnapshotId, collectedBlocks,\n          removedINodes);\n    }\n    Quota.Counts counts \u003d Quota.Counts.newInstance();\n    if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n      if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n        // this only happens when deleting the current file and the file is not\n        // in any snapshot\n        computeQuotaUsage(counts, false);\n        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n      } else {\n        // when deleting the current file and the file is in snapshot, we should\n        // clean the 0-sized block if the file is UC\n        FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n        if (uc !\u003d null) {\n          uc.cleanZeroSizeBlock(this, collectedBlocks);\n        }\n      }\n    }\n    return counts;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
          "extendedDetails": {
            "oldValue": "[QuotaExceededException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6651. Deletion failure can leak inodes permanently. Contributed by Jing Zhao.\n",
          "commitDate": "02/02/15 4:32 PM",
          "commitName": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "27/01/15 12:58 PM",
          "commitNameOld": "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 6.15,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,26 @@\n   public Quota.Counts cleanSubtree(final int snapshot, int priorSnapshotId,\n       final BlocksMapUpdateInfo collectedBlocks,\n-      final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n-      throws QuotaExceededException {\n+      final List\u003cINode\u003e removedINodes) {\n     FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n     if (sf !\u003d null) {\n       return sf.cleanFile(this, snapshot, priorSnapshotId, collectedBlocks,\n-          removedINodes, countDiffChange);\n+          removedINodes);\n     }\n     Quota.Counts counts \u003d Quota.Counts.newInstance();\n     if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n       if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n         // this only happens when deleting the current file and the file is not\n         // in any snapshot\n         computeQuotaUsage(counts, false);\n         destroyAndCollectBlocks(collectedBlocks, removedINodes);\n       } else {\n         // when deleting the current file and the file is in snapshot, we should\n         // clean the 0-sized block if the file is UC\n         FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n         if (uc !\u003d null) {\n           uc.cleanZeroSizeBlock(this, collectedBlocks);\n         }\n       }\n     }\n     return counts;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Quota.Counts cleanSubtree(final int snapshot, int priorSnapshotId,\n      final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) {\n    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n    if (sf !\u003d null) {\n      return sf.cleanFile(this, snapshot, priorSnapshotId, collectedBlocks,\n          removedINodes);\n    }\n    Quota.Counts counts \u003d Quota.Counts.newInstance();\n    if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n      if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n        // this only happens when deleting the current file and the file is not\n        // in any snapshot\n        computeQuotaUsage(counts, false);\n        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n      } else {\n        // when deleting the current file and the file is in snapshot, we should\n        // clean the 0-sized block if the file is UC\n        FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n        if (uc !\u003d null) {\n          uc.cleanZeroSizeBlock(this, collectedBlocks);\n        }\n      }\n    }\n    return counts;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
          "extendedDetails": {}
        }
      ]
    },
    "f36f0dde8866e2233dad26b38a8d432d2302a51a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6276. Remove unnecessary conditions and null check. Contributed by Suresh Srinivas\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1589586 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/04/14 10:05 PM",
      "commitName": "f36f0dde8866e2233dad26b38a8d432d2302a51a",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "09/02/14 11:45 AM",
      "commitNameOld": "2ed075e1bb085a2897fbefda53b1c1db54c81d92",
      "commitAuthorOld": "",
      "daysBetweenCommits": 73.39,
      "commitsBetweenForRepo": 595,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,27 @@\n   public Quota.Counts cleanSubtree(final int snapshot, int priorSnapshotId,\n       final BlocksMapUpdateInfo collectedBlocks,\n       final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n       throws QuotaExceededException {\n     FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n     if (sf !\u003d null) {\n       return sf.cleanFile(this, snapshot, priorSnapshotId, collectedBlocks,\n           removedINodes, countDiffChange);\n     }\n     Quota.Counts counts \u003d Quota.Counts.newInstance();\n-    if (snapshot \u003d\u003d CURRENT_STATE_ID \u0026\u0026 priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n-      // this only happens when deleting the current file and the file is not\n-      // in any snapshot\n-      computeQuotaUsage(counts, false);\n-      destroyAndCollectBlocks(collectedBlocks, removedINodes);\n-    } else if (snapshot \u003d\u003d CURRENT_STATE_ID \u0026\u0026 priorSnapshotId !\u003d NO_SNAPSHOT_ID) {\n-      // when deleting the current file and the file is in snapshot, we should\n-      // clean the 0-sized block if the file is UC\n-      FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n-      if (uc !\u003d null) {\n-        uc.cleanZeroSizeBlock(this, collectedBlocks);\n+    if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n+      if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n+        // this only happens when deleting the current file and the file is not\n+        // in any snapshot\n+        computeQuotaUsage(counts, false);\n+        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n+      } else {\n+        // when deleting the current file and the file is in snapshot, we should\n+        // clean the 0-sized block if the file is UC\n+        FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n+        if (uc !\u003d null) {\n+          uc.cleanZeroSizeBlock(this, collectedBlocks);\n+        }\n       }\n     }\n     return counts;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Quota.Counts cleanSubtree(final int snapshot, int priorSnapshotId,\n      final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n      throws QuotaExceededException {\n    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n    if (sf !\u003d null) {\n      return sf.cleanFile(this, snapshot, priorSnapshotId, collectedBlocks,\n          removedINodes, countDiffChange);\n    }\n    Quota.Counts counts \u003d Quota.Counts.newInstance();\n    if (snapshot \u003d\u003d CURRENT_STATE_ID) {\n      if (priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n        // this only happens when deleting the current file and the file is not\n        // in any snapshot\n        computeQuotaUsage(counts, false);\n        destroyAndCollectBlocks(collectedBlocks, removedINodes);\n      } else {\n        // when deleting the current file and the file is in snapshot, we should\n        // clean the 0-sized block if the file is UC\n        FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n        if (uc !\u003d null) {\n          uc.cleanZeroSizeBlock(this, collectedBlocks);\n        }\n      }\n    }\n    return counts;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
      "extendedDetails": {}
    },
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/01/14 12:52 PM",
      "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/01/14 12:52 PM",
          "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "14/12/13 2:13 AM",
          "commitNameOld": "44a6560b5da3f79d2299579a36e7a2a60a91f823",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 24.44,
          "commitsBetweenForRepo": 98,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-  public Quota.Counts cleanSubtree(final Snapshot snapshot, Snapshot prior,\n+  public Quota.Counts cleanSubtree(final int snapshot, int priorSnapshotId,\n       final BlocksMapUpdateInfo collectedBlocks,\n       final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n       throws QuotaExceededException {\n     FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n     if (sf !\u003d null) {\n-      return sf.cleanFile(this, snapshot, prior, collectedBlocks,\n+      return sf.cleanFile(this, snapshot, priorSnapshotId, collectedBlocks,\n           removedINodes, countDiffChange);\n     }\n     Quota.Counts counts \u003d Quota.Counts.newInstance();\n-    if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {\n+    if (snapshot \u003d\u003d CURRENT_STATE_ID \u0026\u0026 priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n       // this only happens when deleting the current file and the file is not\n       // in any snapshot\n       computeQuotaUsage(counts, false);\n       destroyAndCollectBlocks(collectedBlocks, removedINodes);\n-    } else if (snapshot \u003d\u003d null \u0026\u0026 prior !\u003d null) {\n+    } else if (snapshot \u003d\u003d CURRENT_STATE_ID \u0026\u0026 priorSnapshotId !\u003d NO_SNAPSHOT_ID) {\n       // when deleting the current file and the file is in snapshot, we should\n       // clean the 0-sized block if the file is UC\n       FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n       if (uc !\u003d null) {\n         uc.cleanZeroSizeBlock(this, collectedBlocks);\n       }\n     }\n     return counts;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Quota.Counts cleanSubtree(final int snapshot, int priorSnapshotId,\n      final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n      throws QuotaExceededException {\n    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n    if (sf !\u003d null) {\n      return sf.cleanFile(this, snapshot, priorSnapshotId, collectedBlocks,\n          removedINodes, countDiffChange);\n    }\n    Quota.Counts counts \u003d Quota.Counts.newInstance();\n    if (snapshot \u003d\u003d CURRENT_STATE_ID \u0026\u0026 priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n      // this only happens when deleting the current file and the file is not\n      // in any snapshot\n      computeQuotaUsage(counts, false);\n      destroyAndCollectBlocks(collectedBlocks, removedINodes);\n    } else if (snapshot \u003d\u003d CURRENT_STATE_ID \u0026\u0026 priorSnapshotId !\u003d NO_SNAPSHOT_ID) {\n      // when deleting the current file and the file is in snapshot, we should\n      // clean the 0-sized block if the file is UC\n      FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n      if (uc !\u003d null) {\n        uc.cleanZeroSizeBlock(this, collectedBlocks);\n      }\n    }\n    return counts;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
          "extendedDetails": {
            "oldValue": "[snapshot-Snapshot(modifiers-final), prior-Snapshot, collectedBlocks-BlocksMapUpdateInfo(modifiers-final), removedINodes-List\u003cINode\u003e(modifiers-final), countDiffChange-boolean(modifiers-final)]",
            "newValue": "[snapshot-int(modifiers-final), priorSnapshotId-int, collectedBlocks-BlocksMapUpdateInfo(modifiers-final), removedINodes-List\u003cINode\u003e(modifiers-final), countDiffChange-boolean(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/01/14 12:52 PM",
          "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "14/12/13 2:13 AM",
          "commitNameOld": "44a6560b5da3f79d2299579a36e7a2a60a91f823",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 24.44,
          "commitsBetweenForRepo": 98,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-  public Quota.Counts cleanSubtree(final Snapshot snapshot, Snapshot prior,\n+  public Quota.Counts cleanSubtree(final int snapshot, int priorSnapshotId,\n       final BlocksMapUpdateInfo collectedBlocks,\n       final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n       throws QuotaExceededException {\n     FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n     if (sf !\u003d null) {\n-      return sf.cleanFile(this, snapshot, prior, collectedBlocks,\n+      return sf.cleanFile(this, snapshot, priorSnapshotId, collectedBlocks,\n           removedINodes, countDiffChange);\n     }\n     Quota.Counts counts \u003d Quota.Counts.newInstance();\n-    if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {\n+    if (snapshot \u003d\u003d CURRENT_STATE_ID \u0026\u0026 priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n       // this only happens when deleting the current file and the file is not\n       // in any snapshot\n       computeQuotaUsage(counts, false);\n       destroyAndCollectBlocks(collectedBlocks, removedINodes);\n-    } else if (snapshot \u003d\u003d null \u0026\u0026 prior !\u003d null) {\n+    } else if (snapshot \u003d\u003d CURRENT_STATE_ID \u0026\u0026 priorSnapshotId !\u003d NO_SNAPSHOT_ID) {\n       // when deleting the current file and the file is in snapshot, we should\n       // clean the 0-sized block if the file is UC\n       FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n       if (uc !\u003d null) {\n         uc.cleanZeroSizeBlock(this, collectedBlocks);\n       }\n     }\n     return counts;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Quota.Counts cleanSubtree(final int snapshot, int priorSnapshotId,\n      final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n      throws QuotaExceededException {\n    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n    if (sf !\u003d null) {\n      return sf.cleanFile(this, snapshot, priorSnapshotId, collectedBlocks,\n          removedINodes, countDiffChange);\n    }\n    Quota.Counts counts \u003d Quota.Counts.newInstance();\n    if (snapshot \u003d\u003d CURRENT_STATE_ID \u0026\u0026 priorSnapshotId \u003d\u003d NO_SNAPSHOT_ID) {\n      // this only happens when deleting the current file and the file is not\n      // in any snapshot\n      computeQuotaUsage(counts, false);\n      destroyAndCollectBlocks(collectedBlocks, removedINodes);\n    } else if (snapshot \u003d\u003d CURRENT_STATE_ID \u0026\u0026 priorSnapshotId !\u003d NO_SNAPSHOT_ID) {\n      // when deleting the current file and the file is in snapshot, we should\n      // clean the 0-sized block if the file is UC\n      FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n      if (uc !\u003d null) {\n        uc.cleanZeroSizeBlock(this, collectedBlocks);\n      }\n    }\n    return counts;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
          "extendedDetails": {}
        }
      ]
    },
    "4c87a27ad851ffaa3cc3e2074a9ef7073b5a164a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5554. Flatten INodeFile hierarchy: Replace INodeFileWithSnapshot with FileWithSnapshotFeature.  Contributed by jing9\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548796 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/12/13 10:17 PM",
      "commitName": "4c87a27ad851ffaa3cc3e2074a9ef7073b5a164a",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "27/11/13 12:32 PM",
      "commitNameOld": "8df119da214babde03e73243c7ca4cfe6d0ca562",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 9.41,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,25 @@\n   public Quota.Counts cleanSubtree(final Snapshot snapshot, Snapshot prior,\n       final BlocksMapUpdateInfo collectedBlocks,\n       final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n       throws QuotaExceededException {\n+    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n+    if (sf !\u003d null) {\n+      return sf.cleanFile(this, snapshot, prior, collectedBlocks,\n+          removedINodes, countDiffChange);\n+    }\n     Quota.Counts counts \u003d Quota.Counts.newInstance();\n-    if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {   \n-      // this only happens when deleting the current file\n+    if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {\n+      // this only happens when deleting the current file and the file is not\n+      // in any snapshot\n       computeQuotaUsage(counts, false);\n       destroyAndCollectBlocks(collectedBlocks, removedINodes);\n     } else if (snapshot \u003d\u003d null \u0026\u0026 prior !\u003d null) {\n+      // when deleting the current file and the file is in snapshot, we should\n+      // clean the 0-sized block if the file is UC\n       FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n       if (uc !\u003d null) {\n         uc.cleanZeroSizeBlock(this, collectedBlocks);\n       }\n     }\n     return counts;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Quota.Counts cleanSubtree(final Snapshot snapshot, Snapshot prior,\n      final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n      throws QuotaExceededException {\n    FileWithSnapshotFeature sf \u003d getFileWithSnapshotFeature();\n    if (sf !\u003d null) {\n      return sf.cleanFile(this, snapshot, prior, collectedBlocks,\n          removedINodes, countDiffChange);\n    }\n    Quota.Counts counts \u003d Quota.Counts.newInstance();\n    if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {\n      // this only happens when deleting the current file and the file is not\n      // in any snapshot\n      computeQuotaUsage(counts, false);\n      destroyAndCollectBlocks(collectedBlocks, removedINodes);\n    } else if (snapshot \u003d\u003d null \u0026\u0026 prior !\u003d null) {\n      // when deleting the current file and the file is in snapshot, we should\n      // clean the 0-sized block if the file is UC\n      FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n      if (uc !\u003d null) {\n        uc.cleanZeroSizeBlock(this, collectedBlocks);\n      }\n    }\n    return counts;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
      "extendedDetails": {}
    },
    "ce68f410b05a58ad05965f32ad7f5b246b363a75": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5285. Flatten INodeFile hierarchy: Replace INodeFileUnderConstruction and INodeFileUnderConstructionWithSnapshot with FileUnderContructionFeature.  Contributed by jing9\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1544389 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/11/13 5:39 PM",
      "commitName": "ce68f410b05a58ad05965f32ad7f5b246b363a75",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "14/11/13 8:49 AM",
      "commitNameOld": "fe67e30bc2794e7ff073cf938ee80eba805d1e69",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 7.37,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,17 @@\n   public Quota.Counts cleanSubtree(final Snapshot snapshot, Snapshot prior,\n       final BlocksMapUpdateInfo collectedBlocks,\n       final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n       throws QuotaExceededException {\n     Quota.Counts counts \u003d Quota.Counts.newInstance();\n     if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {   \n       // this only happens when deleting the current file\n       computeQuotaUsage(counts, false);\n       destroyAndCollectBlocks(collectedBlocks, removedINodes);\n+    } else if (snapshot \u003d\u003d null \u0026\u0026 prior !\u003d null) {\n+      FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n+      if (uc !\u003d null) {\n+        uc.cleanZeroSizeBlock(this, collectedBlocks);\n+      }\n     }\n     return counts;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Quota.Counts cleanSubtree(final Snapshot snapshot, Snapshot prior,\n      final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n      throws QuotaExceededException {\n    Quota.Counts counts \u003d Quota.Counts.newInstance();\n    if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {   \n      // this only happens when deleting the current file\n      computeQuotaUsage(counts, false);\n      destroyAndCollectBlocks(collectedBlocks, removedINodes);\n    } else if (snapshot \u003d\u003d null \u0026\u0026 prior !\u003d null) {\n      FileUnderConstructionFeature uc \u003d getFileUnderConstructionFeature();\n      if (uc !\u003d null) {\n        uc.cleanZeroSizeBlock(this, collectedBlocks);\n      }\n    }\n    return counts;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
      "extendedDetails": {}
    },
    "d46e1608626c64400d2b6c7693a4c035783c55b4": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-4877. Snapshot: fix the scenario where a directory is renamed under its prior descendant. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1490421 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/06/13 1:15 PM",
      "commitName": "d46e1608626c64400d2b6c7693a4c035783c55b4",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "04/06/13 10:26 PM",
      "commitNameOld": "e00f828b119b6a271b6319b6c4885228cd4cb3ed",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 1.62,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n   public Quota.Counts cleanSubtree(final Snapshot snapshot, Snapshot prior,\n-      final BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n+      final BlocksMapUpdateInfo collectedBlocks,\n+      final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n       throws QuotaExceededException {\n     Quota.Counts counts \u003d Quota.Counts.newInstance();\n     if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {   \n       // this only happens when deleting the current file\n       computeQuotaUsage(counts, false);\n       destroyAndCollectBlocks(collectedBlocks, removedINodes);\n     }\n     return counts;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Quota.Counts cleanSubtree(final Snapshot snapshot, Snapshot prior,\n      final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n      throws QuotaExceededException {\n    Quota.Counts counts \u003d Quota.Counts.newInstance();\n    if (snapshot \u003d\u003d null \u0026\u0026 prior \u003d\u003d null) {   \n      // this only happens when deleting the current file\n      computeQuotaUsage(counts, false);\n      destroyAndCollectBlocks(collectedBlocks, removedINodes);\n    }\n    return counts;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeFile.java",
      "extendedDetails": {
        "oldValue": "[snapshot-Snapshot(modifiers-final), prior-Snapshot, collectedBlocks-BlocksMapUpdateInfo(modifiers-final), removedINodes-List\u003cINode\u003e(modifiers-final)]",
        "newValue": "[snapshot-Snapshot(modifiers-final), prior-Snapshot, collectedBlocks-BlocksMapUpdateInfo(modifiers-final), removedINodes-List\u003cINode\u003e(modifiers-final), countDiffChange-boolean(modifiers-final)]"
      }
    }
  }
}