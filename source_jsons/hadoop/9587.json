{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ExecuteCommand.java",
  "functionName": "execute",
  "functionId": "execute___cmd-CommandLine",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ExecuteCommand.java",
  "functionStartLine": 61,
  "functionEndLine": 84,
  "numCommitsSeen": 11,
  "timeTaken": 1304,
  "changeHistory": [
    "a3c304c5dd90923b749c4aa1baafe603687aef45",
    "35c5943b8ba394191405555cdfc5e6127053ee97",
    "9c6a4383cac29b2893ce14e6c9a75705fabfd522",
    "d2ff793ae4788418116b64e7141e80897d4f9c24",
    "1b39b283c70854bf3b77f5ba9fbcce064bfea5c3"
  ],
  "changeHistoryShort": {
    "a3c304c5dd90923b749c4aa1baafe603687aef45": "Ybodychange",
    "35c5943b8ba394191405555cdfc5e6127053ee97": "Ybodychange",
    "9c6a4383cac29b2893ce14e6c9a75705fabfd522": "Ybodychange",
    "d2ff793ae4788418116b64e7141e80897d4f9c24": "Ybodychange",
    "1b39b283c70854bf3b77f5ba9fbcce064bfea5c3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a3c304c5dd90923b749c4aa1baafe603687aef45": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13178. Disk Balancer: Add a force option to DiskBalancer Execute command. Contributed by Bharat Viswanadham.\n",
      "commitDate": "03/03/18 3:42 PM",
      "commitName": "a3c304c5dd90923b749c4aa1baafe603687aef45",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "08/09/16 7:26 PM",
      "commitNameOld": "35c5943b8ba394191405555cdfc5e6127053ee97",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 540.89,
      "commitsBetweenForRepo": 3511,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,24 @@\n   public void execute(CommandLine cmd) throws Exception {\n     LOG.info(\"Executing \\\"execute plan\\\" command\");\n     Preconditions.checkState(cmd.hasOption(DiskBalancerCLI.EXECUTE));\n     verifyCommandOptions(DiskBalancerCLI.EXECUTE, cmd);\n \n     String planFile \u003d cmd.getOptionValue(DiskBalancerCLI.EXECUTE);\n     Preconditions.checkArgument(planFile !\u003d null \u0026\u0026 !planFile.isEmpty(),\n         \"Invalid plan file specified.\");\n \n     String planData \u003d null;\n     try (FSDataInputStream plan \u003d open(planFile)) {\n       planData \u003d IOUtils.toString(plan);\n     }\n-    submitPlan(planFile, planData);\n+\n+    boolean skipDateCheck \u003d false;\n+    if(cmd.hasOption(DiskBalancerCLI.SKIPDATECHECK)) {\n+      skipDateCheck \u003d true;\n+      LOG.warn(\"Skipping date check on this plan. This could mean we are \" +\n+          \"executing an old plan and may not be the right plan for this \" +\n+          \"data node.\");\n+    }\n+\n+    submitPlan(planFile, planData, skipDateCheck);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void execute(CommandLine cmd) throws Exception {\n    LOG.info(\"Executing \\\"execute plan\\\" command\");\n    Preconditions.checkState(cmd.hasOption(DiskBalancerCLI.EXECUTE));\n    verifyCommandOptions(DiskBalancerCLI.EXECUTE, cmd);\n\n    String planFile \u003d cmd.getOptionValue(DiskBalancerCLI.EXECUTE);\n    Preconditions.checkArgument(planFile !\u003d null \u0026\u0026 !planFile.isEmpty(),\n        \"Invalid plan file specified.\");\n\n    String planData \u003d null;\n    try (FSDataInputStream plan \u003d open(planFile)) {\n      planData \u003d IOUtils.toString(plan);\n    }\n\n    boolean skipDateCheck \u003d false;\n    if(cmd.hasOption(DiskBalancerCLI.SKIPDATECHECK)) {\n      skipDateCheck \u003d true;\n      LOG.warn(\"Skipping date check on this plan. This could mean we are \" +\n          \"executing an old plan and may not be the right plan for this \" +\n          \"data node.\");\n    }\n\n    submitPlan(planFile, planData, skipDateCheck);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ExecuteCommand.java",
      "extendedDetails": {}
    },
    "35c5943b8ba394191405555cdfc5e6127053ee97": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10553. DiskBalancer: Rename Tools/DiskBalancer class to Tools/DiskBalancerCLI. Contributed by Manoj Govindassamy.\n",
      "commitDate": "08/09/16 7:26 PM",
      "commitName": "35c5943b8ba394191405555cdfc5e6127053ee97",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "15/08/16 8:10 PM",
      "commitNameOld": "5628b36c0872d58c9b25f23da3dab4eafad9bca3",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 23.97,
      "commitsBetweenForRepo": 154,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public void execute(CommandLine cmd) throws Exception {\n     LOG.info(\"Executing \\\"execute plan\\\" command\");\n-    Preconditions.checkState(cmd.hasOption(DiskBalancer.EXECUTE));\n-    verifyCommandOptions(DiskBalancer.EXECUTE, cmd);\n+    Preconditions.checkState(cmd.hasOption(DiskBalancerCLI.EXECUTE));\n+    verifyCommandOptions(DiskBalancerCLI.EXECUTE, cmd);\n \n-    String planFile \u003d cmd.getOptionValue(DiskBalancer.EXECUTE);\n+    String planFile \u003d cmd.getOptionValue(DiskBalancerCLI.EXECUTE);\n     Preconditions.checkArgument(planFile !\u003d null \u0026\u0026 !planFile.isEmpty(),\n         \"Invalid plan file specified.\");\n \n     String planData \u003d null;\n     try (FSDataInputStream plan \u003d open(planFile)) {\n       planData \u003d IOUtils.toString(plan);\n     }\n     submitPlan(planFile, planData);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void execute(CommandLine cmd) throws Exception {\n    LOG.info(\"Executing \\\"execute plan\\\" command\");\n    Preconditions.checkState(cmd.hasOption(DiskBalancerCLI.EXECUTE));\n    verifyCommandOptions(DiskBalancerCLI.EXECUTE, cmd);\n\n    String planFile \u003d cmd.getOptionValue(DiskBalancerCLI.EXECUTE);\n    Preconditions.checkArgument(planFile !\u003d null \u0026\u0026 !planFile.isEmpty(),\n        \"Invalid plan file specified.\");\n\n    String planData \u003d null;\n    try (FSDataInputStream plan \u003d open(planFile)) {\n      planData \u003d IOUtils.toString(plan);\n    }\n    submitPlan(planFile, planData);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ExecuteCommand.java",
      "extendedDetails": {}
    },
    "9c6a4383cac29b2893ce14e6c9a75705fabfd522": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10681. DiskBalancer: query command should report Plan file path apart from PlanID. (Manoj Govindassamy via lei)\n",
      "commitDate": "09/08/16 3:59 PM",
      "commitName": "9c6a4383cac29b2893ce14e6c9a75705fabfd522",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "23/06/16 6:27 PM",
      "commitNameOld": "e8de28181a3ed0053d5cd5f196434739880ee978",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 46.9,
      "commitsBetweenForRepo": 404,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public void execute(CommandLine cmd) throws Exception {\n     LOG.info(\"Executing \\\"execute plan\\\" command\");\n     Preconditions.checkState(cmd.hasOption(DiskBalancer.EXECUTE));\n     verifyCommandOptions(DiskBalancer.EXECUTE, cmd);\n \n     String planFile \u003d cmd.getOptionValue(DiskBalancer.EXECUTE);\n     Preconditions.checkArgument(planFile !\u003d null \u0026\u0026 !planFile.isEmpty(),\n         \"Invalid plan file specified.\");\n \n     String planData \u003d null;\n     try (FSDataInputStream plan \u003d open(planFile)) {\n       planData \u003d IOUtils.toString(plan);\n     }\n-    submitPlan(planData);\n+    submitPlan(planFile, planData);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void execute(CommandLine cmd) throws Exception {\n    LOG.info(\"Executing \\\"execute plan\\\" command\");\n    Preconditions.checkState(cmd.hasOption(DiskBalancer.EXECUTE));\n    verifyCommandOptions(DiskBalancer.EXECUTE, cmd);\n\n    String planFile \u003d cmd.getOptionValue(DiskBalancer.EXECUTE);\n    Preconditions.checkArgument(planFile !\u003d null \u0026\u0026 !planFile.isEmpty(),\n        \"Invalid plan file specified.\");\n\n    String planData \u003d null;\n    try (FSDataInputStream plan \u003d open(planFile)) {\n      planData \u003d IOUtils.toString(plan);\n    }\n    submitPlan(planFile, planData);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ExecuteCommand.java",
      "extendedDetails": {}
    },
    "d2ff793ae4788418116b64e7141e80897d4f9c24": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10496. DiskBalancer: ExecuteCommand checks planFile in a wrong way. Contributed by Lei (Eddy) Xu.\n",
      "commitDate": "23/06/16 6:21 PM",
      "commitName": "d2ff793ae4788418116b64e7141e80897d4f9c24",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "23/06/16 6:21 PM",
      "commitNameOld": "43eee50966191e9cfdb7ab19383edb3a44f93481",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public void execute(CommandLine cmd) throws Exception {\n     LOG.info(\"Executing \\\"execute plan\\\" command\");\n     Preconditions.checkState(cmd.hasOption(DiskBalancer.EXECUTE));\n     verifyCommandOptions(DiskBalancer.EXECUTE, cmd);\n \n     String planFile \u003d cmd.getOptionValue(DiskBalancer.EXECUTE);\n-    Preconditions.checkArgument(planFile \u003d\u003d null || planFile.isEmpty(),\n+    Preconditions.checkArgument(planFile !\u003d null \u0026\u0026 !planFile.isEmpty(),\n         \"Invalid plan file specified.\");\n \n     String planData \u003d null;\n     try (FSDataInputStream plan \u003d open(planFile)) {\n       planData \u003d IOUtils.toString(plan);\n     }\n     submitPlan(planData);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void execute(CommandLine cmd) throws Exception {\n    LOG.info(\"Executing \\\"execute plan\\\" command\");\n    Preconditions.checkState(cmd.hasOption(DiskBalancer.EXECUTE));\n    verifyCommandOptions(DiskBalancer.EXECUTE, cmd);\n\n    String planFile \u003d cmd.getOptionValue(DiskBalancer.EXECUTE);\n    Preconditions.checkArgument(planFile !\u003d null \u0026\u0026 !planFile.isEmpty(),\n        \"Invalid plan file specified.\");\n\n    String planData \u003d null;\n    try (FSDataInputStream plan \u003d open(planFile)) {\n      planData \u003d IOUtils.toString(plan);\n    }\n    submitPlan(planData);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ExecuteCommand.java",
      "extendedDetails": {}
    },
    "1b39b283c70854bf3b77f5ba9fbcce064bfea5c3": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9546: DiskBalancer: Add Execute command. Contributed by Anu Engineer.\n",
      "commitDate": "23/06/16 6:21 PM",
      "commitName": "1b39b283c70854bf3b77f5ba9fbcce064bfea5c3",
      "commitAuthor": "Anu Engineer",
      "diff": "@@ -0,0 +1,15 @@\n+  public void execute(CommandLine cmd) throws Exception {\n+    LOG.info(\"Executing \\\"execute plan\\\" command\");\n+    Preconditions.checkState(cmd.hasOption(DiskBalancer.EXECUTE));\n+    verifyCommandOptions(DiskBalancer.EXECUTE, cmd);\n+\n+    String planFile \u003d cmd.getOptionValue(DiskBalancer.EXECUTE);\n+    Preconditions.checkArgument(planFile \u003d\u003d null || planFile.isEmpty(),\n+        \"Invalid plan file specified.\");\n+\n+    String planData \u003d null;\n+    try (FSDataInputStream plan \u003d open(planFile)) {\n+      planData \u003d IOUtils.toString(plan);\n+    }\n+    submitPlan(planData);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void execute(CommandLine cmd) throws Exception {\n    LOG.info(\"Executing \\\"execute plan\\\" command\");\n    Preconditions.checkState(cmd.hasOption(DiskBalancer.EXECUTE));\n    verifyCommandOptions(DiskBalancer.EXECUTE, cmd);\n\n    String planFile \u003d cmd.getOptionValue(DiskBalancer.EXECUTE);\n    Preconditions.checkArgument(planFile \u003d\u003d null || planFile.isEmpty(),\n        \"Invalid plan file specified.\");\n\n    String planData \u003d null;\n    try (FSDataInputStream plan \u003d open(planFile)) {\n      planData \u003d IOUtils.toString(plan);\n    }\n    submitPlan(planData);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ExecuteCommand.java"
    }
  }
}