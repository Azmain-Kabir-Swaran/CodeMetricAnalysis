{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WriteManager.java",
  "functionName": "getFileAttr",
  "functionId": "getFileAttr___client-DFSClient__dirHandle-FileHandle__fileName-String__namenodeId-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/WriteManager.java",
  "functionStartLine": 342,
  "functionEndLine": 357,
  "numCommitsSeen": 40,
  "timeTaken": 1915,
  "changeHistory": [
    "d6602b5f39833611b4afa4581552f6c4c37e23a8",
    "3fccdec6e0a8e9305fc75921211c3745eddb9c45",
    "37f587563a943a827fbff865f5302bac6d202415"
  ],
  "changeHistoryShort": {
    "d6602b5f39833611b4afa4581552f6c4c37e23a8": "Ymultichange(Yparameterchange,Ybodychange)",
    "3fccdec6e0a8e9305fc75921211c3745eddb9c45": "Ybodychange",
    "37f587563a943a827fbff865f5302bac6d202415": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d6602b5f39833611b4afa4581552f6c4c37e23a8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-11575. Supporting HDFS NFS gateway with Federated HDFS. Contributed by Mukul Kumar Singh.\n",
      "commitDate": "10/10/17 10:38 AM",
      "commitName": "d6602b5f39833611b4afa4581552f6c4c37e23a8",
      "commitAuthor": "Jitendra Pandey",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-11575. Supporting HDFS NFS gateway with Federated HDFS. Contributed by Mukul Kumar Singh.\n",
          "commitDate": "10/10/17 10:38 AM",
          "commitName": "d6602b5f39833611b4afa4581552f6c4c37e23a8",
          "commitAuthor": "Jitendra Pandey",
          "commitDateOld": "28/01/15 12:56 PM",
          "commitNameOld": "f37849188b05a6251584de1aed5e66d5dfa7da4f",
          "commitAuthorOld": "yliu",
          "daysBetweenCommits": 985.86,
          "commitsBetweenForRepo": 7119,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n   Nfs3FileAttributes getFileAttr(DFSClient client, FileHandle dirHandle,\n-      String fileName) throws IOException {\n+      String fileName, int namenodeId) throws IOException {\n     String fileIdPath \u003d Nfs3Utils.getFileIdPath(dirHandle) + \"/\" + fileName;\n     Nfs3FileAttributes attr \u003d Nfs3Utils.getFileAttr(client, fileIdPath, iug);\n \n     if ((attr !\u003d null) \u0026\u0026 (attr.getType() \u003d\u003d NfsFileType.NFSREG.toValue())) {\n       OpenFileCtx openFileCtx \u003d fileContextCache.get(new FileHandle(attr\n-          .getFileId()));\n+          .getFileId(), namenodeId));\n \n       if (openFileCtx !\u003d null) {\n         attr.setSize(openFileCtx.getNextOffset());\n         attr.setUsed(openFileCtx.getNextOffset());\n       }\n     }\n     return attr;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  Nfs3FileAttributes getFileAttr(DFSClient client, FileHandle dirHandle,\n      String fileName, int namenodeId) throws IOException {\n    String fileIdPath \u003d Nfs3Utils.getFileIdPath(dirHandle) + \"/\" + fileName;\n    Nfs3FileAttributes attr \u003d Nfs3Utils.getFileAttr(client, fileIdPath, iug);\n\n    if ((attr !\u003d null) \u0026\u0026 (attr.getType() \u003d\u003d NfsFileType.NFSREG.toValue())) {\n      OpenFileCtx openFileCtx \u003d fileContextCache.get(new FileHandle(attr\n          .getFileId(), namenodeId));\n\n      if (openFileCtx !\u003d null) {\n        attr.setSize(openFileCtx.getNextOffset());\n        attr.setUsed(openFileCtx.getNextOffset());\n      }\n    }\n    return attr;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/WriteManager.java",
          "extendedDetails": {
            "oldValue": "[client-DFSClient, dirHandle-FileHandle, fileName-String]",
            "newValue": "[client-DFSClient, dirHandle-FileHandle, fileName-String, namenodeId-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11575. Supporting HDFS NFS gateway with Federated HDFS. Contributed by Mukul Kumar Singh.\n",
          "commitDate": "10/10/17 10:38 AM",
          "commitName": "d6602b5f39833611b4afa4581552f6c4c37e23a8",
          "commitAuthor": "Jitendra Pandey",
          "commitDateOld": "28/01/15 12:56 PM",
          "commitNameOld": "f37849188b05a6251584de1aed5e66d5dfa7da4f",
          "commitAuthorOld": "yliu",
          "daysBetweenCommits": 985.86,
          "commitsBetweenForRepo": 7119,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n   Nfs3FileAttributes getFileAttr(DFSClient client, FileHandle dirHandle,\n-      String fileName) throws IOException {\n+      String fileName, int namenodeId) throws IOException {\n     String fileIdPath \u003d Nfs3Utils.getFileIdPath(dirHandle) + \"/\" + fileName;\n     Nfs3FileAttributes attr \u003d Nfs3Utils.getFileAttr(client, fileIdPath, iug);\n \n     if ((attr !\u003d null) \u0026\u0026 (attr.getType() \u003d\u003d NfsFileType.NFSREG.toValue())) {\n       OpenFileCtx openFileCtx \u003d fileContextCache.get(new FileHandle(attr\n-          .getFileId()));\n+          .getFileId(), namenodeId));\n \n       if (openFileCtx !\u003d null) {\n         attr.setSize(openFileCtx.getNextOffset());\n         attr.setUsed(openFileCtx.getNextOffset());\n       }\n     }\n     return attr;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  Nfs3FileAttributes getFileAttr(DFSClient client, FileHandle dirHandle,\n      String fileName, int namenodeId) throws IOException {\n    String fileIdPath \u003d Nfs3Utils.getFileIdPath(dirHandle) + \"/\" + fileName;\n    Nfs3FileAttributes attr \u003d Nfs3Utils.getFileAttr(client, fileIdPath, iug);\n\n    if ((attr !\u003d null) \u0026\u0026 (attr.getType() \u003d\u003d NfsFileType.NFSREG.toValue())) {\n      OpenFileCtx openFileCtx \u003d fileContextCache.get(new FileHandle(attr\n          .getFileId(), namenodeId));\n\n      if (openFileCtx !\u003d null) {\n        attr.setSize(openFileCtx.getNextOffset());\n        attr.setUsed(openFileCtx.getNextOffset());\n      }\n    }\n    return attr;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/WriteManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "3fccdec6e0a8e9305fc75921211c3745eddb9c45": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5364. Add OpenFileCtx cache. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1539834 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/11/13 1:49 PM",
      "commitName": "3fccdec6e0a8e9305fc75921211c3745eddb9c45",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "07/11/13 10:02 AM",
      "commitNameOld": "16c6755554cc5ecd9d4e0ba74b75b10c74bb0ab4",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   Nfs3FileAttributes getFileAttr(DFSClient client, FileHandle dirHandle,\n       String fileName) throws IOException {\n     String fileIdPath \u003d Nfs3Utils.getFileIdPath(dirHandle) + \"/\" + fileName;\n     Nfs3FileAttributes attr \u003d Nfs3Utils.getFileAttr(client, fileIdPath, iug);\n \n     if ((attr !\u003d null) \u0026\u0026 (attr.getType() \u003d\u003d NfsFileType.NFSREG.toValue())) {\n-      OpenFileCtx openFileCtx \u003d openFileMap\n-          .get(new FileHandle(attr.getFileId()));\n+      OpenFileCtx openFileCtx \u003d fileContextCache.get(new FileHandle(attr\n+          .getFileId()));\n \n       if (openFileCtx !\u003d null) {\n         attr.setSize(openFileCtx.getNextOffset());\n         attr.setUsed(openFileCtx.getNextOffset());\n       }\n     }\n     return attr;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  Nfs3FileAttributes getFileAttr(DFSClient client, FileHandle dirHandle,\n      String fileName) throws IOException {\n    String fileIdPath \u003d Nfs3Utils.getFileIdPath(dirHandle) + \"/\" + fileName;\n    Nfs3FileAttributes attr \u003d Nfs3Utils.getFileAttr(client, fileIdPath, iug);\n\n    if ((attr !\u003d null) \u0026\u0026 (attr.getType() \u003d\u003d NfsFileType.NFSREG.toValue())) {\n      OpenFileCtx openFileCtx \u003d fileContextCache.get(new FileHandle(attr\n          .getFileId()));\n\n      if (openFileCtx !\u003d null) {\n        attr.setSize(openFileCtx.getNextOffset());\n        attr.setUsed(openFileCtx.getNextOffset());\n      }\n    }\n    return attr;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/WriteManager.java",
      "extendedDetails": {}
    },
    "37f587563a943a827fbff865f5302bac6d202415": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4762 Provide HDFS based NFSv3 and Mountd implementation. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1499029 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/07/13 10:31 AM",
      "commitName": "37f587563a943a827fbff865f5302bac6d202415",
      "commitAuthor": "Brandon Li",
      "diff": "@@ -0,0 +1,16 @@\n+  Nfs3FileAttributes getFileAttr(DFSClient client, FileHandle dirHandle,\n+      String fileName) throws IOException {\n+    String fileIdPath \u003d Nfs3Utils.getFileIdPath(dirHandle) + \"/\" + fileName;\n+    Nfs3FileAttributes attr \u003d Nfs3Utils.getFileAttr(client, fileIdPath, iug);\n+\n+    if ((attr !\u003d null) \u0026\u0026 (attr.getType() \u003d\u003d NfsFileType.NFSREG.toValue())) {\n+      OpenFileCtx openFileCtx \u003d openFileMap\n+          .get(new FileHandle(attr.getFileId()));\n+\n+      if (openFileCtx !\u003d null) {\n+        attr.setSize(openFileCtx.getNextOffset());\n+        attr.setUsed(openFileCtx.getNextOffset());\n+      }\n+    }\n+    return attr;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  Nfs3FileAttributes getFileAttr(DFSClient client, FileHandle dirHandle,\n      String fileName) throws IOException {\n    String fileIdPath \u003d Nfs3Utils.getFileIdPath(dirHandle) + \"/\" + fileName;\n    Nfs3FileAttributes attr \u003d Nfs3Utils.getFileAttr(client, fileIdPath, iug);\n\n    if ((attr !\u003d null) \u0026\u0026 (attr.getType() \u003d\u003d NfsFileType.NFSREG.toValue())) {\n      OpenFileCtx openFileCtx \u003d openFileMap\n          .get(new FileHandle(attr.getFileId()));\n\n      if (openFileCtx !\u003d null) {\n        attr.setSize(openFileCtx.getNextOffset());\n        attr.setUsed(openFileCtx.getNextOffset());\n      }\n    }\n    return attr;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/WriteManager.java"
    }
  }
}