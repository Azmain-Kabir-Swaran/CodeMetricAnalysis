{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FpgaResourceHandlerImpl.java",
  "functionName": "bootstrap",
  "functionId": "bootstrap___configuration-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/fpga/FpgaResourceHandlerImpl.java",
  "functionStartLine": 97,
  "functionEndLine": 110,
  "numCommitsSeen": 9,
  "timeTaken": 2246,
  "changeHistory": [
    "56f1e131ecb9f53dcc2596807f8dec2d2b95bb51",
    "a4cd75e09c934699ec5e2fa969f1c8d0a14c1d49",
    "8e1539eca8175f58f836daa5b0ad598c890cbb02",
    "7225ec0ceb49ae8f5588484297a20f07ec047420"
  ],
  "changeHistoryShort": {
    "56f1e131ecb9f53dcc2596807f8dec2d2b95bb51": "Ybodychange",
    "a4cd75e09c934699ec5e2fa969f1c8d0a14c1d49": "Ybodychange",
    "8e1539eca8175f58f836daa5b0ad598c890cbb02": "Ybodychange",
    "7225ec0ceb49ae8f5588484297a20f07ec047420": "Yintroduced"
  },
  "changeHistoryDetails": {
    "56f1e131ecb9f53dcc2596807f8dec2d2b95bb51": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9270. Minor cleanup in TestFpgaDiscoverer. Contributed by Peter Bacsko.\n",
      "commitDate": "29/03/19 10:58 AM",
      "commitName": "56f1e131ecb9f53dcc2596807f8dec2d2b95bb51",
      "commitAuthor": "Devaraj K",
      "commitDateOld": "27/03/19 10:08 AM",
      "commitNameOld": "a4cd75e09c934699ec5e2fa969f1c8d0a14c1d49",
      "commitAuthorOld": "Devaraj K",
      "daysBetweenCommits": 2.04,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,14 @@\n   public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration)\n       throws ResourceHandlerException {\n     // The plugin should be initilized by FpgaDiscoverer already\n     if (!vendorPlugin.initPlugin(configuration)) {\n       throw new ResourceHandlerException(\"FPGA plugin initialization failed\");\n     }\n     LOG.info(\"FPGA Plugin bootstrap success.\");\n     // Get avialable devices minor numbers from toolchain or static configuration\n-    List\u003cFpgaResourceAllocator.FpgaDevice\u003e fpgaDeviceList \u003d\n-        FpgaDiscoverer.getInstance().discover();\n+    List\u003cFpgaDevice\u003e fpgaDeviceList \u003d fpgaDiscoverer.discover();\n     allocator.addFpgaDevices(vendorPlugin.getFpgaType(), fpgaDeviceList);\n     this.cGroupsHandler.initializeCGroupController(\n         CGroupsHandler.CGroupController.DEVICES);\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration)\n      throws ResourceHandlerException {\n    // The plugin should be initilized by FpgaDiscoverer already\n    if (!vendorPlugin.initPlugin(configuration)) {\n      throw new ResourceHandlerException(\"FPGA plugin initialization failed\");\n    }\n    LOG.info(\"FPGA Plugin bootstrap success.\");\n    // Get avialable devices minor numbers from toolchain or static configuration\n    List\u003cFpgaDevice\u003e fpgaDeviceList \u003d fpgaDiscoverer.discover();\n    allocator.addFpgaDevices(vendorPlugin.getFpgaType(), fpgaDeviceList);\n    this.cGroupsHandler.initializeCGroupController(\n        CGroupsHandler.CGroupController.DEVICES);\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/fpga/FpgaResourceHandlerImpl.java",
      "extendedDetails": {}
    },
    "a4cd75e09c934699ec5e2fa969f1c8d0a14c1d49": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9269. Minor cleanup in FpgaResourceAllocator. Contributed by Peter Bacsko.\n",
      "commitDate": "27/03/19 10:08 AM",
      "commitName": "a4cd75e09c934699ec5e2fa969f1c8d0a14c1d49",
      "commitAuthor": "Devaraj K",
      "commitDateOld": "21/03/19 11:15 AM",
      "commitNameOld": "a99eb80659835107f4015c859b3319bf3a70c281",
      "commitAuthorOld": "Devaraj K",
      "daysBetweenCommits": 5.95,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration)\n       throws ResourceHandlerException {\n     // The plugin should be initilized by FpgaDiscoverer already\n     if (!vendorPlugin.initPlugin(configuration)) {\n       throw new ResourceHandlerException(\"FPGA plugin initialization failed\");\n     }\n     LOG.info(\"FPGA Plugin bootstrap success.\");\n     // Get avialable devices minor numbers from toolchain or static configuration\n     List\u003cFpgaResourceAllocator.FpgaDevice\u003e fpgaDeviceList \u003d\n         FpgaDiscoverer.getInstance().discover();\n-    allocator.addFpga(vendorPlugin.getFpgaType(), fpgaDeviceList);\n+    allocator.addFpgaDevices(vendorPlugin.getFpgaType(), fpgaDeviceList);\n     this.cGroupsHandler.initializeCGroupController(\n         CGroupsHandler.CGroupController.DEVICES);\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration)\n      throws ResourceHandlerException {\n    // The plugin should be initilized by FpgaDiscoverer already\n    if (!vendorPlugin.initPlugin(configuration)) {\n      throw new ResourceHandlerException(\"FPGA plugin initialization failed\");\n    }\n    LOG.info(\"FPGA Plugin bootstrap success.\");\n    // Get avialable devices minor numbers from toolchain or static configuration\n    List\u003cFpgaResourceAllocator.FpgaDevice\u003e fpgaDeviceList \u003d\n        FpgaDiscoverer.getInstance().discover();\n    allocator.addFpgaDevices(vendorPlugin.getFpgaType(), fpgaDeviceList);\n    this.cGroupsHandler.initializeCGroupController(\n        CGroupsHandler.CGroupController.DEVICES);\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/fpga/FpgaResourceHandlerImpl.java",
      "extendedDetails": {}
    },
    "8e1539eca8175f58f836daa5b0ad598c890cbb02": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9266. General improvements in IntelFpgaOpenclPlugin. Contributed by Peter Bacsko.\n",
      "commitDate": "12/03/19 2:15 PM",
      "commitName": "8e1539eca8175f58f836daa5b0ad598c890cbb02",
      "commitAuthor": "Sunil G",
      "commitDateOld": "10/12/18 11:12 AM",
      "commitNameOld": "ac578c0e82a5ba24bf59e9e58f91a3eb65c60cfe",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 92.08,
      "commitsBetweenForRepo": 689,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,15 @@\n-  public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration) throws ResourceHandlerException {\n+  public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration)\n+      throws ResourceHandlerException {\n     // The plugin should be initilized by FpgaDiscoverer already\n     if (!vendorPlugin.initPlugin(configuration)) {\n-      throw new ResourceHandlerException(\"FPGA plugin initialization failed\", null);\n+      throw new ResourceHandlerException(\"FPGA plugin initialization failed\");\n     }\n     LOG.info(\"FPGA Plugin bootstrap success.\");\n     // Get avialable devices minor numbers from toolchain or static configuration\n-    List\u003cFpgaResourceAllocator.FpgaDevice\u003e fpgaDeviceList \u003d FpgaDiscoverer.getInstance().discover();\n+    List\u003cFpgaResourceAllocator.FpgaDevice\u003e fpgaDeviceList \u003d\n+        FpgaDiscoverer.getInstance().discover();\n     allocator.addFpga(vendorPlugin.getFpgaType(), fpgaDeviceList);\n-    this.cGroupsHandler.initializeCGroupController(CGroupsHandler.CGroupController.DEVICES);\n+    this.cGroupsHandler.initializeCGroupController(\n+        CGroupsHandler.CGroupController.DEVICES);\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration)\n      throws ResourceHandlerException {\n    // The plugin should be initilized by FpgaDiscoverer already\n    if (!vendorPlugin.initPlugin(configuration)) {\n      throw new ResourceHandlerException(\"FPGA plugin initialization failed\");\n    }\n    LOG.info(\"FPGA Plugin bootstrap success.\");\n    // Get avialable devices minor numbers from toolchain or static configuration\n    List\u003cFpgaResourceAllocator.FpgaDevice\u003e fpgaDeviceList \u003d\n        FpgaDiscoverer.getInstance().discover();\n    allocator.addFpga(vendorPlugin.getFpgaType(), fpgaDeviceList);\n    this.cGroupsHandler.initializeCGroupController(\n        CGroupsHandler.CGroupController.DEVICES);\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/fpga/FpgaResourceHandlerImpl.java",
      "extendedDetails": {}
    },
    "7225ec0ceb49ae8f5588484297a20f07ec047420": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6507. Add support in NodeManager to isolate FPGA devices with CGroups. (Zhankun Tang via wangda)\n\nChange-Id: Ic9afd841805f1035423915a0b0add5f3ba96cf9d\n",
      "commitDate": "01/12/17 10:50 AM",
      "commitName": "7225ec0ceb49ae8f5588484297a20f07ec047420",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,12 @@\n+  public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration) throws ResourceHandlerException {\n+    // The plugin should be initilized by FpgaDiscoverer already\n+    if (!vendorPlugin.initPlugin(configuration)) {\n+      throw new ResourceHandlerException(\"FPGA plugin initialization failed\", null);\n+    }\n+    LOG.info(\"FPGA Plugin bootstrap success.\");\n+    // Get avialable devices minor numbers from toolchain or static configuration\n+    List\u003cFpgaResourceAllocator.FpgaDevice\u003e fpgaDeviceList \u003d FpgaDiscoverer.getInstance().discover();\n+    allocator.addFpga(vendorPlugin.getFpgaType(), fpgaDeviceList);\n+    this.cGroupsHandler.initializeCGroupController(CGroupsHandler.CGroupController.DEVICES);\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cPrivilegedOperation\u003e bootstrap(Configuration configuration) throws ResourceHandlerException {\n    // The plugin should be initilized by FpgaDiscoverer already\n    if (!vendorPlugin.initPlugin(configuration)) {\n      throw new ResourceHandlerException(\"FPGA plugin initialization failed\", null);\n    }\n    LOG.info(\"FPGA Plugin bootstrap success.\");\n    // Get avialable devices minor numbers from toolchain or static configuration\n    List\u003cFpgaResourceAllocator.FpgaDevice\u003e fpgaDeviceList \u003d FpgaDiscoverer.getInstance().discover();\n    allocator.addFpga(vendorPlugin.getFpgaType(), fpgaDeviceList);\n    this.cGroupsHandler.initializeCGroupController(CGroupsHandler.CGroupController.DEVICES);\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/fpga/FpgaResourceHandlerImpl.java"
    }
  }
}