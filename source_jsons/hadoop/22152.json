{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShuffleSchedulerImpl.java",
  "functionName": "resolve",
  "functionId": "resolve___event-TaskCompletionEvent",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleSchedulerImpl.java",
  "functionStartLine": 149,
  "functionEndLine": 171,
  "numCommitsSeen": 13,
  "timeTaken": 821,
  "changeHistory": [
    "1a389305b27ac1efec4d7923b87de3e703bf70e1"
  ],
  "changeHistoryShort": {
    "1a389305b27ac1efec4d7923b87de3e703bf70e1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1a389305b27ac1efec4d7923b87de3e703bf70e1": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5192. Allow for alternate resolutions of TaskCompletionEvents. Contributed by Chris Douglas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493445 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/06/13 8:07 PM",
      "commitName": "1a389305b27ac1efec4d7923b87de3e703bf70e1",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,23 @@\n+  public void resolve(TaskCompletionEvent event) {\n+    switch (event.getTaskStatus()) {\n+    case SUCCEEDED:\n+      URI u \u003d getBaseURI(reduceId, event.getTaskTrackerHttp());\n+      addKnownMapOutput(u.getHost() + \":\" + u.getPort(),\n+          u.toString(),\n+          event.getTaskAttemptId());\n+      maxMapRuntime \u003d Math.max(maxMapRuntime, event.getTaskRunTime());\n+      break;\n+    case FAILED:\n+    case KILLED:\n+    case OBSOLETE:\n+      obsoleteMapOutput(event.getTaskAttemptId());\n+      LOG.info(\"Ignoring obsolete output of \" + event.getTaskStatus() +\n+          \" map-task: \u0027\" + event.getTaskAttemptId() + \"\u0027\");\n+      break;\n+    case TIPFAILED:\n+      tipFailed(event.getTaskAttemptId().getTaskID());\n+      LOG.info(\"Ignoring output of failed map TIP: \u0027\" +\n+          event.getTaskAttemptId() + \"\u0027\");\n+      break;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void resolve(TaskCompletionEvent event) {\n    switch (event.getTaskStatus()) {\n    case SUCCEEDED:\n      URI u \u003d getBaseURI(reduceId, event.getTaskTrackerHttp());\n      addKnownMapOutput(u.getHost() + \":\" + u.getPort(),\n          u.toString(),\n          event.getTaskAttemptId());\n      maxMapRuntime \u003d Math.max(maxMapRuntime, event.getTaskRunTime());\n      break;\n    case FAILED:\n    case KILLED:\n    case OBSOLETE:\n      obsoleteMapOutput(event.getTaskAttemptId());\n      LOG.info(\"Ignoring obsolete output of \" + event.getTaskStatus() +\n          \" map-task: \u0027\" + event.getTaskAttemptId() + \"\u0027\");\n      break;\n    case TIPFAILED:\n      tipFailed(event.getTaskAttemptId().getTaskID());\n      LOG.info(\"Ignoring output of failed map TIP: \u0027\" +\n          event.getTaskAttemptId() + \"\u0027\");\n      break;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/ShuffleSchedulerImpl.java"
    }
  }
}