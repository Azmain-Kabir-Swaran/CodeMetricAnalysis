{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MultiSchemeDelegationTokenAuthenticationHandler.java",
  "functionName": "authenticate",
  "functionId": "authenticate___request-HttpServletRequest__response-HttpServletResponse",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/MultiSchemeDelegationTokenAuthenticationHandler.java",
  "functionStartLine": 155,
  "functionEndLine": 182,
  "numCommitsSeen": 2,
  "timeTaken": 712,
  "changeHistory": [
    "4bca385241c0fc8ff168c7b0f2984a7aed2c7492"
  ],
  "changeHistoryShort": {
    "4bca385241c0fc8ff168c7b0f2984a7aed2c7492": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4bca385241c0fc8ff168c7b0f2984a7aed2c7492": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12082 Support multiple authentication schemes via AuthenticationFilter\n",
      "commitDate": "18/10/16 6:32 PM",
      "commitName": "4bca385241c0fc8ff168c7b0f2984a7aed2c7492",
      "commitAuthor": "Benoy Antony",
      "diff": "@@ -0,0 +1,28 @@\n+  public AuthenticationToken authenticate(HttpServletRequest request,\n+      HttpServletResponse response)\n+          throws IOException, AuthenticationException {\n+    String authorization \u003d\n+        request.getHeader(HttpConstants.AUTHORIZATION_HEADER);\n+\n+    if (isManagementOperation(request)) {\n+      boolean schemeConfigured \u003d false;\n+      if (authorization !\u003d null) {\n+        for (String scheme : delegationAuthSchemes) {\n+          if (AuthenticationHandlerUtil.\n+              matchAuthScheme(scheme, authorization)) {\n+            schemeConfigured \u003d true;\n+            break;\n+          }\n+        }\n+      }\n+      if (!schemeConfigured) {\n+        response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n+        for (String scheme : delegationAuthSchemes) {\n+          response.addHeader(WWW_AUTHENTICATE, scheme);\n+        }\n+        return null;\n+      }\n+    }\n+\n+    return super.authenticate(request, response);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public AuthenticationToken authenticate(HttpServletRequest request,\n      HttpServletResponse response)\n          throws IOException, AuthenticationException {\n    String authorization \u003d\n        request.getHeader(HttpConstants.AUTHORIZATION_HEADER);\n\n    if (isManagementOperation(request)) {\n      boolean schemeConfigured \u003d false;\n      if (authorization !\u003d null) {\n        for (String scheme : delegationAuthSchemes) {\n          if (AuthenticationHandlerUtil.\n              matchAuthScheme(scheme, authorization)) {\n            schemeConfigured \u003d true;\n            break;\n          }\n        }\n      }\n      if (!schemeConfigured) {\n        response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n        for (String scheme : delegationAuthSchemes) {\n          response.addHeader(WWW_AUTHENTICATE, scheme);\n        }\n        return null;\n      }\n    }\n\n    return super.authenticate(request, response);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/MultiSchemeDelegationTokenAuthenticationHandler.java"
    }
  }
}