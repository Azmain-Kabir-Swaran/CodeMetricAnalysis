{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReduceAttempt20LineHistoryEventEmitter.java",
  "functionName": "maybeEmitEvent",
  "functionId": "maybeEmitEvent___line-ParsedLine__taskAttemptIDName-String__thatg-HistoryEventEmitter",
  "sourceFilePath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/ReduceAttempt20LineHistoryEventEmitter.java",
  "functionStartLine": 50,
  "functionEndLine": 87,
  "numCommitsSeen": 8,
  "timeTaken": 4769,
  "changeHistory": [
    "34fe11c987730932f99dec6eb458a22624eb075b",
    "10325d97329c214bb3899c8535df5a366bc86d2f",
    "94bf0dacbaa54ead5af98b6d62ae1713c579a16b",
    "9db078212f5a37154925cc8872f9adaeca0ed371",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "989c5e90a58d06320e70d7746a97d9a8376c49e3",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "34fe11c987730932f99dec6eb458a22624eb075b": "Ybodychange",
    "10325d97329c214bb3899c8535df5a366bc86d2f": "Yfilerename",
    "94bf0dacbaa54ead5af98b6d62ae1713c579a16b": "Ybodychange",
    "9db078212f5a37154925cc8872f9adaeca0ed371": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "989c5e90a58d06320e70d7746a97d9a8376c49e3": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "34fe11c987730932f99dec6eb458a22624eb075b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6243. Fix findbugs warnings in hadoop-rumen. Contributed by Masatake Iwasaki.\n",
      "commitDate": "04/02/15 9:25 AM",
      "commitName": "34fe11c987730932f99dec6eb458a22624eb075b",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "18/01/12 2:10 PM",
      "commitNameOld": "10325d97329c214bb3899c8535df5a366bc86d2f",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 1112.8,
      "commitsBetweenForRepo": 7505,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n     HistoryEvent maybeEmitEvent(ParsedLine line, String taskAttemptIDName,\n         HistoryEventEmitter thatg) {\n       if (taskAttemptIDName \u003d\u003d null) {\n         return null;\n       }\n \n       TaskAttemptID taskAttemptID \u003d TaskAttemptID.forName(taskAttemptIDName);\n \n       String finishTime \u003d line.get(\"FINISH_TIME\");\n       String status \u003d line.get(\"TASK_STATUS\");\n \n       if (finishTime !\u003d null \u0026\u0026 status !\u003d null\n           \u0026\u0026 status.equalsIgnoreCase(\"success\")) {\n         String hostName \u003d line.get(\"HOSTNAME\");\n         String counters \u003d line.get(\"COUNTERS\");\n         String state \u003d line.get(\"STATE_STRING\");\n         String shuffleFinish \u003d line.get(\"SHUFFLE_FINISHED\");\n         String sortFinish \u003d line.get(\"SORT_FINISHED\");\n \n-        if (finishTime !\u003d null \u0026\u0026 shuffleFinish !\u003d null \u0026\u0026 sortFinish !\u003d null\n+        if (shuffleFinish !\u003d null \u0026\u0026 sortFinish !\u003d null\n             \u0026\u0026 \"success\".equalsIgnoreCase(status)) {\n           ReduceAttempt20LineHistoryEventEmitter that \u003d\n               (ReduceAttempt20LineHistoryEventEmitter) thatg;\n \n           return new ReduceAttemptFinishedEvent\n             (taskAttemptID,\n              that.originalTaskType, status,\n              Long.parseLong(shuffleFinish),\n              Long.parseLong(sortFinish),\n              Long.parseLong(finishTime),\n              hostName, -1, null,\n              state, maybeParseCounters(counters),\n              null);\n         }\n       }\n \n       return null;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    HistoryEvent maybeEmitEvent(ParsedLine line, String taskAttemptIDName,\n        HistoryEventEmitter thatg) {\n      if (taskAttemptIDName \u003d\u003d null) {\n        return null;\n      }\n\n      TaskAttemptID taskAttemptID \u003d TaskAttemptID.forName(taskAttemptIDName);\n\n      String finishTime \u003d line.get(\"FINISH_TIME\");\n      String status \u003d line.get(\"TASK_STATUS\");\n\n      if (finishTime !\u003d null \u0026\u0026 status !\u003d null\n          \u0026\u0026 status.equalsIgnoreCase(\"success\")) {\n        String hostName \u003d line.get(\"HOSTNAME\");\n        String counters \u003d line.get(\"COUNTERS\");\n        String state \u003d line.get(\"STATE_STRING\");\n        String shuffleFinish \u003d line.get(\"SHUFFLE_FINISHED\");\n        String sortFinish \u003d line.get(\"SORT_FINISHED\");\n\n        if (shuffleFinish !\u003d null \u0026\u0026 sortFinish !\u003d null\n            \u0026\u0026 \"success\".equalsIgnoreCase(status)) {\n          ReduceAttempt20LineHistoryEventEmitter that \u003d\n              (ReduceAttempt20LineHistoryEventEmitter) thatg;\n\n          return new ReduceAttemptFinishedEvent\n            (taskAttemptID,\n             that.originalTaskType, status,\n             Long.parseLong(shuffleFinish),\n             Long.parseLong(sortFinish),\n             Long.parseLong(finishTime),\n             hostName, -1, null,\n             state, maybeParseCounters(counters),\n             null);\n        }\n      }\n\n      return null;\n    }",
      "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/ReduceAttempt20LineHistoryEventEmitter.java",
      "extendedDetails": {}
    },
    "10325d97329c214bb3899c8535df5a366bc86d2f": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3582. Move successfully passing MR1 tests to MR2 maven tree.(ahmed via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233090 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/01/12 2:10 PM",
      "commitName": "10325d97329c214bb3899c8535df5a366bc86d2f",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/01/12 10:20 AM",
      "commitNameOld": "8b2f6909ec7df5cffb5ef417f5c9cffdee43e38a",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    HistoryEvent maybeEmitEvent(ParsedLine line, String taskAttemptIDName,\n        HistoryEventEmitter thatg) {\n      if (taskAttemptIDName \u003d\u003d null) {\n        return null;\n      }\n\n      TaskAttemptID taskAttemptID \u003d TaskAttemptID.forName(taskAttemptIDName);\n\n      String finishTime \u003d line.get(\"FINISH_TIME\");\n      String status \u003d line.get(\"TASK_STATUS\");\n\n      if (finishTime !\u003d null \u0026\u0026 status !\u003d null\n          \u0026\u0026 status.equalsIgnoreCase(\"success\")) {\n        String hostName \u003d line.get(\"HOSTNAME\");\n        String counters \u003d line.get(\"COUNTERS\");\n        String state \u003d line.get(\"STATE_STRING\");\n        String shuffleFinish \u003d line.get(\"SHUFFLE_FINISHED\");\n        String sortFinish \u003d line.get(\"SORT_FINISHED\");\n\n        if (finishTime !\u003d null \u0026\u0026 shuffleFinish !\u003d null \u0026\u0026 sortFinish !\u003d null\n            \u0026\u0026 \"success\".equalsIgnoreCase(status)) {\n          ReduceAttempt20LineHistoryEventEmitter that \u003d\n              (ReduceAttempt20LineHistoryEventEmitter) thatg;\n\n          return new ReduceAttemptFinishedEvent\n            (taskAttemptID,\n             that.originalTaskType, status,\n             Long.parseLong(shuffleFinish),\n             Long.parseLong(sortFinish),\n             Long.parseLong(finishTime),\n             hostName, -1, null,\n             state, maybeParseCounters(counters),\n             null);\n        }\n      }\n\n      return null;\n    }",
      "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/ReduceAttempt20LineHistoryEventEmitter.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/ReduceAttempt20LineHistoryEventEmitter.java",
        "newPath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/ReduceAttempt20LineHistoryEventEmitter.java"
      }
    },
    "94bf0dacbaa54ead5af98b6d62ae1713c579a16b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3450. NM port info no longer available in JobHistory. (Siddharth Seth via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208327 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/11 12:43 AM",
      "commitName": "94bf0dacbaa54ead5af98b6d62ae1713c579a16b",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "31/10/11 10:27 AM",
      "commitNameOld": "9db078212f5a37154925cc8872f9adaeca0ed371",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 29.64,
      "commitsBetweenForRepo": 165,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n     HistoryEvent maybeEmitEvent(ParsedLine line, String taskAttemptIDName,\n         HistoryEventEmitter thatg) {\n       if (taskAttemptIDName \u003d\u003d null) {\n         return null;\n       }\n \n       TaskAttemptID taskAttemptID \u003d TaskAttemptID.forName(taskAttemptIDName);\n \n       String finishTime \u003d line.get(\"FINISH_TIME\");\n       String status \u003d line.get(\"TASK_STATUS\");\n \n       if (finishTime !\u003d null \u0026\u0026 status !\u003d null\n           \u0026\u0026 status.equalsIgnoreCase(\"success\")) {\n         String hostName \u003d line.get(\"HOSTNAME\");\n         String counters \u003d line.get(\"COUNTERS\");\n         String state \u003d line.get(\"STATE_STRING\");\n         String shuffleFinish \u003d line.get(\"SHUFFLE_FINISHED\");\n         String sortFinish \u003d line.get(\"SORT_FINISHED\");\n \n         if (finishTime !\u003d null \u0026\u0026 shuffleFinish !\u003d null \u0026\u0026 sortFinish !\u003d null\n             \u0026\u0026 \"success\".equalsIgnoreCase(status)) {\n           ReduceAttempt20LineHistoryEventEmitter that \u003d\n               (ReduceAttempt20LineHistoryEventEmitter) thatg;\n \n           return new ReduceAttemptFinishedEvent\n             (taskAttemptID,\n              that.originalTaskType, status,\n              Long.parseLong(shuffleFinish),\n              Long.parseLong(sortFinish),\n              Long.parseLong(finishTime),\n-             hostName, null,\n+             hostName, -1, null,\n              state, maybeParseCounters(counters),\n              null);\n         }\n       }\n \n       return null;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    HistoryEvent maybeEmitEvent(ParsedLine line, String taskAttemptIDName,\n        HistoryEventEmitter thatg) {\n      if (taskAttemptIDName \u003d\u003d null) {\n        return null;\n      }\n\n      TaskAttemptID taskAttemptID \u003d TaskAttemptID.forName(taskAttemptIDName);\n\n      String finishTime \u003d line.get(\"FINISH_TIME\");\n      String status \u003d line.get(\"TASK_STATUS\");\n\n      if (finishTime !\u003d null \u0026\u0026 status !\u003d null\n          \u0026\u0026 status.equalsIgnoreCase(\"success\")) {\n        String hostName \u003d line.get(\"HOSTNAME\");\n        String counters \u003d line.get(\"COUNTERS\");\n        String state \u003d line.get(\"STATE_STRING\");\n        String shuffleFinish \u003d line.get(\"SHUFFLE_FINISHED\");\n        String sortFinish \u003d line.get(\"SORT_FINISHED\");\n\n        if (finishTime !\u003d null \u0026\u0026 shuffleFinish !\u003d null \u0026\u0026 sortFinish !\u003d null\n            \u0026\u0026 \"success\".equalsIgnoreCase(status)) {\n          ReduceAttempt20LineHistoryEventEmitter that \u003d\n              (ReduceAttempt20LineHistoryEventEmitter) thatg;\n\n          return new ReduceAttemptFinishedEvent\n            (taskAttemptID,\n             that.originalTaskType, status,\n             Long.parseLong(shuffleFinish),\n             Long.parseLong(sortFinish),\n             Long.parseLong(finishTime),\n             hostName, -1, null,\n             state, maybeParseCounters(counters),\n             null);\n        }\n      }\n\n      return null;\n    }",
      "path": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/ReduceAttempt20LineHistoryEventEmitter.java",
      "extendedDetails": {}
    },
    "9db078212f5a37154925cc8872f9adaeca0ed371": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3035. Fixed MR JobHistory to ensure rack information is present. Contributed by chakravarthy.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195575 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/11 10:27 AM",
      "commitName": "9db078212f5a37154925cc8872f9adaeca0ed371",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 67.72,
      "commitsBetweenForRepo": 508,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n     HistoryEvent maybeEmitEvent(ParsedLine line, String taskAttemptIDName,\n         HistoryEventEmitter thatg) {\n       if (taskAttemptIDName \u003d\u003d null) {\n         return null;\n       }\n \n       TaskAttemptID taskAttemptID \u003d TaskAttemptID.forName(taskAttemptIDName);\n \n       String finishTime \u003d line.get(\"FINISH_TIME\");\n       String status \u003d line.get(\"TASK_STATUS\");\n \n       if (finishTime !\u003d null \u0026\u0026 status !\u003d null\n           \u0026\u0026 status.equalsIgnoreCase(\"success\")) {\n         String hostName \u003d line.get(\"HOSTNAME\");\n         String counters \u003d line.get(\"COUNTERS\");\n         String state \u003d line.get(\"STATE_STRING\");\n         String shuffleFinish \u003d line.get(\"SHUFFLE_FINISHED\");\n         String sortFinish \u003d line.get(\"SORT_FINISHED\");\n \n         if (finishTime !\u003d null \u0026\u0026 shuffleFinish !\u003d null \u0026\u0026 sortFinish !\u003d null\n             \u0026\u0026 \"success\".equalsIgnoreCase(status)) {\n           ReduceAttempt20LineHistoryEventEmitter that \u003d\n               (ReduceAttempt20LineHistoryEventEmitter) thatg;\n \n           return new ReduceAttemptFinishedEvent\n             (taskAttemptID,\n              that.originalTaskType, status,\n              Long.parseLong(shuffleFinish),\n              Long.parseLong(sortFinish),\n              Long.parseLong(finishTime),\n-             hostName,\n+             hostName, null,\n              state, maybeParseCounters(counters),\n              null);\n         }\n       }\n \n       return null;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    HistoryEvent maybeEmitEvent(ParsedLine line, String taskAttemptIDName,\n        HistoryEventEmitter thatg) {\n      if (taskAttemptIDName \u003d\u003d null) {\n        return null;\n      }\n\n      TaskAttemptID taskAttemptID \u003d TaskAttemptID.forName(taskAttemptIDName);\n\n      String finishTime \u003d line.get(\"FINISH_TIME\");\n      String status \u003d line.get(\"TASK_STATUS\");\n\n      if (finishTime !\u003d null \u0026\u0026 status !\u003d null\n          \u0026\u0026 status.equalsIgnoreCase(\"success\")) {\n        String hostName \u003d line.get(\"HOSTNAME\");\n        String counters \u003d line.get(\"COUNTERS\");\n        String state \u003d line.get(\"STATE_STRING\");\n        String shuffleFinish \u003d line.get(\"SHUFFLE_FINISHED\");\n        String sortFinish \u003d line.get(\"SORT_FINISHED\");\n\n        if (finishTime !\u003d null \u0026\u0026 shuffleFinish !\u003d null \u0026\u0026 sortFinish !\u003d null\n            \u0026\u0026 \"success\".equalsIgnoreCase(status)) {\n          ReduceAttempt20LineHistoryEventEmitter that \u003d\n              (ReduceAttempt20LineHistoryEventEmitter) thatg;\n\n          return new ReduceAttemptFinishedEvent\n            (taskAttemptID,\n             that.originalTaskType, status,\n             Long.parseLong(shuffleFinish),\n             Long.parseLong(sortFinish),\n             Long.parseLong(finishTime),\n             hostName, null,\n             state, maybeParseCounters(counters),\n             null);\n        }\n      }\n\n      return null;\n    }",
      "path": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/ReduceAttempt20LineHistoryEventEmitter.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    HistoryEvent maybeEmitEvent(ParsedLine line, String taskAttemptIDName,\n        HistoryEventEmitter thatg) {\n      if (taskAttemptIDName \u003d\u003d null) {\n        return null;\n      }\n\n      TaskAttemptID taskAttemptID \u003d TaskAttemptID.forName(taskAttemptIDName);\n\n      String finishTime \u003d line.get(\"FINISH_TIME\");\n      String status \u003d line.get(\"TASK_STATUS\");\n\n      if (finishTime !\u003d null \u0026\u0026 status !\u003d null\n          \u0026\u0026 status.equalsIgnoreCase(\"success\")) {\n        String hostName \u003d line.get(\"HOSTNAME\");\n        String counters \u003d line.get(\"COUNTERS\");\n        String state \u003d line.get(\"STATE_STRING\");\n        String shuffleFinish \u003d line.get(\"SHUFFLE_FINISHED\");\n        String sortFinish \u003d line.get(\"SORT_FINISHED\");\n\n        if (finishTime !\u003d null \u0026\u0026 shuffleFinish !\u003d null \u0026\u0026 sortFinish !\u003d null\n            \u0026\u0026 \"success\".equalsIgnoreCase(status)) {\n          ReduceAttempt20LineHistoryEventEmitter that \u003d\n              (ReduceAttempt20LineHistoryEventEmitter) thatg;\n\n          return new ReduceAttemptFinishedEvent\n            (taskAttemptID,\n             that.originalTaskType, status,\n             Long.parseLong(shuffleFinish),\n             Long.parseLong(sortFinish),\n             Long.parseLong(finishTime),\n             hostName,\n             state, maybeParseCounters(counters),\n             null);\n        }\n      }\n\n      return null;\n    }",
      "path": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/ReduceAttempt20LineHistoryEventEmitter.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/tools/org/apache/hadoop/tools/rumen/ReduceAttempt20LineHistoryEventEmitter.java",
        "newPath": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/ReduceAttempt20LineHistoryEventEmitter.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    HistoryEvent maybeEmitEvent(ParsedLine line, String taskAttemptIDName,\n        HistoryEventEmitter thatg) {\n      if (taskAttemptIDName \u003d\u003d null) {\n        return null;\n      }\n\n      TaskAttemptID taskAttemptID \u003d TaskAttemptID.forName(taskAttemptIDName);\n\n      String finishTime \u003d line.get(\"FINISH_TIME\");\n      String status \u003d line.get(\"TASK_STATUS\");\n\n      if (finishTime !\u003d null \u0026\u0026 status !\u003d null\n          \u0026\u0026 status.equalsIgnoreCase(\"success\")) {\n        String hostName \u003d line.get(\"HOSTNAME\");\n        String counters \u003d line.get(\"COUNTERS\");\n        String state \u003d line.get(\"STATE_STRING\");\n        String shuffleFinish \u003d line.get(\"SHUFFLE_FINISHED\");\n        String sortFinish \u003d line.get(\"SORT_FINISHED\");\n\n        if (finishTime !\u003d null \u0026\u0026 shuffleFinish !\u003d null \u0026\u0026 sortFinish !\u003d null\n            \u0026\u0026 \"success\".equalsIgnoreCase(status)) {\n          ReduceAttempt20LineHistoryEventEmitter that \u003d\n              (ReduceAttempt20LineHistoryEventEmitter) thatg;\n\n          return new ReduceAttemptFinishedEvent\n            (taskAttemptID,\n             that.originalTaskType, status,\n             Long.parseLong(shuffleFinish),\n             Long.parseLong(sortFinish),\n             Long.parseLong(finishTime),\n             hostName,\n             state, maybeParseCounters(counters),\n             null);\n        }\n      }\n\n      return null;\n    }",
      "path": "hadoop-mapreduce/src/tools/org/apache/hadoop/tools/rumen/ReduceAttempt20LineHistoryEventEmitter.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/tools/org/apache/hadoop/tools/rumen/ReduceAttempt20LineHistoryEventEmitter.java",
        "newPath": "hadoop-mapreduce/src/tools/org/apache/hadoop/tools/rumen/ReduceAttempt20LineHistoryEventEmitter.java"
      }
    },
    "989c5e90a58d06320e70d7746a97d9a8376c49e3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2037. Capture intermediate progress, CPU and memory usage for tasks. Contributed by Dick King. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1157253 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/11 2:05 PM",
      "commitName": "989c5e90a58d06320e70d7746a97d9a8376c49e3",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "12/06/11 3:00 PM",
      "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 60.96,
      "commitsBetweenForRepo": 225,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,38 @@\n     HistoryEvent maybeEmitEvent(ParsedLine line, String taskAttemptIDName,\n         HistoryEventEmitter thatg) {\n       if (taskAttemptIDName \u003d\u003d null) {\n         return null;\n       }\n \n       TaskAttemptID taskAttemptID \u003d TaskAttemptID.forName(taskAttemptIDName);\n \n       String finishTime \u003d line.get(\"FINISH_TIME\");\n       String status \u003d line.get(\"TASK_STATUS\");\n \n       if (finishTime !\u003d null \u0026\u0026 status !\u003d null\n           \u0026\u0026 status.equalsIgnoreCase(\"success\")) {\n         String hostName \u003d line.get(\"HOSTNAME\");\n         String counters \u003d line.get(\"COUNTERS\");\n         String state \u003d line.get(\"STATE_STRING\");\n         String shuffleFinish \u003d line.get(\"SHUFFLE_FINISHED\");\n         String sortFinish \u003d line.get(\"SORT_FINISHED\");\n \n         if (finishTime !\u003d null \u0026\u0026 shuffleFinish !\u003d null \u0026\u0026 sortFinish !\u003d null\n             \u0026\u0026 \"success\".equalsIgnoreCase(status)) {\n           ReduceAttempt20LineHistoryEventEmitter that \u003d\n               (ReduceAttempt20LineHistoryEventEmitter) thatg;\n \n-          return new ReduceAttemptFinishedEvent(taskAttemptID,\n-              that.originalTaskType, status, Long.parseLong(shuffleFinish),\n-              Long.parseLong(sortFinish), Long.parseLong(finishTime), hostName,\n-              state, maybeParseCounters(counters));\n+          return new ReduceAttemptFinishedEvent\n+            (taskAttemptID,\n+             that.originalTaskType, status,\n+             Long.parseLong(shuffleFinish),\n+             Long.parseLong(sortFinish),\n+             Long.parseLong(finishTime),\n+             hostName,\n+             state, maybeParseCounters(counters),\n+             null);\n         }\n       }\n \n       return null;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    HistoryEvent maybeEmitEvent(ParsedLine line, String taskAttemptIDName,\n        HistoryEventEmitter thatg) {\n      if (taskAttemptIDName \u003d\u003d null) {\n        return null;\n      }\n\n      TaskAttemptID taskAttemptID \u003d TaskAttemptID.forName(taskAttemptIDName);\n\n      String finishTime \u003d line.get(\"FINISH_TIME\");\n      String status \u003d line.get(\"TASK_STATUS\");\n\n      if (finishTime !\u003d null \u0026\u0026 status !\u003d null\n          \u0026\u0026 status.equalsIgnoreCase(\"success\")) {\n        String hostName \u003d line.get(\"HOSTNAME\");\n        String counters \u003d line.get(\"COUNTERS\");\n        String state \u003d line.get(\"STATE_STRING\");\n        String shuffleFinish \u003d line.get(\"SHUFFLE_FINISHED\");\n        String sortFinish \u003d line.get(\"SORT_FINISHED\");\n\n        if (finishTime !\u003d null \u0026\u0026 shuffleFinish !\u003d null \u0026\u0026 sortFinish !\u003d null\n            \u0026\u0026 \"success\".equalsIgnoreCase(status)) {\n          ReduceAttempt20LineHistoryEventEmitter that \u003d\n              (ReduceAttempt20LineHistoryEventEmitter) thatg;\n\n          return new ReduceAttemptFinishedEvent\n            (taskAttemptID,\n             that.originalTaskType, status,\n             Long.parseLong(shuffleFinish),\n             Long.parseLong(sortFinish),\n             Long.parseLong(finishTime),\n             hostName,\n             state, maybeParseCounters(counters),\n             null);\n        }\n      }\n\n      return null;\n    }",
      "path": "mapreduce/src/tools/org/apache/hadoop/tools/rumen/ReduceAttempt20LineHistoryEventEmitter.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,33 @@\n+    HistoryEvent maybeEmitEvent(ParsedLine line, String taskAttemptIDName,\n+        HistoryEventEmitter thatg) {\n+      if (taskAttemptIDName \u003d\u003d null) {\n+        return null;\n+      }\n+\n+      TaskAttemptID taskAttemptID \u003d TaskAttemptID.forName(taskAttemptIDName);\n+\n+      String finishTime \u003d line.get(\"FINISH_TIME\");\n+      String status \u003d line.get(\"TASK_STATUS\");\n+\n+      if (finishTime !\u003d null \u0026\u0026 status !\u003d null\n+          \u0026\u0026 status.equalsIgnoreCase(\"success\")) {\n+        String hostName \u003d line.get(\"HOSTNAME\");\n+        String counters \u003d line.get(\"COUNTERS\");\n+        String state \u003d line.get(\"STATE_STRING\");\n+        String shuffleFinish \u003d line.get(\"SHUFFLE_FINISHED\");\n+        String sortFinish \u003d line.get(\"SORT_FINISHED\");\n+\n+        if (finishTime !\u003d null \u0026\u0026 shuffleFinish !\u003d null \u0026\u0026 sortFinish !\u003d null\n+            \u0026\u0026 \"success\".equalsIgnoreCase(status)) {\n+          ReduceAttempt20LineHistoryEventEmitter that \u003d\n+              (ReduceAttempt20LineHistoryEventEmitter) thatg;\n+\n+          return new ReduceAttemptFinishedEvent(taskAttemptID,\n+              that.originalTaskType, status, Long.parseLong(shuffleFinish),\n+              Long.parseLong(sortFinish), Long.parseLong(finishTime), hostName,\n+              state, maybeParseCounters(counters));\n+        }\n+      }\n+\n+      return null;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    HistoryEvent maybeEmitEvent(ParsedLine line, String taskAttemptIDName,\n        HistoryEventEmitter thatg) {\n      if (taskAttemptIDName \u003d\u003d null) {\n        return null;\n      }\n\n      TaskAttemptID taskAttemptID \u003d TaskAttemptID.forName(taskAttemptIDName);\n\n      String finishTime \u003d line.get(\"FINISH_TIME\");\n      String status \u003d line.get(\"TASK_STATUS\");\n\n      if (finishTime !\u003d null \u0026\u0026 status !\u003d null\n          \u0026\u0026 status.equalsIgnoreCase(\"success\")) {\n        String hostName \u003d line.get(\"HOSTNAME\");\n        String counters \u003d line.get(\"COUNTERS\");\n        String state \u003d line.get(\"STATE_STRING\");\n        String shuffleFinish \u003d line.get(\"SHUFFLE_FINISHED\");\n        String sortFinish \u003d line.get(\"SORT_FINISHED\");\n\n        if (finishTime !\u003d null \u0026\u0026 shuffleFinish !\u003d null \u0026\u0026 sortFinish !\u003d null\n            \u0026\u0026 \"success\".equalsIgnoreCase(status)) {\n          ReduceAttempt20LineHistoryEventEmitter that \u003d\n              (ReduceAttempt20LineHistoryEventEmitter) thatg;\n\n          return new ReduceAttemptFinishedEvent(taskAttemptID,\n              that.originalTaskType, status, Long.parseLong(shuffleFinish),\n              Long.parseLong(sortFinish), Long.parseLong(finishTime), hostName,\n              state, maybeParseCounters(counters));\n        }\n      }\n\n      return null;\n    }",
      "path": "mapreduce/src/tools/org/apache/hadoop/tools/rumen/ReduceAttempt20LineHistoryEventEmitter.java"
    }
  }
}