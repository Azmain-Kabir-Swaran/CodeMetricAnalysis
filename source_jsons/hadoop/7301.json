{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EditLogTailer.java",
  "functionName": "getActiveNodeProxy",
  "functionId": "getActiveNodeProxy",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
  "functionStartLine": 585,
  "functionEndLine": 612,
  "numCommitsSeen": 51,
  "timeTaken": 2332,
  "changeHistory": [
    "8f2622b6a0603f92e8b5784879da28d3d5797fc1",
    "49dfad942970459297f72632ed8dfd353e0c86de",
    "4f6397b4ac60cfe300c8dd00437eb46b6d0aac56",
    "8c0366bf103ca638b5ef9e962671f7728db4fd10",
    "c3e62de9ce952aa8572b3cae6a8497b8fdef40aa"
  ],
  "changeHistoryShort": {
    "8f2622b6a0603f92e8b5784879da28d3d5797fc1": "Ybodychange",
    "49dfad942970459297f72632ed8dfd353e0c86de": "Ybodychange",
    "4f6397b4ac60cfe300c8dd00437eb46b6d0aac56": "Ybodychange",
    "8c0366bf103ca638b5ef9e962671f7728db4fd10": "Ybodychange",
    "c3e62de9ce952aa8572b3cae6a8497b8fdef40aa": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8f2622b6a0603f92e8b5784879da28d3d5797fc1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9659. EditLogTailerThread to Active Namenode RPC should timeout (Contributed by surendra singh lilhore)\n",
      "commitDate": "01/02/16 12:40 AM",
      "commitName": "8f2622b6a0603f92e8b5784879da28d3d5797fc1",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "29/10/15 11:23 AM",
      "commitNameOld": "8def51a708e5de8a57689b8c9b3fd034cfd2cd78",
      "commitAuthorOld": "Zhe Zhang",
      "daysBetweenCommits": 94.6,
      "commitsBetweenForRepo": 587,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,28 @@\n     private NamenodeProtocol getActiveNodeProxy() throws IOException {\n       if (cachedActiveProxy \u003d\u003d null) {\n         while (true) {\n           // if we have reached the max loop count, quit by returning null\n           if ((nnLoopCount / nnCount) \u003e\u003d maxRetries) {\n             return null;\n           }\n \n           currentNN \u003d nnLookup.next();\n           try {\n+            int rpcTimeout \u003d conf.getInt(\n+                DFSConfigKeys.DFS_HA_LOGROLL_RPC_TIMEOUT_KEY,\n+                DFSConfigKeys.DFS_HA_LOGROLL_RPC_TIMEOUT_DEFAULT);\n             NamenodeProtocolPB proxy \u003d RPC.waitForProxy(NamenodeProtocolPB.class,\n-                RPC.getProtocolVersion(NamenodeProtocolPB.class), currentNN.getIpcAddress(), conf);\n+                RPC.getProtocolVersion(NamenodeProtocolPB.class), currentNN.getIpcAddress(), conf,\n+                rpcTimeout, Long.MAX_VALUE);\n             cachedActiveProxy \u003d new NamenodeProtocolTranslatorPB(proxy);\n             break;\n           } catch (IOException e) {\n             LOG.info(\"Failed to reach \" + currentNN, e);\n             // couldn\u0027t even reach this NN, try the next one\n             nnLoopCount++;\n           }\n         }\n       }\n       assert cachedActiveProxy !\u003d null;\n       return cachedActiveProxy;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private NamenodeProtocol getActiveNodeProxy() throws IOException {\n      if (cachedActiveProxy \u003d\u003d null) {\n        while (true) {\n          // if we have reached the max loop count, quit by returning null\n          if ((nnLoopCount / nnCount) \u003e\u003d maxRetries) {\n            return null;\n          }\n\n          currentNN \u003d nnLookup.next();\n          try {\n            int rpcTimeout \u003d conf.getInt(\n                DFSConfigKeys.DFS_HA_LOGROLL_RPC_TIMEOUT_KEY,\n                DFSConfigKeys.DFS_HA_LOGROLL_RPC_TIMEOUT_DEFAULT);\n            NamenodeProtocolPB proxy \u003d RPC.waitForProxy(NamenodeProtocolPB.class,\n                RPC.getProtocolVersion(NamenodeProtocolPB.class), currentNN.getIpcAddress(), conf,\n                rpcTimeout, Long.MAX_VALUE);\n            cachedActiveProxy \u003d new NamenodeProtocolTranslatorPB(proxy);\n            break;\n          } catch (IOException e) {\n            LOG.info(\"Failed to reach \" + currentNN, e);\n            // couldn\u0027t even reach this NN, try the next one\n            nnLoopCount++;\n          }\n        }\n      }\n      assert cachedActiveProxy !\u003d null;\n      return cachedActiveProxy;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "extendedDetails": {}
    },
    "49dfad942970459297f72632ed8dfd353e0c86de": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6440. Support more than 2 NameNodes. Contributed by Jesse Yates.\n",
      "commitDate": "23/06/15 5:26 PM",
      "commitName": "49dfad942970459297f72632ed8dfd353e0c86de",
      "commitAuthor": "Aaron T. Myers",
      "commitDateOld": "02/05/15 10:03 AM",
      "commitNameOld": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 52.31,
      "commitsBetweenForRepo": 466,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,24 @@\n-  private NamenodeProtocol getActiveNodeProxy() throws IOException {\n-    if (cachedActiveProxy \u003d\u003d null) {\n-      int rpcTimeout \u003d conf.getInt(\n-          DFSConfigKeys.DFS_HA_LOGROLL_RPC_TIMEOUT_KEY,\n-          DFSConfigKeys.DFS_HA_LOGROLL_RPC_TIMEOUT_DEFAULT);\n-      NamenodeProtocolPB proxy \u003d RPC.waitForProxy(NamenodeProtocolPB.class,\n-          RPC.getProtocolVersion(NamenodeProtocolPB.class), activeAddr, conf,\n-          rpcTimeout, Long.MAX_VALUE);\n-      cachedActiveProxy \u003d new NamenodeProtocolTranslatorPB(proxy);\n-    }\n-    assert cachedActiveProxy !\u003d null;\n-    return cachedActiveProxy;\n-  }\n\\ No newline at end of file\n+    private NamenodeProtocol getActiveNodeProxy() throws IOException {\n+      if (cachedActiveProxy \u003d\u003d null) {\n+        while (true) {\n+          // if we have reached the max loop count, quit by returning null\n+          if ((nnLoopCount / nnCount) \u003e\u003d maxRetries) {\n+            return null;\n+          }\n+\n+          currentNN \u003d nnLookup.next();\n+          try {\n+            NamenodeProtocolPB proxy \u003d RPC.waitForProxy(NamenodeProtocolPB.class,\n+                RPC.getProtocolVersion(NamenodeProtocolPB.class), currentNN.getIpcAddress(), conf);\n+            cachedActiveProxy \u003d new NamenodeProtocolTranslatorPB(proxy);\n+            break;\n+          } catch (IOException e) {\n+            LOG.info(\"Failed to reach \" + currentNN, e);\n+            // couldn\u0027t even reach this NN, try the next one\n+            nnLoopCount++;\n+          }\n+        }\n+      }\n+      assert cachedActiveProxy !\u003d null;\n+      return cachedActiveProxy;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private NamenodeProtocol getActiveNodeProxy() throws IOException {\n      if (cachedActiveProxy \u003d\u003d null) {\n        while (true) {\n          // if we have reached the max loop count, quit by returning null\n          if ((nnLoopCount / nnCount) \u003e\u003d maxRetries) {\n            return null;\n          }\n\n          currentNN \u003d nnLookup.next();\n          try {\n            NamenodeProtocolPB proxy \u003d RPC.waitForProxy(NamenodeProtocolPB.class,\n                RPC.getProtocolVersion(NamenodeProtocolPB.class), currentNN.getIpcAddress(), conf);\n            cachedActiveProxy \u003d new NamenodeProtocolTranslatorPB(proxy);\n            break;\n          } catch (IOException e) {\n            LOG.info(\"Failed to reach \" + currentNN, e);\n            // couldn\u0027t even reach this NN, try the next one\n            nnLoopCount++;\n          }\n        }\n      }\n      assert cachedActiveProxy !\u003d null;\n      return cachedActiveProxy;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "extendedDetails": {}
    },
    "4f6397b4ac60cfe300c8dd00437eb46b6d0aac56": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6089. Standby NN while transitioning to active throws a connection refused error when the prior active NN process is suspended. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579692 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/03/14 10:43 AM",
      "commitName": "4f6397b4ac60cfe300c8dd00437eb46b6d0aac56",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "20/01/14 6:38 PM",
      "commitNameOld": "d8bc523754181b4c1321bcfab886ebf228d9c98f",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 58.63,
      "commitsBetweenForRepo": 524,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,13 @@\n   private NamenodeProtocol getActiveNodeProxy() throws IOException {\n     if (cachedActiveProxy \u003d\u003d null) {\n-      NamenodeProtocolPB proxy \u003d \n-        RPC.waitForProxy(NamenodeProtocolPB.class,\n-            RPC.getProtocolVersion(NamenodeProtocolPB.class), activeAddr, conf);\n+      int rpcTimeout \u003d conf.getInt(\n+          DFSConfigKeys.DFS_HA_LOGROLL_RPC_TIMEOUT_KEY,\n+          DFSConfigKeys.DFS_HA_LOGROLL_RPC_TIMEOUT_DEFAULT);\n+      NamenodeProtocolPB proxy \u003d RPC.waitForProxy(NamenodeProtocolPB.class,\n+          RPC.getProtocolVersion(NamenodeProtocolPB.class), activeAddr, conf,\n+          rpcTimeout, Long.MAX_VALUE);\n       cachedActiveProxy \u003d new NamenodeProtocolTranslatorPB(proxy);\n     }\n     assert cachedActiveProxy !\u003d null;\n     return cachedActiveProxy;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private NamenodeProtocol getActiveNodeProxy() throws IOException {\n    if (cachedActiveProxy \u003d\u003d null) {\n      int rpcTimeout \u003d conf.getInt(\n          DFSConfigKeys.DFS_HA_LOGROLL_RPC_TIMEOUT_KEY,\n          DFSConfigKeys.DFS_HA_LOGROLL_RPC_TIMEOUT_DEFAULT);\n      NamenodeProtocolPB proxy \u003d RPC.waitForProxy(NamenodeProtocolPB.class,\n          RPC.getProtocolVersion(NamenodeProtocolPB.class), activeAddr, conf,\n          rpcTimeout, Long.MAX_VALUE);\n      cachedActiveProxy \u003d new NamenodeProtocolTranslatorPB(proxy);\n    }\n    assert cachedActiveProxy !\u003d null;\n    return cachedActiveProxy;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "extendedDetails": {}
    },
    "8c0366bf103ca638b5ef9e962671f7728db4fd10": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3168. Remove unnecessary \"throw IOException\" and change fields to final in FSNamesystem and BlockManager. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1309218 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/04/12 7:51 PM",
      "commitName": "8c0366bf103ca638b5ef9e962671f7728db4fd10",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "09/02/12 10:22 AM",
      "commitNameOld": "5e26de982b1ab68fffeb897fef4c97458ad46708",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 54.35,
      "commitsBetweenForRepo": 384,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,10 @@\n   private NamenodeProtocol getActiveNodeProxy() throws IOException {\n     if (cachedActiveProxy \u003d\u003d null) {\n-      Configuration conf \u003d namesystem.getConf();\n       NamenodeProtocolPB proxy \u003d \n         RPC.waitForProxy(NamenodeProtocolPB.class,\n             RPC.getProtocolVersion(NamenodeProtocolPB.class), activeAddr, conf);\n       cachedActiveProxy \u003d new NamenodeProtocolTranslatorPB(proxy);\n     }\n     assert cachedActiveProxy !\u003d null;\n     return cachedActiveProxy;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private NamenodeProtocol getActiveNodeProxy() throws IOException {\n    if (cachedActiveProxy \u003d\u003d null) {\n      NamenodeProtocolPB proxy \u003d \n        RPC.waitForProxy(NamenodeProtocolPB.class,\n            RPC.getProtocolVersion(NamenodeProtocolPB.class), activeAddr, conf);\n      cachedActiveProxy \u003d new NamenodeProtocolTranslatorPB(proxy);\n    }\n    assert cachedActiveProxy !\u003d null;\n    return cachedActiveProxy;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "extendedDetails": {}
    },
    "c3e62de9ce952aa8572b3cae6a8497b8fdef40aa": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2737. Automatically trigger log rolls periodically on the active NN. Contributed by Todd Lipcon and Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1234256 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/01/12 7:17 PM",
      "commitName": "c3e62de9ce952aa8572b3cae6a8497b8fdef40aa",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,11 @@\n+  private NamenodeProtocol getActiveNodeProxy() throws IOException {\n+    if (cachedActiveProxy \u003d\u003d null) {\n+      Configuration conf \u003d namesystem.getConf();\n+      NamenodeProtocolPB proxy \u003d \n+        RPC.waitForProxy(NamenodeProtocolPB.class,\n+            RPC.getProtocolVersion(NamenodeProtocolPB.class), activeAddr, conf);\n+      cachedActiveProxy \u003d new NamenodeProtocolTranslatorPB(proxy);\n+    }\n+    assert cachedActiveProxy !\u003d null;\n+    return cachedActiveProxy;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private NamenodeProtocol getActiveNodeProxy() throws IOException {\n    if (cachedActiveProxy \u003d\u003d null) {\n      Configuration conf \u003d namesystem.getConf();\n      NamenodeProtocolPB proxy \u003d \n        RPC.waitForProxy(NamenodeProtocolPB.class,\n            RPC.getProtocolVersion(NamenodeProtocolPB.class), activeAddr, conf);\n      cachedActiveProxy \u003d new NamenodeProtocolTranslatorPB(proxy);\n    }\n    assert cachedActiveProxy !\u003d null;\n    return cachedActiveProxy;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java"
    }
  }
}