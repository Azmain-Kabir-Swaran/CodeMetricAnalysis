{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileWithSnapshotFeature.java",
  "functionName": "changedBetweenSnapshots",
  "functionId": "changedBetweenSnapshots___file-INodeFile__from-Snapshot__to-Snapshot",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java",
  "functionStartLine": 84,
  "functionEndLine": 116,
  "numCommitsSeen": 29,
  "timeTaken": 2085,
  "changeHistory": [
    "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252",
    "8a83bb7ad6177f473c20c4cc9c0f46746224332c"
  ],
  "changeHistoryShort": {
    "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252": "Ybodychange",
    "8a83bb7ad6177f473c20c4cc9c0f46746224332c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13142. Define and Implement a DiifList Interface to store and manage SnapshotDiffs.  Contributed by Shashikant Banerjee\n",
      "commitDate": "15/02/18 3:33 AM",
      "commitName": "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "12/02/16 11:07 AM",
      "commitNameOld": "972782d9568e0849484c027f27c1638ba50ec56e",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 733.68,
      "commitsBetweenForRepo": 4875,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   boolean changedBetweenSnapshots(INodeFile file, Snapshot from, Snapshot to) {\n     int[] diffIndexPair \u003d diffs.changedBetweenSnapshots(from, to);\n     if (diffIndexPair \u003d\u003d null) {\n       return false;\n     }\n     int earlierDiffIndex \u003d diffIndexPair[0];\n     int laterDiffIndex \u003d diffIndexPair[1];\n \n-    final List\u003cFileDiff\u003e diffList \u003d diffs.asList();\n+    final DiffList\u003cFileDiff\u003e diffList \u003d diffs.asList();\n     final long earlierLength \u003d diffList.get(earlierDiffIndex).getFileSize();\n     final long laterLength \u003d laterDiffIndex \u003d\u003d diffList.size() ? file\n         .computeFileSize(true, false) : diffList.get(laterDiffIndex)\n         .getFileSize();\n     if (earlierLength !\u003d laterLength) { // file length has been changed\n       return true;\n     }\n \n     INodeFileAttributes earlierAttr \u003d null; // check the metadata\n     for (int i \u003d earlierDiffIndex; i \u003c laterDiffIndex; i++) {\n       FileDiff diff \u003d diffList.get(i);\n       if (diff.snapshotINode !\u003d null) {\n         earlierAttr \u003d diff.snapshotINode;\n         break;\n       }\n     }\n     if (earlierAttr \u003d\u003d null) { // no meta-change at all, return false\n       return false;\n     }\n     INodeFileAttributes laterAttr \u003d diffs.getSnapshotINode(\n         Math.max(Snapshot.getSnapshotId(from), Snapshot.getSnapshotId(to)),\n         file);\n     return !earlierAttr.metadataEquals(laterAttr);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean changedBetweenSnapshots(INodeFile file, Snapshot from, Snapshot to) {\n    int[] diffIndexPair \u003d diffs.changedBetweenSnapshots(from, to);\n    if (diffIndexPair \u003d\u003d null) {\n      return false;\n    }\n    int earlierDiffIndex \u003d diffIndexPair[0];\n    int laterDiffIndex \u003d diffIndexPair[1];\n\n    final DiffList\u003cFileDiff\u003e diffList \u003d diffs.asList();\n    final long earlierLength \u003d diffList.get(earlierDiffIndex).getFileSize();\n    final long laterLength \u003d laterDiffIndex \u003d\u003d diffList.size() ? file\n        .computeFileSize(true, false) : diffList.get(laterDiffIndex)\n        .getFileSize();\n    if (earlierLength !\u003d laterLength) { // file length has been changed\n      return true;\n    }\n\n    INodeFileAttributes earlierAttr \u003d null; // check the metadata\n    for (int i \u003d earlierDiffIndex; i \u003c laterDiffIndex; i++) {\n      FileDiff diff \u003d diffList.get(i);\n      if (diff.snapshotINode !\u003d null) {\n        earlierAttr \u003d diff.snapshotINode;\n        break;\n      }\n    }\n    if (earlierAttr \u003d\u003d null) { // no meta-change at all, return false\n      return false;\n    }\n    INodeFileAttributes laterAttr \u003d diffs.getSnapshotINode(\n        Math.max(Snapshot.getSnapshotId(from), Snapshot.getSnapshotId(to)),\n        file);\n    return !earlierAttr.metadataEquals(laterAttr);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java",
      "extendedDetails": {}
    },
    "8a83bb7ad6177f473c20c4cc9c0f46746224332c": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4667. Capture renamed files/directories in snapshot diff report. Contributed by Jing Zhao and Binglin Chang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1604488 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/06/14 3:59 PM",
      "commitName": "8a83bb7ad6177f473c20c4cc9c0f46746224332c",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,33 @@\n+  boolean changedBetweenSnapshots(INodeFile file, Snapshot from, Snapshot to) {\n+    int[] diffIndexPair \u003d diffs.changedBetweenSnapshots(from, to);\n+    if (diffIndexPair \u003d\u003d null) {\n+      return false;\n+    }\n+    int earlierDiffIndex \u003d diffIndexPair[0];\n+    int laterDiffIndex \u003d diffIndexPair[1];\n+\n+    final List\u003cFileDiff\u003e diffList \u003d diffs.asList();\n+    final long earlierLength \u003d diffList.get(earlierDiffIndex).getFileSize();\n+    final long laterLength \u003d laterDiffIndex \u003d\u003d diffList.size() ? file\n+        .computeFileSize(true, false) : diffList.get(laterDiffIndex)\n+        .getFileSize();\n+    if (earlierLength !\u003d laterLength) { // file length has been changed\n+      return true;\n+    }\n+\n+    INodeFileAttributes earlierAttr \u003d null; // check the metadata\n+    for (int i \u003d earlierDiffIndex; i \u003c laterDiffIndex; i++) {\n+      FileDiff diff \u003d diffList.get(i);\n+      if (diff.snapshotINode !\u003d null) {\n+        earlierAttr \u003d diff.snapshotINode;\n+        break;\n+      }\n+    }\n+    if (earlierAttr \u003d\u003d null) { // no meta-change at all, return false\n+      return false;\n+    }\n+    INodeFileAttributes laterAttr \u003d diffs.getSnapshotINode(\n+        Math.max(Snapshot.getSnapshotId(from), Snapshot.getSnapshotId(to)),\n+        file);\n+    return !earlierAttr.metadataEquals(laterAttr);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  boolean changedBetweenSnapshots(INodeFile file, Snapshot from, Snapshot to) {\n    int[] diffIndexPair \u003d diffs.changedBetweenSnapshots(from, to);\n    if (diffIndexPair \u003d\u003d null) {\n      return false;\n    }\n    int earlierDiffIndex \u003d diffIndexPair[0];\n    int laterDiffIndex \u003d diffIndexPair[1];\n\n    final List\u003cFileDiff\u003e diffList \u003d diffs.asList();\n    final long earlierLength \u003d diffList.get(earlierDiffIndex).getFileSize();\n    final long laterLength \u003d laterDiffIndex \u003d\u003d diffList.size() ? file\n        .computeFileSize(true, false) : diffList.get(laterDiffIndex)\n        .getFileSize();\n    if (earlierLength !\u003d laterLength) { // file length has been changed\n      return true;\n    }\n\n    INodeFileAttributes earlierAttr \u003d null; // check the metadata\n    for (int i \u003d earlierDiffIndex; i \u003c laterDiffIndex; i++) {\n      FileDiff diff \u003d diffList.get(i);\n      if (diff.snapshotINode !\u003d null) {\n        earlierAttr \u003d diff.snapshotINode;\n        break;\n      }\n    }\n    if (earlierAttr \u003d\u003d null) { // no meta-change at all, return false\n      return false;\n    }\n    INodeFileAttributes laterAttr \u003d diffs.getSnapshotINode(\n        Math.max(Snapshot.getSnapshotId(from), Snapshot.getSnapshotId(to)),\n        file);\n    return !earlierAttr.metadataEquals(laterAttr);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java"
    }
  }
}