{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InMemoryStore.java",
  "functionName": "deleteHistory",
  "functionId": "deleteHistory___recurrenceId-RecurrenceId(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-resourceestimator/src/main/java/org/apache/hadoop/resourceestimator/skylinestore/impl/InMemoryStore.java",
  "functionStartLine": 137,
  "functionEndLine": 156,
  "numCommitsSeen": 1,
  "timeTaken": 419,
  "changeHistory": [
    "625039ef20e6011ab360131d70582a6e4bf2ec1d"
  ],
  "changeHistoryShort": {
    "625039ef20e6011ab360131d70582a6e4bf2ec1d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "625039ef20e6011ab360131d70582a6e4bf2ec1d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14840. Tool to estimate resource requirements of an application pipeline based on prior executions. (Rui Li via Subru).\n",
      "commitDate": "25/10/17 3:51 PM",
      "commitName": "625039ef20e6011ab360131d70582a6e4bf2ec1d",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,20 @@\n+  @Override public final void deleteHistory(final RecurrenceId recurrenceId)\n+      throws SkylineStoreException {\n+    inputValidator.validate(recurrenceId);\n+    writeLock.lock();\n+    try {\n+      if (skylineStore.containsKey(recurrenceId)) {\n+        skylineStore.remove(recurrenceId);\n+        LOGGER.warn(\"Delete resource skylines for {}.\", recurrenceId);\n+      } else {\n+        StringBuilder errMsg \u003d new StringBuilder();\n+        errMsg.append(\n+            \"Trying to deleteHistory non-existing recurring pipeline  \"\n+                + recurrenceId + \"\\\u0027s resource skylines\");\n+        LOGGER.error(errMsg.toString());\n+        throw new RecurrenceIdNotFoundException(errMsg.toString());\n+      }\n+    } finally {\n+      writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  @Override public final void deleteHistory(final RecurrenceId recurrenceId)\n      throws SkylineStoreException {\n    inputValidator.validate(recurrenceId);\n    writeLock.lock();\n    try {\n      if (skylineStore.containsKey(recurrenceId)) {\n        skylineStore.remove(recurrenceId);\n        LOGGER.warn(\"Delete resource skylines for {}.\", recurrenceId);\n      } else {\n        StringBuilder errMsg \u003d new StringBuilder();\n        errMsg.append(\n            \"Trying to deleteHistory non-existing recurring pipeline  \"\n                + recurrenceId + \"\\\u0027s resource skylines\");\n        LOGGER.error(errMsg.toString());\n        throw new RecurrenceIdNotFoundException(errMsg.toString());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-tools/hadoop-resourceestimator/src/main/java/org/apache/hadoop/resourceestimator/skylinestore/impl/InMemoryStore.java"
    }
  }
}