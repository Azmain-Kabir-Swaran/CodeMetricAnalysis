{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineDataManager.java",
  "functionName": "getDomain",
  "functionId": "getDomain___domainId-String__callerUGI-UserGroupInformation",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/TimelineDataManager.java",
  "functionStartLine": 438,
  "functionEndLine": 447,
  "numCommitsSeen": 15,
  "timeTaken": 1716,
  "changeHistory": [
    "4c659ddbf7629aae92e66a5b54893e9c1c68dfb0",
    "233d446be1bc1bc77c7c1c45386086a732897afd",
    "d78b452a4f413c6931a494c33df0666ce9b44973"
  ],
  "changeHistoryShort": {
    "4c659ddbf7629aae92e66a5b54893e9c1c68dfb0": "Ybodychange",
    "233d446be1bc1bc77c7c1c45386086a732897afd": "Ybodychange",
    "d78b452a4f413c6931a494c33df0666ce9b44973": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4c659ddbf7629aae92e66a5b54893e9c1c68dfb0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3360. Add JMX metrics to TimelineDataManager (Jason Lowe via jeagles)\n",
      "commitDate": "24/06/15 2:16 PM",
      "commitName": "4c659ddbf7629aae92e66a5b54893e9c1c68dfb0",
      "commitAuthor": "Jonathan Eagles",
      "commitDateOld": "07/05/15 10:01 AM",
      "commitNameOld": "daf3e4ef8bf73cbe4a799d51b4765809cd81089f",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 48.18,
      "commitsBetweenForRepo": 425,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   public TimelineDomain getDomain(String domainId,\n       UserGroupInformation callerUGI) throws YarnException, IOException {\n-    TimelineDomain domain \u003d store.getDomain(domainId);\n-    if (domain !\u003d null) {\n-      if (timelineACLsManager.checkAccess(callerUGI, domain)) {\n-        return domain;\n-      }\n+    long startTime \u003d Time.monotonicNow();\n+    metrics.incrGetDomainOps();\n+    try {\n+      return doGetDomain(domainId, callerUGI);\n+    } finally {\n+      metrics.addGetDomainTime(Time.monotonicNow() - startTime);\n     }\n-    return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineDomain getDomain(String domainId,\n      UserGroupInformation callerUGI) throws YarnException, IOException {\n    long startTime \u003d Time.monotonicNow();\n    metrics.incrGetDomainOps();\n    try {\n      return doGetDomain(domainId, callerUGI);\n    } finally {\n      metrics.addGetDomainTime(Time.monotonicNow() - startTime);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/TimelineDataManager.java",
      "extendedDetails": {}
    },
    "233d446be1bc1bc77c7c1c45386086a732897afd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2621. Simplify the output when the user doesn\u0027t have the access for getDomain(s). Contributed by Zhijie Shen\n",
      "commitDate": "16/10/14 4:37 PM",
      "commitName": "233d446be1bc1bc77c7c1c45386086a732897afd",
      "commitAuthor": "Jian He",
      "commitDateOld": "01/10/14 5:52 PM",
      "commitNameOld": "9e40de6af7959ac7bb5f4e4d2833ca14ea457614",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 14.95,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,10 @@\n   public TimelineDomain getDomain(String domainId,\n       UserGroupInformation callerUGI) throws YarnException, IOException {\n     TimelineDomain domain \u003d store.getDomain(domainId);\n     if (domain !\u003d null) {\n       if (timelineACLsManager.checkAccess(callerUGI, domain)) {\n         return domain;\n-      } else {\n-        hideDomainDetails(domain);\n-        return domain;\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineDomain getDomain(String domainId,\n      UserGroupInformation callerUGI) throws YarnException, IOException {\n    TimelineDomain domain \u003d store.getDomain(domainId);\n    if (domain !\u003d null) {\n      if (timelineACLsManager.checkAccess(callerUGI, domain)) {\n        return domain;\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/TimelineDataManager.java",
      "extendedDetails": {}
    },
    "d78b452a4f413c6931a494c33df0666ce9b44973": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2102. Added the concept of a Timeline Domain to handle read/write ACLs on Timeline service event data. Contributed by Zhijie Shen.\n",
      "commitDate": "24/09/14 11:27 AM",
      "commitName": "d78b452a4f413c6931a494c33df0666ce9b44973",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,13 @@\n+  public TimelineDomain getDomain(String domainId,\n+      UserGroupInformation callerUGI) throws YarnException, IOException {\n+    TimelineDomain domain \u003d store.getDomain(domainId);\n+    if (domain !\u003d null) {\n+      if (timelineACLsManager.checkAccess(callerUGI, domain)) {\n+        return domain;\n+      } else {\n+        hideDomainDetails(domain);\n+        return domain;\n+      }\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineDomain getDomain(String domainId,\n      UserGroupInformation callerUGI) throws YarnException, IOException {\n    TimelineDomain domain \u003d store.getDomain(domainId);\n    if (domain !\u003d null) {\n      if (timelineACLsManager.checkAccess(callerUGI, domain)) {\n        return domain;\n      } else {\n        hideDomainDetails(domain);\n        return domain;\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/TimelineDataManager.java"
    }
  }
}