{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AFileSystem.java",
  "functionName": "listAWSPolicyRules",
  "functionId": "listAWSPolicyRules___access-Set__AccessLevel__(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
  "functionStartLine": 3389,
  "functionEndLine": 3410,
  "numCommitsSeen": 141,
  "timeTaken": 2844,
  "changeHistory": [
    "6d0bffe17eadedd60d4599427248b0db4a7c5502"
  ],
  "changeHistoryShort": {
    "6d0bffe17eadedd60d4599427248b0db4a7c5502": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6d0bffe17eadedd60d4599427248b0db4a7c5502": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14556. S3A to support Delegation Tokens.\n\nContributed by Steve Loughran and Daryn Sharp.\n",
      "commitDate": "14/01/19 9:59 AM",
      "commitName": "6d0bffe17eadedd60d4599427248b0db4a7c5502",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,22 @@\n+  public List\u003cRoleModel.Statement\u003e listAWSPolicyRules(\n+      final Set\u003cAccessLevel\u003e access) {\n+    if (access.isEmpty()) {\n+      return Collections.emptyList();\n+    }\n+    List\u003cRoleModel.Statement\u003e statements \u003d new ArrayList\u003c\u003e(\n+        allowS3Operations(bucket,\n+            access.contains(AccessLevel.WRITE)\n+                || access.contains(AccessLevel.ADMIN)));\n+\n+    // no attempt is made to qualify KMS access; there\u0027s no\n+    // way to predict read keys, and not worried about granting\n+    // too much encryption access.\n+    statements.add(STATEMENT_ALLOW_SSE_KMS_RW);\n+\n+    // add any metastore policies\n+    if (metadataStore instanceof AWSPolicyProvider) {\n+      statements.addAll(\n+          ((AWSPolicyProvider) metadataStore).listAWSPolicyRules(access));\n+    }\n+    return statements;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cRoleModel.Statement\u003e listAWSPolicyRules(\n      final Set\u003cAccessLevel\u003e access) {\n    if (access.isEmpty()) {\n      return Collections.emptyList();\n    }\n    List\u003cRoleModel.Statement\u003e statements \u003d new ArrayList\u003c\u003e(\n        allowS3Operations(bucket,\n            access.contains(AccessLevel.WRITE)\n                || access.contains(AccessLevel.ADMIN)));\n\n    // no attempt is made to qualify KMS access; there\u0027s no\n    // way to predict read keys, and not worried about granting\n    // too much encryption access.\n    statements.add(STATEMENT_ALLOW_SSE_KMS_RW);\n\n    // add any metastore policies\n    if (metadataStore instanceof AWSPolicyProvider) {\n      statements.addAll(\n          ((AWSPolicyProvider) metadataStore).listAWSPolicyRules(access));\n    }\n    return statements;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java"
    }
  }
}