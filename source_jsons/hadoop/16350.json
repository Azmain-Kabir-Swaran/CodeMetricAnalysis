{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterClientProtocol.java",
  "functionName": "createSymlink",
  "functionId": "createSymlink___target-String__link-String__dirPerms-FsPermission__createParent-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
  "functionStartLine": 1266,
  "functionEndLine": 1281,
  "numCommitsSeen": 40,
  "timeTaken": 1672,
  "changeHistory": [
    "6425ed27ea638da75f656204d6df4adad1d91fe1"
  ],
  "changeHistoryShort": {
    "6425ed27ea638da75f656204d6df4adad1d91fe1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6425ed27ea638da75f656204d6df4adad1d91fe1": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13790. RBF: Move ClientProtocol APIs to its own module. Contributed by Chao Sun.\n",
      "commitDate": "19/08/18 11:50 PM",
      "commitName": "6425ed27ea638da75f656204d6df4adad1d91fe1",
      "commitAuthor": "Brahma Reddy Battula",
      "diff": "@@ -0,0 +1,16 @@\n+  public void createSymlink(String target, String link, FsPermission dirPerms,\n+      boolean createParent) throws IOException {\n+    rpcServer.checkOperation(NameNode.OperationCategory.WRITE);\n+\n+    // TODO Verify that the link location is in the same NS as the targets\n+    final List\u003cRemoteLocation\u003e targetLocations \u003d\n+        rpcServer.getLocationsForPath(target, true);\n+    final List\u003cRemoteLocation\u003e linkLocations \u003d\n+        rpcServer.getLocationsForPath(link, true);\n+    RemoteLocation linkLocation \u003d linkLocations.get(0);\n+    RemoteMethod method \u003d new RemoteMethod(\"createSymlink\",\n+        new Class\u003c?\u003e[] {String.class, String.class, FsPermission.class,\n+            boolean.class},\n+        new RemoteParam(), linkLocation.getDest(), dirPerms, createParent);\n+    rpcClient.invokeSequential(targetLocations, method);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void createSymlink(String target, String link, FsPermission dirPerms,\n      boolean createParent) throws IOException {\n    rpcServer.checkOperation(NameNode.OperationCategory.WRITE);\n\n    // TODO Verify that the link location is in the same NS as the targets\n    final List\u003cRemoteLocation\u003e targetLocations \u003d\n        rpcServer.getLocationsForPath(target, true);\n    final List\u003cRemoteLocation\u003e linkLocations \u003d\n        rpcServer.getLocationsForPath(link, true);\n    RemoteLocation linkLocation \u003d linkLocations.get(0);\n    RemoteMethod method \u003d new RemoteMethod(\"createSymlink\",\n        new Class\u003c?\u003e[] {String.class, String.class, FsPermission.class,\n            boolean.class},\n        new RemoteParam(), linkLocation.getDest(), dirPerms, createParent);\n    rpcClient.invokeSequential(targetLocations, method);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java"
    }
  }
}