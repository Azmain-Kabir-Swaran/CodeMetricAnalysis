{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RawLocalFileSystem.java",
  "functionName": "createNonRecursive",
  "functionId": "createNonRecursive___f-Path__permission-FsPermission__flags-EnumSet__CreateFlag____bufferSize-int__replication-short__blockSize-long__progress-Progressable",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
  "functionStartLine": 337,
  "functionEndLine": 346,
  "numCommitsSeen": 53,
  "timeTaken": 1722,
  "changeHistory": [
    "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf",
    "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5",
    "834e9410444ff45028b77a33500b03852190407d"
  ],
  "changeHistoryShort": {
    "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf": "Ybodychange",
    "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5": "Ybodychange",
    "834e9410444ff45028b77a33500b03852190407d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11321. copyToLocal cannot save a file to an SMB share unless the user has Full Control permissions. Contributed by Chris Nauroth.\n",
      "commitDate": "16/12/14 3:29 PM",
      "commitName": "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf",
      "commitAuthor": "cnauroth",
      "commitDateOld": "09/12/14 2:31 PM",
      "commitNameOld": "03867eb1bb173c66b5eb3bebf2fe03a1188635b5",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 7.04,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,10 @@\n   public FSDataOutputStream createNonRecursive(Path f, FsPermission permission,\n       EnumSet\u003cCreateFlag\u003e flags, int bufferSize, short replication, long blockSize,\n       Progressable progress) throws IOException {\n     if (exists(f) \u0026\u0026 !flags.contains(CreateFlag.OVERWRITE)) {\n       throw new FileAlreadyExistsException(\"File already exists: \" + f);\n     }\n     return new FSDataOutputStream(new BufferedOutputStream(\n-        new LocalFSFileOutputStream(f, false), bufferSize), statistics);\n+        createOutputStreamWithMode(f, false, permission), bufferSize),\n+            statistics);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream createNonRecursive(Path f, FsPermission permission,\n      EnumSet\u003cCreateFlag\u003e flags, int bufferSize, short replication, long blockSize,\n      Progressable progress) throws IOException {\n    if (exists(f) \u0026\u0026 !flags.contains(CreateFlag.OVERWRITE)) {\n      throw new FileAlreadyExistsException(\"File already exists: \" + f);\n    }\n    return new FSDataOutputStream(new BufferedOutputStream(\n        createOutputStreamWithMode(f, false, permission), bufferSize),\n            statistics);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
      "extendedDetails": {}
    },
    "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9361: Strictly define FileSystem APIs\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1607596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/07/14 5:04 AM",
      "commitName": "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "21/02/14 10:42 AM",
      "commitNameOld": "58fb83d98299bfeb2de9899140e2cb626b9f8327",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 131.72,
      "commitsBetweenForRepo": 877,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public FSDataOutputStream createNonRecursive(Path f, FsPermission permission,\n       EnumSet\u003cCreateFlag\u003e flags, int bufferSize, short replication, long blockSize,\n       Progressable progress) throws IOException {\n     if (exists(f) \u0026\u0026 !flags.contains(CreateFlag.OVERWRITE)) {\n-      throw new IOException(\"File already exists: \"+f);\n+      throw new FileAlreadyExistsException(\"File already exists: \" + f);\n     }\n     return new FSDataOutputStream(new BufferedOutputStream(\n         new LocalFSFileOutputStream(f, false), bufferSize), statistics);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream createNonRecursive(Path f, FsPermission permission,\n      EnumSet\u003cCreateFlag\u003e flags, int bufferSize, short replication, long blockSize,\n      Progressable progress) throws IOException {\n    if (exists(f) \u0026\u0026 !flags.contains(CreateFlag.OVERWRITE)) {\n      throw new FileAlreadyExistsException(\"File already exists: \" + f);\n    }\n    return new FSDataOutputStream(new BufferedOutputStream(\n        new LocalFSFileOutputStream(f, false), bufferSize), statistics);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
      "extendedDetails": {}
    },
    "834e9410444ff45028b77a33500b03852190407d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9153. Support createNonRecursive in ViewFileSystem. Contributed by Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1423824 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/12/12 3:14 AM",
      "commitName": "834e9410444ff45028b77a33500b03852190407d",
      "commitAuthor": "Thomas White",
      "diff": "@@ -0,0 +1,9 @@\n+  public FSDataOutputStream createNonRecursive(Path f, FsPermission permission,\n+      EnumSet\u003cCreateFlag\u003e flags, int bufferSize, short replication, long blockSize,\n+      Progressable progress) throws IOException {\n+    if (exists(f) \u0026\u0026 !flags.contains(CreateFlag.OVERWRITE)) {\n+      throw new IOException(\"File already exists: \"+f);\n+    }\n+    return new FSDataOutputStream(new BufferedOutputStream(\n+        new LocalFSFileOutputStream(f, false), bufferSize), statistics);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream createNonRecursive(Path f, FsPermission permission,\n      EnumSet\u003cCreateFlag\u003e flags, int bufferSize, short replication, long blockSize,\n      Progressable progress) throws IOException {\n    if (exists(f) \u0026\u0026 !flags.contains(CreateFlag.OVERWRITE)) {\n      throw new IOException(\"File already exists: \"+f);\n    }\n    return new FSDataOutputStream(new BufferedOutputStream(\n        new LocalFSFileOutputStream(f, false), bufferSize), statistics);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java"
    }
  }
}