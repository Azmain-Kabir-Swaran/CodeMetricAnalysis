{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterClientProtocol.java",
  "functionName": "getModifiedTime",
  "functionId": "getModifiedTime___ret-Map__String,Long____path-String__child-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
  "functionStartLine": 2076,
  "functionEndLine": 2107,
  "numCommitsSeen": 64,
  "timeTaken": 2371,
  "changeHistory": [
    "6425ed27ea638da75f656204d6df4adad1d91fe1",
    "fb5b3dce6192265bce9b9d93ab663bdc5be8048e"
  ],
  "changeHistoryShort": {
    "6425ed27ea638da75f656204d6df4adad1d91fe1": "Ymovefromfile",
    "fb5b3dce6192265bce9b9d93ab663bdc5be8048e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6425ed27ea638da75f656204d6df4adad1d91fe1": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-13790. RBF: Move ClientProtocol APIs to its own module. Contributed by Chao Sun.\n",
      "commitDate": "19/08/18 11:50 PM",
      "commitName": "6425ed27ea638da75f656204d6df4adad1d91fe1",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "17/08/18 9:56 PM",
      "commitNameOld": "4aacbfff605262aaf3dbd926258afcadc86c72c0",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 2.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private long getModifiedTime(Map\u003cString, Long\u003e ret, String path,\n      String child) {\n    MountTableResolver mountTable \u003d (MountTableResolver)subclusterResolver;\n    String srcPath;\n    if (path.equals(Path.SEPARATOR)) {\n      srcPath \u003d Path.SEPARATOR + child;\n    } else {\n      srcPath \u003d path + Path.SEPARATOR + child;\n    }\n    Long modTime \u003d 0L;\n    try {\n      // Get mount table entry for the srcPath\n      MountTable entry \u003d mountTable.getMountPoint(srcPath);\n      // if srcPath is not in mount table but its subdirs are in mount\n      // table we will display latest modified subdir date/time.\n      if (entry \u003d\u003d null) {\n        List\u003cMountTable\u003e entries \u003d mountTable.getMounts(srcPath);\n        for (MountTable eachEntry : entries) {\n          // Get the latest date\n          if (ret.get(child) \u003d\u003d null ||\n              ret.get(child) \u003c eachEntry.getDateModified()) {\n            modTime \u003d eachEntry.getDateModified();\n          }\n        }\n      } else {\n        modTime \u003d entry.getDateModified();\n      }\n    } catch (IOException e) {\n      LOG.error(\"Cannot get mount point\", e);\n    }\n    return modTime;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
        "oldMethodName": "getModifiedTime",
        "newMethodName": "getModifiedTime"
      }
    },
    "fb5b3dce6192265bce9b9d93ab663bdc5be8048e": {
      "type": "Yintroduced",
      "commitMessage": "Revert \"HDFS-13790. RBF: Move ClientProtocol APIs to its own module. Contributed by Chao Sun.\"\n\nThis reverts commit fa121eb66bc42e9cb5586f8c2e268cfdc2ed187a.\n",
      "commitDate": "17/08/18 8:01 AM",
      "commitName": "fb5b3dce6192265bce9b9d93ab663bdc5be8048e",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,32 @@\n+  private long getModifiedTime(Map\u003cString, Long\u003e ret, String path,\n+      String child) {\n+    MountTableResolver mountTable \u003d (MountTableResolver)subclusterResolver;\n+    String srcPath;\n+    if (path.equals(Path.SEPARATOR)) {\n+      srcPath \u003d Path.SEPARATOR + child;\n+    } else {\n+      srcPath \u003d path + Path.SEPARATOR + child;\n+    }\n+    Long modTime \u003d 0L;\n+    try {\n+      // Get mount table entry for the srcPath\n+      MountTable entry \u003d mountTable.getMountPoint(srcPath);\n+      // if srcPath is not in mount table but its subdirs are in mount\n+      // table we will display latest modified subdir date/time.\n+      if (entry \u003d\u003d null) {\n+        List\u003cMountTable\u003e entries \u003d mountTable.getMounts(srcPath);\n+        for (MountTable eachEntry : entries) {\n+          // Get the latest date\n+          if (ret.get(child) \u003d\u003d null ||\n+              ret.get(child) \u003c eachEntry.getDateModified()) {\n+            modTime \u003d eachEntry.getDateModified();\n+          }\n+        }\n+      } else {\n+        modTime \u003d entry.getDateModified();\n+      }\n+    } catch (IOException e) {\n+      LOG.error(\"Cannot get mount point\", e);\n+    }\n+    return modTime;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private long getModifiedTime(Map\u003cString, Long\u003e ret, String path,\n      String child) {\n    MountTableResolver mountTable \u003d (MountTableResolver)subclusterResolver;\n    String srcPath;\n    if (path.equals(Path.SEPARATOR)) {\n      srcPath \u003d Path.SEPARATOR + child;\n    } else {\n      srcPath \u003d path + Path.SEPARATOR + child;\n    }\n    Long modTime \u003d 0L;\n    try {\n      // Get mount table entry for the srcPath\n      MountTable entry \u003d mountTable.getMountPoint(srcPath);\n      // if srcPath is not in mount table but its subdirs are in mount\n      // table we will display latest modified subdir date/time.\n      if (entry \u003d\u003d null) {\n        List\u003cMountTable\u003e entries \u003d mountTable.getMounts(srcPath);\n        for (MountTable eachEntry : entries) {\n          // Get the latest date\n          if (ret.get(child) \u003d\u003d null ||\n              ret.get(child) \u003c eachEntry.getDateModified()) {\n            modTime \u003d eachEntry.getDateModified();\n          }\n        }\n      } else {\n        modTime \u003d entry.getDateModified();\n      }\n    } catch (IOException e) {\n      LOG.error(\"Cannot get mount point\", e);\n    }\n    return modTime;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java"
    }
  }
}