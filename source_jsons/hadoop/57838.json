{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WebAppUtils.java",
  "functionName": "getRMWebAppURLWithoutScheme",
  "functionId": "getRMWebAppURLWithoutScheme___conf-Configuration__isHAEnabled-boolean__haIdIndex-int",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/util/WebAppUtils.java",
  "functionStartLine": 126,
  "functionEndLine": 154,
  "numCommitsSeen": 78,
  "timeTaken": 4813,
  "changeHistory": [
    "cb9bc6e64c590622ae04aea2c81962be59037f7a",
    "279d187f723d01658ef8698a29263652e2a05618",
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
    "78e995a37d44cfcf511dcaf7e149a6fd47ba3434"
  ],
  "changeHistoryShort": {
    "cb9bc6e64c590622ae04aea2c81962be59037f7a": "Ymultichange(Yparameterchange,Ybodychange)",
    "279d187f723d01658ef8698a29263652e2a05618": "Ymultichange(Yparameterchange,Ybodychange)",
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d": "Ybodychange",
    "78e995a37d44cfcf511dcaf7e149a6fd47ba3434": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cb9bc6e64c590622ae04aea2c81962be59037f7a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-9581.  Fixed yarn logs cli to access RM2.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "06/06/19 1:41 PM",
      "commitName": "cb9bc6e64c590622ae04aea2c81962be59037f7a",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9581.  Fixed yarn logs cli to access RM2.\n            Contributed by Prabhu Joseph\n",
          "commitDate": "06/06/19 1:41 PM",
          "commitName": "cb9bc6e64c590622ae04aea2c81962be59037f7a",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "19/12/17 8:59 AM",
          "commitNameOld": "c0aeb666a4d43aac196569d9ec6768d62139d2b9",
          "commitAuthorOld": "Varun Saxena",
          "daysBetweenCommits": 534.15,
          "commitsBetweenForRepo": 4453,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,29 @@\n   public static String getRMWebAppURLWithoutScheme(Configuration conf,\n-      boolean isHAEnabled)  {\n+      boolean isHAEnabled, int haIdIndex)  {\n     YarnConfiguration yarnConfig \u003d new YarnConfiguration(conf);\n     // set RM_ID if we have not configure it.\n     if (isHAEnabled) {\n       String rmId \u003d yarnConfig.get(YarnConfiguration.RM_HA_ID);\n       if (rmId \u003d\u003d null || rmId.isEmpty()) {\n         List\u003cString\u003e rmIds \u003d new ArrayList\u003c\u003e(HAUtil.getRMHAIds(conf));\n         if (rmIds !\u003d null \u0026\u0026 !rmIds.isEmpty()) {\n-          yarnConfig.set(YarnConfiguration.RM_HA_ID, rmIds.get(0));\n+          yarnConfig.set(YarnConfiguration.RM_HA_ID, rmIds.get(haIdIndex));\n         }\n       }\n     }\n     if (YarnConfiguration.useHttps(yarnConfig)) {\n       if (isHAEnabled) {\n         return HAUtil.getConfValueForRMInstance(\n             YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS, yarnConfig);\n       }\n       return yarnConfig.get(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS,\n           YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_ADDRESS);\n     }else {\n       if (isHAEnabled) {\n         return HAUtil.getConfValueForRMInstance(\n             YarnConfiguration.RM_WEBAPP_ADDRESS, yarnConfig);\n       }\n       return yarnConfig.get(YarnConfiguration.RM_WEBAPP_ADDRESS,\n           YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String getRMWebAppURLWithoutScheme(Configuration conf,\n      boolean isHAEnabled, int haIdIndex)  {\n    YarnConfiguration yarnConfig \u003d new YarnConfiguration(conf);\n    // set RM_ID if we have not configure it.\n    if (isHAEnabled) {\n      String rmId \u003d yarnConfig.get(YarnConfiguration.RM_HA_ID);\n      if (rmId \u003d\u003d null || rmId.isEmpty()) {\n        List\u003cString\u003e rmIds \u003d new ArrayList\u003c\u003e(HAUtil.getRMHAIds(conf));\n        if (rmIds !\u003d null \u0026\u0026 !rmIds.isEmpty()) {\n          yarnConfig.set(YarnConfiguration.RM_HA_ID, rmIds.get(haIdIndex));\n        }\n      }\n    }\n    if (YarnConfiguration.useHttps(yarnConfig)) {\n      if (isHAEnabled) {\n        return HAUtil.getConfValueForRMInstance(\n            YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS, yarnConfig);\n      }\n      return yarnConfig.get(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS,\n          YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_ADDRESS);\n    }else {\n      if (isHAEnabled) {\n        return HAUtil.getConfValueForRMInstance(\n            YarnConfiguration.RM_WEBAPP_ADDRESS, yarnConfig);\n      }\n      return yarnConfig.get(YarnConfiguration.RM_WEBAPP_ADDRESS,\n          YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/util/WebAppUtils.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, isHAEnabled-boolean]",
            "newValue": "[conf-Configuration, isHAEnabled-boolean, haIdIndex-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9581.  Fixed yarn logs cli to access RM2.\n            Contributed by Prabhu Joseph\n",
          "commitDate": "06/06/19 1:41 PM",
          "commitName": "cb9bc6e64c590622ae04aea2c81962be59037f7a",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "19/12/17 8:59 AM",
          "commitNameOld": "c0aeb666a4d43aac196569d9ec6768d62139d2b9",
          "commitAuthorOld": "Varun Saxena",
          "daysBetweenCommits": 534.15,
          "commitsBetweenForRepo": 4453,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,29 @@\n   public static String getRMWebAppURLWithoutScheme(Configuration conf,\n-      boolean isHAEnabled)  {\n+      boolean isHAEnabled, int haIdIndex)  {\n     YarnConfiguration yarnConfig \u003d new YarnConfiguration(conf);\n     // set RM_ID if we have not configure it.\n     if (isHAEnabled) {\n       String rmId \u003d yarnConfig.get(YarnConfiguration.RM_HA_ID);\n       if (rmId \u003d\u003d null || rmId.isEmpty()) {\n         List\u003cString\u003e rmIds \u003d new ArrayList\u003c\u003e(HAUtil.getRMHAIds(conf));\n         if (rmIds !\u003d null \u0026\u0026 !rmIds.isEmpty()) {\n-          yarnConfig.set(YarnConfiguration.RM_HA_ID, rmIds.get(0));\n+          yarnConfig.set(YarnConfiguration.RM_HA_ID, rmIds.get(haIdIndex));\n         }\n       }\n     }\n     if (YarnConfiguration.useHttps(yarnConfig)) {\n       if (isHAEnabled) {\n         return HAUtil.getConfValueForRMInstance(\n             YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS, yarnConfig);\n       }\n       return yarnConfig.get(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS,\n           YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_ADDRESS);\n     }else {\n       if (isHAEnabled) {\n         return HAUtil.getConfValueForRMInstance(\n             YarnConfiguration.RM_WEBAPP_ADDRESS, yarnConfig);\n       }\n       return yarnConfig.get(YarnConfiguration.RM_WEBAPP_ADDRESS,\n           YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String getRMWebAppURLWithoutScheme(Configuration conf,\n      boolean isHAEnabled, int haIdIndex)  {\n    YarnConfiguration yarnConfig \u003d new YarnConfiguration(conf);\n    // set RM_ID if we have not configure it.\n    if (isHAEnabled) {\n      String rmId \u003d yarnConfig.get(YarnConfiguration.RM_HA_ID);\n      if (rmId \u003d\u003d null || rmId.isEmpty()) {\n        List\u003cString\u003e rmIds \u003d new ArrayList\u003c\u003e(HAUtil.getRMHAIds(conf));\n        if (rmIds !\u003d null \u0026\u0026 !rmIds.isEmpty()) {\n          yarnConfig.set(YarnConfiguration.RM_HA_ID, rmIds.get(haIdIndex));\n        }\n      }\n    }\n    if (YarnConfiguration.useHttps(yarnConfig)) {\n      if (isHAEnabled) {\n        return HAUtil.getConfValueForRMInstance(\n            YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS, yarnConfig);\n      }\n      return yarnConfig.get(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS,\n          YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_ADDRESS);\n    }else {\n      if (isHAEnabled) {\n        return HAUtil.getConfValueForRMInstance(\n            YarnConfiguration.RM_WEBAPP_ADDRESS, yarnConfig);\n      }\n      return yarnConfig.get(YarnConfiguration.RM_WEBAPP_ADDRESS,\n          YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/util/WebAppUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "279d187f723d01658ef8698a29263652e2a05618": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6270. WebUtils.getRMWebAppURLWithScheme() needs to honor RM HA setting. Contributed by Xuan Gong\n",
      "commitDate": "03/03/17 3:24 PM",
      "commitName": "279d187f723d01658ef8698a29263652e2a05618",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6270. WebUtils.getRMWebAppURLWithScheme() needs to honor RM HA setting. Contributed by Xuan Gong\n",
          "commitDate": "03/03/17 3:24 PM",
          "commitName": "279d187f723d01658ef8698a29263652e2a05618",
          "commitAuthor": "Jian He",
          "commitDateOld": "13/02/17 6:12 AM",
          "commitNameOld": "464ff479ceec76609dca3539081de6b503b17325",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 18.38,
          "commitsBetweenForRepo": 124,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,29 @@\n-  public static String getRMWebAppURLWithoutScheme(Configuration conf) {\n-    if (YarnConfiguration.useHttps(conf)) {\n-      return conf.get(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS,\n+  public static String getRMWebAppURLWithoutScheme(Configuration conf,\n+      boolean isHAEnabled)  {\n+    YarnConfiguration yarnConfig \u003d new YarnConfiguration(conf);\n+    // set RM_ID if we have not configure it.\n+    if (isHAEnabled) {\n+      String rmId \u003d yarnConfig.get(YarnConfiguration.RM_HA_ID);\n+      if (rmId \u003d\u003d null || rmId.isEmpty()) {\n+        List\u003cString\u003e rmIds \u003d new ArrayList\u003c\u003e(HAUtil.getRMHAIds(conf));\n+        if (rmIds !\u003d null \u0026\u0026 !rmIds.isEmpty()) {\n+          yarnConfig.set(YarnConfiguration.RM_HA_ID, rmIds.get(0));\n+        }\n+      }\n+    }\n+    if (YarnConfiguration.useHttps(yarnConfig)) {\n+      if (isHAEnabled) {\n+        return HAUtil.getConfValueForRMInstance(\n+            YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS, yarnConfig);\n+      }\n+      return yarnConfig.get(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS,\n           YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_ADDRESS);\n     }else {\n-      return conf.get(YarnConfiguration.RM_WEBAPP_ADDRESS,\n+      if (isHAEnabled) {\n+        return HAUtil.getConfValueForRMInstance(\n+            YarnConfiguration.RM_WEBAPP_ADDRESS, yarnConfig);\n+      }\n+      return yarnConfig.get(YarnConfiguration.RM_WEBAPP_ADDRESS,\n           YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String getRMWebAppURLWithoutScheme(Configuration conf,\n      boolean isHAEnabled)  {\n    YarnConfiguration yarnConfig \u003d new YarnConfiguration(conf);\n    // set RM_ID if we have not configure it.\n    if (isHAEnabled) {\n      String rmId \u003d yarnConfig.get(YarnConfiguration.RM_HA_ID);\n      if (rmId \u003d\u003d null || rmId.isEmpty()) {\n        List\u003cString\u003e rmIds \u003d new ArrayList\u003c\u003e(HAUtil.getRMHAIds(conf));\n        if (rmIds !\u003d null \u0026\u0026 !rmIds.isEmpty()) {\n          yarnConfig.set(YarnConfiguration.RM_HA_ID, rmIds.get(0));\n        }\n      }\n    }\n    if (YarnConfiguration.useHttps(yarnConfig)) {\n      if (isHAEnabled) {\n        return HAUtil.getConfValueForRMInstance(\n            YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS, yarnConfig);\n      }\n      return yarnConfig.get(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS,\n          YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_ADDRESS);\n    }else {\n      if (isHAEnabled) {\n        return HAUtil.getConfValueForRMInstance(\n            YarnConfiguration.RM_WEBAPP_ADDRESS, yarnConfig);\n      }\n      return yarnConfig.get(YarnConfiguration.RM_WEBAPP_ADDRESS,\n          YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/util/WebAppUtils.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration]",
            "newValue": "[conf-Configuration, isHAEnabled-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6270. WebUtils.getRMWebAppURLWithScheme() needs to honor RM HA setting. Contributed by Xuan Gong\n",
          "commitDate": "03/03/17 3:24 PM",
          "commitName": "279d187f723d01658ef8698a29263652e2a05618",
          "commitAuthor": "Jian He",
          "commitDateOld": "13/02/17 6:12 AM",
          "commitNameOld": "464ff479ceec76609dca3539081de6b503b17325",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 18.38,
          "commitsBetweenForRepo": 124,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,29 @@\n-  public static String getRMWebAppURLWithoutScheme(Configuration conf) {\n-    if (YarnConfiguration.useHttps(conf)) {\n-      return conf.get(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS,\n+  public static String getRMWebAppURLWithoutScheme(Configuration conf,\n+      boolean isHAEnabled)  {\n+    YarnConfiguration yarnConfig \u003d new YarnConfiguration(conf);\n+    // set RM_ID if we have not configure it.\n+    if (isHAEnabled) {\n+      String rmId \u003d yarnConfig.get(YarnConfiguration.RM_HA_ID);\n+      if (rmId \u003d\u003d null || rmId.isEmpty()) {\n+        List\u003cString\u003e rmIds \u003d new ArrayList\u003c\u003e(HAUtil.getRMHAIds(conf));\n+        if (rmIds !\u003d null \u0026\u0026 !rmIds.isEmpty()) {\n+          yarnConfig.set(YarnConfiguration.RM_HA_ID, rmIds.get(0));\n+        }\n+      }\n+    }\n+    if (YarnConfiguration.useHttps(yarnConfig)) {\n+      if (isHAEnabled) {\n+        return HAUtil.getConfValueForRMInstance(\n+            YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS, yarnConfig);\n+      }\n+      return yarnConfig.get(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS,\n           YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_ADDRESS);\n     }else {\n-      return conf.get(YarnConfiguration.RM_WEBAPP_ADDRESS,\n+      if (isHAEnabled) {\n+        return HAUtil.getConfValueForRMInstance(\n+            YarnConfiguration.RM_WEBAPP_ADDRESS, yarnConfig);\n+      }\n+      return yarnConfig.get(YarnConfiguration.RM_WEBAPP_ADDRESS,\n           YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String getRMWebAppURLWithoutScheme(Configuration conf,\n      boolean isHAEnabled)  {\n    YarnConfiguration yarnConfig \u003d new YarnConfiguration(conf);\n    // set RM_ID if we have not configure it.\n    if (isHAEnabled) {\n      String rmId \u003d yarnConfig.get(YarnConfiguration.RM_HA_ID);\n      if (rmId \u003d\u003d null || rmId.isEmpty()) {\n        List\u003cString\u003e rmIds \u003d new ArrayList\u003c\u003e(HAUtil.getRMHAIds(conf));\n        if (rmIds !\u003d null \u0026\u0026 !rmIds.isEmpty()) {\n          yarnConfig.set(YarnConfiguration.RM_HA_ID, rmIds.get(0));\n        }\n      }\n    }\n    if (YarnConfiguration.useHttps(yarnConfig)) {\n      if (isHAEnabled) {\n        return HAUtil.getConfValueForRMInstance(\n            YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS, yarnConfig);\n      }\n      return yarnConfig.get(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS,\n          YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_ADDRESS);\n    }else {\n      if (isHAEnabled) {\n        return HAUtil.getConfValueForRMInstance(\n            YarnConfiguration.RM_WEBAPP_ADDRESS, yarnConfig);\n      }\n      return yarnConfig.get(YarnConfiguration.RM_WEBAPP_ADDRESS,\n          YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/util/WebAppUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1553. Modified YARN and MR to stop using HttpConfig.isSecure() and\ninstead rely on the http policy framework. And also fix some bugs related\nto https handling in YARN web-apps. Contributed by Haohui Mai.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1568501 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/02/14 12:01 PM",
      "commitName": "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "25/01/14 8:51 PM",
      "commitNameOld": "cbee889711eddc5c67a61df4a6531b4ab3cd205a",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 19.63,
      "commitsBetweenForRepo": 160,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public static String getRMWebAppURLWithoutScheme(Configuration conf) {\n-    if (HttpConfig.isSecure()) {\n+    if (YarnConfiguration.useHttps(conf)) {\n       return conf.get(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS,\n           YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_ADDRESS);\n     }else {\n       return conf.get(YarnConfiguration.RM_WEBAPP_ADDRESS,\n           YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getRMWebAppURLWithoutScheme(Configuration conf) {\n    if (YarnConfiguration.useHttps(conf)) {\n      return conf.get(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS,\n          YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_ADDRESS);\n    }else {\n      return conf.get(YarnConfiguration.RM_WEBAPP_ADDRESS,\n          YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/util/WebAppUtils.java",
      "extendedDetails": {}
    },
    "78e995a37d44cfcf511dcaf7e149a6fd47ba3434": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1204. Added separate configuration properties for https for RM and NM without which servers enabled with https will also start on http ports. Contributed by Omkar Vinit Joshi.\nMAPREDUCE-5523. Added separate configuration properties for https for JHS without which even when https is enabled, it starts on http port itself. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1525947 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/09/13 10:20 AM",
      "commitName": "78e995a37d44cfcf511dcaf7e149a6fd47ba3434",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,9 @@\n+  public static String getRMWebAppURLWithoutScheme(Configuration conf) {\n+    if (HttpConfig.isSecure()) {\n+      return conf.get(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS,\n+          YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_ADDRESS);\n+    }else {\n+      return conf.get(YarnConfiguration.RM_WEBAPP_ADDRESS,\n+          YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getRMWebAppURLWithoutScheme(Configuration conf) {\n    if (HttpConfig.isSecure()) {\n      return conf.get(YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS,\n          YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_ADDRESS);\n    }else {\n      return conf.get(YarnConfiguration.RM_WEBAPP_ADDRESS,\n          YarnConfiguration.DEFAULT_RM_WEBAPP_ADDRESS);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/util/WebAppUtils.java"
    }
  }
}