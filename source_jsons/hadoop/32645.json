{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultContainerExecutor.java",
  "functionName": "createContainerLogDirs",
  "functionId": "createContainerLogDirs___appId-String__containerId-String__logDirs-List__String____user-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
  "functionStartLine": 967,
  "functionEndLine": 991,
  "numCommitsSeen": 86,
  "timeTaken": 9714,
  "changeHistory": [
    "f7df55f4a89ed2d75d874b32209647ef4f448875",
    "d7fdec1e6b465395d2faca6e404e329d20f6c3d8",
    "ba7f31c2ee8d23ecb183f88920ef06053c0b9769",
    "bfe3816c66de2684ab92dd7be43385fa57d27892",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
    "fafe8cd28e726566509c679e19d7da622f29f90d",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "f7df55f4a89ed2d75d874b32209647ef4f448875": "Ybodychange",
    "d7fdec1e6b465395d2faca6e404e329d20f6c3d8": "Ybodychange",
    "ba7f31c2ee8d23ecb183f88920ef06053c0b9769": "Ymultichange(Yparameterchange,Ybodychange)",
    "bfe3816c66de2684ab92dd7be43385fa57d27892": "Ymultichange(Ymodifierchange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb": "Ymultichange(Yparameterchange,Ybodychange)",
    "fafe8cd28e726566509c679e19d7da622f29f90d": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f7df55f4a89ed2d75d874b32209647ef4f448875": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9602. Use logger format in Container Executor. Contributed by Abhishek Modi.\n",
      "commitDate": "11/06/19 9:59 AM",
      "commitName": "f7df55f4a89ed2d75d874b32209647ef4f448875",
      "commitAuthor": "bibinchundatt",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 87.73,
      "commitsBetweenForRepo": 542,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   void createContainerLogDirs(String appId, String containerId,\n       List\u003cString\u003e logDirs, String user) throws IOException {\n     boolean containerLogDirStatus \u003d false;\n     FsPermission containerLogDirPerms \u003d new\n         FsPermission(getLogDirPermissions());\n     for (String rootLogDir : logDirs) {\n       // create $log.dir/$appid/$containerid\n       Path appLogDir \u003d new Path(rootLogDir, appId);\n       Path containerLogDir \u003d new Path(appLogDir, containerId);\n       try {\n         createDir(containerLogDir, containerLogDirPerms, true, user);\n       } catch (IOException e) {\n-        LOG.warn(\"Unable to create the container-log directory : \"\n-            + appLogDir, e);\n+        LOG.warn(\"Unable to create the container-log directory : {}\",\n+            appLogDir, e);\n         continue;\n       }\n       containerLogDirStatus \u003d true;\n     }\n     if (!containerLogDirStatus) {\n       throw new IOException(\n           \"Not able to initialize container-log directories \"\n               + \"in any of the configured local directories for container \"\n               + containerId);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void createContainerLogDirs(String appId, String containerId,\n      List\u003cString\u003e logDirs, String user) throws IOException {\n    boolean containerLogDirStatus \u003d false;\n    FsPermission containerLogDirPerms \u003d new\n        FsPermission(getLogDirPermissions());\n    for (String rootLogDir : logDirs) {\n      // create $log.dir/$appid/$containerid\n      Path appLogDir \u003d new Path(rootLogDir, appId);\n      Path containerLogDir \u003d new Path(appLogDir, containerId);\n      try {\n        createDir(containerLogDir, containerLogDirPerms, true, user);\n      } catch (IOException e) {\n        LOG.warn(\"Unable to create the container-log directory : {}\",\n            appLogDir, e);\n        continue;\n      }\n      containerLogDirStatus \u003d true;\n    }\n    if (!containerLogDirStatus) {\n      throw new IOException(\n          \"Not able to initialize container-log directories \"\n              + \"in any of the configured local directories for container \"\n              + containerId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
      "extendedDetails": {}
    },
    "d7fdec1e6b465395d2faca6e404e329d20f6c3d8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4579. Allow DefaultContainerExecutor container log directory permissions to be configurable (rchiang via rkanter)\n",
      "commitDate": "25/02/16 4:36 PM",
      "commitName": "d7fdec1e6b465395d2faca6e404e329d20f6c3d8",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "29/10/15 9:34 AM",
      "commitNameOld": "e2267de2076245bd9857f6a30e3c731df017fef8",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 119.33,
      "commitsBetweenForRepo": 774,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   void createContainerLogDirs(String appId, String containerId,\n       List\u003cString\u003e logDirs, String user) throws IOException {\n \n     boolean containerLogDirStatus \u003d false;\n-    FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n+    FsPermission containerLogDirPerms \u003d new\n+        FsPermission(getLogDirPermissions());\n     for (String rootLogDir : logDirs) {\n       // create $log.dir/$appid/$containerid\n       Path appLogDir \u003d new Path(rootLogDir, appId);\n       Path containerLogDir \u003d new Path(appLogDir, containerId);\n       try {\n         createDir(containerLogDir, containerLogDirPerms, true, user);\n       } catch (IOException e) {\n         LOG.warn(\"Unable to create the container-log directory : \"\n             + appLogDir, e);\n         continue;\n       }\n       containerLogDirStatus \u003d true;\n     }\n     if (!containerLogDirStatus) {\n       throw new IOException(\n           \"Not able to initialize container-log directories \"\n               + \"in any of the configured local directories for container \"\n               + containerId);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void createContainerLogDirs(String appId, String containerId,\n      List\u003cString\u003e logDirs, String user) throws IOException {\n\n    boolean containerLogDirStatus \u003d false;\n    FsPermission containerLogDirPerms \u003d new\n        FsPermission(getLogDirPermissions());\n    for (String rootLogDir : logDirs) {\n      // create $log.dir/$appid/$containerid\n      Path appLogDir \u003d new Path(rootLogDir, appId);\n      Path containerLogDir \u003d new Path(appLogDir, containerId);\n      try {\n        createDir(containerLogDir, containerLogDirPerms, true, user);\n      } catch (IOException e) {\n        LOG.warn(\"Unable to create the container-log directory : \"\n            + appLogDir, e);\n        continue;\n      }\n      containerLogDirStatus \u003d true;\n    }\n    if (!containerLogDirStatus) {\n      throw new IOException(\n          \"Not able to initialize container-log directories \"\n              + \"in any of the configured local directories for container \"\n              + containerId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
      "extendedDetails": {}
    },
    "ba7f31c2ee8d23ecb183f88920ef06053c0b9769": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1972. Added a secure container-executor for Windows. Contributed by Remus Rusanu.\n",
      "commitDate": "01/10/14 10:14 AM",
      "commitName": "ba7f31c2ee8d23ecb183f88920ef06053c0b9769",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1972. Added a secure container-executor for Windows. Contributed by Remus Rusanu.\n",
          "commitDate": "01/10/14 10:14 AM",
          "commitName": "ba7f31c2ee8d23ecb183f88920ef06053c0b9769",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "12/08/14 3:56 AM",
          "commitNameOld": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 50.26,
          "commitsBetweenForRepo": 539,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n   void createContainerLogDirs(String appId, String containerId,\n-      List\u003cString\u003e logDirs) throws IOException {\n+      List\u003cString\u003e logDirs, String user) throws IOException {\n \n     boolean containerLogDirStatus \u003d false;\n     FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n     for (String rootLogDir : logDirs) {\n       // create $log.dir/$appid/$containerid\n       Path appLogDir \u003d new Path(rootLogDir, appId);\n       Path containerLogDir \u003d new Path(appLogDir, containerId);\n       try {\n-        createDir(containerLogDir, containerLogDirPerms, true);\n+        createDir(containerLogDir, containerLogDirPerms, true, user);\n       } catch (IOException e) {\n         LOG.warn(\"Unable to create the container-log directory : \"\n             + appLogDir, e);\n         continue;\n       }\n       containerLogDirStatus \u003d true;\n     }\n     if (!containerLogDirStatus) {\n       throw new IOException(\n           \"Not able to initialize container-log directories \"\n               + \"in any of the configured local directories for container \"\n               + containerId);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void createContainerLogDirs(String appId, String containerId,\n      List\u003cString\u003e logDirs, String user) throws IOException {\n\n    boolean containerLogDirStatus \u003d false;\n    FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n    for (String rootLogDir : logDirs) {\n      // create $log.dir/$appid/$containerid\n      Path appLogDir \u003d new Path(rootLogDir, appId);\n      Path containerLogDir \u003d new Path(appLogDir, containerId);\n      try {\n        createDir(containerLogDir, containerLogDirPerms, true, user);\n      } catch (IOException e) {\n        LOG.warn(\"Unable to create the container-log directory : \"\n            + appLogDir, e);\n        continue;\n      }\n      containerLogDirStatus \u003d true;\n    }\n    if (!containerLogDirStatus) {\n      throw new IOException(\n          \"Not able to initialize container-log directories \"\n              + \"in any of the configured local directories for container \"\n              + containerId);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
          "extendedDetails": {
            "oldValue": "[appId-String, containerId-String, logDirs-List\u003cString\u003e]",
            "newValue": "[appId-String, containerId-String, logDirs-List\u003cString\u003e, user-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1972. Added a secure container-executor for Windows. Contributed by Remus Rusanu.\n",
          "commitDate": "01/10/14 10:14 AM",
          "commitName": "ba7f31c2ee8d23ecb183f88920ef06053c0b9769",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "12/08/14 3:56 AM",
          "commitNameOld": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 50.26,
          "commitsBetweenForRepo": 539,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n   void createContainerLogDirs(String appId, String containerId,\n-      List\u003cString\u003e logDirs) throws IOException {\n+      List\u003cString\u003e logDirs, String user) throws IOException {\n \n     boolean containerLogDirStatus \u003d false;\n     FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n     for (String rootLogDir : logDirs) {\n       // create $log.dir/$appid/$containerid\n       Path appLogDir \u003d new Path(rootLogDir, appId);\n       Path containerLogDir \u003d new Path(appLogDir, containerId);\n       try {\n-        createDir(containerLogDir, containerLogDirPerms, true);\n+        createDir(containerLogDir, containerLogDirPerms, true, user);\n       } catch (IOException e) {\n         LOG.warn(\"Unable to create the container-log directory : \"\n             + appLogDir, e);\n         continue;\n       }\n       containerLogDirStatus \u003d true;\n     }\n     if (!containerLogDirStatus) {\n       throw new IOException(\n           \"Not able to initialize container-log directories \"\n               + \"in any of the configured local directories for container \"\n               + containerId);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void createContainerLogDirs(String appId, String containerId,\n      List\u003cString\u003e logDirs, String user) throws IOException {\n\n    boolean containerLogDirStatus \u003d false;\n    FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n    for (String rootLogDir : logDirs) {\n      // create $log.dir/$appid/$containerid\n      Path appLogDir \u003d new Path(rootLogDir, appId);\n      Path containerLogDir \u003d new Path(appLogDir, containerId);\n      try {\n        createDir(containerLogDir, containerLogDirPerms, true, user);\n      } catch (IOException e) {\n        LOG.warn(\"Unable to create the container-log directory : \"\n            + appLogDir, e);\n        continue;\n      }\n      containerLogDirStatus \u003d true;\n    }\n    if (!containerLogDirStatus) {\n      throw new IOException(\n          \"Not able to initialize container-log directories \"\n              + \"in any of the configured local directories for container \"\n              + containerId);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
          "extendedDetails": {}
        }
      ]
    },
    "bfe3816c66de2684ab92dd7be43385fa57d27892": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-88. DefaultContainerExecutor can fail to set proper permissions. (Contributed by Jason Lowe)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1388580 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/09/12 10:29 AM",
      "commitName": "bfe3816c66de2684ab92dd7be43385fa57d27892",
      "commitAuthor": "Siddharth Seth",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-88. DefaultContainerExecutor can fail to set proper permissions. (Contributed by Jason Lowe)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1388580 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/09/12 10:29 AM",
          "commitName": "bfe3816c66de2684ab92dd7be43385fa57d27892",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "23/08/12 11:24 AM",
          "commitNameOld": "9ef3b2eb60b2c773d35896225d051b523e406ae2",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 28.96,
          "commitsBetweenForRepo": 157,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-  private void createContainerLogDirs(String appId, String containerId,\n+  void createContainerLogDirs(String appId, String containerId,\n       List\u003cString\u003e logDirs) throws IOException {\n \n     boolean containerLogDirStatus \u003d false;\n     FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n     for (String rootLogDir : logDirs) {\n       // create $log.dir/$appid/$containerid\n       Path appLogDir \u003d new Path(rootLogDir, appId);\n       Path containerLogDir \u003d new Path(appLogDir, containerId);\n       try {\n-        lfs.mkdir(containerLogDir, containerLogDirPerms, true);\n+        createDir(containerLogDir, containerLogDirPerms, true);\n       } catch (IOException e) {\n         LOG.warn(\"Unable to create the container-log directory : \"\n             + appLogDir, e);\n         continue;\n       }\n       containerLogDirStatus \u003d true;\n     }\n     if (!containerLogDirStatus) {\n       throw new IOException(\n           \"Not able to initialize container-log directories \"\n               + \"in any of the configured local directories for container \"\n               + containerId);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void createContainerLogDirs(String appId, String containerId,\n      List\u003cString\u003e logDirs) throws IOException {\n\n    boolean containerLogDirStatus \u003d false;\n    FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n    for (String rootLogDir : logDirs) {\n      // create $log.dir/$appid/$containerid\n      Path appLogDir \u003d new Path(rootLogDir, appId);\n      Path containerLogDir \u003d new Path(appLogDir, containerId);\n      try {\n        createDir(containerLogDir, containerLogDirPerms, true);\n      } catch (IOException e) {\n        LOG.warn(\"Unable to create the container-log directory : \"\n            + appLogDir, e);\n        continue;\n      }\n      containerLogDirStatus \u003d true;\n    }\n    if (!containerLogDirStatus) {\n      throw new IOException(\n          \"Not able to initialize container-log directories \"\n              + \"in any of the configured local directories for container \"\n              + containerId);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-88. DefaultContainerExecutor can fail to set proper permissions. (Contributed by Jason Lowe)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1388580 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/09/12 10:29 AM",
          "commitName": "bfe3816c66de2684ab92dd7be43385fa57d27892",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "23/08/12 11:24 AM",
          "commitNameOld": "9ef3b2eb60b2c773d35896225d051b523e406ae2",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 28.96,
          "commitsBetweenForRepo": 157,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-  private void createContainerLogDirs(String appId, String containerId,\n+  void createContainerLogDirs(String appId, String containerId,\n       List\u003cString\u003e logDirs) throws IOException {\n \n     boolean containerLogDirStatus \u003d false;\n     FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n     for (String rootLogDir : logDirs) {\n       // create $log.dir/$appid/$containerid\n       Path appLogDir \u003d new Path(rootLogDir, appId);\n       Path containerLogDir \u003d new Path(appLogDir, containerId);\n       try {\n-        lfs.mkdir(containerLogDir, containerLogDirPerms, true);\n+        createDir(containerLogDir, containerLogDirPerms, true);\n       } catch (IOException e) {\n         LOG.warn(\"Unable to create the container-log directory : \"\n             + appLogDir, e);\n         continue;\n       }\n       containerLogDirStatus \u003d true;\n     }\n     if (!containerLogDirStatus) {\n       throw new IOException(\n           \"Not able to initialize container-log directories \"\n               + \"in any of the configured local directories for container \"\n               + containerId);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void createContainerLogDirs(String appId, String containerId,\n      List\u003cString\u003e logDirs) throws IOException {\n\n    boolean containerLogDirStatus \u003d false;\n    FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n    for (String rootLogDir : logDirs) {\n      // create $log.dir/$appid/$containerid\n      Path appLogDir \u003d new Path(rootLogDir, appId);\n      Path containerLogDir \u003d new Path(appLogDir, containerId);\n      try {\n        createDir(containerLogDir, containerLogDirPerms, true);\n      } catch (IOException e) {\n        LOG.warn(\"Unable to create the container-log directory : \"\n            + appLogDir, e);\n        continue;\n      }\n      containerLogDirStatus \u003d true;\n    }\n    if (!containerLogDirStatus) {\n      throw new IOException(\n          \"Not able to initialize container-log directories \"\n              + \"in any of the configured local directories for container \"\n              + containerId);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void createContainerLogDirs(String appId, String containerId,\n      List\u003cString\u003e logDirs) throws IOException {\n\n    boolean containerLogDirStatus \u003d false;\n    FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n    for (String rootLogDir : logDirs) {\n      // create $log.dir/$appid/$containerid\n      Path appLogDir \u003d new Path(rootLogDir, appId);\n      Path containerLogDir \u003d new Path(appLogDir, containerId);\n      try {\n        lfs.mkdir(containerLogDir, containerLogDirPerms, true);\n      } catch (IOException e) {\n        LOG.warn(\"Unable to create the container-log directory : \"\n            + appLogDir, e);\n        continue;\n      }\n      containerLogDirStatus \u003d true;\n    }\n    if (!containerLogDirStatus) {\n      throw new IOException(\n          \"Not able to initialize container-log directories \"\n              + \"in any of the configured local directories for container \"\n              + containerId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java"
      }
    },
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-3121. NodeManager should handle disk-failures (Ravi Gummadi via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208131 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/11/11 3:17 PM",
      "commitName": "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
      "commitAuthor": "Mahadev Konar",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-3121. NodeManager should handle disk-failures (Ravi Gummadi via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208131 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/11/11 3:17 PM",
          "commitName": "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
          "commitAuthor": "Mahadev Konar",
          "commitDateOld": "15/11/11 2:30 AM",
          "commitNameOld": "c56e05196190f172e9c8cdcd9d59d09950f1419b",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 14.53,
          "commitsBetweenForRepo": 77,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,25 @@\n-  private void createContainerLogDirs(String appId, String containerId)\n-      throws IOException {\n-    String[] rootLogDirs \u003d\n-        getConf()\n-            .getStrings(YarnConfiguration.NM_LOG_DIRS, YarnConfiguration.DEFAULT_NM_LOG_DIRS);\n-    \n+  private void createContainerLogDirs(String appId, String containerId,\n+      List\u003cString\u003e logDirs) throws IOException {\n+\n     boolean containerLogDirStatus \u003d false;\n     FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n-    for (String rootLogDir : rootLogDirs) {\n+    for (String rootLogDir : logDirs) {\n       // create $log.dir/$appid/$containerid\n       Path appLogDir \u003d new Path(rootLogDir, appId);\n       Path containerLogDir \u003d new Path(appLogDir, containerId);\n       try {\n         lfs.mkdir(containerLogDir, containerLogDirPerms, true);\n       } catch (IOException e) {\n         LOG.warn(\"Unable to create the container-log directory : \"\n             + appLogDir, e);\n         continue;\n       }\n       containerLogDirStatus \u003d true;\n     }\n     if (!containerLogDirStatus) {\n       throw new IOException(\n           \"Not able to initialize container-log directories \"\n               + \"in any of the configured local directories for container \"\n               + containerId);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createContainerLogDirs(String appId, String containerId,\n      List\u003cString\u003e logDirs) throws IOException {\n\n    boolean containerLogDirStatus \u003d false;\n    FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n    for (String rootLogDir : logDirs) {\n      // create $log.dir/$appid/$containerid\n      Path appLogDir \u003d new Path(rootLogDir, appId);\n      Path containerLogDir \u003d new Path(appLogDir, containerId);\n      try {\n        lfs.mkdir(containerLogDir, containerLogDirPerms, true);\n      } catch (IOException e) {\n        LOG.warn(\"Unable to create the container-log directory : \"\n            + appLogDir, e);\n        continue;\n      }\n      containerLogDirStatus \u003d true;\n    }\n    if (!containerLogDirStatus) {\n      throw new IOException(\n          \"Not able to initialize container-log directories \"\n              + \"in any of the configured local directories for container \"\n              + containerId);\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
          "extendedDetails": {
            "oldValue": "[appId-String, containerId-String]",
            "newValue": "[appId-String, containerId-String, logDirs-List\u003cString\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3121. NodeManager should handle disk-failures (Ravi Gummadi via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208131 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/11/11 3:17 PM",
          "commitName": "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
          "commitAuthor": "Mahadev Konar",
          "commitDateOld": "15/11/11 2:30 AM",
          "commitNameOld": "c56e05196190f172e9c8cdcd9d59d09950f1419b",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 14.53,
          "commitsBetweenForRepo": 77,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,25 @@\n-  private void createContainerLogDirs(String appId, String containerId)\n-      throws IOException {\n-    String[] rootLogDirs \u003d\n-        getConf()\n-            .getStrings(YarnConfiguration.NM_LOG_DIRS, YarnConfiguration.DEFAULT_NM_LOG_DIRS);\n-    \n+  private void createContainerLogDirs(String appId, String containerId,\n+      List\u003cString\u003e logDirs) throws IOException {\n+\n     boolean containerLogDirStatus \u003d false;\n     FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n-    for (String rootLogDir : rootLogDirs) {\n+    for (String rootLogDir : logDirs) {\n       // create $log.dir/$appid/$containerid\n       Path appLogDir \u003d new Path(rootLogDir, appId);\n       Path containerLogDir \u003d new Path(appLogDir, containerId);\n       try {\n         lfs.mkdir(containerLogDir, containerLogDirPerms, true);\n       } catch (IOException e) {\n         LOG.warn(\"Unable to create the container-log directory : \"\n             + appLogDir, e);\n         continue;\n       }\n       containerLogDirStatus \u003d true;\n     }\n     if (!containerLogDirStatus) {\n       throw new IOException(\n           \"Not able to initialize container-log directories \"\n               + \"in any of the configured local directories for container \"\n               + containerId);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createContainerLogDirs(String appId, String containerId,\n      List\u003cString\u003e logDirs) throws IOException {\n\n    boolean containerLogDirStatus \u003d false;\n    FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n    for (String rootLogDir : logDirs) {\n      // create $log.dir/$appid/$containerid\n      Path appLogDir \u003d new Path(rootLogDir, appId);\n      Path containerLogDir \u003d new Path(appLogDir, containerId);\n      try {\n        lfs.mkdir(containerLogDir, containerLogDirPerms, true);\n      } catch (IOException e) {\n        LOG.warn(\"Unable to create the container-log directory : \"\n            + appLogDir, e);\n        continue;\n      }\n      containerLogDirStatus \u003d true;\n    }\n    if (!containerLogDirStatus) {\n      throw new IOException(\n          \"Not able to initialize container-log directories \"\n              + \"in any of the configured local directories for container \"\n              + containerId);\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
          "extendedDetails": {}
        }
      ]
    },
    "fafe8cd28e726566509c679e19d7da622f29f90d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2864. Normalize configuration variable names for YARN. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166955 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/11 6:44 PM",
      "commitName": "fafe8cd28e726566509c679e19d7da622f29f90d",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 15.06,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   private void createContainerLogDirs(String appId, String containerId)\n       throws IOException {\n     String[] rootLogDirs \u003d\n         getConf()\n-            .getStrings(NMConfig.NM_LOG_DIR, NMConfig.DEFAULT_NM_LOG_DIR);\n+            .getStrings(YarnConfiguration.NM_LOG_DIRS, YarnConfiguration.DEFAULT_NM_LOG_DIRS);\n     \n     boolean containerLogDirStatus \u003d false;\n     FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n     for (String rootLogDir : rootLogDirs) {\n       // create $log.dir/$appid/$containerid\n       Path appLogDir \u003d new Path(rootLogDir, appId);\n       Path containerLogDir \u003d new Path(appLogDir, containerId);\n       try {\n         lfs.mkdir(containerLogDir, containerLogDirPerms, true);\n       } catch (IOException e) {\n         LOG.warn(\"Unable to create the container-log directory : \"\n             + appLogDir, e);\n         continue;\n       }\n       containerLogDirStatus \u003d true;\n     }\n     if (!containerLogDirStatus) {\n       throw new IOException(\n           \"Not able to initialize container-log directories \"\n               + \"in any of the configured local directories for container \"\n               + containerId);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createContainerLogDirs(String appId, String containerId)\n      throws IOException {\n    String[] rootLogDirs \u003d\n        getConf()\n            .getStrings(YarnConfiguration.NM_LOG_DIRS, YarnConfiguration.DEFAULT_NM_LOG_DIRS);\n    \n    boolean containerLogDirStatus \u003d false;\n    FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n    for (String rootLogDir : rootLogDirs) {\n      // create $log.dir/$appid/$containerid\n      Path appLogDir \u003d new Path(rootLogDir, appId);\n      Path containerLogDir \u003d new Path(appLogDir, containerId);\n      try {\n        lfs.mkdir(containerLogDir, containerLogDirPerms, true);\n      } catch (IOException e) {\n        LOG.warn(\"Unable to create the container-log directory : \"\n            + appLogDir, e);\n        continue;\n      }\n      containerLogDirStatus \u003d true;\n    }\n    if (!containerLogDirStatus) {\n      throw new IOException(\n          \"Not able to initialize container-log directories \"\n              + \"in any of the configured local directories for container \"\n              + containerId);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void createContainerLogDirs(String appId, String containerId)\n      throws IOException {\n    String[] rootLogDirs \u003d\n        getConf()\n            .getStrings(NMConfig.NM_LOG_DIR, NMConfig.DEFAULT_NM_LOG_DIR);\n    \n    boolean containerLogDirStatus \u003d false;\n    FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n    for (String rootLogDir : rootLogDirs) {\n      // create $log.dir/$appid/$containerid\n      Path appLogDir \u003d new Path(rootLogDir, appId);\n      Path containerLogDir \u003d new Path(appLogDir, containerId);\n      try {\n        lfs.mkdir(containerLogDir, containerLogDirPerms, true);\n      } catch (IOException e) {\n        LOG.warn(\"Unable to create the container-log directory : \"\n            + appLogDir, e);\n        continue;\n      }\n      containerLogDirStatus \u003d true;\n    }\n    if (!containerLogDirStatus) {\n      throw new IOException(\n          \"Not able to initialize container-log directories \"\n              + \"in any of the configured local directories for container \"\n              + containerId);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,28 @@\n+  private void createContainerLogDirs(String appId, String containerId)\n+      throws IOException {\n+    String[] rootLogDirs \u003d\n+        getConf()\n+            .getStrings(NMConfig.NM_LOG_DIR, NMConfig.DEFAULT_NM_LOG_DIR);\n+    \n+    boolean containerLogDirStatus \u003d false;\n+    FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n+    for (String rootLogDir : rootLogDirs) {\n+      // create $log.dir/$appid/$containerid\n+      Path appLogDir \u003d new Path(rootLogDir, appId);\n+      Path containerLogDir \u003d new Path(appLogDir, containerId);\n+      try {\n+        lfs.mkdir(containerLogDir, containerLogDirPerms, true);\n+      } catch (IOException e) {\n+        LOG.warn(\"Unable to create the container-log directory : \"\n+            + appLogDir, e);\n+        continue;\n+      }\n+      containerLogDirStatus \u003d true;\n+    }\n+    if (!containerLogDirStatus) {\n+      throw new IOException(\n+          \"Not able to initialize container-log directories \"\n+              + \"in any of the configured local directories for container \"\n+              + containerId);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void createContainerLogDirs(String appId, String containerId)\n      throws IOException {\n    String[] rootLogDirs \u003d\n        getConf()\n            .getStrings(NMConfig.NM_LOG_DIR, NMConfig.DEFAULT_NM_LOG_DIR);\n    \n    boolean containerLogDirStatus \u003d false;\n    FsPermission containerLogDirPerms \u003d new FsPermission(LOGDIR_PERM);\n    for (String rootLogDir : rootLogDirs) {\n      // create $log.dir/$appid/$containerid\n      Path appLogDir \u003d new Path(rootLogDir, appId);\n      Path containerLogDir \u003d new Path(appLogDir, containerId);\n      try {\n        lfs.mkdir(containerLogDir, containerLogDirPerms, true);\n      } catch (IOException e) {\n        LOG.warn(\"Unable to create the container-log directory : \"\n            + appLogDir, e);\n        continue;\n      }\n      containerLogDirStatus \u003d true;\n    }\n    if (!containerLogDirStatus) {\n      throw new IOException(\n          \"Not able to initialize container-log directories \"\n              + \"in any of the configured local directories for container \"\n              + containerId);\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java"
    }
  }
}