{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceUtils.java",
  "functionName": "getResourceTypes",
  "functionId": "getResourceTypes___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
  "functionStartLine": 408,
  "functionEndLine": 412,
  "numCommitsSeen": 45,
  "timeTaken": 3533,
  "changeHistory": [
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
    "9e4ba6aff595b7a5b53d016c97c8334e10f1f2cb",
    "759114b0063907d4c07ea6ee261e861bf5cc3a9a",
    "ceb12c59a34677518a198e19acb4e29cdfc8a0e1"
  ],
  "changeHistoryShort": {
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d": "Yfilerename",
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9": "Ymultichange(Yparameterchange,Ybodychange)",
    "9e4ba6aff595b7a5b53d016c97c8334e10f1f2cb": "Ybodychange",
    "759114b0063907d4c07ea6ee261e861bf5cc3a9a": "Ybodychange",
    "ceb12c59a34677518a198e19acb4e29cdfc8a0e1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-6788. [YARN-3926] Improve performance of resource profile branch\n(Contributed by Sunil Govindan via Daniel Templeton)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "4e5632d28eb8f6b1b8830c2aa89ec6321d477977",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n      Configuration conf) {\n    return getResourceTypes(conf,\n        YarnConfiguration.RESOURCE_TYPES_CONFIGURATION_FILE);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java"
      }
    },
    "6708ac330147b2d3816a31f2ee83e09c41fe0dd9": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5587. Add support for resource profiles. (vvasudev via asuresh)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5587. Add support for resource profiles. (vvasudev via asuresh)\n",
          "commitDate": "12/09/17 9:19 AM",
          "commitName": "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "12/09/17 9:19 AM",
          "commitNameOld": "239c1824a07fede71dd751ed2c1f40036b22170e",
          "commitAuthorOld": "Rohith Sharma K S",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,5 @@\n   private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n-      Configuration conf, String resourceFile) {\n-    if (lock \u003d\u003d null) {\n-      synchronized (ResourceUtils.class) {\n-        if (lock \u003d\u003d null) {\n-          synchronized (ResourceUtils.class) {\n-            Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n-            if (conf \u003d\u003d null) {\n-              conf \u003d new YarnConfiguration();\n-            }\n-            try {\n-              addResourcesFileToConf(resourceFile, conf);\n-              LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n-              initializeResourcesMap(conf, resources);\n-              lock \u003d new Object();\n-            } catch (FileNotFoundException fe) {\n-              LOG.info(\"Unable to find \u0027\" + resourceFile\n-                  + \"\u0027. Falling back to memory and vcores as resources\", fe);\n-              initializeResourcesMap(conf, resources);\n-              lock \u003d new Object();\n-            }\n-          }\n-        }\n-      }\n-    }\n-    return readOnlyResources;\n+      Configuration conf) {\n+    return getResourceTypes(conf,\n+        YarnConfiguration.RESOURCE_TYPES_CONFIGURATION_FILE);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n      Configuration conf) {\n    return getResourceTypes(conf,\n        YarnConfiguration.RESOURCE_TYPES_CONFIGURATION_FILE);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, resourceFile-String]",
            "newValue": "[conf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5587. Add support for resource profiles. (vvasudev via asuresh)\n",
          "commitDate": "12/09/17 9:19 AM",
          "commitName": "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "12/09/17 9:19 AM",
          "commitNameOld": "239c1824a07fede71dd751ed2c1f40036b22170e",
          "commitAuthorOld": "Rohith Sharma K S",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,5 @@\n   private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n-      Configuration conf, String resourceFile) {\n-    if (lock \u003d\u003d null) {\n-      synchronized (ResourceUtils.class) {\n-        if (lock \u003d\u003d null) {\n-          synchronized (ResourceUtils.class) {\n-            Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n-            if (conf \u003d\u003d null) {\n-              conf \u003d new YarnConfiguration();\n-            }\n-            try {\n-              addResourcesFileToConf(resourceFile, conf);\n-              LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n-              initializeResourcesMap(conf, resources);\n-              lock \u003d new Object();\n-            } catch (FileNotFoundException fe) {\n-              LOG.info(\"Unable to find \u0027\" + resourceFile\n-                  + \"\u0027. Falling back to memory and vcores as resources\", fe);\n-              initializeResourcesMap(conf, resources);\n-              lock \u003d new Object();\n-            }\n-          }\n-        }\n-      }\n-    }\n-    return readOnlyResources;\n+      Configuration conf) {\n+    return getResourceTypes(conf,\n+        YarnConfiguration.RESOURCE_TYPES_CONFIGURATION_FILE);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n      Configuration conf) {\n    return getResourceTypes(conf,\n        YarnConfiguration.RESOURCE_TYPES_CONFIGURATION_FILE);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "9e4ba6aff595b7a5b53d016c97c8334e10f1f2cb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5242. Update DominantResourceCalculator to consider all resource types in calculations. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "9e4ba6aff595b7a5b53d016c97c8334e10f1f2cb",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "759114b0063907d4c07ea6ee261e861bf5cc3a9a",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n       Configuration conf, String resourceFile) {\n     if (lock \u003d\u003d null) {\n       synchronized (ResourceUtils.class) {\n         if (lock \u003d\u003d null) {\n           synchronized (ResourceUtils.class) {\n-            lock \u003d new Object();\n             Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n             if (conf \u003d\u003d null) {\n               conf \u003d new YarnConfiguration();\n             }\n             try {\n               addResourcesFileToConf(resourceFile, conf);\n               LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n               initializeResourcesMap(conf, resources);\n+              lock \u003d new Object();\n             } catch (FileNotFoundException fe) {\n               LOG.info(\"Unable to find \u0027\" + resourceFile\n                   + \"\u0027. Falling back to memory and vcores as resources\", fe);\n               initializeResourcesMap(conf, resources);\n+              lock \u003d new Object();\n             }\n           }\n         }\n       }\n     }\n     return readOnlyResources;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n      Configuration conf, String resourceFile) {\n    if (lock \u003d\u003d null) {\n      synchronized (ResourceUtils.class) {\n        if (lock \u003d\u003d null) {\n          synchronized (ResourceUtils.class) {\n            Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n            if (conf \u003d\u003d null) {\n              conf \u003d new YarnConfiguration();\n            }\n            try {\n              addResourcesFileToConf(resourceFile, conf);\n              LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n              initializeResourcesMap(conf, resources);\n              lock \u003d new Object();\n            } catch (FileNotFoundException fe) {\n              LOG.info(\"Unable to find \u0027\" + resourceFile\n                  + \"\u0027. Falling back to memory and vcores as resources\", fe);\n              initializeResourcesMap(conf, resources);\n              lock \u003d new Object();\n            }\n          }\n        }\n      }\n    }\n    return readOnlyResources;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {}
    },
    "759114b0063907d4c07ea6ee261e861bf5cc3a9a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4830. Add support for resource types in the nodemanager. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "759114b0063907d4c07ea6ee261e861bf5cc3a9a",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "ceb12c59a34677518a198e19acb4e29cdfc8a0e1",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,26 @@\n   private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n       Configuration conf, String resourceFile) {\n     if (lock \u003d\u003d null) {\n       synchronized (ResourceUtils.class) {\n         if (lock \u003d\u003d null) {\n           synchronized (ResourceUtils.class) {\n             lock \u003d new Object();\n             Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n             if (conf \u003d\u003d null) {\n               conf \u003d new YarnConfiguration();\n             }\n             try {\n-              InputStream ris \u003d getConfInputStream(resourceFile, conf);\n+              addResourcesFileToConf(resourceFile, conf);\n               LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n-              conf.addResource(ris);\n               initializeResourcesMap(conf, resources);\n-              return resources;\n             } catch (FileNotFoundException fe) {\n               LOG.info(\"Unable to find \u0027\" + resourceFile\n                   + \"\u0027. Falling back to memory and vcores as resources\", fe);\n               initializeResourcesMap(conf, resources);\n-            } catch (IOException ie) {\n-              LOG.fatal(\n-                  \"Exception trying to read resource types configuration \u0027\"\n-                      + resourceFile + \"\u0027.\", ie);\n-              throw new YarnRuntimeException(ie);\n-            } catch (YarnException ye) {\n-              LOG.fatal(\n-                  \"YARN Exception trying to read resource types configuration \u0027\"\n-                      + resourceFile + \"\u0027.\", ye);\n-              throw new YarnRuntimeException(ye);\n             }\n           }\n         }\n       }\n     }\n     return readOnlyResources;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n      Configuration conf, String resourceFile) {\n    if (lock \u003d\u003d null) {\n      synchronized (ResourceUtils.class) {\n        if (lock \u003d\u003d null) {\n          synchronized (ResourceUtils.class) {\n            lock \u003d new Object();\n            Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n            if (conf \u003d\u003d null) {\n              conf \u003d new YarnConfiguration();\n            }\n            try {\n              addResourcesFileToConf(resourceFile, conf);\n              LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n              initializeResourcesMap(conf, resources);\n            } catch (FileNotFoundException fe) {\n              LOG.info(\"Unable to find \u0027\" + resourceFile\n                  + \"\u0027. Falling back to memory and vcores as resources\", fe);\n              initializeResourcesMap(conf, resources);\n            }\n          }\n        }\n      }\n    }\n    return readOnlyResources;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {}
    },
    "ceb12c59a34677518a198e19acb4e29cdfc8a0e1": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4715. Add support to read resource types from a config file. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "ceb12c59a34677518a198e19acb4e29cdfc8a0e1",
      "commitAuthor": "Varun Vasudev",
      "diff": "@@ -0,0 +1,38 @@\n+  private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n+      Configuration conf, String resourceFile) {\n+    if (lock \u003d\u003d null) {\n+      synchronized (ResourceUtils.class) {\n+        if (lock \u003d\u003d null) {\n+          synchronized (ResourceUtils.class) {\n+            lock \u003d new Object();\n+            Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n+            if (conf \u003d\u003d null) {\n+              conf \u003d new YarnConfiguration();\n+            }\n+            try {\n+              InputStream ris \u003d getConfInputStream(resourceFile, conf);\n+              LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n+              conf.addResource(ris);\n+              initializeResourcesMap(conf, resources);\n+              return resources;\n+            } catch (FileNotFoundException fe) {\n+              LOG.info(\"Unable to find \u0027\" + resourceFile\n+                  + \"\u0027. Falling back to memory and vcores as resources\", fe);\n+              initializeResourcesMap(conf, resources);\n+            } catch (IOException ie) {\n+              LOG.fatal(\n+                  \"Exception trying to read resource types configuration \u0027\"\n+                      + resourceFile + \"\u0027.\", ie);\n+              throw new YarnRuntimeException(ie);\n+            } catch (YarnException ye) {\n+              LOG.fatal(\n+                  \"YARN Exception trying to read resource types configuration \u0027\"\n+                      + resourceFile + \"\u0027.\", ye);\n+              throw new YarnRuntimeException(ye);\n+            }\n+          }\n+        }\n+      }\n+    }\n+    return readOnlyResources;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n      Configuration conf, String resourceFile) {\n    if (lock \u003d\u003d null) {\n      synchronized (ResourceUtils.class) {\n        if (lock \u003d\u003d null) {\n          synchronized (ResourceUtils.class) {\n            lock \u003d new Object();\n            Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n            if (conf \u003d\u003d null) {\n              conf \u003d new YarnConfiguration();\n            }\n            try {\n              InputStream ris \u003d getConfInputStream(resourceFile, conf);\n              LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n              conf.addResource(ris);\n              initializeResourcesMap(conf, resources);\n              return resources;\n            } catch (FileNotFoundException fe) {\n              LOG.info(\"Unable to find \u0027\" + resourceFile\n                  + \"\u0027. Falling back to memory and vcores as resources\", fe);\n              initializeResourcesMap(conf, resources);\n            } catch (IOException ie) {\n              LOG.fatal(\n                  \"Exception trying to read resource types configuration \u0027\"\n                      + resourceFile + \"\u0027.\", ie);\n              throw new YarnRuntimeException(ie);\n            } catch (YarnException ye) {\n              LOG.fatal(\n                  \"YARN Exception trying to read resource types configuration \u0027\"\n                      + resourceFile + \"\u0027.\", ye);\n              throw new YarnRuntimeException(ye);\n            }\n          }\n        }\n      }\n    }\n    return readOnlyResources;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java"
    }
  }
}