{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientNamenodeProtocolTranslatorPB.java",
  "functionName": "addBlock",
  "functionId": "addBlock___src-String__clientName-String__previous-ExtendedBlock__excludeNodes-DatanodeInfo[]__fileId-long__favoredNodes-String[]__addBlockFlags-EnumSet__AddBlockFlag__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
  "functionStartLine": 511,
  "functionEndLine": 534,
  "numCommitsSeen": 217,
  "timeTaken": 5597,
  "changeHistory": [
    "0a152103f19a3e8e1b7f33aeb9dd115ba231d7b7",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
    "63d9f1596c92206cce3b72e3214d2fb5f6242b90",
    "06022b8fdc40e50eaac63758246353058e8cfa6d",
    "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
    "5d2ffde68e2c14ee33fa2ba4a34cb42fbd14b5ec",
    "4525c4a25ba90163c9543116e2bd54239e0dd097",
    "3cd17b614e9436d06cd9b4ccc5f9cf59fbe1cf21",
    "8134b1c8702d7d6b3994c73b34afc7f8ee33ac6e",
    "d8dfcdcbc2e2df3aa1d7b309f263434739475e7e",
    "3954a2fb1cbc7a8a0d1ad5859e7f5c9415530f4c",
    "6a609cb471d413b15e3659cc9d7cd6f5f3357256",
    "b5229fd19bfecc2e5249db652ad34ec08152334b",
    "3001a172c8868763f8e59e866e36f7f50dee62cc",
    "13345f3a85b6b66c71a38e7c187c8ebb7cb5c35e",
    "48da033901d3471ef176a94104158546152353e9"
  ],
  "changeHistoryShort": {
    "0a152103f19a3e8e1b7f33aeb9dd115ba231d7b7": "Ymultichange(Yparameterchange,Ybodychange)",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": "Yexceptionschange",
    "63d9f1596c92206cce3b72e3214d2fb5f6242b90": "Yfilerename",
    "06022b8fdc40e50eaac63758246353058e8cfa6d": "Ybodychange",
    "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42": "Ybodychange",
    "5d2ffde68e2c14ee33fa2ba4a34cb42fbd14b5ec": "Ymultichange(Yparameterchange,Ybodychange)",
    "4525c4a25ba90163c9543116e2bd54239e0dd097": "Ymultichange(Yparameterchange,Ybodychange)",
    "3cd17b614e9436d06cd9b4ccc5f9cf59fbe1cf21": "Ybodychange",
    "8134b1c8702d7d6b3994c73b34afc7f8ee33ac6e": "Ybodychange",
    "d8dfcdcbc2e2df3aa1d7b309f263434739475e7e": "Ybodychange",
    "3954a2fb1cbc7a8a0d1ad5859e7f5c9415530f4c": "Ybodychange",
    "6a609cb471d413b15e3659cc9d7cd6f5f3357256": "Ybodychange",
    "b5229fd19bfecc2e5249db652ad34ec08152334b": "Ybodychange",
    "3001a172c8868763f8e59e866e36f7f50dee62cc": "Ybodychange",
    "13345f3a85b6b66c71a38e7c187c8ebb7cb5c35e": "Ybodychange",
    "48da033901d3471ef176a94104158546152353e9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0a152103f19a3e8e1b7f33aeb9dd115ba231d7b7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-3702. Add an option for NOT writing the blocks locally if there is a datanode on the same box as the client. (Contributed by Lei (Eddy) Xu)\n",
      "commitDate": "27/04/16 2:22 PM",
      "commitName": "0a152103f19a3e8e1b7f33aeb9dd115ba231d7b7",
      "commitAuthor": "Lei Xu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-3702. Add an option for NOT writing the blocks locally if there is a datanode on the same box as the client. (Contributed by Lei (Eddy) Xu)\n",
          "commitDate": "27/04/16 2:22 PM",
          "commitName": "0a152103f19a3e8e1b7f33aeb9dd115ba231d7b7",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "26/04/16 5:10 PM",
          "commitNameOld": "fc94810d3f537e51e826fc21ade7867892b9d8dc",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 0.88,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,24 @@\n   public LocatedBlock addBlock(String src, String clientName,\n       ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId,\n-      String[] favoredNodes) throws IOException {\n+      String[] favoredNodes, EnumSet\u003cAddBlockFlag\u003e addBlockFlags)\n+      throws IOException {\n     AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n         .setSrc(src).setClientName(clientName).setFileId(fileId);\n     if (previous !\u003d null)\n       req.setPrevious(PBHelperClient.convert(previous));\n     if (excludeNodes !\u003d null)\n       req.addAllExcludeNodes(PBHelperClient.convert(excludeNodes));\n     if (favoredNodes !\u003d null) {\n       req.addAllFavoredNodes(Arrays.asList(favoredNodes));\n     }\n+    if (addBlockFlags !\u003d null) {\n+      req.addAllFlags(PBHelperClient.convertAddBlockFlags(\n+          addBlockFlags));\n+    }\n     try {\n       return PBHelperClient.convertLocatedBlockProto(\n           rpcProxy.addBlock(null, req.build()).getBlock());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId,\n      String[] favoredNodes, EnumSet\u003cAddBlockFlag\u003e addBlockFlags)\n      throws IOException {\n    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n        .setSrc(src).setClientName(clientName).setFileId(fileId);\n    if (previous !\u003d null)\n      req.setPrevious(PBHelperClient.convert(previous));\n    if (excludeNodes !\u003d null)\n      req.addAllExcludeNodes(PBHelperClient.convert(excludeNodes));\n    if (favoredNodes !\u003d null) {\n      req.addAllFavoredNodes(Arrays.asList(favoredNodes));\n    }\n    if (addBlockFlags !\u003d null) {\n      req.addAllFlags(PBHelperClient.convertAddBlockFlags(\n          addBlockFlags));\n    }\n    try {\n      return PBHelperClient.convertLocatedBlockProto(\n          rpcProxy.addBlock(null, req.build()).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "[src-String, clientName-String, previous-ExtendedBlock, excludeNodes-DatanodeInfo[], fileId-long, favoredNodes-String[]]",
            "newValue": "[src-String, clientName-String, previous-ExtendedBlock, excludeNodes-DatanodeInfo[], fileId-long, favoredNodes-String[], addBlockFlags-EnumSet\u003cAddBlockFlag\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3702. Add an option for NOT writing the blocks locally if there is a datanode on the same box as the client. (Contributed by Lei (Eddy) Xu)\n",
          "commitDate": "27/04/16 2:22 PM",
          "commitName": "0a152103f19a3e8e1b7f33aeb9dd115ba231d7b7",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "26/04/16 5:10 PM",
          "commitNameOld": "fc94810d3f537e51e826fc21ade7867892b9d8dc",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 0.88,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,24 @@\n   public LocatedBlock addBlock(String src, String clientName,\n       ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId,\n-      String[] favoredNodes) throws IOException {\n+      String[] favoredNodes, EnumSet\u003cAddBlockFlag\u003e addBlockFlags)\n+      throws IOException {\n     AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n         .setSrc(src).setClientName(clientName).setFileId(fileId);\n     if (previous !\u003d null)\n       req.setPrevious(PBHelperClient.convert(previous));\n     if (excludeNodes !\u003d null)\n       req.addAllExcludeNodes(PBHelperClient.convert(excludeNodes));\n     if (favoredNodes !\u003d null) {\n       req.addAllFavoredNodes(Arrays.asList(favoredNodes));\n     }\n+    if (addBlockFlags !\u003d null) {\n+      req.addAllFlags(PBHelperClient.convertAddBlockFlags(\n+          addBlockFlags));\n+    }\n     try {\n       return PBHelperClient.convertLocatedBlockProto(\n           rpcProxy.addBlock(null, req.build()).getBlock());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId,\n      String[] favoredNodes, EnumSet\u003cAddBlockFlag\u003e addBlockFlags)\n      throws IOException {\n    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n        .setSrc(src).setClientName(clientName).setFileId(fileId);\n    if (previous !\u003d null)\n      req.setPrevious(PBHelperClient.convert(previous));\n    if (excludeNodes !\u003d null)\n      req.addAllExcludeNodes(PBHelperClient.convert(excludeNodes));\n    if (favoredNodes !\u003d null) {\n      req.addAllFavoredNodes(Arrays.asList(favoredNodes));\n    }\n    if (addBlockFlags !\u003d null) {\n      req.addAllFlags(PBHelperClient.convertAddBlockFlags(\n          addBlockFlags));\n    }\n    try {\n      return PBHelperClient.convertLocatedBlockProto(\n          rpcProxy.addBlock(null, req.build()).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
          "extendedDetails": {}
        }
      ]
    },
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": {
      "type": "Yexceptionschange",
      "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "03/10/15 11:38 AM",
      "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/09/15 1:39 AM",
      "commitNameOld": "8fd55202468b28422b0df888641c9b08906fe4a7",
      "commitAuthorOld": "",
      "daysBetweenCommits": 4.42,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,19 @@\n   public LocatedBlock addBlock(String src, String clientName,\n       ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId,\n-      String[] favoredNodes)\n-      throws AccessControlException, FileNotFoundException,\n-      NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n-      IOException {\n+      String[] favoredNodes) throws IOException {\n     AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n         .setSrc(src).setClientName(clientName).setFileId(fileId);\n-    if (previous !\u003d null) \n+    if (previous !\u003d null)\n       req.setPrevious(PBHelperClient.convert(previous));\n     if (excludeNodes !\u003d null)\n       req.addAllExcludeNodes(PBHelperClient.convert(excludeNodes));\n     if (favoredNodes !\u003d null) {\n       req.addAllFavoredNodes(Arrays.asList(favoredNodes));\n     }\n     try {\n       return PBHelperClient.convertLocatedBlockProto(\n           rpcProxy.addBlock(null, req.build()).getBlock());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId,\n      String[] favoredNodes) throws IOException {\n    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n        .setSrc(src).setClientName(clientName).setFileId(fileId);\n    if (previous !\u003d null)\n      req.setPrevious(PBHelperClient.convert(previous));\n    if (excludeNodes !\u003d null)\n      req.addAllExcludeNodes(PBHelperClient.convert(excludeNodes));\n    if (favoredNodes !\u003d null) {\n      req.addAllFavoredNodes(Arrays.asList(favoredNodes));\n    }\n    try {\n      return PBHelperClient.convertLocatedBlockProto(\n          rpcProxy.addBlock(null, req.build()).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
      "extendedDetails": {
        "oldValue": "[AccessControlException, FileNotFoundException, NotReplicatedYetException, SafeModeException, UnresolvedLinkException, IOException]",
        "newValue": "[IOException]"
      }
    },
    "63d9f1596c92206cce3b72e3214d2fb5f6242b90": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-9039. Separate client and server side methods of o.a.h.hdfs.NameNodeProxies. Contributed by Mingliang Liu.\n",
      "commitDate": "22/09/15 8:52 PM",
      "commitName": "63d9f1596c92206cce3b72e3214d2fb5f6242b90",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "22/09/15 9:08 AM",
      "commitNameOld": "cc2b4739902df60254dce2ddb23ef8f6ff2a3495",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 0.49,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId,\n      String[] favoredNodes)\n      throws AccessControlException, FileNotFoundException,\n      NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n        .setSrc(src).setClientName(clientName).setFileId(fileId);\n    if (previous !\u003d null) \n      req.setPrevious(PBHelperClient.convert(previous));\n    if (excludeNodes !\u003d null)\n      req.addAllExcludeNodes(PBHelperClient.convert(excludeNodes));\n    if (favoredNodes !\u003d null) {\n      req.addAllFavoredNodes(Arrays.asList(favoredNodes));\n    }\n    try {\n      return PBHelperClient.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java"
      }
    },
    "06022b8fdc40e50eaac63758246353058e8cfa6d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
      "commitDate": "21/09/15 6:53 PM",
      "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "22/08/15 1:31 PM",
      "commitNameOld": "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 30.22,
      "commitsBetweenForRepo": 176,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public LocatedBlock addBlock(String src, String clientName,\n       ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId,\n       String[] favoredNodes)\n       throws AccessControlException, FileNotFoundException,\n       NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n       IOException {\n     AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n         .setSrc(src).setClientName(clientName).setFileId(fileId);\n     if (previous !\u003d null) \n       req.setPrevious(PBHelperClient.convert(previous));\n     if (excludeNodes !\u003d null)\n       req.addAllExcludeNodes(PBHelperClient.convert(excludeNodes));\n     if (favoredNodes !\u003d null) {\n       req.addAllFavoredNodes(Arrays.asList(favoredNodes));\n     }\n     try {\n-      return PBHelper.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n+      return PBHelperClient.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId,\n      String[] favoredNodes)\n      throws AccessControlException, FileNotFoundException,\n      NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n        .setSrc(src).setClientName(clientName).setFileId(fileId);\n    if (previous !\u003d null) \n      req.setPrevious(PBHelperClient.convert(previous));\n    if (excludeNodes !\u003d null)\n      req.addAllExcludeNodes(PBHelperClient.convert(excludeNodes));\n    if (favoredNodes !\u003d null) {\n      req.addAllFavoredNodes(Arrays.asList(favoredNodes));\n    }\n    try {\n      return PBHelperClient.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
      "extendedDetails": {}
    },
    "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8934. Move ShortCircuitShm to hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "22/08/15 1:31 PM",
      "commitName": "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "05/08/15 10:40 PM",
      "commitNameOld": "cc71ad80e184fc6e5043729e8cfcf6a62ca3e71f",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 16.62,
      "commitsBetweenForRepo": 81,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public LocatedBlock addBlock(String src, String clientName,\n       ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId,\n       String[] favoredNodes)\n       throws AccessControlException, FileNotFoundException,\n       NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n       IOException {\n     AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n         .setSrc(src).setClientName(clientName).setFileId(fileId);\n     if (previous !\u003d null) \n-      req.setPrevious(PBHelper.convert(previous)); \n-    if (excludeNodes !\u003d null) \n-      req.addAllExcludeNodes(PBHelper.convert(excludeNodes));\n+      req.setPrevious(PBHelperClient.convert(previous));\n+    if (excludeNodes !\u003d null)\n+      req.addAllExcludeNodes(PBHelperClient.convert(excludeNodes));\n     if (favoredNodes !\u003d null) {\n       req.addAllFavoredNodes(Arrays.asList(favoredNodes));\n     }\n     try {\n       return PBHelper.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId,\n      String[] favoredNodes)\n      throws AccessControlException, FileNotFoundException,\n      NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n        .setSrc(src).setClientName(clientName).setFileId(fileId);\n    if (previous !\u003d null) \n      req.setPrevious(PBHelperClient.convert(previous));\n    if (excludeNodes !\u003d null)\n      req.addAllExcludeNodes(PBHelperClient.convert(excludeNodes));\n    if (favoredNodes !\u003d null) {\n      req.addAllFavoredNodes(Arrays.asList(favoredNodes));\n    }\n    try {\n      return PBHelper.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
      "extendedDetails": {}
    },
    "5d2ffde68e2c14ee33fa2ba4a34cb42fbd14b5ec": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-2576. Enhances the DistributedFileSystem\u0027s create API so that clients can specify favored datanodes for a file\u0027s blocks. Contributed by Devaraj Das and Pritam Damania.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1476395 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/04/13 1:39 PM",
      "commitName": "5d2ffde68e2c14ee33fa2ba4a34cb42fbd14b5ec",
      "commitAuthor": "Devaraj Das",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-2576. Enhances the DistributedFileSystem\u0027s create API so that clients can specify favored datanodes for a file\u0027s blocks. Contributed by Devaraj Das and Pritam Damania.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1476395 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "26/04/13 1:39 PM",
          "commitName": "5d2ffde68e2c14ee33fa2ba4a34cb42fbd14b5ec",
          "commitAuthor": "Devaraj Das",
          "commitDateOld": "07/04/13 11:01 AM",
          "commitNameOld": "c5bb615317f1aa8d3cba4cf331f732126655b68e",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 19.11,
          "commitsBetweenForRepo": 105,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,21 @@\n   public LocatedBlock addBlock(String src, String clientName,\n-      ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId)\n+      ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId,\n+      String[] favoredNodes)\n       throws AccessControlException, FileNotFoundException,\n       NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n       IOException {\n     AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n         .setSrc(src).setClientName(clientName).setFileId(fileId);\n     if (previous !\u003d null) \n       req.setPrevious(PBHelper.convert(previous)); \n     if (excludeNodes !\u003d null) \n       req.addAllExcludeNodes(PBHelper.convert(excludeNodes));\n+    if (favoredNodes !\u003d null) {\n+      req.addAllFavoredNodes(Arrays.asList(favoredNodes));\n+    }\n     try {\n       return PBHelper.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId,\n      String[] favoredNodes)\n      throws AccessControlException, FileNotFoundException,\n      NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n        .setSrc(src).setClientName(clientName).setFileId(fileId);\n    if (previous !\u003d null) \n      req.setPrevious(PBHelper.convert(previous)); \n    if (excludeNodes !\u003d null) \n      req.addAllExcludeNodes(PBHelper.convert(excludeNodes));\n    if (favoredNodes !\u003d null) {\n      req.addAllFavoredNodes(Arrays.asList(favoredNodes));\n    }\n    try {\n      return PBHelper.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "[src-String, clientName-String, previous-ExtendedBlock, excludeNodes-DatanodeInfo[], fileId-long]",
            "newValue": "[src-String, clientName-String, previous-ExtendedBlock, excludeNodes-DatanodeInfo[], fileId-long, favoredNodes-String[]]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2576. Enhances the DistributedFileSystem\u0027s create API so that clients can specify favored datanodes for a file\u0027s blocks. Contributed by Devaraj Das and Pritam Damania.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1476395 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "26/04/13 1:39 PM",
          "commitName": "5d2ffde68e2c14ee33fa2ba4a34cb42fbd14b5ec",
          "commitAuthor": "Devaraj Das",
          "commitDateOld": "07/04/13 11:01 AM",
          "commitNameOld": "c5bb615317f1aa8d3cba4cf331f732126655b68e",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 19.11,
          "commitsBetweenForRepo": 105,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,21 @@\n   public LocatedBlock addBlock(String src, String clientName,\n-      ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId)\n+      ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId,\n+      String[] favoredNodes)\n       throws AccessControlException, FileNotFoundException,\n       NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n       IOException {\n     AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n         .setSrc(src).setClientName(clientName).setFileId(fileId);\n     if (previous !\u003d null) \n       req.setPrevious(PBHelper.convert(previous)); \n     if (excludeNodes !\u003d null) \n       req.addAllExcludeNodes(PBHelper.convert(excludeNodes));\n+    if (favoredNodes !\u003d null) {\n+      req.addAllFavoredNodes(Arrays.asList(favoredNodes));\n+    }\n     try {\n       return PBHelper.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId,\n      String[] favoredNodes)\n      throws AccessControlException, FileNotFoundException,\n      NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n        .setSrc(src).setClientName(clientName).setFileId(fileId);\n    if (previous !\u003d null) \n      req.setPrevious(PBHelper.convert(previous)); \n    if (excludeNodes !\u003d null) \n      req.addAllExcludeNodes(PBHelper.convert(excludeNodes));\n    if (favoredNodes !\u003d null) {\n      req.addAllFavoredNodes(Arrays.asList(favoredNodes));\n    }\n    try {\n      return PBHelper.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
          "extendedDetails": {}
        }
      ]
    },
    "4525c4a25ba90163c9543116e2bd54239e0dd097": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-4340. Update addBlock() to inculde inode id as additional argument. Contributed Brandon Li.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1443169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/02/13 11:52 AM",
      "commitName": "4525c4a25ba90163c9543116e2bd54239e0dd097",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4340. Update addBlock() to inculde inode id as additional argument. Contributed Brandon Li.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1443169 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/02/13 11:52 AM",
          "commitName": "4525c4a25ba90163c9543116e2bd54239e0dd097",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "17/01/13 10:21 AM",
          "commitNameOld": "8f70a25b1c5df498c441a9b3475a8ada5a92111f",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 20.06,
          "commitsBetweenForRepo": 88,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n   public LocatedBlock addBlock(String src, String clientName,\n-      ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n+      ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId)\n       throws AccessControlException, FileNotFoundException,\n       NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n       IOException {\n-    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder().setSrc(src)\n-        .setClientName(clientName);\n+    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n+        .setSrc(src).setClientName(clientName).setFileId(fileId);\n     if (previous !\u003d null) \n       req.setPrevious(PBHelper.convert(previous)); \n     if (excludeNodes !\u003d null) \n       req.addAllExcludeNodes(PBHelper.convert(excludeNodes));\n     try {\n       return PBHelper.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId)\n      throws AccessControlException, FileNotFoundException,\n      NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n        .setSrc(src).setClientName(clientName).setFileId(fileId);\n    if (previous !\u003d null) \n      req.setPrevious(PBHelper.convert(previous)); \n    if (excludeNodes !\u003d null) \n      req.addAllExcludeNodes(PBHelper.convert(excludeNodes));\n    try {\n      return PBHelper.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "[src-String, clientName-String, previous-ExtendedBlock, excludeNodes-DatanodeInfo[]]",
            "newValue": "[src-String, clientName-String, previous-ExtendedBlock, excludeNodes-DatanodeInfo[], fileId-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4340. Update addBlock() to inculde inode id as additional argument. Contributed Brandon Li.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1443169 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/02/13 11:52 AM",
          "commitName": "4525c4a25ba90163c9543116e2bd54239e0dd097",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "17/01/13 10:21 AM",
          "commitNameOld": "8f70a25b1c5df498c441a9b3475a8ada5a92111f",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 20.06,
          "commitsBetweenForRepo": 88,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n   public LocatedBlock addBlock(String src, String clientName,\n-      ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n+      ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId)\n       throws AccessControlException, FileNotFoundException,\n       NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n       IOException {\n-    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder().setSrc(src)\n-        .setClientName(clientName);\n+    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n+        .setSrc(src).setClientName(clientName).setFileId(fileId);\n     if (previous !\u003d null) \n       req.setPrevious(PBHelper.convert(previous)); \n     if (excludeNodes !\u003d null) \n       req.addAllExcludeNodes(PBHelper.convert(excludeNodes));\n     try {\n       return PBHelper.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes, long fileId)\n      throws AccessControlException, FileNotFoundException,\n      NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder()\n        .setSrc(src).setClientName(clientName).setFileId(fileId);\n    if (previous !\u003d null) \n      req.setPrevious(PBHelper.convert(previous)); \n    if (excludeNodes !\u003d null) \n      req.addAllExcludeNodes(PBHelper.convert(excludeNodes));\n    try {\n      return PBHelper.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
          "extendedDetails": {}
        }
      ]
    },
    "3cd17b614e9436d06cd9b4ccc5f9cf59fbe1cf21": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4363. Combine PBHelper and HdfsProtoUtil and remove redundant methods. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431088 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/01/13 1:20 PM",
      "commitName": "3cd17b614e9436d06cd9b4ccc5f9cf59fbe1cf21",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "07/01/13 8:28 PM",
      "commitNameOld": "18e731074e327f4396f729a857576d7f9bf99028",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 1.7,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public LocatedBlock addBlock(String src, String clientName,\n       ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n       throws AccessControlException, FileNotFoundException,\n       NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n       IOException {\n     AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder().setSrc(src)\n         .setClientName(clientName);\n     if (previous !\u003d null) \n       req.setPrevious(PBHelper.convert(previous)); \n     if (excludeNodes !\u003d null) \n-      req.addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)));\n+      req.addAllExcludeNodes(PBHelper.convert(excludeNodes));\n     try {\n       return PBHelper.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n      throws AccessControlException, FileNotFoundException,\n      NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder().setSrc(src)\n        .setClientName(clientName);\n    if (previous !\u003d null) \n      req.setPrevious(PBHelper.convert(previous)); \n    if (excludeNodes !\u003d null) \n      req.addAllExcludeNodes(PBHelper.convert(excludeNodes));\n    try {\n      return PBHelper.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
      "extendedDetails": {}
    },
    "8134b1c8702d7d6b3994c73b34afc7f8ee33ac6e": {
      "type": "Ybodychange",
      "commitMessage": "Merge trunk into HA branch.\n\nSeveral conflicts around introduction of protobuf translator for DatanodeProtocol - mostly trivial resolutions.\n\nNB: this does not successfully pass any tests since the HAStatus field needs\nto be integrated into the HeartbeatResponse Protobuf implementation.\nThat will be a separate commit for clearer history.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1214518 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/12/11 2:47 PM",
      "commitName": "8134b1c8702d7d6b3994c73b34afc7f8ee33ac6e",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "12/12/11 4:21 PM",
      "commitNameOld": "13345f3a85b6b66c71a38e7c187c8ebb7cb5c35e",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 1.93,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   public LocatedBlock addBlock(String src, String clientName,\n       ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n       throws AccessControlException, FileNotFoundException,\n       NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n       IOException {\n-    AddBlockRequestProto.Builder builder \u003d AddBlockRequestProto.newBuilder();\n-    builder.setSrc(src)\n-        .setClientName(clientName)\n-        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)));\n-    if (previous !\u003d null) {\n-      builder.setPrevious(PBHelper.convert(previous));\n-    }\n+    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder().setSrc(src)\n+        .setClientName(clientName);\n+    if (previous !\u003d null) \n+      req.setPrevious(PBHelper.convert(previous)); \n+    if (excludeNodes !\u003d null) \n+      req.addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)));\n     try {\n-      return PBHelper.convert(rpcProxy.addBlock(null, builder.build()).getBlock());\n+      return PBHelper.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n      throws AccessControlException, FileNotFoundException,\n      NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder().setSrc(src)\n        .setClientName(clientName);\n    if (previous !\u003d null) \n      req.setPrevious(PBHelper.convert(previous)); \n    if (excludeNodes !\u003d null) \n      req.addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)));\n    try {\n      return PBHelper.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
      "extendedDetails": {}
    },
    "d8dfcdcbc2e2df3aa1d7b309f263434739475e7e": {
      "type": "Ybodychange",
      "commitMessage": "    HDFS-2669 Enable protobuf rpc for ClientNamenodeProtocol\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1214128 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/12/11 1:27 AM",
      "commitName": "d8dfcdcbc2e2df3aa1d7b309f263434739475e7e",
      "commitAuthor": "Sanjay Radia",
      "commitDateOld": "13/12/11 3:31 PM",
      "commitNameOld": "3954a2fb1cbc7a8a0d1ad5859e7f5c9415530f4c",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 0.41,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   public LocatedBlock addBlock(String src, String clientName,\n       ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n       throws AccessControlException, FileNotFoundException,\n       NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n       IOException {\n-    AddBlockRequestProto.Builder builder \u003d AddBlockRequestProto.newBuilder();\n-    builder.setSrc(src)\n-        .setClientName(clientName)\n-        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)));\n-    if (previous !\u003d null) {\n-      builder.setPrevious(PBHelper.convert(previous));\n-    }\n+    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder().setSrc(src)\n+        .setClientName(clientName);\n+    if (previous !\u003d null) \n+      req.setPrevious(PBHelper.convert(previous)); \n+    if (excludeNodes !\u003d null) \n+      req.addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)));\n     try {\n-      return PBHelper.convert(rpcProxy.addBlock(null, builder.build()).getBlock());\n+      return PBHelper.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n      throws AccessControlException, FileNotFoundException,\n      NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AddBlockRequestProto.Builder req \u003d AddBlockRequestProto.newBuilder().setSrc(src)\n        .setClientName(clientName);\n    if (previous !\u003d null) \n      req.setPrevious(PBHelper.convert(previous)); \n    if (excludeNodes !\u003d null) \n      req.addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)));\n    try {\n      return PBHelper.convert(rpcProxy.addBlock(null, req.build()).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
      "extendedDetails": {}
    },
    "3954a2fb1cbc7a8a0d1ad5859e7f5c9415530f4c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2663. Optional protobuf parameters are not handled correctly. Contributed by Suresh Srinivas.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213985 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:31 PM",
      "commitName": "3954a2fb1cbc7a8a0d1ad5859e7f5c9415530f4c",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "13/12/11 3:27 PM",
      "commitNameOld": "6a609cb471d413b15e3659cc9d7cd6f5f3357256",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,18 @@\n   public LocatedBlock addBlock(String src, String clientName,\n       ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n       throws AccessControlException, FileNotFoundException,\n       NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n       IOException {\n-    AddBlockRequestProto req \u003d AddBlockRequestProto.newBuilder().setSrc(src)\n-        .setClientName(clientName).setPrevious(PBHelper.convert(previous))\n-        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)))\n-        .build();\n+    AddBlockRequestProto.Builder builder \u003d AddBlockRequestProto.newBuilder();\n+    builder.setSrc(src)\n+        .setClientName(clientName)\n+        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)));\n+    if (previous !\u003d null) {\n+      builder.setPrevious(PBHelper.convert(previous));\n+    }\n     try {\n-      return PBHelper.convert(rpcProxy.addBlock(null, req).getBlock());\n+      return PBHelper.convert(rpcProxy.addBlock(null, builder.build()).getBlock());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n      throws AccessControlException, FileNotFoundException,\n      NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AddBlockRequestProto.Builder builder \u003d AddBlockRequestProto.newBuilder();\n    builder.setSrc(src)\n        .setClientName(clientName)\n        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)));\n    if (previous !\u003d null) {\n      builder.setPrevious(PBHelper.convert(previous));\n    }\n    try {\n      return PBHelper.convert(rpcProxy.addBlock(null, builder.build()).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
      "extendedDetails": {}
    },
    "6a609cb471d413b15e3659cc9d7cd6f5f3357256": {
      "type": "Ybodychange",
      "commitMessage": "Reverting the patch r1213981\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213984 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:27 PM",
      "commitName": "6a609cb471d413b15e3659cc9d7cd6f5f3357256",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "13/12/11 3:22 PM",
      "commitNameOld": "b5229fd19bfecc2e5249db652ad34ec08152334b",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,15 @@\n   public LocatedBlock addBlock(String src, String clientName,\n       ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n       throws AccessControlException, FileNotFoundException,\n       NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n       IOException {\n-    AddBlockRequestProto.Builder builder \u003d AddBlockRequestProto.newBuilder();\n-    builder.setSrc(src)\n-        .setClientName(clientName)\n-        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)));\n-    if (previous !\u003d null) {\n-      builder.setPrevious(PBHelper.convert(previous));\n-    }\n+    AddBlockRequestProto req \u003d AddBlockRequestProto.newBuilder().setSrc(src)\n+        .setClientName(clientName).setPrevious(PBHelper.convert(previous))\n+        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)))\n+        .build();\n     try {\n-      return PBHelper.convert(rpcProxy.addBlock(null, builder.build()).getBlock());\n+      return PBHelper.convert(rpcProxy.addBlock(null, req).getBlock());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n      throws AccessControlException, FileNotFoundException,\n      NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AddBlockRequestProto req \u003d AddBlockRequestProto.newBuilder().setSrc(src)\n        .setClientName(clientName).setPrevious(PBHelper.convert(previous))\n        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)))\n        .build();\n    try {\n      return PBHelper.convert(rpcProxy.addBlock(null, req).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
      "extendedDetails": {}
    },
    "b5229fd19bfecc2e5249db652ad34ec08152334b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2663. Optional protobuf parameters are not handled correctly. Contributed by Suresh Srinivas.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213981 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:22 PM",
      "commitName": "b5229fd19bfecc2e5249db652ad34ec08152334b",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "13/12/11 3:17 PM",
      "commitNameOld": "3001a172c8868763f8e59e866e36f7f50dee62cc",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,18 @@\n   public LocatedBlock addBlock(String src, String clientName,\n       ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n       throws AccessControlException, FileNotFoundException,\n       NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n       IOException {\n-    AddBlockRequestProto req \u003d AddBlockRequestProto.newBuilder().setSrc(src)\n-        .setClientName(clientName).setPrevious(PBHelper.convert(previous))\n-        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)))\n-        .build();\n+    AddBlockRequestProto.Builder builder \u003d AddBlockRequestProto.newBuilder();\n+    builder.setSrc(src)\n+        .setClientName(clientName)\n+        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)));\n+    if (previous !\u003d null) {\n+      builder.setPrevious(PBHelper.convert(previous));\n+    }\n     try {\n-      return PBHelper.convert(rpcProxy.addBlock(null, req).getBlock());\n+      return PBHelper.convert(rpcProxy.addBlock(null, builder.build()).getBlock());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n      throws AccessControlException, FileNotFoundException,\n      NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AddBlockRequestProto.Builder builder \u003d AddBlockRequestProto.newBuilder();\n    builder.setSrc(src)\n        .setClientName(clientName)\n        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)));\n    if (previous !\u003d null) {\n      builder.setPrevious(PBHelper.convert(previous));\n    }\n    try {\n      return PBHelper.convert(rpcProxy.addBlock(null, builder.build()).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
      "extendedDetails": {}
    },
    "3001a172c8868763f8e59e866e36f7f50dee62cc": {
      "type": "Ybodychange",
      "commitMessage": "Reverting r1213512 because it committed changes that were not part of the patch.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213980 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:17 PM",
      "commitName": "3001a172c8868763f8e59e866e36f7f50dee62cc",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "12/12/11 4:21 PM",
      "commitNameOld": "13345f3a85b6b66c71a38e7c187c8ebb7cb5c35e",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 0.96,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,15 @@\n   public LocatedBlock addBlock(String src, String clientName,\n       ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n       throws AccessControlException, FileNotFoundException,\n       NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n       IOException {\n-    AddBlockRequestProto.Builder builder \u003d AddBlockRequestProto.newBuilder();\n-    builder.setSrc(src)\n-        .setClientName(clientName)\n-        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)));\n-    if (previous !\u003d null) {\n-      builder.setPrevious(PBHelper.convert(previous));\n-    }\n+    AddBlockRequestProto req \u003d AddBlockRequestProto.newBuilder().setSrc(src)\n+        .setClientName(clientName).setPrevious(PBHelper.convert(previous))\n+        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)))\n+        .build();\n     try {\n-      return PBHelper.convert(rpcProxy.addBlock(null, builder.build()).getBlock());\n+      return PBHelper.convert(rpcProxy.addBlock(null, req).getBlock());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n      throws AccessControlException, FileNotFoundException,\n      NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AddBlockRequestProto req \u003d AddBlockRequestProto.newBuilder().setSrc(src)\n        .setClientName(clientName).setPrevious(PBHelper.convert(previous))\n        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)))\n        .build();\n    try {\n      return PBHelper.convert(rpcProxy.addBlock(null, req).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
      "extendedDetails": {}
    },
    "13345f3a85b6b66c71a38e7c187c8ebb7cb5c35e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2663. Handle protobuf optional parameters correctly. Contributed by Suresh Srinivas.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213512 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/12/11 4:21 PM",
      "commitName": "13345f3a85b6b66c71a38e7c187c8ebb7cb5c35e",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "11/12/11 9:36 PM",
      "commitNameOld": "48da033901d3471ef176a94104158546152353e9",
      "commitAuthorOld": "Sanjay Radia",
      "daysBetweenCommits": 0.78,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,18 @@\n   public LocatedBlock addBlock(String src, String clientName,\n       ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n       throws AccessControlException, FileNotFoundException,\n       NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n       IOException {\n-    AddBlockRequestProto req \u003d AddBlockRequestProto.newBuilder().setSrc(src)\n-        .setClientName(clientName).setPrevious(PBHelper.convert(previous))\n-        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)))\n-        .build();\n+    AddBlockRequestProto.Builder builder \u003d AddBlockRequestProto.newBuilder();\n+    builder.setSrc(src)\n+        .setClientName(clientName)\n+        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)));\n+    if (previous !\u003d null) {\n+      builder.setPrevious(PBHelper.convert(previous));\n+    }\n     try {\n-      return PBHelper.convert(rpcProxy.addBlock(null, req).getBlock());\n+      return PBHelper.convert(rpcProxy.addBlock(null, builder.build()).getBlock());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n      throws AccessControlException, FileNotFoundException,\n      NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AddBlockRequestProto.Builder builder \u003d AddBlockRequestProto.newBuilder();\n    builder.setSrc(src)\n        .setClientName(clientName)\n        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)));\n    if (previous !\u003d null) {\n      builder.setPrevious(PBHelper.convert(previous));\n    }\n    try {\n      return PBHelper.convert(rpcProxy.addBlock(null, builder.build()).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
      "extendedDetails": {}
    },
    "48da033901d3471ef176a94104158546152353e9": {
      "type": "Yintroduced",
      "commitMessage": "    HDFS-2651 ClientNameNodeProtocol Translators for Protocol Buffers (sanjay)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213143 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/12/11 9:36 PM",
      "commitName": "48da033901d3471ef176a94104158546152353e9",
      "commitAuthor": "Sanjay Radia",
      "diff": "@@ -0,0 +1,15 @@\n+  public LocatedBlock addBlock(String src, String clientName,\n+      ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n+      throws AccessControlException, FileNotFoundException,\n+      NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n+      IOException {\n+    AddBlockRequestProto req \u003d AddBlockRequestProto.newBuilder().setSrc(src)\n+        .setClientName(clientName).setPrevious(PBHelper.convert(previous))\n+        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)))\n+        .build();\n+    try {\n+      return PBHelper.convert(rpcProxy.addBlock(null, req).getBlock());\n+    } catch (ServiceException e) {\n+      throw ProtobufHelper.getRemoteException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public LocatedBlock addBlock(String src, String clientName,\n      ExtendedBlock previous, DatanodeInfo[] excludeNodes)\n      throws AccessControlException, FileNotFoundException,\n      NotReplicatedYetException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AddBlockRequestProto req \u003d AddBlockRequestProto.newBuilder().setSrc(src)\n        .setClientName(clientName).setPrevious(PBHelper.convert(previous))\n        .addAllExcludeNodes(Arrays.asList(PBHelper.convert(excludeNodes)))\n        .build();\n    try {\n      return PBHelper.convert(rpcProxy.addBlock(null, req).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java"
    }
  }
}