{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3Guard.java",
  "functionName": "putAuthDirectoryMarker",
  "functionId": "putAuthDirectoryMarker___ms-MetadataStore(modifiers-final)__status-S3AFileStatus(modifiers-final)__timeProvider-ITtlTimeProvider(modifiers-final)__operationState-BulkOperationState(annotations-@Nullable__modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
  "functionStartLine": 212,
  "functionEndLine": 225,
  "numCommitsSeen": 45,
  "timeTaken": 4351,
  "changeHistory": [
    "7f40e6688a5716fca53e1090d8347a43064d6d43",
    "49df83899543586bbcaf80f01399ade031cf68b0",
    "e02eb24e0a9139418120027b694492e0738df20a"
  ],
  "changeHistoryShort": {
    "7f40e6688a5716fca53e1090d8347a43064d6d43": "Ybodychange",
    "49df83899543586bbcaf80f01399ade031cf68b0": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "e02eb24e0a9139418120027b694492e0738df20a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7f40e6688a5716fca53e1090d8347a43064d6d43": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16746. mkdirs and s3guard Authoritative mode.\n\nContributed by Steve Loughran.\n\nThis fixes two problems with S3Guard authoritative mode and\nthe auth directory flags which are stored in DynamoDB.\n\n1. mkdirs was creating dir markers without the auth bit,\n   forcing needless scans on newly created directories and\n   files subsequently added; it was only with the first listStatus call\n   on that directory that the dir would be marked as authoritative -even\n   though it would be complete already.\n\n2. listStatus(path) would reset the authoritative status bit of all\n   child directories even if they were already marked as authoritative.\n\nIssue #2 is possibly the most expensive, as any treewalk using listStatus\n(e.g globfiles) would clear the auth bit for all child directories before\nlisting them. And this would happen every single time...\nessentially you weren\u0027t getting authoritative directory listings.\n\nFor the curious, that the major bug was actually found during testing\n-we\u0027d all missed it during reviews.\n\nA lesson there: the better the tests the fewer the bugs.\n\nMaybe also: something obvious and significant can get by code reviews.\n\n\tmodified:   hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java\n\tmodified:   hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/BulkOperationState.java\n\tmodified:   hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java\n\tmodified:   hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/LocalMetadataStore.java\n\tmodified:   hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/MetadataStore.java\n\tmodified:   hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/NullMetadataStore.java\n\tmodified:   hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java\n\tmodified:   hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/ITestS3GuardWriteBack.java\n\tmodified:   hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/auth/ITestRestrictedReadAccess.java\n\tmodified:   hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/impl/TestPartialDeleteFailures.java\n\tmodified:   hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/ITestDynamoDBMetadataStore.java\n\tmodified:   hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/ITestDynamoDBMetadataStoreAuthoritativeMode.java\n\tmodified:   hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/ITestDynamoDBMetadataStoreScale.java\n\tmodified:   hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/ITestS3GuardFsck.java\n\tmodified:   hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/MetadataStoreTestBase.java\n\tmodified:   hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/TestS3Guard.java\n\nChange-Id: Ic3ffda13f2af2430afedd50fd657b595c83e90a7\n",
      "commitDate": "25/01/20 10:35 AM",
      "commitName": "7f40e6688a5716fca53e1090d8347a43064d6d43",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "10/01/20 3:11 AM",
      "commitNameOld": "49df83899543586bbcaf80f01399ade031cf68b0",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 15.31,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   public static void putAuthDirectoryMarker(\n       final MetadataStore ms,\n       final S3AFileStatus status,\n       final ITtlTimeProvider timeProvider,\n       @Nullable final BulkOperationState operationState) throws IOException {\n     long startTimeNano \u003d System.nanoTime();\n     try {\n       final PathMetadata fileMeta \u003d authoritativeEmptyDirectoryMarker(status);\n       putWithTtl(ms, fileMeta, timeProvider, operationState);\n     } finally {\n+      ms.getInstrumentation().directoryMarkedAuthoritative();\n       ms.getInstrumentation().entryAdded((System.nanoTime() - startTimeNano));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void putAuthDirectoryMarker(\n      final MetadataStore ms,\n      final S3AFileStatus status,\n      final ITtlTimeProvider timeProvider,\n      @Nullable final BulkOperationState operationState) throws IOException {\n    long startTimeNano \u003d System.nanoTime();\n    try {\n      final PathMetadata fileMeta \u003d authoritativeEmptyDirectoryMarker(status);\n      putWithTtl(ms, fileMeta, timeProvider, operationState);\n    } finally {\n      ms.getInstrumentation().directoryMarkedAuthoritative();\n      ms.getInstrumentation().entryAdded((System.nanoTime() - startTimeNano));\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
      "extendedDetails": {}
    },
    "49df83899543586bbcaf80f01399ade031cf68b0": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HADOOP-16697. Tune/audit S3A authoritative mode.\n\nContains:\n\nHADOOP-16474. S3Guard ProgressiveRenameTracker to mark destination\n              dirirectory as authoritative on success.\nHADOOP-16684. S3guard bucket info to list a bit more about\n              authoritative paths.\nHADOOP-16722. S3GuardTool to support FilterFileSystem.\n\nThis patch improves the marking of newly created/import directory\ntrees in S3Guard DynamoDB tables as authoritative.\n\nSpecific changes:\n\n * Renamed directories are marked as authoritative if the entire\n   operation succeeded (HADOOP-16474).\n * When updating parent table entries as part of any table write,\n   there\u0027s no overwriting of their authoritative flag.\n\ns3guard import changes:\n\n* new -verbose flag to print out what is going on.\n\n* The \"s3guard import\" command lets you declare that a directory tree\nis to be marked as authoritative\n\n  hadoop s3guard import -authoritative -verbose s3a://bucket/path\n\nWhen importing a listing and a file is found, the import tool queries\nthe metastore and only updates the entry if the file is different from\nbefore, where different \u003d\u003d new timestamp, etag, or length. S3Guard can get\ntimestamp differences due to clock skew in PUT operations.\n\nAs the recursive list performed by the import command doesn\u0027t retrieve the\nversionID, the existing entry may in fact be more complete.\nWhen updating an existing due to clock skew the existing version ID\nis propagated to the new entry (note: the etags must match; this is needed\nto deal with inconsistent listings).\n\nThere is a new s3guard command to audit a s3guard bucket/path\u0027s\nauthoritative state:\n\n  hadoop s3guard authoritative -check-config s3a://bucket/path\n\nThis is primarily for testing/auditing.\n\nThe s3guard bucket-info command also provides some more details on the\nauthoritative state of a store (HADOOP-16684).\n\nChange-Id: I58001341c04f6f3597fcb4fcb1581ccefeb77d91\n",
      "commitDate": "10/01/20 3:11 AM",
      "commitName": "49df83899543586bbcaf80f01399ade031cf68b0",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-16697. Tune/audit S3A authoritative mode.\n\nContains:\n\nHADOOP-16474. S3Guard ProgressiveRenameTracker to mark destination\n              dirirectory as authoritative on success.\nHADOOP-16684. S3guard bucket info to list a bit more about\n              authoritative paths.\nHADOOP-16722. S3GuardTool to support FilterFileSystem.\n\nThis patch improves the marking of newly created/import directory\ntrees in S3Guard DynamoDB tables as authoritative.\n\nSpecific changes:\n\n * Renamed directories are marked as authoritative if the entire\n   operation succeeded (HADOOP-16474).\n * When updating parent table entries as part of any table write,\n   there\u0027s no overwriting of their authoritative flag.\n\ns3guard import changes:\n\n* new -verbose flag to print out what is going on.\n\n* The \"s3guard import\" command lets you declare that a directory tree\nis to be marked as authoritative\n\n  hadoop s3guard import -authoritative -verbose s3a://bucket/path\n\nWhen importing a listing and a file is found, the import tool queries\nthe metastore and only updates the entry if the file is different from\nbefore, where different \u003d\u003d new timestamp, etag, or length. S3Guard can get\ntimestamp differences due to clock skew in PUT operations.\n\nAs the recursive list performed by the import command doesn\u0027t retrieve the\nversionID, the existing entry may in fact be more complete.\nWhen updating an existing due to clock skew the existing version ID\nis propagated to the new entry (note: the etags must match; this is needed\nto deal with inconsistent listings).\n\nThere is a new s3guard command to audit a s3guard bucket/path\u0027s\nauthoritative state:\n\n  hadoop s3guard authoritative -check-config s3a://bucket/path\n\nThis is primarily for testing/auditing.\n\nThe s3guard bucket-info command also provides some more details on the\nauthoritative state of a store (HADOOP-16684).\n\nChange-Id: I58001341c04f6f3597fcb4fcb1581ccefeb77d91\n",
          "commitDate": "10/01/20 3:11 AM",
          "commitName": "49df83899543586bbcaf80f01399ade031cf68b0",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "26/11/19 7:36 AM",
          "commitNameOld": "ea25f4de236611d388e14a710ebe5d6872c421b6",
          "commitAuthorOld": "Gabor Bota",
          "daysBetweenCommits": 44.82,
          "commitsBetweenForRepo": 155,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,13 @@\n-  public static S3AFileStatus putAndReturn(\n+  public static void putAuthDirectoryMarker(\n       final MetadataStore ms,\n       final S3AFileStatus status,\n-      final S3AInstrumentation instrumentation,\n       final ITtlTimeProvider timeProvider,\n       @Nullable final BulkOperationState operationState) throws IOException {\n     long startTimeNano \u003d System.nanoTime();\n     try {\n-      putWithTtl(ms, new PathMetadata(status), timeProvider, operationState);\n+      final PathMetadata fileMeta \u003d authoritativeEmptyDirectoryMarker(status);\n+      putWithTtl(ms, fileMeta, timeProvider, operationState);\n     } finally {\n-      instrumentation.addValueToQuantiles(\n-          S3GUARD_METADATASTORE_PUT_PATH_LATENCY,\n-          (System.nanoTime() - startTimeNano));\n-      instrumentation.incrementCounter(\n-          S3GUARD_METADATASTORE_PUT_PATH_REQUEST,\n-          1);\n+      ms.getInstrumentation().entryAdded((System.nanoTime() - startTimeNano));\n     }\n-    return status;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void putAuthDirectoryMarker(\n      final MetadataStore ms,\n      final S3AFileStatus status,\n      final ITtlTimeProvider timeProvider,\n      @Nullable final BulkOperationState operationState) throws IOException {\n    long startTimeNano \u003d System.nanoTime();\n    try {\n      final PathMetadata fileMeta \u003d authoritativeEmptyDirectoryMarker(status);\n      putWithTtl(ms, fileMeta, timeProvider, operationState);\n    } finally {\n      ms.getInstrumentation().entryAdded((System.nanoTime() - startTimeNano));\n    }\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
          "extendedDetails": {
            "oldValue": "putAndReturn",
            "newValue": "putAuthDirectoryMarker"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-16697. Tune/audit S3A authoritative mode.\n\nContains:\n\nHADOOP-16474. S3Guard ProgressiveRenameTracker to mark destination\n              dirirectory as authoritative on success.\nHADOOP-16684. S3guard bucket info to list a bit more about\n              authoritative paths.\nHADOOP-16722. S3GuardTool to support FilterFileSystem.\n\nThis patch improves the marking of newly created/import directory\ntrees in S3Guard DynamoDB tables as authoritative.\n\nSpecific changes:\n\n * Renamed directories are marked as authoritative if the entire\n   operation succeeded (HADOOP-16474).\n * When updating parent table entries as part of any table write,\n   there\u0027s no overwriting of their authoritative flag.\n\ns3guard import changes:\n\n* new -verbose flag to print out what is going on.\n\n* The \"s3guard import\" command lets you declare that a directory tree\nis to be marked as authoritative\n\n  hadoop s3guard import -authoritative -verbose s3a://bucket/path\n\nWhen importing a listing and a file is found, the import tool queries\nthe metastore and only updates the entry if the file is different from\nbefore, where different \u003d\u003d new timestamp, etag, or length. S3Guard can get\ntimestamp differences due to clock skew in PUT operations.\n\nAs the recursive list performed by the import command doesn\u0027t retrieve the\nversionID, the existing entry may in fact be more complete.\nWhen updating an existing due to clock skew the existing version ID\nis propagated to the new entry (note: the etags must match; this is needed\nto deal with inconsistent listings).\n\nThere is a new s3guard command to audit a s3guard bucket/path\u0027s\nauthoritative state:\n\n  hadoop s3guard authoritative -check-config s3a://bucket/path\n\nThis is primarily for testing/auditing.\n\nThe s3guard bucket-info command also provides some more details on the\nauthoritative state of a store (HADOOP-16684).\n\nChange-Id: I58001341c04f6f3597fcb4fcb1581ccefeb77d91\n",
          "commitDate": "10/01/20 3:11 AM",
          "commitName": "49df83899543586bbcaf80f01399ade031cf68b0",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "26/11/19 7:36 AM",
          "commitNameOld": "ea25f4de236611d388e14a710ebe5d6872c421b6",
          "commitAuthorOld": "Gabor Bota",
          "daysBetweenCommits": 44.82,
          "commitsBetweenForRepo": 155,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,13 @@\n-  public static S3AFileStatus putAndReturn(\n+  public static void putAuthDirectoryMarker(\n       final MetadataStore ms,\n       final S3AFileStatus status,\n-      final S3AInstrumentation instrumentation,\n       final ITtlTimeProvider timeProvider,\n       @Nullable final BulkOperationState operationState) throws IOException {\n     long startTimeNano \u003d System.nanoTime();\n     try {\n-      putWithTtl(ms, new PathMetadata(status), timeProvider, operationState);\n+      final PathMetadata fileMeta \u003d authoritativeEmptyDirectoryMarker(status);\n+      putWithTtl(ms, fileMeta, timeProvider, operationState);\n     } finally {\n-      instrumentation.addValueToQuantiles(\n-          S3GUARD_METADATASTORE_PUT_PATH_LATENCY,\n-          (System.nanoTime() - startTimeNano));\n-      instrumentation.incrementCounter(\n-          S3GUARD_METADATASTORE_PUT_PATH_REQUEST,\n-          1);\n+      ms.getInstrumentation().entryAdded((System.nanoTime() - startTimeNano));\n     }\n-    return status;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void putAuthDirectoryMarker(\n      final MetadataStore ms,\n      final S3AFileStatus status,\n      final ITtlTimeProvider timeProvider,\n      @Nullable final BulkOperationState operationState) throws IOException {\n    long startTimeNano \u003d System.nanoTime();\n    try {\n      final PathMetadata fileMeta \u003d authoritativeEmptyDirectoryMarker(status);\n      putWithTtl(ms, fileMeta, timeProvider, operationState);\n    } finally {\n      ms.getInstrumentation().entryAdded((System.nanoTime() - startTimeNano));\n    }\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
          "extendedDetails": {
            "oldValue": "[ms-MetadataStore(modifiers-final), status-S3AFileStatus(modifiers-final), instrumentation-S3AInstrumentation(modifiers-final), timeProvider-ITtlTimeProvider(modifiers-final), operationState-BulkOperationState(annotations-@Nullable__modifiers-final)]",
            "newValue": "[ms-MetadataStore(modifiers-final), status-S3AFileStatus(modifiers-final), timeProvider-ITtlTimeProvider(modifiers-final), operationState-BulkOperationState(annotations-@Nullable__modifiers-final)]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-16697. Tune/audit S3A authoritative mode.\n\nContains:\n\nHADOOP-16474. S3Guard ProgressiveRenameTracker to mark destination\n              dirirectory as authoritative on success.\nHADOOP-16684. S3guard bucket info to list a bit more about\n              authoritative paths.\nHADOOP-16722. S3GuardTool to support FilterFileSystem.\n\nThis patch improves the marking of newly created/import directory\ntrees in S3Guard DynamoDB tables as authoritative.\n\nSpecific changes:\n\n * Renamed directories are marked as authoritative if the entire\n   operation succeeded (HADOOP-16474).\n * When updating parent table entries as part of any table write,\n   there\u0027s no overwriting of their authoritative flag.\n\ns3guard import changes:\n\n* new -verbose flag to print out what is going on.\n\n* The \"s3guard import\" command lets you declare that a directory tree\nis to be marked as authoritative\n\n  hadoop s3guard import -authoritative -verbose s3a://bucket/path\n\nWhen importing a listing and a file is found, the import tool queries\nthe metastore and only updates the entry if the file is different from\nbefore, where different \u003d\u003d new timestamp, etag, or length. S3Guard can get\ntimestamp differences due to clock skew in PUT operations.\n\nAs the recursive list performed by the import command doesn\u0027t retrieve the\nversionID, the existing entry may in fact be more complete.\nWhen updating an existing due to clock skew the existing version ID\nis propagated to the new entry (note: the etags must match; this is needed\nto deal with inconsistent listings).\n\nThere is a new s3guard command to audit a s3guard bucket/path\u0027s\nauthoritative state:\n\n  hadoop s3guard authoritative -check-config s3a://bucket/path\n\nThis is primarily for testing/auditing.\n\nThe s3guard bucket-info command also provides some more details on the\nauthoritative state of a store (HADOOP-16684).\n\nChange-Id: I58001341c04f6f3597fcb4fcb1581ccefeb77d91\n",
          "commitDate": "10/01/20 3:11 AM",
          "commitName": "49df83899543586bbcaf80f01399ade031cf68b0",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "26/11/19 7:36 AM",
          "commitNameOld": "ea25f4de236611d388e14a710ebe5d6872c421b6",
          "commitAuthorOld": "Gabor Bota",
          "daysBetweenCommits": 44.82,
          "commitsBetweenForRepo": 155,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,13 @@\n-  public static S3AFileStatus putAndReturn(\n+  public static void putAuthDirectoryMarker(\n       final MetadataStore ms,\n       final S3AFileStatus status,\n-      final S3AInstrumentation instrumentation,\n       final ITtlTimeProvider timeProvider,\n       @Nullable final BulkOperationState operationState) throws IOException {\n     long startTimeNano \u003d System.nanoTime();\n     try {\n-      putWithTtl(ms, new PathMetadata(status), timeProvider, operationState);\n+      final PathMetadata fileMeta \u003d authoritativeEmptyDirectoryMarker(status);\n+      putWithTtl(ms, fileMeta, timeProvider, operationState);\n     } finally {\n-      instrumentation.addValueToQuantiles(\n-          S3GUARD_METADATASTORE_PUT_PATH_LATENCY,\n-          (System.nanoTime() - startTimeNano));\n-      instrumentation.incrementCounter(\n-          S3GUARD_METADATASTORE_PUT_PATH_REQUEST,\n-          1);\n+      ms.getInstrumentation().entryAdded((System.nanoTime() - startTimeNano));\n     }\n-    return status;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void putAuthDirectoryMarker(\n      final MetadataStore ms,\n      final S3AFileStatus status,\n      final ITtlTimeProvider timeProvider,\n      @Nullable final BulkOperationState operationState) throws IOException {\n    long startTimeNano \u003d System.nanoTime();\n    try {\n      final PathMetadata fileMeta \u003d authoritativeEmptyDirectoryMarker(status);\n      putWithTtl(ms, fileMeta, timeProvider, operationState);\n    } finally {\n      ms.getInstrumentation().entryAdded((System.nanoTime() - startTimeNano));\n    }\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
          "extendedDetails": {
            "oldValue": "S3AFileStatus",
            "newValue": "void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16697. Tune/audit S3A authoritative mode.\n\nContains:\n\nHADOOP-16474. S3Guard ProgressiveRenameTracker to mark destination\n              dirirectory as authoritative on success.\nHADOOP-16684. S3guard bucket info to list a bit more about\n              authoritative paths.\nHADOOP-16722. S3GuardTool to support FilterFileSystem.\n\nThis patch improves the marking of newly created/import directory\ntrees in S3Guard DynamoDB tables as authoritative.\n\nSpecific changes:\n\n * Renamed directories are marked as authoritative if the entire\n   operation succeeded (HADOOP-16474).\n * When updating parent table entries as part of any table write,\n   there\u0027s no overwriting of their authoritative flag.\n\ns3guard import changes:\n\n* new -verbose flag to print out what is going on.\n\n* The \"s3guard import\" command lets you declare that a directory tree\nis to be marked as authoritative\n\n  hadoop s3guard import -authoritative -verbose s3a://bucket/path\n\nWhen importing a listing and a file is found, the import tool queries\nthe metastore and only updates the entry if the file is different from\nbefore, where different \u003d\u003d new timestamp, etag, or length. S3Guard can get\ntimestamp differences due to clock skew in PUT operations.\n\nAs the recursive list performed by the import command doesn\u0027t retrieve the\nversionID, the existing entry may in fact be more complete.\nWhen updating an existing due to clock skew the existing version ID\nis propagated to the new entry (note: the etags must match; this is needed\nto deal with inconsistent listings).\n\nThere is a new s3guard command to audit a s3guard bucket/path\u0027s\nauthoritative state:\n\n  hadoop s3guard authoritative -check-config s3a://bucket/path\n\nThis is primarily for testing/auditing.\n\nThe s3guard bucket-info command also provides some more details on the\nauthoritative state of a store (HADOOP-16684).\n\nChange-Id: I58001341c04f6f3597fcb4fcb1581ccefeb77d91\n",
          "commitDate": "10/01/20 3:11 AM",
          "commitName": "49df83899543586bbcaf80f01399ade031cf68b0",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "26/11/19 7:36 AM",
          "commitNameOld": "ea25f4de236611d388e14a710ebe5d6872c421b6",
          "commitAuthorOld": "Gabor Bota",
          "daysBetweenCommits": 44.82,
          "commitsBetweenForRepo": 155,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,13 @@\n-  public static S3AFileStatus putAndReturn(\n+  public static void putAuthDirectoryMarker(\n       final MetadataStore ms,\n       final S3AFileStatus status,\n-      final S3AInstrumentation instrumentation,\n       final ITtlTimeProvider timeProvider,\n       @Nullable final BulkOperationState operationState) throws IOException {\n     long startTimeNano \u003d System.nanoTime();\n     try {\n-      putWithTtl(ms, new PathMetadata(status), timeProvider, operationState);\n+      final PathMetadata fileMeta \u003d authoritativeEmptyDirectoryMarker(status);\n+      putWithTtl(ms, fileMeta, timeProvider, operationState);\n     } finally {\n-      instrumentation.addValueToQuantiles(\n-          S3GUARD_METADATASTORE_PUT_PATH_LATENCY,\n-          (System.nanoTime() - startTimeNano));\n-      instrumentation.incrementCounter(\n-          S3GUARD_METADATASTORE_PUT_PATH_REQUEST,\n-          1);\n+      ms.getInstrumentation().entryAdded((System.nanoTime() - startTimeNano));\n     }\n-    return status;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void putAuthDirectoryMarker(\n      final MetadataStore ms,\n      final S3AFileStatus status,\n      final ITtlTimeProvider timeProvider,\n      @Nullable final BulkOperationState operationState) throws IOException {\n    long startTimeNano \u003d System.nanoTime();\n    try {\n      final PathMetadata fileMeta \u003d authoritativeEmptyDirectoryMarker(status);\n      putWithTtl(ms, fileMeta, timeProvider, operationState);\n    } finally {\n      ms.getInstrumentation().entryAdded((System.nanoTime() - startTimeNano));\n    }\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
          "extendedDetails": {}
        }
      ]
    },
    "e02eb24e0a9139418120027b694492e0738df20a": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15183. S3Guard store becomes inconsistent after partial failure of rename.\n\nContributed by Steve Loughran.\n\nChange-Id: I825b0bc36be960475d2d259b1cdab45ae1bb78eb\n",
      "commitDate": "20/06/19 1:56 AM",
      "commitName": "e02eb24e0a9139418120027b694492e0738df20a",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,19 @@\n+  public static S3AFileStatus putAndReturn(\n+      final MetadataStore ms,\n+      final S3AFileStatus status,\n+      final S3AInstrumentation instrumentation,\n+      final ITtlTimeProvider timeProvider,\n+      @Nullable final BulkOperationState operationState) throws IOException {\n+    long startTimeNano \u003d System.nanoTime();\n+    try {\n+      putWithTtl(ms, new PathMetadata(status), timeProvider, operationState);\n+    } finally {\n+      instrumentation.addValueToQuantiles(\n+          S3GUARD_METADATASTORE_PUT_PATH_LATENCY,\n+          (System.nanoTime() - startTimeNano));\n+      instrumentation.incrementCounter(\n+          S3GUARD_METADATASTORE_PUT_PATH_REQUEST,\n+          1);\n+    }\n+    return status;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static S3AFileStatus putAndReturn(\n      final MetadataStore ms,\n      final S3AFileStatus status,\n      final S3AInstrumentation instrumentation,\n      final ITtlTimeProvider timeProvider,\n      @Nullable final BulkOperationState operationState) throws IOException {\n    long startTimeNano \u003d System.nanoTime();\n    try {\n      putWithTtl(ms, new PathMetadata(status), timeProvider, operationState);\n    } finally {\n      instrumentation.addValueToQuantiles(\n          S3GUARD_METADATASTORE_PUT_PATH_LATENCY,\n          (System.nanoTime() - startTimeNano));\n      instrumentation.incrementCounter(\n          S3GUARD_METADATASTORE_PUT_PATH_REQUEST,\n          1);\n    }\n    return status;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java"
    }
  }
}