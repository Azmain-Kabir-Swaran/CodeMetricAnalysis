{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMOptions.java",
  "functionName": "verify",
  "functionId": "verify___maxMemory-long__maxVcores-int",
  "sourceFilePath": "hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/AMOptions.java",
  "functionStartLine": 112,
  "functionEndLine": 131,
  "numCommitsSeen": 2,
  "timeTaken": 416,
  "changeHistory": [
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91"
  ],
  "changeHistoryShort": {
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12345 Add Dynamometer to hadoop-tools, a tool for scale testing the HDFS NameNode with real metadata and workloads. Contributed by Erik Krogen.\n",
      "commitDate": "25/06/19 8:07 AM",
      "commitName": "ab0b180ddb5d0775a2452d5eeb7badd252aadb91",
      "commitAuthor": "Erik Krogen",
      "diff": "@@ -0,0 +1,20 @@\n+  void verify(long maxMemory, int maxVcores) throws IllegalArgumentException {\n+    Preconditions.checkArgument(\n+        datanodeMemoryMB \u003e 0 \u0026\u0026 datanodeMemoryMB \u003c\u003d maxMemory,\n+        \"datanodeMemoryMB (%s) must be between 0 and %s\", datanodeMemoryMB,\n+        maxMemory);\n+    Preconditions.checkArgument(\n+        datanodeVirtualCores \u003e 0 \u0026\u0026 datanodeVirtualCores \u003c\u003d maxVcores,\n+        \"datanodeVirtualCores (%s) must be between 0 and %s\",\n+        datanodeVirtualCores, maxVcores);\n+    Preconditions.checkArgument(\n+        namenodeMemoryMB \u003e 0 \u0026\u0026 namenodeMemoryMB \u003c\u003d maxMemory,\n+        \"namenodeMemoryMB (%s) must be between 0 and %s\", namenodeMemoryMB,\n+        maxMemory);\n+    Preconditions.checkArgument(\n+        namenodeVirtualCores \u003e 0 \u0026\u0026 namenodeVirtualCores \u003c\u003d maxVcores,\n+        \"namenodeVirtualCores (%s) must be between 0 and %s\",\n+        namenodeVirtualCores, maxVcores);\n+    Preconditions.checkArgument(datanodesPerCluster \u003e 0,\n+        \"datanodesPerCluster (%s) must be \u003e 0\", datanodesPerCluster);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void verify(long maxMemory, int maxVcores) throws IllegalArgumentException {\n    Preconditions.checkArgument(\n        datanodeMemoryMB \u003e 0 \u0026\u0026 datanodeMemoryMB \u003c\u003d maxMemory,\n        \"datanodeMemoryMB (%s) must be between 0 and %s\", datanodeMemoryMB,\n        maxMemory);\n    Preconditions.checkArgument(\n        datanodeVirtualCores \u003e 0 \u0026\u0026 datanodeVirtualCores \u003c\u003d maxVcores,\n        \"datanodeVirtualCores (%s) must be between 0 and %s\",\n        datanodeVirtualCores, maxVcores);\n    Preconditions.checkArgument(\n        namenodeMemoryMB \u003e 0 \u0026\u0026 namenodeMemoryMB \u003c\u003d maxMemory,\n        \"namenodeMemoryMB (%s) must be between 0 and %s\", namenodeMemoryMB,\n        maxMemory);\n    Preconditions.checkArgument(\n        namenodeVirtualCores \u003e 0 \u0026\u0026 namenodeVirtualCores \u003c\u003d maxVcores,\n        \"namenodeVirtualCores (%s) must be between 0 and %s\",\n        namenodeVirtualCores, maxVcores);\n    Preconditions.checkArgument(datanodesPerCluster \u003e 0,\n        \"datanodesPerCluster (%s) must be \u003e 0\", datanodesPerCluster);\n  }",
      "path": "hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/AMOptions.java"
    }
  }
}