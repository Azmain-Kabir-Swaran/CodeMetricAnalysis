{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "INodesInPath.java",
  "functionName": "toString",
  "functionId": "toString___vaildateObject-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodesInPath.java",
  "functionStartLine": 481,
  "functionEndLine": 503,
  "numCommitsSeen": 94,
  "timeTaken": 3152,
  "changeHistory": [
    "7a87add4ea4c317aa9377d1fc8e43fb5e7418a46",
    "5776a41da08af653206bb94d7c76c9c4dcce059a",
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795",
    "9280468b1acfa346250d0212b5cb7486dc83705c"
  ],
  "changeHistoryShort": {
    "7a87add4ea4c317aa9377d1fc8e43fb5e7418a46": "Ybodychange",
    "5776a41da08af653206bb94d7c76c9c4dcce059a": "Ybodychange",
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": "Ybodychange",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": "Ybodychange",
    "9280468b1acfa346250d0212b5cb7486dc83705c": "Ymovefromfile"
  },
  "changeHistoryDetails": {
    "7a87add4ea4c317aa9377d1fc8e43fb5e7418a46": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13598. Reduce unnecessary byte-to-string transform operation in INodesInPath#toString. Contributed by Gabor Bota.\n",
      "commitDate": "23/05/18 7:57 PM",
      "commitName": "7a87add4ea4c317aa9377d1fc8e43fb5e7418a46",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "25/07/17 9:03 AM",
      "commitNameOld": "a68b5b31cf846c0fc94c430bafd07a9bca369234",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 302.45,
      "commitsBetweenForRepo": 2873,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private String toString(boolean vaildateObject) {\n     if (vaildateObject) {\n       validate();\n     }\n \n     final StringBuilder b \u003d new StringBuilder(getClass().getSimpleName())\n-        .append(\": path \u003d \").append(DFSUtil.byteArray2PathString(path))\n+        .append(\": path \u003d \").append(getPath())\n         .append(\"\\n  inodes \u003d \");\n     if (inodes \u003d\u003d null) {\n       b.append(\"null\");\n     } else if (inodes.length \u003d\u003d 0) {\n       b.append(\"[]\");\n     } else {\n       b.append(\"[\").append(toString(inodes[0]));\n       for(int i \u003d 1; i \u003c inodes.length; i++) {\n         b.append(\", \").append(toString(inodes[i]));\n       }\n       b.append(\"], length\u003d\").append(inodes.length);\n     }\n     b.append(\"\\n  isSnapshot        \u003d \").append(isSnapshot)\n      .append(\"\\n  snapshotId        \u003d \").append(snapshotId);\n     return b.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String toString(boolean vaildateObject) {\n    if (vaildateObject) {\n      validate();\n    }\n\n    final StringBuilder b \u003d new StringBuilder(getClass().getSimpleName())\n        .append(\": path \u003d \").append(getPath())\n        .append(\"\\n  inodes \u003d \");\n    if (inodes \u003d\u003d null) {\n      b.append(\"null\");\n    } else if (inodes.length \u003d\u003d 0) {\n      b.append(\"[]\");\n    } else {\n      b.append(\"[\").append(toString(inodes[0]));\n      for(int i \u003d 1; i \u003c inodes.length; i++) {\n        b.append(\", \").append(toString(inodes[i]));\n      }\n      b.append(\"], length\u003d\").append(inodes.length);\n    }\n    b.append(\"\\n  isSnapshot        \u003d \").append(isSnapshot)\n     .append(\"\\n  snapshotId        \u003d \").append(snapshotId);\n    return b.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodesInPath.java",
      "extendedDetails": {}
    },
    "5776a41da08af653206bb94d7c76c9c4dcce059a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.\n",
      "commitDate": "09/12/14 11:37 AM",
      "commitName": "5776a41da08af653206bb94d7c76c9c4dcce059a",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "05/12/14 2:17 PM",
      "commitNameOld": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 3.89,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,23 @@\n   private String toString(boolean vaildateObject) {\n     if (vaildateObject) {\n       validate();\n     }\n \n     final StringBuilder b \u003d new StringBuilder(getClass().getSimpleName())\n         .append(\": path \u003d \").append(DFSUtil.byteArray2PathString(path))\n         .append(\"\\n  inodes \u003d \");\n     if (inodes \u003d\u003d null) {\n       b.append(\"null\");\n     } else if (inodes.length \u003d\u003d 0) {\n       b.append(\"[]\");\n     } else {\n       b.append(\"[\").append(toString(inodes[0]));\n       for(int i \u003d 1; i \u003c inodes.length; i++) {\n         b.append(\", \").append(toString(inodes[i]));\n       }\n       b.append(\"], length\u003d\").append(inodes.length);\n     }\n-    b.append(\"\\n  numNonNull \u003d \").append(numNonNull)\n-     .append(\"\\n  capacity   \u003d \").append(capacity)\n-     .append(\"\\n  isSnapshot        \u003d \").append(isSnapshot)\n-     .append(\"\\n  snapshotRootIndex \u003d \").append(snapshotRootIndex)\n+    b.append(\"\\n  isSnapshot        \u003d \").append(isSnapshot)\n      .append(\"\\n  snapshotId        \u003d \").append(snapshotId);\n     return b.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String toString(boolean vaildateObject) {\n    if (vaildateObject) {\n      validate();\n    }\n\n    final StringBuilder b \u003d new StringBuilder(getClass().getSimpleName())\n        .append(\": path \u003d \").append(DFSUtil.byteArray2PathString(path))\n        .append(\"\\n  inodes \u003d \");\n    if (inodes \u003d\u003d null) {\n      b.append(\"null\");\n    } else if (inodes.length \u003d\u003d 0) {\n      b.append(\"[]\");\n    } else {\n      b.append(\"[\").append(toString(inodes[0]));\n      for(int i \u003d 1; i \u003c inodes.length; i++) {\n        b.append(\", \").append(toString(inodes[i]));\n      }\n      b.append(\"], length\u003d\").append(inodes.length);\n    }\n    b.append(\"\\n  isSnapshot        \u003d \").append(isSnapshot)\n     .append(\"\\n  snapshotId        \u003d \").append(snapshotId);\n    return b.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodesInPath.java",
      "extendedDetails": {}
    },
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
      "commitDate": "05/12/14 2:17 PM",
      "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "29/09/14 12:58 PM",
      "commitNameOld": "f0293f11a85176afc04d809574c9126a80b700cc",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 67.1,
      "commitsBetweenForRepo": 581,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   private String toString(boolean vaildateObject) {\n     if (vaildateObject) {\n-      vaildate();\n+      validate();\n     }\n \n     final StringBuilder b \u003d new StringBuilder(getClass().getSimpleName())\n         .append(\": path \u003d \").append(DFSUtil.byteArray2PathString(path))\n         .append(\"\\n  inodes \u003d \");\n     if (inodes \u003d\u003d null) {\n       b.append(\"null\");\n     } else if (inodes.length \u003d\u003d 0) {\n       b.append(\"[]\");\n     } else {\n       b.append(\"[\").append(toString(inodes[0]));\n       for(int i \u003d 1; i \u003c inodes.length; i++) {\n         b.append(\", \").append(toString(inodes[i]));\n       }\n       b.append(\"], length\u003d\").append(inodes.length);\n     }\n     b.append(\"\\n  numNonNull \u003d \").append(numNonNull)\n      .append(\"\\n  capacity   \u003d \").append(capacity)\n      .append(\"\\n  isSnapshot        \u003d \").append(isSnapshot)\n      .append(\"\\n  snapshotRootIndex \u003d \").append(snapshotRootIndex)\n      .append(\"\\n  snapshotId        \u003d \").append(snapshotId);\n     return b.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String toString(boolean vaildateObject) {\n    if (vaildateObject) {\n      validate();\n    }\n\n    final StringBuilder b \u003d new StringBuilder(getClass().getSimpleName())\n        .append(\": path \u003d \").append(DFSUtil.byteArray2PathString(path))\n        .append(\"\\n  inodes \u003d \");\n    if (inodes \u003d\u003d null) {\n      b.append(\"null\");\n    } else if (inodes.length \u003d\u003d 0) {\n      b.append(\"[]\");\n    } else {\n      b.append(\"[\").append(toString(inodes[0]));\n      for(int i \u003d 1; i \u003c inodes.length; i++) {\n        b.append(\", \").append(toString(inodes[i]));\n      }\n      b.append(\"], length\u003d\").append(inodes.length);\n    }\n    b.append(\"\\n  numNonNull \u003d \").append(numNonNull)\n     .append(\"\\n  capacity   \u003d \").append(capacity)\n     .append(\"\\n  isSnapshot        \u003d \").append(isSnapshot)\n     .append(\"\\n  snapshotRootIndex \u003d \").append(snapshotRootIndex)\n     .append(\"\\n  snapshotId        \u003d \").append(snapshotId);\n    return b.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodesInPath.java",
      "extendedDetails": {}
    },
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/01/14 12:52 PM",
      "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "14/12/13 2:13 AM",
      "commitNameOld": "44a6560b5da3f79d2299579a36e7a2a60a91f823",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 24.44,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   private String toString(boolean vaildateObject) {\n     if (vaildateObject) {\n       vaildate();\n     }\n \n     final StringBuilder b \u003d new StringBuilder(getClass().getSimpleName())\n         .append(\": path \u003d \").append(DFSUtil.byteArray2PathString(path))\n         .append(\"\\n  inodes \u003d \");\n     if (inodes \u003d\u003d null) {\n       b.append(\"null\");\n     } else if (inodes.length \u003d\u003d 0) {\n       b.append(\"[]\");\n     } else {\n       b.append(\"[\").append(toString(inodes[0]));\n       for(int i \u003d 1; i \u003c inodes.length; i++) {\n         b.append(\", \").append(toString(inodes[i]));\n       }\n       b.append(\"], length\u003d\").append(inodes.length);\n     }\n     b.append(\"\\n  numNonNull \u003d \").append(numNonNull)\n      .append(\"\\n  capacity   \u003d \").append(capacity)\n      .append(\"\\n  isSnapshot        \u003d \").append(isSnapshot)\n      .append(\"\\n  snapshotRootIndex \u003d \").append(snapshotRootIndex)\n-     .append(\"\\n  snapshot          \u003d \").append(snapshot);\n+     .append(\"\\n  snapshotId        \u003d \").append(snapshotId);\n     return b.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String toString(boolean vaildateObject) {\n    if (vaildateObject) {\n      vaildate();\n    }\n\n    final StringBuilder b \u003d new StringBuilder(getClass().getSimpleName())\n        .append(\": path \u003d \").append(DFSUtil.byteArray2PathString(path))\n        .append(\"\\n  inodes \u003d \");\n    if (inodes \u003d\u003d null) {\n      b.append(\"null\");\n    } else if (inodes.length \u003d\u003d 0) {\n      b.append(\"[]\");\n    } else {\n      b.append(\"[\").append(toString(inodes[0]));\n      for(int i \u003d 1; i \u003c inodes.length; i++) {\n        b.append(\", \").append(toString(inodes[i]));\n      }\n      b.append(\"], length\u003d\").append(inodes.length);\n    }\n    b.append(\"\\n  numNonNull \u003d \").append(numNonNull)\n     .append(\"\\n  capacity   \u003d \").append(capacity)\n     .append(\"\\n  isSnapshot        \u003d \").append(isSnapshot)\n     .append(\"\\n  snapshotRootIndex \u003d \").append(snapshotRootIndex)\n     .append(\"\\n  snapshotId        \u003d \").append(snapshotId);\n    return b.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodesInPath.java",
      "extendedDetails": {}
    },
    "9280468b1acfa346250d0212b5cb7486dc83705c": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-4550. Refactor INodeDirectory.INodesInPath to a standalone class.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1468725 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/04/13 7:41 PM",
      "commitName": "9280468b1acfa346250d0212b5cb7486dc83705c",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "16/04/13 4:16 PM",
      "commitNameOld": "38bd7061c1a8408b74ed619b25f948cd3cd85d7a",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n-    private String toString(boolean vaildateObject) {\n-      if (vaildateObject) {\n-        vaildate();\n-      }\n+  private String toString(boolean vaildateObject) {\n+    if (vaildateObject) {\n+      vaildate();\n+    }\n \n-      final StringBuilder b \u003d new StringBuilder(getClass().getSimpleName())\n-          .append(\": path \u003d \").append(DFSUtil.byteArray2PathString(path))\n-          .append(\"\\n  inodes \u003d \");\n-      if (inodes \u003d\u003d null) {\n-        b.append(\"null\");\n-      } else if (inodes.length \u003d\u003d 0) {\n-        b.append(\"[]\");\n-      } else {\n-        b.append(\"[\").append(toString(inodes[0]));\n-        for(int i \u003d 1; i \u003c inodes.length; i++) {\n-          b.append(\", \").append(toString(inodes[i]));\n-        }\n-        b.append(\"], length\u003d\").append(inodes.length);\n+    final StringBuilder b \u003d new StringBuilder(getClass().getSimpleName())\n+        .append(\": path \u003d \").append(DFSUtil.byteArray2PathString(path))\n+        .append(\"\\n  inodes \u003d \");\n+    if (inodes \u003d\u003d null) {\n+      b.append(\"null\");\n+    } else if (inodes.length \u003d\u003d 0) {\n+      b.append(\"[]\");\n+    } else {\n+      b.append(\"[\").append(toString(inodes[0]));\n+      for(int i \u003d 1; i \u003c inodes.length; i++) {\n+        b.append(\", \").append(toString(inodes[i]));\n       }\n-      b.append(\"\\n  numNonNull \u003d \").append(numNonNull)\n-       .append(\"\\n  capacity   \u003d \").append(capacity)\n-       .append(\"\\n  isSnapshot        \u003d \").append(isSnapshot)\n-       .append(\"\\n  snapshotRootIndex \u003d \").append(snapshotRootIndex)\n-       .append(\"\\n  snapshot          \u003d \").append(snapshot);\n-      return b.toString();\n-    }\n\\ No newline at end of file\n+      b.append(\"], length\u003d\").append(inodes.length);\n+    }\n+    b.append(\"\\n  numNonNull \u003d \").append(numNonNull)\n+     .append(\"\\n  capacity   \u003d \").append(capacity)\n+     .append(\"\\n  isSnapshot        \u003d \").append(isSnapshot)\n+     .append(\"\\n  snapshotRootIndex \u003d \").append(snapshotRootIndex)\n+     .append(\"\\n  snapshot          \u003d \").append(snapshot);\n+    return b.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String toString(boolean vaildateObject) {\n    if (vaildateObject) {\n      vaildate();\n    }\n\n    final StringBuilder b \u003d new StringBuilder(getClass().getSimpleName())\n        .append(\": path \u003d \").append(DFSUtil.byteArray2PathString(path))\n        .append(\"\\n  inodes \u003d \");\n    if (inodes \u003d\u003d null) {\n      b.append(\"null\");\n    } else if (inodes.length \u003d\u003d 0) {\n      b.append(\"[]\");\n    } else {\n      b.append(\"[\").append(toString(inodes[0]));\n      for(int i \u003d 1; i \u003c inodes.length; i++) {\n        b.append(\", \").append(toString(inodes[i]));\n      }\n      b.append(\"], length\u003d\").append(inodes.length);\n    }\n    b.append(\"\\n  numNonNull \u003d \").append(numNonNull)\n     .append(\"\\n  capacity   \u003d \").append(capacity)\n     .append(\"\\n  isSnapshot        \u003d \").append(isSnapshot)\n     .append(\"\\n  snapshotRootIndex \u003d \").append(snapshotRootIndex)\n     .append(\"\\n  snapshot          \u003d \").append(snapshot);\n    return b.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodesInPath.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodeDirectory.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodesInPath.java",
        "oldMethodName": "toString",
        "newMethodName": "toString"
      }
    }
  }
}