{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BestEffortLongFile.java",
  "functionName": "lazyOpen",
  "functionId": "lazyOpen",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/BestEffortLongFile.java",
  "functionStartLine": 77,
  "functionEndLine": 109,
  "numCommitsSeen": 3,
  "timeTaken": 836,
  "changeHistory": [
    "8021d9199f278345aca6211f318145342ad036f4"
  ],
  "changeHistoryShort": {
    "8021d9199f278345aca6211f318145342ad036f4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8021d9199f278345aca6211f318145342ad036f4": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3863. Track last \"committed\" txid in QJM. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1380976 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/09/12 9:13 PM",
      "commitName": "8021d9199f278345aca6211f318145342ad036f4",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,33 @@\n+  private void lazyOpen() throws IOException {\n+    if (ch !\u003d null) {\n+      return;\n+    }\n+\n+    // Load current value.\n+    byte[] data \u003d null;\n+    try {\n+      data \u003d Files.toByteArray(file);\n+    } catch (FileNotFoundException fnfe) {\n+      // Expected - this will use default value.\n+    }\n+\n+    if (data !\u003d null \u0026\u0026 data.length !\u003d 0) {\n+      if (data.length !\u003d Longs.BYTES) {\n+        throw new IOException(\"File \" + file + \" had invalid length: \" +\n+            data.length);\n+      }\n+      value \u003d Longs.fromByteArray(data);\n+    } else {\n+      value \u003d defaultVal;\n+    }\n+    \n+    // Now open file for future writes.\n+    RandomAccessFile raf \u003d new RandomAccessFile(file, \"rw\");\n+    try {\n+      ch \u003d raf.getChannel();\n+    } finally {\n+      if (ch \u003d\u003d null) {\n+        IOUtils.closeStream(raf);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void lazyOpen() throws IOException {\n    if (ch !\u003d null) {\n      return;\n    }\n\n    // Load current value.\n    byte[] data \u003d null;\n    try {\n      data \u003d Files.toByteArray(file);\n    } catch (FileNotFoundException fnfe) {\n      // Expected - this will use default value.\n    }\n\n    if (data !\u003d null \u0026\u0026 data.length !\u003d 0) {\n      if (data.length !\u003d Longs.BYTES) {\n        throw new IOException(\"File \" + file + \" had invalid length: \" +\n            data.length);\n      }\n      value \u003d Longs.fromByteArray(data);\n    } else {\n      value \u003d defaultVal;\n    }\n    \n    // Now open file for future writes.\n    RandomAccessFile raf \u003d new RandomAccessFile(file, \"rw\");\n    try {\n      ch \u003d raf.getChannel();\n    } finally {\n      if (ch \u003d\u003d null) {\n        IOUtils.closeStream(raf);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/BestEffortLongFile.java"
    }
  }
}