{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DiskBalancer.java",
  "functionName": "getStorageIDToVolumeBasePathMap",
  "functionId": "getStorageIDToVolumeBasePathMap",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java",
  "functionStartLine": 502,
  "functionEndLine": 522,
  "numCommitsSeen": 53,
  "timeTaken": 1977,
  "changeHistory": [
    "96b12662ea76e3ded4ef13944fc8df206cfb4613",
    "03f519a757ce83d76e7fc9f6aadf271e38bb9f6d",
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
    "2b1b2faf76a7ff148650a7836935a85439f60c49"
  ],
  "changeHistoryShort": {
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": "Ybodychange",
    "03f519a757ce83d76e7fc9f6aadf271e38bb9f6d": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c": "Ybodychange",
    "2b1b2faf76a7ff148650a7836935a85439f60c49": "Yintroduced"
  },
  "changeHistoryDetails": {
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10637. Modifications to remove the assumption that FsVolumes are backed by java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "10/10/16 3:30 PM",
      "commitName": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "27/09/16 9:35 PM",
      "commitNameOld": "03f519a757ce83d76e7fc9f6aadf271e38bb9f6d",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 12.75,
      "commitsBetweenForRepo": 95,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   private Map\u003cString, String\u003e getStorageIDToVolumeBasePathMap()\n       throws DiskBalancerException {\n     Map\u003cString, String\u003e storageIDToVolBasePathMap \u003d new HashMap\u003c\u003e();\n     FsDatasetSpi.FsVolumeReferences references;\n     try {\n       try(AutoCloseableLock lock \u003d this.dataset.acquireDatasetLock()) {\n         references \u003d this.dataset.getFsVolumeReferences();\n         for (int ndx \u003d 0; ndx \u003c references.size(); ndx++) {\n           FsVolumeSpi vol \u003d references.get(ndx);\n-          storageIDToVolBasePathMap.put(vol.getStorageID(), vol.getBasePath());\n+          storageIDToVolBasePathMap.put(vol.getStorageID(),\n+              vol.getBaseURI().getPath());\n         }\n         references.close();\n       }\n     } catch (IOException ex) {\n       LOG.error(\"Disk Balancer - Internal Error.\", ex);\n       throw new DiskBalancerException(\"Internal error\", ex,\n           DiskBalancerException.Result.INTERNAL_ERROR);\n     }\n     return storageIDToVolBasePathMap;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Map\u003cString, String\u003e getStorageIDToVolumeBasePathMap()\n      throws DiskBalancerException {\n    Map\u003cString, String\u003e storageIDToVolBasePathMap \u003d new HashMap\u003c\u003e();\n    FsDatasetSpi.FsVolumeReferences references;\n    try {\n      try(AutoCloseableLock lock \u003d this.dataset.acquireDatasetLock()) {\n        references \u003d this.dataset.getFsVolumeReferences();\n        for (int ndx \u003d 0; ndx \u003c references.size(); ndx++) {\n          FsVolumeSpi vol \u003d references.get(ndx);\n          storageIDToVolBasePathMap.put(vol.getStorageID(),\n              vol.getBaseURI().getPath());\n        }\n        references.close();\n      }\n    } catch (IOException ex) {\n      LOG.error(\"Disk Balancer - Internal Error.\", ex);\n      throw new DiskBalancerException(\"Internal error\", ex,\n          DiskBalancerException.Result.INTERNAL_ERROR);\n    }\n    return storageIDToVolBasePathMap;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java",
      "extendedDetails": {}
    },
    "03f519a757ce83d76e7fc9f6aadf271e38bb9f6d": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-9850. DiskBalancer: Explore removing references to FsVolumeSpi. Contributed by Manoj Govindassamy.\n",
      "commitDate": "27/09/16 9:35 PM",
      "commitName": "03f519a757ce83d76e7fc9f6aadf271e38bb9f6d",
      "commitAuthor": "Anu Engineer",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-9850. DiskBalancer: Explore removing references to FsVolumeSpi. Contributed by Manoj Govindassamy.\n",
          "commitDate": "27/09/16 9:35 PM",
          "commitName": "03f519a757ce83d76e7fc9f6aadf271e38bb9f6d",
          "commitAuthor": "Anu Engineer",
          "commitDateOld": "09/09/16 3:00 PM",
          "commitNameOld": "bee9f57f5ca9f037ade932c6fd01b0dad47a1296",
          "commitAuthorOld": "Anu Engineer",
          "daysBetweenCommits": 18.27,
          "commitsBetweenForRepo": 96,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  private Map\u003cString, FsVolumeSpi\u003e getStorageIDToVolumeMap()\n+  private Map\u003cString, String\u003e getStorageIDToVolumeBasePathMap()\n       throws DiskBalancerException {\n-    Map\u003cString, FsVolumeSpi\u003e pathMap \u003d new HashMap\u003c\u003e();\n+    Map\u003cString, String\u003e storageIDToVolBasePathMap \u003d new HashMap\u003c\u003e();\n     FsDatasetSpi.FsVolumeReferences references;\n     try {\n       try(AutoCloseableLock lock \u003d this.dataset.acquireDatasetLock()) {\n         references \u003d this.dataset.getFsVolumeReferences();\n         for (int ndx \u003d 0; ndx \u003c references.size(); ndx++) {\n           FsVolumeSpi vol \u003d references.get(ndx);\n-          pathMap.put(vol.getStorageID(), vol);\n+          storageIDToVolBasePathMap.put(vol.getStorageID(), vol.getBasePath());\n         }\n         references.close();\n       }\n     } catch (IOException ex) {\n       LOG.error(\"Disk Balancer - Internal Error.\", ex);\n       throw new DiskBalancerException(\"Internal error\", ex,\n           DiskBalancerException.Result.INTERNAL_ERROR);\n     }\n-    return pathMap;\n+    return storageIDToVolBasePathMap;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Map\u003cString, String\u003e getStorageIDToVolumeBasePathMap()\n      throws DiskBalancerException {\n    Map\u003cString, String\u003e storageIDToVolBasePathMap \u003d new HashMap\u003c\u003e();\n    FsDatasetSpi.FsVolumeReferences references;\n    try {\n      try(AutoCloseableLock lock \u003d this.dataset.acquireDatasetLock()) {\n        references \u003d this.dataset.getFsVolumeReferences();\n        for (int ndx \u003d 0; ndx \u003c references.size(); ndx++) {\n          FsVolumeSpi vol \u003d references.get(ndx);\n          storageIDToVolBasePathMap.put(vol.getStorageID(), vol.getBasePath());\n        }\n        references.close();\n      }\n    } catch (IOException ex) {\n      LOG.error(\"Disk Balancer - Internal Error.\", ex);\n      throw new DiskBalancerException(\"Internal error\", ex,\n          DiskBalancerException.Result.INTERNAL_ERROR);\n    }\n    return storageIDToVolBasePathMap;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java",
          "extendedDetails": {
            "oldValue": "getStorageIDToVolumeMap",
            "newValue": "getStorageIDToVolumeBasePathMap"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-9850. DiskBalancer: Explore removing references to FsVolumeSpi. Contributed by Manoj Govindassamy.\n",
          "commitDate": "27/09/16 9:35 PM",
          "commitName": "03f519a757ce83d76e7fc9f6aadf271e38bb9f6d",
          "commitAuthor": "Anu Engineer",
          "commitDateOld": "09/09/16 3:00 PM",
          "commitNameOld": "bee9f57f5ca9f037ade932c6fd01b0dad47a1296",
          "commitAuthorOld": "Anu Engineer",
          "daysBetweenCommits": 18.27,
          "commitsBetweenForRepo": 96,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  private Map\u003cString, FsVolumeSpi\u003e getStorageIDToVolumeMap()\n+  private Map\u003cString, String\u003e getStorageIDToVolumeBasePathMap()\n       throws DiskBalancerException {\n-    Map\u003cString, FsVolumeSpi\u003e pathMap \u003d new HashMap\u003c\u003e();\n+    Map\u003cString, String\u003e storageIDToVolBasePathMap \u003d new HashMap\u003c\u003e();\n     FsDatasetSpi.FsVolumeReferences references;\n     try {\n       try(AutoCloseableLock lock \u003d this.dataset.acquireDatasetLock()) {\n         references \u003d this.dataset.getFsVolumeReferences();\n         for (int ndx \u003d 0; ndx \u003c references.size(); ndx++) {\n           FsVolumeSpi vol \u003d references.get(ndx);\n-          pathMap.put(vol.getStorageID(), vol);\n+          storageIDToVolBasePathMap.put(vol.getStorageID(), vol.getBasePath());\n         }\n         references.close();\n       }\n     } catch (IOException ex) {\n       LOG.error(\"Disk Balancer - Internal Error.\", ex);\n       throw new DiskBalancerException(\"Internal error\", ex,\n           DiskBalancerException.Result.INTERNAL_ERROR);\n     }\n-    return pathMap;\n+    return storageIDToVolBasePathMap;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Map\u003cString, String\u003e getStorageIDToVolumeBasePathMap()\n      throws DiskBalancerException {\n    Map\u003cString, String\u003e storageIDToVolBasePathMap \u003d new HashMap\u003c\u003e();\n    FsDatasetSpi.FsVolumeReferences references;\n    try {\n      try(AutoCloseableLock lock \u003d this.dataset.acquireDatasetLock()) {\n        references \u003d this.dataset.getFsVolumeReferences();\n        for (int ndx \u003d 0; ndx \u003c references.size(); ndx++) {\n          FsVolumeSpi vol \u003d references.get(ndx);\n          storageIDToVolBasePathMap.put(vol.getStorageID(), vol.getBasePath());\n        }\n        references.close();\n      }\n    } catch (IOException ex) {\n      LOG.error(\"Disk Balancer - Internal Error.\", ex);\n      throw new DiskBalancerException(\"Internal error\", ex,\n          DiskBalancerException.Result.INTERNAL_ERROR);\n    }\n    return storageIDToVolBasePathMap;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java",
          "extendedDetails": {
            "oldValue": "Map\u003cString,FsVolumeSpi\u003e",
            "newValue": "Map\u003cString,String\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9850. DiskBalancer: Explore removing references to FsVolumeSpi. Contributed by Manoj Govindassamy.\n",
          "commitDate": "27/09/16 9:35 PM",
          "commitName": "03f519a757ce83d76e7fc9f6aadf271e38bb9f6d",
          "commitAuthor": "Anu Engineer",
          "commitDateOld": "09/09/16 3:00 PM",
          "commitNameOld": "bee9f57f5ca9f037ade932c6fd01b0dad47a1296",
          "commitAuthorOld": "Anu Engineer",
          "daysBetweenCommits": 18.27,
          "commitsBetweenForRepo": 96,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  private Map\u003cString, FsVolumeSpi\u003e getStorageIDToVolumeMap()\n+  private Map\u003cString, String\u003e getStorageIDToVolumeBasePathMap()\n       throws DiskBalancerException {\n-    Map\u003cString, FsVolumeSpi\u003e pathMap \u003d new HashMap\u003c\u003e();\n+    Map\u003cString, String\u003e storageIDToVolBasePathMap \u003d new HashMap\u003c\u003e();\n     FsDatasetSpi.FsVolumeReferences references;\n     try {\n       try(AutoCloseableLock lock \u003d this.dataset.acquireDatasetLock()) {\n         references \u003d this.dataset.getFsVolumeReferences();\n         for (int ndx \u003d 0; ndx \u003c references.size(); ndx++) {\n           FsVolumeSpi vol \u003d references.get(ndx);\n-          pathMap.put(vol.getStorageID(), vol);\n+          storageIDToVolBasePathMap.put(vol.getStorageID(), vol.getBasePath());\n         }\n         references.close();\n       }\n     } catch (IOException ex) {\n       LOG.error(\"Disk Balancer - Internal Error.\", ex);\n       throw new DiskBalancerException(\"Internal error\", ex,\n           DiskBalancerException.Result.INTERNAL_ERROR);\n     }\n-    return pathMap;\n+    return storageIDToVolBasePathMap;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Map\u003cString, String\u003e getStorageIDToVolumeBasePathMap()\n      throws DiskBalancerException {\n    Map\u003cString, String\u003e storageIDToVolBasePathMap \u003d new HashMap\u003c\u003e();\n    FsDatasetSpi.FsVolumeReferences references;\n    try {\n      try(AutoCloseableLock lock \u003d this.dataset.acquireDatasetLock()) {\n        references \u003d this.dataset.getFsVolumeReferences();\n        for (int ndx \u003d 0; ndx \u003c references.size(); ndx++) {\n          FsVolumeSpi vol \u003d references.get(ndx);\n          storageIDToVolBasePathMap.put(vol.getStorageID(), vol.getBasePath());\n        }\n        references.close();\n      }\n    } catch (IOException ex) {\n      LOG.error(\"Disk Balancer - Internal Error.\", ex);\n      throw new DiskBalancerException(\"Internal error\", ex,\n          DiskBalancerException.Result.INTERNAL_ERROR);\n    }\n    return storageIDToVolBasePathMap;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java",
          "extendedDetails": {}
        }
      ]
    },
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10682. Replace FsDatasetImpl object lock with a separate lock object. (Chen Liang)\n",
      "commitDate": "08/08/16 12:02 PM",
      "commitName": "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "04/08/16 7:40 PM",
      "commitNameOld": "18d9e6ec0bdb4bce316f8af5d3f13902dd899325",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 3.68,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private Map\u003cString, FsVolumeSpi\u003e getStorageIDToVolumeMap()\n       throws DiskBalancerException {\n     Map\u003cString, FsVolumeSpi\u003e pathMap \u003d new HashMap\u003c\u003e();\n     FsDatasetSpi.FsVolumeReferences references;\n     try {\n-      synchronized (this.dataset) {\n+      try(AutoCloseableLock lock \u003d this.dataset.acquireDatasetLock()) {\n         references \u003d this.dataset.getFsVolumeReferences();\n         for (int ndx \u003d 0; ndx \u003c references.size(); ndx++) {\n           FsVolumeSpi vol \u003d references.get(ndx);\n           pathMap.put(vol.getStorageID(), vol);\n         }\n         references.close();\n       }\n     } catch (IOException ex) {\n       LOG.error(\"Disk Balancer - Internal Error.\", ex);\n       throw new DiskBalancerException(\"Internal error\", ex,\n           DiskBalancerException.Result.INTERNAL_ERROR);\n     }\n     return pathMap;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Map\u003cString, FsVolumeSpi\u003e getStorageIDToVolumeMap()\n      throws DiskBalancerException {\n    Map\u003cString, FsVolumeSpi\u003e pathMap \u003d new HashMap\u003c\u003e();\n    FsDatasetSpi.FsVolumeReferences references;\n    try {\n      try(AutoCloseableLock lock \u003d this.dataset.acquireDatasetLock()) {\n        references \u003d this.dataset.getFsVolumeReferences();\n        for (int ndx \u003d 0; ndx \u003c references.size(); ndx++) {\n          FsVolumeSpi vol \u003d references.get(ndx);\n          pathMap.put(vol.getStorageID(), vol);\n        }\n        references.close();\n      }\n    } catch (IOException ex) {\n      LOG.error(\"Disk Balancer - Internal Error.\", ex);\n      throw new DiskBalancerException(\"Internal error\", ex,\n          DiskBalancerException.Result.INTERNAL_ERROR);\n    }\n    return pathMap;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java",
      "extendedDetails": {}
    },
    "2b1b2faf76a7ff148650a7836935a85439f60c49": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9671. DiskBalancer: SubmitPlan implementation. (Contributed by Anu Engineer)\n",
      "commitDate": "23/06/16 6:18 PM",
      "commitName": "2b1b2faf76a7ff148650a7836935a85439f60c49",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,20 @@\n+  private Map\u003cString, FsVolumeSpi\u003e getStorageIDToVolumeMap()\n+      throws DiskBalancerException {\n+    Map\u003cString, FsVolumeSpi\u003e pathMap \u003d new HashMap\u003c\u003e();\n+    FsDatasetSpi.FsVolumeReferences references;\n+    try {\n+      synchronized (this.dataset) {\n+        references \u003d this.dataset.getFsVolumeReferences();\n+        for (int ndx \u003d 0; ndx \u003c references.size(); ndx++) {\n+          FsVolumeSpi vol \u003d references.get(ndx);\n+          pathMap.put(vol.getStorageID(), vol);\n+        }\n+        references.close();\n+      }\n+    } catch (IOException ex) {\n+      LOG.error(\"Disk Balancer - Internal Error.\", ex);\n+      throw new DiskBalancerException(\"Internal error\", ex,\n+          DiskBalancerException.Result.INTERNAL_ERROR);\n+    }\n+    return pathMap;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Map\u003cString, FsVolumeSpi\u003e getStorageIDToVolumeMap()\n      throws DiskBalancerException {\n    Map\u003cString, FsVolumeSpi\u003e pathMap \u003d new HashMap\u003c\u003e();\n    FsDatasetSpi.FsVolumeReferences references;\n    try {\n      synchronized (this.dataset) {\n        references \u003d this.dataset.getFsVolumeReferences();\n        for (int ndx \u003d 0; ndx \u003c references.size(); ndx++) {\n          FsVolumeSpi vol \u003d references.get(ndx);\n          pathMap.put(vol.getStorageID(), vol);\n        }\n        references.close();\n      }\n    } catch (IOException ex) {\n      LOG.error(\"Disk Balancer - Internal Error.\", ex);\n      throw new DiskBalancerException(\"Internal error\", ex,\n          DiskBalancerException.Result.INTERNAL_ERROR);\n    }\n    return pathMap;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java"
    }
  }
}