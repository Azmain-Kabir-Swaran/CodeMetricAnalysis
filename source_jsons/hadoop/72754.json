{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LoadBalancingKMSClientProvider.java",
  "functionName": "reencryptEncryptedKey",
  "functionId": "reencryptEncryptedKey___ekv-EncryptedKeyVersion(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/LoadBalancingKMSClientProvider.java",
  "functionStartLine": 366,
  "functionEndLine": 383,
  "numCommitsSeen": 22,
  "timeTaken": 2756,
  "changeHistory": [
    "edeb2a356ad671d962764c6e2aee9f9e7d6f394c",
    "07fff43f4a1e724c83ff8fcc90fac64aa04a39eb",
    "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b",
    "79d90b810c14d5e3abab75235f587663834ce36c"
  ],
  "changeHistoryShort": {
    "edeb2a356ad671d962764c6e2aee9f9e7d6f394c": "Ybodychange",
    "07fff43f4a1e724c83ff8fcc90fac64aa04a39eb": "Yparametermetachange",
    "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b": "Ymultichange(Yparameterchange,Ybodychange)",
    "79d90b810c14d5e3abab75235f587663834ce36c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "edeb2a356ad671d962764c6e2aee9f9e7d6f394c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15655. Enhance KMS client retry behavior. Contributed by Kitti Nanasi.\n",
      "commitDate": "16/08/18 10:42 PM",
      "commitName": "edeb2a356ad671d962764c6e2aee9f9e7d6f394c",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "24/07/18 9:45 PM",
      "commitNameOld": "81d59506e539673edde12e19c0df5c2edd9d02ad",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 23.04,
      "commitsBetweenForRepo": 220,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public EncryptedKeyVersion reencryptEncryptedKey(\n       final EncryptedKeyVersion ekv)\n       throws IOException, GeneralSecurityException {\n     try {\n       return doOp(new ProviderCallable\u003cEncryptedKeyVersion\u003e() {\n         @Override\n         public EncryptedKeyVersion call(KMSClientProvider provider)\n             throws IOException, GeneralSecurityException {\n           return provider.reencryptEncryptedKey(ekv);\n         }\n-      }, nextIdx());\n+      }, nextIdx(), true);\n     } catch (WrapperException we) {\n       if (we.getCause() instanceof GeneralSecurityException) {\n         throw (GeneralSecurityException) we.getCause();\n       }\n       throw new IOException(we.getCause());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public EncryptedKeyVersion reencryptEncryptedKey(\n      final EncryptedKeyVersion ekv)\n      throws IOException, GeneralSecurityException {\n    try {\n      return doOp(new ProviderCallable\u003cEncryptedKeyVersion\u003e() {\n        @Override\n        public EncryptedKeyVersion call(KMSClientProvider provider)\n            throws IOException, GeneralSecurityException {\n          return provider.reencryptEncryptedKey(ekv);\n        }\n      }, nextIdx(), true);\n    } catch (WrapperException we) {\n      if (we.getCause() instanceof GeneralSecurityException) {\n        throw (GeneralSecurityException) we.getCause();\n      }\n      throw new IOException(we.getCause());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/LoadBalancingKMSClientProvider.java",
      "extendedDetails": {}
    },
    "07fff43f4a1e724c83ff8fcc90fac64aa04a39eb": {
      "type": "Yparametermetachange",
      "commitMessage": "HADOOP-14760. Add missing override to LoadBalancingKMSClientProvider.\n",
      "commitDate": "11/08/17 11:41 AM",
      "commitName": "07fff43f4a1e724c83ff8fcc90fac64aa04a39eb",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "14/07/17 10:22 PM",
      "commitNameOld": "0a6d5c0cf1d963da9131aa12326fc576f0e92d2c",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 27.55,
      "commitsBetweenForRepo": 208,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n-  public EncryptedKeyVersion reencryptEncryptedKey(EncryptedKeyVersion ekv)\n+  public EncryptedKeyVersion reencryptEncryptedKey(\n+      final EncryptedKeyVersion ekv)\n       throws IOException, GeneralSecurityException {\n     try {\n       return doOp(new ProviderCallable\u003cEncryptedKeyVersion\u003e() {\n         @Override\n         public EncryptedKeyVersion call(KMSClientProvider provider)\n             throws IOException, GeneralSecurityException {\n           return provider.reencryptEncryptedKey(ekv);\n         }\n       }, nextIdx());\n     } catch (WrapperException we) {\n       if (we.getCause() instanceof GeneralSecurityException) {\n         throw (GeneralSecurityException) we.getCause();\n       }\n       throw new IOException(we.getCause());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public EncryptedKeyVersion reencryptEncryptedKey(\n      final EncryptedKeyVersion ekv)\n      throws IOException, GeneralSecurityException {\n    try {\n      return doOp(new ProviderCallable\u003cEncryptedKeyVersion\u003e() {\n        @Override\n        public EncryptedKeyVersion call(KMSClientProvider provider)\n            throws IOException, GeneralSecurityException {\n          return provider.reencryptEncryptedKey(ekv);\n        }\n      }, nextIdx());\n    } catch (WrapperException we) {\n      if (we.getCause() instanceof GeneralSecurityException) {\n        throw (GeneralSecurityException) we.getCause();\n      }\n      throw new IOException(we.getCause());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/LoadBalancingKMSClientProvider.java",
      "extendedDetails": {
        "oldValue": "[ekv-EncryptedKeyVersion]",
        "newValue": "[ekv-EncryptedKeyVersion(modifiers-final)]"
      }
    },
    "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-11210. Enhance key rolling to guarantee new KeyVersion is returned from generateEncryptedKeys after a key is rolled.\n",
      "commitDate": "07/02/17 8:36 PM",
      "commitName": "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b",
      "commitAuthor": "Xiao Chen",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-11210. Enhance key rolling to guarantee new KeyVersion is returned from generateEncryptedKeys after a key is rolled.\n",
          "commitDate": "07/02/17 8:36 PM",
          "commitName": "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "06/12/16 12:04 PM",
          "commitNameOld": "79d90b810c14d5e3abab75235f587663834ce36c",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 63.36,
          "commitsBetweenForRepo": 294,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public EncryptedKeyVersion reencryptEncryptedKey(EncryptedKeyVersion edek)\n+  public EncryptedKeyVersion reencryptEncryptedKey(EncryptedKeyVersion ekv)\n       throws IOException, GeneralSecurityException {\n     try {\n       return doOp(new ProviderCallable\u003cEncryptedKeyVersion\u003e() {\n         @Override\n         public EncryptedKeyVersion call(KMSClientProvider provider)\n             throws IOException, GeneralSecurityException {\n-          return provider.reencryptEncryptedKey(edek);\n+          return provider.reencryptEncryptedKey(ekv);\n         }\n       }, nextIdx());\n     } catch (WrapperException we) {\n       if (we.getCause() instanceof GeneralSecurityException) {\n         throw (GeneralSecurityException) we.getCause();\n       }\n       throw new IOException(we.getCause());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public EncryptedKeyVersion reencryptEncryptedKey(EncryptedKeyVersion ekv)\n      throws IOException, GeneralSecurityException {\n    try {\n      return doOp(new ProviderCallable\u003cEncryptedKeyVersion\u003e() {\n        @Override\n        public EncryptedKeyVersion call(KMSClientProvider provider)\n            throws IOException, GeneralSecurityException {\n          return provider.reencryptEncryptedKey(ekv);\n        }\n      }, nextIdx());\n    } catch (WrapperException we) {\n      if (we.getCause() instanceof GeneralSecurityException) {\n        throw (GeneralSecurityException) we.getCause();\n      }\n      throw new IOException(we.getCause());\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/LoadBalancingKMSClientProvider.java",
          "extendedDetails": {
            "oldValue": "[edek-EncryptedKeyVersion]",
            "newValue": "[ekv-EncryptedKeyVersion]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11210. Enhance key rolling to guarantee new KeyVersion is returned from generateEncryptedKeys after a key is rolled.\n",
          "commitDate": "07/02/17 8:36 PM",
          "commitName": "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "06/12/16 12:04 PM",
          "commitNameOld": "79d90b810c14d5e3abab75235f587663834ce36c",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 63.36,
          "commitsBetweenForRepo": 294,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public EncryptedKeyVersion reencryptEncryptedKey(EncryptedKeyVersion edek)\n+  public EncryptedKeyVersion reencryptEncryptedKey(EncryptedKeyVersion ekv)\n       throws IOException, GeneralSecurityException {\n     try {\n       return doOp(new ProviderCallable\u003cEncryptedKeyVersion\u003e() {\n         @Override\n         public EncryptedKeyVersion call(KMSClientProvider provider)\n             throws IOException, GeneralSecurityException {\n-          return provider.reencryptEncryptedKey(edek);\n+          return provider.reencryptEncryptedKey(ekv);\n         }\n       }, nextIdx());\n     } catch (WrapperException we) {\n       if (we.getCause() instanceof GeneralSecurityException) {\n         throw (GeneralSecurityException) we.getCause();\n       }\n       throw new IOException(we.getCause());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public EncryptedKeyVersion reencryptEncryptedKey(EncryptedKeyVersion ekv)\n      throws IOException, GeneralSecurityException {\n    try {\n      return doOp(new ProviderCallable\u003cEncryptedKeyVersion\u003e() {\n        @Override\n        public EncryptedKeyVersion call(KMSClientProvider provider)\n            throws IOException, GeneralSecurityException {\n          return provider.reencryptEncryptedKey(ekv);\n        }\n      }, nextIdx());\n    } catch (WrapperException we) {\n      if (we.getCause() instanceof GeneralSecurityException) {\n        throw (GeneralSecurityException) we.getCause();\n      }\n      throw new IOException(we.getCause());\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/LoadBalancingKMSClientProvider.java",
          "extendedDetails": {}
        }
      ]
    },
    "79d90b810c14d5e3abab75235f587663834ce36c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13827. Add reencryptEncryptedKey interface to KMS.\n",
      "commitDate": "06/12/16 12:04 PM",
      "commitName": "79d90b810c14d5e3abab75235f587663834ce36c",
      "commitAuthor": "Xiao Chen",
      "diff": "@@ -0,0 +1,17 @@\n+  public EncryptedKeyVersion reencryptEncryptedKey(EncryptedKeyVersion edek)\n+      throws IOException, GeneralSecurityException {\n+    try {\n+      return doOp(new ProviderCallable\u003cEncryptedKeyVersion\u003e() {\n+        @Override\n+        public EncryptedKeyVersion call(KMSClientProvider provider)\n+            throws IOException, GeneralSecurityException {\n+          return provider.reencryptEncryptedKey(edek);\n+        }\n+      }, nextIdx());\n+    } catch (WrapperException we) {\n+      if (we.getCause() instanceof GeneralSecurityException) {\n+        throw (GeneralSecurityException) we.getCause();\n+      }\n+      throw new IOException(we.getCause());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public EncryptedKeyVersion reencryptEncryptedKey(EncryptedKeyVersion edek)\n      throws IOException, GeneralSecurityException {\n    try {\n      return doOp(new ProviderCallable\u003cEncryptedKeyVersion\u003e() {\n        @Override\n        public EncryptedKeyVersion call(KMSClientProvider provider)\n            throws IOException, GeneralSecurityException {\n          return provider.reencryptEncryptedKey(edek);\n        }\n      }, nextIdx());\n    } catch (WrapperException we) {\n      if (we.getCause() instanceof GeneralSecurityException) {\n        throw (GeneralSecurityException) we.getCause();\n      }\n      throw new IOException(we.getCause());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/LoadBalancingKMSClientProvider.java"
    }
  }
}