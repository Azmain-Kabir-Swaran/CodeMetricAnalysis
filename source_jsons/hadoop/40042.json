{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacitySchedulerConfiguration.java",
  "functionName": "getNonLabeledQueueCapacity",
  "functionId": "getNonLabeledQueueCapacity___queue-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
  "functionStartLine": 464,
  "functionEndLine": 490,
  "numCommitsSeen": 126,
  "timeTaken": 10036,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "1012b901c8eeeb46c7c792c94ed0befca1c860b4",
    "5e798b1a0ddceeaf54703b94052501867156e979",
    "18a594257e052e8f10a03e5594e6cc6901dc56be",
    "d0a2d55b1a6c16f98d9d8259aea983863309c099",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "01b61c76a85858a0bc0cba24cc00f961affa4922",
    "9d1621da52fd7f4ee68f80fdbf420180a42b5b1d",
    "743a5b78e3bce26482c6bcd71208e422fa178cf9",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "1012b901c8eeeb46c7c792c94ed0befca1c860b4": "Ybodychange",
    "5e798b1a0ddceeaf54703b94052501867156e979": "Ybodychange",
    "18a594257e052e8f10a03e5594e6cc6901dc56be": "Yrename",
    "d0a2d55b1a6c16f98d9d8259aea983863309c099": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "01b61c76a85858a0bc0cba24cc00f961affa4922": "Ymultichange(Yreturntypechange,Ybodychange)",
    "9d1621da52fd7f4ee68f80fdbf420180a42b5b1d": "Ybodychange",
    "743a5b78e3bce26482c6bcd71208e422fa178cf9": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   public float getNonLabeledQueueCapacity(String queue) {\n     String configuredCapacity \u003d get(getQueuePrefix(queue) + CAPACITY);\n     boolean matcher \u003d (configuredCapacity !\u003d null)\n         \u0026\u0026 RESOURCE_PATTERN.matcher(configuredCapacity).find();\n     if (matcher) {\n       // Return capacity in percentage as 0 for non-root queues and 100 for\n       // root.From AbstractCSQueue, absolute resource will be parsed and\n       // updated. Once nodes are added/removed in cluster, capacity in\n       // percentage will also be re-calculated.\n       return queue.equals(\"root\") ? 100.0f : 0f;\n     }\n \n     float capacity \u003d queue.equals(\"root\")\n         ? 100.0f\n         : (configuredCapacity \u003d\u003d null)\n             ? 0f\n             : Float.parseFloat(configuredCapacity);\n     if (capacity \u003c MINIMUM_CAPACITY_VALUE\n         || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n       throw new IllegalArgumentException(\n           \"Illegal \" + \"capacity of \" + capacity + \" for queue \" + queue);\n     }\n-    LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d\" + getQueuePrefix(queue)\n-        + \", capacity\u003d\" + capacity);\n+    LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d{}, capacity\u003d{}\",\n+        getQueuePrefix(queue), capacity);\n+\n     return capacity;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public float getNonLabeledQueueCapacity(String queue) {\n    String configuredCapacity \u003d get(getQueuePrefix(queue) + CAPACITY);\n    boolean matcher \u003d (configuredCapacity !\u003d null)\n        \u0026\u0026 RESOURCE_PATTERN.matcher(configuredCapacity).find();\n    if (matcher) {\n      // Return capacity in percentage as 0 for non-root queues and 100 for\n      // root.From AbstractCSQueue, absolute resource will be parsed and\n      // updated. Once nodes are added/removed in cluster, capacity in\n      // percentage will also be re-calculated.\n      return queue.equals(\"root\") ? 100.0f : 0f;\n    }\n\n    float capacity \u003d queue.equals(\"root\")\n        ? 100.0f\n        : (configuredCapacity \u003d\u003d null)\n            ? 0f\n            : Float.parseFloat(configuredCapacity);\n    if (capacity \u003c MINIMUM_CAPACITY_VALUE\n        || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n      throw new IllegalArgumentException(\n          \"Illegal \" + \"capacity of \" + capacity + \" for queue \" + queue);\n    }\n    LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d{}, capacity\u003d{}\",\n        getQueuePrefix(queue), capacity);\n\n    return capacity;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "1012b901c8eeeb46c7c792c94ed0befca1c860b4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7544. Use queue-path.capacity/maximum-capacity to specify absolute min/max resources. (Sunil G via wangda)\n\nChange-Id: I685341be213eee500f51e02f01c91def89391c17\n",
      "commitDate": "07/12/17 6:56 PM",
      "commitName": "1012b901c8eeeb46c7c792c94ed0befca1c860b4",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "07/12/17 6:56 PM",
      "commitNameOld": "5e798b1a0ddceeaf54703b94052501867156e979",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,26 @@\n   public float getNonLabeledQueueCapacity(String queue) {\n-    float capacity \u003d queue.equals(\"root\") ? 100.0f : getFloat(\n-        getQueuePrefix(queue) + CAPACITY, 0f);\n-    if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n-      throw new IllegalArgumentException(\"Illegal \" +\n-      \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n+    String configuredCapacity \u003d get(getQueuePrefix(queue) + CAPACITY);\n+    boolean matcher \u003d (configuredCapacity !\u003d null)\n+        \u0026\u0026 RESOURCE_PATTERN.matcher(configuredCapacity).find();\n+    if (matcher) {\n+      // Return capacity in percentage as 0 for non-root queues and 100 for\n+      // root.From AbstractCSQueue, absolute resource will be parsed and\n+      // updated. Once nodes are added/removed in cluster, capacity in\n+      // percentage will also be re-calculated.\n+      return queue.equals(\"root\") ? 100.0f : 0f;\n     }\n-    LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n-        \", capacity\u003d\" + capacity);\n+\n+    float capacity \u003d queue.equals(\"root\")\n+        ? 100.0f\n+        : (configuredCapacity \u003d\u003d null)\n+            ? 0f\n+            : Float.parseFloat(configuredCapacity);\n+    if (capacity \u003c MINIMUM_CAPACITY_VALUE\n+        || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n+      throw new IllegalArgumentException(\n+          \"Illegal \" + \"capacity of \" + capacity + \" for queue \" + queue);\n+    }\n+    LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d\" + getQueuePrefix(queue)\n+        + \", capacity\u003d\" + capacity);\n     return capacity;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public float getNonLabeledQueueCapacity(String queue) {\n    String configuredCapacity \u003d get(getQueuePrefix(queue) + CAPACITY);\n    boolean matcher \u003d (configuredCapacity !\u003d null)\n        \u0026\u0026 RESOURCE_PATTERN.matcher(configuredCapacity).find();\n    if (matcher) {\n      // Return capacity in percentage as 0 for non-root queues and 100 for\n      // root.From AbstractCSQueue, absolute resource will be parsed and\n      // updated. Once nodes are added/removed in cluster, capacity in\n      // percentage will also be re-calculated.\n      return queue.equals(\"root\") ? 100.0f : 0f;\n    }\n\n    float capacity \u003d queue.equals(\"root\")\n        ? 100.0f\n        : (configuredCapacity \u003d\u003d null)\n            ? 0f\n            : Float.parseFloat(configuredCapacity);\n    if (capacity \u003c MINIMUM_CAPACITY_VALUE\n        || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n      throw new IllegalArgumentException(\n          \"Illegal \" + \"capacity of \" + capacity + \" for queue \" + queue);\n    }\n    LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d\" + getQueuePrefix(queue)\n        + \", capacity\u003d\" + capacity);\n    return capacity;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "5e798b1a0ddceeaf54703b94052501867156e979": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6471. Support to add min/max resource configuration for a queue. (Sunil G via wangda)\n\nChange-Id: I9213f5297a6841fab5c573e85ee4c4e5f4a0b7ff\n",
      "commitDate": "07/12/17 6:56 PM",
      "commitName": "5e798b1a0ddceeaf54703b94052501867156e979",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/11/17 11:25 AM",
      "commitNameOld": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 21.31,
      "commitsBetweenForRepo": 94,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public float getNonLabeledQueueCapacity(String queue) {\n     float capacity \u003d queue.equals(\"root\") ? 100.0f : getFloat(\n-        getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n+        getQueuePrefix(queue) + CAPACITY, 0f);\n     if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n       throw new IllegalArgumentException(\"Illegal \" +\n       \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n     }\n     LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n         \", capacity\u003d\" + capacity);\n     return capacity;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public float getNonLabeledQueueCapacity(String queue) {\n    float capacity \u003d queue.equals(\"root\") ? 100.0f : getFloat(\n        getQueuePrefix(queue) + CAPACITY, 0f);\n    if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n      throw new IllegalArgumentException(\"Illegal \" +\n      \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n    }\n    LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n        \", capacity\u003d\" + capacity);\n    return capacity;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "18a594257e052e8f10a03e5594e6cc6901dc56be": {
      "type": "Yrename",
      "commitMessage": "YARN-3124. Fixed CS LeafQueue/ParentQueue to use QueueCapacities to track capacities-by-label. Contributed by Wangda Tan\n",
      "commitDate": "12/02/15 2:58 PM",
      "commitName": "18a594257e052e8f10a03e5594e6cc6901dc56be",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/02/15 8:34 PM",
      "commitNameOld": "23bf6c72071782e3fd5a628e21495d6b974c7a9e",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 2.77,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n-  public float getCapacity(String queue) {\n+  public float getNonLabeledQueueCapacity(String queue) {\n     float capacity \u003d queue.equals(\"root\") ? 100.0f : getFloat(\n         getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n     if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n       throw new IllegalArgumentException(\"Illegal \" +\n       \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n     }\n     LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n         \", capacity\u003d\" + capacity);\n     return capacity;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public float getNonLabeledQueueCapacity(String queue) {\n    float capacity \u003d queue.equals(\"root\") ? 100.0f : getFloat(\n        getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n    if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n      throw new IllegalArgumentException(\"Illegal \" +\n      \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n    }\n    LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n        \", capacity\u003d\" + capacity);\n    return capacity;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
      "extendedDetails": {
        "oldValue": "getCapacity",
        "newValue": "getNonLabeledQueueCapacity"
      }
    },
    "d0a2d55b1a6c16f98d9d8259aea983863309c099": {
      "type": "Ybodychange",
      "commitMessage": "YARN-140. Add capacity-scheduler-default.xml to provide a default set of configurations for the capacity scheduler. (ahmed via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1400335 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/10/12 4:16 PM",
      "commitName": "d0a2d55b1a6c16f98d9d8259aea983863309c099",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "06/09/12 10:10 PM",
      "commitNameOld": "56d72dfdf1f33272f32794a02f3b08cfeee85343",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 42.75,
      "commitsBetweenForRepo": 245,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,11 @@\n   public float getCapacity(String queue) {\n-    float capacity \u003d getFloat(getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n+    float capacity \u003d queue.equals(\"root\") ? 100.0f : getFloat(\n+        getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n     if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n       throw new IllegalArgumentException(\"Illegal \" +\n       \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n     }\n     LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n         \", capacity\u003d\" + capacity);\n     return capacity;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public float getCapacity(String queue) {\n    float capacity \u003d queue.equals(\"root\") ? 100.0f : getFloat(\n        getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n    if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n      throw new IllegalArgumentException(\"Illegal \" +\n      \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n    }\n    LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n        \", capacity\u003d\" + capacity);\n    return capacity;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public float getCapacity(String queue) {\n    float capacity \u003d getFloat(getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n    if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n      throw new IllegalArgumentException(\"Illegal \" +\n      \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n    }\n    LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n        \", capacity\u003d\" + capacity);\n    return capacity;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java"
      }
    },
    "01b61c76a85858a0bc0cba24cc00f961affa4922": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "MAPREDUCE-4311. Capacity scheduler.xml does not accept decimal values for capacity and maximum-capacity settings (Karthik Kambatla via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1351700 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/06/12 6:06 AM",
      "commitName": "01b61c76a85858a0bc0cba24cc00f961affa4922",
      "commitAuthor": "Thomas Graves",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "MAPREDUCE-4311. Capacity scheduler.xml does not accept decimal values for capacity and maximum-capacity settings (Karthik Kambatla via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1351700 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/06/12 6:06 AM",
          "commitName": "01b61c76a85858a0bc0cba24cc00f961affa4922",
          "commitAuthor": "Thomas Graves",
          "commitDateOld": "23/04/12 8:26 AM",
          "commitNameOld": "1eb1d0ae4feca0bd234cd54158cbf9d19289e83e",
          "commitAuthorOld": "Robert Joseph Evans",
          "daysBetweenCommits": 56.9,
          "commitsBetweenForRepo": 309,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-  public int getCapacity(String queue) {\n-    int capacity \u003d getInt(getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n+  public float getCapacity(String queue) {\n+    float capacity \u003d getFloat(getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n     if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n       throw new IllegalArgumentException(\"Illegal \" +\n       \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n     }\n     LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n         \", capacity\u003d\" + capacity);\n     return capacity;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public float getCapacity(String queue) {\n    float capacity \u003d getFloat(getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n    if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n      throw new IllegalArgumentException(\"Illegal \" +\n      \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n    }\n    LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n        \", capacity\u003d\" + capacity);\n    return capacity;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
          "extendedDetails": {
            "oldValue": "int",
            "newValue": "float"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-4311. Capacity scheduler.xml does not accept decimal values for capacity and maximum-capacity settings (Karthik Kambatla via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1351700 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/06/12 6:06 AM",
          "commitName": "01b61c76a85858a0bc0cba24cc00f961affa4922",
          "commitAuthor": "Thomas Graves",
          "commitDateOld": "23/04/12 8:26 AM",
          "commitNameOld": "1eb1d0ae4feca0bd234cd54158cbf9d19289e83e",
          "commitAuthorOld": "Robert Joseph Evans",
          "daysBetweenCommits": 56.9,
          "commitsBetweenForRepo": 309,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-  public int getCapacity(String queue) {\n-    int capacity \u003d getInt(getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n+  public float getCapacity(String queue) {\n+    float capacity \u003d getFloat(getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n     if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n       throw new IllegalArgumentException(\"Illegal \" +\n       \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n     }\n     LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n         \", capacity\u003d\" + capacity);\n     return capacity;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public float getCapacity(String queue) {\n    float capacity \u003d getFloat(getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n    if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n      throw new IllegalArgumentException(\"Illegal \" +\n      \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n    }\n    LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n        \", capacity\u003d\" + capacity);\n    return capacity;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
          "extendedDetails": {}
        }
      ]
    },
    "9d1621da52fd7f4ee68f80fdbf420180a42b5b1d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3683. Fixed maxCapacity of queues to be product of parent maxCapacities. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1235858 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/12 10:17 AM",
      "commitName": "9d1621da52fd7f4ee68f80fdbf420180a42b5b1d",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "29/12/11 11:06 AM",
      "commitNameOld": "743a5b78e3bce26482c6bcd71208e422fa178cf9",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 26.97,
      "commitsBetweenForRepo": 112,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   public int getCapacity(String queue) {\n     int capacity \u003d getInt(getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n     if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n       throw new IllegalArgumentException(\"Illegal \" +\n       \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n     }\n-    LOG.debug(\"CSConf - setCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n+    LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n         \", capacity\u003d\" + capacity);\n     return capacity;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int getCapacity(String queue) {\n    int capacity \u003d getInt(getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n    if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n      throw new IllegalArgumentException(\"Illegal \" +\n      \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n    }\n    LOG.debug(\"CSConf - getCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n        \", capacity\u003d\" + capacity);\n    return capacity;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "743a5b78e3bce26482c6bcd71208e422fa178cf9": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3522. Ensure queues inherit ACLs from parent if they aren\u0027t explicitly specified. Contributed by Jonathan Eagles. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1225618 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/12/11 11:06 AM",
      "commitName": "743a5b78e3bce26482c6bcd71208e422fa178cf9",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "12/12/11 4:20 PM",
      "commitNameOld": "e52291ea8871e2de421692fdfd6fbaabeca60eb4",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 16.78,
      "commitsBetweenForRepo": 90,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   public int getCapacity(String queue) {\n     int capacity \u003d getInt(getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n     if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n       throw new IllegalArgumentException(\"Illegal \" +\n       \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n     }\n-    LOG.info(\"CSConf - setCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n+    LOG.debug(\"CSConf - setCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n         \", capacity\u003d\" + capacity);\n     return capacity;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int getCapacity(String queue) {\n    int capacity \u003d getInt(getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n    if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n      throw new IllegalArgumentException(\"Illegal \" +\n      \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n    }\n    LOG.debug(\"CSConf - setCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n        \", capacity\u003d\" + capacity);\n    return capacity;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int getCapacity(String queue) {\n    int capacity \u003d getInt(getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n    if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n      throw new IllegalArgumentException(\"Illegal \" +\n      \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n    }\n    LOG.info(\"CSConf - setCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n        \", capacity\u003d\" + capacity);\n    return capacity;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,10 @@\n+  public int getCapacity(String queue) {\n+    int capacity \u003d getInt(getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n+    if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n+      throw new IllegalArgumentException(\"Illegal \" +\n+      \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n+    }\n+    LOG.info(\"CSConf - setCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n+        \", capacity\u003d\" + capacity);\n+    return capacity;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int getCapacity(String queue) {\n    int capacity \u003d getInt(getQueuePrefix(queue) + CAPACITY, UNDEFINED);\n    if (capacity \u003c MINIMUM_CAPACITY_VALUE || capacity \u003e MAXIMUM_CAPACITY_VALUE) {\n      throw new IllegalArgumentException(\"Illegal \" +\n      \t\t\"capacity of \" + capacity + \" for queue \" + queue);\n    }\n    LOG.info(\"CSConf - setCapacity: queuePrefix\u003d\" + getQueuePrefix(queue) + \n        \", capacity\u003d\" + capacity);\n    return capacity;\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java"
    }
  }
}