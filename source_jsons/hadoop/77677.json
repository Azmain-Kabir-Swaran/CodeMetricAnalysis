{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractMapWritable.java",
  "functionName": "readFields",
  "functionId": "readFields___in-DataInput",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/AbstractMapWritable.java",
  "functionStartLine": 181,
  "functionEndLine": 202,
  "numCommitsSeen": 10,
  "timeTaken": 1123,
  "changeHistory": [
    "069c6c62def4a0f94382e9f149581d8e22f6d31c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "069c6c62def4a0f94382e9f149581d8e22f6d31c": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "069c6c62def4a0f94382e9f149581d8e22f6d31c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12406. Fixed AbstractMapWritable.readFields to use the thread\u0027s ClassLoader to load class instead of System ClassLoader. Contributed by Nadeem Douba.\n",
      "commitDate": "11/04/16 12:02 PM",
      "commitName": "069c6c62def4a0f94382e9f149581d8e22f6d31c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/01/16 8:47 PM",
      "commitNameOld": "736eb17a796a1c1ad5f4db2c6a64f6752db7bec3",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 77.59,
      "commitsBetweenForRepo": 493,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   public void readFields(DataInput in) throws IOException {\n     \n     // Get the number of \"unknown\" classes\n-    \n     newClasses \u003d in.readByte();\n-    \n+\n+    // Use the classloader of the current thread to load classes instead of the\n+    // system-classloader so as to support both client-only and inside-a-MR-job\n+    // use-cases. The context-loader by default eventually falls back to the\n+    // system one, so there should be no cases where changing this is an issue.\n+    ClassLoader classLoader \u003d Thread.currentThread().getContextClassLoader();\n+\n     // Then read in the class names and add them to our tables\n-    \n     for (int i \u003d 0; i \u003c newClasses; i++) {\n       byte id \u003d in.readByte();\n       String className \u003d in.readUTF();\n       try {\n-        addToMap(Class.forName(className), id);\n-        \n+        addToMap(classLoader.loadClass(className), id);\n       } catch (ClassNotFoundException e) {\n-        throw new IOException(\"can\u0027t find class: \" + className + \" because \"+\n-            e.getMessage());\n+        throw new IOException(e);\n       }\n     }\n   }    \n\\ No newline at end of file\n",
      "actualSource": "  public void readFields(DataInput in) throws IOException {\n    \n    // Get the number of \"unknown\" classes\n    newClasses \u003d in.readByte();\n\n    // Use the classloader of the current thread to load classes instead of the\n    // system-classloader so as to support both client-only and inside-a-MR-job\n    // use-cases. The context-loader by default eventually falls back to the\n    // system one, so there should be no cases where changing this is an issue.\n    ClassLoader classLoader \u003d Thread.currentThread().getContextClassLoader();\n\n    // Then read in the class names and add them to our tables\n    for (int i \u003d 0; i \u003c newClasses; i++) {\n      byte id \u003d in.readByte();\n      String className \u003d in.readUTF();\n      try {\n        addToMap(classLoader.loadClass(className), id);\n      } catch (ClassNotFoundException e) {\n        throw new IOException(e);\n      }\n    }\n  }    ",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/AbstractMapWritable.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void readFields(DataInput in) throws IOException {\n    \n    // Get the number of \"unknown\" classes\n    \n    newClasses \u003d in.readByte();\n    \n    // Then read in the class names and add them to our tables\n    \n    for (int i \u003d 0; i \u003c newClasses; i++) {\n      byte id \u003d in.readByte();\n      String className \u003d in.readUTF();\n      try {\n        addToMap(Class.forName(className), id);\n        \n      } catch (ClassNotFoundException e) {\n        throw new IOException(\"can\u0027t find class: \" + className + \" because \"+\n            e.getMessage());\n      }\n    }\n  }    ",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/AbstractMapWritable.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/io/AbstractMapWritable.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/AbstractMapWritable.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void readFields(DataInput in) throws IOException {\n    \n    // Get the number of \"unknown\" classes\n    \n    newClasses \u003d in.readByte();\n    \n    // Then read in the class names and add them to our tables\n    \n    for (int i \u003d 0; i \u003c newClasses; i++) {\n      byte id \u003d in.readByte();\n      String className \u003d in.readUTF();\n      try {\n        addToMap(Class.forName(className), id);\n        \n      } catch (ClassNotFoundException e) {\n        throw new IOException(\"can\u0027t find class: \" + className + \" because \"+\n            e.getMessage());\n      }\n    }\n  }    ",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/io/AbstractMapWritable.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/io/AbstractMapWritable.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/io/AbstractMapWritable.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void readFields(DataInput in) throws IOException {\n    \n    // Get the number of \"unknown\" classes\n    \n    newClasses \u003d in.readByte();\n    \n    // Then read in the class names and add them to our tables\n    \n    for (int i \u003d 0; i \u003c newClasses; i++) {\n      byte id \u003d in.readByte();\n      String className \u003d in.readUTF();\n      try {\n        addToMap(Class.forName(className), id);\n        \n      } catch (ClassNotFoundException e) {\n        throw new IOException(\"can\u0027t find class: \" + className + \" because \"+\n            e.getMessage());\n      }\n    }\n  }    ",
      "path": "common/src/java/org/apache/hadoop/io/AbstractMapWritable.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/io/AbstractMapWritable.java",
        "newPath": "common/src/java/org/apache/hadoop/io/AbstractMapWritable.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,20 @@\n+  public void readFields(DataInput in) throws IOException {\n+    \n+    // Get the number of \"unknown\" classes\n+    \n+    newClasses \u003d in.readByte();\n+    \n+    // Then read in the class names and add them to our tables\n+    \n+    for (int i \u003d 0; i \u003c newClasses; i++) {\n+      byte id \u003d in.readByte();\n+      String className \u003d in.readUTF();\n+      try {\n+        addToMap(Class.forName(className), id);\n+        \n+      } catch (ClassNotFoundException e) {\n+        throw new IOException(\"can\u0027t find class: \" + className + \" because \"+\n+            e.getMessage());\n+      }\n+    }\n+  }    \n\\ No newline at end of file\n",
      "actualSource": "  public void readFields(DataInput in) throws IOException {\n    \n    // Get the number of \"unknown\" classes\n    \n    newClasses \u003d in.readByte();\n    \n    // Then read in the class names and add them to our tables\n    \n    for (int i \u003d 0; i \u003c newClasses; i++) {\n      byte id \u003d in.readByte();\n      String className \u003d in.readUTF();\n      try {\n        addToMap(Class.forName(className), id);\n        \n      } catch (ClassNotFoundException e) {\n        throw new IOException(\"can\u0027t find class: \" + className + \" because \"+\n            e.getMessage());\n      }\n    }\n  }    ",
      "path": "src/java/org/apache/hadoop/io/AbstractMapWritable.java"
    }
  }
}