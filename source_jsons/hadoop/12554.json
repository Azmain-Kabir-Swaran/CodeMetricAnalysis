{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Balancer.java",
  "functionName": "chooseCandidate",
  "functionId": "chooseCandidate___g-G__candidates-Iterator__C____matcher-Matcher",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
  "functionStartLine": 561,
  "functionEndLine": 573,
  "numCommitsSeen": 162,
  "timeTaken": 4165,
  "changeHistory": [
    "bbce1d525e0016c9b8e573b86af3c87aa39582bd",
    "e60673697d5046c29c52bbabdfe80506f99773e4",
    "c3cf331dc91e2beef2afeed11105084843b02858",
    "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
    "1f4b135b1f9c6aff1dab4fe749126ec814f8387b",
    "1634e980af422c0af2f7c9c7280a77f2fbddc9c0"
  ],
  "changeHistoryShort": {
    "bbce1d525e0016c9b8e573b86af3c87aa39582bd": "Ybodychange",
    "e60673697d5046c29c52bbabdfe80506f99773e4": "Ybodychange",
    "c3cf331dc91e2beef2afeed11105084843b02858": "Ybodychange",
    "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d": "Ymultichange(Yparameterchange,Ybodychange)",
    "1f4b135b1f9c6aff1dab4fe749126ec814f8387b": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "1634e980af422c0af2f7c9c7280a77f2fbddc9c0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bbce1d525e0016c9b8e573b86af3c87aa39582bd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10319. Balancer should not try to pair storages with different types.\n",
      "commitDate": "21/04/16 3:20 PM",
      "commitName": "bbce1d525e0016c9b8e573b86af3c87aa39582bd",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "28/03/16 8:25 PM",
      "commitNameOld": "1f004b3367c57de9e8a67040a57efc31c9ba8ee2",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 23.79,
      "commitsBetweenForRepo": 158,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,13 @@\n       C chooseCandidate(G g, Iterator\u003cC\u003e candidates, Matcher matcher) {\n     if (g.hasSpaceForScheduling()) {\n       for(; candidates.hasNext(); ) {\n         final C c \u003d candidates.next();\n         if (!c.hasSpaceForScheduling()) {\n           candidates.remove();\n-        } else if (matcher.match(dispatcher.getCluster(),\n-            g.getDatanodeInfo(), c.getDatanodeInfo())) {\n+        } else if (matchStorageGroups(c, g, matcher)) {\n           return c;\n         }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "      C chooseCandidate(G g, Iterator\u003cC\u003e candidates, Matcher matcher) {\n    if (g.hasSpaceForScheduling()) {\n      for(; candidates.hasNext(); ) {\n        final C c \u003d candidates.next();\n        if (!c.hasSpaceForScheduling()) {\n          candidates.remove();\n        } else if (matchStorageGroups(c, g, matcher)) {\n          return c;\n        }\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {}
    },
    "e60673697d5046c29c52bbabdfe80506f99773e4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6837. Code cleanup for Balancer and Dispatcher. Contributed by Tsz Wo Nicholas Sze.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617337 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/08/14 11:01 AM",
      "commitName": "e60673697d5046c29c52bbabdfe80506f99773e4",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "08/08/14 2:33 PM",
      "commitNameOld": "c3cf331dc91e2beef2afeed11105084843b02858",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 2.85,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n       C chooseCandidate(G g, Iterator\u003cC\u003e candidates, Matcher matcher) {\n     if (g.hasSpaceForScheduling()) {\n       for(; candidates.hasNext(); ) {\n         final C c \u003d candidates.next();\n         if (!c.hasSpaceForScheduling()) {\n           candidates.remove();\n         } else if (matcher.match(dispatcher.getCluster(),\n-            g.getDatanode(), c.getDatanode())) {\n+            g.getDatanodeInfo(), c.getDatanodeInfo())) {\n           return c;\n         }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "      C chooseCandidate(G g, Iterator\u003cC\u003e candidates, Matcher matcher) {\n    if (g.hasSpaceForScheduling()) {\n      for(; candidates.hasNext(); ) {\n        final C c \u003d candidates.next();\n        if (!c.hasSpaceForScheduling()) {\n          candidates.remove();\n        } else if (matcher.match(dispatcher.getCluster(),\n            g.getDatanodeInfo(), c.getDatanodeInfo())) {\n          return c;\n        }\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {}
    },
    "c3cf331dc91e2beef2afeed11105084843b02858": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6828. Separate block replica dispatching from Balancer. Contributed by Tsz Wo Nicholas Sze.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616889 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/14 2:33 PM",
      "commitName": "c3cf331dc91e2beef2afeed11105084843b02858",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "07/08/14 12:18 AM",
      "commitNameOld": "83b9933db3349e6a6faf23bce35c9d4ce3f7bcf2",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 1.59,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n       C chooseCandidate(G g, Iterator\u003cC\u003e candidates, Matcher matcher) {\n     if (g.hasSpaceForScheduling()) {\n       for(; candidates.hasNext(); ) {\n         final C c \u003d candidates.next();\n         if (!c.hasSpaceForScheduling()) {\n           candidates.remove();\n-        } else if (matcher.match(cluster, g.getDatanode(), c.getDatanode())) {\n+        } else if (matcher.match(dispatcher.getCluster(),\n+            g.getDatanode(), c.getDatanode())) {\n           return c;\n         }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "      C chooseCandidate(G g, Iterator\u003cC\u003e candidates, Matcher matcher) {\n    if (g.hasSpaceForScheduling()) {\n      for(; candidates.hasNext(); ) {\n        final C c \u003d candidates.next();\n        if (!c.hasSpaceForScheduling()) {\n          candidates.remove();\n        } else if (matcher.match(dispatcher.getCluster(),\n            g.getDatanode(), c.getDatanode())) {\n          return c;\n        }\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {}
    },
    "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6685. Balancer should preserve storage type of replicas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615015 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/07/14 6:05 PM",
      "commitName": "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6685. Balancer should preserve storage type of replicas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615015 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/07/14 6:05 PM",
          "commitName": "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "30/07/14 11:02 PM",
          "commitNameOld": "b8b8f3f5e7214d6fcfc30e1b94ff097e52868f4f",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.79,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-      C chooseCandidate(D dn, Iterator\u003cC\u003e candidates, Matcher matcher) {\n-    if (dn.hasSpaceForScheduling()) {\n+      C chooseCandidate(G g, Iterator\u003cC\u003e candidates, Matcher matcher) {\n+    if (g.hasSpaceForScheduling()) {\n       for(; candidates.hasNext(); ) {\n         final C c \u003d candidates.next();\n         if (!c.hasSpaceForScheduling()) {\n           candidates.remove();\n-        } else if (matcher.match(cluster, dn.getDatanode(), c.getDatanode())) {\n+        } else if (matcher.match(cluster, g.getDatanode(), c.getDatanode())) {\n           return c;\n         }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      C chooseCandidate(G g, Iterator\u003cC\u003e candidates, Matcher matcher) {\n    if (g.hasSpaceForScheduling()) {\n      for(; candidates.hasNext(); ) {\n        final C c \u003d candidates.next();\n        if (!c.hasSpaceForScheduling()) {\n          candidates.remove();\n        } else if (matcher.match(cluster, g.getDatanode(), c.getDatanode())) {\n          return c;\n        }\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {
            "oldValue": "[dn-D, candidates-Iterator\u003cC\u003e, matcher-Matcher]",
            "newValue": "[g-G, candidates-Iterator\u003cC\u003e, matcher-Matcher]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6685. Balancer should preserve storage type of replicas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615015 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/07/14 6:05 PM",
          "commitName": "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "30/07/14 11:02 PM",
          "commitNameOld": "b8b8f3f5e7214d6fcfc30e1b94ff097e52868f4f",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.79,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-      C chooseCandidate(D dn, Iterator\u003cC\u003e candidates, Matcher matcher) {\n-    if (dn.hasSpaceForScheduling()) {\n+      C chooseCandidate(G g, Iterator\u003cC\u003e candidates, Matcher matcher) {\n+    if (g.hasSpaceForScheduling()) {\n       for(; candidates.hasNext(); ) {\n         final C c \u003d candidates.next();\n         if (!c.hasSpaceForScheduling()) {\n           candidates.remove();\n-        } else if (matcher.match(cluster, dn.getDatanode(), c.getDatanode())) {\n+        } else if (matcher.match(cluster, g.getDatanode(), c.getDatanode())) {\n           return c;\n         }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      C chooseCandidate(G g, Iterator\u003cC\u003e candidates, Matcher matcher) {\n    if (g.hasSpaceForScheduling()) {\n      for(; candidates.hasNext(); ) {\n        final C c \u003d candidates.next();\n        if (!c.hasSpaceForScheduling()) {\n          candidates.remove();\n        } else if (matcher.match(cluster, g.getDatanode(), c.getDatanode())) {\n          return c;\n        }\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {}
        }
      ]
    },
    "1f4b135b1f9c6aff1dab4fe749126ec814f8387b": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-4234. Use generic code for choosing datanode in Balancer.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1417130 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/12/12 11:22 AM",
      "commitName": "1f4b135b1f9c6aff1dab4fe749126ec814f8387b",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-4234. Use generic code for choosing datanode in Balancer.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1417130 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/12/12 11:22 AM",
          "commitName": "1f4b135b1f9c6aff1dab4fe749126ec814f8387b",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/11/12 11:19 AM",
          "commitNameOld": "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 6.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,13 @@\n-  private \u003cT extends BalancerDatanode\u003e T chooseCandidateOnSameNodeGroup(\n-      BalancerDatanode dn, Iterator\u003cT\u003e candidates) {\n-    if (dn.isMoveQuotaFull()) {\n+      C chooseCandidate(D dn, Iterator\u003cC\u003e candidates, Matcher matcher) {\n+    if (dn.hasSpaceForScheduling()) {\n       for(; candidates.hasNext(); ) {\n-        final T c \u003d candidates.next();\n-        if (!c.isMoveQuotaFull()) {\n+        final C c \u003d candidates.next();\n+        if (!c.hasSpaceForScheduling()) {\n           candidates.remove();\n-          continue;\n-        }\n-        if (cluster.isOnSameNodeGroup(dn.getDatanode(), c.getDatanode())) {\n+        } else if (matcher.match(cluster, dn.getDatanode(), c.getDatanode())) {\n           return c;\n         }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      C chooseCandidate(D dn, Iterator\u003cC\u003e candidates, Matcher matcher) {\n    if (dn.hasSpaceForScheduling()) {\n      for(; candidates.hasNext(); ) {\n        final C c \u003d candidates.next();\n        if (!c.hasSpaceForScheduling()) {\n          candidates.remove();\n        } else if (matcher.match(cluster, dn.getDatanode(), c.getDatanode())) {\n          return c;\n        }\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {
            "oldValue": "chooseCandidateOnSameNodeGroup",
            "newValue": "chooseCandidate"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4234. Use generic code for choosing datanode in Balancer.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1417130 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/12/12 11:22 AM",
          "commitName": "1f4b135b1f9c6aff1dab4fe749126ec814f8387b",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/11/12 11:19 AM",
          "commitNameOld": "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 6.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,13 @@\n-  private \u003cT extends BalancerDatanode\u003e T chooseCandidateOnSameNodeGroup(\n-      BalancerDatanode dn, Iterator\u003cT\u003e candidates) {\n-    if (dn.isMoveQuotaFull()) {\n+      C chooseCandidate(D dn, Iterator\u003cC\u003e candidates, Matcher matcher) {\n+    if (dn.hasSpaceForScheduling()) {\n       for(; candidates.hasNext(); ) {\n-        final T c \u003d candidates.next();\n-        if (!c.isMoveQuotaFull()) {\n+        final C c \u003d candidates.next();\n+        if (!c.hasSpaceForScheduling()) {\n           candidates.remove();\n-          continue;\n-        }\n-        if (cluster.isOnSameNodeGroup(dn.getDatanode(), c.getDatanode())) {\n+        } else if (matcher.match(cluster, dn.getDatanode(), c.getDatanode())) {\n           return c;\n         }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      C chooseCandidate(D dn, Iterator\u003cC\u003e candidates, Matcher matcher) {\n    if (dn.hasSpaceForScheduling()) {\n      for(; candidates.hasNext(); ) {\n        final C c \u003d candidates.next();\n        if (!c.hasSpaceForScheduling()) {\n          candidates.remove();\n        } else if (matcher.match(cluster, dn.getDatanode(), c.getDatanode())) {\n          return c;\n        }\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {
            "oldValue": "[dn-BalancerDatanode, candidates-Iterator\u003cT\u003e]",
            "newValue": "[dn-D, candidates-Iterator\u003cC\u003e, matcher-Matcher]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-4234. Use generic code for choosing datanode in Balancer.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1417130 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/12/12 11:22 AM",
          "commitName": "1f4b135b1f9c6aff1dab4fe749126ec814f8387b",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/11/12 11:19 AM",
          "commitNameOld": "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 6.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,13 @@\n-  private \u003cT extends BalancerDatanode\u003e T chooseCandidateOnSameNodeGroup(\n-      BalancerDatanode dn, Iterator\u003cT\u003e candidates) {\n-    if (dn.isMoveQuotaFull()) {\n+      C chooseCandidate(D dn, Iterator\u003cC\u003e candidates, Matcher matcher) {\n+    if (dn.hasSpaceForScheduling()) {\n       for(; candidates.hasNext(); ) {\n-        final T c \u003d candidates.next();\n-        if (!c.isMoveQuotaFull()) {\n+        final C c \u003d candidates.next();\n+        if (!c.hasSpaceForScheduling()) {\n           candidates.remove();\n-          continue;\n-        }\n-        if (cluster.isOnSameNodeGroup(dn.getDatanode(), c.getDatanode())) {\n+        } else if (matcher.match(cluster, dn.getDatanode(), c.getDatanode())) {\n           return c;\n         }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      C chooseCandidate(D dn, Iterator\u003cC\u003e candidates, Matcher matcher) {\n    if (dn.hasSpaceForScheduling()) {\n      for(; candidates.hasNext(); ) {\n        final C c \u003d candidates.next();\n        if (!c.hasSpaceForScheduling()) {\n          candidates.remove();\n        } else if (matcher.match(cluster, dn.getDatanode(), c.getDatanode())) {\n          return c;\n        }\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {
            "oldValue": "T",
            "newValue": "C"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4234. Use generic code for choosing datanode in Balancer.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1417130 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/12/12 11:22 AM",
          "commitName": "1f4b135b1f9c6aff1dab4fe749126ec814f8387b",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/11/12 11:19 AM",
          "commitNameOld": "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 6.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,13 @@\n-  private \u003cT extends BalancerDatanode\u003e T chooseCandidateOnSameNodeGroup(\n-      BalancerDatanode dn, Iterator\u003cT\u003e candidates) {\n-    if (dn.isMoveQuotaFull()) {\n+      C chooseCandidate(D dn, Iterator\u003cC\u003e candidates, Matcher matcher) {\n+    if (dn.hasSpaceForScheduling()) {\n       for(; candidates.hasNext(); ) {\n-        final T c \u003d candidates.next();\n-        if (!c.isMoveQuotaFull()) {\n+        final C c \u003d candidates.next();\n+        if (!c.hasSpaceForScheduling()) {\n           candidates.remove();\n-          continue;\n-        }\n-        if (cluster.isOnSameNodeGroup(dn.getDatanode(), c.getDatanode())) {\n+        } else if (matcher.match(cluster, dn.getDatanode(), c.getDatanode())) {\n           return c;\n         }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      C chooseCandidate(D dn, Iterator\u003cC\u003e candidates, Matcher matcher) {\n    if (dn.hasSpaceForScheduling()) {\n      for(; candidates.hasNext(); ) {\n        final C c \u003d candidates.next();\n        if (!c.hasSpaceForScheduling()) {\n          candidates.remove();\n        } else if (matcher.match(cluster, dn.getDatanode(), c.getDatanode())) {\n          return c;\n        }\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {}
        }
      ]
    },
    "1634e980af422c0af2f7c9c7280a77f2fbddc9c0": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3495. Update Balancer to support new NetworkTopology with NodeGroup.  Contributed by Junping Du\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1414874 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/11/12 11:19 AM",
      "commitName": "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,16 @@\n+  private \u003cT extends BalancerDatanode\u003e T chooseCandidateOnSameNodeGroup(\n+      BalancerDatanode dn, Iterator\u003cT\u003e candidates) {\n+    if (dn.isMoveQuotaFull()) {\n+      for(; candidates.hasNext(); ) {\n+        final T c \u003d candidates.next();\n+        if (!c.isMoveQuotaFull()) {\n+          candidates.remove();\n+          continue;\n+        }\n+        if (cluster.isOnSameNodeGroup(dn.getDatanode(), c.getDatanode())) {\n+          return c;\n+        }\n+      }\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private \u003cT extends BalancerDatanode\u003e T chooseCandidateOnSameNodeGroup(\n      BalancerDatanode dn, Iterator\u003cT\u003e candidates) {\n    if (dn.isMoveQuotaFull()) {\n      for(; candidates.hasNext(); ) {\n        final T c \u003d candidates.next();\n        if (!c.isMoveQuotaFull()) {\n          candidates.remove();\n          continue;\n        }\n        if (cluster.isOnSameNodeGroup(dn.getDatanode(), c.getDatanode())) {\n          return c;\n        }\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java"
    }
  }
}