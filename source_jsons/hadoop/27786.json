{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationStateStoreFacade.java",
  "functionName": "initCache",
  "functionId": "initCache",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/utils/FederationStateStoreFacade.java",
  "functionStartLine": 177,
  "functionEndLine": 204,
  "numCommitsSeen": 11,
  "timeTaken": 740,
  "changeHistory": [
    "5c843823972d030555e25729ae7b4b8fbafb59fd"
  ],
  "changeHistoryShort": {
    "5c843823972d030555e25729ae7b4b8fbafb59fd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5c843823972d030555e25729ae7b4b8fbafb59fd": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3672. Create Facade for Federation State and Policy Store. Contributed by Subru Krishnan\n\n(cherry picked from commit 5e976cd2b90ccf1bccb6039edf14140677804c4e)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "5c843823972d030555e25729ae7b4b8fbafb59fd",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,28 @@\n+  private void initCache() {\n+    // Picking the JCache provider from classpath, need to make sure there\u0027s\n+    // no conflict or pick up a specific one in the future\n+    cacheTimeToLive \u003d\n+        conf.getInt(YarnConfiguration.FEDERATION_CACHE_TIME_TO_LIVE_SECS,\n+            YarnConfiguration.DEFAULT_FEDERATION_CACHE_TIME_TO_LIVE_SECS);\n+    if (isCachingEnabled()) {\n+      CachingProvider jcacheProvider \u003d Caching.getCachingProvider();\n+      CacheManager jcacheManager \u003d jcacheProvider.getCacheManager();\n+      this.cache \u003d jcacheManager.getCache(this.getClass().getSimpleName());\n+      if (this.cache \u003d\u003d null) {\n+        LOG.info(\"Creating a JCache Manager with name \"\n+            + this.getClass().getSimpleName());\n+        Duration cacheExpiry \u003d new Duration(TimeUnit.SECONDS, cacheTimeToLive);\n+        CompleteConfiguration\u003cObject, Object\u003e configuration \u003d\n+            new MutableConfiguration\u003cObject, Object\u003e().setStoreByValue(false)\n+                .setReadThrough(true)\n+                .setExpiryPolicyFactory(\n+                    new FactoryBuilder.SingletonFactory\u003cExpiryPolicy\u003e(\n+                        new CreatedExpiryPolicy(cacheExpiry)))\n+                .setCacheLoaderFactory(\n+                    new FactoryBuilder.SingletonFactory\u003cCacheLoader\u003cObject, Object\u003e\u003e(\n+                        new CacheLoaderImpl\u003cObject, Object\u003e()));\n+        this.cache \u003d jcacheManager.createCache(this.getClass().getSimpleName(),\n+            configuration);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initCache() {\n    // Picking the JCache provider from classpath, need to make sure there\u0027s\n    // no conflict or pick up a specific one in the future\n    cacheTimeToLive \u003d\n        conf.getInt(YarnConfiguration.FEDERATION_CACHE_TIME_TO_LIVE_SECS,\n            YarnConfiguration.DEFAULT_FEDERATION_CACHE_TIME_TO_LIVE_SECS);\n    if (isCachingEnabled()) {\n      CachingProvider jcacheProvider \u003d Caching.getCachingProvider();\n      CacheManager jcacheManager \u003d jcacheProvider.getCacheManager();\n      this.cache \u003d jcacheManager.getCache(this.getClass().getSimpleName());\n      if (this.cache \u003d\u003d null) {\n        LOG.info(\"Creating a JCache Manager with name \"\n            + this.getClass().getSimpleName());\n        Duration cacheExpiry \u003d new Duration(TimeUnit.SECONDS, cacheTimeToLive);\n        CompleteConfiguration\u003cObject, Object\u003e configuration \u003d\n            new MutableConfiguration\u003cObject, Object\u003e().setStoreByValue(false)\n                .setReadThrough(true)\n                .setExpiryPolicyFactory(\n                    new FactoryBuilder.SingletonFactory\u003cExpiryPolicy\u003e(\n                        new CreatedExpiryPolicy(cacheExpiry)))\n                .setCacheLoaderFactory(\n                    new FactoryBuilder.SingletonFactory\u003cCacheLoader\u003cObject, Object\u003e\u003e(\n                        new CacheLoaderImpl\u003cObject, Object\u003e()));\n        this.cache \u003d jcacheManager.createCache(this.getClass().getSimpleName(),\n            configuration);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/utils/FederationStateStoreFacade.java"
    }
  }
}