{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobFactory.java",
  "functionName": "getNextJobFiltered",
  "functionId": "getNextJobFiltered",
  "sourceFilePath": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/JobFactory.java",
  "functionStartLine": 183,
  "functionEndLine": 227,
  "numCommitsSeen": 10,
  "timeTaken": 4443,
  "changeHistory": [
    "dcf84707ab50662add112bd6b01c0bfd63374853",
    "7b3a98cfcd0eb729b1971b3e5607a1d7755fdb07",
    "8a2073cc61699f5692fcf638f4bae4d1c544870a",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "787dcfb8cd6e1f30a2a508b052e9d31f314b2169",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "dcf84707ab50662add112bd6b01c0bfd63374853": "Yfilerename",
    "7b3a98cfcd0eb729b1971b3e5607a1d7755fdb07": "Ybodychange",
    "8a2073cc61699f5692fcf638f4bae4d1c544870a": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "787dcfb8cd6e1f30a2a508b052e9d31f314b2169": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dcf84707ab50662add112bd6b01c0bfd63374853": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3543. Mavenize Gridmix. (tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1339629 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/05/12 8:06 AM",
      "commitName": "dcf84707ab50662add112bd6b01c0bfd63374853",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "17/05/12 7:20 AM",
      "commitNameOld": "e1f09365ca0bee093f849fcf2e546dd6e2c0a965",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected JobStory getNextJobFiltered() throws IOException {\n    JobStory job \u003d getNextJobFromTrace();\n    // filter out the following jobs\n    //    - unsuccessful jobs\n    //    - jobs with missing submit-time\n    //    - reduce only jobs\n    // These jobs are not yet supported in Gridmix\n    while (job !\u003d null \u0026\u0026\n      (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS ||\n        job.getSubmissionTime() \u003c 0 || job.getNumberMaps() \u003d\u003d 0)) {\n      if (LOG.isDebugEnabled()) {\n        List\u003cString\u003e reason \u003d new ArrayList\u003cString\u003e();\n        if (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS) {\n          reason.add(\"STATE (\" + job.getOutcome().name() + \")\");\n        }\n        if (job.getSubmissionTime() \u003c 0) {\n          reason.add(\"SUBMISSION-TIME (\" + job.getSubmissionTime() + \")\");\n        }\n        if (job.getNumberMaps() \u003d\u003d 0) {\n          reason.add(\"ZERO-MAPS-JOB\");\n        }\n        \n        // TODO This should never happen. Probably we missed something!\n        if (reason.size() \u003d\u003d 0) {\n          reason.add(\"N/A\");\n        }\n        \n        LOG.debug(\"Ignoring job \" + job.getJobID() + \" from the input trace.\"\n                  + \" Reason: \" + StringUtils.join(reason, \",\"));\n      }\n      job \u003d getNextJobFromTrace();\n    }\n    return null \u003d\u003d job ? null : new FilterJobStory(job) {\n      @Override\n      public TaskInfo getTaskInfo(TaskType taskType, int taskNumber) {\n        TaskInfo info \u003d this.job.getTaskInfo(taskType, taskNumber);\n        if (info !\u003d null) {\n          info \u003d new MinTaskInfo(info);\n        } else {\n          info \u003d new MinTaskInfo(new TaskInfo(0, 0, 0, 0, 0));\n        }\n        return info;\n      }\n    };\n  }",
      "path": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/JobFactory.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobFactory.java",
        "newPath": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/JobFactory.java"
      }
    },
    "7b3a98cfcd0eb729b1971b3e5607a1d7755fdb07": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3953. [Gridmix] Gridmix throws NPE and does not simulate a job if the trace contains null taskStatus for a task.(ravigummadi)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1303330 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/03/12 2:42 AM",
      "commitName": "7b3a98cfcd0eb729b1971b3e5607a1d7755fdb07",
      "commitAuthor": "Ravi Gummadi",
      "commitDateOld": "23/02/12 2:41 AM",
      "commitNameOld": "8a2073cc61699f5692fcf638f4bae4d1c544870a",
      "commitAuthorOld": "Amar Kamat",
      "daysBetweenCommits": 26.96,
      "commitsBetweenForRepo": 185,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,45 @@\n   protected JobStory getNextJobFiltered() throws IOException {\n     JobStory job \u003d getNextJobFromTrace();\n     // filter out the following jobs\n     //    - unsuccessful jobs\n     //    - jobs with missing submit-time\n     //    - reduce only jobs\n     // These jobs are not yet supported in Gridmix\n     while (job !\u003d null \u0026\u0026\n       (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS ||\n         job.getSubmissionTime() \u003c 0 || job.getNumberMaps() \u003d\u003d 0)) {\n       if (LOG.isDebugEnabled()) {\n         List\u003cString\u003e reason \u003d new ArrayList\u003cString\u003e();\n         if (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS) {\n           reason.add(\"STATE (\" + job.getOutcome().name() + \")\");\n         }\n         if (job.getSubmissionTime() \u003c 0) {\n           reason.add(\"SUBMISSION-TIME (\" + job.getSubmissionTime() + \")\");\n         }\n         if (job.getNumberMaps() \u003d\u003d 0) {\n           reason.add(\"ZERO-MAPS-JOB\");\n         }\n         \n         // TODO This should never happen. Probably we missed something!\n         if (reason.size() \u003d\u003d 0) {\n           reason.add(\"N/A\");\n         }\n         \n         LOG.debug(\"Ignoring job \" + job.getJobID() + \" from the input trace.\"\n                   + \" Reason: \" + StringUtils.join(reason, \",\"));\n       }\n       job \u003d getNextJobFromTrace();\n     }\n     return null \u003d\u003d job ? null : new FilterJobStory(job) {\n       @Override\n       public TaskInfo getTaskInfo(TaskType taskType, int taskNumber) {\n-        return new MinTaskInfo(this.job.getTaskInfo(taskType, taskNumber));\n+        TaskInfo info \u003d this.job.getTaskInfo(taskType, taskNumber);\n+        if (info !\u003d null) {\n+          info \u003d new MinTaskInfo(info);\n+        } else {\n+          info \u003d new MinTaskInfo(new TaskInfo(0, 0, 0, 0, 0));\n+        }\n+        return info;\n       }\n     };\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected JobStory getNextJobFiltered() throws IOException {\n    JobStory job \u003d getNextJobFromTrace();\n    // filter out the following jobs\n    //    - unsuccessful jobs\n    //    - jobs with missing submit-time\n    //    - reduce only jobs\n    // These jobs are not yet supported in Gridmix\n    while (job !\u003d null \u0026\u0026\n      (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS ||\n        job.getSubmissionTime() \u003c 0 || job.getNumberMaps() \u003d\u003d 0)) {\n      if (LOG.isDebugEnabled()) {\n        List\u003cString\u003e reason \u003d new ArrayList\u003cString\u003e();\n        if (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS) {\n          reason.add(\"STATE (\" + job.getOutcome().name() + \")\");\n        }\n        if (job.getSubmissionTime() \u003c 0) {\n          reason.add(\"SUBMISSION-TIME (\" + job.getSubmissionTime() + \")\");\n        }\n        if (job.getNumberMaps() \u003d\u003d 0) {\n          reason.add(\"ZERO-MAPS-JOB\");\n        }\n        \n        // TODO This should never happen. Probably we missed something!\n        if (reason.size() \u003d\u003d 0) {\n          reason.add(\"N/A\");\n        }\n        \n        LOG.debug(\"Ignoring job \" + job.getJobID() + \" from the input trace.\"\n                  + \" Reason: \" + StringUtils.join(reason, \",\"));\n      }\n      job \u003d getNextJobFromTrace();\n    }\n    return null \u003d\u003d job ? null : new FilterJobStory(job) {\n      @Override\n      public TaskInfo getTaskInfo(TaskType taskType, int taskNumber) {\n        TaskInfo info \u003d this.job.getTaskInfo(taskType, taskNumber);\n        if (info !\u003d null) {\n          info \u003d new MinTaskInfo(info);\n        } else {\n          info \u003d new MinTaskInfo(new TaskInfo(0, 0, 0, 0, 0));\n        }\n        return info;\n      }\n    };\n  }",
      "path": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobFactory.java",
      "extendedDetails": {}
    },
    "8a2073cc61699f5692fcf638f4bae4d1c544870a": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3787. [Gridmix] Optimize job monitoring and STRESS mode for faster job submission. (amarrk)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1292736 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/02/12 2:41 AM",
      "commitName": "8a2073cc61699f5692fcf638f4bae4d1c544870a",
      "commitAuthor": "Amar Kamat",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 182.44,
      "commitsBetweenForRepo": 1146,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,39 @@\n   protected JobStory getNextJobFiltered() throws IOException {\n     JobStory job \u003d getNextJobFromTrace();\n+    // filter out the following jobs\n+    //    - unsuccessful jobs\n+    //    - jobs with missing submit-time\n+    //    - reduce only jobs\n+    // These jobs are not yet supported in Gridmix\n     while (job !\u003d null \u0026\u0026\n       (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS ||\n-        job.getSubmissionTime() \u003c 0)) {\n+        job.getSubmissionTime() \u003c 0 || job.getNumberMaps() \u003d\u003d 0)) {\n       if (LOG.isDebugEnabled()) {\n-        String reason \u003d null;\n+        List\u003cString\u003e reason \u003d new ArrayList\u003cString\u003e();\n         if (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS) {\n-          reason \u003d \"STATE (\" + job.getOutcome().name() + \") \";\n+          reason.add(\"STATE (\" + job.getOutcome().name() + \")\");\n         }\n         if (job.getSubmissionTime() \u003c 0) {\n-          reason +\u003d \"SUBMISSION-TIME (\" + job.getSubmissionTime() + \")\";\n+          reason.add(\"SUBMISSION-TIME (\" + job.getSubmissionTime() + \")\");\n         }\n+        if (job.getNumberMaps() \u003d\u003d 0) {\n+          reason.add(\"ZERO-MAPS-JOB\");\n+        }\n+        \n+        // TODO This should never happen. Probably we missed something!\n+        if (reason.size() \u003d\u003d 0) {\n+          reason.add(\"N/A\");\n+        }\n+        \n         LOG.debug(\"Ignoring job \" + job.getJobID() + \" from the input trace.\"\n-                  + \" Reason: \" + reason \u003d\u003d null ? \"N/A\" : reason);\n+                  + \" Reason: \" + StringUtils.join(reason, \",\"));\n       }\n       job \u003d getNextJobFromTrace();\n     }\n     return null \u003d\u003d job ? null : new FilterJobStory(job) {\n       @Override\n       public TaskInfo getTaskInfo(TaskType taskType, int taskNumber) {\n         return new MinTaskInfo(this.job.getTaskInfo(taskType, taskNumber));\n       }\n     };\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected JobStory getNextJobFiltered() throws IOException {\n    JobStory job \u003d getNextJobFromTrace();\n    // filter out the following jobs\n    //    - unsuccessful jobs\n    //    - jobs with missing submit-time\n    //    - reduce only jobs\n    // These jobs are not yet supported in Gridmix\n    while (job !\u003d null \u0026\u0026\n      (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS ||\n        job.getSubmissionTime() \u003c 0 || job.getNumberMaps() \u003d\u003d 0)) {\n      if (LOG.isDebugEnabled()) {\n        List\u003cString\u003e reason \u003d new ArrayList\u003cString\u003e();\n        if (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS) {\n          reason.add(\"STATE (\" + job.getOutcome().name() + \")\");\n        }\n        if (job.getSubmissionTime() \u003c 0) {\n          reason.add(\"SUBMISSION-TIME (\" + job.getSubmissionTime() + \")\");\n        }\n        if (job.getNumberMaps() \u003d\u003d 0) {\n          reason.add(\"ZERO-MAPS-JOB\");\n        }\n        \n        // TODO This should never happen. Probably we missed something!\n        if (reason.size() \u003d\u003d 0) {\n          reason.add(\"N/A\");\n        }\n        \n        LOG.debug(\"Ignoring job \" + job.getJobID() + \" from the input trace.\"\n                  + \" Reason: \" + StringUtils.join(reason, \",\"));\n      }\n      job \u003d getNextJobFromTrace();\n    }\n    return null \u003d\u003d job ? null : new FilterJobStory(job) {\n      @Override\n      public TaskInfo getTaskInfo(TaskType taskType, int taskNumber) {\n        return new MinTaskInfo(this.job.getTaskInfo(taskType, taskNumber));\n      }\n    };\n  }",
      "path": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobFactory.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected JobStory getNextJobFiltered() throws IOException {\n    JobStory job \u003d getNextJobFromTrace();\n    while (job !\u003d null \u0026\u0026\n      (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS ||\n        job.getSubmissionTime() \u003c 0)) {\n      if (LOG.isDebugEnabled()) {\n        String reason \u003d null;\n        if (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS) {\n          reason \u003d \"STATE (\" + job.getOutcome().name() + \") \";\n        }\n        if (job.getSubmissionTime() \u003c 0) {\n          reason +\u003d \"SUBMISSION-TIME (\" + job.getSubmissionTime() + \")\";\n        }\n        LOG.debug(\"Ignoring job \" + job.getJobID() + \" from the input trace.\"\n                  + \" Reason: \" + reason \u003d\u003d null ? \"N/A\" : reason);\n      }\n      job \u003d getNextJobFromTrace();\n    }\n    return null \u003d\u003d job ? null : new FilterJobStory(job) {\n      @Override\n      public TaskInfo getTaskInfo(TaskType taskType, int taskNumber) {\n        return new MinTaskInfo(this.job.getTaskInfo(taskType, taskNumber));\n      }\n    };\n  }",
      "path": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobFactory.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobFactory.java",
        "newPath": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobFactory.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected JobStory getNextJobFiltered() throws IOException {\n    JobStory job \u003d getNextJobFromTrace();\n    while (job !\u003d null \u0026\u0026\n      (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS ||\n        job.getSubmissionTime() \u003c 0)) {\n      if (LOG.isDebugEnabled()) {\n        String reason \u003d null;\n        if (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS) {\n          reason \u003d \"STATE (\" + job.getOutcome().name() + \") \";\n        }\n        if (job.getSubmissionTime() \u003c 0) {\n          reason +\u003d \"SUBMISSION-TIME (\" + job.getSubmissionTime() + \")\";\n        }\n        LOG.debug(\"Ignoring job \" + job.getJobID() + \" from the input trace.\"\n                  + \" Reason: \" + reason \u003d\u003d null ? \"N/A\" : reason);\n      }\n      job \u003d getNextJobFromTrace();\n    }\n    return null \u003d\u003d job ? null : new FilterJobStory(job) {\n      @Override\n      public TaskInfo getTaskInfo(TaskType taskType, int taskNumber) {\n        return new MinTaskInfo(this.job.getTaskInfo(taskType, taskNumber));\n      }\n    };\n  }",
      "path": "hadoop-mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobFactory.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobFactory.java",
        "newPath": "hadoop-mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobFactory.java"
      }
    },
    "787dcfb8cd6e1f30a2a508b052e9d31f314b2169": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2596. [Gridmix] Summarize Gridmix runs. (amarrk)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1144403 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/07/11 10:53 AM",
      "commitName": "787dcfb8cd6e1f30a2a508b052e9d31f314b2169",
      "commitAuthor": "Amar Kamat",
      "commitDateOld": "14/06/11 12:44 AM",
      "commitNameOld": "3fd40ae8d0b45d7bf6186fe14851ca87eb9ee3ef",
      "commitAuthorOld": "Amar Kamat",
      "daysBetweenCommits": 24.42,
      "commitsBetweenForRepo": 75,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,25 @@\n   protected JobStory getNextJobFiltered() throws IOException {\n-    JobStory job;\n-    do {\n-      job \u003d jobProducer.getNextJob();\n-    } while (job !\u003d null \u0026\u0026\n+    JobStory job \u003d getNextJobFromTrace();\n+    while (job !\u003d null \u0026\u0026\n       (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS ||\n-        job.getSubmissionTime() \u003c 0));\n+        job.getSubmissionTime() \u003c 0)) {\n+      if (LOG.isDebugEnabled()) {\n+        String reason \u003d null;\n+        if (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS) {\n+          reason \u003d \"STATE (\" + job.getOutcome().name() + \") \";\n+        }\n+        if (job.getSubmissionTime() \u003c 0) {\n+          reason +\u003d \"SUBMISSION-TIME (\" + job.getSubmissionTime() + \")\";\n+        }\n+        LOG.debug(\"Ignoring job \" + job.getJobID() + \" from the input trace.\"\n+                  + \" Reason: \" + reason \u003d\u003d null ? \"N/A\" : reason);\n+      }\n+      job \u003d getNextJobFromTrace();\n+    }\n     return null \u003d\u003d job ? null : new FilterJobStory(job) {\n       @Override\n       public TaskInfo getTaskInfo(TaskType taskType, int taskNumber) {\n         return new MinTaskInfo(this.job.getTaskInfo(taskType, taskNumber));\n       }\n     };\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected JobStory getNextJobFiltered() throws IOException {\n    JobStory job \u003d getNextJobFromTrace();\n    while (job !\u003d null \u0026\u0026\n      (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS ||\n        job.getSubmissionTime() \u003c 0)) {\n      if (LOG.isDebugEnabled()) {\n        String reason \u003d null;\n        if (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS) {\n          reason \u003d \"STATE (\" + job.getOutcome().name() + \") \";\n        }\n        if (job.getSubmissionTime() \u003c 0) {\n          reason +\u003d \"SUBMISSION-TIME (\" + job.getSubmissionTime() + \")\";\n        }\n        LOG.debug(\"Ignoring job \" + job.getJobID() + \" from the input trace.\"\n                  + \" Reason: \" + reason \u003d\u003d null ? \"N/A\" : reason);\n      }\n      job \u003d getNextJobFromTrace();\n    }\n    return null \u003d\u003d job ? null : new FilterJobStory(job) {\n      @Override\n      public TaskInfo getTaskInfo(TaskType taskType, int taskNumber) {\n        return new MinTaskInfo(this.job.getTaskInfo(taskType, taskNumber));\n      }\n    };\n  }",
      "path": "mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobFactory.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,14 @@\n+  protected JobStory getNextJobFiltered() throws IOException {\n+    JobStory job;\n+    do {\n+      job \u003d jobProducer.getNextJob();\n+    } while (job !\u003d null \u0026\u0026\n+      (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS ||\n+        job.getSubmissionTime() \u003c 0));\n+    return null \u003d\u003d job ? null : new FilterJobStory(job) {\n+      @Override\n+      public TaskInfo getTaskInfo(TaskType taskType, int taskNumber) {\n+        return new MinTaskInfo(this.job.getTaskInfo(taskType, taskNumber));\n+      }\n+    };\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected JobStory getNextJobFiltered() throws IOException {\n    JobStory job;\n    do {\n      job \u003d jobProducer.getNextJob();\n    } while (job !\u003d null \u0026\u0026\n      (job.getOutcome() !\u003d Pre21JobHistoryConstants.Values.SUCCESS ||\n        job.getSubmissionTime() \u003c 0));\n    return null \u003d\u003d job ? null : new FilterJobStory(job) {\n      @Override\n      public TaskInfo getTaskInfo(TaskType taskType, int taskNumber) {\n        return new MinTaskInfo(this.job.getTaskInfo(taskType, taskNumber));\n      }\n    };\n  }",
      "path": "mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobFactory.java"
    }
  }
}