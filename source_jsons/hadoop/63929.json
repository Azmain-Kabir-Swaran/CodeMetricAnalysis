{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceUtils.java",
  "functionName": "createResourceWithSameValue",
  "functionId": "createResourceWithSameValue___value-long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
  "functionStartLine": 809,
  "functionEndLine": 818,
  "numCommitsSeen": 77,
  "timeTaken": 2960,
  "changeHistory": [
    "a4bd64e724cbe2ef639c984ddfe2da3baf170a96",
    "238ffff99907290fb2cf791a1ad28ff7f78952f4"
  ],
  "changeHistoryShort": {
    "a4bd64e724cbe2ef639c984ddfe2da3baf170a96": "Ymultichange(Ymovefromfile,Ybodychange)",
    "238ffff99907290fb2cf791a1ad28ff7f78952f4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a4bd64e724cbe2ef639c984ddfe2da3baf170a96": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-9116. Capacity Scheduler: implements queue level maximum-allocation inheritance. Contributed by Aihua Xu.\n",
      "commitDate": "24/01/19 1:53 AM",
      "commitName": "a4bd64e724cbe2ef639c984ddfe2da3baf170a96",
      "commitAuthor": "Weiwei Yang",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-9116. Capacity Scheduler: implements queue level maximum-allocation inheritance. Contributed by Aihua Xu.\n",
          "commitDate": "24/01/19 1:53 AM",
          "commitName": "a4bd64e724cbe2ef639c984ddfe2da3baf170a96",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "24/01/19 1:31 AM",
          "commitNameOld": "c7264459901e59021e180228cea3a6ae334a339f",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n   public static Resource createResourceWithSameValue(long value) {\n     LightWeightResource res \u003d new LightWeightResource(value,\n             Long.valueOf(value).intValue());\n-    int numberOfResources \u003d ResourceUtils.getNumberOfKnownResourceTypes();\n+    int numberOfResources \u003d getNumberOfKnownResourceTypes();\n     for (int i \u003d 2; i \u003c numberOfResources; i++) {\n       res.setResourceValue(i, value);\n     }\n \n     return res;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Resource createResourceWithSameValue(long value) {\n    LightWeightResource res \u003d new LightWeightResource(value,\n            Long.valueOf(value).intValue());\n    int numberOfResources \u003d getNumberOfKnownResourceTypes();\n    for (int i \u003d 2; i \u003c numberOfResources; i++) {\n      res.setResourceValue(i, value);\n    }\n\n    return res;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/Resources.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
            "oldMethodName": "createResourceWithSameValue",
            "newMethodName": "createResourceWithSameValue"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9116. Capacity Scheduler: implements queue level maximum-allocation inheritance. Contributed by Aihua Xu.\n",
          "commitDate": "24/01/19 1:53 AM",
          "commitName": "a4bd64e724cbe2ef639c984ddfe2da3baf170a96",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "24/01/19 1:31 AM",
          "commitNameOld": "c7264459901e59021e180228cea3a6ae334a339f",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n   public static Resource createResourceWithSameValue(long value) {\n     LightWeightResource res \u003d new LightWeightResource(value,\n             Long.valueOf(value).intValue());\n-    int numberOfResources \u003d ResourceUtils.getNumberOfKnownResourceTypes();\n+    int numberOfResources \u003d getNumberOfKnownResourceTypes();\n     for (int i \u003d 2; i \u003c numberOfResources; i++) {\n       res.setResourceValue(i, value);\n     }\n \n     return res;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Resource createResourceWithSameValue(long value) {\n    LightWeightResource res \u003d new LightWeightResource(value,\n            Long.valueOf(value).intValue());\n    int numberOfResources \u003d getNumberOfKnownResourceTypes();\n    for (int i \u003d 2; i \u003c numberOfResources; i++) {\n      res.setResourceValue(i, value);\n    }\n\n    return res;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "238ffff99907290fb2cf791a1ad28ff7f78952f4": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8524. Single parameter Resource / LightWeightResource constructor looks confusing. (Szilard Nemeth via wangda)\n\nChange-Id: I4ae97548b5b8d76a6bcebb2d3d70bf8e0be3c125\n",
      "commitDate": "16/07/18 10:58 AM",
      "commitName": "238ffff99907290fb2cf791a1ad28ff7f78952f4",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,10 @@\n+  public static Resource createResourceWithSameValue(long value) {\n+    LightWeightResource res \u003d new LightWeightResource(value,\n+            Long.valueOf(value).intValue());\n+    int numberOfResources \u003d ResourceUtils.getNumberOfKnownResourceTypes();\n+    for (int i \u003d 2; i \u003c numberOfResources; i++) {\n+      res.setResourceValue(i, value);\n+    }\n+\n+    return res;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource createResourceWithSameValue(long value) {\n    LightWeightResource res \u003d new LightWeightResource(value,\n            Long.valueOf(value).intValue());\n    int numberOfResources \u003d ResourceUtils.getNumberOfKnownResourceTypes();\n    for (int i \u003d 2; i \u003c numberOfResources; i++) {\n      res.setResourceValue(i, value);\n    }\n\n    return res;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/Resources.java"
    }
  }
}