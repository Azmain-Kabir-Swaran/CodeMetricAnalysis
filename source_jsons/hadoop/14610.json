{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSUtil.java",
  "functionName": "assertAllResultsEqual",
  "functionId": "assertAllResultsEqual___objects-Collection__?__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
  "functionStartLine": 1694,
  "functionEndLine": 1709,
  "numCommitsSeen": 154,
  "timeTaken": 3427,
  "changeHistory": [
    "56205ca7d7f3b2a7e55f48b9cf444326e1d2b1a7",
    "edb6dc5f303093c2604cd07b0c0dacf12dbce5de"
  ],
  "changeHistoryShort": {
    "56205ca7d7f3b2a7e55f48b9cf444326e1d2b1a7": "Ymultichange(Yexceptionschange,Ybodychange)",
    "edb6dc5f303093c2604cd07b0c0dacf12dbce5de": "Yintroduced"
  },
  "changeHistoryDetails": {
    "56205ca7d7f3b2a7e55f48b9cf444326e1d2b1a7": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-5840. Follow-up to HDFS-5138 to improve error handling during partial upgrade failures. Contributed by Aaron T. Myers, Suresh Srinivas, and Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1581260 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/03/14 11:48 PM",
      "commitName": "56205ca7d7f3b2a7e55f48b9cf444326e1d2b1a7",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-5840. Follow-up to HDFS-5138 to improve error handling during partial upgrade failures. Contributed by Aaron T. Myers, Suresh Srinivas, and Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1581260 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/03/14 11:48 PM",
          "commitName": "56205ca7d7f3b2a7e55f48b9cf444326e1d2b1a7",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "24/03/14 4:32 PM",
          "commitNameOld": "c2ef7e239eb0e81cf8a3e971378e9e696202de67",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.3,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,16 @@\n-  public static void assertAllResultsEqual(Collection\u003c?\u003e objects) {\n-    Object[] resultsArray \u003d objects.toArray();\n-    \n-    if (resultsArray.length \u003d\u003d 0)\n+  public static void assertAllResultsEqual(Collection\u003c?\u003e objects)\n+      throws AssertionError {\n+    if (objects.size() \u003d\u003d 0 || objects.size() \u003d\u003d 1)\n       return;\n     \n-    for (int i \u003d 0; i \u003c resultsArray.length; i++) {\n-      if (i \u003d\u003d 0)\n-        continue;\n-      else {\n-        Object currElement \u003d resultsArray[i];\n-        Object lastElement \u003d resultsArray[i - 1];\n-        if ((currElement \u003d\u003d null \u0026\u0026 currElement !\u003d lastElement) ||\n-            (currElement !\u003d null \u0026\u0026 !currElement.equals(lastElement))) {\n-          throw new AssertionError(\"Not all elements match in results: \" +\n-            Arrays.toString(resultsArray));\n-        }\n+    Object[] resultsArray \u003d objects.toArray();\n+    for (int i \u003d 1; i \u003c resultsArray.length; i++) {\n+      Object currElement \u003d resultsArray[i];\n+      Object lastElement \u003d resultsArray[i - 1];\n+      if ((currElement \u003d\u003d null \u0026\u0026 currElement !\u003d lastElement) ||\n+          (currElement !\u003d null \u0026\u0026 !currElement.equals(lastElement))) {\n+        throw new AssertionError(\"Not all elements match in results: \" +\n+          Arrays.toString(resultsArray));\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void assertAllResultsEqual(Collection\u003c?\u003e objects)\n      throws AssertionError {\n    if (objects.size() \u003d\u003d 0 || objects.size() \u003d\u003d 1)\n      return;\n    \n    Object[] resultsArray \u003d objects.toArray();\n    for (int i \u003d 1; i \u003c resultsArray.length; i++) {\n      Object currElement \u003d resultsArray[i];\n      Object lastElement \u003d resultsArray[i - 1];\n      if ((currElement \u003d\u003d null \u0026\u0026 currElement !\u003d lastElement) ||\n          (currElement !\u003d null \u0026\u0026 !currElement.equals(lastElement))) {\n        throw new AssertionError(\"Not all elements match in results: \" +\n          Arrays.toString(resultsArray));\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[AssertionError]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5840. Follow-up to HDFS-5138 to improve error handling during partial upgrade failures. Contributed by Aaron T. Myers, Suresh Srinivas, and Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1581260 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/03/14 11:48 PM",
          "commitName": "56205ca7d7f3b2a7e55f48b9cf444326e1d2b1a7",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "24/03/14 4:32 PM",
          "commitNameOld": "c2ef7e239eb0e81cf8a3e971378e9e696202de67",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.3,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,16 @@\n-  public static void assertAllResultsEqual(Collection\u003c?\u003e objects) {\n-    Object[] resultsArray \u003d objects.toArray();\n-    \n-    if (resultsArray.length \u003d\u003d 0)\n+  public static void assertAllResultsEqual(Collection\u003c?\u003e objects)\n+      throws AssertionError {\n+    if (objects.size() \u003d\u003d 0 || objects.size() \u003d\u003d 1)\n       return;\n     \n-    for (int i \u003d 0; i \u003c resultsArray.length; i++) {\n-      if (i \u003d\u003d 0)\n-        continue;\n-      else {\n-        Object currElement \u003d resultsArray[i];\n-        Object lastElement \u003d resultsArray[i - 1];\n-        if ((currElement \u003d\u003d null \u0026\u0026 currElement !\u003d lastElement) ||\n-            (currElement !\u003d null \u0026\u0026 !currElement.equals(lastElement))) {\n-          throw new AssertionError(\"Not all elements match in results: \" +\n-            Arrays.toString(resultsArray));\n-        }\n+    Object[] resultsArray \u003d objects.toArray();\n+    for (int i \u003d 1; i \u003c resultsArray.length; i++) {\n+      Object currElement \u003d resultsArray[i];\n+      Object lastElement \u003d resultsArray[i - 1];\n+      if ((currElement \u003d\u003d null \u0026\u0026 currElement !\u003d lastElement) ||\n+          (currElement !\u003d null \u0026\u0026 !currElement.equals(lastElement))) {\n+        throw new AssertionError(\"Not all elements match in results: \" +\n+          Arrays.toString(resultsArray));\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void assertAllResultsEqual(Collection\u003c?\u003e objects)\n      throws AssertionError {\n    if (objects.size() \u003d\u003d 0 || objects.size() \u003d\u003d 1)\n      return;\n    \n    Object[] resultsArray \u003d objects.toArray();\n    for (int i \u003d 1; i \u003c resultsArray.length; i++) {\n      Object currElement \u003d resultsArray[i];\n      Object lastElement \u003d resultsArray[i - 1];\n      if ((currElement \u003d\u003d null \u0026\u0026 currElement !\u003d lastElement) ||\n          (currElement !\u003d null \u0026\u0026 !currElement.equals(lastElement))) {\n        throw new AssertionError(\"Not all elements match in results: \" +\n          Arrays.toString(resultsArray));\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "edb6dc5f303093c2604cd07b0c0dacf12dbce5de": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5138. Support HDFS upgrade in HA. Contributed by Aaron T. Myers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561381 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/14 12:01 PM",
      "commitName": "edb6dc5f303093c2604cd07b0c0dacf12dbce5de",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,20 @@\n+  public static void assertAllResultsEqual(Collection\u003c?\u003e objects) {\n+    Object[] resultsArray \u003d objects.toArray();\n+    \n+    if (resultsArray.length \u003d\u003d 0)\n+      return;\n+    \n+    for (int i \u003d 0; i \u003c resultsArray.length; i++) {\n+      if (i \u003d\u003d 0)\n+        continue;\n+      else {\n+        Object currElement \u003d resultsArray[i];\n+        Object lastElement \u003d resultsArray[i - 1];\n+        if ((currElement \u003d\u003d null \u0026\u0026 currElement !\u003d lastElement) ||\n+            (currElement !\u003d null \u0026\u0026 !currElement.equals(lastElement))) {\n+          throw new AssertionError(\"Not all elements match in results: \" +\n+            Arrays.toString(resultsArray));\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void assertAllResultsEqual(Collection\u003c?\u003e objects) {\n    Object[] resultsArray \u003d objects.toArray();\n    \n    if (resultsArray.length \u003d\u003d 0)\n      return;\n    \n    for (int i \u003d 0; i \u003c resultsArray.length; i++) {\n      if (i \u003d\u003d 0)\n        continue;\n      else {\n        Object currElement \u003d resultsArray[i];\n        Object lastElement \u003d resultsArray[i - 1];\n        if ((currElement \u003d\u003d null \u0026\u0026 currElement !\u003d lastElement) ||\n            (currElement !\u003d null \u0026\u0026 !currElement.equals(lastElement))) {\n          throw new AssertionError(\"Not all elements match in results: \" +\n            Arrays.toString(resultsArray));\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java"
    }
  }
}