{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TaskPage.java",
  "functionName": "render",
  "functionId": "render___html-Block",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
  "functionStartLine": 66,
  "functionEndLine": 186,
  "numCommitsSeen": 31,
  "timeTaken": 9701,
  "changeHistory": [
    "488806baca6d84c12b24532ddeacf6d249c2136b",
    "d1e2b8098078af4af31392ed7f2fa350a7d1c3b2",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "da4ecc9f8223ac82bff8483594fb29be2f8d4d34",
    "63d40d528654707b3f56619a4eb20e21cdeadc7e",
    "311a4179cc53a2754d1185b1cb10e6adb1b95d3d",
    "022f49d59e404678d0f322bb1b67208f3c17b7ef",
    "b7dd3a4f04f712b7594c4e6e7ce50fd314f7c342",
    "857d134fda8b7bb7faa6eb3606639554de4db47a",
    "04dac636953532c9c4ab6692e193e3ffe292edb2",
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
    "13420d01f2fb28a0e445dc87ad9ee9b607804d53",
    "d04e65b797538dc16ceae6a08155798808748437",
    "c2d6407070338f26baaa7d67c968501a987dfe1a",
    "4bca22005f48f426b9bc7cf36d435ead470a2590",
    "796e1a48ac03c1496728e0f3e1860a70b90c6edd",
    "ecb30a48c4533163ff5f3fdfcf3c4e71b5b2a45f",
    "0ea8570be578be60e2f32849900a1c50506d78d3",
    "670fa24b48acb407c22fbfdde87ae3123dcbf449",
    "5f6adcf396b78934d7da2bba0d052038ff962f26",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "488806baca6d84c12b24532ddeacf6d249c2136b": "Ybodychange",
    "d1e2b8098078af4af31392ed7f2fa350a7d1c3b2": "Ybodychange",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "da4ecc9f8223ac82bff8483594fb29be2f8d4d34": "Ybodychange",
    "63d40d528654707b3f56619a4eb20e21cdeadc7e": "Ybodychange",
    "311a4179cc53a2754d1185b1cb10e6adb1b95d3d": "Ybodychange",
    "022f49d59e404678d0f322bb1b67208f3c17b7ef": "Ybodychange",
    "b7dd3a4f04f712b7594c4e6e7ce50fd314f7c342": "Ybodychange",
    "857d134fda8b7bb7faa6eb3606639554de4db47a": "Ybodychange",
    "04dac636953532c9c4ab6692e193e3ffe292edb2": "Ybodychange",
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082": "Ybodychange",
    "13420d01f2fb28a0e445dc87ad9ee9b607804d53": "Ybodychange",
    "d04e65b797538dc16ceae6a08155798808748437": "Ybodychange",
    "c2d6407070338f26baaa7d67c968501a987dfe1a": "Ybodychange",
    "4bca22005f48f426b9bc7cf36d435ead470a2590": "Ybodychange",
    "796e1a48ac03c1496728e0f3e1860a70b90c6edd": "Ybodychange",
    "ecb30a48c4533163ff5f3fdfcf3c4e71b5b2a45f": "Ybodychange",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Ybodychange",
    "670fa24b48acb407c22fbfdde87ae3123dcbf449": "Ybodychange",
    "5f6adcf396b78934d7da2bba0d052038ff962f26": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "488806baca6d84c12b24532ddeacf6d249c2136b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-7140. Refactoring TaskAttemptInfo to separate Map and Reduce tasks. Contributed by Oleksandr Shevchenko\n",
      "commitDate": "14/09/18 1:10 PM",
      "commitName": "488806baca6d84c12b24532ddeacf6d249c2136b",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "13/07/18 8:42 AM",
      "commitNameOld": "88625f5cd90766136a9ebd76a8d84b45a37e6c99",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 63.19,
      "commitsBetweenForRepo": 507,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,121 +1,121 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n \n       JobId jobId \u003d app.getJob().getID();\n       if (enableUIActions) {\n         // Kill task attempt\n \n         StringBuilder script \u003d new StringBuilder();\n         script\n             .append(\"function confirmAction(appID, jobID, taskID, attID) {\\n\")\n             .append(\"  var b \u003d confirm(\\\"Are you sure?\\\");\\n\")\n             .append(\"  if (b \u003d\u003d true) {\\n\")\n             .append(\"    var current \u003d \u0027/proxy/\u0027 + appID\")\n             .append(\"      + \u0027/mapreduce/task/\u0027 + taskID;\\n\")\n             .append(\"    var stateURL \u003d \u0027/proxy/\u0027 + appID\")\n             .append(\"      + \u0027/ws/v1/mapreduce/jobs/\u0027 + jobID\")\n             .append(\"      + \u0027/tasks/\u0027 + taskID\")\n             .append(\"      + \u0027/attempts/\u0027 + attID + \u0027/state\u0027;\\n\")\n             .append(\"    $.ajax({\\n\")\n             .append(\"      type: \u0027PUT\u0027,\\n\")\n             .append(\"      url: stateURL,\\n\")\n             .append(\"      contentType: \u0027application/json\u0027,\\n\")\n             .append(\"      data: \u0027{\\\"state\\\":\\\"KILLED\\\"}\u0027,\\n\")\n             .append(\"      dataType: \u0027json\u0027\\n\")\n             .append(\"    }).done(function(data) {\\n\")\n             .append(\"         setTimeout(function() {\\n\")\n             .append(\"           location.href \u003d current;\\n\")\n             .append(\"         }, 1000);\\n\")\n             .append(\"    }).fail(function(data) {\\n\")\n             .append(\"         console.log(data);\\n\")\n             .append(\"    });\\n\")\n             .append(\"  }\\n\")\n             .append(\"}\\n\");\n \n         html.script().$type(\"text/javascript\").__(script.toString()).__();\n       }\n \n       TR\u003cTHEAD\u003cTABLE\u003cHamlet\u003e\u003e\u003e tr \u003d html.table(\"#attempts\").thead().tr();\n       tr.th(\".id\", \"Attempt\").\n       th(\".progress\", \"Progress\").\n       th(\".state\", \"State\").\n       th(\".status\", \"Status\").\n       th(\".node\", \"Node\").\n       th(\".logs\", \"Logs\").\n       th(\".tsh\", \"Started\").\n       th(\".tsh\", \"Finished\").\n       th(\".tsh\", \"Elapsed\").\n       th(\".note\", \"Note\");\n       if (enableUIActions) {\n         tr.th(\".actions\", \"Actions\");\n       }\n \n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d tr.__().__().tbody();\n       // Write all the data into a JavaScript array of arrays for JQuery\n       // DataTables to display\n       StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n \n       for (TaskAttempt attempt : getTaskAttempts()) {\n-        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n+        TaskAttemptInfo ta \u003d new MapTaskAttemptInfo(attempt, true);\n         String progress \u003d StringUtils.format(\"%.2f\", ta.getProgress());\n \n         String nodeHttpAddr \u003d ta.getNode();\n         String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n         TaskId taskId \u003d attempt.getID().getTaskId();\n         attemptsTableData.append(\"[\\\"\")\n         .append(getAttemptId(taskId, ta)).append(\"\\\",\\\"\")\n         .append(progress).append(\"\\\",\\\"\")\n         .append(ta.getState().toString()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeEcmaScript(\n               StringEscapeUtils.escapeHtml4(ta.getStatus()))).append(\"\\\",\\\"\")\n \n         .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n             \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n                 + nodeHttpAddr + \"\u003c/a\u003e\")\n         .append(\"\\\",\\\"\")\n \n         .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n           \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n             , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n             .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n           .append(\"\\\",\\\"\")\n \n         .append(ta.getStartTime()).append(\"\\\",\\\"\")\n         .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n         .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeEcmaScript(\n             StringEscapeUtils.escapeHtml4(diag)));\n         if (enableUIActions) {\n           attemptsTableData.append(\"\\\",\\\"\");\n           if (EnumSet.of(\n                   TaskAttemptState.SUCCEEDED,\n                   TaskAttemptState.FAILED,\n                   TaskAttemptState.KILLED).contains(attempt.getState())) {\n             attemptsTableData.append(\"N/A\");\n           } else {\n             attemptsTableData\n               .append(\"\u003ca href\u003djavascript:void(0) onclick\u003dconfirmAction(\u0027\")\n               .append(jobId.getAppId()).append(\"\u0027,\u0027\")\n               .append(jobId).append(\"\u0027,\u0027\")\n               .append(attempt.getID().getTaskId()).append(\"\u0027,\u0027\")\n               .append(ta.getId())\n               .append(\"\u0027);\u003eKill\u003c/a\u003e\");\n           }\n           attemptsTableData.append(\"\\\"],\\n\");\n         }\n       }\n       //Remove the last comma and close off the array of arrays\n       if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n         attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n       }\n       attemptsTableData.append(\"]\");\n       html.script().$type(\"text/javascript\").\n           __(\"var attemptsTableData\u003d\" + attemptsTableData).__();\n \n       tbody.__().__();\n \n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n\n      JobId jobId \u003d app.getJob().getID();\n      if (enableUIActions) {\n        // Kill task attempt\n\n        StringBuilder script \u003d new StringBuilder();\n        script\n            .append(\"function confirmAction(appID, jobID, taskID, attID) {\\n\")\n            .append(\"  var b \u003d confirm(\\\"Are you sure?\\\");\\n\")\n            .append(\"  if (b \u003d\u003d true) {\\n\")\n            .append(\"    var current \u003d \u0027/proxy/\u0027 + appID\")\n            .append(\"      + \u0027/mapreduce/task/\u0027 + taskID;\\n\")\n            .append(\"    var stateURL \u003d \u0027/proxy/\u0027 + appID\")\n            .append(\"      + \u0027/ws/v1/mapreduce/jobs/\u0027 + jobID\")\n            .append(\"      + \u0027/tasks/\u0027 + taskID\")\n            .append(\"      + \u0027/attempts/\u0027 + attID + \u0027/state\u0027;\\n\")\n            .append(\"    $.ajax({\\n\")\n            .append(\"      type: \u0027PUT\u0027,\\n\")\n            .append(\"      url: stateURL,\\n\")\n            .append(\"      contentType: \u0027application/json\u0027,\\n\")\n            .append(\"      data: \u0027{\\\"state\\\":\\\"KILLED\\\"}\u0027,\\n\")\n            .append(\"      dataType: \u0027json\u0027\\n\")\n            .append(\"    }).done(function(data) {\\n\")\n            .append(\"         setTimeout(function() {\\n\")\n            .append(\"           location.href \u003d current;\\n\")\n            .append(\"         }, 1000);\\n\")\n            .append(\"    }).fail(function(data) {\\n\")\n            .append(\"         console.log(data);\\n\")\n            .append(\"    });\\n\")\n            .append(\"  }\\n\")\n            .append(\"}\\n\");\n\n        html.script().$type(\"text/javascript\").__(script.toString()).__();\n      }\n\n      TR\u003cTHEAD\u003cTABLE\u003cHamlet\u003e\u003e\u003e tr \u003d html.table(\"#attempts\").thead().tr();\n      tr.th(\".id\", \"Attempt\").\n      th(\".progress\", \"Progress\").\n      th(\".state\", \"State\").\n      th(\".status\", \"Status\").\n      th(\".node\", \"Node\").\n      th(\".logs\", \"Logs\").\n      th(\".tsh\", \"Started\").\n      th(\".tsh\", \"Finished\").\n      th(\".tsh\", \"Elapsed\").\n      th(\".note\", \"Note\");\n      if (enableUIActions) {\n        tr.th(\".actions\", \"Actions\");\n      }\n\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d tr.__().__().tbody();\n      // Write all the data into a JavaScript array of arrays for JQuery\n      // DataTables to display\n      StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n\n      for (TaskAttempt attempt : getTaskAttempts()) {\n        TaskAttemptInfo ta \u003d new MapTaskAttemptInfo(attempt, true);\n        String progress \u003d StringUtils.format(\"%.2f\", ta.getProgress());\n\n        String nodeHttpAddr \u003d ta.getNode();\n        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n        TaskId taskId \u003d attempt.getID().getTaskId();\n        attemptsTableData.append(\"[\\\"\")\n        .append(getAttemptId(taskId, ta)).append(\"\\\",\\\"\")\n        .append(progress).append(\"\\\",\\\"\")\n        .append(ta.getState().toString()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeEcmaScript(\n              StringEscapeUtils.escapeHtml4(ta.getStatus()))).append(\"\\\",\\\"\")\n\n        .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n            \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n                + nodeHttpAddr + \"\u003c/a\u003e\")\n        .append(\"\\\",\\\"\")\n\n        .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n            , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n            .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n          .append(\"\\\",\\\"\")\n\n        .append(ta.getStartTime()).append(\"\\\",\\\"\")\n        .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n        .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeEcmaScript(\n            StringEscapeUtils.escapeHtml4(diag)));\n        if (enableUIActions) {\n          attemptsTableData.append(\"\\\",\\\"\");\n          if (EnumSet.of(\n                  TaskAttemptState.SUCCEEDED,\n                  TaskAttemptState.FAILED,\n                  TaskAttemptState.KILLED).contains(attempt.getState())) {\n            attemptsTableData.append(\"N/A\");\n          } else {\n            attemptsTableData\n              .append(\"\u003ca href\u003djavascript:void(0) onclick\u003dconfirmAction(\u0027\")\n              .append(jobId.getAppId()).append(\"\u0027,\u0027\")\n              .append(jobId).append(\"\u0027,\u0027\")\n              .append(attempt.getID().getTaskId()).append(\"\u0027,\u0027\")\n              .append(ta.getId())\n              .append(\"\u0027);\u003eKill\u003c/a\u003e\");\n          }\n          attemptsTableData.append(\"\\\"],\\n\");\n        }\n      }\n      //Remove the last comma and close off the array of arrays\n      if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n        attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n      }\n      attemptsTableData.append(\"]\");\n      html.script().$type(\"text/javascript\").\n          __(\"var attemptsTableData\u003d\" + attemptsTableData).__();\n\n      tbody.__().__();\n\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "d1e2b8098078af4af31392ed7f2fa350a7d1c3b2": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-7098. Upgrade common-langs version to 3.7 in hadoop-mapreduce-project\n\nSigned-off-by: Akira Ajisaka \u003caajisaka@apache.org\u003e\n",
      "commitDate": "31/05/18 2:31 AM",
      "commitName": "d1e2b8098078af4af31392ed7f2fa350a7d1c3b2",
      "commitAuthor": "Takanobu Asanuma",
      "commitDateOld": "27/07/17 5:10 PM",
      "commitNameOld": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 307.39,
      "commitsBetweenForRepo": 2911,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,121 +1,121 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n \n       JobId jobId \u003d app.getJob().getID();\n       if (enableUIActions) {\n         // Kill task attempt\n \n         StringBuilder script \u003d new StringBuilder();\n         script\n             .append(\"function confirmAction(appID, jobID, taskID, attID) {\\n\")\n             .append(\"  var b \u003d confirm(\\\"Are you sure?\\\");\\n\")\n             .append(\"  if (b \u003d\u003d true) {\\n\")\n             .append(\"    var current \u003d \u0027/proxy/\u0027 + appID\")\n             .append(\"      + \u0027/mapreduce/task/\u0027 + taskID;\\n\")\n             .append(\"    var stateURL \u003d \u0027/proxy/\u0027 + appID\")\n             .append(\"      + \u0027/ws/v1/mapreduce/jobs/\u0027 + jobID\")\n             .append(\"      + \u0027/tasks/\u0027 + taskID\")\n             .append(\"      + \u0027/attempts/\u0027 + attID + \u0027/state\u0027;\\n\")\n             .append(\"    $.ajax({\\n\")\n             .append(\"      type: \u0027PUT\u0027,\\n\")\n             .append(\"      url: stateURL,\\n\")\n             .append(\"      contentType: \u0027application/json\u0027,\\n\")\n             .append(\"      data: \u0027{\\\"state\\\":\\\"KILLED\\\"}\u0027,\\n\")\n             .append(\"      dataType: \u0027json\u0027\\n\")\n             .append(\"    }).done(function(data) {\\n\")\n             .append(\"         setTimeout(function() {\\n\")\n             .append(\"           location.href \u003d current;\\n\")\n             .append(\"         }, 1000);\\n\")\n             .append(\"    }).fail(function(data) {\\n\")\n             .append(\"         console.log(data);\\n\")\n             .append(\"    });\\n\")\n             .append(\"  }\\n\")\n             .append(\"}\\n\");\n \n         html.script().$type(\"text/javascript\").__(script.toString()).__();\n       }\n \n       TR\u003cTHEAD\u003cTABLE\u003cHamlet\u003e\u003e\u003e tr \u003d html.table(\"#attempts\").thead().tr();\n       tr.th(\".id\", \"Attempt\").\n       th(\".progress\", \"Progress\").\n       th(\".state\", \"State\").\n       th(\".status\", \"Status\").\n       th(\".node\", \"Node\").\n       th(\".logs\", \"Logs\").\n       th(\".tsh\", \"Started\").\n       th(\".tsh\", \"Finished\").\n       th(\".tsh\", \"Elapsed\").\n       th(\".note\", \"Note\");\n       if (enableUIActions) {\n         tr.th(\".actions\", \"Actions\");\n       }\n \n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d tr.__().__().tbody();\n       // Write all the data into a JavaScript array of arrays for JQuery\n       // DataTables to display\n       StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n \n       for (TaskAttempt attempt : getTaskAttempts()) {\n         TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n         String progress \u003d StringUtils.format(\"%.2f\", ta.getProgress());\n \n         String nodeHttpAddr \u003d ta.getNode();\n         String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n         TaskId taskId \u003d attempt.getID().getTaskId();\n         attemptsTableData.append(\"[\\\"\")\n         .append(getAttemptId(taskId, ta)).append(\"\\\",\\\"\")\n         .append(progress).append(\"\\\",\\\"\")\n         .append(ta.getState().toString()).append(\"\\\",\\\"\")\n-        .append(StringEscapeUtils.escapeJavaScript(\n-              StringEscapeUtils.escapeHtml(ta.getStatus()))).append(\"\\\",\\\"\")\n+        .append(StringEscapeUtils.escapeEcmaScript(\n+              StringEscapeUtils.escapeHtml4(ta.getStatus()))).append(\"\\\",\\\"\")\n \n         .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n             \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n                 + nodeHttpAddr + \"\u003c/a\u003e\")\n         .append(\"\\\",\\\"\")\n \n         .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n           \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n             , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n             .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n           .append(\"\\\",\\\"\")\n \n         .append(ta.getStartTime()).append(\"\\\",\\\"\")\n         .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n         .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n-        .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n-          diag)));\n+        .append(StringEscapeUtils.escapeEcmaScript(\n+            StringEscapeUtils.escapeHtml4(diag)));\n         if (enableUIActions) {\n           attemptsTableData.append(\"\\\",\\\"\");\n           if (EnumSet.of(\n                   TaskAttemptState.SUCCEEDED,\n                   TaskAttemptState.FAILED,\n                   TaskAttemptState.KILLED).contains(attempt.getState())) {\n             attemptsTableData.append(\"N/A\");\n           } else {\n             attemptsTableData\n               .append(\"\u003ca href\u003djavascript:void(0) onclick\u003dconfirmAction(\u0027\")\n               .append(jobId.getAppId()).append(\"\u0027,\u0027\")\n               .append(jobId).append(\"\u0027,\u0027\")\n               .append(attempt.getID().getTaskId()).append(\"\u0027,\u0027\")\n               .append(ta.getId())\n               .append(\"\u0027);\u003eKill\u003c/a\u003e\");\n           }\n           attemptsTableData.append(\"\\\"],\\n\");\n         }\n       }\n       //Remove the last comma and close off the array of arrays\n       if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n         attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n       }\n       attemptsTableData.append(\"]\");\n       html.script().$type(\"text/javascript\").\n           __(\"var attemptsTableData\u003d\" + attemptsTableData).__();\n \n       tbody.__().__();\n \n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n\n      JobId jobId \u003d app.getJob().getID();\n      if (enableUIActions) {\n        // Kill task attempt\n\n        StringBuilder script \u003d new StringBuilder();\n        script\n            .append(\"function confirmAction(appID, jobID, taskID, attID) {\\n\")\n            .append(\"  var b \u003d confirm(\\\"Are you sure?\\\");\\n\")\n            .append(\"  if (b \u003d\u003d true) {\\n\")\n            .append(\"    var current \u003d \u0027/proxy/\u0027 + appID\")\n            .append(\"      + \u0027/mapreduce/task/\u0027 + taskID;\\n\")\n            .append(\"    var stateURL \u003d \u0027/proxy/\u0027 + appID\")\n            .append(\"      + \u0027/ws/v1/mapreduce/jobs/\u0027 + jobID\")\n            .append(\"      + \u0027/tasks/\u0027 + taskID\")\n            .append(\"      + \u0027/attempts/\u0027 + attID + \u0027/state\u0027;\\n\")\n            .append(\"    $.ajax({\\n\")\n            .append(\"      type: \u0027PUT\u0027,\\n\")\n            .append(\"      url: stateURL,\\n\")\n            .append(\"      contentType: \u0027application/json\u0027,\\n\")\n            .append(\"      data: \u0027{\\\"state\\\":\\\"KILLED\\\"}\u0027,\\n\")\n            .append(\"      dataType: \u0027json\u0027\\n\")\n            .append(\"    }).done(function(data) {\\n\")\n            .append(\"         setTimeout(function() {\\n\")\n            .append(\"           location.href \u003d current;\\n\")\n            .append(\"         }, 1000);\\n\")\n            .append(\"    }).fail(function(data) {\\n\")\n            .append(\"         console.log(data);\\n\")\n            .append(\"    });\\n\")\n            .append(\"  }\\n\")\n            .append(\"}\\n\");\n\n        html.script().$type(\"text/javascript\").__(script.toString()).__();\n      }\n\n      TR\u003cTHEAD\u003cTABLE\u003cHamlet\u003e\u003e\u003e tr \u003d html.table(\"#attempts\").thead().tr();\n      tr.th(\".id\", \"Attempt\").\n      th(\".progress\", \"Progress\").\n      th(\".state\", \"State\").\n      th(\".status\", \"Status\").\n      th(\".node\", \"Node\").\n      th(\".logs\", \"Logs\").\n      th(\".tsh\", \"Started\").\n      th(\".tsh\", \"Finished\").\n      th(\".tsh\", \"Elapsed\").\n      th(\".note\", \"Note\");\n      if (enableUIActions) {\n        tr.th(\".actions\", \"Actions\");\n      }\n\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d tr.__().__().tbody();\n      // Write all the data into a JavaScript array of arrays for JQuery\n      // DataTables to display\n      StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n\n      for (TaskAttempt attempt : getTaskAttempts()) {\n        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n        String progress \u003d StringUtils.format(\"%.2f\", ta.getProgress());\n\n        String nodeHttpAddr \u003d ta.getNode();\n        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n        TaskId taskId \u003d attempt.getID().getTaskId();\n        attemptsTableData.append(\"[\\\"\")\n        .append(getAttemptId(taskId, ta)).append(\"\\\",\\\"\")\n        .append(progress).append(\"\\\",\\\"\")\n        .append(ta.getState().toString()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeEcmaScript(\n              StringEscapeUtils.escapeHtml4(ta.getStatus()))).append(\"\\\",\\\"\")\n\n        .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n            \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n                + nodeHttpAddr + \"\u003c/a\u003e\")\n        .append(\"\\\",\\\"\")\n\n        .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n            , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n            .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n          .append(\"\\\",\\\"\")\n\n        .append(ta.getStartTime()).append(\"\\\",\\\"\")\n        .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n        .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeEcmaScript(\n            StringEscapeUtils.escapeHtml4(diag)));\n        if (enableUIActions) {\n          attemptsTableData.append(\"\\\",\\\"\");\n          if (EnumSet.of(\n                  TaskAttemptState.SUCCEEDED,\n                  TaskAttemptState.FAILED,\n                  TaskAttemptState.KILLED).contains(attempt.getState())) {\n            attemptsTableData.append(\"N/A\");\n          } else {\n            attemptsTableData\n              .append(\"\u003ca href\u003djavascript:void(0) onclick\u003dconfirmAction(\u0027\")\n              .append(jobId.getAppId()).append(\"\u0027,\u0027\")\n              .append(jobId).append(\"\u0027,\u0027\")\n              .append(attempt.getID().getTaskId()).append(\"\u0027,\u0027\")\n              .append(ta.getId())\n              .append(\"\u0027);\u003eKill\u003c/a\u003e\");\n          }\n          attemptsTableData.append(\"\\\"],\\n\");\n        }\n      }\n      //Remove the last comma and close off the array of arrays\n      if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n        attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n      }\n      attemptsTableData.append(\"]\");\n      html.script().$type(\"text/javascript\").\n          __(\"var attemptsTableData\u003d\" + attemptsTableData).__();\n\n      tbody.__().__();\n\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "06/12/16 1:41 PM",
      "commitNameOld": "da4ecc9f8223ac82bff8483594fb29be2f8d4d34",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 233.1,
      "commitsBetweenForRepo": 1201,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,121 +1,121 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n \n       JobId jobId \u003d app.getJob().getID();\n       if (enableUIActions) {\n         // Kill task attempt\n \n         StringBuilder script \u003d new StringBuilder();\n         script\n             .append(\"function confirmAction(appID, jobID, taskID, attID) {\\n\")\n             .append(\"  var b \u003d confirm(\\\"Are you sure?\\\");\\n\")\n             .append(\"  if (b \u003d\u003d true) {\\n\")\n             .append(\"    var current \u003d \u0027/proxy/\u0027 + appID\")\n             .append(\"      + \u0027/mapreduce/task/\u0027 + taskID;\\n\")\n             .append(\"    var stateURL \u003d \u0027/proxy/\u0027 + appID\")\n             .append(\"      + \u0027/ws/v1/mapreduce/jobs/\u0027 + jobID\")\n             .append(\"      + \u0027/tasks/\u0027 + taskID\")\n             .append(\"      + \u0027/attempts/\u0027 + attID + \u0027/state\u0027;\\n\")\n             .append(\"    $.ajax({\\n\")\n             .append(\"      type: \u0027PUT\u0027,\\n\")\n             .append(\"      url: stateURL,\\n\")\n             .append(\"      contentType: \u0027application/json\u0027,\\n\")\n             .append(\"      data: \u0027{\\\"state\\\":\\\"KILLED\\\"}\u0027,\\n\")\n             .append(\"      dataType: \u0027json\u0027\\n\")\n             .append(\"    }).done(function(data) {\\n\")\n             .append(\"         setTimeout(function() {\\n\")\n             .append(\"           location.href \u003d current;\\n\")\n             .append(\"         }, 1000);\\n\")\n             .append(\"    }).fail(function(data) {\\n\")\n             .append(\"         console.log(data);\\n\")\n             .append(\"    });\\n\")\n             .append(\"  }\\n\")\n             .append(\"}\\n\");\n \n-        html.script().$type(\"text/javascript\")._(script.toString())._();\n+        html.script().$type(\"text/javascript\").__(script.toString()).__();\n       }\n \n       TR\u003cTHEAD\u003cTABLE\u003cHamlet\u003e\u003e\u003e tr \u003d html.table(\"#attempts\").thead().tr();\n       tr.th(\".id\", \"Attempt\").\n       th(\".progress\", \"Progress\").\n       th(\".state\", \"State\").\n       th(\".status\", \"Status\").\n       th(\".node\", \"Node\").\n       th(\".logs\", \"Logs\").\n       th(\".tsh\", \"Started\").\n       th(\".tsh\", \"Finished\").\n       th(\".tsh\", \"Elapsed\").\n       th(\".note\", \"Note\");\n       if (enableUIActions) {\n         tr.th(\".actions\", \"Actions\");\n       }\n \n-      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d tr._()._().tbody();\n+      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d tr.__().__().tbody();\n       // Write all the data into a JavaScript array of arrays for JQuery\n       // DataTables to display\n       StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n \n       for (TaskAttempt attempt : getTaskAttempts()) {\n         TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n         String progress \u003d StringUtils.format(\"%.2f\", ta.getProgress());\n \n         String nodeHttpAddr \u003d ta.getNode();\n         String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n         TaskId taskId \u003d attempt.getID().getTaskId();\n         attemptsTableData.append(\"[\\\"\")\n         .append(getAttemptId(taskId, ta)).append(\"\\\",\\\"\")\n         .append(progress).append(\"\\\",\\\"\")\n         .append(ta.getState().toString()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeJavaScript(\n               StringEscapeUtils.escapeHtml(ta.getStatus()))).append(\"\\\",\\\"\")\n \n         .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n             \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n                 + nodeHttpAddr + \"\u003c/a\u003e\")\n         .append(\"\\\",\\\"\")\n \n         .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n           \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n             , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n             .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n           .append(\"\\\",\\\"\")\n \n         .append(ta.getStartTime()).append(\"\\\",\\\"\")\n         .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n         .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n           diag)));\n         if (enableUIActions) {\n           attemptsTableData.append(\"\\\",\\\"\");\n           if (EnumSet.of(\n                   TaskAttemptState.SUCCEEDED,\n                   TaskAttemptState.FAILED,\n                   TaskAttemptState.KILLED).contains(attempt.getState())) {\n             attemptsTableData.append(\"N/A\");\n           } else {\n             attemptsTableData\n               .append(\"\u003ca href\u003djavascript:void(0) onclick\u003dconfirmAction(\u0027\")\n               .append(jobId.getAppId()).append(\"\u0027,\u0027\")\n               .append(jobId).append(\"\u0027,\u0027\")\n               .append(attempt.getID().getTaskId()).append(\"\u0027,\u0027\")\n               .append(ta.getId())\n               .append(\"\u0027);\u003eKill\u003c/a\u003e\");\n           }\n           attemptsTableData.append(\"\\\"],\\n\");\n         }\n       }\n       //Remove the last comma and close off the array of arrays\n       if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n         attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n       }\n       attemptsTableData.append(\"]\");\n       html.script().$type(\"text/javascript\").\n-      _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n+          __(\"var attemptsTableData\u003d\" + attemptsTableData).__();\n \n-      tbody._()._();\n+      tbody.__().__();\n \n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n\n      JobId jobId \u003d app.getJob().getID();\n      if (enableUIActions) {\n        // Kill task attempt\n\n        StringBuilder script \u003d new StringBuilder();\n        script\n            .append(\"function confirmAction(appID, jobID, taskID, attID) {\\n\")\n            .append(\"  var b \u003d confirm(\\\"Are you sure?\\\");\\n\")\n            .append(\"  if (b \u003d\u003d true) {\\n\")\n            .append(\"    var current \u003d \u0027/proxy/\u0027 + appID\")\n            .append(\"      + \u0027/mapreduce/task/\u0027 + taskID;\\n\")\n            .append(\"    var stateURL \u003d \u0027/proxy/\u0027 + appID\")\n            .append(\"      + \u0027/ws/v1/mapreduce/jobs/\u0027 + jobID\")\n            .append(\"      + \u0027/tasks/\u0027 + taskID\")\n            .append(\"      + \u0027/attempts/\u0027 + attID + \u0027/state\u0027;\\n\")\n            .append(\"    $.ajax({\\n\")\n            .append(\"      type: \u0027PUT\u0027,\\n\")\n            .append(\"      url: stateURL,\\n\")\n            .append(\"      contentType: \u0027application/json\u0027,\\n\")\n            .append(\"      data: \u0027{\\\"state\\\":\\\"KILLED\\\"}\u0027,\\n\")\n            .append(\"      dataType: \u0027json\u0027\\n\")\n            .append(\"    }).done(function(data) {\\n\")\n            .append(\"         setTimeout(function() {\\n\")\n            .append(\"           location.href \u003d current;\\n\")\n            .append(\"         }, 1000);\\n\")\n            .append(\"    }).fail(function(data) {\\n\")\n            .append(\"         console.log(data);\\n\")\n            .append(\"    });\\n\")\n            .append(\"  }\\n\")\n            .append(\"}\\n\");\n\n        html.script().$type(\"text/javascript\").__(script.toString()).__();\n      }\n\n      TR\u003cTHEAD\u003cTABLE\u003cHamlet\u003e\u003e\u003e tr \u003d html.table(\"#attempts\").thead().tr();\n      tr.th(\".id\", \"Attempt\").\n      th(\".progress\", \"Progress\").\n      th(\".state\", \"State\").\n      th(\".status\", \"Status\").\n      th(\".node\", \"Node\").\n      th(\".logs\", \"Logs\").\n      th(\".tsh\", \"Started\").\n      th(\".tsh\", \"Finished\").\n      th(\".tsh\", \"Elapsed\").\n      th(\".note\", \"Note\");\n      if (enableUIActions) {\n        tr.th(\".actions\", \"Actions\");\n      }\n\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d tr.__().__().tbody();\n      // Write all the data into a JavaScript array of arrays for JQuery\n      // DataTables to display\n      StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n\n      for (TaskAttempt attempt : getTaskAttempts()) {\n        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n        String progress \u003d StringUtils.format(\"%.2f\", ta.getProgress());\n\n        String nodeHttpAddr \u003d ta.getNode();\n        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n        TaskId taskId \u003d attempt.getID().getTaskId();\n        attemptsTableData.append(\"[\\\"\")\n        .append(getAttemptId(taskId, ta)).append(\"\\\",\\\"\")\n        .append(progress).append(\"\\\",\\\"\")\n        .append(ta.getState().toString()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(\n              StringEscapeUtils.escapeHtml(ta.getStatus()))).append(\"\\\",\\\"\")\n\n        .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n            \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n                + nodeHttpAddr + \"\u003c/a\u003e\")\n        .append(\"\\\",\\\"\")\n\n        .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n            , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n            .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n          .append(\"\\\",\\\"\")\n\n        .append(ta.getStartTime()).append(\"\\\",\\\"\")\n        .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n        .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n          diag)));\n        if (enableUIActions) {\n          attemptsTableData.append(\"\\\",\\\"\");\n          if (EnumSet.of(\n                  TaskAttemptState.SUCCEEDED,\n                  TaskAttemptState.FAILED,\n                  TaskAttemptState.KILLED).contains(attempt.getState())) {\n            attemptsTableData.append(\"N/A\");\n          } else {\n            attemptsTableData\n              .append(\"\u003ca href\u003djavascript:void(0) onclick\u003dconfirmAction(\u0027\")\n              .append(jobId.getAppId()).append(\"\u0027,\u0027\")\n              .append(jobId).append(\"\u0027,\u0027\")\n              .append(attempt.getID().getTaskId()).append(\"\u0027,\u0027\")\n              .append(ta.getId())\n              .append(\"\u0027);\u003eKill\u003c/a\u003e\");\n          }\n          attemptsTableData.append(\"\\\"],\\n\");\n        }\n      }\n      //Remove the last comma and close off the array of arrays\n      if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n        attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n      }\n      attemptsTableData.append(\"]\");\n      html.script().$type(\"text/javascript\").\n          __(\"var attemptsTableData\u003d\" + attemptsTableData).__();\n\n      tbody.__().__();\n\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "da4ecc9f8223ac82bff8483594fb29be2f8d4d34": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6816. Progress bars in Web UI always at 100%. Contributed by Shen Yinjie.\n",
      "commitDate": "06/12/16 1:41 PM",
      "commitName": "da4ecc9f8223ac82bff8483594fb29be2f8d4d34",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "03/12/15 12:48 PM",
      "commitNameOld": "9f77ccad735f4843ce2c38355de9f434838d4507",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 369.04,
      "commitsBetweenForRepo": 2591,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,121 +1,121 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n \n       JobId jobId \u003d app.getJob().getID();\n       if (enableUIActions) {\n         // Kill task attempt\n \n         StringBuilder script \u003d new StringBuilder();\n         script\n             .append(\"function confirmAction(appID, jobID, taskID, attID) {\\n\")\n             .append(\"  var b \u003d confirm(\\\"Are you sure?\\\");\\n\")\n             .append(\"  if (b \u003d\u003d true) {\\n\")\n             .append(\"    var current \u003d \u0027/proxy/\u0027 + appID\")\n             .append(\"      + \u0027/mapreduce/task/\u0027 + taskID;\\n\")\n             .append(\"    var stateURL \u003d \u0027/proxy/\u0027 + appID\")\n             .append(\"      + \u0027/ws/v1/mapreduce/jobs/\u0027 + jobID\")\n             .append(\"      + \u0027/tasks/\u0027 + taskID\")\n             .append(\"      + \u0027/attempts/\u0027 + attID + \u0027/state\u0027;\\n\")\n             .append(\"    $.ajax({\\n\")\n             .append(\"      type: \u0027PUT\u0027,\\n\")\n             .append(\"      url: stateURL,\\n\")\n             .append(\"      contentType: \u0027application/json\u0027,\\n\")\n             .append(\"      data: \u0027{\\\"state\\\":\\\"KILLED\\\"}\u0027,\\n\")\n             .append(\"      dataType: \u0027json\u0027\\n\")\n             .append(\"    }).done(function(data) {\\n\")\n             .append(\"         setTimeout(function() {\\n\")\n             .append(\"           location.href \u003d current;\\n\")\n             .append(\"         }, 1000);\\n\")\n             .append(\"    }).fail(function(data) {\\n\")\n             .append(\"         console.log(data);\\n\")\n             .append(\"    });\\n\")\n             .append(\"  }\\n\")\n             .append(\"}\\n\");\n \n         html.script().$type(\"text/javascript\")._(script.toString())._();\n       }\n \n       TR\u003cTHEAD\u003cTABLE\u003cHamlet\u003e\u003e\u003e tr \u003d html.table(\"#attempts\").thead().tr();\n       tr.th(\".id\", \"Attempt\").\n       th(\".progress\", \"Progress\").\n       th(\".state\", \"State\").\n       th(\".status\", \"Status\").\n       th(\".node\", \"Node\").\n       th(\".logs\", \"Logs\").\n       th(\".tsh\", \"Started\").\n       th(\".tsh\", \"Finished\").\n       th(\".tsh\", \"Elapsed\").\n       th(\".note\", \"Note\");\n       if (enableUIActions) {\n         tr.th(\".actions\", \"Actions\");\n       }\n \n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d tr._()._().tbody();\n       // Write all the data into a JavaScript array of arrays for JQuery\n       // DataTables to display\n       StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n \n       for (TaskAttempt attempt : getTaskAttempts()) {\n         TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n-        String progress \u003d StringUtils.formatPercent(ta.getProgress() / 100, 2);\n+        String progress \u003d StringUtils.format(\"%.2f\", ta.getProgress());\n \n         String nodeHttpAddr \u003d ta.getNode();\n         String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n         TaskId taskId \u003d attempt.getID().getTaskId();\n         attemptsTableData.append(\"[\\\"\")\n         .append(getAttemptId(taskId, ta)).append(\"\\\",\\\"\")\n         .append(progress).append(\"\\\",\\\"\")\n         .append(ta.getState().toString()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeJavaScript(\n               StringEscapeUtils.escapeHtml(ta.getStatus()))).append(\"\\\",\\\"\")\n \n         .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n             \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n                 + nodeHttpAddr + \"\u003c/a\u003e\")\n         .append(\"\\\",\\\"\")\n \n         .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n           \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n             , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n             .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n           .append(\"\\\",\\\"\")\n \n         .append(ta.getStartTime()).append(\"\\\",\\\"\")\n         .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n         .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n           diag)));\n         if (enableUIActions) {\n           attemptsTableData.append(\"\\\",\\\"\");\n           if (EnumSet.of(\n                   TaskAttemptState.SUCCEEDED,\n                   TaskAttemptState.FAILED,\n                   TaskAttemptState.KILLED).contains(attempt.getState())) {\n             attemptsTableData.append(\"N/A\");\n           } else {\n             attemptsTableData\n               .append(\"\u003ca href\u003djavascript:void(0) onclick\u003dconfirmAction(\u0027\")\n               .append(jobId.getAppId()).append(\"\u0027,\u0027\")\n               .append(jobId).append(\"\u0027,\u0027\")\n               .append(attempt.getID().getTaskId()).append(\"\u0027,\u0027\")\n               .append(ta.getId())\n               .append(\"\u0027);\u003eKill\u003c/a\u003e\");\n           }\n           attemptsTableData.append(\"\\\"],\\n\");\n         }\n       }\n       //Remove the last comma and close off the array of arrays\n       if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n         attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n       }\n       attemptsTableData.append(\"]\");\n       html.script().$type(\"text/javascript\").\n       _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n \n       tbody._()._();\n \n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n\n      JobId jobId \u003d app.getJob().getID();\n      if (enableUIActions) {\n        // Kill task attempt\n\n        StringBuilder script \u003d new StringBuilder();\n        script\n            .append(\"function confirmAction(appID, jobID, taskID, attID) {\\n\")\n            .append(\"  var b \u003d confirm(\\\"Are you sure?\\\");\\n\")\n            .append(\"  if (b \u003d\u003d true) {\\n\")\n            .append(\"    var current \u003d \u0027/proxy/\u0027 + appID\")\n            .append(\"      + \u0027/mapreduce/task/\u0027 + taskID;\\n\")\n            .append(\"    var stateURL \u003d \u0027/proxy/\u0027 + appID\")\n            .append(\"      + \u0027/ws/v1/mapreduce/jobs/\u0027 + jobID\")\n            .append(\"      + \u0027/tasks/\u0027 + taskID\")\n            .append(\"      + \u0027/attempts/\u0027 + attID + \u0027/state\u0027;\\n\")\n            .append(\"    $.ajax({\\n\")\n            .append(\"      type: \u0027PUT\u0027,\\n\")\n            .append(\"      url: stateURL,\\n\")\n            .append(\"      contentType: \u0027application/json\u0027,\\n\")\n            .append(\"      data: \u0027{\\\"state\\\":\\\"KILLED\\\"}\u0027,\\n\")\n            .append(\"      dataType: \u0027json\u0027\\n\")\n            .append(\"    }).done(function(data) {\\n\")\n            .append(\"         setTimeout(function() {\\n\")\n            .append(\"           location.href \u003d current;\\n\")\n            .append(\"         }, 1000);\\n\")\n            .append(\"    }).fail(function(data) {\\n\")\n            .append(\"         console.log(data);\\n\")\n            .append(\"    });\\n\")\n            .append(\"  }\\n\")\n            .append(\"}\\n\");\n\n        html.script().$type(\"text/javascript\")._(script.toString())._();\n      }\n\n      TR\u003cTHEAD\u003cTABLE\u003cHamlet\u003e\u003e\u003e tr \u003d html.table(\"#attempts\").thead().tr();\n      tr.th(\".id\", \"Attempt\").\n      th(\".progress\", \"Progress\").\n      th(\".state\", \"State\").\n      th(\".status\", \"Status\").\n      th(\".node\", \"Node\").\n      th(\".logs\", \"Logs\").\n      th(\".tsh\", \"Started\").\n      th(\".tsh\", \"Finished\").\n      th(\".tsh\", \"Elapsed\").\n      th(\".note\", \"Note\");\n      if (enableUIActions) {\n        tr.th(\".actions\", \"Actions\");\n      }\n\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d tr._()._().tbody();\n      // Write all the data into a JavaScript array of arrays for JQuery\n      // DataTables to display\n      StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n\n      for (TaskAttempt attempt : getTaskAttempts()) {\n        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n        String progress \u003d StringUtils.format(\"%.2f\", ta.getProgress());\n\n        String nodeHttpAddr \u003d ta.getNode();\n        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n        TaskId taskId \u003d attempt.getID().getTaskId();\n        attemptsTableData.append(\"[\\\"\")\n        .append(getAttemptId(taskId, ta)).append(\"\\\",\\\"\")\n        .append(progress).append(\"\\\",\\\"\")\n        .append(ta.getState().toString()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(\n              StringEscapeUtils.escapeHtml(ta.getStatus()))).append(\"\\\",\\\"\")\n\n        .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n            \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n                + nodeHttpAddr + \"\u003c/a\u003e\")\n        .append(\"\\\",\\\"\")\n\n        .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n            , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n            .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n          .append(\"\\\",\\\"\")\n\n        .append(ta.getStartTime()).append(\"\\\",\\\"\")\n        .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n        .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n          diag)));\n        if (enableUIActions) {\n          attemptsTableData.append(\"\\\",\\\"\");\n          if (EnumSet.of(\n                  TaskAttemptState.SUCCEEDED,\n                  TaskAttemptState.FAILED,\n                  TaskAttemptState.KILLED).contains(attempt.getState())) {\n            attemptsTableData.append(\"N/A\");\n          } else {\n            attemptsTableData\n              .append(\"\u003ca href\u003djavascript:void(0) onclick\u003dconfirmAction(\u0027\")\n              .append(jobId.getAppId()).append(\"\u0027,\u0027\")\n              .append(jobId).append(\"\u0027,\u0027\")\n              .append(attempt.getID().getTaskId()).append(\"\u0027,\u0027\")\n              .append(ta.getId())\n              .append(\"\u0027);\u003eKill\u003c/a\u003e\");\n          }\n          attemptsTableData.append(\"\\\"],\\n\");\n        }\n      }\n      //Remove the last comma and close off the array of arrays\n      if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n        attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n      }\n      attemptsTableData.append(\"]\");\n      html.script().$type(\"text/javascript\").\n      _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n\n      tbody._()._();\n\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "63d40d528654707b3f56619a4eb20e21cdeadc7e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6316. Task Attempt List entries should link to the task overview. (Siqi Li via gera)\n",
      "commitDate": "20/06/15 11:38 AM",
      "commitName": "63d40d528654707b3f56619a4eb20e21cdeadc7e",
      "commitAuthor": "Gera Shegalov",
      "commitDateOld": "19/06/15 10:05 PM",
      "commitNameOld": "311a4179cc53a2754d1185b1cb10e6adb1b95d3d",
      "commitAuthorOld": "Devaraj K",
      "daysBetweenCommits": 0.56,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,120 +1,121 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n \n       JobId jobId \u003d app.getJob().getID();\n       if (enableUIActions) {\n         // Kill task attempt\n \n         StringBuilder script \u003d new StringBuilder();\n         script\n             .append(\"function confirmAction(appID, jobID, taskID, attID) {\\n\")\n             .append(\"  var b \u003d confirm(\\\"Are you sure?\\\");\\n\")\n             .append(\"  if (b \u003d\u003d true) {\\n\")\n             .append(\"    var current \u003d \u0027/proxy/\u0027 + appID\")\n             .append(\"      + \u0027/mapreduce/task/\u0027 + taskID;\\n\")\n             .append(\"    var stateURL \u003d \u0027/proxy/\u0027 + appID\")\n             .append(\"      + \u0027/ws/v1/mapreduce/jobs/\u0027 + jobID\")\n             .append(\"      + \u0027/tasks/\u0027 + taskID\")\n             .append(\"      + \u0027/attempts/\u0027 + attID + \u0027/state\u0027;\\n\")\n             .append(\"    $.ajax({\\n\")\n             .append(\"      type: \u0027PUT\u0027,\\n\")\n             .append(\"      url: stateURL,\\n\")\n             .append(\"      contentType: \u0027application/json\u0027,\\n\")\n             .append(\"      data: \u0027{\\\"state\\\":\\\"KILLED\\\"}\u0027,\\n\")\n             .append(\"      dataType: \u0027json\u0027\\n\")\n             .append(\"    }).done(function(data) {\\n\")\n             .append(\"         setTimeout(function() {\\n\")\n             .append(\"           location.href \u003d current;\\n\")\n             .append(\"         }, 1000);\\n\")\n             .append(\"    }).fail(function(data) {\\n\")\n             .append(\"         console.log(data);\\n\")\n             .append(\"    });\\n\")\n             .append(\"  }\\n\")\n             .append(\"}\\n\");\n \n         html.script().$type(\"text/javascript\")._(script.toString())._();\n       }\n \n       TR\u003cTHEAD\u003cTABLE\u003cHamlet\u003e\u003e\u003e tr \u003d html.table(\"#attempts\").thead().tr();\n       tr.th(\".id\", \"Attempt\").\n       th(\".progress\", \"Progress\").\n       th(\".state\", \"State\").\n       th(\".status\", \"Status\").\n       th(\".node\", \"Node\").\n       th(\".logs\", \"Logs\").\n       th(\".tsh\", \"Started\").\n       th(\".tsh\", \"Finished\").\n       th(\".tsh\", \"Elapsed\").\n       th(\".note\", \"Note\");\n       if (enableUIActions) {\n         tr.th(\".actions\", \"Actions\");\n       }\n \n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d tr._()._().tbody();\n       // Write all the data into a JavaScript array of arrays for JQuery\n       // DataTables to display\n       StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n \n       for (TaskAttempt attempt : getTaskAttempts()) {\n         TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n         String progress \u003d StringUtils.formatPercent(ta.getProgress() / 100, 2);\n \n         String nodeHttpAddr \u003d ta.getNode();\n         String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n+        TaskId taskId \u003d attempt.getID().getTaskId();\n         attemptsTableData.append(\"[\\\"\")\n-        .append(ta.getId()).append(\"\\\",\\\"\")\n+        .append(getAttemptId(taskId, ta)).append(\"\\\",\\\"\")\n         .append(progress).append(\"\\\",\\\"\")\n         .append(ta.getState().toString()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeJavaScript(\n               StringEscapeUtils.escapeHtml(ta.getStatus()))).append(\"\\\",\\\"\")\n \n         .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n             \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n                 + nodeHttpAddr + \"\u003c/a\u003e\")\n         .append(\"\\\",\\\"\")\n \n         .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n           \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n             , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n             .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n           .append(\"\\\",\\\"\")\n \n         .append(ta.getStartTime()).append(\"\\\",\\\"\")\n         .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n         .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n           diag)));\n         if (enableUIActions) {\n           attemptsTableData.append(\"\\\",\\\"\");\n           if (EnumSet.of(\n                   TaskAttemptState.SUCCEEDED,\n                   TaskAttemptState.FAILED,\n                   TaskAttemptState.KILLED).contains(attempt.getState())) {\n             attemptsTableData.append(\"N/A\");\n           } else {\n             attemptsTableData\n               .append(\"\u003ca href\u003djavascript:void(0) onclick\u003dconfirmAction(\u0027\")\n               .append(jobId.getAppId()).append(\"\u0027,\u0027\")\n               .append(jobId).append(\"\u0027,\u0027\")\n               .append(attempt.getID().getTaskId()).append(\"\u0027,\u0027\")\n               .append(ta.getId())\n               .append(\"\u0027);\u003eKill\u003c/a\u003e\");\n           }\n           attemptsTableData.append(\"\\\"],\\n\");\n         }\n       }\n       //Remove the last comma and close off the array of arrays\n       if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n         attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n       }\n       attemptsTableData.append(\"]\");\n       html.script().$type(\"text/javascript\").\n       _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n \n       tbody._()._();\n \n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n\n      JobId jobId \u003d app.getJob().getID();\n      if (enableUIActions) {\n        // Kill task attempt\n\n        StringBuilder script \u003d new StringBuilder();\n        script\n            .append(\"function confirmAction(appID, jobID, taskID, attID) {\\n\")\n            .append(\"  var b \u003d confirm(\\\"Are you sure?\\\");\\n\")\n            .append(\"  if (b \u003d\u003d true) {\\n\")\n            .append(\"    var current \u003d \u0027/proxy/\u0027 + appID\")\n            .append(\"      + \u0027/mapreduce/task/\u0027 + taskID;\\n\")\n            .append(\"    var stateURL \u003d \u0027/proxy/\u0027 + appID\")\n            .append(\"      + \u0027/ws/v1/mapreduce/jobs/\u0027 + jobID\")\n            .append(\"      + \u0027/tasks/\u0027 + taskID\")\n            .append(\"      + \u0027/attempts/\u0027 + attID + \u0027/state\u0027;\\n\")\n            .append(\"    $.ajax({\\n\")\n            .append(\"      type: \u0027PUT\u0027,\\n\")\n            .append(\"      url: stateURL,\\n\")\n            .append(\"      contentType: \u0027application/json\u0027,\\n\")\n            .append(\"      data: \u0027{\\\"state\\\":\\\"KILLED\\\"}\u0027,\\n\")\n            .append(\"      dataType: \u0027json\u0027\\n\")\n            .append(\"    }).done(function(data) {\\n\")\n            .append(\"         setTimeout(function() {\\n\")\n            .append(\"           location.href \u003d current;\\n\")\n            .append(\"         }, 1000);\\n\")\n            .append(\"    }).fail(function(data) {\\n\")\n            .append(\"         console.log(data);\\n\")\n            .append(\"    });\\n\")\n            .append(\"  }\\n\")\n            .append(\"}\\n\");\n\n        html.script().$type(\"text/javascript\")._(script.toString())._();\n      }\n\n      TR\u003cTHEAD\u003cTABLE\u003cHamlet\u003e\u003e\u003e tr \u003d html.table(\"#attempts\").thead().tr();\n      tr.th(\".id\", \"Attempt\").\n      th(\".progress\", \"Progress\").\n      th(\".state\", \"State\").\n      th(\".status\", \"Status\").\n      th(\".node\", \"Node\").\n      th(\".logs\", \"Logs\").\n      th(\".tsh\", \"Started\").\n      th(\".tsh\", \"Finished\").\n      th(\".tsh\", \"Elapsed\").\n      th(\".note\", \"Note\");\n      if (enableUIActions) {\n        tr.th(\".actions\", \"Actions\");\n      }\n\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d tr._()._().tbody();\n      // Write all the data into a JavaScript array of arrays for JQuery\n      // DataTables to display\n      StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n\n      for (TaskAttempt attempt : getTaskAttempts()) {\n        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n        String progress \u003d StringUtils.formatPercent(ta.getProgress() / 100, 2);\n\n        String nodeHttpAddr \u003d ta.getNode();\n        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n        TaskId taskId \u003d attempt.getID().getTaskId();\n        attemptsTableData.append(\"[\\\"\")\n        .append(getAttemptId(taskId, ta)).append(\"\\\",\\\"\")\n        .append(progress).append(\"\\\",\\\"\")\n        .append(ta.getState().toString()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(\n              StringEscapeUtils.escapeHtml(ta.getStatus()))).append(\"\\\",\\\"\")\n\n        .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n            \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n                + nodeHttpAddr + \"\u003c/a\u003e\")\n        .append(\"\\\",\\\"\")\n\n        .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n            , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n            .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n          .append(\"\\\",\\\"\")\n\n        .append(ta.getStartTime()).append(\"\\\",\\\"\")\n        .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n        .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n          diag)));\n        if (enableUIActions) {\n          attemptsTableData.append(\"\\\",\\\"\");\n          if (EnumSet.of(\n                  TaskAttemptState.SUCCEEDED,\n                  TaskAttemptState.FAILED,\n                  TaskAttemptState.KILLED).contains(attempt.getState())) {\n            attemptsTableData.append(\"N/A\");\n          } else {\n            attemptsTableData\n              .append(\"\u003ca href\u003djavascript:void(0) onclick\u003dconfirmAction(\u0027\")\n              .append(jobId.getAppId()).append(\"\u0027,\u0027\")\n              .append(jobId).append(\"\u0027,\u0027\")\n              .append(attempt.getID().getTaskId()).append(\"\u0027,\u0027\")\n              .append(ta.getId())\n              .append(\"\u0027);\u003eKill\u003c/a\u003e\");\n          }\n          attemptsTableData.append(\"\\\"],\\n\");\n        }\n      }\n      //Remove the last comma and close off the array of arrays\n      if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n        attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n      }\n      attemptsTableData.append(\"]\");\n      html.script().$type(\"text/javascript\").\n      _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n\n      tbody._()._();\n\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "311a4179cc53a2754d1185b1cb10e6adb1b95d3d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6405. NullPointerException in App Attempts page.  Contributed by\nSiqi Li and Gera Shegalov.\n",
      "commitDate": "19/06/15 10:05 PM",
      "commitName": "311a4179cc53a2754d1185b1cb10e6adb1b95d3d",
      "commitAuthor": "Devaraj K",
      "commitDateOld": "26/05/15 7:59 AM",
      "commitNameOld": "022f49d59e404678d0f322bb1b67208f3c17b7ef",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 24.59,
      "commitsBetweenForRepo": 183,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,112 +1,120 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n \n+      JobId jobId \u003d app.getJob().getID();\n       if (enableUIActions) {\n         // Kill task attempt\n-        String appID \u003d app.getJob().getID().getAppId().toString();\n-        String jobID \u003d app.getJob().getID().toString();\n-        String taskID \u003d app.getTask().getID().toString();\n-        stateURLFormat \u003d\n-            String.format(\"/proxy/%s/ws/v1/mapreduce/jobs/%s/tasks/%s/\"\n-                + \"attempts\", appID, jobID, taskID) + \"/%s/state\";\n-\n-        String current \u003d\n-            String.format(\"/proxy/%s/mapreduce/task/%s\", appID, taskID);\n \n         StringBuilder script \u003d new StringBuilder();\n-        script.append(\"function confirmAction(stateURL) {\")\n-            .append(\" b \u003d confirm(\\\"Are you sure?\\\");\")\n-            .append(\" if (b \u003d\u003d true) {\")\n-            .append(\" $.ajax({\")\n-            .append(\" type: \u0027PUT\u0027,\")\n-            .append(\" url: stateURL,\")\n-            .append(\" contentType: \u0027application/json\u0027,\")\n-            .append(\" data: \u0027{\\\"state\\\":\\\"KILLED\\\"}\u0027,\")\n-            .append(\" dataType: \u0027json\u0027\")\n-            .append(\" }).done(function(data){\")\n-            .append(\" setTimeout(function(){\")\n-            .append(\" location.href \u003d \u0027\").append(current).append(\"\u0027;\")\n-            .append(\" }, 1000);\")\n-            .append(\" }).fail(function(data){\")\n-            .append(\" console.log(data);\")\n-            .append(\" });\")\n-            .append(\" }\")\n-            .append(\"}\");\n+        script\n+            .append(\"function confirmAction(appID, jobID, taskID, attID) {\\n\")\n+            .append(\"  var b \u003d confirm(\\\"Are you sure?\\\");\\n\")\n+            .append(\"  if (b \u003d\u003d true) {\\n\")\n+            .append(\"    var current \u003d \u0027/proxy/\u0027 + appID\")\n+            .append(\"      + \u0027/mapreduce/task/\u0027 + taskID;\\n\")\n+            .append(\"    var stateURL \u003d \u0027/proxy/\u0027 + appID\")\n+            .append(\"      + \u0027/ws/v1/mapreduce/jobs/\u0027 + jobID\")\n+            .append(\"      + \u0027/tasks/\u0027 + taskID\")\n+            .append(\"      + \u0027/attempts/\u0027 + attID + \u0027/state\u0027;\\n\")\n+            .append(\"    $.ajax({\\n\")\n+            .append(\"      type: \u0027PUT\u0027,\\n\")\n+            .append(\"      url: stateURL,\\n\")\n+            .append(\"      contentType: \u0027application/json\u0027,\\n\")\n+            .append(\"      data: \u0027{\\\"state\\\":\\\"KILLED\\\"}\u0027,\\n\")\n+            .append(\"      dataType: \u0027json\u0027\\n\")\n+            .append(\"    }).done(function(data) {\\n\")\n+            .append(\"         setTimeout(function() {\\n\")\n+            .append(\"           location.href \u003d current;\\n\")\n+            .append(\"         }, 1000);\\n\")\n+            .append(\"    }).fail(function(data) {\\n\")\n+            .append(\"         console.log(data);\\n\")\n+            .append(\"    });\\n\")\n+            .append(\"  }\\n\")\n+            .append(\"}\\n\");\n \n         html.script().$type(\"text/javascript\")._(script.toString())._();\n       }\n \n       TR\u003cTHEAD\u003cTABLE\u003cHamlet\u003e\u003e\u003e tr \u003d html.table(\"#attempts\").thead().tr();\n       tr.th(\".id\", \"Attempt\").\n       th(\".progress\", \"Progress\").\n       th(\".state\", \"State\").\n       th(\".status\", \"Status\").\n       th(\".node\", \"Node\").\n       th(\".logs\", \"Logs\").\n       th(\".tsh\", \"Started\").\n       th(\".tsh\", \"Finished\").\n       th(\".tsh\", \"Elapsed\").\n       th(\".note\", \"Note\");\n       if (enableUIActions) {\n         tr.th(\".actions\", \"Actions\");\n       }\n \n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d tr._()._().tbody();\n       // Write all the data into a JavaScript array of arrays for JQuery\n       // DataTables to display\n       StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n \n       for (TaskAttempt attempt : getTaskAttempts()) {\n         TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n         String progress \u003d StringUtils.formatPercent(ta.getProgress() / 100, 2);\n \n         String nodeHttpAddr \u003d ta.getNode();\n         String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n         attemptsTableData.append(\"[\\\"\")\n         .append(ta.getId()).append(\"\\\",\\\"\")\n         .append(progress).append(\"\\\",\\\"\")\n         .append(ta.getState().toString()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeJavaScript(\n               StringEscapeUtils.escapeHtml(ta.getStatus()))).append(\"\\\",\\\"\")\n \n         .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n-          \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n-          + nodeHttpAddr + \"\u003c/a\u003e\")\n+            \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n+                + nodeHttpAddr + \"\u003c/a\u003e\")\n         .append(\"\\\",\\\"\")\n \n         .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n           \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n             , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n             .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n           .append(\"\\\",\\\"\")\n \n         .append(ta.getStartTime()).append(\"\\\",\\\"\")\n         .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n         .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n           diag)));\n         if (enableUIActions) {\n-          attemptsTableData.append(\"\\\",\\\"\")\n-          .append(\"\u003ca href\u003djavascript:void(0) onclick\u003dconfirmAction(\u0027\")\n-          .append(String.format(stateURLFormat, ta.getId()))\n-          .append(\"\u0027);\u003eKill\u003c/a\u003e\")\n-          .append(\"\\\"],\\n\");\n-        } else {\n+          attemptsTableData.append(\"\\\",\\\"\");\n+          if (EnumSet.of(\n+                  TaskAttemptState.SUCCEEDED,\n+                  TaskAttemptState.FAILED,\n+                  TaskAttemptState.KILLED).contains(attempt.getState())) {\n+            attemptsTableData.append(\"N/A\");\n+          } else {\n+            attemptsTableData\n+              .append(\"\u003ca href\u003djavascript:void(0) onclick\u003dconfirmAction(\u0027\")\n+              .append(jobId.getAppId()).append(\"\u0027,\u0027\")\n+              .append(jobId).append(\"\u0027,\u0027\")\n+              .append(attempt.getID().getTaskId()).append(\"\u0027,\u0027\")\n+              .append(ta.getId())\n+              .append(\"\u0027);\u003eKill\u003c/a\u003e\");\n+          }\n           attemptsTableData.append(\"\\\"],\\n\");\n         }\n       }\n       //Remove the last comma and close off the array of arrays\n       if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n         attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n       }\n       attemptsTableData.append(\"]\");\n       html.script().$type(\"text/javascript\").\n       _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n \n       tbody._()._();\n \n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n\n      JobId jobId \u003d app.getJob().getID();\n      if (enableUIActions) {\n        // Kill task attempt\n\n        StringBuilder script \u003d new StringBuilder();\n        script\n            .append(\"function confirmAction(appID, jobID, taskID, attID) {\\n\")\n            .append(\"  var b \u003d confirm(\\\"Are you sure?\\\");\\n\")\n            .append(\"  if (b \u003d\u003d true) {\\n\")\n            .append(\"    var current \u003d \u0027/proxy/\u0027 + appID\")\n            .append(\"      + \u0027/mapreduce/task/\u0027 + taskID;\\n\")\n            .append(\"    var stateURL \u003d \u0027/proxy/\u0027 + appID\")\n            .append(\"      + \u0027/ws/v1/mapreduce/jobs/\u0027 + jobID\")\n            .append(\"      + \u0027/tasks/\u0027 + taskID\")\n            .append(\"      + \u0027/attempts/\u0027 + attID + \u0027/state\u0027;\\n\")\n            .append(\"    $.ajax({\\n\")\n            .append(\"      type: \u0027PUT\u0027,\\n\")\n            .append(\"      url: stateURL,\\n\")\n            .append(\"      contentType: \u0027application/json\u0027,\\n\")\n            .append(\"      data: \u0027{\\\"state\\\":\\\"KILLED\\\"}\u0027,\\n\")\n            .append(\"      dataType: \u0027json\u0027\\n\")\n            .append(\"    }).done(function(data) {\\n\")\n            .append(\"         setTimeout(function() {\\n\")\n            .append(\"           location.href \u003d current;\\n\")\n            .append(\"         }, 1000);\\n\")\n            .append(\"    }).fail(function(data) {\\n\")\n            .append(\"         console.log(data);\\n\")\n            .append(\"    });\\n\")\n            .append(\"  }\\n\")\n            .append(\"}\\n\");\n\n        html.script().$type(\"text/javascript\")._(script.toString())._();\n      }\n\n      TR\u003cTHEAD\u003cTABLE\u003cHamlet\u003e\u003e\u003e tr \u003d html.table(\"#attempts\").thead().tr();\n      tr.th(\".id\", \"Attempt\").\n      th(\".progress\", \"Progress\").\n      th(\".state\", \"State\").\n      th(\".status\", \"Status\").\n      th(\".node\", \"Node\").\n      th(\".logs\", \"Logs\").\n      th(\".tsh\", \"Started\").\n      th(\".tsh\", \"Finished\").\n      th(\".tsh\", \"Elapsed\").\n      th(\".note\", \"Note\");\n      if (enableUIActions) {\n        tr.th(\".actions\", \"Actions\");\n      }\n\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d tr._()._().tbody();\n      // Write all the data into a JavaScript array of arrays for JQuery\n      // DataTables to display\n      StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n\n      for (TaskAttempt attempt : getTaskAttempts()) {\n        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n        String progress \u003d StringUtils.formatPercent(ta.getProgress() / 100, 2);\n\n        String nodeHttpAddr \u003d ta.getNode();\n        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n        attemptsTableData.append(\"[\\\"\")\n        .append(ta.getId()).append(\"\\\",\\\"\")\n        .append(progress).append(\"\\\",\\\"\")\n        .append(ta.getState().toString()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(\n              StringEscapeUtils.escapeHtml(ta.getStatus()))).append(\"\\\",\\\"\")\n\n        .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n            \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n                + nodeHttpAddr + \"\u003c/a\u003e\")\n        .append(\"\\\",\\\"\")\n\n        .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n            , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n            .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n          .append(\"\\\",\\\"\")\n\n        .append(ta.getStartTime()).append(\"\\\",\\\"\")\n        .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n        .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n          diag)));\n        if (enableUIActions) {\n          attemptsTableData.append(\"\\\",\\\"\");\n          if (EnumSet.of(\n                  TaskAttemptState.SUCCEEDED,\n                  TaskAttemptState.FAILED,\n                  TaskAttemptState.KILLED).contains(attempt.getState())) {\n            attemptsTableData.append(\"N/A\");\n          } else {\n            attemptsTableData\n              .append(\"\u003ca href\u003djavascript:void(0) onclick\u003dconfirmAction(\u0027\")\n              .append(jobId.getAppId()).append(\"\u0027,\u0027\")\n              .append(jobId).append(\"\u0027,\u0027\")\n              .append(attempt.getID().getTaskId()).append(\"\u0027,\u0027\")\n              .append(ta.getId())\n              .append(\"\u0027);\u003eKill\u003c/a\u003e\");\n          }\n          attemptsTableData.append(\"\\\"],\\n\");\n        }\n      }\n      //Remove the last comma and close off the array of arrays\n      if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n        attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n      }\n      attemptsTableData.append(\"]\");\n      html.script().$type(\"text/javascript\").\n      _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n\n      tbody._()._();\n\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "022f49d59e404678d0f322bb1b67208f3c17b7ef": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6364. Add a Kill link to Task Attempts page. Contributed by Ryu Kobayashi.\n",
      "commitDate": "26/05/15 7:59 AM",
      "commitName": "022f49d59e404678d0f322bb1b67208f3c17b7ef",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "05/05/15 10:40 AM",
      "commitNameOld": "b7dd3a4f04f712b7594c4e6e7ce50fd314f7c342",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 20.89,
      "commitsBetweenForRepo": 241,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,66 +1,112 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n-      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n-      table(\"#attempts\").\n-        thead().\n-          tr().\n-            th(\".id\", \"Attempt\").\n-            th(\".progress\", \"Progress\").\n-            th(\".state\", \"State\").\n-            th(\".status\", \"Status\").\n-            th(\".node\", \"Node\").\n-            th(\".logs\", \"Logs\").\n-            th(\".tsh\", \"Started\").\n-            th(\".tsh\", \"Finished\").\n-            th(\".tsh\", \"Elapsed\").\n-            th(\".note\", \"Note\")._()._().\n-      tbody();\n+\n+      if (enableUIActions) {\n+        // Kill task attempt\n+        String appID \u003d app.getJob().getID().getAppId().toString();\n+        String jobID \u003d app.getJob().getID().toString();\n+        String taskID \u003d app.getTask().getID().toString();\n+        stateURLFormat \u003d\n+            String.format(\"/proxy/%s/ws/v1/mapreduce/jobs/%s/tasks/%s/\"\n+                + \"attempts\", appID, jobID, taskID) + \"/%s/state\";\n+\n+        String current \u003d\n+            String.format(\"/proxy/%s/mapreduce/task/%s\", appID, taskID);\n+\n+        StringBuilder script \u003d new StringBuilder();\n+        script.append(\"function confirmAction(stateURL) {\")\n+            .append(\" b \u003d confirm(\\\"Are you sure?\\\");\")\n+            .append(\" if (b \u003d\u003d true) {\")\n+            .append(\" $.ajax({\")\n+            .append(\" type: \u0027PUT\u0027,\")\n+            .append(\" url: stateURL,\")\n+            .append(\" contentType: \u0027application/json\u0027,\")\n+            .append(\" data: \u0027{\\\"state\\\":\\\"KILLED\\\"}\u0027,\")\n+            .append(\" dataType: \u0027json\u0027\")\n+            .append(\" }).done(function(data){\")\n+            .append(\" setTimeout(function(){\")\n+            .append(\" location.href \u003d \u0027\").append(current).append(\"\u0027;\")\n+            .append(\" }, 1000);\")\n+            .append(\" }).fail(function(data){\")\n+            .append(\" console.log(data);\")\n+            .append(\" });\")\n+            .append(\" }\")\n+            .append(\"}\");\n+\n+        html.script().$type(\"text/javascript\")._(script.toString())._();\n+      }\n+\n+      TR\u003cTHEAD\u003cTABLE\u003cHamlet\u003e\u003e\u003e tr \u003d html.table(\"#attempts\").thead().tr();\n+      tr.th(\".id\", \"Attempt\").\n+      th(\".progress\", \"Progress\").\n+      th(\".state\", \"State\").\n+      th(\".status\", \"Status\").\n+      th(\".node\", \"Node\").\n+      th(\".logs\", \"Logs\").\n+      th(\".tsh\", \"Started\").\n+      th(\".tsh\", \"Finished\").\n+      th(\".tsh\", \"Elapsed\").\n+      th(\".note\", \"Note\");\n+      if (enableUIActions) {\n+        tr.th(\".actions\", \"Actions\");\n+      }\n+\n+      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d tr._()._().tbody();\n       // Write all the data into a JavaScript array of arrays for JQuery\n       // DataTables to display\n       StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n \n       for (TaskAttempt attempt : getTaskAttempts()) {\n         TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n         String progress \u003d StringUtils.formatPercent(ta.getProgress() / 100, 2);\n \n         String nodeHttpAddr \u003d ta.getNode();\n         String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n         attemptsTableData.append(\"[\\\"\")\n         .append(ta.getId()).append(\"\\\",\\\"\")\n         .append(progress).append(\"\\\",\\\"\")\n         .append(ta.getState().toString()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeJavaScript(\n               StringEscapeUtils.escapeHtml(ta.getStatus()))).append(\"\\\",\\\"\")\n \n         .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n           \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n           + nodeHttpAddr + \"\u003c/a\u003e\")\n         .append(\"\\\",\\\"\")\n \n         .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n           \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n             , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n             .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n           .append(\"\\\",\\\"\")\n \n         .append(ta.getStartTime()).append(\"\\\",\\\"\")\n         .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n         .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n-          diag))).append(\"\\\"],\\n\");\n+          diag)));\n+        if (enableUIActions) {\n+          attemptsTableData.append(\"\\\",\\\"\")\n+          .append(\"\u003ca href\u003djavascript:void(0) onclick\u003dconfirmAction(\u0027\")\n+          .append(String.format(stateURLFormat, ta.getId()))\n+          .append(\"\u0027);\u003eKill\u003c/a\u003e\")\n+          .append(\"\\\"],\\n\");\n+        } else {\n+          attemptsTableData.append(\"\\\"],\\n\");\n+        }\n       }\n       //Remove the last comma and close off the array of arrays\n       if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n         attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n       }\n       attemptsTableData.append(\"]\");\n       html.script().$type(\"text/javascript\").\n       _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n \n       tbody._()._();\n \n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n\n      if (enableUIActions) {\n        // Kill task attempt\n        String appID \u003d app.getJob().getID().getAppId().toString();\n        String jobID \u003d app.getJob().getID().toString();\n        String taskID \u003d app.getTask().getID().toString();\n        stateURLFormat \u003d\n            String.format(\"/proxy/%s/ws/v1/mapreduce/jobs/%s/tasks/%s/\"\n                + \"attempts\", appID, jobID, taskID) + \"/%s/state\";\n\n        String current \u003d\n            String.format(\"/proxy/%s/mapreduce/task/%s\", appID, taskID);\n\n        StringBuilder script \u003d new StringBuilder();\n        script.append(\"function confirmAction(stateURL) {\")\n            .append(\" b \u003d confirm(\\\"Are you sure?\\\");\")\n            .append(\" if (b \u003d\u003d true) {\")\n            .append(\" $.ajax({\")\n            .append(\" type: \u0027PUT\u0027,\")\n            .append(\" url: stateURL,\")\n            .append(\" contentType: \u0027application/json\u0027,\")\n            .append(\" data: \u0027{\\\"state\\\":\\\"KILLED\\\"}\u0027,\")\n            .append(\" dataType: \u0027json\u0027\")\n            .append(\" }).done(function(data){\")\n            .append(\" setTimeout(function(){\")\n            .append(\" location.href \u003d \u0027\").append(current).append(\"\u0027;\")\n            .append(\" }, 1000);\")\n            .append(\" }).fail(function(data){\")\n            .append(\" console.log(data);\")\n            .append(\" });\")\n            .append(\" }\")\n            .append(\"}\");\n\n        html.script().$type(\"text/javascript\")._(script.toString())._();\n      }\n\n      TR\u003cTHEAD\u003cTABLE\u003cHamlet\u003e\u003e\u003e tr \u003d html.table(\"#attempts\").thead().tr();\n      tr.th(\".id\", \"Attempt\").\n      th(\".progress\", \"Progress\").\n      th(\".state\", \"State\").\n      th(\".status\", \"Status\").\n      th(\".node\", \"Node\").\n      th(\".logs\", \"Logs\").\n      th(\".tsh\", \"Started\").\n      th(\".tsh\", \"Finished\").\n      th(\".tsh\", \"Elapsed\").\n      th(\".note\", \"Note\");\n      if (enableUIActions) {\n        tr.th(\".actions\", \"Actions\");\n      }\n\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d tr._()._().tbody();\n      // Write all the data into a JavaScript array of arrays for JQuery\n      // DataTables to display\n      StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n\n      for (TaskAttempt attempt : getTaskAttempts()) {\n        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n        String progress \u003d StringUtils.formatPercent(ta.getProgress() / 100, 2);\n\n        String nodeHttpAddr \u003d ta.getNode();\n        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n        attemptsTableData.append(\"[\\\"\")\n        .append(ta.getId()).append(\"\\\",\\\"\")\n        .append(progress).append(\"\\\",\\\"\")\n        .append(ta.getState().toString()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(\n              StringEscapeUtils.escapeHtml(ta.getStatus()))).append(\"\\\",\\\"\")\n\n        .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n          + nodeHttpAddr + \"\u003c/a\u003e\")\n        .append(\"\\\",\\\"\")\n\n        .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n            , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n            .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n          .append(\"\\\",\\\"\")\n\n        .append(ta.getStartTime()).append(\"\\\",\\\"\")\n        .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n        .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n          diag)));\n        if (enableUIActions) {\n          attemptsTableData.append(\"\\\",\\\"\")\n          .append(\"\u003ca href\u003djavascript:void(0) onclick\u003dconfirmAction(\u0027\")\n          .append(String.format(stateURLFormat, ta.getId()))\n          .append(\"\u0027);\u003eKill\u003c/a\u003e\")\n          .append(\"\\\"],\\n\");\n        } else {\n          attemptsTableData.append(\"\\\"],\\n\");\n        }\n      }\n      //Remove the last comma and close off the array of arrays\n      if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n        attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n      }\n      attemptsTableData.append(\"]\");\n      html.script().$type(\"text/javascript\").\n      _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n\n      tbody._()._();\n\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "b7dd3a4f04f712b7594c4e6e7ce50fd314f7c342": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2123. Progress bars in Web UI always at 100% due to non-US locale.\nContributed by Akira AJISAKA\n",
      "commitDate": "05/05/15 10:40 AM",
      "commitName": "b7dd3a4f04f712b7594c4e6e7ce50fd314f7c342",
      "commitAuthor": "Xuan",
      "commitDateOld": "05/08/14 2:52 PM",
      "commitNameOld": "857d134fda8b7bb7faa6eb3606639554de4db47a",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 272.82,
      "commitsBetweenForRepo": 2366,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,66 +1,66 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#attempts\").\n         thead().\n           tr().\n             th(\".id\", \"Attempt\").\n             th(\".progress\", \"Progress\").\n             th(\".state\", \"State\").\n             th(\".status\", \"Status\").\n             th(\".node\", \"Node\").\n             th(\".logs\", \"Logs\").\n             th(\".tsh\", \"Started\").\n             th(\".tsh\", \"Finished\").\n             th(\".tsh\", \"Elapsed\").\n             th(\".note\", \"Note\")._()._().\n       tbody();\n       // Write all the data into a JavaScript array of arrays for JQuery\n       // DataTables to display\n       StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n \n       for (TaskAttempt attempt : getTaskAttempts()) {\n         TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n-        String progress \u003d percent(ta.getProgress() / 100);\n+        String progress \u003d StringUtils.formatPercent(ta.getProgress() / 100, 2);\n \n         String nodeHttpAddr \u003d ta.getNode();\n         String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n         attemptsTableData.append(\"[\\\"\")\n         .append(ta.getId()).append(\"\\\",\\\"\")\n         .append(progress).append(\"\\\",\\\"\")\n         .append(ta.getState().toString()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeJavaScript(\n               StringEscapeUtils.escapeHtml(ta.getStatus()))).append(\"\\\",\\\"\")\n \n         .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n           \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n           + nodeHttpAddr + \"\u003c/a\u003e\")\n         .append(\"\\\",\\\"\")\n \n         .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n           \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n             , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n             .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n           .append(\"\\\",\\\"\")\n \n         .append(ta.getStartTime()).append(\"\\\",\\\"\")\n         .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n         .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n           diag))).append(\"\\\"],\\n\");\n       }\n       //Remove the last comma and close off the array of arrays\n       if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n         attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n       }\n       attemptsTableData.append(\"]\");\n       html.script().$type(\"text/javascript\").\n       _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n \n       tbody._()._();\n \n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#attempts\").\n        thead().\n          tr().\n            th(\".id\", \"Attempt\").\n            th(\".progress\", \"Progress\").\n            th(\".state\", \"State\").\n            th(\".status\", \"Status\").\n            th(\".node\", \"Node\").\n            th(\".logs\", \"Logs\").\n            th(\".tsh\", \"Started\").\n            th(\".tsh\", \"Finished\").\n            th(\".tsh\", \"Elapsed\").\n            th(\".note\", \"Note\")._()._().\n      tbody();\n      // Write all the data into a JavaScript array of arrays for JQuery\n      // DataTables to display\n      StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n\n      for (TaskAttempt attempt : getTaskAttempts()) {\n        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n        String progress \u003d StringUtils.formatPercent(ta.getProgress() / 100, 2);\n\n        String nodeHttpAddr \u003d ta.getNode();\n        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n        attemptsTableData.append(\"[\\\"\")\n        .append(ta.getId()).append(\"\\\",\\\"\")\n        .append(progress).append(\"\\\",\\\"\")\n        .append(ta.getState().toString()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(\n              StringEscapeUtils.escapeHtml(ta.getStatus()))).append(\"\\\",\\\"\")\n\n        .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n          + nodeHttpAddr + \"\u003c/a\u003e\")\n        .append(\"\\\",\\\"\")\n\n        .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n            , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n            .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n          .append(\"\\\",\\\"\")\n\n        .append(ta.getStartTime()).append(\"\\\",\\\"\")\n        .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n        .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n          diag))).append(\"\\\"],\\n\");\n      }\n      //Remove the last comma and close off the array of arrays\n      if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n        attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n      }\n      attemptsTableData.append(\"]\");\n      html.script().$type(\"text/javascript\").\n      _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n\n      tbody._()._();\n\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "857d134fda8b7bb7faa6eb3606639554de4db47a": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6014. New task status field in task attempts table can lead to an empty web page. Contributed by Mit Desai\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616018 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/08/14 2:52 PM",
      "commitName": "857d134fda8b7bb7faa6eb3606639554de4db47a",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "20/12/13 1:00 PM",
      "commitNameOld": "04dac636953532c9c4ab6692e193e3ffe292edb2",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 228.04,
      "commitsBetweenForRepo": 1535,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,65 +1,66 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#attempts\").\n         thead().\n           tr().\n             th(\".id\", \"Attempt\").\n             th(\".progress\", \"Progress\").\n             th(\".state\", \"State\").\n             th(\".status\", \"Status\").\n             th(\".node\", \"Node\").\n             th(\".logs\", \"Logs\").\n             th(\".tsh\", \"Started\").\n             th(\".tsh\", \"Finished\").\n             th(\".tsh\", \"Elapsed\").\n             th(\".note\", \"Note\")._()._().\n       tbody();\n       // Write all the data into a JavaScript array of arrays for JQuery\n       // DataTables to display\n       StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n \n       for (TaskAttempt attempt : getTaskAttempts()) {\n         TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n         String progress \u003d percent(ta.getProgress() / 100);\n \n         String nodeHttpAddr \u003d ta.getNode();\n         String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n         attemptsTableData.append(\"[\\\"\")\n         .append(ta.getId()).append(\"\\\",\\\"\")\n         .append(progress).append(\"\\\",\\\"\")\n         .append(ta.getState().toString()).append(\"\\\",\\\"\")\n-        .append(ta.getStatus()).append(\"\\\",\\\"\")\n+        .append(StringEscapeUtils.escapeJavaScript(\n+              StringEscapeUtils.escapeHtml(ta.getStatus()))).append(\"\\\",\\\"\")\n \n         .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n           \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n           + nodeHttpAddr + \"\u003c/a\u003e\")\n         .append(\"\\\",\\\"\")\n \n         .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n           \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n             , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n             .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n           .append(\"\\\",\\\"\")\n \n         .append(ta.getStartTime()).append(\"\\\",\\\"\")\n         .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n         .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n           diag))).append(\"\\\"],\\n\");\n       }\n       //Remove the last comma and close off the array of arrays\n       if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n         attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n       }\n       attemptsTableData.append(\"]\");\n       html.script().$type(\"text/javascript\").\n       _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n \n       tbody._()._();\n \n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#attempts\").\n        thead().\n          tr().\n            th(\".id\", \"Attempt\").\n            th(\".progress\", \"Progress\").\n            th(\".state\", \"State\").\n            th(\".status\", \"Status\").\n            th(\".node\", \"Node\").\n            th(\".logs\", \"Logs\").\n            th(\".tsh\", \"Started\").\n            th(\".tsh\", \"Finished\").\n            th(\".tsh\", \"Elapsed\").\n            th(\".note\", \"Note\")._()._().\n      tbody();\n      // Write all the data into a JavaScript array of arrays for JQuery\n      // DataTables to display\n      StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n\n      for (TaskAttempt attempt : getTaskAttempts()) {\n        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n        String progress \u003d percent(ta.getProgress() / 100);\n\n        String nodeHttpAddr \u003d ta.getNode();\n        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n        attemptsTableData.append(\"[\\\"\")\n        .append(ta.getId()).append(\"\\\",\\\"\")\n        .append(progress).append(\"\\\",\\\"\")\n        .append(ta.getState().toString()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(\n              StringEscapeUtils.escapeHtml(ta.getStatus()))).append(\"\\\",\\\"\")\n\n        .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n          + nodeHttpAddr + \"\u003c/a\u003e\")\n        .append(\"\\\",\\\"\")\n\n        .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n            , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n            .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n          .append(\"\\\",\\\"\")\n\n        .append(ta.getStartTime()).append(\"\\\",\\\"\")\n        .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n        .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n          diag))).append(\"\\\"],\\n\");\n      }\n      //Remove the last comma and close off the array of arrays\n      if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n        attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n      }\n      attemptsTableData.append(\"]\");\n      html.script().$type(\"text/javascript\").\n      _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n\n      tbody._()._();\n\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "04dac636953532c9c4ab6692e193e3ffe292edb2": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5550. Task Status message (reporter.setStatus) not shown in UI with Hadoop 2.0 (Gera Shegalov via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552808 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/12/13 1:00 PM",
      "commitName": "04dac636953532c9c4ab6692e193e3ffe292edb2",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "01/10/13 3:52 PM",
      "commitNameOld": "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 79.92,
      "commitsBetweenForRepo": 536,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,63 +1,65 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#attempts\").\n         thead().\n           tr().\n             th(\".id\", \"Attempt\").\n             th(\".progress\", \"Progress\").\n             th(\".state\", \"State\").\n+            th(\".status\", \"Status\").\n             th(\".node\", \"Node\").\n             th(\".logs\", \"Logs\").\n             th(\".tsh\", \"Started\").\n             th(\".tsh\", \"Finished\").\n             th(\".tsh\", \"Elapsed\").\n             th(\".note\", \"Note\")._()._().\n       tbody();\n       // Write all the data into a JavaScript array of arrays for JQuery\n       // DataTables to display\n       StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n \n       for (TaskAttempt attempt : getTaskAttempts()) {\n         TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n         String progress \u003d percent(ta.getProgress() / 100);\n \n         String nodeHttpAddr \u003d ta.getNode();\n         String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n         attemptsTableData.append(\"[\\\"\")\n         .append(ta.getId()).append(\"\\\",\\\"\")\n         .append(progress).append(\"\\\",\\\"\")\n         .append(ta.getState().toString()).append(\"\\\",\\\"\")\n+        .append(ta.getStatus()).append(\"\\\",\\\"\")\n \n         .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n           \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n           + nodeHttpAddr + \"\u003c/a\u003e\")\n         .append(\"\\\",\\\"\")\n \n         .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n           \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n             , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n             .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n           .append(\"\\\",\\\"\")\n \n         .append(ta.getStartTime()).append(\"\\\",\\\"\")\n         .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n         .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n           diag))).append(\"\\\"],\\n\");\n       }\n       //Remove the last comma and close off the array of arrays\n       if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n         attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n       }\n       attemptsTableData.append(\"]\");\n       html.script().$type(\"text/javascript\").\n       _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n \n       tbody._()._();\n \n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#attempts\").\n        thead().\n          tr().\n            th(\".id\", \"Attempt\").\n            th(\".progress\", \"Progress\").\n            th(\".state\", \"State\").\n            th(\".status\", \"Status\").\n            th(\".node\", \"Node\").\n            th(\".logs\", \"Logs\").\n            th(\".tsh\", \"Started\").\n            th(\".tsh\", \"Finished\").\n            th(\".tsh\", \"Elapsed\").\n            th(\".note\", \"Note\")._()._().\n      tbody();\n      // Write all the data into a JavaScript array of arrays for JQuery\n      // DataTables to display\n      StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n\n      for (TaskAttempt attempt : getTaskAttempts()) {\n        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n        String progress \u003d percent(ta.getProgress() / 100);\n\n        String nodeHttpAddr \u003d ta.getNode();\n        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n        attemptsTableData.append(\"[\\\"\")\n        .append(ta.getId()).append(\"\\\",\\\"\")\n        .append(progress).append(\"\\\",\\\"\")\n        .append(ta.getState().toString()).append(\"\\\",\\\"\")\n        .append(ta.getStatus()).append(\"\\\",\\\"\")\n\n        .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n          + nodeHttpAddr + \"\u003c/a\u003e\")\n        .append(\"\\\",\\\"\")\n\n        .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n            , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n            .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n          .append(\"\\\",\\\"\")\n\n        .append(ta.getStartTime()).append(\"\\\",\\\"\")\n        .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n        .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n          diag))).append(\"\\\"],\\n\");\n      }\n      //Remove the last comma and close off the array of arrays\n      if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n        attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n      }\n      attemptsTableData.append(\"]\");\n      html.script().$type(\"text/javascript\").\n      _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n\n      tbody._()._();\n\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5536. Fixed MR AM and JHS to respect mapreduce.jobhistory.webapp.https.address. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1528251 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/10/13 3:52 PM",
      "commitName": "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "19/09/13 4:35 PM",
      "commitNameOld": "13420d01f2fb28a0e445dc87ad9ee9b607804d53",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 11.97,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,63 +1,63 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#attempts\").\n         thead().\n           tr().\n             th(\".id\", \"Attempt\").\n             th(\".progress\", \"Progress\").\n             th(\".state\", \"State\").\n             th(\".node\", \"Node\").\n             th(\".logs\", \"Logs\").\n             th(\".tsh\", \"Started\").\n             th(\".tsh\", \"Finished\").\n             th(\".tsh\", \"Elapsed\").\n             th(\".note\", \"Note\")._()._().\n       tbody();\n       // Write all the data into a JavaScript array of arrays for JQuery\n       // DataTables to display\n       StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n \n       for (TaskAttempt attempt : getTaskAttempts()) {\n         TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n         String progress \u003d percent(ta.getProgress() / 100);\n \n         String nodeHttpAddr \u003d ta.getNode();\n         String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n         attemptsTableData.append(\"[\\\"\")\n         .append(ta.getId()).append(\"\\\",\\\"\")\n         .append(progress).append(\"\\\",\\\"\")\n         .append(ta.getState().toString()).append(\"\\\",\\\"\")\n \n         .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n-          \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + WebAppUtil.getSchemePrefix() + nodeHttpAddr + \"\u0027\u003e\"\n+          \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n           + nodeHttpAddr + \"\u003c/a\u003e\")\n         .append(\"\\\",\\\"\")\n \n         .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n-          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(WebAppUtil.getSchemePrefix(), nodeHttpAddr, \"node\"\n+          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n             , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n             .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n           .append(\"\\\",\\\"\")\n \n         .append(ta.getStartTime()).append(\"\\\",\\\"\")\n         .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n         .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n           diag))).append(\"\\\"],\\n\");\n       }\n       //Remove the last comma and close off the array of arrays\n       if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n         attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n       }\n       attemptsTableData.append(\"]\");\n       html.script().$type(\"text/javascript\").\n       _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n \n       tbody._()._();\n \n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#attempts\").\n        thead().\n          tr().\n            th(\".id\", \"Attempt\").\n            th(\".progress\", \"Progress\").\n            th(\".state\", \"State\").\n            th(\".node\", \"Node\").\n            th(\".logs\", \"Logs\").\n            th(\".tsh\", \"Started\").\n            th(\".tsh\", \"Finished\").\n            th(\".tsh\", \"Elapsed\").\n            th(\".note\", \"Note\")._()._().\n      tbody();\n      // Write all the data into a JavaScript array of arrays for JQuery\n      // DataTables to display\n      StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n\n      for (TaskAttempt attempt : getTaskAttempts()) {\n        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n        String progress \u003d percent(ta.getProgress() / 100);\n\n        String nodeHttpAddr \u003d ta.getNode();\n        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n        attemptsTableData.append(\"[\\\"\")\n        .append(ta.getId()).append(\"\\\",\\\"\")\n        .append(progress).append(\"\\\",\\\"\")\n        .append(ta.getState().toString()).append(\"\\\",\\\"\")\n\n        .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + MRWebAppUtil.getYARNWebappScheme() + nodeHttpAddr + \"\u0027\u003e\"\n          + nodeHttpAddr + \"\u003c/a\u003e\")\n        .append(\"\\\",\\\"\")\n\n        .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(MRWebAppUtil.getYARNWebappScheme(), nodeHttpAddr, \"node\"\n            , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n            .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n          .append(\"\\\",\\\"\")\n\n        .append(ta.getStartTime()).append(\"\\\",\\\"\")\n        .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n        .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n          diag))).append(\"\\\"],\\n\");\n      }\n      //Remove the last comma and close off the array of arrays\n      if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n        attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n      }\n      attemptsTableData.append(\"]\");\n      html.script().$type(\"text/javascript\").\n      _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n\n      tbody._()._();\n\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "13420d01f2fb28a0e445dc87ad9ee9b607804d53": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1203. Changed YARN web-app proxy to handle http and https URLs from AM registration and finish correctly. Contributed by Omkar Vinit Joshi.\nMAPREDUCE-5515. Fixed MR AM\u0027s webapp to depend on a new config mapreduce.ssl.enabled to enable https and disabling it by default as MR AM needs\nto set up its own certificates etc and not depend on clusters\u0027. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1524864 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/13 4:35 PM",
      "commitName": "13420d01f2fb28a0e445dc87ad9ee9b607804d53",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "11/04/13 9:27 AM",
      "commitNameOld": "d04e65b797538dc16ceae6a08155798808748437",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 161.3,
      "commitsBetweenForRepo": 979,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,63 +1,63 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#attempts\").\n         thead().\n           tr().\n             th(\".id\", \"Attempt\").\n             th(\".progress\", \"Progress\").\n             th(\".state\", \"State\").\n             th(\".node\", \"Node\").\n             th(\".logs\", \"Logs\").\n             th(\".tsh\", \"Started\").\n             th(\".tsh\", \"Finished\").\n             th(\".tsh\", \"Elapsed\").\n             th(\".note\", \"Note\")._()._().\n       tbody();\n       // Write all the data into a JavaScript array of arrays for JQuery\n       // DataTables to display\n       StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n \n       for (TaskAttempt attempt : getTaskAttempts()) {\n         TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n         String progress \u003d percent(ta.getProgress() / 100);\n \n         String nodeHttpAddr \u003d ta.getNode();\n         String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n         attemptsTableData.append(\"[\\\"\")\n         .append(ta.getId()).append(\"\\\",\\\"\")\n         .append(progress).append(\"\\\",\\\"\")\n         .append(ta.getState().toString()).append(\"\\\",\\\"\")\n \n         .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n-          \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + HttpConfig.getSchemePrefix() + nodeHttpAddr + \"\u0027\u003e\"\n+          \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + WebAppUtil.getSchemePrefix() + nodeHttpAddr + \"\u0027\u003e\"\n           + nodeHttpAddr + \"\u003c/a\u003e\")\n         .append(\"\\\",\\\"\")\n \n         .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n-          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(HttpConfig.getSchemePrefix(), nodeHttpAddr, \"node\"\n+          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(WebAppUtil.getSchemePrefix(), nodeHttpAddr, \"node\"\n             , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n             .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n           .append(\"\\\",\\\"\")\n \n         .append(ta.getStartTime()).append(\"\\\",\\\"\")\n         .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n         .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n           diag))).append(\"\\\"],\\n\");\n       }\n       //Remove the last comma and close off the array of arrays\n       if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n         attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n       }\n       attemptsTableData.append(\"]\");\n       html.script().$type(\"text/javascript\").\n       _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n \n       tbody._()._();\n \n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#attempts\").\n        thead().\n          tr().\n            th(\".id\", \"Attempt\").\n            th(\".progress\", \"Progress\").\n            th(\".state\", \"State\").\n            th(\".node\", \"Node\").\n            th(\".logs\", \"Logs\").\n            th(\".tsh\", \"Started\").\n            th(\".tsh\", \"Finished\").\n            th(\".tsh\", \"Elapsed\").\n            th(\".note\", \"Note\")._()._().\n      tbody();\n      // Write all the data into a JavaScript array of arrays for JQuery\n      // DataTables to display\n      StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n\n      for (TaskAttempt attempt : getTaskAttempts()) {\n        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n        String progress \u003d percent(ta.getProgress() / 100);\n\n        String nodeHttpAddr \u003d ta.getNode();\n        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n        attemptsTableData.append(\"[\\\"\")\n        .append(ta.getId()).append(\"\\\",\\\"\")\n        .append(progress).append(\"\\\",\\\"\")\n        .append(ta.getState().toString()).append(\"\\\",\\\"\")\n\n        .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + WebAppUtil.getSchemePrefix() + nodeHttpAddr + \"\u0027\u003e\"\n          + nodeHttpAddr + \"\u003c/a\u003e\")\n        .append(\"\\\",\\\"\")\n\n        .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(WebAppUtil.getSchemePrefix(), nodeHttpAddr, \"node\"\n            , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n            .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n          .append(\"\\\",\\\"\")\n\n        .append(ta.getStartTime()).append(\"\\\",\\\"\")\n        .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n        .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n          diag))).append(\"\\\"],\\n\");\n      }\n      //Remove the last comma and close off the array of arrays\n      if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n        attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n      }\n      attemptsTableData.append(\"]\");\n      html.script().$type(\"text/javascript\").\n      _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n\n      tbody._()._();\n\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "d04e65b797538dc16ceae6a08155798808748437": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5137. AM web UI: clicking on Map Task results in 500 error. Contributed by Thomas Graves\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1466948 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/04/13 9:27 AM",
      "commitName": "d04e65b797538dc16ceae6a08155798808748437",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "12/02/13 5:15 PM",
      "commitNameOld": "c2d6407070338f26baaa7d67c968501a987dfe1a",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 57.63,
      "commitsBetweenForRepo": 282,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,59 +1,63 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n-      html.\n+      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#attempts\").\n         thead().\n           tr().\n             th(\".id\", \"Attempt\").\n             th(\".progress\", \"Progress\").\n             th(\".state\", \"State\").\n             th(\".node\", \"Node\").\n             th(\".logs\", \"Logs\").\n             th(\".tsh\", \"Started\").\n             th(\".tsh\", \"Finished\").\n             th(\".tsh\", \"Elapsed\").\n-            th(\".note\", \"Note\")._()._();\n+            th(\".note\", \"Note\")._()._().\n+      tbody();\n       // Write all the data into a JavaScript array of arrays for JQuery\n       // DataTables to display\n       StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n \n       for (TaskAttempt attempt : getTaskAttempts()) {\n         TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n         String progress \u003d percent(ta.getProgress() / 100);\n \n         String nodeHttpAddr \u003d ta.getNode();\n         String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n         attemptsTableData.append(\"[\\\"\")\n         .append(ta.getId()).append(\"\\\",\\\"\")\n         .append(progress).append(\"\\\",\\\"\")\n         .append(ta.getState().toString()).append(\"\\\",\\\"\")\n \n         .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n           \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + HttpConfig.getSchemePrefix() + nodeHttpAddr + \"\u0027\u003e\"\n           + nodeHttpAddr + \"\u003c/a\u003e\")\n         .append(\"\\\",\\\"\")\n \n         .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n           \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(HttpConfig.getSchemePrefix(), nodeHttpAddr, \"node\"\n             , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n             .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n           .append(\"\\\",\\\"\")\n \n         .append(ta.getStartTime()).append(\"\\\",\\\"\")\n         .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n         .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n         .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n           diag))).append(\"\\\"],\\n\");\n       }\n       //Remove the last comma and close off the array of arrays\n       if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n         attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n       }\n       attemptsTableData.append(\"]\");\n       html.script().$type(\"text/javascript\").\n       _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n+\n+      tbody._()._();\n+\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#attempts\").\n        thead().\n          tr().\n            th(\".id\", \"Attempt\").\n            th(\".progress\", \"Progress\").\n            th(\".state\", \"State\").\n            th(\".node\", \"Node\").\n            th(\".logs\", \"Logs\").\n            th(\".tsh\", \"Started\").\n            th(\".tsh\", \"Finished\").\n            th(\".tsh\", \"Elapsed\").\n            th(\".note\", \"Note\")._()._().\n      tbody();\n      // Write all the data into a JavaScript array of arrays for JQuery\n      // DataTables to display\n      StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n\n      for (TaskAttempt attempt : getTaskAttempts()) {\n        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n        String progress \u003d percent(ta.getProgress() / 100);\n\n        String nodeHttpAddr \u003d ta.getNode();\n        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n        attemptsTableData.append(\"[\\\"\")\n        .append(ta.getId()).append(\"\\\",\\\"\")\n        .append(progress).append(\"\\\",\\\"\")\n        .append(ta.getState().toString()).append(\"\\\",\\\"\")\n\n        .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + HttpConfig.getSchemePrefix() + nodeHttpAddr + \"\u0027\u003e\"\n          + nodeHttpAddr + \"\u003c/a\u003e\")\n        .append(\"\\\",\\\"\")\n\n        .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(HttpConfig.getSchemePrefix(), nodeHttpAddr, \"node\"\n            , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n            .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n          .append(\"\\\",\\\"\")\n\n        .append(ta.getStartTime()).append(\"\\\",\\\"\")\n        .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n        .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n          diag))).append(\"\\\"],\\n\");\n      }\n      //Remove the last comma and close off the array of arrays\n      if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n        attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n      }\n      attemptsTableData.append(\"]\");\n      html.script().$type(\"text/javascript\").\n      _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n\n      tbody._()._();\n\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "c2d6407070338f26baaa7d67c968501a987dfe1a": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4989. JSONify DataTables input data for Attempts page. Contributed by Ravi Prakash\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1445448 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/02/13 5:15 PM",
      "commitName": "c2d6407070338f26baaa7d67c968501a987dfe1a",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "09/08/12 3:52 PM",
      "commitNameOld": "4bca22005f48f426b9bc7cf36d435ead470a2590",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 187.1,
      "commitsBetweenForRepo": 972,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,62 +1,59 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n-      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n+      html.\n       table(\"#attempts\").\n         thead().\n           tr().\n             th(\".id\", \"Attempt\").\n             th(\".progress\", \"Progress\").\n             th(\".state\", \"State\").\n             th(\".node\", \"Node\").\n             th(\".logs\", \"Logs\").\n             th(\".tsh\", \"Started\").\n             th(\".tsh\", \"Finished\").\n             th(\".tsh\", \"Elapsed\").\n-            th(\".note\", \"Note\")._()._().\n-        tbody();\n+            th(\".note\", \"Note\")._()._();\n+      // Write all the data into a JavaScript array of arrays for JQuery\n+      // DataTables to display\n+      StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n+\n       for (TaskAttempt attempt : getTaskAttempts()) {\n         TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n-        String taid \u003d ta.getId();\n         String progress \u003d percent(ta.getProgress() / 100);\n-        ContainerId containerId \u003d ta.getAssignedContainerId();\n \n         String nodeHttpAddr \u003d ta.getNode();\n-        long startTime \u003d ta.getStartTime();\n-        long finishTime \u003d ta.getFinishTime();\n-        long elapsed \u003d ta.getElapsedTime();\n         String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n-        TR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e row \u003d tbody.tr();\n-        TD\u003cTR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e\u003e nodeTd \u003d row.\n-          td(\".id\", taid).\n-          td(\".progress\", progress).\n-          td(\".state\", ta.getState()).td();\n-        if (nodeHttpAddr \u003d\u003d null) {\n-          nodeTd._(\"N/A\");\n-        } else {\n-          nodeTd.\n-            a(\".nodelink\", url(HttpConfig.getSchemePrefix(),\n-                               nodeHttpAddr), nodeHttpAddr);\n-        }\n-        nodeTd._();\n-        if (containerId !\u003d null) {\n-          String containerIdStr \u003d ta.getAssignedContainerIdStr();\n-          row.td().\n-              a(\".logslink\", url(HttpConfig.getSchemePrefix(),\n-              nodeHttpAddr, \"node\", \"containerlogs\",\n-              containerIdStr, app.getJob().getUserName()), \"logs\")._();\n-        } else {\n-          row.td()._(\"N/A\")._();\n-        }\n+        attemptsTableData.append(\"[\\\"\")\n+        .append(ta.getId()).append(\"\\\",\\\"\")\n+        .append(progress).append(\"\\\",\\\"\")\n+        .append(ta.getState().toString()).append(\"\\\",\\\"\")\n \n-        row.\n-          td(\".ts\", Times.format(startTime)).\n-          td(\".ts\", Times.format(finishTime)).\n-          td(\".dt\", StringUtils.formatTime(elapsed)).\n-          td(\".note\", diag)._();\n+        .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n+          \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + HttpConfig.getSchemePrefix() + nodeHttpAddr + \"\u0027\u003e\"\n+          + nodeHttpAddr + \"\u003c/a\u003e\")\n+        .append(\"\\\",\\\"\")\n+\n+        .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n+          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(HttpConfig.getSchemePrefix(), nodeHttpAddr, \"node\"\n+            , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n+            .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n+          .append(\"\\\",\\\"\")\n+\n+        .append(ta.getStartTime()).append(\"\\\",\\\"\")\n+        .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n+        .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n+        .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n+          diag))).append(\"\\\"],\\n\");\n       }\n-      tbody._()._();\n+      //Remove the last comma and close off the array of arrays\n+      if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n+        attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n+      }\n+      attemptsTableData.append(\"]\");\n+      html.script().$type(\"text/javascript\").\n+      _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n      html.\n      table(\"#attempts\").\n        thead().\n          tr().\n            th(\".id\", \"Attempt\").\n            th(\".progress\", \"Progress\").\n            th(\".state\", \"State\").\n            th(\".node\", \"Node\").\n            th(\".logs\", \"Logs\").\n            th(\".tsh\", \"Started\").\n            th(\".tsh\", \"Finished\").\n            th(\".tsh\", \"Elapsed\").\n            th(\".note\", \"Note\")._()._();\n      // Write all the data into a JavaScript array of arrays for JQuery\n      // DataTables to display\n      StringBuilder attemptsTableData \u003d new StringBuilder(\"[\\n\");\n\n      for (TaskAttempt attempt : getTaskAttempts()) {\n        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n        String progress \u003d percent(ta.getProgress() / 100);\n\n        String nodeHttpAddr \u003d ta.getNode();\n        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n        attemptsTableData.append(\"[\\\"\")\n        .append(ta.getId()).append(\"\\\",\\\"\")\n        .append(progress).append(\"\\\",\\\"\")\n        .append(ta.getState().toString()).append(\"\\\",\\\"\")\n\n        .append(nodeHttpAddr \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027nodelink\u0027 href\u003d\u0027\" + HttpConfig.getSchemePrefix() + nodeHttpAddr + \"\u0027\u003e\"\n          + nodeHttpAddr + \"\u003c/a\u003e\")\n        .append(\"\\\",\\\"\")\n\n        .append(ta.getAssignedContainerId() \u003d\u003d null ? \"N/A\" :\n          \"\u003ca class\u003d\u0027logslink\u0027 href\u003d\u0027\" + url(HttpConfig.getSchemePrefix(), nodeHttpAddr, \"node\"\n            , \"containerlogs\", ta.getAssignedContainerIdStr(), app.getJob()\n            .getUserName()) + \"\u0027\u003elogs\u003c/a\u003e\")\n          .append(\"\\\",\\\"\")\n\n        .append(ta.getStartTime()).append(\"\\\",\\\"\")\n        .append(ta.getFinishTime()).append(\"\\\",\\\"\")\n        .append(ta.getElapsedTime()).append(\"\\\",\\\"\")\n        .append(StringEscapeUtils.escapeJavaScript(StringEscapeUtils.escapeHtml(\n          diag))).append(\"\\\"],\\n\");\n      }\n      //Remove the last comma and close off the array of arrays\n      if(attemptsTableData.charAt(attemptsTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n        attemptsTableData.delete(attemptsTableData.length()-2, attemptsTableData.length()-1);\n      }\n      attemptsTableData.append(\"]\");\n      html.script().$type(\"text/javascript\").\n      _(\"var attemptsTableData\u003d\" + attemptsTableData)._();\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "4bca22005f48f426b9bc7cf36d435ead470a2590": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8681. add support for HTTPS to the web UIs. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1371525 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/08/12 3:52 PM",
      "commitName": "4bca22005f48f426b9bc7cf36d435ead470a2590",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "08/06/12 8:47 AM",
      "commitNameOld": "9368be0e731ff5ffd6c0a88a471b91872cbc0fd2",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 62.3,
      "commitsBetweenForRepo": 318,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,60 +1,62 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#attempts\").\n         thead().\n           tr().\n             th(\".id\", \"Attempt\").\n             th(\".progress\", \"Progress\").\n             th(\".state\", \"State\").\n             th(\".node\", \"Node\").\n             th(\".logs\", \"Logs\").\n             th(\".tsh\", \"Started\").\n             th(\".tsh\", \"Finished\").\n             th(\".tsh\", \"Elapsed\").\n             th(\".note\", \"Note\")._()._().\n         tbody();\n       for (TaskAttempt attempt : getTaskAttempts()) {\n         TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n         String taid \u003d ta.getId();\n         String progress \u003d percent(ta.getProgress() / 100);\n         ContainerId containerId \u003d ta.getAssignedContainerId();\n \n         String nodeHttpAddr \u003d ta.getNode();\n         long startTime \u003d ta.getStartTime();\n         long finishTime \u003d ta.getFinishTime();\n         long elapsed \u003d ta.getElapsedTime();\n         String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n         TR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e row \u003d tbody.tr();\n         TD\u003cTR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e\u003e nodeTd \u003d row.\n           td(\".id\", taid).\n           td(\".progress\", progress).\n           td(\".state\", ta.getState()).td();\n         if (nodeHttpAddr \u003d\u003d null) {\n           nodeTd._(\"N/A\");\n         } else {\n           nodeTd.\n-            a(\".nodelink\", url(\"http://\", nodeHttpAddr), nodeHttpAddr);\n+            a(\".nodelink\", url(HttpConfig.getSchemePrefix(),\n+                               nodeHttpAddr), nodeHttpAddr);\n         }\n         nodeTd._();\n         if (containerId !\u003d null) {\n           String containerIdStr \u003d ta.getAssignedContainerIdStr();\n           row.td().\n-            a(\".logslink\", url(\"http://\", nodeHttpAddr, \"node\", \"containerlogs\",\n+              a(\".logslink\", url(HttpConfig.getSchemePrefix(),\n+              nodeHttpAddr, \"node\", \"containerlogs\",\n               containerIdStr, app.getJob().getUserName()), \"logs\")._();\n         } else {\n           row.td()._(\"N/A\")._();\n         }\n \n         row.\n           td(\".ts\", Times.format(startTime)).\n           td(\".ts\", Times.format(finishTime)).\n           td(\".dt\", StringUtils.formatTime(elapsed)).\n           td(\".note\", diag)._();\n       }\n       tbody._()._();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#attempts\").\n        thead().\n          tr().\n            th(\".id\", \"Attempt\").\n            th(\".progress\", \"Progress\").\n            th(\".state\", \"State\").\n            th(\".node\", \"Node\").\n            th(\".logs\", \"Logs\").\n            th(\".tsh\", \"Started\").\n            th(\".tsh\", \"Finished\").\n            th(\".tsh\", \"Elapsed\").\n            th(\".note\", \"Note\")._()._().\n        tbody();\n      for (TaskAttempt attempt : getTaskAttempts()) {\n        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n        String taid \u003d ta.getId();\n        String progress \u003d percent(ta.getProgress() / 100);\n        ContainerId containerId \u003d ta.getAssignedContainerId();\n\n        String nodeHttpAddr \u003d ta.getNode();\n        long startTime \u003d ta.getStartTime();\n        long finishTime \u003d ta.getFinishTime();\n        long elapsed \u003d ta.getElapsedTime();\n        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n        TR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e row \u003d tbody.tr();\n        TD\u003cTR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e\u003e nodeTd \u003d row.\n          td(\".id\", taid).\n          td(\".progress\", progress).\n          td(\".state\", ta.getState()).td();\n        if (nodeHttpAddr \u003d\u003d null) {\n          nodeTd._(\"N/A\");\n        } else {\n          nodeTd.\n            a(\".nodelink\", url(HttpConfig.getSchemePrefix(),\n                               nodeHttpAddr), nodeHttpAddr);\n        }\n        nodeTd._();\n        if (containerId !\u003d null) {\n          String containerIdStr \u003d ta.getAssignedContainerIdStr();\n          row.td().\n              a(\".logslink\", url(HttpConfig.getSchemePrefix(),\n              nodeHttpAddr, \"node\", \"containerlogs\",\n              containerIdStr, app.getJob().getUserName()), \"logs\")._();\n        } else {\n          row.td()._(\"N/A\")._();\n        }\n\n        row.\n          td(\".ts\", Times.format(startTime)).\n          td(\".ts\", Times.format(finishTime)).\n          td(\".dt\", StringUtils.formatTime(elapsed)).\n          td(\".note\", diag)._();\n      }\n      tbody._()._();\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "796e1a48ac03c1496728e0f3e1860a70b90c6edd": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4190. Improve web UI for task attempts userlog link (Tom Graves via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1329398 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/04/12 12:38 PM",
      "commitName": "796e1a48ac03c1496728e0f3e1860a70b90c6edd",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "12/04/12 11:39 AM",
      "commitNameOld": "ecb30a48c4533163ff5f3fdfcf3c4e71b5b2a45f",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 11.04,
      "commitsBetweenForRepo": 66,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,55 +1,60 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#attempts\").\n         thead().\n           tr().\n             th(\".id\", \"Attempt\").\n             th(\".progress\", \"Progress\").\n             th(\".state\", \"State\").\n-            th(\".node\", \"node\").\n+            th(\".node\", \"Node\").\n+            th(\".logs\", \"Logs\").\n             th(\".tsh\", \"Started\").\n             th(\".tsh\", \"Finished\").\n             th(\".tsh\", \"Elapsed\").\n             th(\".note\", \"Note\")._()._().\n         tbody();\n       for (TaskAttempt attempt : getTaskAttempts()) {\n         TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n         String taid \u003d ta.getId();\n         String progress \u003d percent(ta.getProgress() / 100);\n         ContainerId containerId \u003d ta.getAssignedContainerId();\n \n         String nodeHttpAddr \u003d ta.getNode();\n         long startTime \u003d ta.getStartTime();\n         long finishTime \u003d ta.getFinishTime();\n         long elapsed \u003d ta.getElapsedTime();\n         String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n-        TD\u003cTR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e\u003e nodeTd \u003d tbody.\n-          tr().\n-            td(\".id\", taid).\n-            td(\".progress\", progress).\n-            td(\".state\", ta.getState()).td();\n+        TR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e row \u003d tbody.tr();\n+        TD\u003cTR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e\u003e nodeTd \u003d row.\n+          td(\".id\", taid).\n+          td(\".progress\", progress).\n+          td(\".state\", ta.getState()).td();\n         if (nodeHttpAddr \u003d\u003d null) {\n           nodeTd._(\"N/A\");\n         } else {\n           nodeTd.\n             a(\".nodelink\", url(\"http://\", nodeHttpAddr), nodeHttpAddr);\n         }\n+        nodeTd._();\n         if (containerId !\u003d null) {\n           String containerIdStr \u003d ta.getAssignedContainerIdStr();\n-          nodeTd._(\" \").\n+          row.td().\n             a(\".logslink\", url(\"http://\", nodeHttpAddr, \"node\", \"containerlogs\",\n-              containerIdStr, app.getJob().getUserName()), \"logs\");\n+              containerIdStr, app.getJob().getUserName()), \"logs\")._();\n+        } else {\n+          row.td()._(\"N/A\")._();\n         }\n-        nodeTd._().\n+\n+        row.\n           td(\".ts\", Times.format(startTime)).\n           td(\".ts\", Times.format(finishTime)).\n           td(\".dt\", StringUtils.formatTime(elapsed)).\n           td(\".note\", diag)._();\n       }\n       tbody._()._();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#attempts\").\n        thead().\n          tr().\n            th(\".id\", \"Attempt\").\n            th(\".progress\", \"Progress\").\n            th(\".state\", \"State\").\n            th(\".node\", \"Node\").\n            th(\".logs\", \"Logs\").\n            th(\".tsh\", \"Started\").\n            th(\".tsh\", \"Finished\").\n            th(\".tsh\", \"Elapsed\").\n            th(\".note\", \"Note\")._()._().\n        tbody();\n      for (TaskAttempt attempt : getTaskAttempts()) {\n        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n        String taid \u003d ta.getId();\n        String progress \u003d percent(ta.getProgress() / 100);\n        ContainerId containerId \u003d ta.getAssignedContainerId();\n\n        String nodeHttpAddr \u003d ta.getNode();\n        long startTime \u003d ta.getStartTime();\n        long finishTime \u003d ta.getFinishTime();\n        long elapsed \u003d ta.getElapsedTime();\n        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n        TR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e row \u003d tbody.tr();\n        TD\u003cTR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e\u003e nodeTd \u003d row.\n          td(\".id\", taid).\n          td(\".progress\", progress).\n          td(\".state\", ta.getState()).td();\n        if (nodeHttpAddr \u003d\u003d null) {\n          nodeTd._(\"N/A\");\n        } else {\n          nodeTd.\n            a(\".nodelink\", url(\"http://\", nodeHttpAddr), nodeHttpAddr);\n        }\n        nodeTd._();\n        if (containerId !\u003d null) {\n          String containerIdStr \u003d ta.getAssignedContainerIdStr();\n          row.td().\n            a(\".logslink\", url(\"http://\", nodeHttpAddr, \"node\", \"containerlogs\",\n              containerIdStr, app.getJob().getUserName()), \"logs\")._();\n        } else {\n          row.td()._(\"N/A\")._();\n        }\n\n        row.\n          td(\".ts\", Times.format(startTime)).\n          td(\".ts\", Times.format(finishTime)).\n          td(\".dt\", StringUtils.formatTime(elapsed)).\n          td(\".note\", diag)._();\n      }\n      tbody._()._();\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "ecb30a48c4533163ff5f3fdfcf3c4e71b5b2a45f": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4050. For tasks without assigned containers, changes the node text on the UI to N/A instead of a link to null. (Contributed by Bhallamudi Venkata Siva Kamesh)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1325435 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/04/12 11:39 AM",
      "commitName": "ecb30a48c4533163ff5f3fdfcf3c4e71b5b2a45f",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "30/01/12 8:53 PM",
      "commitNameOld": "443d8f6c0bf4008ef0e93accd2646148881d137c",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 72.57,
      "commitsBetweenForRepo": 597,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,51 +1,55 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#attempts\").\n         thead().\n           tr().\n             th(\".id\", \"Attempt\").\n             th(\".progress\", \"Progress\").\n             th(\".state\", \"State\").\n             th(\".node\", \"node\").\n             th(\".tsh\", \"Started\").\n             th(\".tsh\", \"Finished\").\n             th(\".tsh\", \"Elapsed\").\n             th(\".note\", \"Note\")._()._().\n         tbody();\n       for (TaskAttempt attempt : getTaskAttempts()) {\n         TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n         String taid \u003d ta.getId();\n         String progress \u003d percent(ta.getProgress() / 100);\n         ContainerId containerId \u003d ta.getAssignedContainerId();\n \n         String nodeHttpAddr \u003d ta.getNode();\n         long startTime \u003d ta.getStartTime();\n         long finishTime \u003d ta.getFinishTime();\n         long elapsed \u003d ta.getElapsedTime();\n         String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n         TD\u003cTR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e\u003e nodeTd \u003d tbody.\n           tr().\n             td(\".id\", taid).\n             td(\".progress\", progress).\n-            td(\".state\", ta.getState()).\n-            td().\n-              a(\".nodelink\", url(\"http://\", nodeHttpAddr), nodeHttpAddr);\n+            td(\".state\", ta.getState()).td();\n+        if (nodeHttpAddr \u003d\u003d null) {\n+          nodeTd._(\"N/A\");\n+        } else {\n+          nodeTd.\n+            a(\".nodelink\", url(\"http://\", nodeHttpAddr), nodeHttpAddr);\n+        }\n         if (containerId !\u003d null) {\n           String containerIdStr \u003d ta.getAssignedContainerIdStr();\n           nodeTd._(\" \").\n             a(\".logslink\", url(\"http://\", nodeHttpAddr, \"node\", \"containerlogs\",\n               containerIdStr, app.getJob().getUserName()), \"logs\");\n         }\n         nodeTd._().\n           td(\".ts\", Times.format(startTime)).\n           td(\".ts\", Times.format(finishTime)).\n           td(\".dt\", StringUtils.formatTime(elapsed)).\n           td(\".note\", diag)._();\n       }\n       tbody._()._();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#attempts\").\n        thead().\n          tr().\n            th(\".id\", \"Attempt\").\n            th(\".progress\", \"Progress\").\n            th(\".state\", \"State\").\n            th(\".node\", \"node\").\n            th(\".tsh\", \"Started\").\n            th(\".tsh\", \"Finished\").\n            th(\".tsh\", \"Elapsed\").\n            th(\".note\", \"Note\")._()._().\n        tbody();\n      for (TaskAttempt attempt : getTaskAttempts()) {\n        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n        String taid \u003d ta.getId();\n        String progress \u003d percent(ta.getProgress() / 100);\n        ContainerId containerId \u003d ta.getAssignedContainerId();\n\n        String nodeHttpAddr \u003d ta.getNode();\n        long startTime \u003d ta.getStartTime();\n        long finishTime \u003d ta.getFinishTime();\n        long elapsed \u003d ta.getElapsedTime();\n        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n        TD\u003cTR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e\u003e nodeTd \u003d tbody.\n          tr().\n            td(\".id\", taid).\n            td(\".progress\", progress).\n            td(\".state\", ta.getState()).td();\n        if (nodeHttpAddr \u003d\u003d null) {\n          nodeTd._(\"N/A\");\n        } else {\n          nodeTd.\n            a(\".nodelink\", url(\"http://\", nodeHttpAddr), nodeHttpAddr);\n        }\n        if (containerId !\u003d null) {\n          String containerIdStr \u003d ta.getAssignedContainerIdStr();\n          nodeTd._(\" \").\n            a(\".logslink\", url(\"http://\", nodeHttpAddr, \"node\", \"containerlogs\",\n              containerIdStr, app.getJob().getUserName()), \"logs\");\n        }\n        nodeTd._().\n          td(\".ts\", Times.format(startTime)).\n          td(\".ts\", Times.format(finishTime)).\n          td(\".dt\", StringUtils.formatTime(elapsed)).\n          td(\".note\", diag)._();\n      }\n      tbody._()._();\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "27/11/11 3:56 PM",
      "commitNameOld": "cc4a468113831e502b26c571d04e31b475bca5c1",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 15.96,
      "commitsBetweenForRepo": 101,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,51 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#attempts\").\n         thead().\n           tr().\n             th(\".id\", \"Attempt\").\n             th(\".progress\", \"Progress\").\n             th(\".state\", \"State\").\n             th(\".node\", \"node\").\n             th(\".tsh\", \"Started\").\n             th(\".tsh\", \"Finished\").\n             th(\".tsh\", \"Elapsed\").\n             th(\".note\", \"Note\")._()._().\n         tbody();\n-      for (TaskAttempt ta : getTaskAttempts()) {\n-        String taid \u003d MRApps.toString(ta.getID());\n-        String progress \u003d percent(ta.getProgress());\n-        ContainerId containerId \u003d ta.getAssignedContainerID();\n+      for (TaskAttempt attempt : getTaskAttempts()) {\n+        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n+        String taid \u003d ta.getId();\n+        String progress \u003d percent(ta.getProgress() / 100);\n+        ContainerId containerId \u003d ta.getAssignedContainerId();\n \n-        String nodeHttpAddr \u003d ta.getNodeHttpAddress();\n-        long startTime \u003d ta.getLaunchTime();\n+        String nodeHttpAddr \u003d ta.getNode();\n+        long startTime \u003d ta.getStartTime();\n         long finishTime \u003d ta.getFinishTime();\n-        long elapsed \u003d Times.elapsed(startTime, finishTime);\n+        long elapsed \u003d ta.getElapsedTime();\n+        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n         TD\u003cTR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e\u003e nodeTd \u003d tbody.\n           tr().\n             td(\".id\", taid).\n             td(\".progress\", progress).\n-            td(\".state\", ta.getState().toString()).\n+            td(\".state\", ta.getState()).\n             td().\n               a(\".nodelink\", url(\"http://\", nodeHttpAddr), nodeHttpAddr);\n         if (containerId !\u003d null) {\n-          String containerIdStr \u003d ConverterUtils.toString(containerId);\n+          String containerIdStr \u003d ta.getAssignedContainerIdStr();\n           nodeTd._(\" \").\n             a(\".logslink\", url(\"http://\", nodeHttpAddr, \"node\", \"containerlogs\",\n               containerIdStr, app.getJob().getUserName()), \"logs\");\n         }\n         nodeTd._().\n           td(\".ts\", Times.format(startTime)).\n           td(\".ts\", Times.format(finishTime)).\n           td(\".dt\", StringUtils.formatTime(elapsed)).\n-          td(\".note\", Joiner.on(\u0027\\n\u0027).join(ta.getDiagnostics()))._();\n+          td(\".note\", diag)._();\n       }\n       tbody._()._();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#attempts\").\n        thead().\n          tr().\n            th(\".id\", \"Attempt\").\n            th(\".progress\", \"Progress\").\n            th(\".state\", \"State\").\n            th(\".node\", \"node\").\n            th(\".tsh\", \"Started\").\n            th(\".tsh\", \"Finished\").\n            th(\".tsh\", \"Elapsed\").\n            th(\".note\", \"Note\")._()._().\n        tbody();\n      for (TaskAttempt attempt : getTaskAttempts()) {\n        TaskAttemptInfo ta \u003d new TaskAttemptInfo(attempt, true);\n        String taid \u003d ta.getId();\n        String progress \u003d percent(ta.getProgress() / 100);\n        ContainerId containerId \u003d ta.getAssignedContainerId();\n\n        String nodeHttpAddr \u003d ta.getNode();\n        long startTime \u003d ta.getStartTime();\n        long finishTime \u003d ta.getFinishTime();\n        long elapsed \u003d ta.getElapsedTime();\n        String diag \u003d ta.getNote() \u003d\u003d null ? \"\" : ta.getNote();\n        TD\u003cTR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e\u003e nodeTd \u003d tbody.\n          tr().\n            td(\".id\", taid).\n            td(\".progress\", progress).\n            td(\".state\", ta.getState()).\n            td().\n              a(\".nodelink\", url(\"http://\", nodeHttpAddr), nodeHttpAddr);\n        if (containerId !\u003d null) {\n          String containerIdStr \u003d ta.getAssignedContainerIdStr();\n          nodeTd._(\" \").\n            a(\".logslink\", url(\"http://\", nodeHttpAddr, \"node\", \"containerlogs\",\n              containerIdStr, app.getJob().getUserName()), \"logs\");\n        }\n        nodeTd._().\n          td(\".ts\", Times.format(startTime)).\n          td(\".ts\", Times.format(finishTime)).\n          td(\".dt\", StringUtils.formatTime(elapsed)).\n          td(\".note\", diag)._();\n      }\n      tbody._()._();\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "670fa24b48acb407c22fbfdde87ae3123dcbf449": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2989. Modified JobHistory to link to task and AM logs from the JobHistoryServer. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 11:45 PM",
      "commitName": "670fa24b48acb407c22fbfdde87ae3123dcbf449",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "29/09/11 1:08 AM",
      "commitNameOld": "71886657f89f64b289c6f426bd9f557ed0e53590",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 28.94,
      "commitsBetweenForRepo": 253,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,49 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#attempts\").\n         thead().\n           tr().\n             th(\".id\", \"Attempt\").\n             th(\".progress\", \"Progress\").\n             th(\".state\", \"State\").\n             th(\".node\", \"node\").\n             th(\".tsh\", \"Started\").\n             th(\".tsh\", \"Finished\").\n             th(\".tsh\", \"Elapsed\").\n             th(\".note\", \"Note\")._()._().\n         tbody();\n       for (TaskAttempt ta : getTaskAttempts()) {\n         String taid \u003d MRApps.toString(ta.getID());\n         String progress \u003d percent(ta.getProgress());\n         ContainerId containerId \u003d ta.getAssignedContainerID();\n \n         String nodeHttpAddr \u003d ta.getNodeHttpAddress();\n         long startTime \u003d ta.getLaunchTime();\n         long finishTime \u003d ta.getFinishTime();\n         long elapsed \u003d Times.elapsed(startTime, finishTime);\n         TD\u003cTR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e\u003e nodeTd \u003d tbody.\n           tr().\n             td(\".id\", taid).\n             td(\".progress\", progress).\n             td(\".state\", ta.getState().toString()).\n             td().\n               a(\".nodelink\", url(\"http://\", nodeHttpAddr), nodeHttpAddr);\n         if (containerId !\u003d null) {\n           String containerIdStr \u003d ConverterUtils.toString(containerId);\n           nodeTd._(\" \").\n             a(\".logslink\", url(\"http://\", nodeHttpAddr, \"node\", \"containerlogs\",\n-              containerIdStr), \"logs\");\n+              containerIdStr, app.getJob().getUserName()), \"logs\");\n         }\n         nodeTd._().\n           td(\".ts\", Times.format(startTime)).\n           td(\".ts\", Times.format(finishTime)).\n           td(\".dt\", StringUtils.formatTime(elapsed)).\n           td(\".note\", Joiner.on(\u0027\\n\u0027).join(ta.getDiagnostics()))._();\n       }\n       tbody._()._();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#attempts\").\n        thead().\n          tr().\n            th(\".id\", \"Attempt\").\n            th(\".progress\", \"Progress\").\n            th(\".state\", \"State\").\n            th(\".node\", \"node\").\n            th(\".tsh\", \"Started\").\n            th(\".tsh\", \"Finished\").\n            th(\".tsh\", \"Elapsed\").\n            th(\".note\", \"Note\")._()._().\n        tbody();\n      for (TaskAttempt ta : getTaskAttempts()) {\n        String taid \u003d MRApps.toString(ta.getID());\n        String progress \u003d percent(ta.getProgress());\n        ContainerId containerId \u003d ta.getAssignedContainerID();\n\n        String nodeHttpAddr \u003d ta.getNodeHttpAddress();\n        long startTime \u003d ta.getLaunchTime();\n        long finishTime \u003d ta.getFinishTime();\n        long elapsed \u003d Times.elapsed(startTime, finishTime);\n        TD\u003cTR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e\u003e nodeTd \u003d tbody.\n          tr().\n            td(\".id\", taid).\n            td(\".progress\", progress).\n            td(\".state\", ta.getState().toString()).\n            td().\n              a(\".nodelink\", url(\"http://\", nodeHttpAddr), nodeHttpAddr);\n        if (containerId !\u003d null) {\n          String containerIdStr \u003d ConverterUtils.toString(containerId);\n          nodeTd._(\" \").\n            a(\".logslink\", url(\"http://\", nodeHttpAddr, \"node\", \"containerlogs\",\n              containerIdStr, app.getJob().getUserName()), \"logs\");\n        }\n        nodeTd._().\n          td(\".ts\", Times.format(startTime)).\n          td(\".ts\", Times.format(finishTime)).\n          td(\".dt\", StringUtils.formatTime(elapsed)).\n          td(\".note\", Joiner.on(\u0027\\n\u0027).join(ta.getDiagnostics()))._();\n      }\n      tbody._()._();\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "5f6adcf396b78934d7da2bba0d052038ff962f26": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3021. Change base urls for RM web-ui. Contributed by Thomas Graves.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1176681 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/11 6:23 PM",
      "commitName": "5f6adcf396b78934d7da2bba0d052038ff962f26",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "08/09/11 1:59 PM",
      "commitNameOld": "b3c9c3c182f1fead0f47ef560e90fcc86042ea7f",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 19.18,
      "commitsBetweenForRepo": 124,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,49 @@\n     protected void render(Block html) {\n       if (!isValidRequest()) {\n         html.\n           h2($(TITLE));\n         return;\n       }\n       TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#attempts\").\n         thead().\n           tr().\n             th(\".id\", \"Attempt\").\n             th(\".progress\", \"Progress\").\n             th(\".state\", \"State\").\n             th(\".node\", \"node\").\n             th(\".tsh\", \"Started\").\n             th(\".tsh\", \"Finished\").\n             th(\".tsh\", \"Elapsed\").\n             th(\".note\", \"Note\")._()._().\n         tbody();\n       for (TaskAttempt ta : getTaskAttempts()) {\n         String taid \u003d MRApps.toString(ta.getID());\n         String progress \u003d percent(ta.getProgress());\n         ContainerId containerId \u003d ta.getAssignedContainerID();\n \n         String nodeHttpAddr \u003d ta.getNodeHttpAddress();\n         long startTime \u003d ta.getLaunchTime();\n         long finishTime \u003d ta.getFinishTime();\n         long elapsed \u003d Times.elapsed(startTime, finishTime);\n         TD\u003cTR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e\u003e nodeTd \u003d tbody.\n           tr().\n             td(\".id\", taid).\n             td(\".progress\", progress).\n             td(\".state\", ta.getState().toString()).\n             td().\n               a(\".nodelink\", url(\"http://\", nodeHttpAddr), nodeHttpAddr);\n         if (containerId !\u003d null) {\n           String containerIdStr \u003d ConverterUtils.toString(containerId);\n           nodeTd._(\" \").\n-            a(\".logslink\", url(\"http://\", nodeHttpAddr, \"yarn\", \"containerlogs\",\n+            a(\".logslink\", url(\"http://\", nodeHttpAddr, \"node\", \"containerlogs\",\n               containerIdStr), \"logs\");\n         }\n         nodeTd._().\n           td(\".ts\", Times.format(startTime)).\n           td(\".ts\", Times.format(finishTime)).\n           td(\".dt\", StringUtils.formatTime(elapsed)).\n           td(\".note\", Joiner.on(\u0027\\n\u0027).join(ta.getDiagnostics()))._();\n       }\n       tbody._()._();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#attempts\").\n        thead().\n          tr().\n            th(\".id\", \"Attempt\").\n            th(\".progress\", \"Progress\").\n            th(\".state\", \"State\").\n            th(\".node\", \"node\").\n            th(\".tsh\", \"Started\").\n            th(\".tsh\", \"Finished\").\n            th(\".tsh\", \"Elapsed\").\n            th(\".note\", \"Note\")._()._().\n        tbody();\n      for (TaskAttempt ta : getTaskAttempts()) {\n        String taid \u003d MRApps.toString(ta.getID());\n        String progress \u003d percent(ta.getProgress());\n        ContainerId containerId \u003d ta.getAssignedContainerID();\n\n        String nodeHttpAddr \u003d ta.getNodeHttpAddress();\n        long startTime \u003d ta.getLaunchTime();\n        long finishTime \u003d ta.getFinishTime();\n        long elapsed \u003d Times.elapsed(startTime, finishTime);\n        TD\u003cTR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e\u003e nodeTd \u003d tbody.\n          tr().\n            td(\".id\", taid).\n            td(\".progress\", progress).\n            td(\".state\", ta.getState().toString()).\n            td().\n              a(\".nodelink\", url(\"http://\", nodeHttpAddr), nodeHttpAddr);\n        if (containerId !\u003d null) {\n          String containerIdStr \u003d ConverterUtils.toString(containerId);\n          nodeTd._(\" \").\n            a(\".logslink\", url(\"http://\", nodeHttpAddr, \"node\", \"containerlogs\",\n              containerIdStr), \"logs\");\n        }\n        nodeTd._().\n          td(\".ts\", Times.format(startTime)).\n          td(\".ts\", Times.format(finishTime)).\n          td(\".dt\", StringUtils.formatTime(elapsed)).\n          td(\".note\", Joiner.on(\u0027\\n\u0027).join(ta.getDiagnostics()))._();\n      }\n      tbody._()._();\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#attempts\").\n        thead().\n          tr().\n            th(\".id\", \"Attempt\").\n            th(\".progress\", \"Progress\").\n            th(\".state\", \"State\").\n            th(\".node\", \"node\").\n            th(\".tsh\", \"Started\").\n            th(\".tsh\", \"Finished\").\n            th(\".tsh\", \"Elapsed\").\n            th(\".note\", \"Note\")._()._().\n        tbody();\n      for (TaskAttempt ta : getTaskAttempts()) {\n        String taid \u003d MRApps.toString(ta.getID());\n        String progress \u003d percent(ta.getProgress());\n        ContainerId containerId \u003d ta.getAssignedContainerID();\n\n        String nodeHttpAddr \u003d ta.getNodeHttpAddress();\n        long startTime \u003d ta.getLaunchTime();\n        long finishTime \u003d ta.getFinishTime();\n        long elapsed \u003d Times.elapsed(startTime, finishTime);\n        TD\u003cTR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e\u003e nodeTd \u003d tbody.\n          tr().\n            td(\".id\", taid).\n            td(\".progress\", progress).\n            td(\".state\", ta.getState().toString()).\n            td().\n              a(\".nodelink\", url(\"http://\", nodeHttpAddr), nodeHttpAddr);\n        if (containerId !\u003d null) {\n          String containerIdStr \u003d ConverterUtils.toString(containerId);\n          nodeTd._(\" \").\n            a(\".logslink\", url(\"http://\", nodeHttpAddr, \"yarn\", \"containerlogs\",\n              containerIdStr), \"logs\");\n        }\n        nodeTd._().\n          td(\".ts\", Times.format(startTime)).\n          td(\".ts\", Times.format(finishTime)).\n          td(\".dt\", StringUtils.formatTime(elapsed)).\n          td(\".note\", Joiner.on(\u0027\\n\u0027).join(ta.getDiagnostics()))._();\n      }\n      tbody._()._();\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,49 @@\n+    protected void render(Block html) {\n+      if (!isValidRequest()) {\n+        html.\n+          h2($(TITLE));\n+        return;\n+      }\n+      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n+      table(\"#attempts\").\n+        thead().\n+          tr().\n+            th(\".id\", \"Attempt\").\n+            th(\".progress\", \"Progress\").\n+            th(\".state\", \"State\").\n+            th(\".node\", \"node\").\n+            th(\".tsh\", \"Started\").\n+            th(\".tsh\", \"Finished\").\n+            th(\".tsh\", \"Elapsed\").\n+            th(\".note\", \"Note\")._()._().\n+        tbody();\n+      for (TaskAttempt ta : getTaskAttempts()) {\n+        String taid \u003d MRApps.toString(ta.getID());\n+        String progress \u003d percent(ta.getProgress());\n+        ContainerId containerId \u003d ta.getAssignedContainerID();\n+\n+        String nodeHttpAddr \u003d ta.getNodeHttpAddress();\n+        long startTime \u003d ta.getLaunchTime();\n+        long finishTime \u003d ta.getFinishTime();\n+        long elapsed \u003d Times.elapsed(startTime, finishTime);\n+        TD\u003cTR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e\u003e nodeTd \u003d tbody.\n+          tr().\n+            td(\".id\", taid).\n+            td(\".progress\", progress).\n+            td(\".state\", ta.getState().toString()).\n+            td().\n+              a(\".nodelink\", url(\"http://\", nodeHttpAddr), nodeHttpAddr);\n+        if (containerId !\u003d null) {\n+          String containerIdStr \u003d ConverterUtils.toString(containerId);\n+          nodeTd._(\" \").\n+            a(\".logslink\", url(\"http://\", nodeHttpAddr, \"yarn\", \"containerlogs\",\n+              containerIdStr), \"logs\");\n+        }\n+        nodeTd._().\n+          td(\".ts\", Times.format(startTime)).\n+          td(\".ts\", Times.format(finishTime)).\n+          td(\".dt\", StringUtils.formatTime(elapsed)).\n+          td(\".note\", Joiner.on(\u0027\\n\u0027).join(ta.getDiagnostics()))._();\n+      }\n+      tbody._()._();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      if (!isValidRequest()) {\n        html.\n          h2($(TITLE));\n        return;\n      }\n      TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#attempts\").\n        thead().\n          tr().\n            th(\".id\", \"Attempt\").\n            th(\".progress\", \"Progress\").\n            th(\".state\", \"State\").\n            th(\".node\", \"node\").\n            th(\".tsh\", \"Started\").\n            th(\".tsh\", \"Finished\").\n            th(\".tsh\", \"Elapsed\").\n            th(\".note\", \"Note\")._()._().\n        tbody();\n      for (TaskAttempt ta : getTaskAttempts()) {\n        String taid \u003d MRApps.toString(ta.getID());\n        String progress \u003d percent(ta.getProgress());\n        ContainerId containerId \u003d ta.getAssignedContainerID();\n\n        String nodeHttpAddr \u003d ta.getNodeHttpAddress();\n        long startTime \u003d ta.getLaunchTime();\n        long finishTime \u003d ta.getFinishTime();\n        long elapsed \u003d Times.elapsed(startTime, finishTime);\n        TD\u003cTR\u003cTBODY\u003cTABLE\u003cHamlet\u003e\u003e\u003e\u003e nodeTd \u003d tbody.\n          tr().\n            td(\".id\", taid).\n            td(\".progress\", progress).\n            td(\".state\", ta.getState().toString()).\n            td().\n              a(\".nodelink\", url(\"http://\", nodeHttpAddr), nodeHttpAddr);\n        if (containerId !\u003d null) {\n          String containerIdStr \u003d ConverterUtils.toString(containerId);\n          nodeTd._(\" \").\n            a(\".logslink\", url(\"http://\", nodeHttpAddr, \"yarn\", \"containerlogs\",\n              containerIdStr), \"logs\");\n        }\n        nodeTd._().\n          td(\".ts\", Times.format(startTime)).\n          td(\".ts\", Times.format(finishTime)).\n          td(\".dt\", StringUtils.formatTime(elapsed)).\n          td(\".note\", Joiner.on(\u0027\\n\u0027).join(ta.getDiagnostics()))._();\n      }\n      tbody._()._();\n    }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TaskPage.java"
    }
  }
}