{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EncryptionZoneManager.java",
  "functionName": "getEncryptionZoneForPath",
  "functionId": "getEncryptionZoneForPath___iip-INodesInPath",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
  "functionStartLine": 391,
  "functionEndLine": 431,
  "numCommitsSeen": 596,
  "timeTaken": 6666,
  "changeHistory": [
    "2c6cfad5a31ca4d9126ecd2b3c43cca8543aacb4",
    "a68b5b31cf846c0fc94c430bafd07a9bca369234",
    "6de9213df111a9a4ed875db995d67af72d08a798",
    "5776a41da08af653206bb94d7c76c9c4dcce059a",
    "b57ec165674143daf4fa50378446a9f831d3b9d3",
    "d79f27b429410daa6770a51867d7ecea728dff89",
    "ceed0f6c46736323bd1b077125ff4e217c649208",
    "c38665282884122d3c82b6f68376cce036aee748",
    "51b97a1396a4cb32aaa08b451985a6af236c0c4b",
    "31617733aca2025cff1ffb841a533a5b1de016a5"
  ],
  "changeHistoryShort": {
    "2c6cfad5a31ca4d9126ecd2b3c43cca8543aacb4": "Ymultichange(Yexceptionschange,Ybodychange)",
    "a68b5b31cf846c0fc94c430bafd07a9bca369234": "Ybodychange",
    "6de9213df111a9a4ed875db995d67af72d08a798": "Ybodychange",
    "5776a41da08af653206bb94d7c76c9c4dcce059a": "Ybodychange",
    "b57ec165674143daf4fa50378446a9f831d3b9d3": "Ybodychange",
    "d79f27b429410daa6770a51867d7ecea728dff89": "Ybodychange",
    "ceed0f6c46736323bd1b077125ff4e217c649208": "Ymovefromfile",
    "c38665282884122d3c82b6f68376cce036aee748": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange,Yparameterchange)",
    "51b97a1396a4cb32aaa08b451985a6af236c0c4b": "Ybodychange",
    "31617733aca2025cff1ffb841a533a5b1de016a5": "Ymodifierchange"
  },
  "changeHistoryDetails": {
    "2c6cfad5a31ca4d9126ecd2b3c43cca8543aacb4": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-13087. Snapshotted encryption zone information should be immutable. Contributed by LiXin Ge.\n",
      "commitDate": "29/03/18 3:46 PM",
      "commitName": "2c6cfad5a31ca4d9126ecd2b3c43cca8543aacb4",
      "commitAuthor": "Xiao Chen",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-13087. Snapshotted encryption zone information should be immutable. Contributed by LiXin Ge.\n",
          "commitDate": "29/03/18 3:46 PM",
          "commitName": "2c6cfad5a31ca4d9126ecd2b3c43cca8543aacb4",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "22/02/18 11:32 AM",
          "commitNameOld": "84a1321f6aa0af6895564a7c47f8f264656f0294",
          "commitAuthorOld": "Xiaoyu Yao",
          "daysBetweenCommits": 35.13,
          "commitsBetweenForRepo": 385,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,41 @@\n-  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n+  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip)\n+      throws  IOException{\n     assert dir.hasReadLock();\n     Preconditions.checkNotNull(iip);\n     if (!hasCreatedEncryptionZone()) {\n       return null;\n     }\n+\n+    int snapshotID \u003d iip.getPathSnapshotId();\n     for (int i \u003d iip.length() - 1; i \u003e\u003d 0; i--) {\n       final INode inode \u003d iip.getINode(i);\n-      if (inode !\u003d null) {\n+      if (inode \u003d\u003d null || !inode.isDirectory()) {\n+        //not found or not a directory, encryption zone is supported on\n+        //directory only.\n+        continue;\n+      }\n+      if (snapshotID \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n         final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n         if (ezi !\u003d null) {\n           return ezi;\n         }\n+      } else {\n+        XAttr xAttr \u003d FSDirXAttrOp.unprotectedGetXAttrByPrefixedName(\n+            inode, snapshotID, CRYPTO_XATTR_ENCRYPTION_ZONE);\n+        if (xAttr !\u003d null) {\n+          try {\n+            final HdfsProtos.ZoneEncryptionInfoProto ezProto \u003d\n+                HdfsProtos.ZoneEncryptionInfoProto.parseFrom(xAttr.getValue());\n+            return new EncryptionZoneInt(\n+                inode.getId(), PBHelperClient.convert(ezProto.getSuite()),\n+                PBHelperClient.convert(ezProto.getCryptoProtocolVersion()),\n+                ezProto.getKeyName());\n+          } catch (InvalidProtocolBufferException e) {\n+            throw new IOException(\"Could not parse encryption zone for inode \"\n+                + iip.getPath(), e);\n+          }\n+        }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip)\n      throws  IOException{\n    assert dir.hasReadLock();\n    Preconditions.checkNotNull(iip);\n    if (!hasCreatedEncryptionZone()) {\n      return null;\n    }\n\n    int snapshotID \u003d iip.getPathSnapshotId();\n    for (int i \u003d iip.length() - 1; i \u003e\u003d 0; i--) {\n      final INode inode \u003d iip.getINode(i);\n      if (inode \u003d\u003d null || !inode.isDirectory()) {\n        //not found or not a directory, encryption zone is supported on\n        //directory only.\n        continue;\n      }\n      if (snapshotID \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n        final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n        if (ezi !\u003d null) {\n          return ezi;\n        }\n      } else {\n        XAttr xAttr \u003d FSDirXAttrOp.unprotectedGetXAttrByPrefixedName(\n            inode, snapshotID, CRYPTO_XATTR_ENCRYPTION_ZONE);\n        if (xAttr !\u003d null) {\n          try {\n            final HdfsProtos.ZoneEncryptionInfoProto ezProto \u003d\n                HdfsProtos.ZoneEncryptionInfoProto.parseFrom(xAttr.getValue());\n            return new EncryptionZoneInt(\n                inode.getId(), PBHelperClient.convert(ezProto.getSuite()),\n                PBHelperClient.convert(ezProto.getCryptoProtocolVersion()),\n                ezProto.getKeyName());\n          } catch (InvalidProtocolBufferException e) {\n            throw new IOException(\"Could not parse encryption zone for inode \"\n                + iip.getPath(), e);\n          }\n        }\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13087. Snapshotted encryption zone information should be immutable. Contributed by LiXin Ge.\n",
          "commitDate": "29/03/18 3:46 PM",
          "commitName": "2c6cfad5a31ca4d9126ecd2b3c43cca8543aacb4",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "22/02/18 11:32 AM",
          "commitNameOld": "84a1321f6aa0af6895564a7c47f8f264656f0294",
          "commitAuthorOld": "Xiaoyu Yao",
          "daysBetweenCommits": 35.13,
          "commitsBetweenForRepo": 385,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,41 @@\n-  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n+  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip)\n+      throws  IOException{\n     assert dir.hasReadLock();\n     Preconditions.checkNotNull(iip);\n     if (!hasCreatedEncryptionZone()) {\n       return null;\n     }\n+\n+    int snapshotID \u003d iip.getPathSnapshotId();\n     for (int i \u003d iip.length() - 1; i \u003e\u003d 0; i--) {\n       final INode inode \u003d iip.getINode(i);\n-      if (inode !\u003d null) {\n+      if (inode \u003d\u003d null || !inode.isDirectory()) {\n+        //not found or not a directory, encryption zone is supported on\n+        //directory only.\n+        continue;\n+      }\n+      if (snapshotID \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n         final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n         if (ezi !\u003d null) {\n           return ezi;\n         }\n+      } else {\n+        XAttr xAttr \u003d FSDirXAttrOp.unprotectedGetXAttrByPrefixedName(\n+            inode, snapshotID, CRYPTO_XATTR_ENCRYPTION_ZONE);\n+        if (xAttr !\u003d null) {\n+          try {\n+            final HdfsProtos.ZoneEncryptionInfoProto ezProto \u003d\n+                HdfsProtos.ZoneEncryptionInfoProto.parseFrom(xAttr.getValue());\n+            return new EncryptionZoneInt(\n+                inode.getId(), PBHelperClient.convert(ezProto.getSuite()),\n+                PBHelperClient.convert(ezProto.getCryptoProtocolVersion()),\n+                ezProto.getKeyName());\n+          } catch (InvalidProtocolBufferException e) {\n+            throw new IOException(\"Could not parse encryption zone for inode \"\n+                + iip.getPath(), e);\n+          }\n+        }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip)\n      throws  IOException{\n    assert dir.hasReadLock();\n    Preconditions.checkNotNull(iip);\n    if (!hasCreatedEncryptionZone()) {\n      return null;\n    }\n\n    int snapshotID \u003d iip.getPathSnapshotId();\n    for (int i \u003d iip.length() - 1; i \u003e\u003d 0; i--) {\n      final INode inode \u003d iip.getINode(i);\n      if (inode \u003d\u003d null || !inode.isDirectory()) {\n        //not found or not a directory, encryption zone is supported on\n        //directory only.\n        continue;\n      }\n      if (snapshotID \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n        final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n        if (ezi !\u003d null) {\n          return ezi;\n        }\n      } else {\n        XAttr xAttr \u003d FSDirXAttrOp.unprotectedGetXAttrByPrefixedName(\n            inode, snapshotID, CRYPTO_XATTR_ENCRYPTION_ZONE);\n        if (xAttr !\u003d null) {\n          try {\n            final HdfsProtos.ZoneEncryptionInfoProto ezProto \u003d\n                HdfsProtos.ZoneEncryptionInfoProto.parseFrom(xAttr.getValue());\n            return new EncryptionZoneInt(\n                inode.getId(), PBHelperClient.convert(ezProto.getSuite()),\n                PBHelperClient.convert(ezProto.getCryptoProtocolVersion()),\n                ezProto.getKeyName());\n          } catch (InvalidProtocolBufferException e) {\n            throw new IOException(\"Could not parse encryption zone for inode \"\n                + iip.getPath(), e);\n          }\n        }\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "a68b5b31cf846c0fc94c430bafd07a9bca369234": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12171. Reduce IIP object allocations for inode lookup. Contributed by Daryn Sharp.\n",
      "commitDate": "25/07/17 9:03 AM",
      "commitName": "a68b5b31cf846c0fc94c430bafd07a9bca369234",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "08/12/16 12:40 PM",
      "commitNameOld": "401c7318723d8d62c7fc29728f7f4e8d336b4d2f",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 228.81,
      "commitsBetweenForRepo": 1170,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n     assert dir.hasReadLock();\n     Preconditions.checkNotNull(iip);\n     if (!hasCreatedEncryptionZone()) {\n       return null;\n     }\n-    List\u003cINode\u003e inodes \u003d iip.getReadOnlyINodes();\n-    for (int i \u003d inodes.size() - 1; i \u003e\u003d 0; i--) {\n-      final INode inode \u003d inodes.get(i);\n+    for (int i \u003d iip.length() - 1; i \u003e\u003d 0; i--) {\n+      final INode inode \u003d iip.getINode(i);\n       if (inode !\u003d null) {\n         final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n         if (ezi !\u003d null) {\n           return ezi;\n         }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n    assert dir.hasReadLock();\n    Preconditions.checkNotNull(iip);\n    if (!hasCreatedEncryptionZone()) {\n      return null;\n    }\n    for (int i \u003d iip.length() - 1; i \u003e\u003d 0; i--) {\n      final INode inode \u003d iip.getINode(i);\n      if (inode !\u003d null) {\n        final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n        if (ezi !\u003d null) {\n          return ezi;\n        }\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
      "extendedDetails": {}
    },
    "6de9213df111a9a4ed875db995d67af72d08a798": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10458. getFileEncryptionInfo should return quickly for non-encrypted cluster.\n",
      "commitDate": "06/06/16 3:52 PM",
      "commitName": "6de9213df111a9a4ed875db995d67af72d08a798",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "21/03/16 11:39 AM",
      "commitNameOld": "e3bb38d62567eafe57d16b78deeba1b71c58e41c",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 77.18,
      "commitsBetweenForRepo": 502,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,18 @@\n   private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n     assert dir.hasReadLock();\n     Preconditions.checkNotNull(iip);\n+    if (!hasCreatedEncryptionZone()) {\n+      return null;\n+    }\n     List\u003cINode\u003e inodes \u003d iip.getReadOnlyINodes();\n     for (int i \u003d inodes.size() - 1; i \u003e\u003d 0; i--) {\n       final INode inode \u003d inodes.get(i);\n       if (inode !\u003d null) {\n         final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n         if (ezi !\u003d null) {\n           return ezi;\n         }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n    assert dir.hasReadLock();\n    Preconditions.checkNotNull(iip);\n    if (!hasCreatedEncryptionZone()) {\n      return null;\n    }\n    List\u003cINode\u003e inodes \u003d iip.getReadOnlyINodes();\n    for (int i \u003d inodes.size() - 1; i \u003e\u003d 0; i--) {\n      final INode inode \u003d inodes.get(i);\n      if (inode !\u003d null) {\n        final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n        if (ezi !\u003d null) {\n          return ezi;\n        }\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
      "extendedDetails": {}
    },
    "5776a41da08af653206bb94d7c76c9c4dcce059a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.\n",
      "commitDate": "09/12/14 11:37 AM",
      "commitName": "5776a41da08af653206bb94d7c76c9c4dcce059a",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "08/12/14 11:52 AM",
      "commitNameOld": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.99,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n     assert dir.hasReadLock();\n     Preconditions.checkNotNull(iip);\n-    final INode[] inodes \u003d iip.getINodes();\n-    for (int i \u003d inodes.length - 1; i \u003e\u003d 0; i--) {\n-      final INode inode \u003d inodes[i];\n+    List\u003cINode\u003e inodes \u003d iip.getReadOnlyINodes();\n+    for (int i \u003d inodes.size() - 1; i \u003e\u003d 0; i--) {\n+      final INode inode \u003d inodes.get(i);\n       if (inode !\u003d null) {\n         final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n         if (ezi !\u003d null) {\n           return ezi;\n         }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n    assert dir.hasReadLock();\n    Preconditions.checkNotNull(iip);\n    List\u003cINode\u003e inodes \u003d iip.getReadOnlyINodes();\n    for (int i \u003d inodes.size() - 1; i \u003e\u003d 0; i--) {\n      final INode inode \u003d inodes.get(i);\n      if (inode !\u003d null) {\n        final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n        if (ezi !\u003d null) {\n          return ezi;\n        }\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
      "extendedDetails": {}
    },
    "b57ec165674143daf4fa50378446a9f831d3b9d3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6718. Remove EncryptionZoneManager lock. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1612439 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/07/14 5:55 PM",
      "commitName": "b57ec165674143daf4fa50378446a9f831d3b9d3",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "21/07/14 5:27 PM",
      "commitNameOld": "7b466b3b7087a7b8c6e4e466600f6e13284e0dee",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n-    assert hasReadLock();\n+    assert dir.hasReadLock();\n     Preconditions.checkNotNull(iip);\n     final INode[] inodes \u003d iip.getINodes();\n     for (int i \u003d inodes.length - 1; i \u003e\u003d 0; i--) {\n       final INode inode \u003d inodes[i];\n       if (inode !\u003d null) {\n         final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n         if (ezi !\u003d null) {\n           return ezi;\n         }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n    assert dir.hasReadLock();\n    Preconditions.checkNotNull(iip);\n    final INode[] inodes \u003d iip.getINodes();\n    for (int i \u003d inodes.length - 1; i \u003e\u003d 0; i--) {\n      final INode inode \u003d inodes[i];\n      if (inode !\u003d null) {\n        final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n        if (ezi !\u003d null) {\n          return ezi;\n        }\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
      "extendedDetails": {}
    },
    "d79f27b429410daa6770a51867d7ecea728dff89": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6474. Namenode needs to get the actual keys and iv from the KeyProvider. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1609833 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/07/14 1:54 PM",
      "commitName": "d79f27b429410daa6770a51867d7ecea728dff89",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "07/07/14 9:34 PM",
      "commitNameOld": "ceed0f6c46736323bd1b077125ff4e217c649208",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 3.68,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n+    assert hasReadLock();\n     Preconditions.checkNotNull(iip);\n     final INode[] inodes \u003d iip.getINodes();\n     for (int i \u003d inodes.length - 1; i \u003e\u003d 0; i--) {\n       final INode inode \u003d inodes[i];\n       if (inode !\u003d null) {\n         final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n         if (ezi !\u003d null) {\n           return ezi;\n         }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n    assert hasReadLock();\n    Preconditions.checkNotNull(iip);\n    final INode[] inodes \u003d iip.getINodes();\n    for (int i \u003d inodes.length - 1; i \u003e\u003d 0; i--) {\n      final INode inode \u003d inodes[i];\n      if (inode !\u003d null) {\n        final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n        if (ezi !\u003d null) {\n          return ezi;\n        }\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
      "extendedDetails": {}
    },
    "ceed0f6c46736323bd1b077125ff4e217c649208": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-6635. Refactor encryption zone functionality into new EncryptionZoneManager class. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1608657 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/07/14 9:34 PM",
      "commitName": "ceed0f6c46736323bd1b077125ff4e217c649208",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "07/07/14 1:43 PM",
      "commitNameOld": "dda85637df2c970d905b550c89208ac6ca63994d",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 0.33,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n     Preconditions.checkNotNull(iip);\n     final INode[] inodes \u003d iip.getINodes();\n-    for (int i \u003d inodes.length -1; i \u003e\u003d 0; i--) {\n+    for (int i \u003d inodes.length - 1; i \u003e\u003d 0; i--) {\n       final INode inode \u003d inodes[i];\n       if (inode !\u003d null) {\n         final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n         if (ezi !\u003d null) {\n           return ezi;\n         }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n    Preconditions.checkNotNull(iip);\n    final INode[] inodes \u003d iip.getINodes();\n    for (int i \u003d inodes.length - 1; i \u003e\u003d 0; i--) {\n      final INode inode \u003d inodes[i];\n      if (inode !\u003d null) {\n        final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n        if (ezi !\u003d null) {\n          return ezi;\n        }\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
        "oldMethodName": "getEncryptionZoneForPath",
        "newMethodName": "getEncryptionZoneForPath"
      }
    },
    "c38665282884122d3c82b6f68376cce036aee748": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-6516. List of Encryption Zones should be based on inodes (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1607770 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/07/14 5:24 PM",
      "commitName": "c38665282884122d3c82b6f68376cce036aee748",
      "commitAuthor": "Charles Lamb",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-6516. List of Encryption Zones should be based on inodes (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1607770 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/07/14 5:24 PM",
          "commitName": "c38665282884122d3c82b6f68376cce036aee748",
          "commitAuthor": "Charles Lamb",
          "commitDateOld": "03/07/14 4:51 PM",
          "commitNameOld": "03c858dad46e440028c58a716630160338db4b14",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  EncryptionZone getEncryptionZoneForPath(String src) {\n-    assert hasReadLock();\n-    final String[] components \u003d INode.getPathNames(src);\n-    for (int i \u003d components.length; i \u003e 0; i--) {\n-      final List\u003cString\u003e l \u003d Arrays.asList(Arrays.copyOfRange(components, 0, i));\n-      String p \u003d Joiner.on(Path.SEPARATOR).join(l);\n-      final EncryptionZone ret \u003d encryptionZones.get(p);\n-      if (ret !\u003d null) {\n-        return ret;\n+  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n+    Preconditions.checkNotNull(iip);\n+    final INode[] inodes \u003d iip.getINodes();\n+    for (int i \u003d inodes.length -1; i \u003e\u003d 0; i--) {\n+      final INode inode \u003d inodes[i];\n+      if (inode !\u003d null) {\n+        final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n+        if (ezi !\u003d null) {\n+          return ezi;\n+        }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n    Preconditions.checkNotNull(iip);\n    final INode[] inodes \u003d iip.getINodes();\n    for (int i \u003d inodes.length -1; i \u003e\u003d 0; i--) {\n      final INode inode \u003d inodes[i];\n      if (inode !\u003d null) {\n        final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n        if (ezi !\u003d null) {\n          return ezi;\n        }\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
            "oldMethodName": "getEncryptionZoneForPath",
            "newMethodName": "getEncryptionZoneForPath"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-6516. List of Encryption Zones should be based on inodes (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1607770 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/07/14 5:24 PM",
          "commitName": "c38665282884122d3c82b6f68376cce036aee748",
          "commitAuthor": "Charles Lamb",
          "commitDateOld": "03/07/14 4:51 PM",
          "commitNameOld": "03c858dad46e440028c58a716630160338db4b14",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  EncryptionZone getEncryptionZoneForPath(String src) {\n-    assert hasReadLock();\n-    final String[] components \u003d INode.getPathNames(src);\n-    for (int i \u003d components.length; i \u003e 0; i--) {\n-      final List\u003cString\u003e l \u003d Arrays.asList(Arrays.copyOfRange(components, 0, i));\n-      String p \u003d Joiner.on(Path.SEPARATOR).join(l);\n-      final EncryptionZone ret \u003d encryptionZones.get(p);\n-      if (ret !\u003d null) {\n-        return ret;\n+  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n+    Preconditions.checkNotNull(iip);\n+    final INode[] inodes \u003d iip.getINodes();\n+    for (int i \u003d inodes.length -1; i \u003e\u003d 0; i--) {\n+      final INode inode \u003d inodes[i];\n+      if (inode !\u003d null) {\n+        final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n+        if (ezi !\u003d null) {\n+          return ezi;\n+        }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n    Preconditions.checkNotNull(iip);\n    final INode[] inodes \u003d iip.getINodes();\n    for (int i \u003d inodes.length -1; i \u003e\u003d 0; i--) {\n      final INode inode \u003d inodes[i];\n      if (inode !\u003d null) {\n        final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n        if (ezi !\u003d null) {\n          return ezi;\n        }\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "EncryptionZone",
            "newValue": "EncryptionZoneInt"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-6516. List of Encryption Zones should be based on inodes (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1607770 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/07/14 5:24 PM",
          "commitName": "c38665282884122d3c82b6f68376cce036aee748",
          "commitAuthor": "Charles Lamb",
          "commitDateOld": "03/07/14 4:51 PM",
          "commitNameOld": "03c858dad46e440028c58a716630160338db4b14",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  EncryptionZone getEncryptionZoneForPath(String src) {\n-    assert hasReadLock();\n-    final String[] components \u003d INode.getPathNames(src);\n-    for (int i \u003d components.length; i \u003e 0; i--) {\n-      final List\u003cString\u003e l \u003d Arrays.asList(Arrays.copyOfRange(components, 0, i));\n-      String p \u003d Joiner.on(Path.SEPARATOR).join(l);\n-      final EncryptionZone ret \u003d encryptionZones.get(p);\n-      if (ret !\u003d null) {\n-        return ret;\n+  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n+    Preconditions.checkNotNull(iip);\n+    final INode[] inodes \u003d iip.getINodes();\n+    for (int i \u003d inodes.length -1; i \u003e\u003d 0; i--) {\n+      final INode inode \u003d inodes[i];\n+      if (inode !\u003d null) {\n+        final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n+        if (ezi !\u003d null) {\n+          return ezi;\n+        }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n    Preconditions.checkNotNull(iip);\n    final INode[] inodes \u003d iip.getINodes();\n    for (int i \u003d inodes.length -1; i \u003e\u003d 0; i--) {\n      final INode inode \u003d inodes[i];\n      if (inode !\u003d null) {\n        final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n        if (ezi !\u003d null) {\n          return ezi;\n        }\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6516. List of Encryption Zones should be based on inodes (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1607770 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/07/14 5:24 PM",
          "commitName": "c38665282884122d3c82b6f68376cce036aee748",
          "commitAuthor": "Charles Lamb",
          "commitDateOld": "03/07/14 4:51 PM",
          "commitNameOld": "03c858dad46e440028c58a716630160338db4b14",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  EncryptionZone getEncryptionZoneForPath(String src) {\n-    assert hasReadLock();\n-    final String[] components \u003d INode.getPathNames(src);\n-    for (int i \u003d components.length; i \u003e 0; i--) {\n-      final List\u003cString\u003e l \u003d Arrays.asList(Arrays.copyOfRange(components, 0, i));\n-      String p \u003d Joiner.on(Path.SEPARATOR).join(l);\n-      final EncryptionZone ret \u003d encryptionZones.get(p);\n-      if (ret !\u003d null) {\n-        return ret;\n+  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n+    Preconditions.checkNotNull(iip);\n+    final INode[] inodes \u003d iip.getINodes();\n+    for (int i \u003d inodes.length -1; i \u003e\u003d 0; i--) {\n+      final INode inode \u003d inodes[i];\n+      if (inode !\u003d null) {\n+        final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n+        if (ezi !\u003d null) {\n+          return ezi;\n+        }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n    Preconditions.checkNotNull(iip);\n    final INode[] inodes \u003d iip.getINodes();\n    for (int i \u003d inodes.length -1; i \u003e\u003d 0; i--) {\n      final INode inode \u003d inodes[i];\n      if (inode !\u003d null) {\n        final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n        if (ezi !\u003d null) {\n          return ezi;\n        }\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6516. List of Encryption Zones should be based on inodes (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1607770 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/07/14 5:24 PM",
          "commitName": "c38665282884122d3c82b6f68376cce036aee748",
          "commitAuthor": "Charles Lamb",
          "commitDateOld": "03/07/14 4:51 PM",
          "commitNameOld": "03c858dad46e440028c58a716630160338db4b14",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  EncryptionZone getEncryptionZoneForPath(String src) {\n-    assert hasReadLock();\n-    final String[] components \u003d INode.getPathNames(src);\n-    for (int i \u003d components.length; i \u003e 0; i--) {\n-      final List\u003cString\u003e l \u003d Arrays.asList(Arrays.copyOfRange(components, 0, i));\n-      String p \u003d Joiner.on(Path.SEPARATOR).join(l);\n-      final EncryptionZone ret \u003d encryptionZones.get(p);\n-      if (ret !\u003d null) {\n-        return ret;\n+  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n+    Preconditions.checkNotNull(iip);\n+    final INode[] inodes \u003d iip.getINodes();\n+    for (int i \u003d inodes.length -1; i \u003e\u003d 0; i--) {\n+      final INode inode \u003d inodes[i];\n+      if (inode !\u003d null) {\n+        final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n+        if (ezi !\u003d null) {\n+          return ezi;\n+        }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private EncryptionZoneInt getEncryptionZoneForPath(INodesInPath iip) {\n    Preconditions.checkNotNull(iip);\n    final INode[] inodes \u003d iip.getINodes();\n    for (int i \u003d inodes.length -1; i \u003e\u003d 0; i--) {\n      final INode inode \u003d inodes[i];\n      if (inode !\u003d null) {\n        final EncryptionZoneInt ezi \u003d encryptionZones.get(inode.getId());\n        if (ezi !\u003d null) {\n          return ezi;\n        }\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[src-String]",
            "newValue": "[iip-INodesInPath]"
          }
        }
      ]
    },
    "51b97a1396a4cb32aaa08b451985a6af236c0c4b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6605.Client server negotiation of cipher suite. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1607499 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/07/14 4:08 PM",
      "commitName": "51b97a1396a4cb32aaa08b451985a6af236c0c4b",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "27/06/14 2:45 PM",
      "commitNameOld": "31617733aca2025cff1ffb841a533a5b1de016a5",
      "commitAuthorOld": "Charles Lamb",
      "daysBetweenCommits": 5.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n   EncryptionZone getEncryptionZoneForPath(String src) {\n+    assert hasReadLock();\n     final String[] components \u003d INode.getPathNames(src);\n     for (int i \u003d components.length; i \u003e 0; i--) {\n       final List\u003cString\u003e l \u003d Arrays.asList(Arrays.copyOfRange(components, 0, i));\n       String p \u003d Joiner.on(Path.SEPARATOR).join(l);\n       final EncryptionZone ret \u003d encryptionZones.get(p);\n       if (ret !\u003d null) {\n         return ret;\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  EncryptionZone getEncryptionZoneForPath(String src) {\n    assert hasReadLock();\n    final String[] components \u003d INode.getPathNames(src);\n    for (int i \u003d components.length; i \u003e 0; i--) {\n      final List\u003cString\u003e l \u003d Arrays.asList(Arrays.copyOfRange(components, 0, i));\n      String p \u003d Joiner.on(Path.SEPARATOR).join(l);\n      final EncryptionZone ret \u003d encryptionZones.get(p);\n      if (ret !\u003d null) {\n        return ret;\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "31617733aca2025cff1ffb841a533a5b1de016a5": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-6389. Rename restrictions for encryption zones. (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1606253 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/06/14 2:45 PM",
      "commitName": "31617733aca2025cff1ffb841a533a5b1de016a5",
      "commitAuthor": "Charles Lamb",
      "commitDateOld": "27/06/14 1:43 PM",
      "commitNameOld": "2efea952139b30dd1c881eed0b443ffa72be6dce",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n-  private EncryptionZone getEncryptionZoneForPath(String src) {\n+  EncryptionZone getEncryptionZoneForPath(String src) {\n     final String[] components \u003d INode.getPathNames(src);\n     for (int i \u003d components.length; i \u003e 0; i--) {\n       final List\u003cString\u003e l \u003d Arrays.asList(Arrays.copyOfRange(components, 0, i));\n       String p \u003d Joiner.on(Path.SEPARATOR).join(l);\n       final EncryptionZone ret \u003d encryptionZones.get(p);\n       if (ret !\u003d null) {\n         return ret;\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  EncryptionZone getEncryptionZoneForPath(String src) {\n    final String[] components \u003d INode.getPathNames(src);\n    for (int i \u003d components.length; i \u003e 0; i--) {\n      final List\u003cString\u003e l \u003d Arrays.asList(Arrays.copyOfRange(components, 0, i));\n      String p \u003d Joiner.on(Path.SEPARATOR).join(l);\n      final EncryptionZone ret \u003d encryptionZones.get(p);\n      if (ret !\u003d null) {\n        return ret;\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[]"
      }
    }
  }
}