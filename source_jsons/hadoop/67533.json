{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SolverPreprocessor.java",
  "functionName": "getDiscreteSkyline",
  "functionId": "getDiscreteSkyline___skyList-RLESparseResourceAllocation(modifiers-final)__timeInterval-int(modifiers-final)__containerMemAlloc-long(modifiers-final)__jobLen-int(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-resourceestimator/src/main/java/org/apache/hadoop/resourceestimator/solver/preprocess/SolverPreprocessor.java",
  "functionStartLine": 108,
  "functionEndLine": 126,
  "numCommitsSeen": 1,
  "timeTaken": 365,
  "changeHistory": [
    "625039ef20e6011ab360131d70582a6e4bf2ec1d"
  ],
  "changeHistoryShort": {
    "625039ef20e6011ab360131d70582a6e4bf2ec1d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "625039ef20e6011ab360131d70582a6e4bf2ec1d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14840. Tool to estimate resource requirements of an application pipeline based on prior executions. (Rui Li via Subru).\n",
      "commitDate": "25/10/17 3:51 PM",
      "commitName": "625039ef20e6011ab360131d70582a6e4bf2ec1d",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,19 @@\n+  public final int[] getDiscreteSkyline(\n+      final RLESparseResourceAllocation skyList, final int timeInterval,\n+      final long containerMemAlloc, final int jobLen) {\n+    long jobLifeSpan \u003d\n+        skyList.getLatestNonNullTime() - skyList.getEarliestStartTime();\n+    int[] result \u003d new int[jobLen];\n+    Arrays.fill(result, 0);\n+\n+    int index \u003d 0;\n+    long numContainerAt \u003d 0;\n+    for (int i \u003d 0; i \u003c jobLifeSpan; i++) {\n+      index \u003d (int) Math.floor((double) i / timeInterval);\n+      numContainerAt \u003d getResourceVector(skyList, i, containerMemAlloc);\n+      if (result[index] \u003c numContainerAt) {\n+        result[index] \u003d (int) numContainerAt;\n+      }\n+    }\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public final int[] getDiscreteSkyline(\n      final RLESparseResourceAllocation skyList, final int timeInterval,\n      final long containerMemAlloc, final int jobLen) {\n    long jobLifeSpan \u003d\n        skyList.getLatestNonNullTime() - skyList.getEarliestStartTime();\n    int[] result \u003d new int[jobLen];\n    Arrays.fill(result, 0);\n\n    int index \u003d 0;\n    long numContainerAt \u003d 0;\n    for (int i \u003d 0; i \u003c jobLifeSpan; i++) {\n      index \u003d (int) Math.floor((double) i / timeInterval);\n      numContainerAt \u003d getResourceVector(skyList, i, containerMemAlloc);\n      if (result[index] \u003c numContainerAt) {\n        result[index] \u003d (int) numContainerAt;\n      }\n    }\n    return result;\n  }",
      "path": "hadoop-tools/hadoop-resourceestimator/src/main/java/org/apache/hadoop/resourceestimator/solver/preprocess/SolverPreprocessor.java"
    }
  }
}