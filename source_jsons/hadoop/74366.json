{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DelegatingSSLSocketFactory.java",
  "functionName": "bindToOpenSSLProvider",
  "functionId": "bindToOpenSSLProvider",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/DelegatingSSLSocketFactory.java",
  "functionStartLine": 192,
  "functionEndLine": 211,
  "numCommitsSeen": 3,
  "timeTaken": 649,
  "changeHistory": [
    "42711081e3cba5835493b5cbedc23d16dfea7667"
  ],
  "changeHistoryShort": {
    "42711081e3cba5835493b5cbedc23d16dfea7667": "Yintroduced"
  },
  "changeHistoryDetails": {
    "42711081e3cba5835493b5cbedc23d16dfea7667": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16986. S3A to not need wildfly on the classpath. (#1948)\n\nHADOOP-16986. S3A to not need wildfly JAR on its classpath.\r\n\r\nContributed by Steve Loughran\r\n\r\nThis is a successor to HADOOP-16346, which enabled the S3A connector\r\nto load the native openssl SSL libraries for better HTTPS performance.\r\n\r\nThat patch required wildfly.jar to be on the classpath. This\r\nupdate:\r\n\r\n* Makes wildfly.jar optional except in the special case that \r\n\"fs.s3a.ssl.channel.mode\" is set to \"openssl\"\r\n\r\n* Retains the declaration of wildfly.jar as a compile-time\r\ndependency in the hadoop-aws POM. This means that unless\r\nexplicitly excluded, applications importing that published\r\nmaven artifact will, transitively, add the specified\r\nwildfly JAR into their classpath for compilation/testing/\r\ndistribution.\r\n\r\nThis is done for packaging and to offer that optional\r\nspeedup. It is not mandatory: applications importing\r\nthe hadoop-aws POM can exclude it if they choose.\r\n\r\n",
      "commitDate": "20/04/20 6:32 AM",
      "commitName": "42711081e3cba5835493b5cbedc23d16dfea7667",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,20 @@\n+  private void bindToOpenSSLProvider()\n+      throws NoSuchAlgorithmException, KeyManagementException {\n+    if (!openSSLProviderRegistered) {\n+      LOG.debug(\"Attempting to register OpenSSL provider\");\n+      org.wildfly.openssl.OpenSSLProvider.register();\n+      openSSLProviderRegistered \u003d true;\n+    }\n+    // Strong reference needs to be kept to logger until initialization of\n+    // SSLContext finished (see HADOOP-16174):\n+    java.util.logging.Logger logger \u003d java.util.logging.Logger.getLogger(\n+        \"org.wildfly.openssl.SSL\");\n+    Level originalLevel \u003d logger.getLevel();\n+    try {\n+      logger.setLevel(Level.WARNING);\n+      ctx \u003d SSLContext.getInstance(\"openssl.TLS\");\n+      ctx.init(null, null, null);\n+    } finally {\n+      logger.setLevel(originalLevel);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void bindToOpenSSLProvider()\n      throws NoSuchAlgorithmException, KeyManagementException {\n    if (!openSSLProviderRegistered) {\n      LOG.debug(\"Attempting to register OpenSSL provider\");\n      org.wildfly.openssl.OpenSSLProvider.register();\n      openSSLProviderRegistered \u003d true;\n    }\n    // Strong reference needs to be kept to logger until initialization of\n    // SSLContext finished (see HADOOP-16174):\n    java.util.logging.Logger logger \u003d java.util.logging.Logger.getLogger(\n        \"org.wildfly.openssl.SSL\");\n    Level originalLevel \u003d logger.getLevel();\n    try {\n      logger.setLevel(Level.WARNING);\n      ctx \u003d SSLContext.getInstance(\"openssl.TLS\");\n      ctx.init(null, null, null);\n    } finally {\n      logger.setLevel(originalLevel);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/DelegatingSSLSocketFactory.java"
    }
  }
}