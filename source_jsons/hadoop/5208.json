{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirAppendOp.java",
  "functionName": "computeQuotaDeltaForUCBlock",
  "functionId": "computeQuotaDeltaForUCBlock___fsn-FSNamesystem__file-INodeFile",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAppendOp.java",
  "functionStartLine": 257,
  "functionEndLine": 275,
  "numCommitsSeen": 584,
  "timeTaken": 7844,
  "changeHistory": [
    "745d04be59accf80feda0ad38efcc74ba362f2ca",
    "31f117138a00794de4951ee8433e304d72b04094",
    "4928f5473394981829e5ffd4b16ea0801baf5c45",
    "6d5da9484185ca9f585195d6da069b9cd5be4044",
    "c7c71cdba50cb7d8282622cd496cc913c80cff54"
  ],
  "changeHistoryShort": {
    "745d04be59accf80feda0ad38efcc74ba362f2ca": "Ybodychange",
    "31f117138a00794de4951ee8433e304d72b04094": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "4928f5473394981829e5ffd4b16ea0801baf5c45": "Ybodychange",
    "6d5da9484185ca9f585195d6da069b9cd5be4044": "Ybodychange",
    "c7c71cdba50cb7d8282622cd496cc913c80cff54": "Yintroduced"
  },
  "changeHistoryDetails": {
    "745d04be59accf80feda0ad38efcc74ba362f2ca": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8823. Move replication factor into individual blocks. Contributed by Haohui Mai.\n",
      "commitDate": "22/08/15 12:09 AM",
      "commitName": "745d04be59accf80feda0ad38efcc74ba362f2ca",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "11/08/15 10:28 AM",
      "commitNameOld": "1fc3c779a422bafdb86ad1a5b2349802dda1cb62",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 10.57,
      "commitsBetweenForRepo": 70,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   private static QuotaCounts computeQuotaDeltaForUCBlock(FSNamesystem fsn,\n       INodeFile file) {\n     final QuotaCounts delta \u003d new QuotaCounts.Builder().build();\n     final BlockInfo lastBlock \u003d file.getLastBlock();\n     if (lastBlock !\u003d null) {\n       final long diff \u003d file.getPreferredBlockSize() - lastBlock.getNumBytes();\n-      final short repl \u003d file.getPreferredBlockReplication();\n+      final short repl \u003d lastBlock.getReplication();\n       delta.addStorageSpace(diff * repl);\n       final BlockStoragePolicy policy \u003d fsn.getFSDirectory()\n           .getBlockStoragePolicySuite().getPolicy(file.getStoragePolicyID());\n       List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n       for (StorageType t : types) {\n         if (t.supportTypeQuota()) {\n           delta.addTypeSpace(t, diff);\n         }\n       }\n     }\n     return delta;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static QuotaCounts computeQuotaDeltaForUCBlock(FSNamesystem fsn,\n      INodeFile file) {\n    final QuotaCounts delta \u003d new QuotaCounts.Builder().build();\n    final BlockInfo lastBlock \u003d file.getLastBlock();\n    if (lastBlock !\u003d null) {\n      final long diff \u003d file.getPreferredBlockSize() - lastBlock.getNumBytes();\n      final short repl \u003d lastBlock.getReplication();\n      delta.addStorageSpace(diff * repl);\n      final BlockStoragePolicy policy \u003d fsn.getFSDirectory()\n          .getBlockStoragePolicySuite().getPolicy(file.getStoragePolicyID());\n      List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n      for (StorageType t : types) {\n        if (t.supportTypeQuota()) {\n          delta.addTypeSpace(t, diff);\n        }\n      }\n    }\n    return delta;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAppendOp.java",
      "extendedDetails": {}
    },
    "31f117138a00794de4951ee8433e304d72b04094": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-8495. Consolidate append() related implementation into a single class. Contributed by Rakesh R.\n",
      "commitDate": "21/07/15 5:25 PM",
      "commitName": "31f117138a00794de4951ee8433e304d72b04094",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-8495. Consolidate append() related implementation into a single class. Contributed by Rakesh R.\n",
          "commitDate": "21/07/15 5:25 PM",
          "commitName": "31f117138a00794de4951ee8433e304d72b04094",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "21/07/15 3:05 PM",
          "commitNameOld": "393fe71771e3ac6bc0efe59d9aaf19d3576411b3",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  private QuotaCounts computeQuotaDeltaForUCBlock(INodeFile file) {\n+  private static QuotaCounts computeQuotaDeltaForUCBlock(FSNamesystem fsn,\n+      INodeFile file) {\n     final QuotaCounts delta \u003d new QuotaCounts.Builder().build();\n     final BlockInfo lastBlock \u003d file.getLastBlock();\n     if (lastBlock !\u003d null) {\n       final long diff \u003d file.getPreferredBlockSize() - lastBlock.getNumBytes();\n       final short repl \u003d file.getPreferredBlockReplication();\n       delta.addStorageSpace(diff * repl);\n-      final BlockStoragePolicy policy \u003d dir.getBlockStoragePolicySuite()\n-          .getPolicy(file.getStoragePolicyID());\n+      final BlockStoragePolicy policy \u003d fsn.getFSDirectory()\n+          .getBlockStoragePolicySuite().getPolicy(file.getStoragePolicyID());\n       List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n       for (StorageType t : types) {\n         if (t.supportTypeQuota()) {\n           delta.addTypeSpace(t, diff);\n         }\n       }\n     }\n     return delta;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static QuotaCounts computeQuotaDeltaForUCBlock(FSNamesystem fsn,\n      INodeFile file) {\n    final QuotaCounts delta \u003d new QuotaCounts.Builder().build();\n    final BlockInfo lastBlock \u003d file.getLastBlock();\n    if (lastBlock !\u003d null) {\n      final long diff \u003d file.getPreferredBlockSize() - lastBlock.getNumBytes();\n      final short repl \u003d file.getPreferredBlockReplication();\n      delta.addStorageSpace(diff * repl);\n      final BlockStoragePolicy policy \u003d fsn.getFSDirectory()\n          .getBlockStoragePolicySuite().getPolicy(file.getStoragePolicyID());\n      List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n      for (StorageType t : types) {\n        if (t.supportTypeQuota()) {\n          delta.addTypeSpace(t, diff);\n        }\n      }\n    }\n    return delta;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAppendOp.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAppendOp.java",
            "oldMethodName": "computeQuotaDeltaForUCBlock",
            "newMethodName": "computeQuotaDeltaForUCBlock"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-8495. Consolidate append() related implementation into a single class. Contributed by Rakesh R.\n",
          "commitDate": "21/07/15 5:25 PM",
          "commitName": "31f117138a00794de4951ee8433e304d72b04094",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "21/07/15 3:05 PM",
          "commitNameOld": "393fe71771e3ac6bc0efe59d9aaf19d3576411b3",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  private QuotaCounts computeQuotaDeltaForUCBlock(INodeFile file) {\n+  private static QuotaCounts computeQuotaDeltaForUCBlock(FSNamesystem fsn,\n+      INodeFile file) {\n     final QuotaCounts delta \u003d new QuotaCounts.Builder().build();\n     final BlockInfo lastBlock \u003d file.getLastBlock();\n     if (lastBlock !\u003d null) {\n       final long diff \u003d file.getPreferredBlockSize() - lastBlock.getNumBytes();\n       final short repl \u003d file.getPreferredBlockReplication();\n       delta.addStorageSpace(diff * repl);\n-      final BlockStoragePolicy policy \u003d dir.getBlockStoragePolicySuite()\n-          .getPolicy(file.getStoragePolicyID());\n+      final BlockStoragePolicy policy \u003d fsn.getFSDirectory()\n+          .getBlockStoragePolicySuite().getPolicy(file.getStoragePolicyID());\n       List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n       for (StorageType t : types) {\n         if (t.supportTypeQuota()) {\n           delta.addTypeSpace(t, diff);\n         }\n       }\n     }\n     return delta;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static QuotaCounts computeQuotaDeltaForUCBlock(FSNamesystem fsn,\n      INodeFile file) {\n    final QuotaCounts delta \u003d new QuotaCounts.Builder().build();\n    final BlockInfo lastBlock \u003d file.getLastBlock();\n    if (lastBlock !\u003d null) {\n      final long diff \u003d file.getPreferredBlockSize() - lastBlock.getNumBytes();\n      final short repl \u003d file.getPreferredBlockReplication();\n      delta.addStorageSpace(diff * repl);\n      final BlockStoragePolicy policy \u003d fsn.getFSDirectory()\n          .getBlockStoragePolicySuite().getPolicy(file.getStoragePolicyID());\n      List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n      for (StorageType t : types) {\n        if (t.supportTypeQuota()) {\n          delta.addTypeSpace(t, diff);\n        }\n      }\n    }\n    return delta;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAppendOp.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8495. Consolidate append() related implementation into a single class. Contributed by Rakesh R.\n",
          "commitDate": "21/07/15 5:25 PM",
          "commitName": "31f117138a00794de4951ee8433e304d72b04094",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "21/07/15 3:05 PM",
          "commitNameOld": "393fe71771e3ac6bc0efe59d9aaf19d3576411b3",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  private QuotaCounts computeQuotaDeltaForUCBlock(INodeFile file) {\n+  private static QuotaCounts computeQuotaDeltaForUCBlock(FSNamesystem fsn,\n+      INodeFile file) {\n     final QuotaCounts delta \u003d new QuotaCounts.Builder().build();\n     final BlockInfo lastBlock \u003d file.getLastBlock();\n     if (lastBlock !\u003d null) {\n       final long diff \u003d file.getPreferredBlockSize() - lastBlock.getNumBytes();\n       final short repl \u003d file.getPreferredBlockReplication();\n       delta.addStorageSpace(diff * repl);\n-      final BlockStoragePolicy policy \u003d dir.getBlockStoragePolicySuite()\n-          .getPolicy(file.getStoragePolicyID());\n+      final BlockStoragePolicy policy \u003d fsn.getFSDirectory()\n+          .getBlockStoragePolicySuite().getPolicy(file.getStoragePolicyID());\n       List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n       for (StorageType t : types) {\n         if (t.supportTypeQuota()) {\n           delta.addTypeSpace(t, diff);\n         }\n       }\n     }\n     return delta;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static QuotaCounts computeQuotaDeltaForUCBlock(FSNamesystem fsn,\n      INodeFile file) {\n    final QuotaCounts delta \u003d new QuotaCounts.Builder().build();\n    final BlockInfo lastBlock \u003d file.getLastBlock();\n    if (lastBlock !\u003d null) {\n      final long diff \u003d file.getPreferredBlockSize() - lastBlock.getNumBytes();\n      final short repl \u003d file.getPreferredBlockReplication();\n      delta.addStorageSpace(diff * repl);\n      final BlockStoragePolicy policy \u003d fsn.getFSDirectory()\n          .getBlockStoragePolicySuite().getPolicy(file.getStoragePolicyID());\n      List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n      for (StorageType t : types) {\n        if (t.supportTypeQuota()) {\n          delta.addTypeSpace(t, diff);\n        }\n      }\n    }\n    return delta;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAppendOp.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8495. Consolidate append() related implementation into a single class. Contributed by Rakesh R.\n",
          "commitDate": "21/07/15 5:25 PM",
          "commitName": "31f117138a00794de4951ee8433e304d72b04094",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "21/07/15 3:05 PM",
          "commitNameOld": "393fe71771e3ac6bc0efe59d9aaf19d3576411b3",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  private QuotaCounts computeQuotaDeltaForUCBlock(INodeFile file) {\n+  private static QuotaCounts computeQuotaDeltaForUCBlock(FSNamesystem fsn,\n+      INodeFile file) {\n     final QuotaCounts delta \u003d new QuotaCounts.Builder().build();\n     final BlockInfo lastBlock \u003d file.getLastBlock();\n     if (lastBlock !\u003d null) {\n       final long diff \u003d file.getPreferredBlockSize() - lastBlock.getNumBytes();\n       final short repl \u003d file.getPreferredBlockReplication();\n       delta.addStorageSpace(diff * repl);\n-      final BlockStoragePolicy policy \u003d dir.getBlockStoragePolicySuite()\n-          .getPolicy(file.getStoragePolicyID());\n+      final BlockStoragePolicy policy \u003d fsn.getFSDirectory()\n+          .getBlockStoragePolicySuite().getPolicy(file.getStoragePolicyID());\n       List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n       for (StorageType t : types) {\n         if (t.supportTypeQuota()) {\n           delta.addTypeSpace(t, diff);\n         }\n       }\n     }\n     return delta;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static QuotaCounts computeQuotaDeltaForUCBlock(FSNamesystem fsn,\n      INodeFile file) {\n    final QuotaCounts delta \u003d new QuotaCounts.Builder().build();\n    final BlockInfo lastBlock \u003d file.getLastBlock();\n    if (lastBlock !\u003d null) {\n      final long diff \u003d file.getPreferredBlockSize() - lastBlock.getNumBytes();\n      final short repl \u003d file.getPreferredBlockReplication();\n      delta.addStorageSpace(diff * repl);\n      final BlockStoragePolicy policy \u003d fsn.getFSDirectory()\n          .getBlockStoragePolicySuite().getPolicy(file.getStoragePolicyID());\n      List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n      for (StorageType t : types) {\n        if (t.supportTypeQuota()) {\n          delta.addTypeSpace(t, diff);\n        }\n      }\n    }\n    return delta;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirAppendOp.java",
          "extendedDetails": {
            "oldValue": "[file-INodeFile]",
            "newValue": "[fsn-FSNamesystem, file-INodeFile]"
          }
        }
      ]
    },
    "4928f5473394981829e5ffd4b16ea0801baf5c45": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8482. Rename BlockInfoContiguous to BlockInfo. Contributed by Zhe Zhang.\n",
      "commitDate": "27/05/15 3:42 PM",
      "commitName": "4928f5473394981829e5ffd4b16ea0801baf5c45",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "21/05/15 8:08 AM",
      "commitNameOld": "2b6bcfdafa91223a4116e3e9304579f5f91dccac",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 6.32,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private QuotaCounts computeQuotaDeltaForUCBlock(INodeFile file) {\n     final QuotaCounts delta \u003d new QuotaCounts.Builder().build();\n-    final BlockInfoContiguous lastBlock \u003d file.getLastBlock();\n+    final BlockInfo lastBlock \u003d file.getLastBlock();\n     if (lastBlock !\u003d null) {\n       final long diff \u003d file.getPreferredBlockSize() - lastBlock.getNumBytes();\n       final short repl \u003d file.getPreferredBlockReplication();\n       delta.addStorageSpace(diff * repl);\n       final BlockStoragePolicy policy \u003d dir.getBlockStoragePolicySuite()\n           .getPolicy(file.getStoragePolicyID());\n       List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n       for (StorageType t : types) {\n         if (t.supportTypeQuota()) {\n           delta.addTypeSpace(t, diff);\n         }\n       }\n     }\n     return delta;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private QuotaCounts computeQuotaDeltaForUCBlock(INodeFile file) {\n    final QuotaCounts delta \u003d new QuotaCounts.Builder().build();\n    final BlockInfo lastBlock \u003d file.getLastBlock();\n    if (lastBlock !\u003d null) {\n      final long diff \u003d file.getPreferredBlockSize() - lastBlock.getNumBytes();\n      final short repl \u003d file.getPreferredBlockReplication();\n      delta.addStorageSpace(diff * repl);\n      final BlockStoragePolicy policy \u003d dir.getBlockStoragePolicySuite()\n          .getPolicy(file.getStoragePolicyID());\n      List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n      for (StorageType t : types) {\n        if (t.supportTypeQuota()) {\n          delta.addTypeSpace(t, diff);\n        }\n      }\n    }\n    return delta;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "6d5da9484185ca9f585195d6da069b9cd5be4044": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8255. Rename getBlockReplication to getPreferredBlockReplication. (Contributed by Zhe Zhang)\n",
      "commitDate": "12/05/15 6:29 AM",
      "commitName": "6d5da9484185ca9f585195d6da069b9cd5be4044",
      "commitAuthor": "yliu",
      "commitDateOld": "08/05/15 11:09 PM",
      "commitNameOld": "02a4a22b9c0e22c2e7dd6ec85edd5c5a167fe19f",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 3.31,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private QuotaCounts computeQuotaDeltaForUCBlock(INodeFile file) {\n     final QuotaCounts delta \u003d new QuotaCounts.Builder().build();\n     final BlockInfoContiguous lastBlock \u003d file.getLastBlock();\n     if (lastBlock !\u003d null) {\n       final long diff \u003d file.getPreferredBlockSize() - lastBlock.getNumBytes();\n-      final short repl \u003d file.getBlockReplication();\n+      final short repl \u003d file.getPreferredBlockReplication();\n       delta.addStorageSpace(diff * repl);\n       final BlockStoragePolicy policy \u003d dir.getBlockStoragePolicySuite()\n           .getPolicy(file.getStoragePolicyID());\n       List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n       for (StorageType t : types) {\n         if (t.supportTypeQuota()) {\n           delta.addTypeSpace(t, diff);\n         }\n       }\n     }\n     return delta;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private QuotaCounts computeQuotaDeltaForUCBlock(INodeFile file) {\n    final QuotaCounts delta \u003d new QuotaCounts.Builder().build();\n    final BlockInfoContiguous lastBlock \u003d file.getLastBlock();\n    if (lastBlock !\u003d null) {\n      final long diff \u003d file.getPreferredBlockSize() - lastBlock.getNumBytes();\n      final short repl \u003d file.getPreferredBlockReplication();\n      delta.addStorageSpace(diff * repl);\n      final BlockStoragePolicy policy \u003d dir.getBlockStoragePolicySuite()\n          .getPolicy(file.getStoragePolicyID());\n      List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n      for (StorageType t : types) {\n        if (t.supportTypeQuota()) {\n          delta.addTypeSpace(t, diff);\n        }\n      }\n    }\n    return delta;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "c7c71cdba50cb7d8282622cd496cc913c80cff54": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7587. Edit log corruption can happen if append fails with a quota violation. Contributed by Jing Zhao.\n",
      "commitDate": "18/03/15 6:53 PM",
      "commitName": "c7c71cdba50cb7d8282622cd496cc913c80cff54",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,18 @@\n+  private QuotaCounts computeQuotaDeltaForUCBlock(INodeFile file) {\n+    final QuotaCounts delta \u003d new QuotaCounts.Builder().build();\n+    final BlockInfoContiguous lastBlock \u003d file.getLastBlock();\n+    if (lastBlock !\u003d null) {\n+      final long diff \u003d file.getPreferredBlockSize() - lastBlock.getNumBytes();\n+      final short repl \u003d file.getBlockReplication();\n+      delta.addStorageSpace(diff * repl);\n+      final BlockStoragePolicy policy \u003d dir.getBlockStoragePolicySuite()\n+          .getPolicy(file.getStoragePolicyID());\n+      List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n+      for (StorageType t : types) {\n+        if (t.supportTypeQuota()) {\n+          delta.addTypeSpace(t, diff);\n+        }\n+      }\n+    }\n+    return delta;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private QuotaCounts computeQuotaDeltaForUCBlock(INodeFile file) {\n    final QuotaCounts delta \u003d new QuotaCounts.Builder().build();\n    final BlockInfoContiguous lastBlock \u003d file.getLastBlock();\n    if (lastBlock !\u003d null) {\n      final long diff \u003d file.getPreferredBlockSize() - lastBlock.getNumBytes();\n      final short repl \u003d file.getBlockReplication();\n      delta.addStorageSpace(diff * repl);\n      final BlockStoragePolicy policy \u003d dir.getBlockStoragePolicySuite()\n          .getPolicy(file.getStoragePolicyID());\n      List\u003cStorageType\u003e types \u003d policy.chooseStorageTypes(repl);\n      for (StorageType t : types) {\n        if (t.supportTypeQuota()) {\n          delta.addTypeSpace(t, diff);\n        }\n      }\n    }\n    return delta;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}