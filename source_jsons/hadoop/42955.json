{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OpportunisticContainerAllocatorAMService.java",
  "functionName": "convertToRemoteNode",
  "functionId": "convertToRemoteNode___nodeId-NodeId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/OpportunisticContainerAllocatorAMService.java",
  "functionStartLine": 483,
  "functionEndLine": 493,
  "numCommitsSeen": 27,
  "timeTaken": 2327,
  "changeHistory": [
    "6a69239d867070ee85d79026542033ac661c4c1c",
    "b733348dde18a242e6c9074c512116a8baf1d281",
    "005850b28feb2f7bb8c2844d11e3f9d21b45d754",
    "aa3cab1eb29c56368d15882d7260a994e615e8d8"
  ],
  "changeHistoryShort": {
    "6a69239d867070ee85d79026542033ac661c4c1c": "Ybodychange",
    "b733348dde18a242e6c9074c512116a8baf1d281": "Ybodychange",
    "005850b28feb2f7bb8c2844d11e3f9d21b45d754": "Ybodychange",
    "aa3cab1eb29c56368d15882d7260a994e615e8d8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6a69239d867070ee85d79026542033ac661c4c1c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8163. Add support for Node Labels in opportunistic scheduling. Contributed by Abhishek Modi.\n",
      "commitDate": "04/05/18 2:59 PM",
      "commitName": "6a69239d867070ee85d79026542033ac661c4c1c",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "05/10/17 9:58 AM",
      "commitNameOld": "b733348dde18a242e6c9074c512116a8baf1d281",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 211.21,
      "commitsBetweenForRepo": 2065,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,11 @@\n   private RemoteNode convertToRemoteNode(NodeId nodeId) {\n     SchedulerNode node \u003d\n         ((AbstractYarnScheduler) rmContext.getScheduler()).getNode(nodeId);\n     if (node !\u003d null) {\n       RemoteNode rNode \u003d RemoteNode.newInstance(nodeId, node.getHttpAddress());\n       rNode.setRackName(node.getRackName());\n+      rNode.setNodePartition(node.getPartition());\n       return rNode;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RemoteNode convertToRemoteNode(NodeId nodeId) {\n    SchedulerNode node \u003d\n        ((AbstractYarnScheduler) rmContext.getScheduler()).getNode(nodeId);\n    if (node !\u003d null) {\n      RemoteNode rNode \u003d RemoteNode.newInstance(nodeId, node.getHttpAddress());\n      rNode.setRackName(node.getRackName());\n      rNode.setNodePartition(node.getPartition());\n      return rNode;\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/OpportunisticContainerAllocatorAMService.java",
      "extendedDetails": {}
    },
    "b733348dde18a242e6c9074c512116a8baf1d281": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7258. Add Node and Rack Hints to Opportunistic Scheduler. (Kartheek Muthyala via asuresh).\n",
      "commitDate": "05/10/17 9:58 AM",
      "commitName": "b733348dde18a242e6c9074c512116a8baf1d281",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "39240b61a163b127eec385decd30ffd96e694c28",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 23.03,
      "commitsBetweenForRepo": 196,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,10 @@\n   private RemoteNode convertToRemoteNode(NodeId nodeId) {\n     SchedulerNode node \u003d\n         ((AbstractYarnScheduler) rmContext.getScheduler()).getNode(nodeId);\n-    return node !\u003d null ? RemoteNode.newInstance(nodeId, node.getHttpAddress())\n-        : null;\n+    if (node !\u003d null) {\n+      RemoteNode rNode \u003d RemoteNode.newInstance(nodeId, node.getHttpAddress());\n+      rNode.setRackName(node.getRackName());\n+      return rNode;\n+    }\n+    return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RemoteNode convertToRemoteNode(NodeId nodeId) {\n    SchedulerNode node \u003d\n        ((AbstractYarnScheduler) rmContext.getScheduler()).getNode(nodeId);\n    if (node !\u003d null) {\n      RemoteNode rNode \u003d RemoteNode.newInstance(nodeId, node.getHttpAddress());\n      rNode.setRackName(node.getRackName());\n      return rNode;\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/OpportunisticContainerAllocatorAMService.java",
      "extendedDetails": {}
    },
    "005850b28feb2f7bb8c2844d11e3f9d21b45d754": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5918. Handle Opportunistic scheduling allocate request failure when NM is lost. (Bibin A Chundatt via asuresh)\n",
      "commitDate": "23/11/16 9:53 AM",
      "commitName": "005850b28feb2f7bb8c2844d11e3f9d21b45d754",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "15/11/16 7:56 AM",
      "commitNameOld": "3219b7b4ac7d12aee343f6ab2980b3357fc618b6",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 8.08,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,6 @@\n   private RemoteNode convertToRemoteNode(NodeId nodeId) {\n-    return RemoteNode.newInstance(nodeId,\n-        ((AbstractYarnScheduler)rmContext.getScheduler()).getNode(nodeId)\n-            .getHttpAddress());\n+    SchedulerNode node \u003d\n+        ((AbstractYarnScheduler) rmContext.getScheduler()).getNode(nodeId);\n+    return node !\u003d null ? RemoteNode.newInstance(nodeId, node.getHttpAddress())\n+        : null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RemoteNode convertToRemoteNode(NodeId nodeId) {\n    SchedulerNode node \u003d\n        ((AbstractYarnScheduler) rmContext.getScheduler()).getNode(nodeId);\n    return node !\u003d null ? RemoteNode.newInstance(nodeId, node.getHttpAddress())\n        : null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/OpportunisticContainerAllocatorAMService.java",
      "extendedDetails": {}
    },
    "aa3cab1eb29c56368d15882d7260a994e615e8d8": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5799. Fix Opportunistic Allocation to set the correct value of Node Http Address. (asuresh)\n",
      "commitDate": "29/10/16 2:03 AM",
      "commitName": "aa3cab1eb29c56368d15882d7260a994e615e8d8",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,5 @@\n+  private RemoteNode convertToRemoteNode(NodeId nodeId) {\n+    return RemoteNode.newInstance(nodeId,\n+        ((AbstractYarnScheduler)rmContext.getScheduler()).getNode(nodeId)\n+            .getHttpAddress());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private RemoteNode convertToRemoteNode(NodeId nodeId) {\n    return RemoteNode.newInstance(nodeId,\n        ((AbstractYarnScheduler)rmContext.getScheduler()).getNode(nodeId)\n            .getHttpAddress());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/OpportunisticContainerAllocatorAMService.java"
    }
  }
}