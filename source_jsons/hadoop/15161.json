{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageLoader.java",
  "functionName": "lookup",
  "functionId": "lookup___path-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java",
  "functionStartLine": 546,
  "functionEndLine": 583,
  "numCommitsSeen": 22,
  "timeTaken": 999,
  "changeHistory": [
    "1f5b42ac4881b734c799bfb527884c0d117929bd"
  ],
  "changeHistoryShort": {
    "1f5b42ac4881b734c799bfb527884c0d117929bd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1f5b42ac4881b734c799bfb527884c0d117929bd": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7158. Reduce the memory usage of WebImageViewer. Contributed by Haohui Mai.\n",
      "commitDate": "01/10/14 10:53 AM",
      "commitName": "1f5b42ac4881b734c799bfb527884c0d117929bd",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,38 @@\n+  private long lookup(String path) throws IOException {\n+    Preconditions.checkArgument(path.startsWith(\"/\"));\n+    long id \u003d INodeId.ROOT_INODE_ID;\n+    for (int offset \u003d 0, next; offset \u003c path.length(); offset \u003d next) {\n+      next \u003d path.indexOf(\u0027/\u0027, offset + 1);\n+      if (next \u003d\u003d -1) {\n+        next \u003d path.length();\n+      }\n+      if (offset + 1 \u003e next) {\n+        break;\n+      }\n+\n+      final String component \u003d path.substring(offset + 1, next);\n+\n+      if (component.isEmpty()) {\n+        continue;\n+      }\n+\n+      final long[] children \u003d dirmap.get(id);\n+      if (children \u003d\u003d null) {\n+        throw new FileNotFoundException(path);\n+      }\n+\n+      boolean found \u003d false;\n+      for (long cid : children) {\n+        FsImageProto.INodeSection.INode child \u003d fromINodeId(cid);\n+        if (component.equals(child.getName().toStringUtf8())) {\n+          found \u003d true;\n+          id \u003d child.getId();\n+          break;\n+        }\n+      }\n+      if (!found) {\n+        throw new FileNotFoundException(path);\n+      }\n+    }\n+    return id;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private long lookup(String path) throws IOException {\n    Preconditions.checkArgument(path.startsWith(\"/\"));\n    long id \u003d INodeId.ROOT_INODE_ID;\n    for (int offset \u003d 0, next; offset \u003c path.length(); offset \u003d next) {\n      next \u003d path.indexOf(\u0027/\u0027, offset + 1);\n      if (next \u003d\u003d -1) {\n        next \u003d path.length();\n      }\n      if (offset + 1 \u003e next) {\n        break;\n      }\n\n      final String component \u003d path.substring(offset + 1, next);\n\n      if (component.isEmpty()) {\n        continue;\n      }\n\n      final long[] children \u003d dirmap.get(id);\n      if (children \u003d\u003d null) {\n        throw new FileNotFoundException(path);\n      }\n\n      boolean found \u003d false;\n      for (long cid : children) {\n        FsImageProto.INodeSection.INode child \u003d fromINodeId(cid);\n        if (component.equals(child.getName().toStringUtf8())) {\n          found \u003d true;\n          id \u003d child.getId();\n          break;\n        }\n      }\n      if (!found) {\n        throw new FileNotFoundException(path);\n      }\n    }\n    return id;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java"
    }
  }
}