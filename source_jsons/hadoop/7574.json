{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NameNode.java",
  "functionName": "doRecovery",
  "functionId": "doRecovery___startOpt-StartupOption__conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
  "functionStartLine": 1640,
  "functionEndLine": 1674,
  "numCommitsSeen": 210,
  "timeTaken": 3720,
  "changeHistory": [
    "c780454413caffbc37a02c4252eb5ec7abe57f97",
    "e7cb3fd39cd367f45e4e1cb563cb3d8fbc698e6c"
  ],
  "changeHistoryShort": {
    "c780454413caffbc37a02c4252eb5ec7abe57f97": "Ybodychange",
    "e7cb3fd39cd367f45e4e1cb563cb3d8fbc698e6c": "Ybodychange"
  },
  "changeHistoryDetails": {
    "c780454413caffbc37a02c4252eb5ec7abe57f97": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5869. When starting rolling upgrade or NN restarts, NN should create a checkpoint right before the upgrade marker.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1565516 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/02/14 6:08 PM",
      "commitName": "c780454413caffbc37a02c4252eb5ec7abe57f97",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "26/01/14 8:34 AM",
      "commitNameOld": "a9110e178837bdcd236e528875daa3651e13dacc",
      "commitAuthorOld": "",
      "daysBetweenCommits": 11.4,
      "commitsBetweenForRepo": 65,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n   private static void doRecovery(StartupOption startOpt, Configuration conf)\n       throws IOException {\n     String nsId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n     String namenodeId \u003d HAUtil.getNameNodeId(conf, nsId);\n     initializeGenericKeys(conf, nsId, namenodeId);\n     if (startOpt.getForce() \u003c MetaRecoveryContext.FORCE_ALL) {\n       if (!confirmPrompt(\"You have selected Metadata Recovery mode.  \" +\n           \"This mode is intended to recover lost metadata on a corrupt \" +\n           \"filesystem.  Metadata recovery mode often permanently deletes \" +\n           \"data from your HDFS filesystem.  Please back up your edit log \" +\n           \"and fsimage before trying this!\\n\\n\" +\n           \"Are you ready to proceed? (Y/N)\\n\")) {\n         System.err.println(\"Recovery aborted at user request.\\n\");\n         return;\n       }\n     }\n     MetaRecoveryContext.LOG.info(\"starting recovery...\");\n     UserGroupInformation.setConfiguration(conf);\n     NameNode.initMetrics(conf, startOpt.toNodeRole());\n     FSNamesystem fsn \u003d null;\n     try {\n       fsn \u003d FSNamesystem.loadFromDisk(conf);\n-      fsn.saveNamespace();\n+      fsn.getFSImage().saveNamespace(fsn);\n       MetaRecoveryContext.LOG.info(\"RECOVERY COMPLETE\");\n     } catch (IOException e) {\n       MetaRecoveryContext.LOG.info(\"RECOVERY FAILED: caught exception\", e);\n       throw e;\n     } catch (RuntimeException e) {\n       MetaRecoveryContext.LOG.info(\"RECOVERY FAILED: caught exception\", e);\n       throw e;\n     } finally {\n       if (fsn !\u003d null)\n         fsn.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void doRecovery(StartupOption startOpt, Configuration conf)\n      throws IOException {\n    String nsId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n    String namenodeId \u003d HAUtil.getNameNodeId(conf, nsId);\n    initializeGenericKeys(conf, nsId, namenodeId);\n    if (startOpt.getForce() \u003c MetaRecoveryContext.FORCE_ALL) {\n      if (!confirmPrompt(\"You have selected Metadata Recovery mode.  \" +\n          \"This mode is intended to recover lost metadata on a corrupt \" +\n          \"filesystem.  Metadata recovery mode often permanently deletes \" +\n          \"data from your HDFS filesystem.  Please back up your edit log \" +\n          \"and fsimage before trying this!\\n\\n\" +\n          \"Are you ready to proceed? (Y/N)\\n\")) {\n        System.err.println(\"Recovery aborted at user request.\\n\");\n        return;\n      }\n    }\n    MetaRecoveryContext.LOG.info(\"starting recovery...\");\n    UserGroupInformation.setConfiguration(conf);\n    NameNode.initMetrics(conf, startOpt.toNodeRole());\n    FSNamesystem fsn \u003d null;\n    try {\n      fsn \u003d FSNamesystem.loadFromDisk(conf);\n      fsn.getFSImage().saveNamespace(fsn);\n      MetaRecoveryContext.LOG.info(\"RECOVERY COMPLETE\");\n    } catch (IOException e) {\n      MetaRecoveryContext.LOG.info(\"RECOVERY FAILED: caught exception\", e);\n      throw e;\n    } catch (RuntimeException e) {\n      MetaRecoveryContext.LOG.info(\"RECOVERY FAILED: caught exception\", e);\n      throw e;\n    } finally {\n      if (fsn !\u003d null)\n        fsn.close();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {}
    },
    "e7cb3fd39cd367f45e4e1cb563cb3d8fbc698e6c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4279. NameNode does not initialize generic conf keys when started with -recover. Contributed by Colin Patrick McCabe.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1418559 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/12/12 3:52 PM",
      "commitName": "e7cb3fd39cd367f45e4e1cb563cb3d8fbc698e6c",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "02/12/12 3:17 PM",
      "commitNameOld": "cbed126eec1f1a1bccce6ad77005cbaa0bf816d4",
      "commitAuthorOld": "Konstantin Shvachko",
      "daysBetweenCommits": 5.02,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,35 @@\n   private static void doRecovery(StartupOption startOpt, Configuration conf)\n       throws IOException {\n+    String nsId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n+    String namenodeId \u003d HAUtil.getNameNodeId(conf, nsId);\n+    initializeGenericKeys(conf, nsId, namenodeId);\n     if (startOpt.getForce() \u003c MetaRecoveryContext.FORCE_ALL) {\n       if (!confirmPrompt(\"You have selected Metadata Recovery mode.  \" +\n           \"This mode is intended to recover lost metadata on a corrupt \" +\n           \"filesystem.  Metadata recovery mode often permanently deletes \" +\n           \"data from your HDFS filesystem.  Please back up your edit log \" +\n           \"and fsimage before trying this!\\n\\n\" +\n           \"Are you ready to proceed? (Y/N)\\n\")) {\n         System.err.println(\"Recovery aborted at user request.\\n\");\n         return;\n       }\n     }\n     MetaRecoveryContext.LOG.info(\"starting recovery...\");\n     UserGroupInformation.setConfiguration(conf);\n     NameNode.initMetrics(conf, startOpt.toNodeRole());\n     FSNamesystem fsn \u003d null;\n     try {\n       fsn \u003d FSNamesystem.loadFromDisk(conf);\n       fsn.saveNamespace();\n       MetaRecoveryContext.LOG.info(\"RECOVERY COMPLETE\");\n     } catch (IOException e) {\n       MetaRecoveryContext.LOG.info(\"RECOVERY FAILED: caught exception\", e);\n       throw e;\n     } catch (RuntimeException e) {\n       MetaRecoveryContext.LOG.info(\"RECOVERY FAILED: caught exception\", e);\n       throw e;\n     } finally {\n       if (fsn !\u003d null)\n         fsn.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void doRecovery(StartupOption startOpt, Configuration conf)\n      throws IOException {\n    String nsId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n    String namenodeId \u003d HAUtil.getNameNodeId(conf, nsId);\n    initializeGenericKeys(conf, nsId, namenodeId);\n    if (startOpt.getForce() \u003c MetaRecoveryContext.FORCE_ALL) {\n      if (!confirmPrompt(\"You have selected Metadata Recovery mode.  \" +\n          \"This mode is intended to recover lost metadata on a corrupt \" +\n          \"filesystem.  Metadata recovery mode often permanently deletes \" +\n          \"data from your HDFS filesystem.  Please back up your edit log \" +\n          \"and fsimage before trying this!\\n\\n\" +\n          \"Are you ready to proceed? (Y/N)\\n\")) {\n        System.err.println(\"Recovery aborted at user request.\\n\");\n        return;\n      }\n    }\n    MetaRecoveryContext.LOG.info(\"starting recovery...\");\n    UserGroupInformation.setConfiguration(conf);\n    NameNode.initMetrics(conf, startOpt.toNodeRole());\n    FSNamesystem fsn \u003d null;\n    try {\n      fsn \u003d FSNamesystem.loadFromDisk(conf);\n      fsn.saveNamespace();\n      MetaRecoveryContext.LOG.info(\"RECOVERY COMPLETE\");\n    } catch (IOException e) {\n      MetaRecoveryContext.LOG.info(\"RECOVERY FAILED: caught exception\", e);\n      throw e;\n    } catch (RuntimeException e) {\n      MetaRecoveryContext.LOG.info(\"RECOVERY FAILED: caught exception\", e);\n      throw e;\n    } finally {\n      if (fsn !\u003d null)\n        fsn.close();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {}
    }
  }
}