{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineCollectorManager.java",
  "functionName": "serviceInit",
  "functionId": "serviceInit___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java",
  "functionStartLine": 60,
  "functionEndLine": 72,
  "numCommitsSeen": 21,
  "timeTaken": 1395,
  "changeHistory": [
    "879de51206ddef132c092ee21e8b6c6e5976a56e",
    "a5a55a54ab1568e941062ea3dabdd237f71f15c4",
    "0a9b085f052b5ebaf319bec7609c77d7f1684a4a",
    "8603736ef2bb34605ea10f516dbe4e73bed3f309",
    "41fb5c738117ab65a2f152a13de8c85476acdc58"
  ],
  "changeHistoryShort": {
    "879de51206ddef132c092ee21e8b6c6e5976a56e": "Ymodifierchange",
    "a5a55a54ab1568e941062ea3dabdd237f71f15c4": "Ybodychange",
    "0a9b085f052b5ebaf319bec7609c77d7f1684a4a": "Ybodychange",
    "8603736ef2bb34605ea10f516dbe4e73bed3f309": "Ybodychange",
    "41fb5c738117ab65a2f152a13de8c85476acdc58": "Yintroduced"
  },
  "changeHistoryDetails": {
    "879de51206ddef132c092ee21e8b6c6e5976a56e": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-5647. [ATSv2 Security] Collector side changes for loading auth filters and principals. Contributed by Varun Saxena\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "879de51206ddef132c092ee21e8b6c6e5976a56e",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/08/17 7:58 AM",
      "commitNameOld": "63cfcb90ac6fbb79ba9ed6b3044cd999fc74e58c",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 20.63,
      "commitsBetweenForRepo": 151,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n-  public void serviceInit(Configuration conf) throws Exception {\n+  protected void serviceInit(Configuration conf) throws Exception {\n     writer \u003d createTimelineWriter(conf);\n     writer.init(conf);\n     // create a single dedicated thread for flushing the writer on a periodic\n     // basis\n     writerFlusher \u003d Executors.newSingleThreadScheduledExecutor();\n     flushInterval \u003d conf.getInt(\n         YarnConfiguration.\n         TIMELINE_SERVICE_WRITER_FLUSH_INTERVAL_SECONDS,\n         YarnConfiguration.\n         DEFAULT_TIMELINE_SERVICE_WRITER_FLUSH_INTERVAL_SECONDS);\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    writer \u003d createTimelineWriter(conf);\n    writer.init(conf);\n    // create a single dedicated thread for flushing the writer on a periodic\n    // basis\n    writerFlusher \u003d Executors.newSingleThreadScheduledExecutor();\n    flushInterval \u003d conf.getInt(\n        YarnConfiguration.\n        TIMELINE_SERVICE_WRITER_FLUSH_INTERVAL_SECONDS,\n        YarnConfiguration.\n        DEFAULT_TIMELINE_SERVICE_WRITER_FLUSH_INTERVAL_SECONDS);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[protected]"
      }
    },
    "a5a55a54ab1568e941062ea3dabdd237f71f15c4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5922. Remove direct references of HBaseTimelineWriter/Reader in core ATS classes. Contributed by Haibo Chen.\n",
      "commitDate": "08/12/16 12:31 PM",
      "commitName": "a5a55a54ab1568e941062ea3dabdd237f71f15c4",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:46 AM",
      "commitNameOld": "0a9b085f052b5ebaf319bec7609c77d7f1684a4a",
      "commitAuthorOld": "Li Lu",
      "daysBetweenCommits": 151.2,
      "commitsBetweenForRepo": 1104,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,13 @@\n   public void serviceInit(Configuration conf) throws Exception {\n-    writer \u003d ReflectionUtils.newInstance(conf.getClass(\n-        YarnConfiguration.TIMELINE_SERVICE_WRITER_CLASS,\n-        HBaseTimelineWriterImpl.class,\n-        TimelineWriter.class), conf);\n+    writer \u003d createTimelineWriter(conf);\n     writer.init(conf);\n     // create a single dedicated thread for flushing the writer on a periodic\n     // basis\n     writerFlusher \u003d Executors.newSingleThreadScheduledExecutor();\n     flushInterval \u003d conf.getInt(\n         YarnConfiguration.\n         TIMELINE_SERVICE_WRITER_FLUSH_INTERVAL_SECONDS,\n         YarnConfiguration.\n         DEFAULT_TIMELINE_SERVICE_WRITER_FLUSH_INTERVAL_SECONDS);\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    writer \u003d createTimelineWriter(conf);\n    writer.init(conf);\n    // create a single dedicated thread for flushing the writer on a periodic\n    // basis\n    writerFlusher \u003d Executors.newSingleThreadScheduledExecutor();\n    flushInterval \u003d conf.getInt(\n        YarnConfiguration.\n        TIMELINE_SERVICE_WRITER_FLUSH_INTERVAL_SECONDS,\n        YarnConfiguration.\n        DEFAULT_TIMELINE_SERVICE_WRITER_FLUSH_INTERVAL_SECONDS);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java",
      "extendedDetails": {}
    },
    "0a9b085f052b5ebaf319bec7609c77d7f1684a4a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5189. Make HBaseTimeline[Reader|Writer]Impl default and move FileSystemTimeline*Impl. (Joep Rottinghuis and Sangjin Lee via gtcarrera9)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "0a9b085f052b5ebaf319bec7609c77d7f1684a4a",
      "commitAuthor": "Li Lu",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "a1b6d7456fa37b7b418dd08178ea73ed5c1de124",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     writer \u003d ReflectionUtils.newInstance(conf.getClass(\n         YarnConfiguration.TIMELINE_SERVICE_WRITER_CLASS,\n-        FileSystemTimelineWriterImpl.class,\n+        HBaseTimelineWriterImpl.class,\n         TimelineWriter.class), conf);\n     writer.init(conf);\n     // create a single dedicated thread for flushing the writer on a periodic\n     // basis\n     writerFlusher \u003d Executors.newSingleThreadScheduledExecutor();\n     flushInterval \u003d conf.getInt(\n         YarnConfiguration.\n         TIMELINE_SERVICE_WRITER_FLUSH_INTERVAL_SECONDS,\n         YarnConfiguration.\n         DEFAULT_TIMELINE_SERVICE_WRITER_FLUSH_INTERVAL_SECONDS);\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    writer \u003d ReflectionUtils.newInstance(conf.getClass(\n        YarnConfiguration.TIMELINE_SERVICE_WRITER_CLASS,\n        HBaseTimelineWriterImpl.class,\n        TimelineWriter.class), conf);\n    writer.init(conf);\n    // create a single dedicated thread for flushing the writer on a periodic\n    // basis\n    writerFlusher \u003d Executors.newSingleThreadScheduledExecutor();\n    flushInterval \u003d conf.getInt(\n        YarnConfiguration.\n        TIMELINE_SERVICE_WRITER_FLUSH_INTERVAL_SECONDS,\n        YarnConfiguration.\n        DEFAULT_TIMELINE_SERVICE_WRITER_FLUSH_INTERVAL_SECONDS);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java",
      "extendedDetails": {}
    },
    "8603736ef2bb34605ea10f516dbe4e73bed3f309": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3949. Ensure timely flush of timeline writes. Contributed by Sangjin Lee.\n\n(cherry picked from commit 967bef7e0396d857913caa2574afb103a5f0b81b)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "8603736ef2bb34605ea10f516dbe4e73bed3f309",
      "commitAuthor": "Junping Du",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "22e7ae57715cedb1dcba736e357e8daaf5133e5c",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,14 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     writer \u003d ReflectionUtils.newInstance(conf.getClass(\n         YarnConfiguration.TIMELINE_SERVICE_WRITER_CLASS,\n         FileSystemTimelineWriterImpl.class,\n         TimelineWriter.class), conf);\n     writer.init(conf);\n+    // create a single dedicated thread for flushing the writer on a periodic\n+    // basis\n+    writerFlusher \u003d Executors.newSingleThreadScheduledExecutor();\n+    flushInterval \u003d conf.getInt(\n+        YarnConfiguration.TIMELINE_SERVICE_WRITER_FLUSH_INTERVAL_SECONDS,\n+        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WRITER_FLUSH_INTERVAL_SECONDS);\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    writer \u003d ReflectionUtils.newInstance(conf.getClass(\n        YarnConfiguration.TIMELINE_SERVICE_WRITER_CLASS,\n        FileSystemTimelineWriterImpl.class,\n        TimelineWriter.class), conf);\n    writer.init(conf);\n    // create a single dedicated thread for flushing the writer on a periodic\n    // basis\n    writerFlusher \u003d Executors.newSingleThreadScheduledExecutor();\n    flushInterval \u003d conf.getInt(\n        YarnConfiguration.TIMELINE_SERVICE_WRITER_FLUSH_INTERVAL_SECONDS,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WRITER_FLUSH_INTERVAL_SECONDS);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java",
      "extendedDetails": {}
    },
    "41fb5c738117ab65a2f152a13de8c85476acdc58": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3134. Implemented Phoenix timeline writer to access HBase backend. Contributed by Li Lu.\n\n(cherry picked from commit b3b791be466be79e4e964ad068f7a6ec701e22e1)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "41fb5c738117ab65a2f152a13de8c85476acdc58",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,8 @@\n+  public void serviceInit(Configuration conf) throws Exception {\n+    writer \u003d ReflectionUtils.newInstance(conf.getClass(\n+        YarnConfiguration.TIMELINE_SERVICE_WRITER_CLASS,\n+        FileSystemTimelineWriterImpl.class,\n+        TimelineWriter.class), conf);\n+    writer.init(conf);\n+    super.serviceInit(conf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    writer \u003d ReflectionUtils.newInstance(conf.getClass(\n        YarnConfiguration.TIMELINE_SERVICE_WRITER_CLASS,\n        FileSystemTimelineWriterImpl.class,\n        TimelineWriter.class), conf);\n    writer.init(conf);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java"
    }
  }
}