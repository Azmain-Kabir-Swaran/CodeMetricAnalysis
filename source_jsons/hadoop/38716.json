{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FiCaSchedulerApp.java",
  "functionName": "getPendingAppDiagnosticMessage",
  "functionId": "getPendingAppDiagnosticMessage___diagnosticMessage-StringBuilder",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
  "functionStartLine": 988,
  "functionEndLine": 1009,
  "numCommitsSeen": 93,
  "timeTaken": 3362,
  "changeHistory": [
    "95372657fc25c02399b01793833021ccf88dada2",
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35",
    "6cb0af3c39a5d49cb2f7911ee21363a9542ca2d7"
  ],
  "changeHistoryShort": {
    "95372657fc25c02399b01793833021ccf88dada2": "Ybodychange",
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35": "Ybodychange",
    "6cb0af3c39a5d49cb2f7911ee21363a9542ca2d7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "95372657fc25c02399b01793833021ccf88dada2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9287. Consecutive StringBuilder append should be reuse. Contributed by Ayush Saxena.\n",
      "commitDate": "25/02/19 11:45 AM",
      "commitName": "95372657fc25c02399b01793833021ccf88dada2",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "01/11/18 2:22 PM",
      "commitNameOld": "2ab611d48b7669b31bd2c9b918f47251da77d0f6",
      "commitAuthorOld": "Jonathan Hung",
      "daysBetweenCommits": 115.93,
      "commitsBetweenForRepo": 799,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n   protected void getPendingAppDiagnosticMessage(\n       StringBuilder diagnosticMessage) {\n     LeafQueue queue \u003d getCSLeafQueue();\n-    diagnosticMessage.append(\" Details : AM Partition \u003d \");\n-    diagnosticMessage.append(appAMNodePartitionName.isEmpty()\n-        ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : appAMNodePartitionName);\n-    diagnosticMessage.append(\"; \");\n-    diagnosticMessage.append(\"AM Resource Request \u003d \");\n-    diagnosticMessage.append(getAMResource(appAMNodePartitionName));\n-    diagnosticMessage.append(\"; \");\n-    diagnosticMessage.append(\"Queue Resource Limit for AM \u003d \");\n-    diagnosticMessage\n-        .append(queue.getAMResourceLimitPerPartition(appAMNodePartitionName));\n-    diagnosticMessage.append(\"; \");\n-    diagnosticMessage.append(\"User AM Resource Limit of the queue \u003d \");\n-    diagnosticMessage.append(queue.getUserAMResourceLimitPerPartition(\n-        appAMNodePartitionName, getUser()));\n-    diagnosticMessage.append(\"; \");\n-    diagnosticMessage.append(\"Queue AM Resource Usage \u003d \");\n-    diagnosticMessage.append(\n-        queue.getQueueResourceUsage().getAMUsed(appAMNodePartitionName));\n-    diagnosticMessage.append(\"; \");\n+    diagnosticMessage.append(\" Details : AM Partition \u003d \")\n+        .append(appAMNodePartitionName.isEmpty()\n+        ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : appAMNodePartitionName)\n+        .append(\"; \")\n+        .append(\"AM Resource Request \u003d \")\n+        .append(getAMResource(appAMNodePartitionName))\n+        .append(\"; \")\n+        .append(\"Queue Resource Limit for AM \u003d \")\n+        .append(queue.getAMResourceLimitPerPartition(appAMNodePartitionName))\n+        .append(\"; \")\n+        .append(\"User AM Resource Limit of the queue \u003d \")\n+        .append(queue.getUserAMResourceLimitPerPartition(\n+            appAMNodePartitionName, getUser()))\n+        .append(\"; \")\n+        .append(\"Queue AM Resource Usage \u003d \")\n+        .append(\n+            queue.getQueueResourceUsage().getAMUsed(appAMNodePartitionName))\n+        .append(\"; \");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void getPendingAppDiagnosticMessage(\n      StringBuilder diagnosticMessage) {\n    LeafQueue queue \u003d getCSLeafQueue();\n    diagnosticMessage.append(\" Details : AM Partition \u003d \")\n        .append(appAMNodePartitionName.isEmpty()\n        ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : appAMNodePartitionName)\n        .append(\"; \")\n        .append(\"AM Resource Request \u003d \")\n        .append(getAMResource(appAMNodePartitionName))\n        .append(\"; \")\n        .append(\"Queue Resource Limit for AM \u003d \")\n        .append(queue.getAMResourceLimitPerPartition(appAMNodePartitionName))\n        .append(\"; \")\n        .append(\"User AM Resource Limit of the queue \u003d \")\n        .append(queue.getUserAMResourceLimitPerPartition(\n            appAMNodePartitionName, getUser()))\n        .append(\"; \")\n        .append(\"Queue AM Resource Usage \u003d \")\n        .append(\n            queue.getQueueResourceUsage().getAMUsed(appAMNodePartitionName))\n        .append(\"; \");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {}
    },
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5892. Support user-specific minimum user limit percentage in Capacity Scheduler. Contributed by Eric Payne.\n",
      "commitDate": "22/06/17 11:50 PM",
      "commitName": "ca13b224b2feb9c44de861da9cbba8dd2a12cb35",
      "commitAuthor": "Sunil G",
      "commitDateOld": "19/06/17 9:01 AM",
      "commitNameOld": "e9c2aa1bc383cb08784846534415bf17667d6e41",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 3.62,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   protected void getPendingAppDiagnosticMessage(\n       StringBuilder diagnosticMessage) {\n     LeafQueue queue \u003d getCSLeafQueue();\n     diagnosticMessage.append(\" Details : AM Partition \u003d \");\n     diagnosticMessage.append(appAMNodePartitionName.isEmpty()\n         ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : appAMNodePartitionName);\n     diagnosticMessage.append(\"; \");\n     diagnosticMessage.append(\"AM Resource Request \u003d \");\n     diagnosticMessage.append(getAMResource(appAMNodePartitionName));\n     diagnosticMessage.append(\"; \");\n     diagnosticMessage.append(\"Queue Resource Limit for AM \u003d \");\n     diagnosticMessage\n         .append(queue.getAMResourceLimitPerPartition(appAMNodePartitionName));\n     diagnosticMessage.append(\"; \");\n     diagnosticMessage.append(\"User AM Resource Limit of the queue \u003d \");\n-    diagnosticMessage.append(\n-        queue.getUserAMResourceLimitPerPartition(appAMNodePartitionName));\n+    diagnosticMessage.append(queue.getUserAMResourceLimitPerPartition(\n+        appAMNodePartitionName, getUser()));\n     diagnosticMessage.append(\"; \");\n     diagnosticMessage.append(\"Queue AM Resource Usage \u003d \");\n     diagnosticMessage.append(\n         queue.getQueueResourceUsage().getAMUsed(appAMNodePartitionName));\n     diagnosticMessage.append(\"; \");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void getPendingAppDiagnosticMessage(\n      StringBuilder diagnosticMessage) {\n    LeafQueue queue \u003d getCSLeafQueue();\n    diagnosticMessage.append(\" Details : AM Partition \u003d \");\n    diagnosticMessage.append(appAMNodePartitionName.isEmpty()\n        ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : appAMNodePartitionName);\n    diagnosticMessage.append(\"; \");\n    diagnosticMessage.append(\"AM Resource Request \u003d \");\n    diagnosticMessage.append(getAMResource(appAMNodePartitionName));\n    diagnosticMessage.append(\"; \");\n    diagnosticMessage.append(\"Queue Resource Limit for AM \u003d \");\n    diagnosticMessage\n        .append(queue.getAMResourceLimitPerPartition(appAMNodePartitionName));\n    diagnosticMessage.append(\"; \");\n    diagnosticMessage.append(\"User AM Resource Limit of the queue \u003d \");\n    diagnosticMessage.append(queue.getUserAMResourceLimitPerPartition(\n        appAMNodePartitionName, getUser()));\n    diagnosticMessage.append(\"; \");\n    diagnosticMessage.append(\"Queue AM Resource Usage \u003d \");\n    diagnosticMessage.append(\n        queue.getQueueResourceUsage().getAMUsed(appAMNodePartitionName));\n    diagnosticMessage.append(\"; \");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {}
    },
    "6cb0af3c39a5d49cb2f7911ee21363a9542ca2d7": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3946. Update exact reason as to why a submitted app is in ACCEPTED state to app\u0027s diagnostic message. (Naganarasimha G R via wangda)\n",
      "commitDate": "14/12/15 10:52 AM",
      "commitName": "6cb0af3c39a5d49cb2f7911ee21363a9542ca2d7",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,23 @@\n+  protected void getPendingAppDiagnosticMessage(\n+      StringBuilder diagnosticMessage) {\n+    LeafQueue queue \u003d getCSLeafQueue();\n+    diagnosticMessage.append(\" Details : AM Partition \u003d \");\n+    diagnosticMessage.append(appAMNodePartitionName.isEmpty()\n+        ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : appAMNodePartitionName);\n+    diagnosticMessage.append(\"; \");\n+    diagnosticMessage.append(\"AM Resource Request \u003d \");\n+    diagnosticMessage.append(getAMResource(appAMNodePartitionName));\n+    diagnosticMessage.append(\"; \");\n+    diagnosticMessage.append(\"Queue Resource Limit for AM \u003d \");\n+    diagnosticMessage\n+        .append(queue.getAMResourceLimitPerPartition(appAMNodePartitionName));\n+    diagnosticMessage.append(\"; \");\n+    diagnosticMessage.append(\"User AM Resource Limit of the queue \u003d \");\n+    diagnosticMessage.append(\n+        queue.getUserAMResourceLimitPerPartition(appAMNodePartitionName));\n+    diagnosticMessage.append(\"; \");\n+    diagnosticMessage.append(\"Queue AM Resource Usage \u003d \");\n+    diagnosticMessage.append(\n+        queue.getQueueResourceUsage().getAMUsed(appAMNodePartitionName));\n+    diagnosticMessage.append(\"; \");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void getPendingAppDiagnosticMessage(\n      StringBuilder diagnosticMessage) {\n    LeafQueue queue \u003d getCSLeafQueue();\n    diagnosticMessage.append(\" Details : AM Partition \u003d \");\n    diagnosticMessage.append(appAMNodePartitionName.isEmpty()\n        ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : appAMNodePartitionName);\n    diagnosticMessage.append(\"; \");\n    diagnosticMessage.append(\"AM Resource Request \u003d \");\n    diagnosticMessage.append(getAMResource(appAMNodePartitionName));\n    diagnosticMessage.append(\"; \");\n    diagnosticMessage.append(\"Queue Resource Limit for AM \u003d \");\n    diagnosticMessage\n        .append(queue.getAMResourceLimitPerPartition(appAMNodePartitionName));\n    diagnosticMessage.append(\"; \");\n    diagnosticMessage.append(\"User AM Resource Limit of the queue \u003d \");\n    diagnosticMessage.append(\n        queue.getUserAMResourceLimitPerPartition(appAMNodePartitionName));\n    diagnosticMessage.append(\"; \");\n    diagnosticMessage.append(\"Queue AM Resource Usage \u003d \");\n    diagnosticMessage.append(\n        queue.getQueueResourceUsage().getAMUsed(appAMNodePartitionName));\n    diagnosticMessage.append(\"; \");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java"
    }
  }
}