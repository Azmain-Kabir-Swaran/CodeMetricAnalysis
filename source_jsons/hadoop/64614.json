{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AFileSystem.java",
  "functionName": "getObjectMetadata",
  "functionId": "getObjectMetadata___key-String__changeTracker-ChangeTracker__changeInvoker-Invoker__operation-String",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
  "functionStartLine": 1835,
  "functionEndLine": 1858,
  "numCommitsSeen": 247,
  "timeTaken": 8488,
  "changeHistory": [
    "9221704f857e33a5f9e00c19d3705e46e94f427b",
    "a36274d69947648dbe82721220cc5240ec5d396d",
    "6d0bffe17eadedd60d4599427248b0db4a7c5502",
    "7f783970364930cc461d1a73833bc58cdd10553e",
    "d7152332b32a575c3a92e3f4c44b95e58462528d",
    "7ac88244c54ce483729af3d2736d9f4731e230ca",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
    "839b690ed5edc2ac4984640d58c005bb63cd8a07",
    "c58a59f7081d55dd2108545ebf9ee48cf43ca944",
    "16b1cc7af9bd63b65ef50e1056f275a7baf111a2"
  ],
  "changeHistoryShort": {
    "9221704f857e33a5f9e00c19d3705e46e94f427b": "Ybodychange",
    "a36274d69947648dbe82721220cc5240ec5d396d": "Ymultichange(Yparameterchange,Ybodychange)",
    "6d0bffe17eadedd60d4599427248b0db4a7c5502": "Ybodychange",
    "7f783970364930cc461d1a73833bc58cdd10553e": "Ybodychange",
    "d7152332b32a575c3a92e3f4c44b95e58462528d": "Ybodychange",
    "7ac88244c54ce483729af3d2736d9f4731e230ca": "Ybodychange",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": "Ymultichange(Yexceptionschange,Ybodychange)",
    "839b690ed5edc2ac4984640d58c005bb63cd8a07": "Ybodychange",
    "c58a59f7081d55dd2108545ebf9ee48cf43ca944": "Ymultichange(Ymodifierchange,Ybodychange)",
    "16b1cc7af9bd63b65ef50e1056f275a7baf111a2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9221704f857e33a5f9e00c19d3705e46e94f427b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16490. Avoid/handle cached 404s during S3A file creation.\n\nContributed by Steve Loughran.\n\nThis patch avoids issuing any HEAD path request when creating a file with overwrite\u003dtrue,\nso 404s will not end up in the S3 load balancers unless someone calls getFileStatus/exists/isFile\nin their own code.\n\nThe Hadoop FsShell CommandWithDestination class is modified to not register uncreated files\nfor deleteOnExit(), because that calls exists() and so can place the 404 in the cache, even\nafter S3A is patched to not do it itself.\n\nBecause S3Guard knows when a file should be present, it adds a special FileNotFound retry policy\nindependently configurable from other retry policies; it is also exponential, but with\ndifferent parameters. This is because every HEAD request will refresh any 404 cached in\nthe S3 Load Balancers. It\u0027s not enough to retry: we have to have a suitable gap between\nattempts to (hopefully) ensure any cached entry wil be gone.\n\nThe options and values are:\n\nfs.s3a.s3guard.consistency.retry.interval: 2s\nfs.s3a.s3guard.consistency.retry.limit: 7\n\nThe S3A copy() method used during rename() raises a RemoteFileChangedException which is not caught\nso not downgraded to false. Thus: when a rename is unrecoverable, this fact is propagated.\n\nCopy operations without S3Guard lack the confidence that the file exists, so don\u0027t retry the same way:\nit will fail fast with a different error message. However, because create(path, overwrite\u003dfalse) no\nlonger does HEAD path, we can at least be confident that S3A itself is not creating those cached\n404 markers.\n\nChange-Id: Ia7807faad8b9a8546836cb19f816cccf17cca26d\n",
      "commitDate": "11/09/19 8:46 AM",
      "commitName": "9221704f857e33a5f9e00c19d3705e46e94f427b",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "05/09/19 6:25 AM",
      "commitNameOld": "511df1e837b19ccb9271520589452d82d50ac69d",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 6.1,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n   protected ObjectMetadata getObjectMetadata(String key,\n       ChangeTracker changeTracker,\n       Invoker changeInvoker,\n       String operation) throws IOException {\n     GetObjectMetadataRequest request \u003d\n         new GetObjectMetadataRequest(bucket, key);\n     //SSE-C requires to be filled in if enabled for object metadata\n     generateSSECustomerKey().ifPresent(request::setSSECustomerKey);\n     ObjectMetadata meta \u003d changeInvoker.retryUntranslated(\"GET \" + key, true,\n         () -\u003e {\n           incrementStatistic(OBJECT_METADATA_REQUESTS);\n+          LOG.debug(\"HEAD {} with change tracker {}\", key, changeTracker);\n           if (changeTracker !\u003d null) {\n             changeTracker.maybeApplyConstraint(request);\n           }\n           ObjectMetadata objectMetadata \u003d s3.getObjectMetadata(request);\n           if (changeTracker !\u003d null) {\n             changeTracker.processMetadata(objectMetadata, operation);\n           }\n           return objectMetadata;\n         });\n     incrementReadOperations();\n     return meta;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected ObjectMetadata getObjectMetadata(String key,\n      ChangeTracker changeTracker,\n      Invoker changeInvoker,\n      String operation) throws IOException {\n    GetObjectMetadataRequest request \u003d\n        new GetObjectMetadataRequest(bucket, key);\n    //SSE-C requires to be filled in if enabled for object metadata\n    generateSSECustomerKey().ifPresent(request::setSSECustomerKey);\n    ObjectMetadata meta \u003d changeInvoker.retryUntranslated(\"GET \" + key, true,\n        () -\u003e {\n          incrementStatistic(OBJECT_METADATA_REQUESTS);\n          LOG.debug(\"HEAD {} with change tracker {}\", key, changeTracker);\n          if (changeTracker !\u003d null) {\n            changeTracker.maybeApplyConstraint(request);\n          }\n          ObjectMetadata objectMetadata \u003d s3.getObjectMetadata(request);\n          if (changeTracker !\u003d null) {\n            changeTracker.processMetadata(objectMetadata, operation);\n          }\n          return objectMetadata;\n        });\n    incrementReadOperations();\n    return meta;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "a36274d69947648dbe82721220cc5240ec5d396d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-16085. S3Guard: use object version or etags to protect against inconsistent read after replace/overwrite.\n\nContributed by Ben Roling.\n\nS3Guard will now track the etag of uploaded files and, if an S3\nbucket is versioned, the object version.\n\nYou can then control how to react to a mismatch between the data\nin the DynamoDB table and that in the store: warn, fail, or, when\nusing versions, return the original value.\n\nThis adds two new columns to the table: etag and version.\nThis is transparent to older S3A clients -but when such clients\nadd/update data to the S3Guard table, they will not add these values.\nAs a result, the etag/version checks will not work with files uploaded by older clients.\n\nFor a consistent experience, upgrade all clients to use the latest hadoop version.\n",
      "commitDate": "19/05/19 2:29 PM",
      "commitName": "a36274d69947648dbe82721220cc5240ec5d396d",
      "commitAuthor": "Ben Roling",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-16085. S3Guard: use object version or etags to protect against inconsistent read after replace/overwrite.\n\nContributed by Ben Roling.\n\nS3Guard will now track the etag of uploaded files and, if an S3\nbucket is versioned, the object version.\n\nYou can then control how to react to a mismatch between the data\nin the DynamoDB table and that in the store: warn, fail, or, when\nusing versions, return the original value.\n\nThis adds two new columns to the table: etag and version.\nThis is transparent to older S3A clients -but when such clients\nadd/update data to the S3Guard table, they will not add these values.\nAs a result, the etag/version checks will not work with files uploaded by older clients.\n\nFor a consistent experience, upgrade all clients to use the latest hadoop version.\n",
          "commitDate": "19/05/19 2:29 PM",
          "commitName": "a36274d69947648dbe82721220cc5240ec5d396d",
          "commitAuthor": "Ben Roling",
          "commitDateOld": "30/04/19 3:53 AM",
          "commitNameOld": "0af4011580878566213016af0c32633eabd15100",
          "commitAuthorOld": "Ben Roling",
          "daysBetweenCommits": 19.44,
          "commitsBetweenForRepo": 90,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,23 @@\n-  protected ObjectMetadata getObjectMetadata(String key) throws IOException {\n+  protected ObjectMetadata getObjectMetadata(String key,\n+      ChangeTracker changeTracker,\n+      Invoker changeInvoker,\n+      String operation) throws IOException {\n     GetObjectMetadataRequest request \u003d\n         new GetObjectMetadataRequest(bucket, key);\n     //SSE-C requires to be filled in if enabled for object metadata\n     generateSSECustomerKey().ifPresent(request::setSSECustomerKey);\n-    ObjectMetadata meta \u003d invoker.retryUntranslated(\"GET \" + key, true,\n+    ObjectMetadata meta \u003d changeInvoker.retryUntranslated(\"GET \" + key, true,\n         () -\u003e {\n           incrementStatistic(OBJECT_METADATA_REQUESTS);\n-          return s3.getObjectMetadata(request);\n+          if (changeTracker !\u003d null) {\n+            changeTracker.maybeApplyConstraint(request);\n+          }\n+          ObjectMetadata objectMetadata \u003d s3.getObjectMetadata(request);\n+          if (changeTracker !\u003d null) {\n+            changeTracker.processMetadata(objectMetadata, operation);\n+          }\n+          return objectMetadata;\n         });\n     incrementReadOperations();\n     return meta;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected ObjectMetadata getObjectMetadata(String key,\n      ChangeTracker changeTracker,\n      Invoker changeInvoker,\n      String operation) throws IOException {\n    GetObjectMetadataRequest request \u003d\n        new GetObjectMetadataRequest(bucket, key);\n    //SSE-C requires to be filled in if enabled for object metadata\n    generateSSECustomerKey().ifPresent(request::setSSECustomerKey);\n    ObjectMetadata meta \u003d changeInvoker.retryUntranslated(\"GET \" + key, true,\n        () -\u003e {\n          incrementStatistic(OBJECT_METADATA_REQUESTS);\n          if (changeTracker !\u003d null) {\n            changeTracker.maybeApplyConstraint(request);\n          }\n          ObjectMetadata objectMetadata \u003d s3.getObjectMetadata(request);\n          if (changeTracker !\u003d null) {\n            changeTracker.processMetadata(objectMetadata, operation);\n          }\n          return objectMetadata;\n        });\n    incrementReadOperations();\n    return meta;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {
            "oldValue": "[key-String]",
            "newValue": "[key-String, changeTracker-ChangeTracker, changeInvoker-Invoker, operation-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16085. S3Guard: use object version or etags to protect against inconsistent read after replace/overwrite.\n\nContributed by Ben Roling.\n\nS3Guard will now track the etag of uploaded files and, if an S3\nbucket is versioned, the object version.\n\nYou can then control how to react to a mismatch between the data\nin the DynamoDB table and that in the store: warn, fail, or, when\nusing versions, return the original value.\n\nThis adds two new columns to the table: etag and version.\nThis is transparent to older S3A clients -but when such clients\nadd/update data to the S3Guard table, they will not add these values.\nAs a result, the etag/version checks will not work with files uploaded by older clients.\n\nFor a consistent experience, upgrade all clients to use the latest hadoop version.\n",
          "commitDate": "19/05/19 2:29 PM",
          "commitName": "a36274d69947648dbe82721220cc5240ec5d396d",
          "commitAuthor": "Ben Roling",
          "commitDateOld": "30/04/19 3:53 AM",
          "commitNameOld": "0af4011580878566213016af0c32633eabd15100",
          "commitAuthorOld": "Ben Roling",
          "daysBetweenCommits": 19.44,
          "commitsBetweenForRepo": 90,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,23 @@\n-  protected ObjectMetadata getObjectMetadata(String key) throws IOException {\n+  protected ObjectMetadata getObjectMetadata(String key,\n+      ChangeTracker changeTracker,\n+      Invoker changeInvoker,\n+      String operation) throws IOException {\n     GetObjectMetadataRequest request \u003d\n         new GetObjectMetadataRequest(bucket, key);\n     //SSE-C requires to be filled in if enabled for object metadata\n     generateSSECustomerKey().ifPresent(request::setSSECustomerKey);\n-    ObjectMetadata meta \u003d invoker.retryUntranslated(\"GET \" + key, true,\n+    ObjectMetadata meta \u003d changeInvoker.retryUntranslated(\"GET \" + key, true,\n         () -\u003e {\n           incrementStatistic(OBJECT_METADATA_REQUESTS);\n-          return s3.getObjectMetadata(request);\n+          if (changeTracker !\u003d null) {\n+            changeTracker.maybeApplyConstraint(request);\n+          }\n+          ObjectMetadata objectMetadata \u003d s3.getObjectMetadata(request);\n+          if (changeTracker !\u003d null) {\n+            changeTracker.processMetadata(objectMetadata, operation);\n+          }\n+          return objectMetadata;\n         });\n     incrementReadOperations();\n     return meta;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected ObjectMetadata getObjectMetadata(String key,\n      ChangeTracker changeTracker,\n      Invoker changeInvoker,\n      String operation) throws IOException {\n    GetObjectMetadataRequest request \u003d\n        new GetObjectMetadataRequest(bucket, key);\n    //SSE-C requires to be filled in if enabled for object metadata\n    generateSSECustomerKey().ifPresent(request::setSSECustomerKey);\n    ObjectMetadata meta \u003d changeInvoker.retryUntranslated(\"GET \" + key, true,\n        () -\u003e {\n          incrementStatistic(OBJECT_METADATA_REQUESTS);\n          if (changeTracker !\u003d null) {\n            changeTracker.maybeApplyConstraint(request);\n          }\n          ObjectMetadata objectMetadata \u003d s3.getObjectMetadata(request);\n          if (changeTracker !\u003d null) {\n            changeTracker.processMetadata(objectMetadata, operation);\n          }\n          return objectMetadata;\n        });\n    incrementReadOperations();\n    return meta;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "6d0bffe17eadedd60d4599427248b0db4a7c5502": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14556. S3A to support Delegation Tokens.\n\nContributed by Steve Loughran and Daryn Sharp.\n",
      "commitDate": "14/01/19 9:59 AM",
      "commitName": "6d0bffe17eadedd60d4599427248b0db4a7c5502",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "07/01/19 9:51 PM",
      "commitNameOld": "7f783970364930cc461d1a73833bc58cdd10553e",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 6.51,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,13 @@\n   protected ObjectMetadata getObjectMetadata(String key) throws IOException {\n     GetObjectMetadataRequest request \u003d\n         new GetObjectMetadataRequest(bucket, key);\n     //SSE-C requires to be filled in if enabled for object metadata\n-    if(S3AEncryptionMethods.SSE_C.equals(serverSideEncryptionAlgorithm) \u0026\u0026\n-        isNotBlank(getServerSideEncryptionKey(bucket, getConf()))){\n-      request.setSSECustomerKey(generateSSECustomerKey());\n-    }\n+    generateSSECustomerKey().ifPresent(request::setSSECustomerKey);\n     ObjectMetadata meta \u003d invoker.retryUntranslated(\"GET \" + key, true,\n         () -\u003e {\n           incrementStatistic(OBJECT_METADATA_REQUESTS);\n           return s3.getObjectMetadata(request);\n         });\n     incrementReadOperations();\n     return meta;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected ObjectMetadata getObjectMetadata(String key) throws IOException {\n    GetObjectMetadataRequest request \u003d\n        new GetObjectMetadataRequest(bucket, key);\n    //SSE-C requires to be filled in if enabled for object metadata\n    generateSSECustomerKey().ifPresent(request::setSSECustomerKey);\n    ObjectMetadata meta \u003d invoker.retryUntranslated(\"GET \" + key, true,\n        () -\u003e {\n          incrementStatistic(OBJECT_METADATA_REQUESTS);\n          return s3.getObjectMetadata(request);\n        });\n    incrementReadOperations();\n    return meta;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "7f783970364930cc461d1a73833bc58cdd10553e": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-14556. S3A to support Delegation Tokens.\"\n\nThis reverts commit d7152332b32a575c3a92e3f4c44b95e58462528d.\n",
      "commitDate": "07/01/19 9:51 PM",
      "commitName": "7f783970364930cc461d1a73833bc58cdd10553e",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "07/01/19 5:18 AM",
      "commitNameOld": "d7152332b32a575c3a92e3f4c44b95e58462528d",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 0.69,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,16 @@\n   protected ObjectMetadata getObjectMetadata(String key) throws IOException {\n     GetObjectMetadataRequest request \u003d\n         new GetObjectMetadataRequest(bucket, key);\n     //SSE-C requires to be filled in if enabled for object metadata\n-    generateSSECustomerKey().ifPresent(request::setSSECustomerKey);\n+    if(S3AEncryptionMethods.SSE_C.equals(serverSideEncryptionAlgorithm) \u0026\u0026\n+        isNotBlank(getServerSideEncryptionKey(bucket, getConf()))){\n+      request.setSSECustomerKey(generateSSECustomerKey());\n+    }\n     ObjectMetadata meta \u003d invoker.retryUntranslated(\"GET \" + key, true,\n         () -\u003e {\n           incrementStatistic(OBJECT_METADATA_REQUESTS);\n           return s3.getObjectMetadata(request);\n         });\n     incrementReadOperations();\n     return meta;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected ObjectMetadata getObjectMetadata(String key) throws IOException {\n    GetObjectMetadataRequest request \u003d\n        new GetObjectMetadataRequest(bucket, key);\n    //SSE-C requires to be filled in if enabled for object metadata\n    if(S3AEncryptionMethods.SSE_C.equals(serverSideEncryptionAlgorithm) \u0026\u0026\n        isNotBlank(getServerSideEncryptionKey(bucket, getConf()))){\n      request.setSSECustomerKey(generateSSECustomerKey());\n    }\n    ObjectMetadata meta \u003d invoker.retryUntranslated(\"GET \" + key, true,\n        () -\u003e {\n          incrementStatistic(OBJECT_METADATA_REQUESTS);\n          return s3.getObjectMetadata(request);\n        });\n    incrementReadOperations();\n    return meta;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "d7152332b32a575c3a92e3f4c44b95e58462528d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14556. S3A to support Delegation Tokens.\n\nContributed by Steve Loughran.\n",
      "commitDate": "07/01/19 5:18 AM",
      "commitName": "d7152332b32a575c3a92e3f4c44b95e58462528d",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "28/11/18 9:45 AM",
      "commitNameOld": "5d96b74f33ca716c9fe4fadb046f79ed488a3059",
      "commitAuthorOld": "Sean Mackrory",
      "daysBetweenCommits": 39.81,
      "commitsBetweenForRepo": 242,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,13 @@\n   protected ObjectMetadata getObjectMetadata(String key) throws IOException {\n     GetObjectMetadataRequest request \u003d\n         new GetObjectMetadataRequest(bucket, key);\n     //SSE-C requires to be filled in if enabled for object metadata\n-    if(S3AEncryptionMethods.SSE_C.equals(serverSideEncryptionAlgorithm) \u0026\u0026\n-        isNotBlank(getServerSideEncryptionKey(bucket, getConf()))){\n-      request.setSSECustomerKey(generateSSECustomerKey());\n-    }\n+    generateSSECustomerKey().ifPresent(request::setSSECustomerKey);\n     ObjectMetadata meta \u003d invoker.retryUntranslated(\"GET \" + key, true,\n         () -\u003e {\n           incrementStatistic(OBJECT_METADATA_REQUESTS);\n           return s3.getObjectMetadata(request);\n         });\n     incrementReadOperations();\n     return meta;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected ObjectMetadata getObjectMetadata(String key) throws IOException {\n    GetObjectMetadataRequest request \u003d\n        new GetObjectMetadataRequest(bucket, key);\n    //SSE-C requires to be filled in if enabled for object metadata\n    generateSSECustomerKey().ifPresent(request::setSSECustomerKey);\n    ObjectMetadata meta \u003d invoker.retryUntranslated(\"GET \" + key, true,\n        () -\u003e {\n          incrementStatistic(OBJECT_METADATA_REQUESTS);\n          return s3.getObjectMetadata(request);\n        });\n    incrementReadOperations();\n    return meta;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "7ac88244c54ce483729af3d2736d9f4731e230ca": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14507. Extend per-bucket secret key config with explicit getPassword() on fs.s3a.$bucket.secret.key.\nContributed by Steve Loughran.\n",
      "commitDate": "16/02/18 8:37 AM",
      "commitName": "7ac88244c54ce483729af3d2736d9f4731e230ca",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "15/02/18 7:57 AM",
      "commitNameOld": "9a013b255f301c557c3868dc1ad657202e9e7a67",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 1.03,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   protected ObjectMetadata getObjectMetadata(String key) throws IOException {\n     GetObjectMetadataRequest request \u003d\n         new GetObjectMetadataRequest(bucket, key);\n     //SSE-C requires to be filled in if enabled for object metadata\n     if(S3AEncryptionMethods.SSE_C.equals(serverSideEncryptionAlgorithm) \u0026\u0026\n-        StringUtils.isNotBlank(getServerSideEncryptionKey(getConf()))){\n+        isNotBlank(getServerSideEncryptionKey(bucket, getConf()))){\n       request.setSSECustomerKey(generateSSECustomerKey());\n     }\n     ObjectMetadata meta \u003d invoker.retryUntranslated(\"GET \" + key, true,\n         () -\u003e {\n           incrementStatistic(OBJECT_METADATA_REQUESTS);\n           return s3.getObjectMetadata(request);\n         });\n     incrementReadOperations();\n     return meta;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected ObjectMetadata getObjectMetadata(String key) throws IOException {\n    GetObjectMetadataRequest request \u003d\n        new GetObjectMetadataRequest(bucket, key);\n    //SSE-C requires to be filled in if enabled for object metadata\n    if(S3AEncryptionMethods.SSE_C.equals(serverSideEncryptionAlgorithm) \u0026\u0026\n        isNotBlank(getServerSideEncryptionKey(bucket, getConf()))){\n      request.setSSECustomerKey(generateSSECustomerKey());\n    }\n    ObjectMetadata meta \u003d invoker.retryUntranslated(\"GET \" + key, true,\n        () -\u003e {\n          incrementStatistic(OBJECT_METADATA_REQUESTS);\n          return s3.getObjectMetadata(request);\n        });\n    incrementReadOperations();\n    return meta;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
      "commitDate": "22/11/17 7:28 AM",
      "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
          "commitDate": "22/11/17 7:28 AM",
          "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "25/09/17 3:59 PM",
          "commitNameOld": "47011d7dd300b0c74bb6cfe25b918c479d718f4f",
          "commitAuthorOld": "Aaron Fabbri",
          "daysBetweenCommits": 57.69,
          "commitsBetweenForRepo": 477,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,16 @@\n-  protected ObjectMetadata getObjectMetadata(String key) {\n-    incrementStatistic(OBJECT_METADATA_REQUESTS);\n+  protected ObjectMetadata getObjectMetadata(String key) throws IOException {\n     GetObjectMetadataRequest request \u003d\n         new GetObjectMetadataRequest(bucket, key);\n     //SSE-C requires to be filled in if enabled for object metadata\n     if(S3AEncryptionMethods.SSE_C.equals(serverSideEncryptionAlgorithm) \u0026\u0026\n         StringUtils.isNotBlank(getServerSideEncryptionKey(getConf()))){\n       request.setSSECustomerKey(generateSSECustomerKey());\n     }\n-    ObjectMetadata meta \u003d s3.getObjectMetadata(request);\n+    ObjectMetadata meta \u003d invoker.retryUntranslated(\"GET \" + key, true,\n+        () -\u003e {\n+          incrementStatistic(OBJECT_METADATA_REQUESTS);\n+          return s3.getObjectMetadata(request);\n+        });\n     incrementReadOperations();\n     return meta;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected ObjectMetadata getObjectMetadata(String key) throws IOException {\n    GetObjectMetadataRequest request \u003d\n        new GetObjectMetadataRequest(bucket, key);\n    //SSE-C requires to be filled in if enabled for object metadata\n    if(S3AEncryptionMethods.SSE_C.equals(serverSideEncryptionAlgorithm) \u0026\u0026\n        StringUtils.isNotBlank(getServerSideEncryptionKey(getConf()))){\n      request.setSSECustomerKey(generateSSECustomerKey());\n    }\n    ObjectMetadata meta \u003d invoker.retryUntranslated(\"GET \" + key, true,\n        () -\u003e {\n          incrementStatistic(OBJECT_METADATA_REQUESTS);\n          return s3.getObjectMetadata(request);\n        });\n    incrementReadOperations();\n    return meta;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
          "commitDate": "22/11/17 7:28 AM",
          "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "25/09/17 3:59 PM",
          "commitNameOld": "47011d7dd300b0c74bb6cfe25b918c479d718f4f",
          "commitAuthorOld": "Aaron Fabbri",
          "daysBetweenCommits": 57.69,
          "commitsBetweenForRepo": 477,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,16 @@\n-  protected ObjectMetadata getObjectMetadata(String key) {\n-    incrementStatistic(OBJECT_METADATA_REQUESTS);\n+  protected ObjectMetadata getObjectMetadata(String key) throws IOException {\n     GetObjectMetadataRequest request \u003d\n         new GetObjectMetadataRequest(bucket, key);\n     //SSE-C requires to be filled in if enabled for object metadata\n     if(S3AEncryptionMethods.SSE_C.equals(serverSideEncryptionAlgorithm) \u0026\u0026\n         StringUtils.isNotBlank(getServerSideEncryptionKey(getConf()))){\n       request.setSSECustomerKey(generateSSECustomerKey());\n     }\n-    ObjectMetadata meta \u003d s3.getObjectMetadata(request);\n+    ObjectMetadata meta \u003d invoker.retryUntranslated(\"GET \" + key, true,\n+        () -\u003e {\n+          incrementStatistic(OBJECT_METADATA_REQUESTS);\n+          return s3.getObjectMetadata(request);\n+        });\n     incrementReadOperations();\n     return meta;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected ObjectMetadata getObjectMetadata(String key) throws IOException {\n    GetObjectMetadataRequest request \u003d\n        new GetObjectMetadataRequest(bucket, key);\n    //SSE-C requires to be filled in if enabled for object metadata\n    if(S3AEncryptionMethods.SSE_C.equals(serverSideEncryptionAlgorithm) \u0026\u0026\n        StringUtils.isNotBlank(getServerSideEncryptionKey(getConf()))){\n      request.setSSECustomerKey(generateSSECustomerKey());\n    }\n    ObjectMetadata meta \u003d invoker.retryUntranslated(\"GET \" + key, true,\n        () -\u003e {\n          incrementStatistic(OBJECT_METADATA_REQUESTS);\n          return s3.getObjectMetadata(request);\n        });\n    incrementReadOperations();\n    return meta;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "839b690ed5edc2ac4984640d58c005bb63cd8a07": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13075. Add support for SSE-KMS and SSE-C in s3a filesystem. (Steve Moist via lei)\n",
      "commitDate": "11/02/17 1:59 PM",
      "commitName": "839b690ed5edc2ac4984640d58c005bb63cd8a07",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "11/01/17 9:25 AM",
      "commitNameOld": "e648b6e1382336af69434dfbf9161bced3caa244",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 31.19,
      "commitsBetweenForRepo": 140,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,13 @@\n   protected ObjectMetadata getObjectMetadata(String key) {\n     incrementStatistic(OBJECT_METADATA_REQUESTS);\n-    ObjectMetadata meta \u003d s3.getObjectMetadata(bucket, key);\n+    GetObjectMetadataRequest request \u003d\n+        new GetObjectMetadataRequest(bucket, key);\n+    //SSE-C requires to be filled in if enabled for object metadata\n+    if(S3AEncryptionMethods.SSE_C.equals(serverSideEncryptionAlgorithm) \u0026\u0026\n+        StringUtils.isNotBlank(getServerSideEncryptionKey(getConf()))){\n+      request.setSSECustomerKey(generateSSECustomerKey());\n+    }\n+    ObjectMetadata meta \u003d s3.getObjectMetadata(request);\n     incrementReadOperations();\n     return meta;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected ObjectMetadata getObjectMetadata(String key) {\n    incrementStatistic(OBJECT_METADATA_REQUESTS);\n    GetObjectMetadataRequest request \u003d\n        new GetObjectMetadataRequest(bucket, key);\n    //SSE-C requires to be filled in if enabled for object metadata\n    if(S3AEncryptionMethods.SSE_C.equals(serverSideEncryptionAlgorithm) \u0026\u0026\n        StringUtils.isNotBlank(getServerSideEncryptionKey(getConf()))){\n      request.setSSECustomerKey(generateSSECustomerKey());\n    }\n    ObjectMetadata meta \u003d s3.getObjectMetadata(request);\n    incrementReadOperations();\n    return meta;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "c58a59f7081d55dd2108545ebf9ee48cf43ca944": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-13171. Add StorageStatistics to S3A; instrument some more operations. Contributed by Steve Loughran.\n",
      "commitDate": "03/06/16 8:55 AM",
      "commitName": "c58a59f7081d55dd2108545ebf9ee48cf43ca944",
      "commitAuthor": "Chris Nauroth",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-13171. Add StorageStatistics to S3A; instrument some more operations. Contributed by Steve Loughran.\n",
          "commitDate": "03/06/16 8:55 AM",
          "commitName": "c58a59f7081d55dd2108545ebf9ee48cf43ca944",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "01/06/16 2:49 PM",
          "commitNameOld": "16b1cc7af9bd63b65ef50e1056f275a7baf111a2",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 1.75,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,6 @@\n-  private ObjectMetadata getObjectMetadata(String key) {\n+  protected ObjectMetadata getObjectMetadata(String key) {\n+    incrementStatistic(OBJECT_METADATA_REQUESTS);\n     ObjectMetadata meta \u003d s3.getObjectMetadata(bucket, key);\n-    statistics.incrementReadOps(1);\n+    incrementReadOperations();\n     return meta;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected ObjectMetadata getObjectMetadata(String key) {\n    incrementStatistic(OBJECT_METADATA_REQUESTS);\n    ObjectMetadata meta \u003d s3.getObjectMetadata(bucket, key);\n    incrementReadOperations();\n    return meta;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13171. Add StorageStatistics to S3A; instrument some more operations. Contributed by Steve Loughran.\n",
          "commitDate": "03/06/16 8:55 AM",
          "commitName": "c58a59f7081d55dd2108545ebf9ee48cf43ca944",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "01/06/16 2:49 PM",
          "commitNameOld": "16b1cc7af9bd63b65ef50e1056f275a7baf111a2",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 1.75,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,6 @@\n-  private ObjectMetadata getObjectMetadata(String key) {\n+  protected ObjectMetadata getObjectMetadata(String key) {\n+    incrementStatistic(OBJECT_METADATA_REQUESTS);\n     ObjectMetadata meta \u003d s3.getObjectMetadata(bucket, key);\n-    statistics.incrementReadOps(1);\n+    incrementReadOperations();\n     return meta;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected ObjectMetadata getObjectMetadata(String key) {\n    incrementStatistic(OBJECT_METADATA_REQUESTS);\n    ObjectMetadata meta \u003d s3.getObjectMetadata(bucket, key);\n    incrementReadOperations();\n    return meta;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "16b1cc7af9bd63b65ef50e1056f275a7baf111a2": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13131. Add tests to verify that S3A supports SSE-S3 encryption. Contributed by Steve Loughran.\n",
      "commitDate": "01/06/16 2:49 PM",
      "commitName": "16b1cc7af9bd63b65ef50e1056f275a7baf111a2",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,5 @@\n+  private ObjectMetadata getObjectMetadata(String key) {\n+    ObjectMetadata meta \u003d s3.getObjectMetadata(bucket, key);\n+    statistics.incrementReadOps(1);\n+    return meta;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private ObjectMetadata getObjectMetadata(String key) {\n    ObjectMetadata meta \u003d s3.getObjectMetadata(bucket, key);\n    statistics.incrementReadOps(1);\n    return meta;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java"
    }
  }
}