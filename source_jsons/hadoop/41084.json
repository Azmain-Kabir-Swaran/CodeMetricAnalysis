{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QueuePlacementPolicy.java",
  "functionName": "getParentRuleElement",
  "functionId": "getParentRuleElement___node-Node",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueuePlacementPolicy.java",
  "functionStartLine": 201,
  "functionEndLine": 231,
  "numCommitsSeen": 8,
  "timeTaken": 3492,
  "changeHistory": [
    "5257f50abb71905ef3068fd45541d00ce9e8f355"
  ],
  "changeHistoryShort": {
    "5257f50abb71905ef3068fd45541d00ce9e8f355": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5257f50abb71905ef3068fd45541d00ce9e8f355": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8967. Change FairScheduler to use PlacementRule interface. Contributed by Wilfred Spiegelenburg.\n",
      "commitDate": "25/03/19 10:47 PM",
      "commitName": "5257f50abb71905ef3068fd45541d00ce9e8f355",
      "commitAuthor": "yufei",
      "diff": "@@ -0,0 +1,31 @@\n+  private static Element getParentRuleElement(Node node)\n+      throws AllocationConfigurationException {\n+    Element parent \u003d null;\n+    // walk over the node list\n+    if (node.hasChildNodes()) {\n+      NodeList childList \u003d node.getChildNodes();\n+      for (int j \u003d 0; j \u003c childList.getLength(); j++) {\n+        Node child \u003d childList.item(j);\n+        if (child instanceof Element \u0026\u0026\n+            child.getNodeName().equalsIgnoreCase(\"rule\")) {\n+          if (parent !\u003d null) {\n+            LOG.warn(\"Rule \u0027{}\u0027 has multiple parent rules defined, only the \" +\n+                \"last parent rule will be used\",\n+                ((Element) node).getAttribute(\"name\"));\n+          }\n+          parent \u003d ((Element) child);\n+        }\n+      }\n+    }\n+    // sanity check the rule that is configured\n+    if (parent !\u003d null) {\n+      String parentName \u003d parent.getAttribute(\"name\");\n+      if (parentName.equals(\"reject\") ||\n+          parentName.equals(\"nestedUserQueue\")) {\n+        throw new AllocationConfigurationException(\"Rule \u0027\"\n+            + parentName\n+            + \"\u0027 is not allowed as a parent rule for any rule\");\n+      }\n+    }\n+    return parent;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static Element getParentRuleElement(Node node)\n      throws AllocationConfigurationException {\n    Element parent \u003d null;\n    // walk over the node list\n    if (node.hasChildNodes()) {\n      NodeList childList \u003d node.getChildNodes();\n      for (int j \u003d 0; j \u003c childList.getLength(); j++) {\n        Node child \u003d childList.item(j);\n        if (child instanceof Element \u0026\u0026\n            child.getNodeName().equalsIgnoreCase(\"rule\")) {\n          if (parent !\u003d null) {\n            LOG.warn(\"Rule \u0027{}\u0027 has multiple parent rules defined, only the \" +\n                \"last parent rule will be used\",\n                ((Element) node).getAttribute(\"name\"));\n          }\n          parent \u003d ((Element) child);\n        }\n      }\n    }\n    // sanity check the rule that is configured\n    if (parent !\u003d null) {\n      String parentName \u003d parent.getAttribute(\"name\");\n      if (parentName.equals(\"reject\") ||\n          parentName.equals(\"nestedUserQueue\")) {\n        throw new AllocationConfigurationException(\"Rule \u0027\"\n            + parentName\n            + \"\u0027 is not allowed as a parent rule for any rule\");\n      }\n    }\n    return parent;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueuePlacementPolicy.java"
    }
  }
}