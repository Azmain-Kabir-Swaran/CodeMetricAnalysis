{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "getRollingUpgradeStatus",
  "functionId": "getRollingUpgradeStatus",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 7278,
  "functionEndLine": 7303,
  "numCommitsSeen": 873,
  "timeTaken": 35428,
  "changeHistory": [
    "ff0b99eafeda035ebe0dc82cfe689808047a8893",
    "6f622672b62aa8d719060063ef0e47480cdc8655",
    "2a06101e61f2f7a08913c2367d9dbefb910e64a7",
    "aa8a6e498a66b992047aea710fb3c3f9472969f4"
  ],
  "changeHistoryShort": {
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": "Ybodychange",
    "6f622672b62aa8d719060063ef0e47480cdc8655": "Ybodychange",
    "2a06101e61f2f7a08913c2367d9dbefb910e64a7": "Ybodychange",
    "aa8a6e498a66b992047aea710fb3c3f9472969f4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10872. Add MutableRate metrics for FSNamesystemLock operations. Contributed by Erik Krogen.\n",
      "commitDate": "14/11/16 11:05 AM",
      "commitName": "ff0b99eafeda035ebe0dc82cfe689808047a8893",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "08/11/16 6:17 PM",
      "commitNameOld": "ed0bebabaaf27cd730f7f8eb002d92c9c7db327d",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 5.7,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public RollingUpgradeInfo.Bean getRollingUpgradeStatus() {\n     if (!isRollingUpgrade()) {\n       return null;\n     }\n     RollingUpgradeInfo upgradeInfo \u003d getRollingUpgradeInfo();\n     if (upgradeInfo.createdRollbackImages()) {\n       return new RollingUpgradeInfo.Bean(upgradeInfo);\n     }\n     readLock();\n     try {\n       // check again after acquiring the read lock.\n       upgradeInfo \u003d getRollingUpgradeInfo();\n       if (upgradeInfo \u003d\u003d null) {\n         return null;\n       }\n       if (!upgradeInfo.createdRollbackImages()) {\n         boolean hasRollbackImage \u003d this.getFSImage().hasRollbackFSImage();\n         upgradeInfo.setCreatedRollbackImages(hasRollbackImage);\n       }\n     } catch (IOException ioe) {\n       LOG.warn(\"Encountered exception setting Rollback Image\", ioe);\n     } finally {\n-      readUnlock();\n+      readUnlock(\"getRollingUpgradeStatus\");\n     }\n     return new RollingUpgradeInfo.Bean(upgradeInfo);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RollingUpgradeInfo.Bean getRollingUpgradeStatus() {\n    if (!isRollingUpgrade()) {\n      return null;\n    }\n    RollingUpgradeInfo upgradeInfo \u003d getRollingUpgradeInfo();\n    if (upgradeInfo.createdRollbackImages()) {\n      return new RollingUpgradeInfo.Bean(upgradeInfo);\n    }\n    readLock();\n    try {\n      // check again after acquiring the read lock.\n      upgradeInfo \u003d getRollingUpgradeInfo();\n      if (upgradeInfo \u003d\u003d null) {\n        return null;\n      }\n      if (!upgradeInfo.createdRollbackImages()) {\n        boolean hasRollbackImage \u003d this.getFSImage().hasRollbackFSImage();\n        upgradeInfo.setCreatedRollbackImages(hasRollbackImage);\n      }\n    } catch (IOException ioe) {\n      LOG.warn(\"Encountered exception setting Rollback Image\", ioe);\n    } finally {\n      readUnlock(\"getRollingUpgradeStatus\");\n    }\n    return new RollingUpgradeInfo.Bean(upgradeInfo);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "6f622672b62aa8d719060063ef0e47480cdc8655": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7894. Rolling upgrade readiness is not updated in jmx until query command is issued. Contributed by Brahma Reddy Battula.\n",
      "commitDate": "08/05/15 7:30 AM",
      "commitName": "6f622672b62aa8d719060063ef0e47480cdc8655",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "07/05/15 3:17 PM",
      "commitNameOld": "767b91cd834dc235ce9d116ba745b90c24ebe290",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,26 @@\n   public RollingUpgradeInfo.Bean getRollingUpgradeStatus() {\n+    if (!isRollingUpgrade()) {\n+      return null;\n+    }\n     RollingUpgradeInfo upgradeInfo \u003d getRollingUpgradeInfo();\n-    if (upgradeInfo !\u003d null) {\n+    if (upgradeInfo.createdRollbackImages()) {\n       return new RollingUpgradeInfo.Bean(upgradeInfo);\n     }\n-    return null;\n+    readLock();\n+    try {\n+      // check again after acquiring the read lock.\n+      upgradeInfo \u003d getRollingUpgradeInfo();\n+      if (upgradeInfo \u003d\u003d null) {\n+        return null;\n+      }\n+      if (!upgradeInfo.createdRollbackImages()) {\n+        boolean hasRollbackImage \u003d this.getFSImage().hasRollbackFSImage();\n+        upgradeInfo.setCreatedRollbackImages(hasRollbackImage);\n+      }\n+    } catch (IOException ioe) {\n+      LOG.warn(\"Encountered exception setting Rollback Image\", ioe);\n+    } finally {\n+      readUnlock();\n+    }\n+    return new RollingUpgradeInfo.Bean(upgradeInfo);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RollingUpgradeInfo.Bean getRollingUpgradeStatus() {\n    if (!isRollingUpgrade()) {\n      return null;\n    }\n    RollingUpgradeInfo upgradeInfo \u003d getRollingUpgradeInfo();\n    if (upgradeInfo.createdRollbackImages()) {\n      return new RollingUpgradeInfo.Bean(upgradeInfo);\n    }\n    readLock();\n    try {\n      // check again after acquiring the read lock.\n      upgradeInfo \u003d getRollingUpgradeInfo();\n      if (upgradeInfo \u003d\u003d null) {\n        return null;\n      }\n      if (!upgradeInfo.createdRollbackImages()) {\n        boolean hasRollbackImage \u003d this.getFSImage().hasRollbackFSImage();\n        upgradeInfo.setCreatedRollbackImages(hasRollbackImage);\n      }\n    } catch (IOException ioe) {\n      LOG.warn(\"Encountered exception setting Rollback Image\", ioe);\n    } finally {\n      readUnlock();\n    }\n    return new RollingUpgradeInfo.Bean(upgradeInfo);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "2a06101e61f2f7a08913c2367d9dbefb910e64a7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7182. JMX metrics aren\u0027t accessible when NN is busy. Contributed by Ming Ma.\n",
      "commitDate": "09/01/15 5:35 PM",
      "commitName": "2a06101e61f2f7a08913c2367d9dbefb910e64a7",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "22/12/14 11:19 PM",
      "commitNameOld": "5caebbae8c2fc9ba2e32384657aee21641a1a6d0",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 17.76,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,7 @@\n   public RollingUpgradeInfo.Bean getRollingUpgradeStatus() {\n-    readLock();\n-    try {\n-      RollingUpgradeInfo upgradeInfo \u003d getRollingUpgradeInfo();\n-      if (upgradeInfo !\u003d null) {\n-        return new RollingUpgradeInfo.Bean(upgradeInfo);\n-      }\n-      return null;\n-    } finally {\n-      readUnlock();\n+    RollingUpgradeInfo upgradeInfo \u003d getRollingUpgradeInfo();\n+    if (upgradeInfo !\u003d null) {\n+      return new RollingUpgradeInfo.Bean(upgradeInfo);\n     }\n+    return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RollingUpgradeInfo.Bean getRollingUpgradeStatus() {\n    RollingUpgradeInfo upgradeInfo \u003d getRollingUpgradeInfo();\n    if (upgradeInfo !\u003d null) {\n      return new RollingUpgradeInfo.Bean(upgradeInfo);\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "aa8a6e498a66b992047aea710fb3c3f9472969f4": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6013. add rollingUpgrade information to latest UI. Contributed by Vinayakumar B.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1573700 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/03/14 11:51 AM",
      "commitName": "aa8a6e498a66b992047aea710fb3c3f9472969f4",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,12 @@\n+  public RollingUpgradeInfo.Bean getRollingUpgradeStatus() {\n+    readLock();\n+    try {\n+      RollingUpgradeInfo upgradeInfo \u003d getRollingUpgradeInfo();\n+      if (upgradeInfo !\u003d null) {\n+        return new RollingUpgradeInfo.Bean(upgradeInfo);\n+      }\n+      return null;\n+    } finally {\n+      readUnlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public RollingUpgradeInfo.Bean getRollingUpgradeStatus() {\n    readLock();\n    try {\n      RollingUpgradeInfo upgradeInfo \u003d getRollingUpgradeInfo();\n      if (upgradeInfo !\u003d null) {\n        return new RollingUpgradeInfo.Bean(upgradeInfo);\n      }\n      return null;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}