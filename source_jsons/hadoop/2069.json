{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReencryptionStatus.java",
  "functionName": "addZoneIfNecessary",
  "functionId": "addZoneIfNecessary___zoneId-Long(modifiers-final)__name-String(modifiers-final)__reProto-ReencryptionInfoProto(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/ReencryptionStatus.java",
  "functionStartLine": 126,
  "functionEndLine": 152,
  "numCommitsSeen": 2,
  "timeTaken": 1527,
  "changeHistory": [
    "1000a2af04b24c123a3b08168f36b4e90420cab7"
  ],
  "changeHistoryShort": {
    "1000a2af04b24c123a3b08168f36b4e90420cab7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1000a2af04b24c123a3b08168f36b4e90420cab7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10899. Add functionality to re-encrypt EDEKs.\n",
      "commitDate": "23/08/17 5:06 PM",
      "commitName": "1000a2af04b24c123a3b08168f36b4e90420cab7",
      "commitAuthor": "Xiao Chen",
      "diff": "@@ -0,0 +1,27 @@\n+  private boolean addZoneIfNecessary(final Long zoneId, final String name,\n+      final ReencryptionInfoProto reProto) {\n+    if (!zoneStatuses.containsKey(zoneId)) {\n+      LOG.debug(\"Adding zone {} for re-encryption status\", zoneId);\n+      Preconditions.checkNotNull(reProto);\n+      final ZoneReencryptionStatus.Builder builder \u003d\n+          new ZoneReencryptionStatus.Builder();\n+      builder.id(zoneId).zoneName(name)\n+          .ezKeyVersionName(reProto.getEzKeyVersionName())\n+          .submissionTime(reProto.getSubmissionTime())\n+          .canceled(reProto.getCanceled())\n+          .filesReencrypted(reProto.getNumReencrypted())\n+          .fileReencryptionFailures(reProto.getNumFailures());\n+      if (reProto.hasCompletionTime()) {\n+        builder.completionTime(reProto.getCompletionTime());\n+        builder.state(State.Completed);\n+        zonesReencrypted++;\n+      } else {\n+        builder.state(State.Submitted);\n+      }\n+      if (reProto.hasLastFile()) {\n+        builder.lastCheckpointFile(reProto.getLastFile());\n+      }\n+      return zoneStatuses.put(zoneId, builder.build()) \u003d\u003d null;\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean addZoneIfNecessary(final Long zoneId, final String name,\n      final ReencryptionInfoProto reProto) {\n    if (!zoneStatuses.containsKey(zoneId)) {\n      LOG.debug(\"Adding zone {} for re-encryption status\", zoneId);\n      Preconditions.checkNotNull(reProto);\n      final ZoneReencryptionStatus.Builder builder \u003d\n          new ZoneReencryptionStatus.Builder();\n      builder.id(zoneId).zoneName(name)\n          .ezKeyVersionName(reProto.getEzKeyVersionName())\n          .submissionTime(reProto.getSubmissionTime())\n          .canceled(reProto.getCanceled())\n          .filesReencrypted(reProto.getNumReencrypted())\n          .fileReencryptionFailures(reProto.getNumFailures());\n      if (reProto.hasCompletionTime()) {\n        builder.completionTime(reProto.getCompletionTime());\n        builder.state(State.Completed);\n        zonesReencrypted++;\n      } else {\n        builder.state(State.Submitted);\n      }\n      if (reProto.hasLastFile()) {\n        builder.lastCheckpointFile(reProto.getLastFile());\n      }\n      return zoneStatuses.put(zoneId, builder.build()) \u003d\u003d null;\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/ReencryptionStatus.java"
    }
  }
}