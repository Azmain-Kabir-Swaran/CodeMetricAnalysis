{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AsyncDispatcher.java",
  "functionName": "serviceStop",
  "functionId": "serviceStop",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
  "functionStartLine": 179,
  "functionEndLine": 209,
  "numCommitsSeen": 45,
  "timeTaken": 9665,
  "changeHistory": [
    "466756416214a4bbc77af8a29da1a33e01106864",
    "4174b9756c8c7877797545c4356b1f40df603ec5",
    "913a8951366a5d816bbae253b230250e0b74849e",
    "3ae716fa696b87e849dae40225dc59fb5ed114cb",
    "c020b62cf8de1f3baadc9d2f3410640ef7880543",
    "2466460d4cd13ad5837c044476b26e63082c1d37",
    "aa067c6aa47b4c79577096817acc00ad6421180c",
    "341a476812015d0d584b198b451ea9458645a47c",
    "460ac8cb50e024b60e02a96c2ab27368dfe0944d",
    "e28015ed1b40278028cfb70c4c87d9bc95a2b6a6",
    "0928502029ef141759008997335ea2cd836a7154",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "5ee495e6f34faff231ad87ec890188eb63617393",
    "aeae1ba497ae5b22ecbd26fce9fe1dc2c9dbd49a",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "466756416214a4bbc77af8a29da1a33e01106864": "Ybodychange",
    "4174b9756c8c7877797545c4356b1f40df603ec5": "Ybodychange",
    "913a8951366a5d816bbae253b230250e0b74849e": "Ybodychange",
    "3ae716fa696b87e849dae40225dc59fb5ed114cb": "Ybodychange",
    "c020b62cf8de1f3baadc9d2f3410640ef7880543": "Ybodychange",
    "2466460d4cd13ad5837c044476b26e63082c1d37": "Ybodychange",
    "aa067c6aa47b4c79577096817acc00ad6421180c": "Ybodychange",
    "341a476812015d0d584b198b451ea9458645a47c": "Ybodychange",
    "460ac8cb50e024b60e02a96c2ab27368dfe0944d": "Ybodychange",
    "e28015ed1b40278028cfb70c4c87d9bc95a2b6a6": "Ybodychange",
    "0928502029ef141759008997335ea2cd836a7154": "Ymultichange(Yrename,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "5ee495e6f34faff231ad87ec890188eb63617393": "Ybodychange",
    "aeae1ba497ae5b22ecbd26fce9fe1dc2c9dbd49a": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "466756416214a4bbc77af8a29da1a33e01106864": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5911. DrainDispatcher does not drain all events on stop even if setDrainEventsOnStop is true. Contributed by Varun Saxena.\n",
      "commitDate": "22/11/16 7:19 PM",
      "commitName": "466756416214a4bbc77af8a29da1a33e01106864",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "31/10/16 4:07 PM",
      "commitNameOld": "07ab89e8bb3f647cef4f80f39237169a0c6a8520",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 22.18,
      "commitsBetweenForRepo": 181,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   protected void serviceStop() throws Exception {\n     if (drainEventsOnStop) {\n       blockNewEvents \u003d true;\n       LOG.info(\"AsyncDispatcher is draining to stop, ignoring any new events.\");\n       long endTime \u003d System.currentTimeMillis() + getConfig()\n           .getLong(YarnConfiguration.DISPATCHER_DRAIN_EVENTS_TIMEOUT,\n               YarnConfiguration.DEFAULT_DISPATCHER_DRAIN_EVENTS_TIMEOUT);\n \n       synchronized (waitForDrained) {\n         while (!isDrained() \u0026\u0026 eventHandlingThread !\u003d null\n             \u0026\u0026 eventHandlingThread.isAlive()\n             \u0026\u0026 System.currentTimeMillis() \u003c endTime) {\n-          waitForDrained.wait(1000);\n+          waitForDrained.wait(100);\n           LOG.info(\"Waiting for AsyncDispatcher to drain. Thread state is :\" +\n               eventHandlingThread.getState());\n         }\n       }\n     }\n     stopped \u003d true;\n     if (eventHandlingThread !\u003d null) {\n       eventHandlingThread.interrupt();\n       try {\n         eventHandlingThread.join();\n       } catch (InterruptedException ie) {\n         LOG.warn(\"Interrupted Exception while stopping\", ie);\n       }\n     }\n \n     // stop all the components\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (drainEventsOnStop) {\n      blockNewEvents \u003d true;\n      LOG.info(\"AsyncDispatcher is draining to stop, ignoring any new events.\");\n      long endTime \u003d System.currentTimeMillis() + getConfig()\n          .getLong(YarnConfiguration.DISPATCHER_DRAIN_EVENTS_TIMEOUT,\n              YarnConfiguration.DEFAULT_DISPATCHER_DRAIN_EVENTS_TIMEOUT);\n\n      synchronized (waitForDrained) {\n        while (!isDrained() \u0026\u0026 eventHandlingThread !\u003d null\n            \u0026\u0026 eventHandlingThread.isAlive()\n            \u0026\u0026 System.currentTimeMillis() \u003c endTime) {\n          waitForDrained.wait(100);\n          LOG.info(\"Waiting for AsyncDispatcher to drain. Thread state is :\" +\n              eventHandlingThread.getState());\n        }\n      }\n    }\n    stopped \u003d true;\n    if (eventHandlingThread !\u003d null) {\n      eventHandlingThread.interrupt();\n      try {\n        eventHandlingThread.join();\n      } catch (InterruptedException ie) {\n        LOG.warn(\"Interrupted Exception while stopping\", ie);\n      }\n    }\n\n    // stop all the components\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {}
    },
    "4174b9756c8c7877797545c4356b1f40df603ec5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5642. Typos in 9 log messages. Contributed by Mehran Hassani\n",
      "commitDate": "16/09/16 10:05 PM",
      "commitName": "4174b9756c8c7877797545c4356b1f40df603ec5",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "17/08/16 11:08 PM",
      "commitNameOld": "913a8951366a5d816bbae253b230250e0b74849e",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 29.96,
      "commitsBetweenForRepo": 170,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   protected void serviceStop() throws Exception {\n     if (drainEventsOnStop) {\n       blockNewEvents \u003d true;\n-      LOG.info(\"AsyncDispatcher is draining to stop, igonring any new events.\");\n+      LOG.info(\"AsyncDispatcher is draining to stop, ignoring any new events.\");\n       long endTime \u003d System.currentTimeMillis() + getConfig()\n           .getLong(YarnConfiguration.DISPATCHER_DRAIN_EVENTS_TIMEOUT,\n               YarnConfiguration.DEFAULT_DISPATCHER_DRAIN_EVENTS_TIMEOUT);\n \n       synchronized (waitForDrained) {\n         while (!isDrained() \u0026\u0026 eventHandlingThread !\u003d null\n             \u0026\u0026 eventHandlingThread.isAlive()\n             \u0026\u0026 System.currentTimeMillis() \u003c endTime) {\n           waitForDrained.wait(1000);\n           LOG.info(\"Waiting for AsyncDispatcher to drain. Thread state is :\" +\n               eventHandlingThread.getState());\n         }\n       }\n     }\n     stopped \u003d true;\n     if (eventHandlingThread !\u003d null) {\n       eventHandlingThread.interrupt();\n       try {\n         eventHandlingThread.join();\n       } catch (InterruptedException ie) {\n         LOG.warn(\"Interrupted Exception while stopping\", ie);\n       }\n     }\n \n     // stop all the components\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (drainEventsOnStop) {\n      blockNewEvents \u003d true;\n      LOG.info(\"AsyncDispatcher is draining to stop, ignoring any new events.\");\n      long endTime \u003d System.currentTimeMillis() + getConfig()\n          .getLong(YarnConfiguration.DISPATCHER_DRAIN_EVENTS_TIMEOUT,\n              YarnConfiguration.DEFAULT_DISPATCHER_DRAIN_EVENTS_TIMEOUT);\n\n      synchronized (waitForDrained) {\n        while (!isDrained() \u0026\u0026 eventHandlingThread !\u003d null\n            \u0026\u0026 eventHandlingThread.isAlive()\n            \u0026\u0026 System.currentTimeMillis() \u003c endTime) {\n          waitForDrained.wait(1000);\n          LOG.info(\"Waiting for AsyncDispatcher to drain. Thread state is :\" +\n              eventHandlingThread.getState());\n        }\n      }\n    }\n    stopped \u003d true;\n    if (eventHandlingThread !\u003d null) {\n      eventHandlingThread.interrupt();\n      try {\n        eventHandlingThread.join();\n      } catch (InterruptedException ie) {\n        LOG.warn(\"Interrupted Exception while stopping\", ie);\n      }\n    }\n\n    // stop all the components\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {}
    },
    "913a8951366a5d816bbae253b230250e0b74849e": {
      "type": "Ybodychange",
      "commitMessage": "YARN\u003d5526. DrainDispacher#serviceStop blocked if setDrainEventsOnStop invoked (sandflee via Varun Saxena)\n",
      "commitDate": "17/08/16 11:08 PM",
      "commitName": "913a8951366a5d816bbae253b230250e0b74849e",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "28/07/16 4:50 PM",
      "commitNameOld": "7086fc72eebc41fd174d91839ed703c014aac920",
      "commitAuthorOld": "Li Lu",
      "daysBetweenCommits": 20.26,
      "commitsBetweenForRepo": 146,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   protected void serviceStop() throws Exception {\n     if (drainEventsOnStop) {\n       blockNewEvents \u003d true;\n       LOG.info(\"AsyncDispatcher is draining to stop, igonring any new events.\");\n       long endTime \u003d System.currentTimeMillis() + getConfig()\n           .getLong(YarnConfiguration.DISPATCHER_DRAIN_EVENTS_TIMEOUT,\n               YarnConfiguration.DEFAULT_DISPATCHER_DRAIN_EVENTS_TIMEOUT);\n \n       synchronized (waitForDrained) {\n-        while (!drained \u0026\u0026 eventHandlingThread !\u003d null\n+        while (!isDrained() \u0026\u0026 eventHandlingThread !\u003d null\n             \u0026\u0026 eventHandlingThread.isAlive()\n             \u0026\u0026 System.currentTimeMillis() \u003c endTime) {\n           waitForDrained.wait(1000);\n           LOG.info(\"Waiting for AsyncDispatcher to drain. Thread state is :\" +\n               eventHandlingThread.getState());\n         }\n       }\n     }\n     stopped \u003d true;\n     if (eventHandlingThread !\u003d null) {\n       eventHandlingThread.interrupt();\n       try {\n         eventHandlingThread.join();\n       } catch (InterruptedException ie) {\n         LOG.warn(\"Interrupted Exception while stopping\", ie);\n       }\n     }\n \n     // stop all the components\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (drainEventsOnStop) {\n      blockNewEvents \u003d true;\n      LOG.info(\"AsyncDispatcher is draining to stop, igonring any new events.\");\n      long endTime \u003d System.currentTimeMillis() + getConfig()\n          .getLong(YarnConfiguration.DISPATCHER_DRAIN_EVENTS_TIMEOUT,\n              YarnConfiguration.DEFAULT_DISPATCHER_DRAIN_EVENTS_TIMEOUT);\n\n      synchronized (waitForDrained) {\n        while (!isDrained() \u0026\u0026 eventHandlingThread !\u003d null\n            \u0026\u0026 eventHandlingThread.isAlive()\n            \u0026\u0026 System.currentTimeMillis() \u003c endTime) {\n          waitForDrained.wait(1000);\n          LOG.info(\"Waiting for AsyncDispatcher to drain. Thread state is :\" +\n              eventHandlingThread.getState());\n        }\n      }\n    }\n    stopped \u003d true;\n    if (eventHandlingThread !\u003d null) {\n      eventHandlingThread.interrupt();\n      try {\n        eventHandlingThread.join();\n      } catch (InterruptedException ie) {\n        LOG.warn(\"Interrupted Exception while stopping\", ie);\n      }\n    }\n\n    // stop all the components\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {}
    },
    "3ae716fa696b87e849dae40225dc59fb5ed114cb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3999. RM hangs on draing events. Contributed by Jian He\n",
      "commitDate": "11/08/15 6:25 PM",
      "commitName": "3ae716fa696b87e849dae40225dc59fb5ed114cb",
      "commitAuthor": "Xuan",
      "commitDateOld": "29/07/15 11:00 AM",
      "commitNameOld": "c020b62cf8de1f3baadc9d2f3410640ef7880543",
      "commitAuthorOld": "rohithsharmaks",
      "daysBetweenCommits": 13.31,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,31 @@\n   protected void serviceStop() throws Exception {\n     if (drainEventsOnStop) {\n       blockNewEvents \u003d true;\n       LOG.info(\"AsyncDispatcher is draining to stop, igonring any new events.\");\n+      long endTime \u003d System.currentTimeMillis() + getConfig()\n+          .getLong(YarnConfiguration.DISPATCHER_DRAIN_EVENTS_TIMEOUT,\n+              YarnConfiguration.DEFAULT_DISPATCHER_DRAIN_EVENTS_TIMEOUT);\n+\n       synchronized (waitForDrained) {\n         while (!drained \u0026\u0026 eventHandlingThread !\u003d null\n-            \u0026\u0026 eventHandlingThread.isAlive()) {\n+            \u0026\u0026 eventHandlingThread.isAlive()\n+            \u0026\u0026 System.currentTimeMillis() \u003c endTime) {\n           waitForDrained.wait(1000);\n           LOG.info(\"Waiting for AsyncDispatcher to drain. Thread state is :\" +\n               eventHandlingThread.getState());\n         }\n       }\n     }\n     stopped \u003d true;\n     if (eventHandlingThread !\u003d null) {\n       eventHandlingThread.interrupt();\n       try {\n         eventHandlingThread.join();\n       } catch (InterruptedException ie) {\n         LOG.warn(\"Interrupted Exception while stopping\", ie);\n       }\n     }\n \n     // stop all the components\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (drainEventsOnStop) {\n      blockNewEvents \u003d true;\n      LOG.info(\"AsyncDispatcher is draining to stop, igonring any new events.\");\n      long endTime \u003d System.currentTimeMillis() + getConfig()\n          .getLong(YarnConfiguration.DISPATCHER_DRAIN_EVENTS_TIMEOUT,\n              YarnConfiguration.DEFAULT_DISPATCHER_DRAIN_EVENTS_TIMEOUT);\n\n      synchronized (waitForDrained) {\n        while (!drained \u0026\u0026 eventHandlingThread !\u003d null\n            \u0026\u0026 eventHandlingThread.isAlive()\n            \u0026\u0026 System.currentTimeMillis() \u003c endTime) {\n          waitForDrained.wait(1000);\n          LOG.info(\"Waiting for AsyncDispatcher to drain. Thread state is :\" +\n              eventHandlingThread.getState());\n        }\n      }\n    }\n    stopped \u003d true;\n    if (eventHandlingThread !\u003d null) {\n      eventHandlingThread.interrupt();\n      try {\n        eventHandlingThread.join();\n      } catch (InterruptedException ie) {\n        LOG.warn(\"Interrupted Exception while stopping\", ie);\n      }\n    }\n\n    // stop all the components\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {}
    },
    "c020b62cf8de1f3baadc9d2f3410640ef7880543": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3919. NPEs\u0027 while stopping service after exception during CommonNodeLabelsManager#start. (varun saxena via rohithsharmaks)\n",
      "commitDate": "29/07/15 11:00 AM",
      "commitName": "c020b62cf8de1f3baadc9d2f3410640ef7880543",
      "commitAuthor": "rohithsharmaks",
      "commitDateOld": "21/07/15 3:05 PM",
      "commitNameOld": "393fe71771e3ac6bc0efe59d9aaf19d3576411b3",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 7.83,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   protected void serviceStop() throws Exception {\n     if (drainEventsOnStop) {\n       blockNewEvents \u003d true;\n       LOG.info(\"AsyncDispatcher is draining to stop, igonring any new events.\");\n       synchronized (waitForDrained) {\n-        while (!drained \u0026\u0026 eventHandlingThread.isAlive()) {\n+        while (!drained \u0026\u0026 eventHandlingThread !\u003d null\n+            \u0026\u0026 eventHandlingThread.isAlive()) {\n           waitForDrained.wait(1000);\n           LOG.info(\"Waiting for AsyncDispatcher to drain. Thread state is :\" +\n               eventHandlingThread.getState());\n         }\n       }\n     }\n     stopped \u003d true;\n     if (eventHandlingThread !\u003d null) {\n       eventHandlingThread.interrupt();\n       try {\n         eventHandlingThread.join();\n       } catch (InterruptedException ie) {\n         LOG.warn(\"Interrupted Exception while stopping\", ie);\n       }\n     }\n \n     // stop all the components\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (drainEventsOnStop) {\n      blockNewEvents \u003d true;\n      LOG.info(\"AsyncDispatcher is draining to stop, igonring any new events.\");\n      synchronized (waitForDrained) {\n        while (!drained \u0026\u0026 eventHandlingThread !\u003d null\n            \u0026\u0026 eventHandlingThread.isAlive()) {\n          waitForDrained.wait(1000);\n          LOG.info(\"Waiting for AsyncDispatcher to drain. Thread state is :\" +\n              eventHandlingThread.getState());\n        }\n      }\n    }\n    stopped \u003d true;\n    if (eventHandlingThread !\u003d null) {\n      eventHandlingThread.interrupt();\n      try {\n        eventHandlingThread.join();\n      } catch (InterruptedException ie) {\n        LOG.warn(\"Interrupted Exception while stopping\", ie);\n      }\n    }\n\n    // stop all the components\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {}
    },
    "2466460d4cd13ad5837c044476b26e63082c1d37": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-3878. AsyncDispatcher can hang while stopping if it is configured for draining events on stop. (Varun Saxena via kasha)\"\n\nThis reverts commit aa067c6aa47b4c79577096817acc00ad6421180c.\n",
      "commitDate": "13/07/15 2:30 PM",
      "commitName": "2466460d4cd13ad5837c044476b26e63082c1d37",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/07/15 9:48 AM",
      "commitNameOld": "aa067c6aa47b4c79577096817acc00ad6421180c",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 4.2,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   protected void serviceStop() throws Exception {\n     if (drainEventsOnStop) {\n       blockNewEvents \u003d true;\n       LOG.info(\"AsyncDispatcher is draining to stop, igonring any new events.\");\n       synchronized (waitForDrained) {\n-        while (!eventQueue.isEmpty() \u0026\u0026 eventHandlingThread.isAlive()) {\n+        while (!drained \u0026\u0026 eventHandlingThread.isAlive()) {\n           waitForDrained.wait(1000);\n           LOG.info(\"Waiting for AsyncDispatcher to drain. Thread state is :\" +\n               eventHandlingThread.getState());\n         }\n       }\n     }\n     stopped \u003d true;\n     if (eventHandlingThread !\u003d null) {\n       eventHandlingThread.interrupt();\n       try {\n         eventHandlingThread.join();\n       } catch (InterruptedException ie) {\n         LOG.warn(\"Interrupted Exception while stopping\", ie);\n       }\n     }\n \n     // stop all the components\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (drainEventsOnStop) {\n      blockNewEvents \u003d true;\n      LOG.info(\"AsyncDispatcher is draining to stop, igonring any new events.\");\n      synchronized (waitForDrained) {\n        while (!drained \u0026\u0026 eventHandlingThread.isAlive()) {\n          waitForDrained.wait(1000);\n          LOG.info(\"Waiting for AsyncDispatcher to drain. Thread state is :\" +\n              eventHandlingThread.getState());\n        }\n      }\n    }\n    stopped \u003d true;\n    if (eventHandlingThread !\u003d null) {\n      eventHandlingThread.interrupt();\n      try {\n        eventHandlingThread.join();\n      } catch (InterruptedException ie) {\n        LOG.warn(\"Interrupted Exception while stopping\", ie);\n      }\n    }\n\n    // stop all the components\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {}
    },
    "aa067c6aa47b4c79577096817acc00ad6421180c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3878. AsyncDispatcher can hang while stopping if it is configured for draining events on stop. (Varun Saxena via kasha)\n",
      "commitDate": "09/07/15 9:48 AM",
      "commitName": "aa067c6aa47b4c79577096817acc00ad6421180c",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "13/05/15 1:06 PM",
      "commitNameOld": "341a476812015d0d584b198b451ea9458645a47c",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 56.86,
      "commitsBetweenForRepo": 408,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   protected void serviceStop() throws Exception {\n     if (drainEventsOnStop) {\n       blockNewEvents \u003d true;\n       LOG.info(\"AsyncDispatcher is draining to stop, igonring any new events.\");\n       synchronized (waitForDrained) {\n-        while (!drained \u0026\u0026 eventHandlingThread.isAlive()) {\n+        while (!eventQueue.isEmpty() \u0026\u0026 eventHandlingThread.isAlive()) {\n           waitForDrained.wait(1000);\n           LOG.info(\"Waiting for AsyncDispatcher to drain. Thread state is :\" +\n               eventHandlingThread.getState());\n         }\n       }\n     }\n     stopped \u003d true;\n     if (eventHandlingThread !\u003d null) {\n       eventHandlingThread.interrupt();\n       try {\n         eventHandlingThread.join();\n       } catch (InterruptedException ie) {\n         LOG.warn(\"Interrupted Exception while stopping\", ie);\n       }\n     }\n \n     // stop all the components\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (drainEventsOnStop) {\n      blockNewEvents \u003d true;\n      LOG.info(\"AsyncDispatcher is draining to stop, igonring any new events.\");\n      synchronized (waitForDrained) {\n        while (!eventQueue.isEmpty() \u0026\u0026 eventHandlingThread.isAlive()) {\n          waitForDrained.wait(1000);\n          LOG.info(\"Waiting for AsyncDispatcher to drain. Thread state is :\" +\n              eventHandlingThread.getState());\n        }\n      }\n    }\n    stopped \u003d true;\n    if (eventHandlingThread !\u003d null) {\n      eventHandlingThread.interrupt();\n      try {\n        eventHandlingThread.join();\n      } catch (InterruptedException ie) {\n        LOG.warn(\"Interrupted Exception while stopping\", ie);\n      }\n    }\n\n    // stop all the components\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {}
    },
    "341a476812015d0d584b198b451ea9458645a47c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2921. Fix MockRM/MockAM#waitForState sleep too long. (Tsuyoshi Ozawa via wangda)\n",
      "commitDate": "13/05/15 1:06 PM",
      "commitName": "341a476812015d0d584b198b451ea9458645a47c",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "02/01/15 11:08 AM",
      "commitNameOld": "947578c1c1413f9043ceb1e87df6a97df048e854",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 131.04,
      "commitsBetweenForRepo": 1206,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   protected void serviceStop() throws Exception {\n     if (drainEventsOnStop) {\n       blockNewEvents \u003d true;\n       LOG.info(\"AsyncDispatcher is draining to stop, igonring any new events.\");\n       synchronized (waitForDrained) {\n         while (!drained \u0026\u0026 eventHandlingThread.isAlive()) {\n           waitForDrained.wait(1000);\n-          LOG.info(\"Waiting for AsyncDispatcher to drain.\");\n+          LOG.info(\"Waiting for AsyncDispatcher to drain. Thread state is :\" +\n+              eventHandlingThread.getState());\n         }\n       }\n     }\n     stopped \u003d true;\n     if (eventHandlingThread !\u003d null) {\n       eventHandlingThread.interrupt();\n       try {\n         eventHandlingThread.join();\n       } catch (InterruptedException ie) {\n         LOG.warn(\"Interrupted Exception while stopping\", ie);\n       }\n     }\n \n     // stop all the components\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (drainEventsOnStop) {\n      blockNewEvents \u003d true;\n      LOG.info(\"AsyncDispatcher is draining to stop, igonring any new events.\");\n      synchronized (waitForDrained) {\n        while (!drained \u0026\u0026 eventHandlingThread.isAlive()) {\n          waitForDrained.wait(1000);\n          LOG.info(\"Waiting for AsyncDispatcher to drain. Thread state is :\" +\n              eventHandlingThread.getState());\n        }\n      }\n    }\n    stopped \u003d true;\n    if (eventHandlingThread !\u003d null) {\n      eventHandlingThread.interrupt();\n      try {\n        eventHandlingThread.join();\n      } catch (InterruptedException ie) {\n        LOG.warn(\"Interrupted Exception while stopping\", ie);\n      }\n    }\n\n    // stop all the components\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {}
    },
    "460ac8cb50e024b60e02a96c2ab27368dfe0944d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1121. Addendum patch. Fixed AsyncDispatcher hang issue during stop due to a race condition caused by the previous patch. Contributed by Jian He. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554344 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/12/13 5:10 PM",
      "commitName": "460ac8cb50e024b60e02a96c2ab27368dfe0944d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/11/13 4:55 PM",
      "commitNameOld": "e28015ed1b40278028cfb70c4c87d9bc95a2b6a6",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 52.01,
      "commitsBetweenForRepo": 292,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,24 @@\n   protected void serviceStop() throws Exception {\n     if (drainEventsOnStop) {\n       blockNewEvents \u003d true;\n       LOG.info(\"AsyncDispatcher is draining to stop, igonring any new events.\");\n-      while(!drained) {\n-        Thread.yield();\n+      synchronized (waitForDrained) {\n+        while (!drained \u0026\u0026 eventHandlingThread.isAlive()) {\n+          waitForDrained.wait(1000);\n+          LOG.info(\"Waiting for AsyncDispatcher to drain.\");\n+        }\n       }\n     }\n     stopped \u003d true;\n     if (eventHandlingThread !\u003d null) {\n       eventHandlingThread.interrupt();\n       try {\n         eventHandlingThread.join();\n       } catch (InterruptedException ie) {\n         LOG.warn(\"Interrupted Exception while stopping\", ie);\n       }\n     }\n \n     // stop all the components\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (drainEventsOnStop) {\n      blockNewEvents \u003d true;\n      LOG.info(\"AsyncDispatcher is draining to stop, igonring any new events.\");\n      synchronized (waitForDrained) {\n        while (!drained \u0026\u0026 eventHandlingThread.isAlive()) {\n          waitForDrained.wait(1000);\n          LOG.info(\"Waiting for AsyncDispatcher to drain.\");\n        }\n      }\n    }\n    stopped \u003d true;\n    if (eventHandlingThread !\u003d null) {\n      eventHandlingThread.interrupt();\n      try {\n        eventHandlingThread.join();\n      } catch (InterruptedException ie) {\n        LOG.warn(\"Interrupted Exception while stopping\", ie);\n      }\n    }\n\n    // stop all the components\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {}
    },
    "e28015ed1b40278028cfb70c4c87d9bc95a2b6a6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1121. Changed ResourceManager\u0027s state-store to drain all events on shut-down. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1540232 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/11/13 4:55 PM",
      "commitName": "e28015ed1b40278028cfb70c4c87d9bc95a2b6a6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/06/13 11:39 PM",
      "commitNameOld": "b9efe6bd4a1277b4067ecde715a7713a85968886",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 144.76,
      "commitsBetweenForRepo": 881,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,21 @@\n   protected void serviceStop() throws Exception {\n+    if (drainEventsOnStop) {\n+      blockNewEvents \u003d true;\n+      LOG.info(\"AsyncDispatcher is draining to stop, igonring any new events.\");\n+      while(!drained) {\n+        Thread.yield();\n+      }\n+    }\n     stopped \u003d true;\n     if (eventHandlingThread !\u003d null) {\n       eventHandlingThread.interrupt();\n       try {\n         eventHandlingThread.join();\n       } catch (InterruptedException ie) {\n         LOG.warn(\"Interrupted Exception while stopping\", ie);\n       }\n     }\n \n     // stop all the components\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    if (drainEventsOnStop) {\n      blockNewEvents \u003d true;\n      LOG.info(\"AsyncDispatcher is draining to stop, igonring any new events.\");\n      while(!drained) {\n        Thread.yield();\n      }\n    }\n    stopped \u003d true;\n    if (eventHandlingThread !\u003d null) {\n      eventHandlingThread.interrupt();\n      try {\n        eventHandlingThread.join();\n      } catch (InterruptedException ie) {\n        LOG.warn(\"Interrupted Exception while stopping\", ie);\n      }\n    }\n\n    // stop all the components\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {}
    },
    "0928502029ef141759008997335ea2cd836a7154": {
      "type": "Ymultichange(Yrename,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 8:54 AM",
      "commitName": "0928502029ef141759008997335ea2cd836a7154",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  public void stop() {\n+  protected void serviceStop() throws Exception {\n     stopped \u003d true;\n     if (eventHandlingThread !\u003d null) {\n       eventHandlingThread.interrupt();\n       try {\n         eventHandlingThread.join();\n       } catch (InterruptedException ie) {\n         LOG.warn(\"Interrupted Exception while stopping\", ie);\n       }\n     }\n \n     // stop all the components\n-    super.stop();\n+    super.serviceStop();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStop() throws Exception {\n    stopped \u003d true;\n    if (eventHandlingThread !\u003d null) {\n      eventHandlingThread.interrupt();\n      try {\n        eventHandlingThread.join();\n      } catch (InterruptedException ie) {\n        LOG.warn(\"Interrupted Exception while stopping\", ie);\n      }\n    }\n\n    // stop all the components\n    super.serviceStop();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
          "extendedDetails": {
            "oldValue": "stop",
            "newValue": "serviceStop"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  public void stop() {\n+  protected void serviceStop() throws Exception {\n     stopped \u003d true;\n     if (eventHandlingThread !\u003d null) {\n       eventHandlingThread.interrupt();\n       try {\n         eventHandlingThread.join();\n       } catch (InterruptedException ie) {\n         LOG.warn(\"Interrupted Exception while stopping\", ie);\n       }\n     }\n \n     // stop all the components\n-    super.stop();\n+    super.serviceStop();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStop() throws Exception {\n    stopped \u003d true;\n    if (eventHandlingThread !\u003d null) {\n      eventHandlingThread.interrupt();\n      try {\n        eventHandlingThread.join();\n      } catch (InterruptedException ie) {\n        LOG.warn(\"Interrupted Exception while stopping\", ie);\n      }\n    }\n\n    // stop all the components\n    super.serviceStop();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  public void stop() {\n+  protected void serviceStop() throws Exception {\n     stopped \u003d true;\n     if (eventHandlingThread !\u003d null) {\n       eventHandlingThread.interrupt();\n       try {\n         eventHandlingThread.join();\n       } catch (InterruptedException ie) {\n         LOG.warn(\"Interrupted Exception while stopping\", ie);\n       }\n     }\n \n     // stop all the components\n-    super.stop();\n+    super.serviceStop();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStop() throws Exception {\n    stopped \u003d true;\n    if (eventHandlingThread !\u003d null) {\n      eventHandlingThread.interrupt();\n      try {\n        eventHandlingThread.join();\n      } catch (InterruptedException ie) {\n        LOG.warn(\"Interrupted Exception while stopping\", ie);\n      }\n    }\n\n    // stop all the components\n    super.serviceStop();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[Exception]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  public void stop() {\n+  protected void serviceStop() throws Exception {\n     stopped \u003d true;\n     if (eventHandlingThread !\u003d null) {\n       eventHandlingThread.interrupt();\n       try {\n         eventHandlingThread.join();\n       } catch (InterruptedException ie) {\n         LOG.warn(\"Interrupted Exception while stopping\", ie);\n       }\n     }\n \n     // stop all the components\n-    super.stop();\n+    super.serviceStop();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStop() throws Exception {\n    stopped \u003d true;\n    if (eventHandlingThread !\u003d null) {\n      eventHandlingThread.interrupt();\n      try {\n        eventHandlingThread.join();\n      } catch (InterruptedException ie) {\n        LOG.warn(\"Interrupted Exception while stopping\", ie);\n      }\n    }\n\n    // stop all the components\n    super.serviceStop();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void stop() {\n    stopped \u003d true;\n    if (eventHandlingThread !\u003d null) {\n      eventHandlingThread.interrupt();\n      try {\n        eventHandlingThread.join();\n      } catch (InterruptedException ie) {\n        LOG.warn(\"Interrupted Exception while stopping\", ie);\n      }\n    }\n\n    // stop all the components\n    super.stop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java"
      }
    },
    "5ee495e6f34faff231ad87ec890188eb63617393": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3634. Fixed all daemons to crash instead of hanging around when their EventHandlers get exceptions. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1291598 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/02/12 9:08 PM",
      "commitName": "5ee495e6f34faff231ad87ec890188eb63617393",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "22/12/11 2:34 PM",
      "commitNameOld": "8fa0a3c737f27ff9d12fb657a7b22865754a5fd8",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 60.27,
      "commitsBetweenForRepo": 324,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public void stop() {\n     stopped \u003d true;\n     if (eventHandlingThread !\u003d null) {\n       eventHandlingThread.interrupt();\n       try {\n         eventHandlingThread.join();\n       } catch (InterruptedException ie) {\n-        LOG.debug(\"Interrupted Exception while stopping\", ie);\n+        LOG.warn(\"Interrupted Exception while stopping\", ie);\n       }\n     }\n \n     // stop all the components\n     super.stop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() {\n    stopped \u003d true;\n    if (eventHandlingThread !\u003d null) {\n      eventHandlingThread.interrupt();\n      try {\n        eventHandlingThread.join();\n      } catch (InterruptedException ie) {\n        LOG.warn(\"Interrupted Exception while stopping\", ie);\n      }\n    }\n\n    // stop all the components\n    super.stop();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {}
    },
    "aeae1ba497ae5b22ecbd26fce9fe1dc2c9dbd49a": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3188. Ensure correct shutdown in services. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186554 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/10/11 3:59 PM",
      "commitName": "aeae1ba497ae5b22ecbd26fce9fe1dc2c9dbd49a",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "16/10/11 12:27 PM",
      "commitNameOld": "68328ae92632afc9cdd6e75b7a8d832723ddbe3b",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 3.15,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,14 @@\n   public void stop() {\n     stopped \u003d true;\n-    eventHandlingThread.interrupt();\n-    try {\n-      eventHandlingThread.join();\n-    } catch (InterruptedException ie) {\n-      LOG.debug(\"Interruped Exception while stopping\", ie);\n+    if (eventHandlingThread !\u003d null) {\n+      eventHandlingThread.interrupt();\n+      try {\n+        eventHandlingThread.join();\n+      } catch (InterruptedException ie) {\n+        LOG.debug(\"Interrupted Exception while stopping\", ie);\n+      }\n     }\n \n-    //stop all the components\n+    // stop all the components\n     super.stop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() {\n    stopped \u003d true;\n    if (eventHandlingThread !\u003d null) {\n      eventHandlingThread.interrupt();\n      try {\n        eventHandlingThread.join();\n      } catch (InterruptedException ie) {\n        LOG.debug(\"Interrupted Exception while stopping\", ie);\n      }\n    }\n\n    // stop all the components\n    super.stop();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void stop() {\n    stopped \u003d true;\n    eventHandlingThread.interrupt();\n    try {\n      eventHandlingThread.join();\n    } catch (InterruptedException ie) {\n      LOG.debug(\"Interruped Exception while stopping\", ie);\n    }\n\n    //stop all the components\n    super.stop();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,12 @@\n+  public void stop() {\n+    stopped \u003d true;\n+    eventHandlingThread.interrupt();\n+    try {\n+      eventHandlingThread.join();\n+    } catch (InterruptedException ie) {\n+      LOG.debug(\"Interruped Exception while stopping\", ie);\n+    }\n+\n+    //stop all the components\n+    super.stop();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() {\n    stopped \u003d true;\n    eventHandlingThread.interrupt();\n    try {\n      eventHandlingThread.join();\n    } catch (InterruptedException ie) {\n      LOG.debug(\"Interruped Exception while stopping\", ie);\n    }\n\n    //stop all the components\n    super.stop();\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java"
    }
  }
}