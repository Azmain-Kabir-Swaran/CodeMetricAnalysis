{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "getSnapshotDiffReport",
  "functionId": "getSnapshotDiffReport___path-String__fromSnapshot-String__toSnapshot-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 7009,
  "functionEndLine": 7056,
  "numCommitsSeen": 873,
  "timeTaken": 46381,
  "changeHistory": [
    "1824aee9da4056de0fb638906b2172e486bbebe7",
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea",
    "f600fbb6c4987c69292faea6b5abf022bb213ffd",
    "d98b881e9ab826eb7b70485d0de2a41ab7345334",
    "84a1321f6aa0af6895564a7c47f8f264656f0294",
    "ff0b99eafeda035ebe0dc82cfe689808047a8893",
    "d27d7fc72e279614212c1eae52a84675073e89fb",
    "cf6c8a1b4ee70dd45c2e42ac61999e61a05db035",
    "4a3161182905afaf450a60d02528161ed1f97471",
    "bdf3de9f6b377b6bfeaa95faadd12e7b29ece5dc",
    "824dcdbd42a2bc48742566d238c7076aefb62e58"
  ],
  "changeHistoryShort": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": "Ybodychange",
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea": "Ybodychange",
    "f600fbb6c4987c69292faea6b5abf022bb213ffd": "Ybodychange",
    "d98b881e9ab826eb7b70485d0de2a41ab7345334": "Ybodychange",
    "84a1321f6aa0af6895564a7c47f8f264656f0294": "Ybodychange",
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": "Ybodychange",
    "d27d7fc72e279614212c1eae52a84675073e89fb": "Ybodychange",
    "cf6c8a1b4ee70dd45c2e42ac61999e61a05db035": "Ybodychange",
    "4a3161182905afaf450a60d02528161ed1f97471": "Ybodychange",
    "bdf3de9f6b377b6bfeaa95faadd12e7b29ece5dc": "Ybodychange",
    "824dcdbd42a2bc48742566d238c7076aefb62e58": "Ybodychange"
  },
  "changeHistoryDetails": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15217 Add more information to longest write/read lock held log\n\n",
      "commitDate": "18/04/20 1:52 PM",
      "commitName": "1824aee9da4056de0fb638906b2172e486bbebe7",
      "commitAuthor": "Toshihiro Suzuki",
      "commitDateOld": "25/03/20 10:28 AM",
      "commitNameOld": "a700803a18fb957d2799001a2ce1dcb70f75c080",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 24.14,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,48 @@\n   SnapshotDiffReport getSnapshotDiffReport(String path,\n       String fromSnapshot, String toSnapshot) throws IOException {\n     long begTime \u003d Time.monotonicNow();\n     final String operationName \u003d \"computeSnapshotDiff\";\n     SnapshotDiffReport diffs \u003d null;\n     checkOperation(OperationCategory.READ);\n     String fromSnapshotRoot \u003d (fromSnapshot \u003d\u003d null || fromSnapshot.isEmpty()) ?\n         path : Snapshot.getSnapshotPath(path, fromSnapshot);\n     String toSnapshotRoot \u003d (toSnapshot \u003d\u003d null || toSnapshot.isEmpty()) ?\n         path : Snapshot.getSnapshotPath(path, toSnapshot);\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     FSPermissionChecker.setOperationType(operationName);\n     long actualTime \u003d Time.monotonicNow();\n     try {\n       readLock();\n       try {\n         checkOperation(OperationCategory.READ);\n         diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, pc, snapshotManager,\n             path, fromSnapshot, toSnapshot);\n       } finally {\n-        readUnlock(operationName);\n+        readUnlock(operationName, getLockReportInfoSupplier(fromSnapshotRoot,\n+            toSnapshotRoot));\n       }\n     } catch (AccessControlException ace) {\n       logAuditEvent(false, operationName, fromSnapshotRoot,\n           toSnapshotRoot, null);\n       throw ace;\n     }\n     if (diffs !\u003d null) {\n       SnapshotDiffReport.DiffStats dstat \u003d diffs.getStats();\n       LOG.info(\"SnapshotDiffReport \u0027\"\n           + fromSnapshot\n           + \"\u0027 to \u0027\" + toSnapshot + \"\u0027. Total comparison dirs: \"\n           + dstat.getTotalDirsCompared()\n           + \"/\" + dstat.getTotalDirsProcessed()\n           + \", files: \"\n           + dstat.getTotalFilesCompared()\n           + \"/\" + dstat.getTotalFilesProcessed()\n           + \". Time snapChildrenListing: \"\n           + dstat.getTotalChildrenListingTime() / 1000.0 + \"s, actual: \"\n           + ((Time.monotonicNow() - actualTime) / 1000.0) + \"s, total: \"\n           + ((Time.monotonicNow() - begTime) / 1000.0) + \"s.\");\n     }\n \n     logAuditEvent(true, operationName, fromSnapshotRoot,\n         toSnapshotRoot, null);\n     return diffs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  SnapshotDiffReport getSnapshotDiffReport(String path,\n      String fromSnapshot, String toSnapshot) throws IOException {\n    long begTime \u003d Time.monotonicNow();\n    final String operationName \u003d \"computeSnapshotDiff\";\n    SnapshotDiffReport diffs \u003d null;\n    checkOperation(OperationCategory.READ);\n    String fromSnapshotRoot \u003d (fromSnapshot \u003d\u003d null || fromSnapshot.isEmpty()) ?\n        path : Snapshot.getSnapshotPath(path, fromSnapshot);\n    String toSnapshotRoot \u003d (toSnapshot \u003d\u003d null || toSnapshot.isEmpty()) ?\n        path : Snapshot.getSnapshotPath(path, toSnapshot);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    FSPermissionChecker.setOperationType(operationName);\n    long actualTime \u003d Time.monotonicNow();\n    try {\n      readLock();\n      try {\n        checkOperation(OperationCategory.READ);\n        diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, pc, snapshotManager,\n            path, fromSnapshot, toSnapshot);\n      } finally {\n        readUnlock(operationName, getLockReportInfoSupplier(fromSnapshotRoot,\n            toSnapshotRoot));\n      }\n    } catch (AccessControlException ace) {\n      logAuditEvent(false, operationName, fromSnapshotRoot,\n          toSnapshotRoot, null);\n      throw ace;\n    }\n    if (diffs !\u003d null) {\n      SnapshotDiffReport.DiffStats dstat \u003d diffs.getStats();\n      LOG.info(\"SnapshotDiffReport \u0027\"\n          + fromSnapshot\n          + \"\u0027 to \u0027\" + toSnapshot + \"\u0027. Total comparison dirs: \"\n          + dstat.getTotalDirsCompared()\n          + \"/\" + dstat.getTotalDirsProcessed()\n          + \", files: \"\n          + dstat.getTotalFilesCompared()\n          + \"/\" + dstat.getTotalFilesProcessed()\n          + \". Time snapChildrenListing: \"\n          + dstat.getTotalChildrenListingTime() / 1000.0 + \"s, actual: \"\n          + ((Time.monotonicNow() - actualTime) / 1000.0) + \"s, total: \"\n          + ((Time.monotonicNow() - begTime) / 1000.0) + \"s.\");\n    }\n\n    logAuditEvent(true, operationName, fromSnapshotRoot,\n        toSnapshotRoot, null);\n    return diffs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14743. Enhance INodeAttributeProvider/ AccessControlEnforcer Interface in HDFS to support Authorization of mkdir, rm, rmdir, copy, move etc... (#1829)\n\nReviewed-by: Xiaoyu Yao \u003cxyao@apache.org\u003e",
      "commitDate": "13/03/20 11:29 AM",
      "commitName": "4b95c242eca540455a4d5d0899aaf73b6064b5ea",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "27/02/20 8:49 AM",
      "commitNameOld": "cd2c6b1aac470991b9b90339ce2721ba179e7c48",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 15.07,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,47 @@\n   SnapshotDiffReport getSnapshotDiffReport(String path,\n       String fromSnapshot, String toSnapshot) throws IOException {\n     long begTime \u003d Time.monotonicNow();\n     final String operationName \u003d \"computeSnapshotDiff\";\n     SnapshotDiffReport diffs \u003d null;\n     checkOperation(OperationCategory.READ);\n     String fromSnapshotRoot \u003d (fromSnapshot \u003d\u003d null || fromSnapshot.isEmpty()) ?\n         path : Snapshot.getSnapshotPath(path, fromSnapshot);\n     String toSnapshotRoot \u003d (toSnapshot \u003d\u003d null || toSnapshot.isEmpty()) ?\n         path : Snapshot.getSnapshotPath(path, toSnapshot);\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n+    FSPermissionChecker.setOperationType(operationName);\n     long actualTime \u003d Time.monotonicNow();\n     try {\n       readLock();\n       try {\n         checkOperation(OperationCategory.READ);\n         diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, pc, snapshotManager,\n             path, fromSnapshot, toSnapshot);\n       } finally {\n         readUnlock(operationName);\n       }\n     } catch (AccessControlException ace) {\n       logAuditEvent(false, operationName, fromSnapshotRoot,\n           toSnapshotRoot, null);\n       throw ace;\n     }\n     if (diffs !\u003d null) {\n       SnapshotDiffReport.DiffStats dstat \u003d diffs.getStats();\n       LOG.info(\"SnapshotDiffReport \u0027\"\n           + fromSnapshot\n           + \"\u0027 to \u0027\" + toSnapshot + \"\u0027. Total comparison dirs: \"\n           + dstat.getTotalDirsCompared()\n           + \"/\" + dstat.getTotalDirsProcessed()\n           + \", files: \"\n           + dstat.getTotalFilesCompared()\n           + \"/\" + dstat.getTotalFilesProcessed()\n           + \". Time snapChildrenListing: \"\n           + dstat.getTotalChildrenListingTime() / 1000.0 + \"s, actual: \"\n           + ((Time.monotonicNow() - actualTime) / 1000.0) + \"s, total: \"\n           + ((Time.monotonicNow() - begTime) / 1000.0) + \"s.\");\n     }\n \n     logAuditEvent(true, operationName, fromSnapshotRoot,\n         toSnapshotRoot, null);\n     return diffs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  SnapshotDiffReport getSnapshotDiffReport(String path,\n      String fromSnapshot, String toSnapshot) throws IOException {\n    long begTime \u003d Time.monotonicNow();\n    final String operationName \u003d \"computeSnapshotDiff\";\n    SnapshotDiffReport diffs \u003d null;\n    checkOperation(OperationCategory.READ);\n    String fromSnapshotRoot \u003d (fromSnapshot \u003d\u003d null || fromSnapshot.isEmpty()) ?\n        path : Snapshot.getSnapshotPath(path, fromSnapshot);\n    String toSnapshotRoot \u003d (toSnapshot \u003d\u003d null || toSnapshot.isEmpty()) ?\n        path : Snapshot.getSnapshotPath(path, toSnapshot);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    FSPermissionChecker.setOperationType(operationName);\n    long actualTime \u003d Time.monotonicNow();\n    try {\n      readLock();\n      try {\n        checkOperation(OperationCategory.READ);\n        diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, pc, snapshotManager,\n            path, fromSnapshot, toSnapshot);\n      } finally {\n        readUnlock(operationName);\n      }\n    } catch (AccessControlException ace) {\n      logAuditEvent(false, operationName, fromSnapshotRoot,\n          toSnapshotRoot, null);\n      throw ace;\n    }\n    if (diffs !\u003d null) {\n      SnapshotDiffReport.DiffStats dstat \u003d diffs.getStats();\n      LOG.info(\"SnapshotDiffReport \u0027\"\n          + fromSnapshot\n          + \"\u0027 to \u0027\" + toSnapshot + \"\u0027. Total comparison dirs: \"\n          + dstat.getTotalDirsCompared()\n          + \"/\" + dstat.getTotalDirsProcessed()\n          + \", files: \"\n          + dstat.getTotalFilesCompared()\n          + \"/\" + dstat.getTotalFilesProcessed()\n          + \". Time snapChildrenListing: \"\n          + dstat.getTotalChildrenListingTime() / 1000.0 + \"s, actual: \"\n          + ((Time.monotonicNow() - actualTime) / 1000.0) + \"s, total: \"\n          + ((Time.monotonicNow() - begTime) / 1000.0) + \"s.\");\n    }\n\n    logAuditEvent(true, operationName, fromSnapshotRoot,\n        toSnapshotRoot, null);\n    return diffs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "f600fbb6c4987c69292faea6b5abf022bb213ffd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11246. FSNameSystem#logAuditEvent should be called outside the read or write locks. Contributed by He Xiaoqiao, Kuhu Shukla.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\nCo-authored-by: Kuhu Shukla \u003ckshukla@apache.org\u003e\n",
      "commitDate": "29/08/19 10:10 AM",
      "commitName": "f600fbb6c4987c69292faea6b5abf022bb213ffd",
      "commitAuthor": "He Xiaoqiao",
      "commitDateOld": "27/08/19 3:26 PM",
      "commitNameOld": "dde9399b37bffb77da17c025f0b9b673d7088bc6",
      "commitAuthorOld": "He Xiaoqiao",
      "daysBetweenCommits": 1.78,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,46 @@\n   SnapshotDiffReport getSnapshotDiffReport(String path,\n       String fromSnapshot, String toSnapshot) throws IOException {\n     long begTime \u003d Time.monotonicNow();\n     final String operationName \u003d \"computeSnapshotDiff\";\n     SnapshotDiffReport diffs \u003d null;\n     checkOperation(OperationCategory.READ);\n-    boolean success \u003d false;\n     String fromSnapshotRoot \u003d (fromSnapshot \u003d\u003d null || fromSnapshot.isEmpty()) ?\n         path : Snapshot.getSnapshotPath(path, fromSnapshot);\n     String toSnapshotRoot \u003d (toSnapshot \u003d\u003d null || toSnapshot.isEmpty()) ?\n         path : Snapshot.getSnapshotPath(path, toSnapshot);\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n-    readLock();\n     long actualTime \u003d Time.monotonicNow();\n     try {\n-      checkOperation(OperationCategory.READ);\n-      diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, pc, snapshotManager,\n-          path, fromSnapshot, toSnapshot);\n-      success \u003d true;\n+      readLock();\n+      try {\n+        checkOperation(OperationCategory.READ);\n+        diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, pc, snapshotManager,\n+            path, fromSnapshot, toSnapshot);\n+      } finally {\n+        readUnlock(operationName);\n+      }\n     } catch (AccessControlException ace) {\n-      logAuditEvent(success, operationName, fromSnapshotRoot,\n+      logAuditEvent(false, operationName, fromSnapshotRoot,\n           toSnapshotRoot, null);\n       throw ace;\n-    } finally {\n-      readUnlock(operationName);\n     }\n-\n     if (diffs !\u003d null) {\n       SnapshotDiffReport.DiffStats dstat \u003d diffs.getStats();\n       LOG.info(\"SnapshotDiffReport \u0027\"\n           + fromSnapshot\n           + \"\u0027 to \u0027\" + toSnapshot + \"\u0027. Total comparison dirs: \"\n           + dstat.getTotalDirsCompared()\n           + \"/\" + dstat.getTotalDirsProcessed()\n           + \", files: \"\n           + dstat.getTotalFilesCompared()\n           + \"/\" + dstat.getTotalFilesProcessed()\n           + \". Time snapChildrenListing: \"\n           + dstat.getTotalChildrenListingTime() / 1000.0 + \"s, actual: \"\n           + ((Time.monotonicNow() - actualTime) / 1000.0) + \"s, total: \"\n           + ((Time.monotonicNow() - begTime) / 1000.0) + \"s.\");\n     }\n \n-    logAuditEvent(success, operationName, fromSnapshotRoot,\n+    logAuditEvent(true, operationName, fromSnapshotRoot,\n         toSnapshotRoot, null);\n     return diffs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  SnapshotDiffReport getSnapshotDiffReport(String path,\n      String fromSnapshot, String toSnapshot) throws IOException {\n    long begTime \u003d Time.monotonicNow();\n    final String operationName \u003d \"computeSnapshotDiff\";\n    SnapshotDiffReport diffs \u003d null;\n    checkOperation(OperationCategory.READ);\n    String fromSnapshotRoot \u003d (fromSnapshot \u003d\u003d null || fromSnapshot.isEmpty()) ?\n        path : Snapshot.getSnapshotPath(path, fromSnapshot);\n    String toSnapshotRoot \u003d (toSnapshot \u003d\u003d null || toSnapshot.isEmpty()) ?\n        path : Snapshot.getSnapshotPath(path, toSnapshot);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    long actualTime \u003d Time.monotonicNow();\n    try {\n      readLock();\n      try {\n        checkOperation(OperationCategory.READ);\n        diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, pc, snapshotManager,\n            path, fromSnapshot, toSnapshot);\n      } finally {\n        readUnlock(operationName);\n      }\n    } catch (AccessControlException ace) {\n      logAuditEvent(false, operationName, fromSnapshotRoot,\n          toSnapshotRoot, null);\n      throw ace;\n    }\n    if (diffs !\u003d null) {\n      SnapshotDiffReport.DiffStats dstat \u003d diffs.getStats();\n      LOG.info(\"SnapshotDiffReport \u0027\"\n          + fromSnapshot\n          + \"\u0027 to \u0027\" + toSnapshot + \"\u0027. Total comparison dirs: \"\n          + dstat.getTotalDirsCompared()\n          + \"/\" + dstat.getTotalDirsProcessed()\n          + \", files: \"\n          + dstat.getTotalFilesCompared()\n          + \"/\" + dstat.getTotalFilesProcessed()\n          + \". Time snapChildrenListing: \"\n          + dstat.getTotalChildrenListingTime() / 1000.0 + \"s, actual: \"\n          + ((Time.monotonicNow() - actualTime) / 1000.0) + \"s, total: \"\n          + ((Time.monotonicNow() - begTime) / 1000.0) + \"s.\");\n    }\n\n    logAuditEvent(true, operationName, fromSnapshotRoot,\n        toSnapshotRoot, null);\n    return diffs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "d98b881e9ab826eb7b70485d0de2a41ab7345334": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14008. NN should log snapshotdiff report. Contributed by Pranay Singh.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "01/11/18 5:26 PM",
      "commitName": "d98b881e9ab826eb7b70485d0de2a41ab7345334",
      "commitAuthor": "Pranay Singh",
      "commitDateOld": "30/10/18 10:43 PM",
      "commitNameOld": "fac9f91b2944cee641049fffcafa6b65e0cf68f2",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 1.78,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,47 @@\n   SnapshotDiffReport getSnapshotDiffReport(String path,\n       String fromSnapshot, String toSnapshot) throws IOException {\n+    long begTime \u003d Time.monotonicNow();\n     final String operationName \u003d \"computeSnapshotDiff\";\n     SnapshotDiffReport diffs \u003d null;\n     checkOperation(OperationCategory.READ);\n     boolean success \u003d false;\n     String fromSnapshotRoot \u003d (fromSnapshot \u003d\u003d null || fromSnapshot.isEmpty()) ?\n         path : Snapshot.getSnapshotPath(path, fromSnapshot);\n     String toSnapshotRoot \u003d (toSnapshot \u003d\u003d null || toSnapshot.isEmpty()) ?\n         path : Snapshot.getSnapshotPath(path, toSnapshot);\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     readLock();\n+    long actualTime \u003d Time.monotonicNow();\n     try {\n       checkOperation(OperationCategory.READ);\n       diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, pc, snapshotManager,\n           path, fromSnapshot, toSnapshot);\n       success \u003d true;\n     } catch (AccessControlException ace) {\n       logAuditEvent(success, operationName, fromSnapshotRoot,\n           toSnapshotRoot, null);\n       throw ace;\n     } finally {\n       readUnlock(operationName);\n     }\n+\n+    if (diffs !\u003d null) {\n+      SnapshotDiffReport.DiffStats dstat \u003d diffs.getStats();\n+      LOG.info(\"SnapshotDiffReport \u0027\"\n+          + fromSnapshot\n+          + \"\u0027 to \u0027\" + toSnapshot + \"\u0027. Total comparison dirs: \"\n+          + dstat.getTotalDirsCompared()\n+          + \"/\" + dstat.getTotalDirsProcessed()\n+          + \", files: \"\n+          + dstat.getTotalFilesCompared()\n+          + \"/\" + dstat.getTotalFilesProcessed()\n+          + \". Time snapChildrenListing: \"\n+          + dstat.getTotalChildrenListingTime() / 1000.0 + \"s, actual: \"\n+          + ((Time.monotonicNow() - actualTime) / 1000.0) + \"s, total: \"\n+          + ((Time.monotonicNow() - begTime) / 1000.0) + \"s.\");\n+    }\n+\n     logAuditEvent(success, operationName, fromSnapshotRoot,\n         toSnapshotRoot, null);\n     return diffs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  SnapshotDiffReport getSnapshotDiffReport(String path,\n      String fromSnapshot, String toSnapshot) throws IOException {\n    long begTime \u003d Time.monotonicNow();\n    final String operationName \u003d \"computeSnapshotDiff\";\n    SnapshotDiffReport diffs \u003d null;\n    checkOperation(OperationCategory.READ);\n    boolean success \u003d false;\n    String fromSnapshotRoot \u003d (fromSnapshot \u003d\u003d null || fromSnapshot.isEmpty()) ?\n        path : Snapshot.getSnapshotPath(path, fromSnapshot);\n    String toSnapshotRoot \u003d (toSnapshot \u003d\u003d null || toSnapshot.isEmpty()) ?\n        path : Snapshot.getSnapshotPath(path, toSnapshot);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    readLock();\n    long actualTime \u003d Time.monotonicNow();\n    try {\n      checkOperation(OperationCategory.READ);\n      diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, pc, snapshotManager,\n          path, fromSnapshot, toSnapshot);\n      success \u003d true;\n    } catch (AccessControlException ace) {\n      logAuditEvent(success, operationName, fromSnapshotRoot,\n          toSnapshotRoot, null);\n      throw ace;\n    } finally {\n      readUnlock(operationName);\n    }\n\n    if (diffs !\u003d null) {\n      SnapshotDiffReport.DiffStats dstat \u003d diffs.getStats();\n      LOG.info(\"SnapshotDiffReport \u0027\"\n          + fromSnapshot\n          + \"\u0027 to \u0027\" + toSnapshot + \"\u0027. Total comparison dirs: \"\n          + dstat.getTotalDirsCompared()\n          + \"/\" + dstat.getTotalDirsProcessed()\n          + \", files: \"\n          + dstat.getTotalFilesCompared()\n          + \"/\" + dstat.getTotalFilesProcessed()\n          + \". Time snapChildrenListing: \"\n          + dstat.getTotalChildrenListingTime() / 1000.0 + \"s, actual: \"\n          + ((Time.monotonicNow() - actualTime) / 1000.0) + \"s, total: \"\n          + ((Time.monotonicNow() - begTime) / 1000.0) + \"s.\");\n    }\n\n    logAuditEvent(success, operationName, fromSnapshotRoot,\n        toSnapshotRoot, null);\n    return diffs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "84a1321f6aa0af6895564a7c47f8f264656f0294": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
      "commitDate": "22/02/18 11:32 AM",
      "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "15/02/18 1:32 PM",
      "commitNameOld": "47473952e56b0380147d42f4110ad03c2276c961",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 6.92,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,28 @@\n   SnapshotDiffReport getSnapshotDiffReport(String path,\n       String fromSnapshot, String toSnapshot) throws IOException {\n     final String operationName \u003d \"computeSnapshotDiff\";\n     SnapshotDiffReport diffs \u003d null;\n     checkOperation(OperationCategory.READ);\n     boolean success \u003d false;\n     String fromSnapshotRoot \u003d (fromSnapshot \u003d\u003d null || fromSnapshot.isEmpty()) ?\n         path : Snapshot.getSnapshotPath(path, fromSnapshot);\n     String toSnapshotRoot \u003d (toSnapshot \u003d\u003d null || toSnapshot.isEmpty()) ?\n         path : Snapshot.getSnapshotPath(path, toSnapshot);\n+    final FSPermissionChecker pc \u003d getPermissionChecker();\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n-      diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, snapshotManager,\n+      diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, pc, snapshotManager,\n           path, fromSnapshot, toSnapshot);\n       success \u003d true;\n     } catch (AccessControlException ace) {\n       logAuditEvent(success, operationName, fromSnapshotRoot,\n           toSnapshotRoot, null);\n       throw ace;\n     } finally {\n       readUnlock(operationName);\n     }\n     logAuditEvent(success, operationName, fromSnapshotRoot,\n         toSnapshotRoot, null);\n     return diffs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  SnapshotDiffReport getSnapshotDiffReport(String path,\n      String fromSnapshot, String toSnapshot) throws IOException {\n    final String operationName \u003d \"computeSnapshotDiff\";\n    SnapshotDiffReport diffs \u003d null;\n    checkOperation(OperationCategory.READ);\n    boolean success \u003d false;\n    String fromSnapshotRoot \u003d (fromSnapshot \u003d\u003d null || fromSnapshot.isEmpty()) ?\n        path : Snapshot.getSnapshotPath(path, fromSnapshot);\n    String toSnapshotRoot \u003d (toSnapshot \u003d\u003d null || toSnapshot.isEmpty()) ?\n        path : Snapshot.getSnapshotPath(path, toSnapshot);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, pc, snapshotManager,\n          path, fromSnapshot, toSnapshot);\n      success \u003d true;\n    } catch (AccessControlException ace) {\n      logAuditEvent(success, operationName, fromSnapshotRoot,\n          toSnapshotRoot, null);\n      throw ace;\n    } finally {\n      readUnlock(operationName);\n    }\n    logAuditEvent(success, operationName, fromSnapshotRoot,\n        toSnapshotRoot, null);\n    return diffs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10872. Add MutableRate metrics for FSNamesystemLock operations. Contributed by Erik Krogen.\n",
      "commitDate": "14/11/16 11:05 AM",
      "commitName": "ff0b99eafeda035ebe0dc82cfe689808047a8893",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "08/11/16 6:17 PM",
      "commitNameOld": "ed0bebabaaf27cd730f7f8eb002d92c9c7db327d",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 5.7,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   SnapshotDiffReport getSnapshotDiffReport(String path,\n       String fromSnapshot, String toSnapshot) throws IOException {\n+    final String operationName \u003d \"computeSnapshotDiff\";\n     SnapshotDiffReport diffs \u003d null;\n     checkOperation(OperationCategory.READ);\n     boolean success \u003d false;\n     String fromSnapshotRoot \u003d (fromSnapshot \u003d\u003d null || fromSnapshot.isEmpty()) ?\n         path : Snapshot.getSnapshotPath(path, fromSnapshot);\n     String toSnapshotRoot \u003d (toSnapshot \u003d\u003d null || toSnapshot.isEmpty()) ?\n         path : Snapshot.getSnapshotPath(path, toSnapshot);\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n       diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, snapshotManager,\n           path, fromSnapshot, toSnapshot);\n       success \u003d true;\n     } catch (AccessControlException ace) {\n-      logAuditEvent(success, \"computeSnapshotDiff\", fromSnapshotRoot,\n+      logAuditEvent(success, operationName, fromSnapshotRoot,\n           toSnapshotRoot, null);\n       throw ace;\n     } finally {\n-      readUnlock();\n+      readUnlock(operationName);\n     }\n-    logAuditEvent(success, \"computeSnapshotDiff\", fromSnapshotRoot,\n+    logAuditEvent(success, operationName, fromSnapshotRoot,\n         toSnapshotRoot, null);\n     return diffs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  SnapshotDiffReport getSnapshotDiffReport(String path,\n      String fromSnapshot, String toSnapshot) throws IOException {\n    final String operationName \u003d \"computeSnapshotDiff\";\n    SnapshotDiffReport diffs \u003d null;\n    checkOperation(OperationCategory.READ);\n    boolean success \u003d false;\n    String fromSnapshotRoot \u003d (fromSnapshot \u003d\u003d null || fromSnapshot.isEmpty()) ?\n        path : Snapshot.getSnapshotPath(path, fromSnapshot);\n    String toSnapshotRoot \u003d (toSnapshot \u003d\u003d null || toSnapshot.isEmpty()) ?\n        path : Snapshot.getSnapshotPath(path, toSnapshot);\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, snapshotManager,\n          path, fromSnapshot, toSnapshot);\n      success \u003d true;\n    } catch (AccessControlException ace) {\n      logAuditEvent(success, operationName, fromSnapshotRoot,\n          toSnapshotRoot, null);\n      throw ace;\n    } finally {\n      readUnlock(operationName);\n    }\n    logAuditEvent(success, operationName, fromSnapshotRoot,\n        toSnapshotRoot, null);\n    return diffs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "d27d7fc72e279614212c1eae52a84675073e89fb": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9395. Make HDFS audit logging consistant. Contributed by Kuhu Shukla.\n",
      "commitDate": "24/02/16 10:04 AM",
      "commitName": "d27d7fc72e279614212c1eae52a84675073e89fb",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "21/02/16 7:51 PM",
      "commitNameOld": "f313516731d787f6be64c9406ca83d941d47ee99",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 2.59,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,26 @@\n   SnapshotDiffReport getSnapshotDiffReport(String path,\n       String fromSnapshot, String toSnapshot) throws IOException {\n     SnapshotDiffReport diffs \u003d null;\n     checkOperation(OperationCategory.READ);\n+    boolean success \u003d false;\n+    String fromSnapshotRoot \u003d (fromSnapshot \u003d\u003d null || fromSnapshot.isEmpty()) ?\n+        path : Snapshot.getSnapshotPath(path, fromSnapshot);\n+    String toSnapshotRoot \u003d (toSnapshot \u003d\u003d null || toSnapshot.isEmpty()) ?\n+        path : Snapshot.getSnapshotPath(path, toSnapshot);\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n       diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, snapshotManager,\n           path, fromSnapshot, toSnapshot);\n+      success \u003d true;\n+    } catch (AccessControlException ace) {\n+      logAuditEvent(success, \"computeSnapshotDiff\", fromSnapshotRoot,\n+          toSnapshotRoot, null);\n+      throw ace;\n     } finally {\n       readUnlock();\n     }\n-    String fromSnapshotRoot \u003d (fromSnapshot \u003d\u003d null || fromSnapshot.isEmpty()) ?\n-        path : Snapshot.getSnapshotPath(path, fromSnapshot);\n-    String toSnapshotRoot \u003d (toSnapshot \u003d\u003d null || toSnapshot.isEmpty()) ?\n-        path : Snapshot.getSnapshotPath(path, toSnapshot);\n-    logAuditEvent(diffs !\u003d null, \"computeSnapshotDiff\", fromSnapshotRoot,\n+    logAuditEvent(success, \"computeSnapshotDiff\", fromSnapshotRoot,\n         toSnapshotRoot, null);\n     return diffs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  SnapshotDiffReport getSnapshotDiffReport(String path,\n      String fromSnapshot, String toSnapshot) throws IOException {\n    SnapshotDiffReport diffs \u003d null;\n    checkOperation(OperationCategory.READ);\n    boolean success \u003d false;\n    String fromSnapshotRoot \u003d (fromSnapshot \u003d\u003d null || fromSnapshot.isEmpty()) ?\n        path : Snapshot.getSnapshotPath(path, fromSnapshot);\n    String toSnapshotRoot \u003d (toSnapshot \u003d\u003d null || toSnapshot.isEmpty()) ?\n        path : Snapshot.getSnapshotPath(path, toSnapshot);\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, snapshotManager,\n          path, fromSnapshot, toSnapshot);\n      success \u003d true;\n    } catch (AccessControlException ace) {\n      logAuditEvent(success, \"computeSnapshotDiff\", fromSnapshotRoot,\n          toSnapshotRoot, null);\n      throw ace;\n    } finally {\n      readUnlock();\n    }\n    logAuditEvent(success, \"computeSnapshotDiff\", fromSnapshotRoot,\n        toSnapshotRoot, null);\n    return diffs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "cf6c8a1b4ee70dd45c2e42ac61999e61a05db035": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8176. Record from/to snapshots in audit log for snapshot diff report. Contributed by J. Andreina.\n",
      "commitDate": "24/04/15 10:23 AM",
      "commitName": "cf6c8a1b4ee70dd45c2e42ac61999e61a05db035",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "23/04/15 11:46 PM",
      "commitNameOld": "262c1bc3398ce2ede03f9d86fc97c35ca7a8e9db",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.44,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,20 @@\n   SnapshotDiffReport getSnapshotDiffReport(String path,\n       String fromSnapshot, String toSnapshot) throws IOException {\n     SnapshotDiffReport diffs \u003d null;\n     checkOperation(OperationCategory.READ);\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n       diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, snapshotManager,\n           path, fromSnapshot, toSnapshot);\n     } finally {\n       readUnlock();\n     }\n-\n-    logAuditEvent(diffs !\u003d null, \"computeSnapshotDiff\", null, null, null);\n+    String fromSnapshotRoot \u003d (fromSnapshot \u003d\u003d null || fromSnapshot.isEmpty()) ?\n+        path : Snapshot.getSnapshotPath(path, fromSnapshot);\n+    String toSnapshotRoot \u003d (toSnapshot \u003d\u003d null || toSnapshot.isEmpty()) ?\n+        path : Snapshot.getSnapshotPath(path, toSnapshot);\n+    logAuditEvent(diffs !\u003d null, \"computeSnapshotDiff\", fromSnapshotRoot,\n+        toSnapshotRoot, null);\n     return diffs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  SnapshotDiffReport getSnapshotDiffReport(String path,\n      String fromSnapshot, String toSnapshot) throws IOException {\n    SnapshotDiffReport diffs \u003d null;\n    checkOperation(OperationCategory.READ);\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, snapshotManager,\n          path, fromSnapshot, toSnapshot);\n    } finally {\n      readUnlock();\n    }\n    String fromSnapshotRoot \u003d (fromSnapshot \u003d\u003d null || fromSnapshot.isEmpty()) ?\n        path : Snapshot.getSnapshotPath(path, fromSnapshot);\n    String toSnapshotRoot \u003d (toSnapshot \u003d\u003d null || toSnapshot.isEmpty()) ?\n        path : Snapshot.getSnapshotPath(path, toSnapshot);\n    logAuditEvent(diffs !\u003d null, \"computeSnapshotDiff\", fromSnapshotRoot,\n        toSnapshotRoot, null);\n    return diffs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "4a3161182905afaf450a60d02528161ed1f97471": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7440. Consolidate snapshot related operations in a single class. Contributed by Haohui Mai.\n",
      "commitDate": "25/11/14 9:04 PM",
      "commitName": "4a3161182905afaf450a60d02528161ed1f97471",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "25/11/14 3:37 PM",
      "commitNameOld": "f43a20c529ac3f104add95b222de6580757b3763",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 0.23,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,16 @@\n   SnapshotDiffReport getSnapshotDiffReport(String path,\n       String fromSnapshot, String toSnapshot) throws IOException {\n-    SnapshotDiffReport diffs;\n+    SnapshotDiffReport diffs \u003d null;\n     checkOperation(OperationCategory.READ);\n-    final FSPermissionChecker pc \u003d getPermissionChecker();\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n-      if (isPermissionEnabled) {\n-        checkSubtreeReadPermission(pc, path, fromSnapshot);\n-        checkSubtreeReadPermission(pc, path, toSnapshot);\n-      }\n-      diffs \u003d snapshotManager.diff(path, fromSnapshot, toSnapshot);\n+      diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, snapshotManager,\n+          path, fromSnapshot, toSnapshot);\n     } finally {\n       readUnlock();\n     }\n \n-    if (auditLog.isInfoEnabled() \u0026\u0026 isExternalInvocation()) {\n-      logAuditEvent(true, \"computeSnapshotDiff\", null, null, null);\n-    }\n+    logAuditEvent(diffs !\u003d null, \"computeSnapshotDiff\", null, null, null);\n     return diffs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  SnapshotDiffReport getSnapshotDiffReport(String path,\n      String fromSnapshot, String toSnapshot) throws IOException {\n    SnapshotDiffReport diffs \u003d null;\n    checkOperation(OperationCategory.READ);\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      diffs \u003d FSDirSnapshotOp.getSnapshotDiffReport(dir, snapshotManager,\n          path, fromSnapshot, toSnapshot);\n    } finally {\n      readUnlock();\n    }\n\n    logAuditEvent(diffs !\u003d null, \"computeSnapshotDiff\", null, null, null);\n    return diffs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "bdf3de9f6b377b6bfeaa95faadd12e7b29ece5dc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6593. Move SnapshotDiffInfo out of INodeDirectorySnapshottable. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 12:59 PM",
      "commitName": "bdf3de9f6b377b6bfeaa95faadd12e7b29ece5dc",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "23/06/14 12:20 AM",
      "commitNameOld": "a90a8b26e954ce3eda948eb0e7e121d9ab809011",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 1.53,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,22 @@\n   SnapshotDiffReport getSnapshotDiffReport(String path,\n       String fromSnapshot, String toSnapshot) throws IOException {\n-    SnapshotDiffInfo diffs \u003d null;\n+    SnapshotDiffReport diffs;\n     checkOperation(OperationCategory.READ);\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n       if (isPermissionEnabled) {\n         checkSubtreeReadPermission(pc, path, fromSnapshot);\n         checkSubtreeReadPermission(pc, path, toSnapshot);\n       }\n       diffs \u003d snapshotManager.diff(path, fromSnapshot, toSnapshot);\n     } finally {\n       readUnlock();\n     }\n-    \n+\n     if (auditLog.isInfoEnabled() \u0026\u0026 isExternalInvocation()) {\n       logAuditEvent(true, \"computeSnapshotDiff\", null, null, null);\n     }\n-    return diffs !\u003d null ? diffs.generateReport() : new SnapshotDiffReport(\n-        path, fromSnapshot, toSnapshot,\n-        Collections.\u003cDiffReportEntry\u003e emptyList());\n+    return diffs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  SnapshotDiffReport getSnapshotDiffReport(String path,\n      String fromSnapshot, String toSnapshot) throws IOException {\n    SnapshotDiffReport diffs;\n    checkOperation(OperationCategory.READ);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      if (isPermissionEnabled) {\n        checkSubtreeReadPermission(pc, path, fromSnapshot);\n        checkSubtreeReadPermission(pc, path, toSnapshot);\n      }\n      diffs \u003d snapshotManager.diff(path, fromSnapshot, toSnapshot);\n    } finally {\n      readUnlock();\n    }\n\n    if (auditLog.isInfoEnabled() \u0026\u0026 isExternalInvocation()) {\n      logAuditEvent(true, \"computeSnapshotDiff\", null, null, null);\n    }\n    return diffs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "824dcdbd42a2bc48742566d238c7076aefb62e58": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5789. Some of snapshot APIs missing checkOperation double check in fsn. Contributed by Uma Maheswara Rao G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1560731 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/01/14 8:35 AM",
      "commitName": "824dcdbd42a2bc48742566d238c7076aefb62e58",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "15/01/14 3:11 PM",
      "commitNameOld": "ca5d73d1ab45541169f76b183f67e7a6150c1a2c",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 7.73,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n   SnapshotDiffReport getSnapshotDiffReport(String path,\n       String fromSnapshot, String toSnapshot) throws IOException {\n     SnapshotDiffInfo diffs \u003d null;\n+    checkOperation(OperationCategory.READ);\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n       if (isPermissionEnabled) {\n         checkSubtreeReadPermission(pc, path, fromSnapshot);\n         checkSubtreeReadPermission(pc, path, toSnapshot);\n       }\n       diffs \u003d snapshotManager.diff(path, fromSnapshot, toSnapshot);\n     } finally {\n       readUnlock();\n     }\n     \n     if (auditLog.isInfoEnabled() \u0026\u0026 isExternalInvocation()) {\n       logAuditEvent(true, \"computeSnapshotDiff\", null, null, null);\n     }\n     return diffs !\u003d null ? diffs.generateReport() : new SnapshotDiffReport(\n         path, fromSnapshot, toSnapshot,\n         Collections.\u003cDiffReportEntry\u003e emptyList());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  SnapshotDiffReport getSnapshotDiffReport(String path,\n      String fromSnapshot, String toSnapshot) throws IOException {\n    SnapshotDiffInfo diffs \u003d null;\n    checkOperation(OperationCategory.READ);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      if (isPermissionEnabled) {\n        checkSubtreeReadPermission(pc, path, fromSnapshot);\n        checkSubtreeReadPermission(pc, path, toSnapshot);\n      }\n      diffs \u003d snapshotManager.diff(path, fromSnapshot, toSnapshot);\n    } finally {\n      readUnlock();\n    }\n    \n    if (auditLog.isInfoEnabled() \u0026\u0026 isExternalInvocation()) {\n      logAuditEvent(true, \"computeSnapshotDiff\", null, null, null);\n    }\n    return diffs !\u003d null ? diffs.generateReport() : new SnapshotDiffReport(\n        path, fromSnapshot, toSnapshot,\n        Collections.\u003cDiffReportEntry\u003e emptyList());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    }
  }
}