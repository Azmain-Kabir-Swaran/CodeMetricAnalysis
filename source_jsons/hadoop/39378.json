{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GuaranteedOrZeroCapacityOverTimePolicy.java",
  "functionName": "getSortedLeafQueues",
  "functionId": "getSortedLeafQueues___nodeLabel-String__pendingApps-List__FiCaSchedulerApp__(modifiers-final)__leafQueuesNeeded-int__deactivatedQueues-Set__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/queuemanagement/GuaranteedOrZeroCapacityOverTimePolicy.java",
  "functionStartLine": 536,
  "functionEndLine": 561,
  "numCommitsSeen": 8,
  "timeTaken": 4182,
  "changeHistory": [
    "cdb2107066a2d8557270888c0a9a75f29a6853bf",
    "821b0de4c59156d4a65112de03ba3e7e1c88e309",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c"
  ],
  "changeHistoryShort": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": "Ybodychange",
    "821b0de4c59156d4a65112de03ba3e7e1c88e309": "Ymultichange(Yparameterchange,Ybodychange)",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
      "commitDate": "25/03/20 4:20 AM",
      "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthor": "Sunil G",
      "commitDateOld": "18/03/19 10:57 AM",
      "commitNameOld": "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 372.72,
      "commitsBetweenForRepo": 2179,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   private LinkedHashSet\u003cString\u003e getSortedLeafQueues(String nodeLabel,\n       final List\u003cFiCaSchedulerApp\u003e pendingApps, int leafQueuesNeeded,\n       Set\u003cString\u003e deactivatedQueues) throws SchedulerDynamicEditException {\n \n     LinkedHashSet\u003cString\u003e leafQueues \u003d new LinkedHashSet\u003c\u003e(leafQueuesNeeded);\n     int ctr \u003d 0;\n     for (FiCaSchedulerApp app : pendingApps) {\n       AutoCreatedLeafQueue leafQueue \u003d\n           (AutoCreatedLeafQueue) app.getCSLeafQueue();\n-      String leafQueueName \u003d leafQueue.getQueueName();\n+      String leafQueueName \u003d leafQueue.getQueuePath();\n \n       //Check if leafQueue is not active already and has any pending apps\n       if (ctr \u003c leafQueuesNeeded) {\n         if (!isActive(leafQueue, nodeLabel)) {\n           if (!deactivatedQueues.contains(leafQueueName)) {\n             if (addLeafQueueIfNotExists(leafQueues, leafQueueName)) {\n               ctr++;\n             }\n           }\n         }\n       } else{\n         break;\n       }\n     }\n     return leafQueues;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private LinkedHashSet\u003cString\u003e getSortedLeafQueues(String nodeLabel,\n      final List\u003cFiCaSchedulerApp\u003e pendingApps, int leafQueuesNeeded,\n      Set\u003cString\u003e deactivatedQueues) throws SchedulerDynamicEditException {\n\n    LinkedHashSet\u003cString\u003e leafQueues \u003d new LinkedHashSet\u003c\u003e(leafQueuesNeeded);\n    int ctr \u003d 0;\n    for (FiCaSchedulerApp app : pendingApps) {\n      AutoCreatedLeafQueue leafQueue \u003d\n          (AutoCreatedLeafQueue) app.getCSLeafQueue();\n      String leafQueueName \u003d leafQueue.getQueuePath();\n\n      //Check if leafQueue is not active already and has any pending apps\n      if (ctr \u003c leafQueuesNeeded) {\n        if (!isActive(leafQueue, nodeLabel)) {\n          if (!deactivatedQueues.contains(leafQueueName)) {\n            if (addLeafQueueIfNotExists(leafQueues, leafQueueName)) {\n              ctr++;\n            }\n          }\n        }\n      } else{\n        break;\n      }\n    }\n    return leafQueues;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/queuemanagement/GuaranteedOrZeroCapacityOverTimePolicy.java",
      "extendedDetails": {}
    },
    "821b0de4c59156d4a65112de03ba3e7e1c88e309": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7574. Add support for Node Labels on Auto Created Leaf Queue Template. Contributed by Suma Shivaprasad.\n",
      "commitDate": "09/04/18 8:47 AM",
      "commitName": "821b0de4c59156d4a65112de03ba3e7e1c88e309",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7574. Add support for Node Labels on Auto Created Leaf Queue Template. Contributed by Suma Shivaprasad.\n",
          "commitDate": "09/04/18 8:47 AM",
          "commitName": "821b0de4c59156d4a65112de03ba3e7e1c88e309",
          "commitAuthor": "Sunil G",
          "commitDateOld": "08/12/17 3:10 PM",
          "commitNameOld": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 121.69,
          "commitsBetweenForRepo": 859,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,26 @@\n-  private LinkedHashSet\u003cString\u003e getSortedLeafQueues(\n+  private LinkedHashSet\u003cString\u003e getSortedLeafQueues(String nodeLabel,\n       final List\u003cFiCaSchedulerApp\u003e pendingApps, int leafQueuesNeeded,\n       Set\u003cString\u003e deactivatedQueues) throws SchedulerDynamicEditException {\n \n     LinkedHashSet\u003cString\u003e leafQueues \u003d new LinkedHashSet\u003c\u003e(leafQueuesNeeded);\n     int ctr \u003d 0;\n     for (FiCaSchedulerApp app : pendingApps) {\n-\n       AutoCreatedLeafQueue leafQueue \u003d\n           (AutoCreatedLeafQueue) app.getCSLeafQueue();\n       String leafQueueName \u003d leafQueue.getQueueName();\n \n       //Check if leafQueue is not active already and has any pending apps\n       if (ctr \u003c leafQueuesNeeded) {\n-\n-        if (!isActive(leafQueue)) {\n+        if (!isActive(leafQueue, nodeLabel)) {\n           if (!deactivatedQueues.contains(leafQueueName)) {\n             if (addLeafQueueIfNotExists(leafQueues, leafQueueName)) {\n               ctr++;\n             }\n           }\n         }\n       } else{\n         break;\n       }\n     }\n     return leafQueues;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private LinkedHashSet\u003cString\u003e getSortedLeafQueues(String nodeLabel,\n      final List\u003cFiCaSchedulerApp\u003e pendingApps, int leafQueuesNeeded,\n      Set\u003cString\u003e deactivatedQueues) throws SchedulerDynamicEditException {\n\n    LinkedHashSet\u003cString\u003e leafQueues \u003d new LinkedHashSet\u003c\u003e(leafQueuesNeeded);\n    int ctr \u003d 0;\n    for (FiCaSchedulerApp app : pendingApps) {\n      AutoCreatedLeafQueue leafQueue \u003d\n          (AutoCreatedLeafQueue) app.getCSLeafQueue();\n      String leafQueueName \u003d leafQueue.getQueueName();\n\n      //Check if leafQueue is not active already and has any pending apps\n      if (ctr \u003c leafQueuesNeeded) {\n        if (!isActive(leafQueue, nodeLabel)) {\n          if (!deactivatedQueues.contains(leafQueueName)) {\n            if (addLeafQueueIfNotExists(leafQueues, leafQueueName)) {\n              ctr++;\n            }\n          }\n        }\n      } else{\n        break;\n      }\n    }\n    return leafQueues;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/queuemanagement/GuaranteedOrZeroCapacityOverTimePolicy.java",
          "extendedDetails": {
            "oldValue": "[pendingApps-List\u003cFiCaSchedulerApp\u003e(modifiers-final), leafQueuesNeeded-int, deactivatedQueues-Set\u003cString\u003e]",
            "newValue": "[nodeLabel-String, pendingApps-List\u003cFiCaSchedulerApp\u003e(modifiers-final), leafQueuesNeeded-int, deactivatedQueues-Set\u003cString\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7574. Add support for Node Labels on Auto Created Leaf Queue Template. Contributed by Suma Shivaprasad.\n",
          "commitDate": "09/04/18 8:47 AM",
          "commitName": "821b0de4c59156d4a65112de03ba3e7e1c88e309",
          "commitAuthor": "Sunil G",
          "commitDateOld": "08/12/17 3:10 PM",
          "commitNameOld": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 121.69,
          "commitsBetweenForRepo": 859,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,26 @@\n-  private LinkedHashSet\u003cString\u003e getSortedLeafQueues(\n+  private LinkedHashSet\u003cString\u003e getSortedLeafQueues(String nodeLabel,\n       final List\u003cFiCaSchedulerApp\u003e pendingApps, int leafQueuesNeeded,\n       Set\u003cString\u003e deactivatedQueues) throws SchedulerDynamicEditException {\n \n     LinkedHashSet\u003cString\u003e leafQueues \u003d new LinkedHashSet\u003c\u003e(leafQueuesNeeded);\n     int ctr \u003d 0;\n     for (FiCaSchedulerApp app : pendingApps) {\n-\n       AutoCreatedLeafQueue leafQueue \u003d\n           (AutoCreatedLeafQueue) app.getCSLeafQueue();\n       String leafQueueName \u003d leafQueue.getQueueName();\n \n       //Check if leafQueue is not active already and has any pending apps\n       if (ctr \u003c leafQueuesNeeded) {\n-\n-        if (!isActive(leafQueue)) {\n+        if (!isActive(leafQueue, nodeLabel)) {\n           if (!deactivatedQueues.contains(leafQueueName)) {\n             if (addLeafQueueIfNotExists(leafQueues, leafQueueName)) {\n               ctr++;\n             }\n           }\n         }\n       } else{\n         break;\n       }\n     }\n     return leafQueues;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private LinkedHashSet\u003cString\u003e getSortedLeafQueues(String nodeLabel,\n      final List\u003cFiCaSchedulerApp\u003e pendingApps, int leafQueuesNeeded,\n      Set\u003cString\u003e deactivatedQueues) throws SchedulerDynamicEditException {\n\n    LinkedHashSet\u003cString\u003e leafQueues \u003d new LinkedHashSet\u003c\u003e(leafQueuesNeeded);\n    int ctr \u003d 0;\n    for (FiCaSchedulerApp app : pendingApps) {\n      AutoCreatedLeafQueue leafQueue \u003d\n          (AutoCreatedLeafQueue) app.getCSLeafQueue();\n      String leafQueueName \u003d leafQueue.getQueueName();\n\n      //Check if leafQueue is not active already and has any pending apps\n      if (ctr \u003c leafQueuesNeeded) {\n        if (!isActive(leafQueue, nodeLabel)) {\n          if (!deactivatedQueues.contains(leafQueueName)) {\n            if (addLeafQueueIfNotExists(leafQueues, leafQueueName)) {\n              ctr++;\n            }\n          }\n        }\n      } else{\n        break;\n      }\n    }\n    return leafQueues;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/queuemanagement/GuaranteedOrZeroCapacityOverTimePolicy.java",
          "extendedDetails": {}
        }
      ]
    },
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
      "commitDate": "08/12/17 3:10 PM",
      "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,28 @@\n+  private LinkedHashSet\u003cString\u003e getSortedLeafQueues(\n+      final List\u003cFiCaSchedulerApp\u003e pendingApps, int leafQueuesNeeded,\n+      Set\u003cString\u003e deactivatedQueues) throws SchedulerDynamicEditException {\n+\n+    LinkedHashSet\u003cString\u003e leafQueues \u003d new LinkedHashSet\u003c\u003e(leafQueuesNeeded);\n+    int ctr \u003d 0;\n+    for (FiCaSchedulerApp app : pendingApps) {\n+\n+      AutoCreatedLeafQueue leafQueue \u003d\n+          (AutoCreatedLeafQueue) app.getCSLeafQueue();\n+      String leafQueueName \u003d leafQueue.getQueueName();\n+\n+      //Check if leafQueue is not active already and has any pending apps\n+      if (ctr \u003c leafQueuesNeeded) {\n+\n+        if (!isActive(leafQueue)) {\n+          if (!deactivatedQueues.contains(leafQueueName)) {\n+            if (addLeafQueueIfNotExists(leafQueues, leafQueueName)) {\n+              ctr++;\n+            }\n+          }\n+        }\n+      } else{\n+        break;\n+      }\n+    }\n+    return leafQueues;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private LinkedHashSet\u003cString\u003e getSortedLeafQueues(\n      final List\u003cFiCaSchedulerApp\u003e pendingApps, int leafQueuesNeeded,\n      Set\u003cString\u003e deactivatedQueues) throws SchedulerDynamicEditException {\n\n    LinkedHashSet\u003cString\u003e leafQueues \u003d new LinkedHashSet\u003c\u003e(leafQueuesNeeded);\n    int ctr \u003d 0;\n    for (FiCaSchedulerApp app : pendingApps) {\n\n      AutoCreatedLeafQueue leafQueue \u003d\n          (AutoCreatedLeafQueue) app.getCSLeafQueue();\n      String leafQueueName \u003d leafQueue.getQueueName();\n\n      //Check if leafQueue is not active already and has any pending apps\n      if (ctr \u003c leafQueuesNeeded) {\n\n        if (!isActive(leafQueue)) {\n          if (!deactivatedQueues.contains(leafQueueName)) {\n            if (addLeafQueueIfNotExists(leafQueues, leafQueueName)) {\n              ctr++;\n            }\n          }\n        }\n      } else{\n        break;\n      }\n    }\n    return leafQueues;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/queuemanagement/GuaranteedOrZeroCapacityOverTimePolicy.java"
    }
  }
}