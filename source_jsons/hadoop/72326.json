{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimpleTcpClient.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/SimpleTcpClient.java",
  "functionStartLine": 64,
  "functionEndLine": 86,
  "numCommitsSeen": 2,
  "timeTaken": 368,
  "changeHistory": [
    "8ef140d38b16a18050e9e7901e8aadd424aef20f"
  ],
  "changeHistoryShort": {
    "8ef140d38b16a18050e9e7901e8aadd424aef20f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8ef140d38b16a18050e9e7901e8aadd424aef20f": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9509. Implement ONCRPC and XDR. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1490845 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/06/13 2:45 PM",
      "commitName": "8ef140d38b16a18050e9e7901e8aadd424aef20f",
      "commitAuthor": "Brandon Li",
      "diff": "@@ -0,0 +1,23 @@\n+  public void run() {\n+    // Configure the client.\n+    ChannelFactory factory \u003d new NioClientSocketChannelFactory(\n+        Executors.newCachedThreadPool(), Executors.newCachedThreadPool(), 1, 1);\n+    ClientBootstrap bootstrap \u003d new ClientBootstrap(factory);\n+\n+    // Set up the pipeline factory.\n+    bootstrap.setPipelineFactory(setPipelineFactory());\n+\n+    bootstrap.setOption(\"tcpNoDelay\", true);\n+    bootstrap.setOption(\"keepAlive\", true);\n+\n+    // Start the connection attempt.\n+    ChannelFuture future \u003d bootstrap.connect(new InetSocketAddress(host, port));\n+\n+    if (oneShot) {\n+      // Wait until the connection is closed or the connection attempt fails.\n+      future.getChannel().getCloseFuture().awaitUninterruptibly();\n+\n+      // Shut down thread pools to exit.\n+      bootstrap.releaseExternalResources();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    // Configure the client.\n    ChannelFactory factory \u003d new NioClientSocketChannelFactory(\n        Executors.newCachedThreadPool(), Executors.newCachedThreadPool(), 1, 1);\n    ClientBootstrap bootstrap \u003d new ClientBootstrap(factory);\n\n    // Set up the pipeline factory.\n    bootstrap.setPipelineFactory(setPipelineFactory());\n\n    bootstrap.setOption(\"tcpNoDelay\", true);\n    bootstrap.setOption(\"keepAlive\", true);\n\n    // Start the connection attempt.\n    ChannelFuture future \u003d bootstrap.connect(new InetSocketAddress(host, port));\n\n    if (oneShot) {\n      // Wait until the connection is closed or the connection attempt fails.\n      future.getChannel().getCloseFuture().awaitUninterruptibly();\n\n      // Shut down thread pools to exit.\n      bootstrap.releaseExternalResources();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/SimpleTcpClient.java"
    }
  }
}