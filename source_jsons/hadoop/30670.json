{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeveldbTimelineStateStore.java",
  "functionName": "updateToken",
  "functionId": "updateToken___tokenId-TimelineDelegationTokenIdentifier__renewDate-Long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/recovery/LeveldbTimelineStateStore.java",
  "functionStartLine": 177,
  "functionEndLine": 189,
  "numCommitsSeen": 4,
  "timeTaken": 785,
  "changeHistory": [
    "149512a83743715bb100feb6747b7e88301018ab"
  ],
  "changeHistoryShort": {
    "149512a83743715bb100feb6747b7e88301018ab": "Yintroduced"
  },
  "changeHistoryDetails": {
    "149512a83743715bb100feb6747b7e88301018ab": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2837. Support TimeLine server to recover delegation token when restarting. Contributed by Zhijie Shen\n",
      "commitDate": "23/12/14 6:25 PM",
      "commitName": "149512a83743715bb100feb6747b7e88301018ab",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,13 @@\n+  public void updateToken(TimelineDelegationTokenIdentifier tokenId,\n+      Long renewDate) throws IOException {\n+    try {\n+      byte[] k \u003d createTokenEntryKey(tokenId.getSequenceNumber());\n+      if (db.get(k) \u003d\u003d null) {\n+        throw new IOException(tokenId + \" doesn\u0027t exist\");\n+      }\n+      byte[] v \u003d buildTokenData(tokenId, renewDate);\n+      db.put(k, v);\n+    } catch (DBException e) {\n+      throw new IOException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateToken(TimelineDelegationTokenIdentifier tokenId,\n      Long renewDate) throws IOException {\n    try {\n      byte[] k \u003d createTokenEntryKey(tokenId.getSequenceNumber());\n      if (db.get(k) \u003d\u003d null) {\n        throw new IOException(tokenId + \" doesn\u0027t exist\");\n      }\n      byte[] v \u003d buildTokenData(tokenId, renewDate);\n      db.put(k, v);\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/recovery/LeveldbTimelineStateStore.java"
    }
  }
}