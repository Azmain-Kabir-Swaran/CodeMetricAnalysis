{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UserGroupInformation.java",
  "functionName": "doSubjectLogin",
  "functionId": "doSubjectLogin___subject-Subject__params-LoginParams",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
  "functionStartLine": 1931,
  "functionEndLine": 1961,
  "numCommitsSeen": 104,
  "timeTaken": 1156,
  "changeHistory": [
    "59cf7588779145ad5850ad63426743dfe03d8347"
  ],
  "changeHistoryShort": {
    "59cf7588779145ad5850ad63426743dfe03d8347": "Yintroduced"
  },
  "changeHistoryDetails": {
    "59cf7588779145ad5850ad63426743dfe03d8347": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9747. Reduce unnecessary UGI synchronization. Contributed by Daryn Sharp.\n",
      "commitDate": "23/02/18 11:10 AM",
      "commitName": "59cf7588779145ad5850ad63426743dfe03d8347",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,31 @@\n+  private static UserGroupInformation doSubjectLogin(\n+      Subject subject, LoginParams params) throws IOException {\n+    ensureInitialized();\n+    // initial default login.\n+    if (subject \u003d\u003d null \u0026\u0026 params \u003d\u003d null) {\n+      params \u003d LoginParams.getDefaults();\n+    }\n+    HadoopConfiguration loginConf \u003d new HadoopConfiguration(params);\n+    try {\n+      HadoopLoginContext login \u003d newLoginContext(\n+        authenticationMethod.getLoginAppName(), subject, loginConf);\n+      login.login();\n+      UserGroupInformation ugi \u003d new UserGroupInformation(login.getSubject());\n+      // attach login context for relogin unless this was a pre-existing\n+      // subject.\n+      if (subject \u003d\u003d null) {\n+        params.put(LoginParam.PRINCIPAL, ugi.getUserName());\n+        ugi.setLogin(login);\n+      }\n+      return ugi;\n+    } catch (LoginException le) {\n+      KerberosAuthException kae \u003d\n+        new KerberosAuthException(FAILURE_TO_LOGIN, le);\n+      if (params !\u003d null) {\n+        kae.setPrincipal(params.get(LoginParam.PRINCIPAL));\n+        kae.setKeytabFile(params.get(LoginParam.KEYTAB));\n+        kae.setTicketCacheFile(params.get(LoginParam.CCACHE));\n+      }\n+      throw kae;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static UserGroupInformation doSubjectLogin(\n      Subject subject, LoginParams params) throws IOException {\n    ensureInitialized();\n    // initial default login.\n    if (subject \u003d\u003d null \u0026\u0026 params \u003d\u003d null) {\n      params \u003d LoginParams.getDefaults();\n    }\n    HadoopConfiguration loginConf \u003d new HadoopConfiguration(params);\n    try {\n      HadoopLoginContext login \u003d newLoginContext(\n        authenticationMethod.getLoginAppName(), subject, loginConf);\n      login.login();\n      UserGroupInformation ugi \u003d new UserGroupInformation(login.getSubject());\n      // attach login context for relogin unless this was a pre-existing\n      // subject.\n      if (subject \u003d\u003d null) {\n        params.put(LoginParam.PRINCIPAL, ugi.getUserName());\n        ugi.setLogin(login);\n      }\n      return ugi;\n    } catch (LoginException le) {\n      KerberosAuthException kae \u003d\n        new KerberosAuthException(FAILURE_TO_LOGIN, le);\n      if (params !\u003d null) {\n        kae.setPrincipal(params.get(LoginParam.PRINCIPAL));\n        kae.setKeytabFile(params.get(LoginParam.KEYTAB));\n        kae.setTicketCacheFile(params.get(LoginParam.CCACHE));\n      }\n      throw kae;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java"
    }
  }
}