{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockReceiver.java",
  "functionName": "flushOrSync",
  "functionId": "flushOrSync___isSync-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
  "functionStartLine": 412,
  "functionEndLine": 453,
  "numCommitsSeen": 123,
  "timeTaken": 10481,
  "changeHistory": [
    "d6c31a3e6b60c4b8af9ae4661f16614805654e59",
    "462e25a3b264e1148d0cbca00db7f10d43a0555f",
    "5485d93bda3329a7c80767c3723cc6e1a9233dbc",
    "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
    "df983b524ab68ea0c70cee9033bfff2d28052cbf",
    "dcedb72af468128458e597f08d22f5c34b744ae5",
    "aeecfa24f4fb6af289920cbf8830c394e66bd78e",
    "1228f8f6fb16de4f0283dd1c7939e6fc3dfb7aae",
    "0369aff403012f8dd02486a3dd2f8e346ad23b03",
    "1e7010cf38115604d6fa3aa5728362c86644e66a",
    "e0ef844280b98dc699ed3f9d948b83828bb8d297",
    "83cf475050dba27e72b4e399491638c670621175",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "d6c31a3e6b60c4b8af9ae4661f16614805654e59": "Ybodychange",
    "462e25a3b264e1148d0cbca00db7f10d43a0555f": "Ybodychange",
    "5485d93bda3329a7c80767c3723cc6e1a9233dbc": "Ybodychange",
    "6ba9587d370fbf39c129c08c00ebbb894ccc1389": "Ybodychange",
    "df983b524ab68ea0c70cee9033bfff2d28052cbf": "Ybodychange",
    "dcedb72af468128458e597f08d22f5c34b744ae5": "Ybodychange",
    "aeecfa24f4fb6af289920cbf8830c394e66bd78e": "Ybodychange",
    "1228f8f6fb16de4f0283dd1c7939e6fc3dfb7aae": "Ybodychange",
    "0369aff403012f8dd02486a3dd2f8e346ad23b03": "Ybodychange",
    "1e7010cf38115604d6fa3aa5728362c86644e66a": "Ybodychange",
    "e0ef844280b98dc699ed3f9d948b83828bb8d297": "Ybodychange",
    "83cf475050dba27e72b4e399491638c670621175": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d6c31a3e6b60c4b8af9ae4661f16614805654e59": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11915. Sync rbw dir on the first hsync() to avoid file lost on power failure. Contributed by Vinayakumar B.\n",
      "commitDate": "07/12/17 2:50 PM",
      "commitName": "d6c31a3e6b60c4b8af9ae4661f16614805654e59",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "16/11/17 12:19 AM",
      "commitNameOld": "462e25a3b264e1148d0cbca00db7f10d43a0555f",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 21.6,
      "commitsBetweenForRepo": 99,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,42 @@\n   void flushOrSync(boolean isSync) throws IOException {\n     long flushTotalNanos \u003d 0;\n     long begin \u003d Time.monotonicNow();\n     if (checksumOut !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n       checksumOut.flush();\n       long flushEndNanos \u003d System.nanoTime();\n       if (isSync) {\n         streams.syncChecksumOut();\n         datanode.metrics.addFsyncNanos(System.nanoTime() - flushEndNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n     if (streams.getDataOut() !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n       streams.flushDataOut();\n       long flushEndNanos \u003d System.nanoTime();\n       if (isSync) {\n         long fsyncStartNanos \u003d flushEndNanos;\n         streams.syncDataOut();\n         datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n+    if (isSync \u0026\u0026 !dirSyncOnHSyncDone \u0026\u0026 replicaInfo instanceof LocalReplica) {\n+      ((LocalReplica) replicaInfo).fsyncDirectory();\n+      dirSyncOnHSyncDone \u003d true;\n+    }\n     if (checksumOut !\u003d null || streams.getDataOut() !\u003d null) {\n       datanode.metrics.addFlushNanos(flushTotalNanos);\n       if (isSync) {\n         datanode.metrics.incrFsyncCount();\n       }\n     }\n     long duration \u003d Time.monotonicNow() - begin;\n     if (duration \u003e datanodeSlowLogThresholdMs \u0026\u0026 LOG.isWarnEnabled()) {\n       LOG.warn(\"Slow flushOrSync took \" + duration + \"ms (threshold\u003d\"\n           + datanodeSlowLogThresholdMs + \"ms), isSync:\" + isSync + \", flushTotalNanos\u003d\"\n           + flushTotalNanos + \"ns, volume\u003d\" + getVolumeBaseUri()\n           + \", blockId\u003d\" + replicaInfo.getBlockId());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void flushOrSync(boolean isSync) throws IOException {\n    long flushTotalNanos \u003d 0;\n    long begin \u003d Time.monotonicNow();\n    if (checksumOut !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      checksumOut.flush();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync) {\n        streams.syncChecksumOut();\n        datanode.metrics.addFsyncNanos(System.nanoTime() - flushEndNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (streams.getDataOut() !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      streams.flushDataOut();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync) {\n        long fsyncStartNanos \u003d flushEndNanos;\n        streams.syncDataOut();\n        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (isSync \u0026\u0026 !dirSyncOnHSyncDone \u0026\u0026 replicaInfo instanceof LocalReplica) {\n      ((LocalReplica) replicaInfo).fsyncDirectory();\n      dirSyncOnHSyncDone \u003d true;\n    }\n    if (checksumOut !\u003d null || streams.getDataOut() !\u003d null) {\n      datanode.metrics.addFlushNanos(flushTotalNanos);\n      if (isSync) {\n        datanode.metrics.incrFsyncCount();\n      }\n    }\n    long duration \u003d Time.monotonicNow() - begin;\n    if (duration \u003e datanodeSlowLogThresholdMs \u0026\u0026 LOG.isWarnEnabled()) {\n      LOG.warn(\"Slow flushOrSync took \" + duration + \"ms (threshold\u003d\"\n          + datanodeSlowLogThresholdMs + \"ms), isSync:\" + isSync + \", flushTotalNanos\u003d\"\n          + flushTotalNanos + \"ns, volume\u003d\" + getVolumeBaseUri()\n          + \", blockId\u003d\" + replicaInfo.getBlockId());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {}
    },
    "462e25a3b264e1148d0cbca00db7f10d43a0555f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12814. Add blockId when warning slow mirror/disk in BlockReceiver. Contributed by Jiandan Yang.\n",
      "commitDate": "16/11/17 12:19 AM",
      "commitName": "462e25a3b264e1148d0cbca00db7f10d43a0555f",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "28/08/17 3:49 PM",
      "commitNameOld": "a1e3f84afe6c02cc642699634052d2fb60b30179",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 79.4,
      "commitsBetweenForRepo": 781,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,38 @@\n   void flushOrSync(boolean isSync) throws IOException {\n     long flushTotalNanos \u003d 0;\n     long begin \u003d Time.monotonicNow();\n     if (checksumOut !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n       checksumOut.flush();\n       long flushEndNanos \u003d System.nanoTime();\n       if (isSync) {\n         streams.syncChecksumOut();\n         datanode.metrics.addFsyncNanos(System.nanoTime() - flushEndNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n     if (streams.getDataOut() !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n       streams.flushDataOut();\n       long flushEndNanos \u003d System.nanoTime();\n       if (isSync) {\n         long fsyncStartNanos \u003d flushEndNanos;\n         streams.syncDataOut();\n         datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n     if (checksumOut !\u003d null || streams.getDataOut() !\u003d null) {\n       datanode.metrics.addFlushNanos(flushTotalNanos);\n       if (isSync) {\n         datanode.metrics.incrFsyncCount();\n       }\n     }\n     long duration \u003d Time.monotonicNow() - begin;\n     if (duration \u003e datanodeSlowLogThresholdMs \u0026\u0026 LOG.isWarnEnabled()) {\n       LOG.warn(\"Slow flushOrSync took \" + duration + \"ms (threshold\u003d\"\n           + datanodeSlowLogThresholdMs + \"ms), isSync:\" + isSync + \", flushTotalNanos\u003d\"\n-          + flushTotalNanos + \"ns, volume\u003d\" + getVolumeBaseUri());\n+          + flushTotalNanos + \"ns, volume\u003d\" + getVolumeBaseUri()\n+          + \", blockId\u003d\" + replicaInfo.getBlockId());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void flushOrSync(boolean isSync) throws IOException {\n    long flushTotalNanos \u003d 0;\n    long begin \u003d Time.monotonicNow();\n    if (checksumOut !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      checksumOut.flush();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync) {\n        streams.syncChecksumOut();\n        datanode.metrics.addFsyncNanos(System.nanoTime() - flushEndNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (streams.getDataOut() !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      streams.flushDataOut();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync) {\n        long fsyncStartNanos \u003d flushEndNanos;\n        streams.syncDataOut();\n        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (checksumOut !\u003d null || streams.getDataOut() !\u003d null) {\n      datanode.metrics.addFlushNanos(flushTotalNanos);\n      if (isSync) {\n        datanode.metrics.incrFsyncCount();\n      }\n    }\n    long duration \u003d Time.monotonicNow() - begin;\n    if (duration \u003e datanodeSlowLogThresholdMs \u0026\u0026 LOG.isWarnEnabled()) {\n      LOG.warn(\"Slow flushOrSync took \" + duration + \"ms (threshold\u003d\"\n          + datanodeSlowLogThresholdMs + \"ms), isSync:\" + isSync + \", flushTotalNanos\u003d\"\n          + flushTotalNanos + \"ns, volume\u003d\" + getVolumeBaseUri()\n          + \", blockId\u003d\" + replicaInfo.getBlockId());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {}
    },
    "5485d93bda3329a7c80767c3723cc6e1a9233dbc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11603. Improve slow mirror/disk warnings in BlockReceiver.\n",
      "commitDate": "31/03/17 12:10 PM",
      "commitName": "5485d93bda3329a7c80767c3723cc6e1a9233dbc",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "17/03/17 7:02 PM",
      "commitNameOld": "ffa160ddb824cbcb8ab6b10ee1414507686e3c63",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 13.71,
      "commitsBetweenForRepo": 83,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   void flushOrSync(boolean isSync) throws IOException {\n     long flushTotalNanos \u003d 0;\n     long begin \u003d Time.monotonicNow();\n     if (checksumOut !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n       checksumOut.flush();\n       long flushEndNanos \u003d System.nanoTime();\n       if (isSync) {\n         streams.syncChecksumOut();\n         datanode.metrics.addFsyncNanos(System.nanoTime() - flushEndNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n     if (streams.getDataOut() !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n       streams.flushDataOut();\n       long flushEndNanos \u003d System.nanoTime();\n       if (isSync) {\n         long fsyncStartNanos \u003d flushEndNanos;\n         streams.syncDataOut();\n         datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n     if (checksumOut !\u003d null || streams.getDataOut() !\u003d null) {\n       datanode.metrics.addFlushNanos(flushTotalNanos);\n       if (isSync) {\n         datanode.metrics.incrFsyncCount();\n       }\n     }\n     long duration \u003d Time.monotonicNow() - begin;\n-    if (duration \u003e datanodeSlowLogThresholdMs) {\n+    if (duration \u003e datanodeSlowLogThresholdMs \u0026\u0026 LOG.isWarnEnabled()) {\n       LOG.warn(\"Slow flushOrSync took \" + duration + \"ms (threshold\u003d\"\n           + datanodeSlowLogThresholdMs + \"ms), isSync:\" + isSync + \", flushTotalNanos\u003d\"\n-          + flushTotalNanos + \"ns\");\n+          + flushTotalNanos + \"ns, volume\u003d\" + getVolumeBaseUri());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void flushOrSync(boolean isSync) throws IOException {\n    long flushTotalNanos \u003d 0;\n    long begin \u003d Time.monotonicNow();\n    if (checksumOut !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      checksumOut.flush();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync) {\n        streams.syncChecksumOut();\n        datanode.metrics.addFsyncNanos(System.nanoTime() - flushEndNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (streams.getDataOut() !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      streams.flushDataOut();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync) {\n        long fsyncStartNanos \u003d flushEndNanos;\n        streams.syncDataOut();\n        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (checksumOut !\u003d null || streams.getDataOut() !\u003d null) {\n      datanode.metrics.addFlushNanos(flushTotalNanos);\n      if (isSync) {\n        datanode.metrics.incrFsyncCount();\n      }\n    }\n    long duration \u003d Time.monotonicNow() - begin;\n    if (duration \u003e datanodeSlowLogThresholdMs \u0026\u0026 LOG.isWarnEnabled()) {\n      LOG.warn(\"Slow flushOrSync took \" + duration + \"ms (threshold\u003d\"\n          + datanodeSlowLogThresholdMs + \"ms), isSync:\" + isSync + \", flushTotalNanos\u003d\"\n          + flushTotalNanos + \"ns, volume\u003d\" + getVolumeBaseUri());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {}
    },
    "6ba9587d370fbf39c129c08c00ebbb894ccc1389": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10958. Add instrumentation hooks around Datanode disk IO.\n",
      "commitDate": "14/12/16 11:18 AM",
      "commitName": "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "06/12/16 11:05 AM",
      "commitNameOld": "df983b524ab68ea0c70cee9033bfff2d28052cbf",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 8.01,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,37 @@\n   void flushOrSync(boolean isSync) throws IOException {\n     long flushTotalNanos \u003d 0;\n     long begin \u003d Time.monotonicNow();\n     if (checksumOut !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n       checksumOut.flush();\n       long flushEndNanos \u003d System.nanoTime();\n       if (isSync) {\n-        long fsyncStartNanos \u003d flushEndNanos;\n         streams.syncChecksumOut();\n-        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n+        datanode.metrics.addFsyncNanos(System.nanoTime() - flushEndNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n     if (streams.getDataOut() !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n       streams.flushDataOut();\n       long flushEndNanos \u003d System.nanoTime();\n       if (isSync) {\n         long fsyncStartNanos \u003d flushEndNanos;\n         streams.syncDataOut();\n         datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n     if (checksumOut !\u003d null || streams.getDataOut() !\u003d null) {\n       datanode.metrics.addFlushNanos(flushTotalNanos);\n       if (isSync) {\n         datanode.metrics.incrFsyncCount();\n       }\n     }\n     long duration \u003d Time.monotonicNow() - begin;\n     if (duration \u003e datanodeSlowLogThresholdMs) {\n       LOG.warn(\"Slow flushOrSync took \" + duration + \"ms (threshold\u003d\"\n           + datanodeSlowLogThresholdMs + \"ms), isSync:\" + isSync + \", flushTotalNanos\u003d\"\n           + flushTotalNanos + \"ns\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void flushOrSync(boolean isSync) throws IOException {\n    long flushTotalNanos \u003d 0;\n    long begin \u003d Time.monotonicNow();\n    if (checksumOut !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      checksumOut.flush();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync) {\n        streams.syncChecksumOut();\n        datanode.metrics.addFsyncNanos(System.nanoTime() - flushEndNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (streams.getDataOut() !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      streams.flushDataOut();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync) {\n        long fsyncStartNanos \u003d flushEndNanos;\n        streams.syncDataOut();\n        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (checksumOut !\u003d null || streams.getDataOut() !\u003d null) {\n      datanode.metrics.addFlushNanos(flushTotalNanos);\n      if (isSync) {\n        datanode.metrics.incrFsyncCount();\n      }\n    }\n    long duration \u003d Time.monotonicNow() - begin;\n    if (duration \u003e datanodeSlowLogThresholdMs) {\n      LOG.warn(\"Slow flushOrSync took \" + duration + \"ms (threshold\u003d\"\n          + datanodeSlowLogThresholdMs + \"ms), isSync:\" + isSync + \", flushTotalNanos\u003d\"\n          + flushTotalNanos + \"ns\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {}
    },
    "df983b524ab68ea0c70cee9033bfff2d28052cbf": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10930. Refactor: Wrap Datanode IO related operations. Contributed by Xiaoyu Yao.\n",
      "commitDate": "06/12/16 11:05 AM",
      "commitName": "df983b524ab68ea0c70cee9033bfff2d28052cbf",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "05/12/16 12:44 PM",
      "commitNameOld": "dcedb72af468128458e597f08d22f5c34b744ae5",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 0.93,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   void flushOrSync(boolean isSync) throws IOException {\n     long flushTotalNanos \u003d 0;\n     long begin \u003d Time.monotonicNow();\n     if (checksumOut !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n       checksumOut.flush();\n       long flushEndNanos \u003d System.nanoTime();\n       if (isSync) {\n         long fsyncStartNanos \u003d flushEndNanos;\n         streams.syncChecksumOut();\n         datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n-    if (out !\u003d null) {\n+    if (streams.getDataOut() !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n-      out.flush();\n+      streams.flushDataOut();\n       long flushEndNanos \u003d System.nanoTime();\n       if (isSync) {\n         long fsyncStartNanos \u003d flushEndNanos;\n         streams.syncDataOut();\n         datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n-    if (checksumOut !\u003d null || out !\u003d null) {\n+    if (checksumOut !\u003d null || streams.getDataOut() !\u003d null) {\n       datanode.metrics.addFlushNanos(flushTotalNanos);\n       if (isSync) {\n-    \t  datanode.metrics.incrFsyncCount();      \n+        datanode.metrics.incrFsyncCount();\n       }\n     }\n     long duration \u003d Time.monotonicNow() - begin;\n     if (duration \u003e datanodeSlowLogThresholdMs) {\n       LOG.warn(\"Slow flushOrSync took \" + duration + \"ms (threshold\u003d\"\n           + datanodeSlowLogThresholdMs + \"ms), isSync:\" + isSync + \", flushTotalNanos\u003d\"\n           + flushTotalNanos + \"ns\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void flushOrSync(boolean isSync) throws IOException {\n    long flushTotalNanos \u003d 0;\n    long begin \u003d Time.monotonicNow();\n    if (checksumOut !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      checksumOut.flush();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync) {\n        long fsyncStartNanos \u003d flushEndNanos;\n        streams.syncChecksumOut();\n        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (streams.getDataOut() !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      streams.flushDataOut();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync) {\n        long fsyncStartNanos \u003d flushEndNanos;\n        streams.syncDataOut();\n        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (checksumOut !\u003d null || streams.getDataOut() !\u003d null) {\n      datanode.metrics.addFlushNanos(flushTotalNanos);\n      if (isSync) {\n        datanode.metrics.incrFsyncCount();\n      }\n    }\n    long duration \u003d Time.monotonicNow() - begin;\n    if (duration \u003e datanodeSlowLogThresholdMs) {\n      LOG.warn(\"Slow flushOrSync took \" + duration + \"ms (threshold\u003d\"\n          + datanodeSlowLogThresholdMs + \"ms), isSync:\" + isSync + \", flushTotalNanos\u003d\"\n          + flushTotalNanos + \"ns\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {}
    },
    "dcedb72af468128458e597f08d22f5c34b744ae5": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-10930. Refactor: Wrap Datanode IO related operations. Contributed by Xiaoyu Yao.\"\n\nThis reverts commit aeecfa24f4fb6af289920cbf8830c394e66bd78e.\n",
      "commitDate": "05/12/16 12:44 PM",
      "commitName": "dcedb72af468128458e597f08d22f5c34b744ae5",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "29/11/16 8:52 PM",
      "commitNameOld": "aeecfa24f4fb6af289920cbf8830c394e66bd78e",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 5.66,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   void flushOrSync(boolean isSync) throws IOException {\n     long flushTotalNanos \u003d 0;\n     long begin \u003d Time.monotonicNow();\n     if (checksumOut !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n       checksumOut.flush();\n       long flushEndNanos \u003d System.nanoTime();\n       if (isSync) {\n         long fsyncStartNanos \u003d flushEndNanos;\n         streams.syncChecksumOut();\n         datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n-    if (streams.getDataOut() !\u003d null) {\n+    if (out !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n-      streams.flushDataOut();\n+      out.flush();\n       long flushEndNanos \u003d System.nanoTime();\n       if (isSync) {\n         long fsyncStartNanos \u003d flushEndNanos;\n         streams.syncDataOut();\n         datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n-    if (checksumOut !\u003d null || streams.getDataOut() !\u003d null) {\n+    if (checksumOut !\u003d null || out !\u003d null) {\n       datanode.metrics.addFlushNanos(flushTotalNanos);\n       if (isSync) {\n-        datanode.metrics.incrFsyncCount();\n+    \t  datanode.metrics.incrFsyncCount();      \n       }\n     }\n     long duration \u003d Time.monotonicNow() - begin;\n     if (duration \u003e datanodeSlowLogThresholdMs) {\n       LOG.warn(\"Slow flushOrSync took \" + duration + \"ms (threshold\u003d\"\n           + datanodeSlowLogThresholdMs + \"ms), isSync:\" + isSync + \", flushTotalNanos\u003d\"\n           + flushTotalNanos + \"ns\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void flushOrSync(boolean isSync) throws IOException {\n    long flushTotalNanos \u003d 0;\n    long begin \u003d Time.monotonicNow();\n    if (checksumOut !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      checksumOut.flush();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync) {\n        long fsyncStartNanos \u003d flushEndNanos;\n        streams.syncChecksumOut();\n        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (out !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      out.flush();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync) {\n        long fsyncStartNanos \u003d flushEndNanos;\n        streams.syncDataOut();\n        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (checksumOut !\u003d null || out !\u003d null) {\n      datanode.metrics.addFlushNanos(flushTotalNanos);\n      if (isSync) {\n    \t  datanode.metrics.incrFsyncCount();      \n      }\n    }\n    long duration \u003d Time.monotonicNow() - begin;\n    if (duration \u003e datanodeSlowLogThresholdMs) {\n      LOG.warn(\"Slow flushOrSync took \" + duration + \"ms (threshold\u003d\"\n          + datanodeSlowLogThresholdMs + \"ms), isSync:\" + isSync + \", flushTotalNanos\u003d\"\n          + flushTotalNanos + \"ns\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {}
    },
    "aeecfa24f4fb6af289920cbf8830c394e66bd78e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10930. Refactor: Wrap Datanode IO related operations. Contributed by Xiaoyu Yao.\n",
      "commitDate": "29/11/16 8:52 PM",
      "commitName": "aeecfa24f4fb6af289920cbf8830c394e66bd78e",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "13/09/16 12:54 PM",
      "commitNameOld": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 77.37,
      "commitsBetweenForRepo": 595,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   void flushOrSync(boolean isSync) throws IOException {\n     long flushTotalNanos \u003d 0;\n     long begin \u003d Time.monotonicNow();\n     if (checksumOut !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n       checksumOut.flush();\n       long flushEndNanos \u003d System.nanoTime();\n       if (isSync) {\n         long fsyncStartNanos \u003d flushEndNanos;\n         streams.syncChecksumOut();\n         datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n-    if (out !\u003d null) {\n+    if (streams.getDataOut() !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n-      out.flush();\n+      streams.flushDataOut();\n       long flushEndNanos \u003d System.nanoTime();\n       if (isSync) {\n         long fsyncStartNanos \u003d flushEndNanos;\n         streams.syncDataOut();\n         datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n-    if (checksumOut !\u003d null || out !\u003d null) {\n+    if (checksumOut !\u003d null || streams.getDataOut() !\u003d null) {\n       datanode.metrics.addFlushNanos(flushTotalNanos);\n       if (isSync) {\n-    \t  datanode.metrics.incrFsyncCount();      \n+        datanode.metrics.incrFsyncCount();\n       }\n     }\n     long duration \u003d Time.monotonicNow() - begin;\n     if (duration \u003e datanodeSlowLogThresholdMs) {\n       LOG.warn(\"Slow flushOrSync took \" + duration + \"ms (threshold\u003d\"\n           + datanodeSlowLogThresholdMs + \"ms), isSync:\" + isSync + \", flushTotalNanos\u003d\"\n           + flushTotalNanos + \"ns\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void flushOrSync(boolean isSync) throws IOException {\n    long flushTotalNanos \u003d 0;\n    long begin \u003d Time.monotonicNow();\n    if (checksumOut !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      checksumOut.flush();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync) {\n        long fsyncStartNanos \u003d flushEndNanos;\n        streams.syncChecksumOut();\n        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (streams.getDataOut() !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      streams.flushDataOut();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync) {\n        long fsyncStartNanos \u003d flushEndNanos;\n        streams.syncDataOut();\n        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (checksumOut !\u003d null || streams.getDataOut() !\u003d null) {\n      datanode.metrics.addFlushNanos(flushTotalNanos);\n      if (isSync) {\n        datanode.metrics.incrFsyncCount();\n      }\n    }\n    long duration \u003d Time.monotonicNow() - begin;\n    if (duration \u003e datanodeSlowLogThresholdMs) {\n      LOG.warn(\"Slow flushOrSync took \" + duration + \"ms (threshold\u003d\"\n          + datanodeSlowLogThresholdMs + \"ms), isSync:\" + isSync + \", flushTotalNanos\u003d\"\n          + flushTotalNanos + \"ns\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {}
    },
    "1228f8f6fb16de4f0283dd1c7939e6fc3dfb7aae": {
      "type": "Ybodychange",
      "commitMessage": "HBASE-6110 adding more slow action log in critical write path (Liang Xie via stack)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1597633 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/05/14 12:38 PM",
      "commitName": "1228f8f6fb16de4f0283dd1c7939e6fc3dfb7aae",
      "commitAuthor": "Michael Stack",
      "commitDateOld": "12/05/14 12:08 PM",
      "commitNameOld": "e9459baec5a46651c156fbae5f8f3c9cc8325ef0",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 14.02,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,38 @@\n   void flushOrSync(boolean isSync) throws IOException {\n     long flushTotalNanos \u003d 0;\n+    long begin \u003d Time.monotonicNow();\n     if (checksumOut !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n       checksumOut.flush();\n       long flushEndNanos \u003d System.nanoTime();\n       if (isSync) {\n         long fsyncStartNanos \u003d flushEndNanos;\n         streams.syncChecksumOut();\n         datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n     if (out !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n       out.flush();\n       long flushEndNanos \u003d System.nanoTime();\n       if (isSync) {\n         long fsyncStartNanos \u003d flushEndNanos;\n         streams.syncDataOut();\n         datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n     if (checksumOut !\u003d null || out !\u003d null) {\n       datanode.metrics.addFlushNanos(flushTotalNanos);\n       if (isSync) {\n     \t  datanode.metrics.incrFsyncCount();      \n       }\n     }\n+    long duration \u003d Time.monotonicNow() - begin;\n+    if (duration \u003e datanodeSlowLogThresholdMs) {\n+      LOG.warn(\"Slow flushOrSync took \" + duration + \"ms (threshold\u003d\"\n+          + datanodeSlowLogThresholdMs + \"ms), isSync:\" + isSync + \", flushTotalNanos\u003d\"\n+          + flushTotalNanos + \"ns\");\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void flushOrSync(boolean isSync) throws IOException {\n    long flushTotalNanos \u003d 0;\n    long begin \u003d Time.monotonicNow();\n    if (checksumOut !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      checksumOut.flush();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync) {\n        long fsyncStartNanos \u003d flushEndNanos;\n        streams.syncChecksumOut();\n        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (out !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      out.flush();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync) {\n        long fsyncStartNanos \u003d flushEndNanos;\n        streams.syncDataOut();\n        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (checksumOut !\u003d null || out !\u003d null) {\n      datanode.metrics.addFlushNanos(flushTotalNanos);\n      if (isSync) {\n    \t  datanode.metrics.incrFsyncCount();      \n      }\n    }\n    long duration \u003d Time.monotonicNow() - begin;\n    if (duration \u003e datanodeSlowLogThresholdMs) {\n      LOG.warn(\"Slow flushOrSync took \" + duration + \"ms (threshold\u003d\"\n          + datanodeSlowLogThresholdMs + \"ms), isSync:\" + isSync + \", flushTotalNanos\u003d\"\n          + flushTotalNanos + \"ns\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {}
    },
    "0369aff403012f8dd02486a3dd2f8e346ad23b03": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5868. Make hsync implementation pluggable. (Contributed by Buddy Taylor)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1569978 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/02/14 3:38 PM",
      "commitName": "0369aff403012f8dd02486a3dd2f8e346ad23b03",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "22/11/13 12:07 PM",
      "commitNameOld": "97acde2d33967f7f870f7dfe96c6b558e6fe324b",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 89.15,
      "commitsBetweenForRepo": 536,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   void flushOrSync(boolean isSync) throws IOException {\n     long flushTotalNanos \u003d 0;\n     if (checksumOut !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n       checksumOut.flush();\n       long flushEndNanos \u003d System.nanoTime();\n-      if (isSync \u0026\u0026 (cout instanceof FileOutputStream)) {\n+      if (isSync) {\n         long fsyncStartNanos \u003d flushEndNanos;\n-        ((FileOutputStream)cout).getChannel().force(true);\n+        streams.syncChecksumOut();\n         datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n     if (out !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n       out.flush();\n       long flushEndNanos \u003d System.nanoTime();\n-      if (isSync \u0026\u0026 (out instanceof FileOutputStream)) {\n+      if (isSync) {\n         long fsyncStartNanos \u003d flushEndNanos;\n-        ((FileOutputStream)out).getChannel().force(true);\n+        streams.syncDataOut();\n         datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n     if (checksumOut !\u003d null || out !\u003d null) {\n       datanode.metrics.addFlushNanos(flushTotalNanos);\n       if (isSync) {\n     \t  datanode.metrics.incrFsyncCount();      \n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void flushOrSync(boolean isSync) throws IOException {\n    long flushTotalNanos \u003d 0;\n    if (checksumOut !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      checksumOut.flush();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync) {\n        long fsyncStartNanos \u003d flushEndNanos;\n        streams.syncChecksumOut();\n        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (out !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      out.flush();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync) {\n        long fsyncStartNanos \u003d flushEndNanos;\n        streams.syncDataOut();\n        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (checksumOut !\u003d null || out !\u003d null) {\n      datanode.metrics.addFlushNanos(flushTotalNanos);\n      if (isSync) {\n    \t  datanode.metrics.incrFsyncCount();      \n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {}
    },
    "1e7010cf38115604d6fa3aa5728362c86644e66a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3979. For hsync, datanode should wait for the local sync to complete before sending ack. Contributed by Lars Hofhansl\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1406382 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/11/12 2:34 PM",
      "commitName": "1e7010cf38115604d6fa3aa5728362c86644e66a",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/10/12 4:10 PM",
      "commitNameOld": "cea7bbc630deede93dbe6a1bbda56ad49de4f3de",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 8.97,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   void flushOrSync(boolean isSync) throws IOException {\n-    if (isSync \u0026\u0026 (out !\u003d null || checksumOut !\u003d null)) {\n-      datanode.metrics.incrFsyncCount();      \n-    }\n     long flushTotalNanos \u003d 0;\n     if (checksumOut !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n       checksumOut.flush();\n       long flushEndNanos \u003d System.nanoTime();\n       if (isSync \u0026\u0026 (cout instanceof FileOutputStream)) {\n         long fsyncStartNanos \u003d flushEndNanos;\n         ((FileOutputStream)cout).getChannel().force(true);\n         datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n     if (out !\u003d null) {\n       long flushStartNanos \u003d System.nanoTime();\n       out.flush();\n       long flushEndNanos \u003d System.nanoTime();\n       if (isSync \u0026\u0026 (out instanceof FileOutputStream)) {\n         long fsyncStartNanos \u003d flushEndNanos;\n         ((FileOutputStream)out).getChannel().force(true);\n         datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n       }\n       flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n     if (checksumOut !\u003d null || out !\u003d null) {\n       datanode.metrics.addFlushNanos(flushTotalNanos);\n+      if (isSync) {\n+    \t  datanode.metrics.incrFsyncCount();      \n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void flushOrSync(boolean isSync) throws IOException {\n    long flushTotalNanos \u003d 0;\n    if (checksumOut !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      checksumOut.flush();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync \u0026\u0026 (cout instanceof FileOutputStream)) {\n        long fsyncStartNanos \u003d flushEndNanos;\n        ((FileOutputStream)cout).getChannel().force(true);\n        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (out !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      out.flush();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync \u0026\u0026 (out instanceof FileOutputStream)) {\n        long fsyncStartNanos \u003d flushEndNanos;\n        ((FileOutputStream)out).getChannel().force(true);\n        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (checksumOut !\u003d null || out !\u003d null) {\n      datanode.metrics.addFlushNanos(flushTotalNanos);\n      if (isSync) {\n    \t  datanode.metrics.incrFsyncCount();      \n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {}
    },
    "e0ef844280b98dc699ed3f9d948b83828bb8d297": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3170. Add more useful metrics for write latency. Contributed by Matthew Jacobs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1357970 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/07/12 3:18 PM",
      "commitName": "e0ef844280b98dc699ed3f9d948b83828bb8d297",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "30/05/12 12:10 PM",
      "commitNameOld": "83cf475050dba27e72b4e399491638c670621175",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 36.13,
      "commitsBetweenForRepo": 159,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,31 @@\n   void flushOrSync(boolean isSync) throws IOException {\n     if (isSync \u0026\u0026 (out !\u003d null || checksumOut !\u003d null)) {\n       datanode.metrics.incrFsyncCount();      \n     }\n+    long flushTotalNanos \u003d 0;\n     if (checksumOut !\u003d null) {\n+      long flushStartNanos \u003d System.nanoTime();\n       checksumOut.flush();\n+      long flushEndNanos \u003d System.nanoTime();\n       if (isSync \u0026\u0026 (cout instanceof FileOutputStream)) {\n-        long start \u003d Util.now();\n+        long fsyncStartNanos \u003d flushEndNanos;\n         ((FileOutputStream)cout).getChannel().force(true);\n-        datanode.metrics.addFsync(Util.now() - start);\n+        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n       }\n+      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n     }\n     if (out !\u003d null) {\n+      long flushStartNanos \u003d System.nanoTime();\n       out.flush();\n+      long flushEndNanos \u003d System.nanoTime();\n       if (isSync \u0026\u0026 (out instanceof FileOutputStream)) {\n-        long start \u003d Util.now();\n+        long fsyncStartNanos \u003d flushEndNanos;\n         ((FileOutputStream)out).getChannel().force(true);\n-        datanode.metrics.addFsync(Util.now() - start);\n+        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n       }\n+      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n+    }\n+    if (checksumOut !\u003d null || out !\u003d null) {\n+      datanode.metrics.addFlushNanos(flushTotalNanos);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void flushOrSync(boolean isSync) throws IOException {\n    if (isSync \u0026\u0026 (out !\u003d null || checksumOut !\u003d null)) {\n      datanode.metrics.incrFsyncCount();      \n    }\n    long flushTotalNanos \u003d 0;\n    if (checksumOut !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      checksumOut.flush();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync \u0026\u0026 (cout instanceof FileOutputStream)) {\n        long fsyncStartNanos \u003d flushEndNanos;\n        ((FileOutputStream)cout).getChannel().force(true);\n        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (out !\u003d null) {\n      long flushStartNanos \u003d System.nanoTime();\n      out.flush();\n      long flushEndNanos \u003d System.nanoTime();\n      if (isSync \u0026\u0026 (out instanceof FileOutputStream)) {\n        long fsyncStartNanos \u003d flushEndNanos;\n        ((FileOutputStream)out).getChannel().force(true);\n        datanode.metrics.addFsyncNanos(System.nanoTime() - fsyncStartNanos);\n      }\n      flushTotalNanos +\u003d flushEndNanos - flushStartNanos;\n    }\n    if (checksumOut !\u003d null || out !\u003d null) {\n      datanode.metrics.addFlushNanos(flushTotalNanos);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {}
    },
    "83cf475050dba27e72b4e399491638c670621175": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-744. Support hsync in HDFS. Contributed by Lars Hofhans\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1344419 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/12 12:10 PM",
      "commitName": "83cf475050dba27e72b4e399491638c670621175",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-744. Support hsync in HDFS. Contributed by Lars Hofhans\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1344419 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/05/12 12:10 PM",
          "commitName": "83cf475050dba27e72b4e399491638c670621175",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/03/12 1:37 PM",
          "commitNameOld": "99a68a14237b4cd1936ba5e9468d25d35dad594c",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 62.94,
          "commitsBetweenForRepo": 450,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,21 @@\n-  void flush() throws IOException {\n+  void flushOrSync(boolean isSync) throws IOException {\n+    if (isSync \u0026\u0026 (out !\u003d null || checksumOut !\u003d null)) {\n+      datanode.metrics.incrFsyncCount();      \n+    }\n     if (checksumOut !\u003d null) {\n       checksumOut.flush();\n+      if (isSync \u0026\u0026 (cout instanceof FileOutputStream)) {\n+        long start \u003d Util.now();\n+        ((FileOutputStream)cout).getChannel().force(true);\n+        datanode.metrics.addFsync(Util.now() - start);\n+      }\n     }\n     if (out !\u003d null) {\n       out.flush();\n+      if (isSync \u0026\u0026 (out instanceof FileOutputStream)) {\n+        long start \u003d Util.now();\n+        ((FileOutputStream)out).getChannel().force(true);\n+        datanode.metrics.addFsync(Util.now() - start);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void flushOrSync(boolean isSync) throws IOException {\n    if (isSync \u0026\u0026 (out !\u003d null || checksumOut !\u003d null)) {\n      datanode.metrics.incrFsyncCount();      \n    }\n    if (checksumOut !\u003d null) {\n      checksumOut.flush();\n      if (isSync \u0026\u0026 (cout instanceof FileOutputStream)) {\n        long start \u003d Util.now();\n        ((FileOutputStream)cout).getChannel().force(true);\n        datanode.metrics.addFsync(Util.now() - start);\n      }\n    }\n    if (out !\u003d null) {\n      out.flush();\n      if (isSync \u0026\u0026 (out instanceof FileOutputStream)) {\n        long start \u003d Util.now();\n        ((FileOutputStream)out).getChannel().force(true);\n        datanode.metrics.addFsync(Util.now() - start);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
          "extendedDetails": {
            "oldValue": "flush",
            "newValue": "flushOrSync"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-744. Support hsync in HDFS. Contributed by Lars Hofhans\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1344419 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/05/12 12:10 PM",
          "commitName": "83cf475050dba27e72b4e399491638c670621175",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/03/12 1:37 PM",
          "commitNameOld": "99a68a14237b4cd1936ba5e9468d25d35dad594c",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 62.94,
          "commitsBetweenForRepo": 450,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,21 @@\n-  void flush() throws IOException {\n+  void flushOrSync(boolean isSync) throws IOException {\n+    if (isSync \u0026\u0026 (out !\u003d null || checksumOut !\u003d null)) {\n+      datanode.metrics.incrFsyncCount();      \n+    }\n     if (checksumOut !\u003d null) {\n       checksumOut.flush();\n+      if (isSync \u0026\u0026 (cout instanceof FileOutputStream)) {\n+        long start \u003d Util.now();\n+        ((FileOutputStream)cout).getChannel().force(true);\n+        datanode.metrics.addFsync(Util.now() - start);\n+      }\n     }\n     if (out !\u003d null) {\n       out.flush();\n+      if (isSync \u0026\u0026 (out instanceof FileOutputStream)) {\n+        long start \u003d Util.now();\n+        ((FileOutputStream)out).getChannel().force(true);\n+        datanode.metrics.addFsync(Util.now() - start);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void flushOrSync(boolean isSync) throws IOException {\n    if (isSync \u0026\u0026 (out !\u003d null || checksumOut !\u003d null)) {\n      datanode.metrics.incrFsyncCount();      \n    }\n    if (checksumOut !\u003d null) {\n      checksumOut.flush();\n      if (isSync \u0026\u0026 (cout instanceof FileOutputStream)) {\n        long start \u003d Util.now();\n        ((FileOutputStream)cout).getChannel().force(true);\n        datanode.metrics.addFsync(Util.now() - start);\n      }\n    }\n    if (out !\u003d null) {\n      out.flush();\n      if (isSync \u0026\u0026 (out instanceof FileOutputStream)) {\n        long start \u003d Util.now();\n        ((FileOutputStream)out).getChannel().force(true);\n        datanode.metrics.addFsync(Util.now() - start);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[isSync-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-744. Support hsync in HDFS. Contributed by Lars Hofhans\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1344419 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/05/12 12:10 PM",
          "commitName": "83cf475050dba27e72b4e399491638c670621175",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/03/12 1:37 PM",
          "commitNameOld": "99a68a14237b4cd1936ba5e9468d25d35dad594c",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 62.94,
          "commitsBetweenForRepo": 450,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,21 @@\n-  void flush() throws IOException {\n+  void flushOrSync(boolean isSync) throws IOException {\n+    if (isSync \u0026\u0026 (out !\u003d null || checksumOut !\u003d null)) {\n+      datanode.metrics.incrFsyncCount();      \n+    }\n     if (checksumOut !\u003d null) {\n       checksumOut.flush();\n+      if (isSync \u0026\u0026 (cout instanceof FileOutputStream)) {\n+        long start \u003d Util.now();\n+        ((FileOutputStream)cout).getChannel().force(true);\n+        datanode.metrics.addFsync(Util.now() - start);\n+      }\n     }\n     if (out !\u003d null) {\n       out.flush();\n+      if (isSync \u0026\u0026 (out instanceof FileOutputStream)) {\n+        long start \u003d Util.now();\n+        ((FileOutputStream)out).getChannel().force(true);\n+        datanode.metrics.addFsync(Util.now() - start);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void flushOrSync(boolean isSync) throws IOException {\n    if (isSync \u0026\u0026 (out !\u003d null || checksumOut !\u003d null)) {\n      datanode.metrics.incrFsyncCount();      \n    }\n    if (checksumOut !\u003d null) {\n      checksumOut.flush();\n      if (isSync \u0026\u0026 (cout instanceof FileOutputStream)) {\n        long start \u003d Util.now();\n        ((FileOutputStream)cout).getChannel().force(true);\n        datanode.metrics.addFsync(Util.now() - start);\n      }\n    }\n    if (out !\u003d null) {\n      out.flush();\n      if (isSync \u0026\u0026 (out instanceof FileOutputStream)) {\n        long start \u003d Util.now();\n        ((FileOutputStream)out).getChannel().force(true);\n        datanode.metrics.addFsync(Util.now() - start);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void flush() throws IOException {\n    if (checksumOut !\u003d null) {\n      checksumOut.flush();\n    }\n    if (out !\u003d null) {\n      out.flush();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void flush() throws IOException {\n    if (checksumOut !\u003d null) {\n      checksumOut.flush();\n    }\n    if (out !\u003d null) {\n      out.flush();\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,8 @@\n+  void flush() throws IOException {\n+    if (checksumOut !\u003d null) {\n+      checksumOut.flush();\n+    }\n+    if (out !\u003d null) {\n+      out.flush();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void flush() throws IOException {\n    if (checksumOut !\u003d null) {\n      checksumOut.flush();\n    }\n    if (out !\u003d null) {\n      out.flush();\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java"
    }
  }
}