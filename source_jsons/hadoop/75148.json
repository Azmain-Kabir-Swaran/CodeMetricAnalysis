{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UserGroupInformation.java",
  "functionName": "logoutUserFromKeytab",
  "functionId": "logoutUserFromKeytab",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
  "functionStartLine": 1137,
  "functionEndLine": 1166,
  "numCommitsSeen": 104,
  "timeTaken": 3773,
  "changeHistory": [
    "d0302d3849cc4f801f3b7d417b2c7bd7378d51e9",
    "bfb9adc2b9e6e97f1036bcf8ea4cee6893a782b2",
    "59cf7588779145ad5850ad63426743dfe03d8347",
    "2e853be6577a5b98fd860e6d64f89ca6d160514a",
    "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4",
    "ab725cff66e8a047e9437e42ac49ac8685ee7a94"
  ],
  "changeHistoryShort": {
    "d0302d3849cc4f801f3b7d417b2c7bd7378d51e9": "Ybodychange",
    "bfb9adc2b9e6e97f1036bcf8ea4cee6893a782b2": "Ybodychange",
    "59cf7588779145ad5850ad63426743dfe03d8347": "Ybodychange",
    "2e853be6577a5b98fd860e6d64f89ca6d160514a": "Ybodychange",
    "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4": "Ybodychange",
    "ab725cff66e8a047e9437e42ac49ac8685ee7a94": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d0302d3849cc4f801f3b7d417b2c7bd7378d51e9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16691. Unify Logging in UserGroupInformation.\n\nUnify Logging in UserGroupInformation.",
      "commitDate": "14/11/19 10:28 AM",
      "commitName": "d0302d3849cc4f801f3b7d417b2c7bd7378d51e9",
      "commitAuthor": "belugabehr",
      "commitDateOld": "28/02/19 10:34 AM",
      "commitNameOld": "0d61facd3777c26178a9974e646b6ff351fedcb5",
      "commitAuthorOld": "Ajay Kumar",
      "daysBetweenCommits": 259.0,
      "commitsBetweenForRepo": 1874,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,30 @@\n   public void logoutUserFromKeytab() throws IOException {\n     if (!hasKerberosCredentials()) {\n       return;\n     }\n \n     // Shutdown the background task performing login renewal.\n     if (getKerberosLoginRenewalExecutor().isPresent()) {\n       getKerberosLoginRenewalExecutor().get().shutdownNow();\n     }\n \n     HadoopLoginContext login \u003d getLogin();\n     String keytabFile \u003d getKeytab();\n     if (login \u003d\u003d null || keytabFile \u003d\u003d null) {\n       throw new KerberosAuthException(MUST_FIRST_LOGIN_FROM_KEYTAB);\n     }\n \n     try {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Initiating logout for \" + getUserName());\n-      }\n+      LOG.debug(\"Initiating logout for {}\", getUserName());\n       // hadoop login context internally locks credentials.\n       login.logout();\n     } catch (LoginException le) {\n       KerberosAuthException kae \u003d new KerberosAuthException(LOGOUT_FAILURE, le);\n       kae.setUser(user.toString());\n       kae.setKeytabFile(keytabFile);\n       throw kae;\n     }\n \n     LOG.info(\"Logout successful for user \" + getUserName()\n         + \" using keytab file \" + keytabFile);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void logoutUserFromKeytab() throws IOException {\n    if (!hasKerberosCredentials()) {\n      return;\n    }\n\n    // Shutdown the background task performing login renewal.\n    if (getKerberosLoginRenewalExecutor().isPresent()) {\n      getKerberosLoginRenewalExecutor().get().shutdownNow();\n    }\n\n    HadoopLoginContext login \u003d getLogin();\n    String keytabFile \u003d getKeytab();\n    if (login \u003d\u003d null || keytabFile \u003d\u003d null) {\n      throw new KerberosAuthException(MUST_FIRST_LOGIN_FROM_KEYTAB);\n    }\n\n    try {\n      LOG.debug(\"Initiating logout for {}\", getUserName());\n      // hadoop login context internally locks credentials.\n      login.logout();\n    } catch (LoginException le) {\n      KerberosAuthException kae \u003d new KerberosAuthException(LOGOUT_FAILURE, le);\n      kae.setUser(user.toString());\n      kae.setKeytabFile(keytabFile);\n      throw kae;\n    }\n\n    LOG.info(\"Logout successful for user \" + getUserName()\n        + \" using keytab file \" + keytabFile);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "bfb9adc2b9e6e97f1036bcf8ea4cee6893a782b2": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9567. Provide auto-renewal for keytab based logins. Contributed by Hrishikesh Gadre, Gary Helmling  and Harsh J.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "27/10/18 8:59 AM",
      "commitName": "bfb9adc2b9e6e97f1036bcf8ea4cee6893a782b2",
      "commitAuthor": "Hrishikesh Gadre",
      "commitDateOld": "11/10/18 3:35 PM",
      "commitNameOld": "d91d47bc739f23ca22a7e44fc83d449db57ab130",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 15.73,
      "commitsBetweenForRepo": 180,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,32 @@\n   public void logoutUserFromKeytab() throws IOException {\n     if (!hasKerberosCredentials()) {\n       return;\n     }\n+\n+    // Shutdown the background task performing login renewal.\n+    if (getKerberosLoginRenewalExecutor().isPresent()) {\n+      getKerberosLoginRenewalExecutor().get().shutdownNow();\n+    }\n+\n     HadoopLoginContext login \u003d getLogin();\n     String keytabFile \u003d getKeytab();\n     if (login \u003d\u003d null || keytabFile \u003d\u003d null) {\n       throw new KerberosAuthException(MUST_FIRST_LOGIN_FROM_KEYTAB);\n     }\n \n     try {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Initiating logout for \" + getUserName());\n       }\n       // hadoop login context internally locks credentials.\n       login.logout();\n     } catch (LoginException le) {\n       KerberosAuthException kae \u003d new KerberosAuthException(LOGOUT_FAILURE, le);\n       kae.setUser(user.toString());\n       kae.setKeytabFile(keytabFile);\n       throw kae;\n     }\n \n     LOG.info(\"Logout successful for user \" + getUserName()\n         + \" using keytab file \" + keytabFile);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void logoutUserFromKeytab() throws IOException {\n    if (!hasKerberosCredentials()) {\n      return;\n    }\n\n    // Shutdown the background task performing login renewal.\n    if (getKerberosLoginRenewalExecutor().isPresent()) {\n      getKerberosLoginRenewalExecutor().get().shutdownNow();\n    }\n\n    HadoopLoginContext login \u003d getLogin();\n    String keytabFile \u003d getKeytab();\n    if (login \u003d\u003d null || keytabFile \u003d\u003d null) {\n      throw new KerberosAuthException(MUST_FIRST_LOGIN_FROM_KEYTAB);\n    }\n\n    try {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Initiating logout for \" + getUserName());\n      }\n      // hadoop login context internally locks credentials.\n      login.logout();\n    } catch (LoginException le) {\n      KerberosAuthException kae \u003d new KerberosAuthException(LOGOUT_FAILURE, le);\n      kae.setUser(user.toString());\n      kae.setKeytabFile(keytabFile);\n      throw kae;\n    }\n\n    LOG.info(\"Logout successful for user \" + getUserName()\n        + \" using keytab file \" + keytabFile);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "59cf7588779145ad5850ad63426743dfe03d8347": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9747. Reduce unnecessary UGI synchronization. Contributed by Daryn Sharp.\n",
      "commitDate": "23/02/18 11:10 AM",
      "commitName": "59cf7588779145ad5850ad63426743dfe03d8347",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "27/12/17 11:17 PM",
      "commitNameOld": "d31c9d8c495794a803fb20729b5ed6b374e23eb4",
      "commitAuthorOld": "Jitendra Pandey",
      "daysBetweenCommits": 57.5,
      "commitsBetweenForRepo": 327,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,26 @@\n   public void logoutUserFromKeytab() throws IOException {\n-    if (!isSecurityEnabled() ||\n-        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS) {\n+    if (!hasKerberosCredentials()) {\n       return;\n     }\n-    LoginContext login \u003d getLogin();\n+    HadoopLoginContext login \u003d getLogin();\n+    String keytabFile \u003d getKeytab();\n     if (login \u003d\u003d null || keytabFile \u003d\u003d null) {\n       throw new KerberosAuthException(MUST_FIRST_LOGIN_FROM_KEYTAB);\n     }\n \n     try {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Initiating logout for \" + getUserName());\n       }\n-      synchronized (UserGroupInformation.class) {\n-        login.logout();\n-      }\n+      // hadoop login context internally locks credentials.\n+      login.logout();\n     } catch (LoginException le) {\n       KerberosAuthException kae \u003d new KerberosAuthException(LOGOUT_FAILURE, le);\n       kae.setUser(user.toString());\n       kae.setKeytabFile(keytabFile);\n       throw kae;\n     }\n \n-    LOG.info(\"Logout successful for user \" + keytabPrincipal\n+    LOG.info(\"Logout successful for user \" + getUserName()\n         + \" using keytab file \" + keytabFile);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void logoutUserFromKeytab() throws IOException {\n    if (!hasKerberosCredentials()) {\n      return;\n    }\n    HadoopLoginContext login \u003d getLogin();\n    String keytabFile \u003d getKeytab();\n    if (login \u003d\u003d null || keytabFile \u003d\u003d null) {\n      throw new KerberosAuthException(MUST_FIRST_LOGIN_FROM_KEYTAB);\n    }\n\n    try {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Initiating logout for \" + getUserName());\n      }\n      // hadoop login context internally locks credentials.\n      login.logout();\n    } catch (LoginException le) {\n      KerberosAuthException kae \u003d new KerberosAuthException(LOGOUT_FAILURE, le);\n      kae.setUser(user.toString());\n      kae.setKeytabFile(keytabFile);\n      throw kae;\n    }\n\n    LOG.info(\"Logout successful for user \" + getUserName()\n        + \" using keytab file \" + keytabFile);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "2e853be6577a5b98fd860e6d64f89ca6d160514a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13627. Have an explicit KerberosAuthException for UGI to throw, text from public constants. Contributed by Xiao Chen.\n",
      "commitDate": "07/10/16 1:46 PM",
      "commitName": "2e853be6577a5b98fd860e6d64f89ca6d160514a",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "05/10/16 5:36 PM",
      "commitNameOld": "c5ca2169151a5eec57152775789b6f53664e102c",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 1.84,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   public void logoutUserFromKeytab() throws IOException {\n     if (!isSecurityEnabled() ||\n         user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS) {\n       return;\n     }\n     LoginContext login \u003d getLogin();\n     if (login \u003d\u003d null || keytabFile \u003d\u003d null) {\n-      throw new IOException(\"loginUserFromKeytab must be done first\");\n+      throw new KerberosAuthException(MUST_FIRST_LOGIN_FROM_KEYTAB);\n     }\n \n     try {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Initiating logout for \" + getUserName());\n       }\n       synchronized (UserGroupInformation.class) {\n         login.logout();\n       }\n     } catch (LoginException le) {\n-      throw new IOException(\"Logout failure for \" + user + \" from keytab \" +\n-          keytabFile + \": \" + le,\n-          le);\n+      KerberosAuthException kae \u003d new KerberosAuthException(LOGOUT_FAILURE, le);\n+      kae.setUser(user.toString());\n+      kae.setKeytabFile(keytabFile);\n+      throw kae;\n     }\n \n     LOG.info(\"Logout successful for user \" + keytabPrincipal\n         + \" using keytab file \" + keytabFile);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void logoutUserFromKeytab() throws IOException {\n    if (!isSecurityEnabled() ||\n        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS) {\n      return;\n    }\n    LoginContext login \u003d getLogin();\n    if (login \u003d\u003d null || keytabFile \u003d\u003d null) {\n      throw new KerberosAuthException(MUST_FIRST_LOGIN_FROM_KEYTAB);\n    }\n\n    try {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Initiating logout for \" + getUserName());\n      }\n      synchronized (UserGroupInformation.class) {\n        login.logout();\n      }\n    } catch (LoginException le) {\n      KerberosAuthException kae \u003d new KerberosAuthException(LOGOUT_FAILURE, le);\n      kae.setUser(user.toString());\n      kae.setKeytabFile(keytabFile);\n      throw kae;\n    }\n\n    LOG.info(\"Logout successful for user \" + keytabPrincipal\n        + \" using keytab file \" + keytabFile);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12426. Add Entry point for Kerberos health check. Contributed by Steve Loughran.\n",
      "commitDate": "05/02/16 3:47 PM",
      "commitName": "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4",
      "commitAuthor": "cnauroth",
      "commitDateOld": "22/01/16 12:15 PM",
      "commitNameOld": "d22c4239a40a1c7ed49c06038138f0e3f387b4a0",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 14.15,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   public void logoutUserFromKeytab() throws IOException {\n     if (!isSecurityEnabled() ||\n         user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS) {\n       return;\n     }\n     LoginContext login \u003d getLogin();\n     if (login \u003d\u003d null || keytabFile \u003d\u003d null) {\n       throw new IOException(\"loginUserFromKeytab must be done first\");\n     }\n \n     try {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Initiating logout for \" + getUserName());\n       }\n       synchronized (UserGroupInformation.class) {\n         login.logout();\n       }\n     } catch (LoginException le) {\n       throw new IOException(\"Logout failure for \" + user + \" from keytab \" +\n-          keytabFile, le);\n+          keytabFile + \": \" + le,\n+          le);\n     }\n \n     LOG.info(\"Logout successful for user \" + keytabPrincipal\n         + \" using keytab file \" + keytabFile);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void logoutUserFromKeytab() throws IOException {\n    if (!isSecurityEnabled() ||\n        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS) {\n      return;\n    }\n    LoginContext login \u003d getLogin();\n    if (login \u003d\u003d null || keytabFile \u003d\u003d null) {\n      throw new IOException(\"loginUserFromKeytab must be done first\");\n    }\n\n    try {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Initiating logout for \" + getUserName());\n      }\n      synchronized (UserGroupInformation.class) {\n        login.logout();\n      }\n    } catch (LoginException le) {\n      throw new IOException(\"Logout failure for \" + user + \" from keytab \" +\n          keytabFile + \": \" + le,\n          le);\n    }\n\n    LOG.info(\"Logout successful for user \" + keytabPrincipal\n        + \" using keytab file \" + keytabFile);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "ab725cff66e8a047e9437e42ac49ac8685ee7a94": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12682. Fix TestKMS#testKMSRestart* failure. Contributed by Wei-Chiu Chuang.\n",
      "commitDate": "30/12/15 10:29 AM",
      "commitName": "ab725cff66e8a047e9437e42ac49ac8685ee7a94",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,25 @@\n+  public void logoutUserFromKeytab() throws IOException {\n+    if (!isSecurityEnabled() ||\n+        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS) {\n+      return;\n+    }\n+    LoginContext login \u003d getLogin();\n+    if (login \u003d\u003d null || keytabFile \u003d\u003d null) {\n+      throw new IOException(\"loginUserFromKeytab must be done first\");\n+    }\n+\n+    try {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Initiating logout for \" + getUserName());\n+      }\n+      synchronized (UserGroupInformation.class) {\n+        login.logout();\n+      }\n+    } catch (LoginException le) {\n+      throw new IOException(\"Logout failure for \" + user + \" from keytab \" +\n+          keytabFile, le);\n+    }\n+\n+    LOG.info(\"Logout successful for user \" + keytabPrincipal\n+        + \" using keytab file \" + keytabFile);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void logoutUserFromKeytab() throws IOException {\n    if (!isSecurityEnabled() ||\n        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS) {\n      return;\n    }\n    LoginContext login \u003d getLogin();\n    if (login \u003d\u003d null || keytabFile \u003d\u003d null) {\n      throw new IOException(\"loginUserFromKeytab must be done first\");\n    }\n\n    try {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Initiating logout for \" + getUserName());\n      }\n      synchronized (UserGroupInformation.class) {\n        login.logout();\n      }\n    } catch (LoginException le) {\n      throw new IOException(\"Logout failure for \" + user + \" from keytab \" +\n          keytabFile, le);\n    }\n\n    LOG.info(\"Logout successful for user \" + keytabPrincipal\n        + \" using keytab file \" + keytabFile);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java"
    }
  }
}