{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBHelperClient.java",
  "functionName": "convert",
  "functionId": "convert___entry-SnapshotDiffReportListingEntryProto",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
  "functionStartLine": 1615,
  "functionEndLine": 1628,
  "numCommitsSeen": 80,
  "timeTaken": 2436,
  "changeHistory": [
    "b1c7654ee40b372ed777525a42981c7cf55b5c72"
  ],
  "changeHistoryShort": {
    "b1c7654ee40b372ed777525a42981c7cf55b5c72": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b1c7654ee40b372ed777525a42981c7cf55b5c72": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12594. snapshotDiff fails if the report exceeds the RPC response limit. Contributed by Shashikant Banerjee\n",
      "commitDate": "30/11/17 12:18 PM",
      "commitName": "b1c7654ee40b372ed777525a42981c7cf55b5c72",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "diff": "@@ -0,0 +1,14 @@\n+  public static DiffReportListingEntry convert(\n+      SnapshotDiffReportListingEntryProto entry) {\n+    if (entry \u003d\u003d null) {\n+      return null;\n+    }\n+    long dirId \u003d entry.getDirId();\n+    long fileId \u003d entry.getFileId();\n+    boolean isReference \u003d entry.getIsReference();\n+    byte[] sourceName \u003d entry.getFullpath().toByteArray();\n+    byte[] targetName \u003d\n+        entry.hasTargetPath() ? entry.getTargetPath().toByteArray() : null;\n+    return new DiffReportListingEntry(dirId, fileId, sourceName, isReference,\n+        targetName);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static DiffReportListingEntry convert(\n      SnapshotDiffReportListingEntryProto entry) {\n    if (entry \u003d\u003d null) {\n      return null;\n    }\n    long dirId \u003d entry.getDirId();\n    long fileId \u003d entry.getFileId();\n    boolean isReference \u003d entry.getIsReference();\n    byte[] sourceName \u003d entry.getFullpath().toByteArray();\n    byte[] targetName \u003d\n        entry.hasTargetPath() ? entry.getTargetPath().toByteArray() : null;\n    return new DiffReportListingEntry(dirId, fileId, sourceName, isReference,\n        targetName);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java"
    }
  }
}