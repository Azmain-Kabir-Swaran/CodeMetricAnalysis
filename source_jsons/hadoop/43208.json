{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceClient.java",
  "functionName": "updateLifetime",
  "functionId": "updateLifetime___serviceName-String__lifetime-long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
  "functionStartLine": 1496,
  "functionEndLine": 1521,
  "numCommitsSeen": 56,
  "timeTaken": 4495,
  "changeHistory": [
    "d553799030a5a64df328319aceb35734d0b2de20",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64",
    "1888318c89776f0bf354c1b13e3ee169e14ff638"
  ],
  "changeHistoryShort": {
    "d553799030a5a64df328319aceb35734d0b2de20": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": "Ybodychange",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d553799030a5a64df328319aceb35734d0b2de20": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7984. Improved YARN service stop/destroy and clean up.\n           Contributed by Billie Rinaldi\n",
      "commitDate": "10/04/18 2:40 PM",
      "commitName": "d553799030a5a64df328319aceb35734d0b2de20",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "26/03/18 3:46 PM",
      "commitNameOld": "27d60a16342fd39973d43b61008f54a8815a6237",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 14.95,
      "commitsBetweenForRepo": 77,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,26 @@\n   public String updateLifetime(String serviceName, long lifetime)\n       throws YarnException, IOException {\n     ApplicationId currentAppId \u003d getAppId(serviceName);\n+    if (currentAppId \u003d\u003d null) {\n+      throw new YarnException(\"Application ID not found for \" + serviceName);\n+    }\n     ApplicationReport report \u003d yarnClient.getApplicationReport(currentAppId);\n     if (report \u003d\u003d null) {\n       throw new YarnException(\"Service not found for \" + serviceName);\n     }\n     ApplicationId appId \u003d report.getApplicationId();\n     LOG.info(\"Updating lifetime of an service: serviceName \u003d \" + serviceName\n         + \", appId \u003d \" + appId + \", lifetime \u003d \" + lifetime);\n     Map\u003cApplicationTimeoutType, String\u003e map \u003d new HashMap\u003c\u003e();\n     String newTimeout \u003d\n         Times.formatISO8601(System.currentTimeMillis() + lifetime * 1000);\n     map.put(ApplicationTimeoutType.LIFETIME, newTimeout);\n     UpdateApplicationTimeoutsRequest request \u003d\n         UpdateApplicationTimeoutsRequest.newInstance(appId, map);\n     yarnClient.updateApplicationTimeouts(request);\n     LOG.info(\n         \"Successfully updated lifetime for an service: serviceName \u003d \" + serviceName\n             + \", appId \u003d \" + appId + \". New expiry time in ISO8601 format is \"\n             + newTimeout);\n     return newTimeout;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String updateLifetime(String serviceName, long lifetime)\n      throws YarnException, IOException {\n    ApplicationId currentAppId \u003d getAppId(serviceName);\n    if (currentAppId \u003d\u003d null) {\n      throw new YarnException(\"Application ID not found for \" + serviceName);\n    }\n    ApplicationReport report \u003d yarnClient.getApplicationReport(currentAppId);\n    if (report \u003d\u003d null) {\n      throw new YarnException(\"Service not found for \" + serviceName);\n    }\n    ApplicationId appId \u003d report.getApplicationId();\n    LOG.info(\"Updating lifetime of an service: serviceName \u003d \" + serviceName\n        + \", appId \u003d \" + appId + \", lifetime \u003d \" + lifetime);\n    Map\u003cApplicationTimeoutType, String\u003e map \u003d new HashMap\u003c\u003e();\n    String newTimeout \u003d\n        Times.formatISO8601(System.currentTimeMillis() + lifetime * 1000);\n    map.put(ApplicationTimeoutType.LIFETIME, newTimeout);\n    UpdateApplicationTimeoutsRequest request \u003d\n        UpdateApplicationTimeoutsRequest.newInstance(appId, map);\n    yarnClient.updateApplicationTimeouts(request);\n    LOG.info(\n        \"Successfully updated lifetime for an service: serviceName \u003d \" + serviceName\n            + \", appId \u003d \" + appId + \". New expiry time in ISO8601 format is \"\n            + newTimeout);\n    return newTimeout;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,23 @@\n-  public String updateLifetime(String appName, long lifetime)\n+  public String updateLifetime(String serviceName, long lifetime)\n       throws YarnException, IOException {\n-    getAppId(appName);\n-    ApplicationId currentAppId \u003d cachedAppIds.get(appName);\n+    ApplicationId currentAppId \u003d getAppId(serviceName);\n     ApplicationReport report \u003d yarnClient.getApplicationReport(currentAppId);\n     if (report \u003d\u003d null) {\n-      throw new YarnException(\"Application not found for \" + appName);\n+      throw new YarnException(\"Service not found for \" + serviceName);\n     }\n     ApplicationId appId \u003d report.getApplicationId();\n-    LOG.info(\"Updating lifetime of an application: appName \u003d \" + appName\n+    LOG.info(\"Updating lifetime of an service: serviceName \u003d \" + serviceName\n         + \", appId \u003d \" + appId + \", lifetime \u003d \" + lifetime);\n     Map\u003cApplicationTimeoutType, String\u003e map \u003d new HashMap\u003c\u003e();\n     String newTimeout \u003d\n         Times.formatISO8601(System.currentTimeMillis() + lifetime * 1000);\n     map.put(ApplicationTimeoutType.LIFETIME, newTimeout);\n     UpdateApplicationTimeoutsRequest request \u003d\n         UpdateApplicationTimeoutsRequest.newInstance(appId, map);\n     yarnClient.updateApplicationTimeouts(request);\n     LOG.info(\n-        \"Successfully updated lifetime for an application: appName \u003d \" + appName\n+        \"Successfully updated lifetime for an service: serviceName \u003d \" + serviceName\n             + \", appId \u003d \" + appId + \". New expiry time in ISO8601 format is \"\n             + newTimeout);\n     return newTimeout;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String updateLifetime(String serviceName, long lifetime)\n      throws YarnException, IOException {\n    ApplicationId currentAppId \u003d getAppId(serviceName);\n    ApplicationReport report \u003d yarnClient.getApplicationReport(currentAppId);\n    if (report \u003d\u003d null) {\n      throw new YarnException(\"Service not found for \" + serviceName);\n    }\n    ApplicationId appId \u003d report.getApplicationId();\n    LOG.info(\"Updating lifetime of an service: serviceName \u003d \" + serviceName\n        + \", appId \u003d \" + appId + \", lifetime \u003d \" + lifetime);\n    Map\u003cApplicationTimeoutType, String\u003e map \u003d new HashMap\u003c\u003e();\n    String newTimeout \u003d\n        Times.formatISO8601(System.currentTimeMillis() + lifetime * 1000);\n    map.put(ApplicationTimeoutType.LIFETIME, newTimeout);\n    UpdateApplicationTimeoutsRequest request \u003d\n        UpdateApplicationTimeoutsRequest.newInstance(appId, map);\n    yarnClient.updateApplicationTimeouts(request);\n    LOG.info(\n        \"Successfully updated lifetime for an service: serviceName \u003d \" + serviceName\n            + \", appId \u003d \" + appId + \". New expiry time in ISO8601 format is \"\n            + newTimeout);\n    return newTimeout;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,23 @@\n-  public String updateLifetime(String appName, long lifetime)\n+  public String updateLifetime(String serviceName, long lifetime)\n       throws YarnException, IOException {\n-    getAppId(appName);\n-    ApplicationId currentAppId \u003d cachedAppIds.get(appName);\n+    ApplicationId currentAppId \u003d getAppId(serviceName);\n     ApplicationReport report \u003d yarnClient.getApplicationReport(currentAppId);\n     if (report \u003d\u003d null) {\n-      throw new YarnException(\"Application not found for \" + appName);\n+      throw new YarnException(\"Service not found for \" + serviceName);\n     }\n     ApplicationId appId \u003d report.getApplicationId();\n-    LOG.info(\"Updating lifetime of an application: appName \u003d \" + appName\n+    LOG.info(\"Updating lifetime of an service: serviceName \u003d \" + serviceName\n         + \", appId \u003d \" + appId + \", lifetime \u003d \" + lifetime);\n     Map\u003cApplicationTimeoutType, String\u003e map \u003d new HashMap\u003c\u003e();\n     String newTimeout \u003d\n         Times.formatISO8601(System.currentTimeMillis() + lifetime * 1000);\n     map.put(ApplicationTimeoutType.LIFETIME, newTimeout);\n     UpdateApplicationTimeoutsRequest request \u003d\n         UpdateApplicationTimeoutsRequest.newInstance(appId, map);\n     yarnClient.updateApplicationTimeouts(request);\n     LOG.info(\n-        \"Successfully updated lifetime for an application: appName \u003d \" + appName\n+        \"Successfully updated lifetime for an service: serviceName \u003d \" + serviceName\n             + \", appId \u003d \" + appId + \". New expiry time in ISO8601 format is \"\n             + newTimeout);\n     return newTimeout;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String updateLifetime(String serviceName, long lifetime)\n      throws YarnException, IOException {\n    ApplicationId currentAppId \u003d getAppId(serviceName);\n    ApplicationReport report \u003d yarnClient.getApplicationReport(currentAppId);\n    if (report \u003d\u003d null) {\n      throw new YarnException(\"Service not found for \" + serviceName);\n    }\n    ApplicationId appId \u003d report.getApplicationId();\n    LOG.info(\"Updating lifetime of an service: serviceName \u003d \" + serviceName\n        + \", appId \u003d \" + appId + \", lifetime \u003d \" + lifetime);\n    Map\u003cApplicationTimeoutType, String\u003e map \u003d new HashMap\u003c\u003e();\n    String newTimeout \u003d\n        Times.formatISO8601(System.currentTimeMillis() + lifetime * 1000);\n    map.put(ApplicationTimeoutType.LIFETIME, newTimeout);\n    UpdateApplicationTimeoutsRequest request \u003d\n        UpdateApplicationTimeoutsRequest.newInstance(appId, map);\n    yarnClient.updateApplicationTimeouts(request);\n    LOG.info(\n        \"Successfully updated lifetime for an service: serviceName \u003d \" + serviceName\n            + \", appId \u003d \" + appId + \". New expiry time in ISO8601 format is \"\n            + newTimeout);\n    return newTimeout;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,23 @@\n-  public String updateLifetime(String appName, long lifetime)\n+  public String updateLifetime(String serviceName, long lifetime)\n       throws YarnException, IOException {\n-    getAppId(appName);\n-    ApplicationId currentAppId \u003d cachedAppIds.get(appName);\n+    ApplicationId currentAppId \u003d getAppId(serviceName);\n     ApplicationReport report \u003d yarnClient.getApplicationReport(currentAppId);\n     if (report \u003d\u003d null) {\n-      throw new YarnException(\"Application not found for \" + appName);\n+      throw new YarnException(\"Service not found for \" + serviceName);\n     }\n     ApplicationId appId \u003d report.getApplicationId();\n-    LOG.info(\"Updating lifetime of an application: appName \u003d \" + appName\n+    LOG.info(\"Updating lifetime of an service: serviceName \u003d \" + serviceName\n         + \", appId \u003d \" + appId + \", lifetime \u003d \" + lifetime);\n     Map\u003cApplicationTimeoutType, String\u003e map \u003d new HashMap\u003c\u003e();\n     String newTimeout \u003d\n         Times.formatISO8601(System.currentTimeMillis() + lifetime * 1000);\n     map.put(ApplicationTimeoutType.LIFETIME, newTimeout);\n     UpdateApplicationTimeoutsRequest request \u003d\n         UpdateApplicationTimeoutsRequest.newInstance(appId, map);\n     yarnClient.updateApplicationTimeouts(request);\n     LOG.info(\n-        \"Successfully updated lifetime for an application: appName \u003d \" + appName\n+        \"Successfully updated lifetime for an service: serviceName \u003d \" + serviceName\n             + \", appId \u003d \" + appId + \". New expiry time in ISO8601 format is \"\n             + newTimeout);\n     return newTimeout;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String updateLifetime(String serviceName, long lifetime)\n      throws YarnException, IOException {\n    ApplicationId currentAppId \u003d getAppId(serviceName);\n    ApplicationReport report \u003d yarnClient.getApplicationReport(currentAppId);\n    if (report \u003d\u003d null) {\n      throw new YarnException(\"Service not found for \" + serviceName);\n    }\n    ApplicationId appId \u003d report.getApplicationId();\n    LOG.info(\"Updating lifetime of an service: serviceName \u003d \" + serviceName\n        + \", appId \u003d \" + appId + \", lifetime \u003d \" + lifetime);\n    Map\u003cApplicationTimeoutType, String\u003e map \u003d new HashMap\u003c\u003e();\n    String newTimeout \u003d\n        Times.formatISO8601(System.currentTimeMillis() + lifetime * 1000);\n    map.put(ApplicationTimeoutType.LIFETIME, newTimeout);\n    UpdateApplicationTimeoutsRequest request \u003d\n        UpdateApplicationTimeoutsRequest.newInstance(appId, map);\n    yarnClient.updateApplicationTimeouts(request);\n    LOG.info(\n        \"Successfully updated lifetime for an service: serviceName \u003d \" + serviceName\n            + \", appId \u003d \" + appId + \". New expiry time in ISO8601 format is \"\n            + newTimeout);\n    return newTimeout;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldValue": "[appName-String, lifetime-long]",
            "newValue": "[serviceName-String, lifetime-long]"
          }
        }
      ]
    },
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7050. Post cleanup after YARN-6903, removal of org.apache.slider package. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "2191f5b533c6b4763f5d443d21127f1f8552ce64",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "79bf5c084d4a063f1a933cae498af23edfd46792",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public String updateLifetime(String appName, long lifetime)\n       throws YarnException, IOException {\n-    getAppIdFromPersistedApp(appName);\n+    getAppId(appName);\n     ApplicationId currentAppId \u003d cachedAppIds.get(appName);\n     ApplicationReport report \u003d yarnClient.getApplicationReport(currentAppId);\n     if (report \u003d\u003d null) {\n       throw new YarnException(\"Application not found for \" + appName);\n     }\n     ApplicationId appId \u003d report.getApplicationId();\n     LOG.info(\"Updating lifetime of an application: appName \u003d \" + appName\n         + \", appId \u003d \" + appId + \", lifetime \u003d \" + lifetime);\n     Map\u003cApplicationTimeoutType, String\u003e map \u003d new HashMap\u003c\u003e();\n     String newTimeout \u003d\n         Times.formatISO8601(System.currentTimeMillis() + lifetime * 1000);\n     map.put(ApplicationTimeoutType.LIFETIME, newTimeout);\n     UpdateApplicationTimeoutsRequest request \u003d\n         UpdateApplicationTimeoutsRequest.newInstance(appId, map);\n     yarnClient.updateApplicationTimeouts(request);\n     LOG.info(\n         \"Successfully updated lifetime for an application: appName \u003d \" + appName\n             + \", appId \u003d \" + appId + \". New expiry time in ISO8601 format is \"\n             + newTimeout);\n     return newTimeout;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String updateLifetime(String appName, long lifetime)\n      throws YarnException, IOException {\n    getAppId(appName);\n    ApplicationId currentAppId \u003d cachedAppIds.get(appName);\n    ApplicationReport report \u003d yarnClient.getApplicationReport(currentAppId);\n    if (report \u003d\u003d null) {\n      throw new YarnException(\"Application not found for \" + appName);\n    }\n    ApplicationId appId \u003d report.getApplicationId();\n    LOG.info(\"Updating lifetime of an application: appName \u003d \" + appName\n        + \", appId \u003d \" + appId + \", lifetime \u003d \" + lifetime);\n    Map\u003cApplicationTimeoutType, String\u003e map \u003d new HashMap\u003c\u003e();\n    String newTimeout \u003d\n        Times.formatISO8601(System.currentTimeMillis() + lifetime * 1000);\n    map.put(ApplicationTimeoutType.LIFETIME, newTimeout);\n    UpdateApplicationTimeoutsRequest request \u003d\n        UpdateApplicationTimeoutsRequest.newInstance(appId, map);\n    yarnClient.updateApplicationTimeouts(request);\n    LOG.info(\n        \"Successfully updated lifetime for an application: appName \u003d \" + appName\n            + \", appId \u003d \" + appId + \". New expiry time in ISO8601 format is \"\n            + newTimeout);\n    return newTimeout;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,24 @@\n+  public String updateLifetime(String appName, long lifetime)\n+      throws YarnException, IOException {\n+    getAppIdFromPersistedApp(appName);\n+    ApplicationId currentAppId \u003d cachedAppIds.get(appName);\n+    ApplicationReport report \u003d yarnClient.getApplicationReport(currentAppId);\n+    if (report \u003d\u003d null) {\n+      throw new YarnException(\"Application not found for \" + appName);\n+    }\n+    ApplicationId appId \u003d report.getApplicationId();\n+    LOG.info(\"Updating lifetime of an application: appName \u003d \" + appName\n+        + \", appId \u003d \" + appId + \", lifetime \u003d \" + lifetime);\n+    Map\u003cApplicationTimeoutType, String\u003e map \u003d new HashMap\u003c\u003e();\n+    String newTimeout \u003d\n+        Times.formatISO8601(System.currentTimeMillis() + lifetime * 1000);\n+    map.put(ApplicationTimeoutType.LIFETIME, newTimeout);\n+    UpdateApplicationTimeoutsRequest request \u003d\n+        UpdateApplicationTimeoutsRequest.newInstance(appId, map);\n+    yarnClient.updateApplicationTimeouts(request);\n+    LOG.info(\n+        \"Successfully updated lifetime for an application: appName \u003d \" + appName\n+            + \", appId \u003d \" + appId + \". New expiry time in ISO8601 format is \"\n+            + newTimeout);\n+    return newTimeout;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String updateLifetime(String appName, long lifetime)\n      throws YarnException, IOException {\n    getAppIdFromPersistedApp(appName);\n    ApplicationId currentAppId \u003d cachedAppIds.get(appName);\n    ApplicationReport report \u003d yarnClient.getApplicationReport(currentAppId);\n    if (report \u003d\u003d null) {\n      throw new YarnException(\"Application not found for \" + appName);\n    }\n    ApplicationId appId \u003d report.getApplicationId();\n    LOG.info(\"Updating lifetime of an application: appName \u003d \" + appName\n        + \", appId \u003d \" + appId + \", lifetime \u003d \" + lifetime);\n    Map\u003cApplicationTimeoutType, String\u003e map \u003d new HashMap\u003c\u003e();\n    String newTimeout \u003d\n        Times.formatISO8601(System.currentTimeMillis() + lifetime * 1000);\n    map.put(ApplicationTimeoutType.LIFETIME, newTimeout);\n    UpdateApplicationTimeoutsRequest request \u003d\n        UpdateApplicationTimeoutsRequest.newInstance(appId, map);\n    yarnClient.updateApplicationTimeouts(request);\n    LOG.info(\n        \"Successfully updated lifetime for an application: appName \u003d \" + appName\n            + \", appId \u003d \" + appId + \". New expiry time in ISO8601 format is \"\n            + newTimeout);\n    return newTimeout;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
    }
  }
}