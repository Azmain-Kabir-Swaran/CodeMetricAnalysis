{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InconsistentAmazonS3Client.java",
  "functionName": "registerDeleteObject",
  "functionId": "registerDeleteObject___key-String__bucket-String",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/InconsistentAmazonS3Client.java",
  "functionStartLine": 472,
  "functionEndLine": 493,
  "numCommitsSeen": 7,
  "timeTaken": 2170,
  "changeHistory": [
    "511df1e837b19ccb9271520589452d82d50ac69d",
    "8110d6a0d59e7dc2ddb25fa424fab188c5e9ce35",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
    "621b43e254afaff708cd6fc4698b29628f6abc33"
  ],
  "changeHistoryShort": {
    "511df1e837b19ccb9271520589452d82d50ac69d": "Ybodychange",
    "8110d6a0d59e7dc2ddb25fa424fab188c5e9ce35": "Ybodychange",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": "Ybodychange",
    "621b43e254afaff708cd6fc4698b29628f6abc33": "Yintroduced"
  },
  "changeHistoryDetails": {
    "511df1e837b19ccb9271520589452d82d50ac69d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16430. S3AFilesystem.delete to incrementally update s3guard with deletions\n\nContributed by Steve Loughran.\n\nThis overlaps the scanning for directory entries with batched calls to S3 DELETE and updates of the S3Guard tables.\nIt also uses S3Guard to list the files to delete, so find newly created files even when S3 listings are not use consistent.\n\nFor path which the client considers S3Guard to be authoritative, we also do a recursive LIST of the store and delete files; this is to find unindexed files and do guarantee that the delete(path, true) call really does delete everything underneath.\n\nChange-Id: Ice2f6e940c506e0b3a78fa534a99721b1698708e\n",
      "commitDate": "05/09/19 6:25 AM",
      "commitName": "511df1e837b19ccb9271520589452d82d50ac69d",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "11/02/19 1:07 PM",
      "commitNameOld": "6c999fe4b0181720c8e55be8388bd592196c8c87",
      "commitAuthorOld": "Masatake Iwasaki",
      "daysBetweenCommits": 205.68,
      "commitsBetweenForRepo": 1617,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,22 @@\n   private void registerDeleteObject(String key, String bucket) {\n     if (policy.shouldDelay(key)) {\n-      // Record summary so we can add it back for some time post-deletion\n-      ListObjectsRequest request \u003d new ListObjectsRequest()\n-              .withBucketName(bucket)\n-              .withPrefix(key);\n-      S3ObjectSummary summary \u003d innerlistObjects(request).getObjectSummaries()\n-          .stream()\n-          .filter(result -\u003e result.getKey().equals(key))\n-          .findFirst()\n-          .orElse(null);\n-      delayedDeletes.put(key, new Delete(System.currentTimeMillis(), summary));\n+      Delete delete \u003d delayedDeletes.get(key);\n+      if (delete !\u003d null \u0026\u0026 isKeyDelayed(delete.time(), key)) {\n+        // there is already an entry in the delayed delete list,\n+        // so ignore the operation\n+        LOG.debug(\"Ignoring delete of already deleted object\");\n+      } else {\n+        // Record summary so we can add it back for some time post-deletion\n+        ListObjectsRequest request \u003d new ListObjectsRequest()\n+            .withBucketName(bucket)\n+            .withPrefix(key);\n+        S3ObjectSummary summary \u003d innerlistObjects(request).getObjectSummaries()\n+            .stream()\n+            .filter(result -\u003e result.getKey().equals(key))\n+            .findFirst()\n+            .orElse(null);\n+        delayedDeletes.put(key, new Delete(System.currentTimeMillis(),\n+            summary));\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void registerDeleteObject(String key, String bucket) {\n    if (policy.shouldDelay(key)) {\n      Delete delete \u003d delayedDeletes.get(key);\n      if (delete !\u003d null \u0026\u0026 isKeyDelayed(delete.time(), key)) {\n        // there is already an entry in the delayed delete list,\n        // so ignore the operation\n        LOG.debug(\"Ignoring delete of already deleted object\");\n      } else {\n        // Record summary so we can add it back for some time post-deletion\n        ListObjectsRequest request \u003d new ListObjectsRequest()\n            .withBucketName(bucket)\n            .withPrefix(key);\n        S3ObjectSummary summary \u003d innerlistObjects(request).getObjectSummaries()\n            .stream()\n            .filter(result -\u003e result.getKey().equals(key))\n            .findFirst()\n            .orElse(null);\n        delayedDeletes.put(key, new Delete(System.currentTimeMillis(),\n            summary));\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/InconsistentAmazonS3Client.java",
      "extendedDetails": {}
    },
    "8110d6a0d59e7dc2ddb25fa424fab188c5e9ce35": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13761. S3Guard: implement retries for DDB failures and throttling; translate exceptions.\nContributed by Aaron Fabbri.\n",
      "commitDate": "05/03/18 6:06 AM",
      "commitName": "8110d6a0d59e7dc2ddb25fa424fab188c5e9ce35",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "22/11/17 7:28 AM",
      "commitNameOld": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 102.94,
      "commitsBetweenForRepo": 600,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private void registerDeleteObject(String key, String bucket) {\n-    if (shouldDelay(key)) {\n+    if (policy.shouldDelay(key)) {\n       // Record summary so we can add it back for some time post-deletion\n       ListObjectsRequest request \u003d new ListObjectsRequest()\n               .withBucketName(bucket)\n               .withPrefix(key);\n       S3ObjectSummary summary \u003d innerlistObjects(request).getObjectSummaries()\n           .stream()\n           .filter(result -\u003e result.getKey().equals(key))\n           .findFirst()\n           .orElse(null);\n       delayedDeletes.put(key, new Delete(System.currentTimeMillis(), summary));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void registerDeleteObject(String key, String bucket) {\n    if (policy.shouldDelay(key)) {\n      // Record summary so we can add it back for some time post-deletion\n      ListObjectsRequest request \u003d new ListObjectsRequest()\n              .withBucketName(bucket)\n              .withPrefix(key);\n      S3ObjectSummary summary \u003d innerlistObjects(request).getObjectSummaries()\n          .stream()\n          .filter(result -\u003e result.getKey().equals(key))\n          .findFirst()\n          .orElse(null);\n      delayedDeletes.put(key, new Delete(System.currentTimeMillis(), summary));\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/InconsistentAmazonS3Client.java",
      "extendedDetails": {}
    },
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
      "commitDate": "22/11/17 7:28 AM",
      "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "08/09/17 4:07 AM",
      "commitNameOld": "5bbca80428ffbe776650652de86a3bba885edb31",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 75.18,
      "commitsBetweenForRepo": 663,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private void registerDeleteObject(String key, String bucket) {\n     if (shouldDelay(key)) {\n       // Record summary so we can add it back for some time post-deletion\n-      S3ObjectSummary summary \u003d null;\n-      ObjectListing list \u003d listObjects(bucket, key);\n-      for (S3ObjectSummary result : list.getObjectSummaries()) {\n-        if (result.getKey().equals(key)) {\n-          summary \u003d result;\n-          break;\n-        }\n-      }\n+      ListObjectsRequest request \u003d new ListObjectsRequest()\n+              .withBucketName(bucket)\n+              .withPrefix(key);\n+      S3ObjectSummary summary \u003d innerlistObjects(request).getObjectSummaries()\n+          .stream()\n+          .filter(result -\u003e result.getKey().equals(key))\n+          .findFirst()\n+          .orElse(null);\n       delayedDeletes.put(key, new Delete(System.currentTimeMillis(), summary));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void registerDeleteObject(String key, String bucket) {\n    if (shouldDelay(key)) {\n      // Record summary so we can add it back for some time post-deletion\n      ListObjectsRequest request \u003d new ListObjectsRequest()\n              .withBucketName(bucket)\n              .withPrefix(key);\n      S3ObjectSummary summary \u003d innerlistObjects(request).getObjectSummaries()\n          .stream()\n          .filter(result -\u003e result.getKey().equals(key))\n          .findFirst()\n          .orElse(null);\n      delayedDeletes.put(key, new Delete(System.currentTimeMillis(), summary));\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/InconsistentAmazonS3Client.java",
      "extendedDetails": {}
    },
    "621b43e254afaff708cd6fc4698b29628f6abc33": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13345 HS3Guard: Improved Consistency for S3A.\nContributed by: Chris Nauroth, Aaron Fabbri, Mingliang Liu, Lei (Eddy) Xu,\nSean Mackrory, Steve Loughran and others.\n",
      "commitDate": "01/09/17 6:13 AM",
      "commitName": "621b43e254afaff708cd6fc4698b29628f6abc33",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,14 @@\n+  private void registerDeleteObject(String key, String bucket) {\n+    if (shouldDelay(key)) {\n+      // Record summary so we can add it back for some time post-deletion\n+      S3ObjectSummary summary \u003d null;\n+      ObjectListing list \u003d listObjects(bucket, key);\n+      for (S3ObjectSummary result : list.getObjectSummaries()) {\n+        if (result.getKey().equals(key)) {\n+          summary \u003d result;\n+          break;\n+        }\n+      }\n+      delayedDeletes.put(key, new Delete(System.currentTimeMillis(), summary));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void registerDeleteObject(String key, String bucket) {\n    if (shouldDelay(key)) {\n      // Record summary so we can add it back for some time post-deletion\n      S3ObjectSummary summary \u003d null;\n      ObjectListing list \u003d listObjects(bucket, key);\n      for (S3ObjectSummary result : list.getObjectSummaries()) {\n        if (result.getKey().equals(key)) {\n          summary \u003d result;\n          break;\n        }\n      }\n      delayedDeletes.put(key, new Delete(System.currentTimeMillis(), summary));\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/InconsistentAmazonS3Client.java"
    }
  }
}