{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PlacementConstraintsUtil.java",
  "functionName": "canSatisfyConstraints",
  "functionId": "canSatisfyConstraints___applicationId-ApplicationId__request-SchedulingRequest__schedulerNode-SchedulerNode__pcm-PlacementConstraintManager__atm-AllocationTagsManager",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/PlacementConstraintsUtil.java",
  "functionStartLine": 368,
  "functionEndLine": 374,
  "numCommitsSeen": 24,
  "timeTaken": 4968,
  "changeHistory": [
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
    "50723889cc29e8dadfa6ab6afbb90ac798d66878",
    "8bf7c444368f48f63f8011cf155f551c6b51ee21",
    "38af23796971193fa529c3d08ffde8fcd6e607b6"
  ],
  "changeHistoryShort": {
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7": "Ybodychange",
    "50723889cc29e8dadfa6ab6afbb90ac798d66878": "Ybodychange",
    "8bf7c444368f48f63f8011cf155f551c6b51ee21": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "38af23796971193fa529c3d08ffde8fcd6e607b6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9440. Improve diagnostics for scheduler and app activities. Contributed by Tao Yang.\n",
      "commitDate": "06/05/19 5:00 AM",
      "commitName": "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "18/03/19 10:57 AM",
      "commitNameOld": "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 48.75,
      "commitsBetweenForRepo": 303,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,7 @@\n   public static boolean canSatisfyConstraints(ApplicationId applicationId,\n       SchedulingRequest request, SchedulerNode schedulerNode,\n       PlacementConstraintManager pcm, AllocationTagsManager atm)\n       throws InvalidAllocationTagsQueryException {\n-    Set\u003cString\u003e sourceTags \u003d null;\n-    PlacementConstraint pc \u003d null;\n-    if (request !\u003d null) {\n-      sourceTags \u003d request.getAllocationTags();\n-      pc \u003d request.getPlacementConstraint();\n-    }\n-    return canSatisfyConstraints(applicationId,\n-        pcm.getMultilevelConstraint(applicationId, sourceTags, pc),\n-        schedulerNode, atm);\n+    return canSatisfyConstraints(applicationId, request, schedulerNode, pcm,\n+        atm, Optional.empty());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean canSatisfyConstraints(ApplicationId applicationId,\n      SchedulingRequest request, SchedulerNode schedulerNode,\n      PlacementConstraintManager pcm, AllocationTagsManager atm)\n      throws InvalidAllocationTagsQueryException {\n    return canSatisfyConstraints(applicationId, request, schedulerNode, pcm,\n        atm, Optional.empty());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/PlacementConstraintsUtil.java",
      "extendedDetails": {}
    },
    "50723889cc29e8dadfa6ab6afbb90ac798d66878": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7778. Merging of placement constraints defined at different levels. Contributed by Weiwei Yang.\n",
      "commitDate": "02/02/18 2:46 PM",
      "commitName": "50723889cc29e8dadfa6ab6afbb90ac798d66878",
      "commitAuthor": "Konstantinos Karanasos",
      "commitDateOld": "31/01/18 1:51 AM",
      "commitNameOld": "d4813447831770446399f2d6501860141551ff33",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 2.54,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,14 @@\n   public static boolean canSatisfyConstraints(ApplicationId applicationId,\n       SchedulingRequest request, SchedulerNode schedulerNode,\n       PlacementConstraintManager pcm, AllocationTagsManager atm)\n       throws InvalidAllocationTagsQueryException {\n-    // TODO do proper merge on different level of constraints, see YARN-7778.\n-\n-    // Request level constraint\n-    PlacementConstraint constraint \u003d request.getPlacementConstraint();\n-    if (constraint \u003d\u003d null) {\n-      // Application level constraint\n-      constraint \u003d pcm.getConstraint(applicationId,\n-          request.getAllocationTags());\n-      if (constraint \u003d\u003d null) {\n-        // Global level constraint\n-        constraint \u003d pcm.getGlobalConstraint(request.getAllocationTags());\n-        if (constraint \u003d\u003d null) {\n-          return true;\n-        }\n-      }\n+    Set\u003cString\u003e sourceTags \u003d null;\n+    PlacementConstraint pc \u003d null;\n+    if (request !\u003d null) {\n+      sourceTags \u003d request.getAllocationTags();\n+      pc \u003d request.getPlacementConstraint();\n     }\n-    return canSatisfyConstraints(applicationId, constraint, schedulerNode, atm);\n+    return canSatisfyConstraints(applicationId,\n+        pcm.getMultilevelConstraint(applicationId, sourceTags, pc),\n+        schedulerNode, atm);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean canSatisfyConstraints(ApplicationId applicationId,\n      SchedulingRequest request, SchedulerNode schedulerNode,\n      PlacementConstraintManager pcm, AllocationTagsManager atm)\n      throws InvalidAllocationTagsQueryException {\n    Set\u003cString\u003e sourceTags \u003d null;\n    PlacementConstraint pc \u003d null;\n    if (request !\u003d null) {\n      sourceTags \u003d request.getAllocationTags();\n      pc \u003d request.getPlacementConstraint();\n    }\n    return canSatisfyConstraints(applicationId,\n        pcm.getMultilevelConstraint(applicationId, sourceTags, pc),\n        schedulerNode, atm);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/PlacementConstraintsUtil.java",
      "extendedDetails": {}
    },
    "8bf7c444368f48f63f8011cf155f551c6b51ee21": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7763. Allow Constraints specified in the SchedulingRequest to override application level constraints. (Weiwei Yang via asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "8bf7c444368f48f63f8011cf155f551c6b51ee21",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-7763. Allow Constraints specified in the SchedulingRequest to override application level constraints. (Weiwei Yang via asuresh)\n",
          "commitDate": "31/01/18 1:30 AM",
          "commitName": "8bf7c444368f48f63f8011cf155f551c6b51ee21",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "31/01/18 1:30 AM",
          "commitNameOld": "28fe7f331837b36e78fa34ed990993677dddeaee",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,22 @@\n-  public static boolean canSatisfySingleConstraint(ApplicationId applicationId,\n-      PlacementConstraint placementConstraint, SchedulerNode node,\n-      AllocationTagsManager tagsManager)\n+  public static boolean canSatisfyConstraints(ApplicationId applicationId,\n+      SchedulingRequest request, SchedulerNode schedulerNode,\n+      PlacementConstraintManager pcm, AllocationTagsManager atm)\n       throws InvalidAllocationTagsQueryException {\n-    if (placementConstraint \u003d\u003d null) {\n-      return true;\n-    }\n-    // Transform to SimpleConstraint\n-    SingleConstraintTransformer singleTransformer \u003d\n-        new SingleConstraintTransformer(placementConstraint);\n-    placementConstraint \u003d singleTransformer.transform();\n-    AbstractConstraint sConstraintExpr \u003d placementConstraint.getConstraintExpr();\n-    SingleConstraint single \u003d (SingleConstraint) sConstraintExpr;\n+    // TODO do proper merge on different level of constraints, see YARN-7778.\n \n-    return canSatisfySingleConstraint(applicationId, single, node, tagsManager);\n+    // Request level constraint\n+    PlacementConstraint constraint \u003d request.getPlacementConstraint();\n+    if (constraint \u003d\u003d null) {\n+      // Application level constraint\n+      constraint \u003d pcm.getConstraint(applicationId,\n+          request.getAllocationTags());\n+      if (constraint \u003d\u003d null) {\n+        // Global level constraint\n+        constraint \u003d pcm.getGlobalConstraint(request.getAllocationTags());\n+        if (constraint \u003d\u003d null) {\n+          return true;\n+        }\n+      }\n+    }\n+    return canSatisfyConstraints(applicationId, constraint, schedulerNode, atm);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static boolean canSatisfyConstraints(ApplicationId applicationId,\n      SchedulingRequest request, SchedulerNode schedulerNode,\n      PlacementConstraintManager pcm, AllocationTagsManager atm)\n      throws InvalidAllocationTagsQueryException {\n    // TODO do proper merge on different level of constraints, see YARN-7778.\n\n    // Request level constraint\n    PlacementConstraint constraint \u003d request.getPlacementConstraint();\n    if (constraint \u003d\u003d null) {\n      // Application level constraint\n      constraint \u003d pcm.getConstraint(applicationId,\n          request.getAllocationTags());\n      if (constraint \u003d\u003d null) {\n        // Global level constraint\n        constraint \u003d pcm.getGlobalConstraint(request.getAllocationTags());\n        if (constraint \u003d\u003d null) {\n          return true;\n        }\n      }\n    }\n    return canSatisfyConstraints(applicationId, constraint, schedulerNode, atm);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/PlacementConstraintsUtil.java",
          "extendedDetails": {
            "oldValue": "canSatisfySingleConstraint",
            "newValue": "canSatisfyConstraints"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7763. Allow Constraints specified in the SchedulingRequest to override application level constraints. (Weiwei Yang via asuresh)\n",
          "commitDate": "31/01/18 1:30 AM",
          "commitName": "8bf7c444368f48f63f8011cf155f551c6b51ee21",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "31/01/18 1:30 AM",
          "commitNameOld": "28fe7f331837b36e78fa34ed990993677dddeaee",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,22 @@\n-  public static boolean canSatisfySingleConstraint(ApplicationId applicationId,\n-      PlacementConstraint placementConstraint, SchedulerNode node,\n-      AllocationTagsManager tagsManager)\n+  public static boolean canSatisfyConstraints(ApplicationId applicationId,\n+      SchedulingRequest request, SchedulerNode schedulerNode,\n+      PlacementConstraintManager pcm, AllocationTagsManager atm)\n       throws InvalidAllocationTagsQueryException {\n-    if (placementConstraint \u003d\u003d null) {\n-      return true;\n-    }\n-    // Transform to SimpleConstraint\n-    SingleConstraintTransformer singleTransformer \u003d\n-        new SingleConstraintTransformer(placementConstraint);\n-    placementConstraint \u003d singleTransformer.transform();\n-    AbstractConstraint sConstraintExpr \u003d placementConstraint.getConstraintExpr();\n-    SingleConstraint single \u003d (SingleConstraint) sConstraintExpr;\n+    // TODO do proper merge on different level of constraints, see YARN-7778.\n \n-    return canSatisfySingleConstraint(applicationId, single, node, tagsManager);\n+    // Request level constraint\n+    PlacementConstraint constraint \u003d request.getPlacementConstraint();\n+    if (constraint \u003d\u003d null) {\n+      // Application level constraint\n+      constraint \u003d pcm.getConstraint(applicationId,\n+          request.getAllocationTags());\n+      if (constraint \u003d\u003d null) {\n+        // Global level constraint\n+        constraint \u003d pcm.getGlobalConstraint(request.getAllocationTags());\n+        if (constraint \u003d\u003d null) {\n+          return true;\n+        }\n+      }\n+    }\n+    return canSatisfyConstraints(applicationId, constraint, schedulerNode, atm);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static boolean canSatisfyConstraints(ApplicationId applicationId,\n      SchedulingRequest request, SchedulerNode schedulerNode,\n      PlacementConstraintManager pcm, AllocationTagsManager atm)\n      throws InvalidAllocationTagsQueryException {\n    // TODO do proper merge on different level of constraints, see YARN-7778.\n\n    // Request level constraint\n    PlacementConstraint constraint \u003d request.getPlacementConstraint();\n    if (constraint \u003d\u003d null) {\n      // Application level constraint\n      constraint \u003d pcm.getConstraint(applicationId,\n          request.getAllocationTags());\n      if (constraint \u003d\u003d null) {\n        // Global level constraint\n        constraint \u003d pcm.getGlobalConstraint(request.getAllocationTags());\n        if (constraint \u003d\u003d null) {\n          return true;\n        }\n      }\n    }\n    return canSatisfyConstraints(applicationId, constraint, schedulerNode, atm);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/PlacementConstraintsUtil.java",
          "extendedDetails": {
            "oldValue": "[applicationId-ApplicationId, placementConstraint-PlacementConstraint, node-SchedulerNode, tagsManager-AllocationTagsManager]",
            "newValue": "[applicationId-ApplicationId, request-SchedulingRequest, schedulerNode-SchedulerNode, pcm-PlacementConstraintManager, atm-AllocationTagsManager]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7763. Allow Constraints specified in the SchedulingRequest to override application level constraints. (Weiwei Yang via asuresh)\n",
          "commitDate": "31/01/18 1:30 AM",
          "commitName": "8bf7c444368f48f63f8011cf155f551c6b51ee21",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "31/01/18 1:30 AM",
          "commitNameOld": "28fe7f331837b36e78fa34ed990993677dddeaee",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,22 @@\n-  public static boolean canSatisfySingleConstraint(ApplicationId applicationId,\n-      PlacementConstraint placementConstraint, SchedulerNode node,\n-      AllocationTagsManager tagsManager)\n+  public static boolean canSatisfyConstraints(ApplicationId applicationId,\n+      SchedulingRequest request, SchedulerNode schedulerNode,\n+      PlacementConstraintManager pcm, AllocationTagsManager atm)\n       throws InvalidAllocationTagsQueryException {\n-    if (placementConstraint \u003d\u003d null) {\n-      return true;\n-    }\n-    // Transform to SimpleConstraint\n-    SingleConstraintTransformer singleTransformer \u003d\n-        new SingleConstraintTransformer(placementConstraint);\n-    placementConstraint \u003d singleTransformer.transform();\n-    AbstractConstraint sConstraintExpr \u003d placementConstraint.getConstraintExpr();\n-    SingleConstraint single \u003d (SingleConstraint) sConstraintExpr;\n+    // TODO do proper merge on different level of constraints, see YARN-7778.\n \n-    return canSatisfySingleConstraint(applicationId, single, node, tagsManager);\n+    // Request level constraint\n+    PlacementConstraint constraint \u003d request.getPlacementConstraint();\n+    if (constraint \u003d\u003d null) {\n+      // Application level constraint\n+      constraint \u003d pcm.getConstraint(applicationId,\n+          request.getAllocationTags());\n+      if (constraint \u003d\u003d null) {\n+        // Global level constraint\n+        constraint \u003d pcm.getGlobalConstraint(request.getAllocationTags());\n+        if (constraint \u003d\u003d null) {\n+          return true;\n+        }\n+      }\n+    }\n+    return canSatisfyConstraints(applicationId, constraint, schedulerNode, atm);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static boolean canSatisfyConstraints(ApplicationId applicationId,\n      SchedulingRequest request, SchedulerNode schedulerNode,\n      PlacementConstraintManager pcm, AllocationTagsManager atm)\n      throws InvalidAllocationTagsQueryException {\n    // TODO do proper merge on different level of constraints, see YARN-7778.\n\n    // Request level constraint\n    PlacementConstraint constraint \u003d request.getPlacementConstraint();\n    if (constraint \u003d\u003d null) {\n      // Application level constraint\n      constraint \u003d pcm.getConstraint(applicationId,\n          request.getAllocationTags());\n      if (constraint \u003d\u003d null) {\n        // Global level constraint\n        constraint \u003d pcm.getGlobalConstraint(request.getAllocationTags());\n        if (constraint \u003d\u003d null) {\n          return true;\n        }\n      }\n    }\n    return canSatisfyConstraints(applicationId, constraint, schedulerNode, atm);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/PlacementConstraintsUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "38af23796971193fa529c3d08ffde8fcd6e607b6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6599. Support anti-affinity constraint via AppPlacementAllocator. (Wangda Tan via asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "38af23796971193fa529c3d08ffde8fcd6e607b6",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,16 @@\n+  public static boolean canSatisfySingleConstraint(ApplicationId applicationId,\n+      PlacementConstraint placementConstraint, SchedulerNode node,\n+      AllocationTagsManager tagsManager)\n+      throws InvalidAllocationTagsQueryException {\n+    if (placementConstraint \u003d\u003d null) {\n+      return true;\n+    }\n+    // Transform to SimpleConstraint\n+    SingleConstraintTransformer singleTransformer \u003d\n+        new SingleConstraintTransformer(placementConstraint);\n+    placementConstraint \u003d singleTransformer.transform();\n+    AbstractConstraint sConstraintExpr \u003d placementConstraint.getConstraintExpr();\n+    SingleConstraint single \u003d (SingleConstraint) sConstraintExpr;\n+\n+    return canSatisfySingleConstraint(applicationId, single, node, tagsManager);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean canSatisfySingleConstraint(ApplicationId applicationId,\n      PlacementConstraint placementConstraint, SchedulerNode node,\n      AllocationTagsManager tagsManager)\n      throws InvalidAllocationTagsQueryException {\n    if (placementConstraint \u003d\u003d null) {\n      return true;\n    }\n    // Transform to SimpleConstraint\n    SingleConstraintTransformer singleTransformer \u003d\n        new SingleConstraintTransformer(placementConstraint);\n    placementConstraint \u003d singleTransformer.transform();\n    AbstractConstraint sConstraintExpr \u003d placementConstraint.getConstraintExpr();\n    SingleConstraint single \u003d (SingleConstraint) sConstraintExpr;\n\n    return canSatisfySingleConstraint(applicationId, single, node, tagsManager);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/PlacementConstraintsUtil.java"
    }
  }
}