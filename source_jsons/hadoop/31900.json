{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FlowScanner.java",
  "functionName": "processSummation",
  "functionId": "processSummation___currentColumnCells-SortedSet__Cell____converter-NumericValueConverter",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/hadoop-yarn-server-timelineservice-hbase-server-1/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
  "functionStartLine": 395,
  "functionEndLine": 415,
  "numCommitsSeen": 25,
  "timeTaken": 5061,
  "changeHistory": [
    "55ba49dd071b66e72c47a1c41e88b9a5feddf53b",
    "10663b78c8596693322dc3636f173035195bf607",
    "5e37ca5bb49f945e27f49a413d08baab562dfa9c",
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "55f5886ea24671ff3db87a64aaba2e76b3355455",
    "9bdd455dced15c84430ea0a0a59410df924f02a7",
    "51254a6b5133c8abfec4b7d2ac9477d112b3ccfa",
    "a68e3839218523403f42acd7bdd7ce1da59a5e60"
  ],
  "changeHistoryShort": {
    "55ba49dd071b66e72c47a1c41e88b9a5feddf53b": "Yfilerename",
    "10663b78c8596693322dc3636f173035195bf607": "Yfilerename",
    "5e37ca5bb49f945e27f49a413d08baab562dfa9c": "Yfilerename",
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Ymultichange(Yfilerename,Ybodychange)",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "55f5886ea24671ff3db87a64aaba2e76b3355455": "Ybodychange",
    "9bdd455dced15c84430ea0a0a59410df924f02a7": "Ybodychange",
    "51254a6b5133c8abfec4b7d2ac9477d112b3ccfa": "Ymultichange(Yparameterchange,Ybodychange)",
    "a68e3839218523403f42acd7bdd7ce1da59a5e60": "Yintroduced"
  },
  "changeHistoryDetails": {
    "55ba49dd071b66e72c47a1c41e88b9a5feddf53b": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7346. Add a profile to allow optional compilation for ATSv2 with HBase-2.0. Contributed by Haibo Chen and Rohith.\n",
      "commitDate": "05/03/18 10:25 PM",
      "commitName": "55ba49dd071b66e72c47a1c41e88b9a5feddf53b",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "05/03/18 6:15 PM",
      "commitNameOld": "745190ecdca8f7dfc5eebffdd1c1aa4f86229120",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 0.17,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells,\n      NumericValueConverter converter) throws IOException {\n    Number sum \u003d 0;\n    Number currentValue \u003d 0;\n    long ts \u003d 0L;\n    long mostCurrentTimestamp \u003d 0L;\n    Cell mostRecentCell \u003d null;\n    for (Cell cell : currentColumnCells) {\n      currentValue \u003d (Number) converter.decodeValue(CellUtil.cloneValue(cell));\n      ts \u003d cell.getTimestamp();\n      if (mostCurrentTimestamp \u003c ts) {\n        mostCurrentTimestamp \u003d ts;\n        mostRecentCell \u003d cell;\n      }\n      sum \u003d converter.add(sum, currentValue);\n    }\n    byte[] sumBytes \u003d converter.encodeValue(sum);\n    Cell sumCell \u003d\n        HBaseTimelineServerUtils.createNewCell(mostRecentCell, sumBytes);\n    return sumCell;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/hadoop-yarn-server-timelineservice-hbase-server-1/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/hadoop-yarn-server-timelineservice-hbase-server-1/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java"
      }
    },
    "10663b78c8596693322dc3636f173035195bf607": {
      "type": "Yfilerename",
      "commitMessage": "Revert \"yarn-7346.07.patch\"\n\nThis reverts commit 5e37ca5bb49f945e27f49a413d08baab562dfa9c.\n",
      "commitDate": "28/02/18 9:11 PM",
      "commitName": "10663b78c8596693322dc3636f173035195bf607",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "28/02/18 9:10 PM",
      "commitNameOld": "d1274c3b71549cb000868500c293cafd880b3713",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells,\n      NumericValueConverter converter) throws IOException {\n    Number sum \u003d 0;\n    Number currentValue \u003d 0;\n    long ts \u003d 0L;\n    long mostCurrentTimestamp \u003d 0L;\n    Cell mostRecentCell \u003d null;\n    for (Cell cell : currentColumnCells) {\n      currentValue \u003d (Number) converter.decodeValue(CellUtil.cloneValue(cell));\n      ts \u003d cell.getTimestamp();\n      if (mostCurrentTimestamp \u003c ts) {\n        mostCurrentTimestamp \u003d ts;\n        mostRecentCell \u003d cell;\n      }\n      sum \u003d converter.add(sum, currentValue);\n    }\n    byte[] sumBytes \u003d converter.encodeValue(sum);\n    Cell sumCell \u003d\n        HBaseTimelineServerUtils.createNewCell(mostRecentCell, sumBytes);\n    return sumCell;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/hadoop-yarn-server-timelineservice-hbase-server-1/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java"
      }
    },
    "5e37ca5bb49f945e27f49a413d08baab562dfa9c": {
      "type": "Yfilerename",
      "commitMessage": "yarn-7346.07.patch\n",
      "commitDate": "28/02/18 9:04 PM",
      "commitName": "5e37ca5bb49f945e27f49a413d08baab562dfa9c",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "28/02/18 6:18 PM",
      "commitNameOld": "6e6945cd78d76c6beaec85c963f27e28bf96c0f2",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells,\n      NumericValueConverter converter) throws IOException {\n    Number sum \u003d 0;\n    Number currentValue \u003d 0;\n    long ts \u003d 0L;\n    long mostCurrentTimestamp \u003d 0L;\n    Cell mostRecentCell \u003d null;\n    for (Cell cell : currentColumnCells) {\n      currentValue \u003d (Number) converter.decodeValue(CellUtil.cloneValue(cell));\n      ts \u003d cell.getTimestamp();\n      if (mostCurrentTimestamp \u003c ts) {\n        mostCurrentTimestamp \u003d ts;\n        mostRecentCell \u003d cell;\n      }\n      sum \u003d converter.add(sum, currentValue);\n    }\n    byte[] sumBytes \u003d converter.encodeValue(sum);\n    Cell sumCell \u003d\n        HBaseTimelineServerUtils.createNewCell(mostRecentCell, sumBytes);\n    return sumCell;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/hadoop-yarn-server-timelineservice-hbase-server-1/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/hadoop-yarn-server-timelineservice-hbase-server-1/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java"
      }
    },
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
          "commitDate": "17/02/18 7:00 AM",
          "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 3:24 AM",
          "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n   private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells,\n       NumericValueConverter converter) throws IOException {\n     Number sum \u003d 0;\n     Number currentValue \u003d 0;\n     long ts \u003d 0L;\n     long mostCurrentTimestamp \u003d 0L;\n     Cell mostRecentCell \u003d null;\n     for (Cell cell : currentColumnCells) {\n       currentValue \u003d (Number) converter.decodeValue(CellUtil.cloneValue(cell));\n       ts \u003d cell.getTimestamp();\n       if (mostCurrentTimestamp \u003c ts) {\n         mostCurrentTimestamp \u003d ts;\n         mostRecentCell \u003d cell;\n       }\n       sum \u003d converter.add(sum, currentValue);\n     }\n     byte[] sumBytes \u003d converter.encodeValue(sum);\n     Cell sumCell \u003d\n-        HBaseTimelineStorageUtils.createNewCell(mostRecentCell, sumBytes);\n+        HBaseTimelineServerUtils.createNewCell(mostRecentCell, sumBytes);\n     return sumCell;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells,\n      NumericValueConverter converter) throws IOException {\n    Number sum \u003d 0;\n    Number currentValue \u003d 0;\n    long ts \u003d 0L;\n    long mostCurrentTimestamp \u003d 0L;\n    Cell mostRecentCell \u003d null;\n    for (Cell cell : currentColumnCells) {\n      currentValue \u003d (Number) converter.decodeValue(CellUtil.cloneValue(cell));\n      ts \u003d cell.getTimestamp();\n      if (mostCurrentTimestamp \u003c ts) {\n        mostCurrentTimestamp \u003d ts;\n        mostRecentCell \u003d cell;\n      }\n      sum \u003d converter.add(sum, currentValue);\n    }\n    byte[] sumBytes \u003d converter.encodeValue(sum);\n    Cell sumCell \u003d\n        HBaseTimelineServerUtils.createNewCell(mostRecentCell, sumBytes);\n    return sumCell;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
          "commitDate": "17/02/18 7:00 AM",
          "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 3:24 AM",
          "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n   private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells,\n       NumericValueConverter converter) throws IOException {\n     Number sum \u003d 0;\n     Number currentValue \u003d 0;\n     long ts \u003d 0L;\n     long mostCurrentTimestamp \u003d 0L;\n     Cell mostRecentCell \u003d null;\n     for (Cell cell : currentColumnCells) {\n       currentValue \u003d (Number) converter.decodeValue(CellUtil.cloneValue(cell));\n       ts \u003d cell.getTimestamp();\n       if (mostCurrentTimestamp \u003c ts) {\n         mostCurrentTimestamp \u003d ts;\n         mostRecentCell \u003d cell;\n       }\n       sum \u003d converter.add(sum, currentValue);\n     }\n     byte[] sumBytes \u003d converter.encodeValue(sum);\n     Cell sumCell \u003d\n-        HBaseTimelineStorageUtils.createNewCell(mostRecentCell, sumBytes);\n+        HBaseTimelineServerUtils.createNewCell(mostRecentCell, sumBytes);\n     return sumCell;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells,\n      NumericValueConverter converter) throws IOException {\n    Number sum \u003d 0;\n    Number currentValue \u003d 0;\n    long ts \u003d 0L;\n    long mostCurrentTimestamp \u003d 0L;\n    Cell mostRecentCell \u003d null;\n    for (Cell cell : currentColumnCells) {\n      currentValue \u003d (Number) converter.decodeValue(CellUtil.cloneValue(cell));\n      ts \u003d cell.getTimestamp();\n      if (mostCurrentTimestamp \u003c ts) {\n        mostCurrentTimestamp \u003d ts;\n        mostRecentCell \u003d cell;\n      }\n      sum \u003d converter.add(sum, currentValue);\n    }\n    byte[] sumBytes \u003d converter.encodeValue(sum);\n    Cell sumCell \u003d\n        HBaseTimelineServerUtils.createNewCell(mostRecentCell, sumBytes);\n    return sumCell;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
          "extendedDetails": {}
        }
      ]
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells,\n      NumericValueConverter converter) throws IOException {\n    Number sum \u003d 0;\n    Number currentValue \u003d 0;\n    long ts \u003d 0L;\n    long mostCurrentTimestamp \u003d 0L;\n    Cell mostRecentCell \u003d null;\n    for (Cell cell : currentColumnCells) {\n      currentValue \u003d (Number) converter.decodeValue(CellUtil.cloneValue(cell));\n      ts \u003d cell.getTimestamp();\n      if (mostCurrentTimestamp \u003c ts) {\n        mostCurrentTimestamp \u003d ts;\n        mostRecentCell \u003d cell;\n      }\n      sum \u003d converter.add(sum, currentValue);\n    }\n    byte[] sumBytes \u003d converter.encodeValue(sum);\n    Cell sumCell \u003d\n        HBaseTimelineStorageUtils.createNewCell(mostRecentCell, sumBytes);\n    return sumCell;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java"
      }
    },
    "55f5886ea24671ff3db87a64aaba2e76b3355455": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5925. Extract hbase-backend-exclusive utility methods from TimelineStorageUtil. Contributed by Haibo Chen.\n",
      "commitDate": "09/12/16 4:17 PM",
      "commitName": "55f5886ea24671ff3db87a64aaba2e76b3355455",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:46 AM",
      "commitNameOld": "1a227744ac0ceff178171fc4ddbf3d27275bdc4f",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 152.36,
      "commitsBetweenForRepo": 1107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells,\n       NumericValueConverter converter) throws IOException {\n     Number sum \u003d 0;\n     Number currentValue \u003d 0;\n     long ts \u003d 0L;\n     long mostCurrentTimestamp \u003d 0L;\n     Cell mostRecentCell \u003d null;\n     for (Cell cell : currentColumnCells) {\n       currentValue \u003d (Number) converter.decodeValue(CellUtil.cloneValue(cell));\n       ts \u003d cell.getTimestamp();\n       if (mostCurrentTimestamp \u003c ts) {\n         mostCurrentTimestamp \u003d ts;\n         mostRecentCell \u003d cell;\n       }\n       sum \u003d converter.add(sum, currentValue);\n     }\n     byte[] sumBytes \u003d converter.encodeValue(sum);\n-    Cell sumCell \u003d TimelineStorageUtils.createNewCell(mostRecentCell, sumBytes);\n+    Cell sumCell \u003d\n+        HBaseTimelineStorageUtils.createNewCell(mostRecentCell, sumBytes);\n     return sumCell;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells,\n      NumericValueConverter converter) throws IOException {\n    Number sum \u003d 0;\n    Number currentValue \u003d 0;\n    long ts \u003d 0L;\n    long mostCurrentTimestamp \u003d 0L;\n    Cell mostRecentCell \u003d null;\n    for (Cell cell : currentColumnCells) {\n      currentValue \u003d (Number) converter.decodeValue(CellUtil.cloneValue(cell));\n      ts \u003d cell.getTimestamp();\n      if (mostCurrentTimestamp \u003c ts) {\n        mostCurrentTimestamp \u003d ts;\n        mostRecentCell \u003d cell;\n      }\n      sum \u003d converter.add(sum, currentValue);\n    }\n    byte[] sumBytes \u003d converter.encodeValue(sum);\n    Cell sumCell \u003d\n        HBaseTimelineStorageUtils.createNewCell(mostRecentCell, sumBytes);\n    return sumCell;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
      "extendedDetails": {}
    },
    "9bdd455dced15c84430ea0a0a59410df924f02a7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4062. Add the flush and compaction functionality via coprocessors and scanners for flow run table (Vrushali C via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9bdd455dced15c84430ea0a0a59410df924f02a7",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "960af7d4717b8a8949d0b2e43949e7daab45aa88",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells,\n       NumericValueConverter converter) throws IOException {\n     Number sum \u003d 0;\n     Number currentValue \u003d 0;\n     long ts \u003d 0L;\n     long mostCurrentTimestamp \u003d 0L;\n     Cell mostRecentCell \u003d null;\n     for (Cell cell : currentColumnCells) {\n       currentValue \u003d (Number) converter.decodeValue(CellUtil.cloneValue(cell));\n       ts \u003d cell.getTimestamp();\n       if (mostCurrentTimestamp \u003c ts) {\n         mostCurrentTimestamp \u003d ts;\n         mostRecentCell \u003d cell;\n       }\n       sum \u003d converter.add(sum, currentValue);\n     }\n     byte[] sumBytes \u003d converter.encodeValue(sum);\n-    Cell sumCell \u003d createNewCell(mostRecentCell, sumBytes);\n+    Cell sumCell \u003d TimelineStorageUtils.createNewCell(mostRecentCell, sumBytes);\n     return sumCell;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells,\n      NumericValueConverter converter) throws IOException {\n    Number sum \u003d 0;\n    Number currentValue \u003d 0;\n    long ts \u003d 0L;\n    long mostCurrentTimestamp \u003d 0L;\n    Cell mostRecentCell \u003d null;\n    for (Cell cell : currentColumnCells) {\n      currentValue \u003d (Number) converter.decodeValue(CellUtil.cloneValue(cell));\n      ts \u003d cell.getTimestamp();\n      if (mostCurrentTimestamp \u003c ts) {\n        mostCurrentTimestamp \u003d ts;\n        mostRecentCell \u003d cell;\n      }\n      sum \u003d converter.add(sum, currentValue);\n    }\n    byte[] sumBytes \u003d converter.encodeValue(sum);\n    Cell sumCell \u003d TimelineStorageUtils.createNewCell(mostRecentCell, sumBytes);\n    return sumCell;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
      "extendedDetails": {}
    },
    "51254a6b5133c8abfec4b7d2ac9477d112b3ccfa": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4053. Change the way metric values are stored in HBase Storage (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "51254a6b5133c8abfec4b7d2ac9477d112b3ccfa",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4053. Change the way metric values are stored in HBase Storage (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "51254a6b5133c8abfec4b7d2ac9477d112b3ccfa",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "b51d0fef56a59b15489f5b932025718b4e9613d2",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells)\n-      throws IOException {\n+  private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells,\n+      NumericValueConverter converter) throws IOException {\n     Number sum \u003d 0;\n     Number currentValue \u003d 0;\n     long ts \u003d 0L;\n-    long mostCurrentTimestamp \u003d 0l;\n+    long mostCurrentTimestamp \u003d 0L;\n     Cell mostRecentCell \u003d null;\n     for (Cell cell : currentColumnCells) {\n-      currentValue \u003d (Number) GenericObjectMapper.read(CellUtil\n-          .cloneValue(cell));\n+      currentValue \u003d (Number) converter.decodeValue(CellUtil.cloneValue(cell));\n       ts \u003d cell.getTimestamp();\n       if (mostCurrentTimestamp \u003c ts) {\n         mostCurrentTimestamp \u003d ts;\n         mostRecentCell \u003d cell;\n       }\n-      sum \u003d sum.longValue() + currentValue.longValue();\n+      sum \u003d converter.add(sum, currentValue);\n     }\n-    Cell sumCell \u003d createNewCell(mostRecentCell, sum);\n+    byte[] sumBytes \u003d converter.encodeValue(sum);\n+    Cell sumCell \u003d createNewCell(mostRecentCell, sumBytes);\n     return sumCell;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells,\n      NumericValueConverter converter) throws IOException {\n    Number sum \u003d 0;\n    Number currentValue \u003d 0;\n    long ts \u003d 0L;\n    long mostCurrentTimestamp \u003d 0L;\n    Cell mostRecentCell \u003d null;\n    for (Cell cell : currentColumnCells) {\n      currentValue \u003d (Number) converter.decodeValue(CellUtil.cloneValue(cell));\n      ts \u003d cell.getTimestamp();\n      if (mostCurrentTimestamp \u003c ts) {\n        mostCurrentTimestamp \u003d ts;\n        mostRecentCell \u003d cell;\n      }\n      sum \u003d converter.add(sum, currentValue);\n    }\n    byte[] sumBytes \u003d converter.encodeValue(sum);\n    Cell sumCell \u003d createNewCell(mostRecentCell, sumBytes);\n    return sumCell;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
          "extendedDetails": {
            "oldValue": "[currentColumnCells-SortedSet\u003cCell\u003e]",
            "newValue": "[currentColumnCells-SortedSet\u003cCell\u003e, converter-NumericValueConverter]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4053. Change the way metric values are stored in HBase Storage (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "51254a6b5133c8abfec4b7d2ac9477d112b3ccfa",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "b51d0fef56a59b15489f5b932025718b4e9613d2",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells)\n-      throws IOException {\n+  private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells,\n+      NumericValueConverter converter) throws IOException {\n     Number sum \u003d 0;\n     Number currentValue \u003d 0;\n     long ts \u003d 0L;\n-    long mostCurrentTimestamp \u003d 0l;\n+    long mostCurrentTimestamp \u003d 0L;\n     Cell mostRecentCell \u003d null;\n     for (Cell cell : currentColumnCells) {\n-      currentValue \u003d (Number) GenericObjectMapper.read(CellUtil\n-          .cloneValue(cell));\n+      currentValue \u003d (Number) converter.decodeValue(CellUtil.cloneValue(cell));\n       ts \u003d cell.getTimestamp();\n       if (mostCurrentTimestamp \u003c ts) {\n         mostCurrentTimestamp \u003d ts;\n         mostRecentCell \u003d cell;\n       }\n-      sum \u003d sum.longValue() + currentValue.longValue();\n+      sum \u003d converter.add(sum, currentValue);\n     }\n-    Cell sumCell \u003d createNewCell(mostRecentCell, sum);\n+    byte[] sumBytes \u003d converter.encodeValue(sum);\n+    Cell sumCell \u003d createNewCell(mostRecentCell, sumBytes);\n     return sumCell;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells,\n      NumericValueConverter converter) throws IOException {\n    Number sum \u003d 0;\n    Number currentValue \u003d 0;\n    long ts \u003d 0L;\n    long mostCurrentTimestamp \u003d 0L;\n    Cell mostRecentCell \u003d null;\n    for (Cell cell : currentColumnCells) {\n      currentValue \u003d (Number) converter.decodeValue(CellUtil.cloneValue(cell));\n      ts \u003d cell.getTimestamp();\n      if (mostCurrentTimestamp \u003c ts) {\n        mostCurrentTimestamp \u003d ts;\n        mostRecentCell \u003d cell;\n      }\n      sum \u003d converter.add(sum, currentValue);\n    }\n    byte[] sumBytes \u003d converter.encodeValue(sum);\n    Cell sumCell \u003d createNewCell(mostRecentCell, sumBytes);\n    return sumCell;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
          "extendedDetails": {}
        }
      ]
    },
    "a68e3839218523403f42acd7bdd7ce1da59a5e60": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3901. Populate flow run data in the flow_run \u0026 flow activity tables (Vrushali C via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "a68e3839218523403f42acd7bdd7ce1da59a5e60",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,20 @@\n+  private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells)\n+      throws IOException {\n+    Number sum \u003d 0;\n+    Number currentValue \u003d 0;\n+    long ts \u003d 0L;\n+    long mostCurrentTimestamp \u003d 0l;\n+    Cell mostRecentCell \u003d null;\n+    for (Cell cell : currentColumnCells) {\n+      currentValue \u003d (Number) GenericObjectMapper.read(CellUtil\n+          .cloneValue(cell));\n+      ts \u003d cell.getTimestamp();\n+      if (mostCurrentTimestamp \u003c ts) {\n+        mostCurrentTimestamp \u003d ts;\n+        mostRecentCell \u003d cell;\n+      }\n+      sum \u003d sum.longValue() + currentValue.longValue();\n+    }\n+    Cell sumCell \u003d createNewCell(mostRecentCell, sum);\n+    return sumCell;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Cell processSummation(SortedSet\u003cCell\u003e currentColumnCells)\n      throws IOException {\n    Number sum \u003d 0;\n    Number currentValue \u003d 0;\n    long ts \u003d 0L;\n    long mostCurrentTimestamp \u003d 0l;\n    Cell mostRecentCell \u003d null;\n    for (Cell cell : currentColumnCells) {\n      currentValue \u003d (Number) GenericObjectMapper.read(CellUtil\n          .cloneValue(cell));\n      ts \u003d cell.getTimestamp();\n      if (mostCurrentTimestamp \u003c ts) {\n        mostCurrentTimestamp \u003d ts;\n        mostRecentCell \u003d cell;\n      }\n      sum \u003d sum.longValue() + currentValue.longValue();\n    }\n    Cell sumCell \u003d createNewCell(mostRecentCell, sum);\n    return sumCell;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java"
    }
  }
}