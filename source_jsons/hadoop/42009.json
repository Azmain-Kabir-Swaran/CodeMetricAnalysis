{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKRMStateStore.java",
  "functionName": "loadRMDTSecretManagerState",
  "functionId": "loadRMDTSecretManagerState___rmState-RMState",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
  "functionStartLine": 582,
  "functionEndLine": 587,
  "numCommitsSeen": 77,
  "timeTaken": 2125,
  "changeHistory": [
    "93907baa0b033c1431dc7055116746fc9db508cc",
    "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc",
    "8628c1704b7d8c1a0ac01cea679c03245d11d330"
  ],
  "changeHistoryShort": {
    "93907baa0b033c1431dc7055116746fc9db508cc": "Ybodychange",
    "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc": "Ybodychange",
    "8628c1704b7d8c1a0ac01cea679c03245d11d330": "Yintroduced"
  },
  "changeHistoryDetails": {
    "93907baa0b033c1431dc7055116746fc9db508cc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1307. Redesign znode structure for Zookeeper based RM state-store for better organization and scalability. Contributed by Tsuyoshi OZAWA.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552209 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/13 6:33 PM",
      "commitName": "93907baa0b033c1431dc7055116746fc9db508cc",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/12/13 8:17 PM",
      "commitNameOld": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 10.93,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,6 @@\n   private synchronized void loadRMDTSecretManagerState(RMState rmState)\n       throws Exception {\n-    List\u003cString\u003e childNodes \u003d\n-        getChildrenWithRetries(rmDTSecretManagerRoot, true);\n-\n-    for (String childNodeName : childNodes) {\n-      if (childNodeName.startsWith(DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX)) {\n-        rmState.rmSecretManagerState.dtSequenceNumber \u003d\n-            Integer.parseInt(childNodeName.split(\"_\")[1]);\n-        continue;\n-      }\n-      String childNodePath \u003d getNodePath(rmDTSecretManagerRoot, childNodeName);\n-      byte[] childData \u003d getDataWithRetries(childNodePath, true);\n-\n-      ByteArrayInputStream is \u003d new ByteArrayInputStream(childData);\n-      DataInputStream fsIn \u003d new DataInputStream(is);\n-      try {\n-        if (childNodeName.startsWith(DELEGATION_KEY_PREFIX)) {\n-          DelegationKey key \u003d new DelegationKey();\n-          key.readFields(fsIn);\n-          rmState.rmSecretManagerState.masterKeyState.add(key);\n-        } else if (childNodeName.startsWith(DELEGATION_TOKEN_PREFIX)) {\n-          RMDelegationTokenIdentifier identifier \u003d\n-              new RMDelegationTokenIdentifier();\n-          identifier.readFields(fsIn);\n-          long renewDate \u003d fsIn.readLong();\n-          rmState.rmSecretManagerState.delegationTokenState.put(identifier,\n-              renewDate);\n-        }\n-      } finally {\n-        is.close();\n-      }\n-    }\n+    loadRMDelegationKeyState(rmState);\n+    loadRMSequentialNumberState(rmState);\n+    loadRMDelegationTokenState(rmState);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void loadRMDTSecretManagerState(RMState rmState)\n      throws Exception {\n    loadRMDelegationKeyState(rmState);\n    loadRMSequentialNumberState(rmState);\n    loadRMDelegationTokenState(rmState);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1222. Make improvements in ZKRMStateStore for fencing (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1541995 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/11/13 9:53 AM",
      "commitName": "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc",
      "commitAuthor": "Bikas Saha",
      "commitDateOld": "31/10/13 10:25 AM",
      "commitNameOld": "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 14.02,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,34 @@\n   private synchronized void loadRMDTSecretManagerState(RMState rmState)\n       throws Exception {\n-    List\u003cString\u003e childNodes \u003d zkClient.getChildren(rmDTSecretManagerRoot, true);\n+    List\u003cString\u003e childNodes \u003d\n+        getChildrenWithRetries(rmDTSecretManagerRoot, true);\n \n     for (String childNodeName : childNodes) {\n       if (childNodeName.startsWith(DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX)) {\n         rmState.rmSecretManagerState.dtSequenceNumber \u003d\n             Integer.parseInt(childNodeName.split(\"_\")[1]);\n         continue;\n       }\n       String childNodePath \u003d getNodePath(rmDTSecretManagerRoot, childNodeName);\n       byte[] childData \u003d getDataWithRetries(childNodePath, true);\n \n       ByteArrayInputStream is \u003d new ByteArrayInputStream(childData);\n       DataInputStream fsIn \u003d new DataInputStream(is);\n       try {\n         if (childNodeName.startsWith(DELEGATION_KEY_PREFIX)) {\n           DelegationKey key \u003d new DelegationKey();\n           key.readFields(fsIn);\n           rmState.rmSecretManagerState.masterKeyState.add(key);\n         } else if (childNodeName.startsWith(DELEGATION_TOKEN_PREFIX)) {\n           RMDelegationTokenIdentifier identifier \u003d\n               new RMDelegationTokenIdentifier();\n           identifier.readFields(fsIn);\n           long renewDate \u003d fsIn.readLong();\n           rmState.rmSecretManagerState.delegationTokenState.put(identifier,\n               renewDate);\n         }\n       } finally {\n         is.close();\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void loadRMDTSecretManagerState(RMState rmState)\n      throws Exception {\n    List\u003cString\u003e childNodes \u003d\n        getChildrenWithRetries(rmDTSecretManagerRoot, true);\n\n    for (String childNodeName : childNodes) {\n      if (childNodeName.startsWith(DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX)) {\n        rmState.rmSecretManagerState.dtSequenceNumber \u003d\n            Integer.parseInt(childNodeName.split(\"_\")[1]);\n        continue;\n      }\n      String childNodePath \u003d getNodePath(rmDTSecretManagerRoot, childNodeName);\n      byte[] childData \u003d getDataWithRetries(childNodePath, true);\n\n      ByteArrayInputStream is \u003d new ByteArrayInputStream(childData);\n      DataInputStream fsIn \u003d new DataInputStream(is);\n      try {\n        if (childNodeName.startsWith(DELEGATION_KEY_PREFIX)) {\n          DelegationKey key \u003d new DelegationKey();\n          key.readFields(fsIn);\n          rmState.rmSecretManagerState.masterKeyState.add(key);\n        } else if (childNodeName.startsWith(DELEGATION_TOKEN_PREFIX)) {\n          RMDelegationTokenIdentifier identifier \u003d\n              new RMDelegationTokenIdentifier();\n          identifier.readFields(fsIn);\n          long renewDate \u003d fsIn.readLong();\n          rmState.rmSecretManagerState.delegationTokenState.put(identifier,\n              renewDate);\n        }\n      } finally {\n        is.close();\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "8628c1704b7d8c1a0ac01cea679c03245d11d330": {
      "type": "Yintroduced",
      "commitMessage": "YARN-353. Add Zookeeper-based store implementation for RMStateStore. Contributed by Bikas Saha, Jian He and Karthik Kambatla.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1524829 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/13 1:39 PM",
      "commitName": "8628c1704b7d8c1a0ac01cea679c03245d11d330",
      "commitAuthor": "Hitesh Shah",
      "diff": "@@ -0,0 +1,33 @@\n+  private synchronized void loadRMDTSecretManagerState(RMState rmState)\n+      throws Exception {\n+    List\u003cString\u003e childNodes \u003d zkClient.getChildren(rmDTSecretManagerRoot, true);\n+\n+    for (String childNodeName : childNodes) {\n+      if (childNodeName.startsWith(DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX)) {\n+        rmState.rmSecretManagerState.dtSequenceNumber \u003d\n+            Integer.parseInt(childNodeName.split(\"_\")[1]);\n+        continue;\n+      }\n+      String childNodePath \u003d getNodePath(rmDTSecretManagerRoot, childNodeName);\n+      byte[] childData \u003d getDataWithRetries(childNodePath, true);\n+\n+      ByteArrayInputStream is \u003d new ByteArrayInputStream(childData);\n+      DataInputStream fsIn \u003d new DataInputStream(is);\n+      try {\n+        if (childNodeName.startsWith(DELEGATION_KEY_PREFIX)) {\n+          DelegationKey key \u003d new DelegationKey();\n+          key.readFields(fsIn);\n+          rmState.rmSecretManagerState.masterKeyState.add(key);\n+        } else if (childNodeName.startsWith(DELEGATION_TOKEN_PREFIX)) {\n+          RMDelegationTokenIdentifier identifier \u003d\n+              new RMDelegationTokenIdentifier();\n+          identifier.readFields(fsIn);\n+          long renewDate \u003d fsIn.readLong();\n+          rmState.rmSecretManagerState.delegationTokenState.put(identifier,\n+              renewDate);\n+        }\n+      } finally {\n+        is.close();\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void loadRMDTSecretManagerState(RMState rmState)\n      throws Exception {\n    List\u003cString\u003e childNodes \u003d zkClient.getChildren(rmDTSecretManagerRoot, true);\n\n    for (String childNodeName : childNodes) {\n      if (childNodeName.startsWith(DELEGATION_TOKEN_SEQUENCE_NUMBER_PREFIX)) {\n        rmState.rmSecretManagerState.dtSequenceNumber \u003d\n            Integer.parseInt(childNodeName.split(\"_\")[1]);\n        continue;\n      }\n      String childNodePath \u003d getNodePath(rmDTSecretManagerRoot, childNodeName);\n      byte[] childData \u003d getDataWithRetries(childNodePath, true);\n\n      ByteArrayInputStream is \u003d new ByteArrayInputStream(childData);\n      DataInputStream fsIn \u003d new DataInputStream(is);\n      try {\n        if (childNodeName.startsWith(DELEGATION_KEY_PREFIX)) {\n          DelegationKey key \u003d new DelegationKey();\n          key.readFields(fsIn);\n          rmState.rmSecretManagerState.masterKeyState.add(key);\n        } else if (childNodeName.startsWith(DELEGATION_TOKEN_PREFIX)) {\n          RMDelegationTokenIdentifier identifier \u003d\n              new RMDelegationTokenIdentifier();\n          identifier.readFields(fsIn);\n          long renewDate \u003d fsIn.readLong();\n          rmState.rmSecretManagerState.delegationTokenState.put(identifier,\n              renewDate);\n        }\n      } finally {\n        is.close();\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java"
    }
  }
}