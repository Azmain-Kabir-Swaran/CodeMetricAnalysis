{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StringUtils.java",
  "functionName": "startupShutdownMessage",
  "functionId": "startupShutdownMessage___clazz-Class__?____args-String[]__LOG-LogAdapter(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java",
  "functionStartLine": 736,
  "functionEndLine": 758,
  "numCommitsSeen": 44,
  "timeTaken": 1889,
  "changeHistory": [
    "373bb4931fb392e3ca6bfd78992887e5a405e186",
    "a963baba10648859ad88d4ed9a4325b66b1af0d5",
    "9175105eeaecf0a1d60b57989b73ce45cee4689b"
  ],
  "changeHistoryShort": {
    "373bb4931fb392e3ca6bfd78992887e5a405e186": "Ybodychange",
    "a963baba10648859ad88d4ed9a4325b66b1af0d5": "Ybodychange",
    "9175105eeaecf0a1d60b57989b73ce45cee4689b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "373bb4931fb392e3ca6bfd78992887e5a405e186": {
      "type": "Ybodychange",
      "commitMessage": "YARN-679. Add an entry point that can start any Yarn service. Contributed by Steve Loughran.\n",
      "commitDate": "28/04/17 10:45 AM",
      "commitName": "373bb4931fb392e3ca6bfd78992887e5a405e186",
      "commitAuthor": "Junping Du",
      "commitDateOld": "25/04/17 10:06 PM",
      "commitNameOld": "9ccb849eb69f05bccc3435306ec4bde104e411bf",
      "commitAuthorOld": "John Zhuge",
      "daysBetweenCommits": 2.53,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,23 @@\n   static void startupShutdownMessage(Class\u003c?\u003e clazz, String[] args,\n                                      final LogAdapter LOG) { \n     final String hostname \u003d NetUtils.getHostname();\n     final String classname \u003d clazz.getSimpleName();\n-    LOG.info(\n-        toStartupShutdownString(\"STARTUP_MSG: \", new String[] {\n-            \"Starting \" + classname,\n-            \"  user \u003d \" + System.getProperty(\"user.name\"),\n-            \"  host \u003d \" + hostname,\n-            \"  args \u003d \" + Arrays.asList(args),\n-            \"  version \u003d \" + VersionInfo.getVersion(),\n-            \"  classpath \u003d \" + System.getProperty(\"java.class.path\"),\n-            \"  build \u003d \" + VersionInfo.getUrl() + \" -r \"\n-                         + VersionInfo.getRevision()  \n-                         + \"; compiled by \u0027\" + VersionInfo.getUser()\n-                         + \"\u0027 on \" + VersionInfo.getDate(),\n-            \"  java \u003d \" + System.getProperty(\"java.version\") }\n-        )\n-      );\n+    LOG.info(createStartupShutdownMessage(classname, hostname, args));\n \n     if (SystemUtils.IS_OS_UNIX) {\n       try {\n         SignalLogger.INSTANCE.register(LOG);\n       } catch (Throwable t) {\n         LOG.warn(\"failed to register any UNIX signal loggers: \", t);\n       }\n     }\n     ShutdownHookManager.get().addShutdownHook(\n       new Runnable() {\n         @Override\n         public void run() {\n           LOG.info(toStartupShutdownString(\"SHUTDOWN_MSG: \", new String[]{\n             \"Shutting down \" + classname + \" at \" + hostname}));\n         }\n       }, SHUTDOWN_HOOK_PRIORITY);\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void startupShutdownMessage(Class\u003c?\u003e clazz, String[] args,\n                                     final LogAdapter LOG) { \n    final String hostname \u003d NetUtils.getHostname();\n    final String classname \u003d clazz.getSimpleName();\n    LOG.info(createStartupShutdownMessage(classname, hostname, args));\n\n    if (SystemUtils.IS_OS_UNIX) {\n      try {\n        SignalLogger.INSTANCE.register(LOG);\n      } catch (Throwable t) {\n        LOG.warn(\"failed to register any UNIX signal loggers: \", t);\n      }\n    }\n    ShutdownHookManager.get().addShutdownHook(\n      new Runnable() {\n        @Override\n        public void run() {\n          LOG.info(toStartupShutdownString(\"SHUTDOWN_MSG: \", new String[]{\n            \"Shutting down \" + classname + \" at \" + hostname}));\n        }\n      }, SHUTDOWN_HOOK_PRIORITY);\n\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java",
      "extendedDetails": {}
    },
    "a963baba10648859ad88d4ed9a4325b66b1af0d5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12828. Print user when services are started. (Wei-Chiu Chuang via Yongjun Zhang)\n",
      "commitDate": "19/02/16 9:41 AM",
      "commitName": "a963baba10648859ad88d4ed9a4325b66b1af0d5",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "15/12/15 3:13 PM",
      "commitNameOld": "ae67c8424c188a2b00920108e6104690137c61b7",
      "commitAuthorOld": "Uma Mahesh",
      "daysBetweenCommits": 65.77,
      "commitsBetweenForRepo": 421,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,37 @@\n   static void startupShutdownMessage(Class\u003c?\u003e clazz, String[] args,\n                                      final LogAdapter LOG) { \n     final String hostname \u003d NetUtils.getHostname();\n     final String classname \u003d clazz.getSimpleName();\n     LOG.info(\n         toStartupShutdownString(\"STARTUP_MSG: \", new String[] {\n             \"Starting \" + classname,\n+            \"  user \u003d \" + System.getProperty(\"user.name\"),\n             \"  host \u003d \" + hostname,\n             \"  args \u003d \" + Arrays.asList(args),\n             \"  version \u003d \" + VersionInfo.getVersion(),\n             \"  classpath \u003d \" + System.getProperty(\"java.class.path\"),\n             \"  build \u003d \" + VersionInfo.getUrl() + \" -r \"\n                          + VersionInfo.getRevision()  \n                          + \"; compiled by \u0027\" + VersionInfo.getUser()\n                          + \"\u0027 on \" + VersionInfo.getDate(),\n             \"  java \u003d \" + System.getProperty(\"java.version\") }\n         )\n       );\n \n     if (SystemUtils.IS_OS_UNIX) {\n       try {\n         SignalLogger.INSTANCE.register(LOG);\n       } catch (Throwable t) {\n         LOG.warn(\"failed to register any UNIX signal loggers: \", t);\n       }\n     }\n     ShutdownHookManager.get().addShutdownHook(\n       new Runnable() {\n         @Override\n         public void run() {\n           LOG.info(toStartupShutdownString(\"SHUTDOWN_MSG: \", new String[]{\n             \"Shutting down \" + classname + \" at \" + hostname}));\n         }\n       }, SHUTDOWN_HOOK_PRIORITY);\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void startupShutdownMessage(Class\u003c?\u003e clazz, String[] args,\n                                     final LogAdapter LOG) { \n    final String hostname \u003d NetUtils.getHostname();\n    final String classname \u003d clazz.getSimpleName();\n    LOG.info(\n        toStartupShutdownString(\"STARTUP_MSG: \", new String[] {\n            \"Starting \" + classname,\n            \"  user \u003d \" + System.getProperty(\"user.name\"),\n            \"  host \u003d \" + hostname,\n            \"  args \u003d \" + Arrays.asList(args),\n            \"  version \u003d \" + VersionInfo.getVersion(),\n            \"  classpath \u003d \" + System.getProperty(\"java.class.path\"),\n            \"  build \u003d \" + VersionInfo.getUrl() + \" -r \"\n                         + VersionInfo.getRevision()  \n                         + \"; compiled by \u0027\" + VersionInfo.getUser()\n                         + \"\u0027 on \" + VersionInfo.getDate(),\n            \"  java \u003d \" + System.getProperty(\"java.version\") }\n        )\n      );\n\n    if (SystemUtils.IS_OS_UNIX) {\n      try {\n        SignalLogger.INSTANCE.register(LOG);\n      } catch (Throwable t) {\n        LOG.warn(\"failed to register any UNIX signal loggers: \", t);\n      }\n    }\n    ShutdownHookManager.get().addShutdownHook(\n      new Runnable() {\n        @Override\n        public void run() {\n          LOG.info(toStartupShutdownString(\"SHUTDOWN_MSG: \", new String[]{\n            \"Shutting down \" + classname + \" at \" + hostname}));\n        }\n      }, SHUTDOWN_HOOK_PRIORITY);\n\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java",
      "extendedDetails": {}
    },
    "9175105eeaecf0a1d60b57989b73ce45cee4689b": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7734. Class cast exception in NameNode#main. Contributed by Yi Liu.\n",
      "commitDate": "04/02/15 11:31 AM",
      "commitName": "9175105eeaecf0a1d60b57989b73ce45cee4689b",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,36 @@\n+  static void startupShutdownMessage(Class\u003c?\u003e clazz, String[] args,\n+                                     final LogAdapter LOG) { \n+    final String hostname \u003d NetUtils.getHostname();\n+    final String classname \u003d clazz.getSimpleName();\n+    LOG.info(\n+        toStartupShutdownString(\"STARTUP_MSG: \", new String[] {\n+            \"Starting \" + classname,\n+            \"  host \u003d \" + hostname,\n+            \"  args \u003d \" + Arrays.asList(args),\n+            \"  version \u003d \" + VersionInfo.getVersion(),\n+            \"  classpath \u003d \" + System.getProperty(\"java.class.path\"),\n+            \"  build \u003d \" + VersionInfo.getUrl() + \" -r \"\n+                         + VersionInfo.getRevision()  \n+                         + \"; compiled by \u0027\" + VersionInfo.getUser()\n+                         + \"\u0027 on \" + VersionInfo.getDate(),\n+            \"  java \u003d \" + System.getProperty(\"java.version\") }\n+        )\n+      );\n+\n+    if (SystemUtils.IS_OS_UNIX) {\n+      try {\n+        SignalLogger.INSTANCE.register(LOG);\n+      } catch (Throwable t) {\n+        LOG.warn(\"failed to register any UNIX signal loggers: \", t);\n+      }\n+    }\n+    ShutdownHookManager.get().addShutdownHook(\n+      new Runnable() {\n+        @Override\n+        public void run() {\n+          LOG.info(toStartupShutdownString(\"SHUTDOWN_MSG: \", new String[]{\n+            \"Shutting down \" + classname + \" at \" + hostname}));\n+        }\n+      }, SHUTDOWN_HOOK_PRIORITY);\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static void startupShutdownMessage(Class\u003c?\u003e clazz, String[] args,\n                                     final LogAdapter LOG) { \n    final String hostname \u003d NetUtils.getHostname();\n    final String classname \u003d clazz.getSimpleName();\n    LOG.info(\n        toStartupShutdownString(\"STARTUP_MSG: \", new String[] {\n            \"Starting \" + classname,\n            \"  host \u003d \" + hostname,\n            \"  args \u003d \" + Arrays.asList(args),\n            \"  version \u003d \" + VersionInfo.getVersion(),\n            \"  classpath \u003d \" + System.getProperty(\"java.class.path\"),\n            \"  build \u003d \" + VersionInfo.getUrl() + \" -r \"\n                         + VersionInfo.getRevision()  \n                         + \"; compiled by \u0027\" + VersionInfo.getUser()\n                         + \"\u0027 on \" + VersionInfo.getDate(),\n            \"  java \u003d \" + System.getProperty(\"java.version\") }\n        )\n      );\n\n    if (SystemUtils.IS_OS_UNIX) {\n      try {\n        SignalLogger.INSTANCE.register(LOG);\n      } catch (Throwable t) {\n        LOG.warn(\"failed to register any UNIX signal loggers: \", t);\n      }\n    }\n    ShutdownHookManager.get().addShutdownHook(\n      new Runnable() {\n        @Override\n        public void run() {\n          LOG.info(toStartupShutdownString(\"SHUTDOWN_MSG: \", new String[]{\n            \"Shutting down \" + classname + \" at \" + hostname}));\n        }\n      }, SHUTDOWN_HOOK_PRIORITY);\n\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java"
    }
  }
}