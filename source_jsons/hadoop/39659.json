{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeafQueue.java",
  "functionName": "releaseContainers",
  "functionId": "releaseContainers___clusterResource-Resource__request-ResourceCommitRequest__FiCaSchedulerApp,FiCaSchedulerNode__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
  "functionStartLine": 1283,
  "functionEndLine": 1303,
  "numCommitsSeen": 176,
  "timeTaken": 3017,
  "changeHistory": [
    "de3b4aac561258ad242a3c5ed1c919428893fd4c"
  ],
  "changeHistoryShort": {
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
      "commitDate": "07/11/16 10:14 AM",
      "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,21 @@\n+  private void releaseContainers(Resource clusterResource,\n+      ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e request) {\n+    for (SchedulerContainer\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e c : request\n+        .getContainersToRelease()) {\n+      internalReleaseContainer(clusterResource, c);\n+    }\n+\n+    // Handle container reservation looking, or lazy preemption case:\n+    if (null !\u003d request.getContainersToAllocate() \u0026\u0026 !request\n+        .getContainersToAllocate().isEmpty()) {\n+      for (ContainerAllocationProposal\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e context : request\n+          .getContainersToAllocate()) {\n+        if (null !\u003d context.getToRelease()) {\n+          for (SchedulerContainer\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e c : context\n+              .getToRelease()) {\n+            internalReleaseContainer(clusterResource, c);\n+          }\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void releaseContainers(Resource clusterResource,\n      ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e request) {\n    for (SchedulerContainer\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e c : request\n        .getContainersToRelease()) {\n      internalReleaseContainer(clusterResource, c);\n    }\n\n    // Handle container reservation looking, or lazy preemption case:\n    if (null !\u003d request.getContainersToAllocate() \u0026\u0026 !request\n        .getContainersToAllocate().isEmpty()) {\n      for (ContainerAllocationProposal\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e context : request\n          .getContainersToAllocate()) {\n        if (null !\u003d context.getToRelease()) {\n          for (SchedulerContainer\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e c : context\n              .getToRelease()) {\n            internalReleaseContainer(clusterResource, c);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
    }
  }
}