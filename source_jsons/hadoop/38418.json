{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMNodeLabelsManager.java",
  "functionName": "pullRMNodeLabelsInfo",
  "functionId": "pullRMNodeLabelsInfo",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/RMNodeLabelsManager.java",
  "functionStartLine": 569,
  "functionEndLine": 584,
  "numCommitsSeen": 22,
  "timeTaken": 1945,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0",
    "b7442bf92eb6e1ae64a0f9644ffc2eee4597aad5"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0": "Ymultichange(Yreturntypechange,Ybodychange)",
    "b7442bf92eb6e1ae64a0f9644ffc2eee4597aad5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "19/06/17 10:12 AM",
      "commitNameOld": "ee89ac84e68d3e181b75c63f74a0444f9d28146f",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 626.19,
      "commitsBetweenForRepo": 5292,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public List\u003cRMNodeLabel\u003e pullRMNodeLabelsInfo() {\n+    readLock.lock();\n     try {\n-      readLock.lock();\n       List\u003cRMNodeLabel\u003e infos \u003d new ArrayList\u003cRMNodeLabel\u003e();\n \n       for (Entry\u003cString, RMNodeLabel\u003e entry : labelCollections.entrySet()) {\n         RMNodeLabel label \u003d entry.getValue();\n         infos.add(label.getCopy());\n       }\n \n       Collections.sort(infos);\n       return infos;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cRMNodeLabel\u003e pullRMNodeLabelsInfo() {\n    readLock.lock();\n    try {\n      List\u003cRMNodeLabel\u003e infos \u003d new ArrayList\u003cRMNodeLabel\u003e();\n\n      for (Entry\u003cString, RMNodeLabel\u003e entry : labelCollections.entrySet()) {\n        RMNodeLabel label \u003d entry.getValue();\n        infos.add(label.getCopy());\n      }\n\n      Collections.sort(infos);\n      return infos;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/RMNodeLabelsManager.java",
      "extendedDetails": {}
    },
    "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-3345. Add non-exclusive node label API. Contributed by Wangda Tan\n",
      "commitDate": "20/03/15 7:04 PM",
      "commitName": "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-3345. Add non-exclusive node label API. Contributed by Wangda Tan\n",
          "commitDate": "20/03/15 7:04 PM",
          "commitName": "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0",
          "commitAuthor": "Jian He",
          "commitDateOld": "18/02/15 11:51 AM",
          "commitNameOld": "f5da5566d9c392a5df71a2dce4c2d0d50eea51ee",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 30.26,
          "commitsBetweenForRepo": 262,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  public List\u003cNodeLabel\u003e pullRMNodeLabelsInfo() {\n+  public List\u003cRMNodeLabel\u003e pullRMNodeLabelsInfo() {\n     try {\n       readLock.lock();\n-      List\u003cNodeLabel\u003e infos \u003d new ArrayList\u003cNodeLabel\u003e();\n+      List\u003cRMNodeLabel\u003e infos \u003d new ArrayList\u003cRMNodeLabel\u003e();\n \n-      for (Entry\u003cString, NodeLabel\u003e entry : labelCollections.entrySet()) {\n-        NodeLabel label \u003d entry.getValue();\n+      for (Entry\u003cString, RMNodeLabel\u003e entry : labelCollections.entrySet()) {\n+        RMNodeLabel label \u003d entry.getValue();\n         infos.add(label.getCopy());\n       }\n \n       Collections.sort(infos);\n       return infos;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public List\u003cRMNodeLabel\u003e pullRMNodeLabelsInfo() {\n    try {\n      readLock.lock();\n      List\u003cRMNodeLabel\u003e infos \u003d new ArrayList\u003cRMNodeLabel\u003e();\n\n      for (Entry\u003cString, RMNodeLabel\u003e entry : labelCollections.entrySet()) {\n        RMNodeLabel label \u003d entry.getValue();\n        infos.add(label.getCopy());\n      }\n\n      Collections.sort(infos);\n      return infos;\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/RMNodeLabelsManager.java",
          "extendedDetails": {
            "oldValue": "List\u003cNodeLabel\u003e",
            "newValue": "List\u003cRMNodeLabel\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3345. Add non-exclusive node label API. Contributed by Wangda Tan\n",
          "commitDate": "20/03/15 7:04 PM",
          "commitName": "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0",
          "commitAuthor": "Jian He",
          "commitDateOld": "18/02/15 11:51 AM",
          "commitNameOld": "f5da5566d9c392a5df71a2dce4c2d0d50eea51ee",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 30.26,
          "commitsBetweenForRepo": 262,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  public List\u003cNodeLabel\u003e pullRMNodeLabelsInfo() {\n+  public List\u003cRMNodeLabel\u003e pullRMNodeLabelsInfo() {\n     try {\n       readLock.lock();\n-      List\u003cNodeLabel\u003e infos \u003d new ArrayList\u003cNodeLabel\u003e();\n+      List\u003cRMNodeLabel\u003e infos \u003d new ArrayList\u003cRMNodeLabel\u003e();\n \n-      for (Entry\u003cString, NodeLabel\u003e entry : labelCollections.entrySet()) {\n-        NodeLabel label \u003d entry.getValue();\n+      for (Entry\u003cString, RMNodeLabel\u003e entry : labelCollections.entrySet()) {\n+        RMNodeLabel label \u003d entry.getValue();\n         infos.add(label.getCopy());\n       }\n \n       Collections.sort(infos);\n       return infos;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public List\u003cRMNodeLabel\u003e pullRMNodeLabelsInfo() {\n    try {\n      readLock.lock();\n      List\u003cRMNodeLabel\u003e infos \u003d new ArrayList\u003cRMNodeLabel\u003e();\n\n      for (Entry\u003cString, RMNodeLabel\u003e entry : labelCollections.entrySet()) {\n        RMNodeLabel label \u003d entry.getValue();\n        infos.add(label.getCopy());\n      }\n\n      Collections.sort(infos);\n      return infos;\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/RMNodeLabelsManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "b7442bf92eb6e1ae64a0f9644ffc2eee4597aad5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2493. Added node-labels page on RM web UI. Contributed by Wangda Tan\n",
      "commitDate": "30/12/14 4:49 PM",
      "commitName": "b7442bf92eb6e1ae64a0f9644ffc2eee4597aad5",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,16 @@\n+  public List\u003cNodeLabel\u003e pullRMNodeLabelsInfo() {\n+    try {\n+      readLock.lock();\n+      List\u003cNodeLabel\u003e infos \u003d new ArrayList\u003cNodeLabel\u003e();\n+\n+      for (Entry\u003cString, NodeLabel\u003e entry : labelCollections.entrySet()) {\n+        NodeLabel label \u003d entry.getValue();\n+        infos.add(label.getCopy());\n+      }\n+\n+      Collections.sort(infos);\n+      return infos;\n+    } finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cNodeLabel\u003e pullRMNodeLabelsInfo() {\n    try {\n      readLock.lock();\n      List\u003cNodeLabel\u003e infos \u003d new ArrayList\u003cNodeLabel\u003e();\n\n      for (Entry\u003cString, NodeLabel\u003e entry : labelCollections.entrySet()) {\n        NodeLabel label \u003d entry.getValue();\n        infos.add(label.getCopy());\n      }\n\n      Collections.sort(infos);\n      return infos;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/RMNodeLabelsManager.java"
    }
  }
}