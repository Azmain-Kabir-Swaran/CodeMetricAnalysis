{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairSharePolicy.java",
  "functionName": "compareDemand",
  "functionId": "compareDemand___s1-Schedulable__s2-Schedulable",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/FairSharePolicy.java",
  "functionStartLine": 119,
  "functionEndLine": 131,
  "numCommitsSeen": 25,
  "timeTaken": 1324,
  "changeHistory": [
    "8a6bb8409c2dc695c0ffc70df0528d7f8bd5d795",
    "f81a4efb8c40f99a9a6b7b42d3b6eeedf43eb27a"
  ],
  "changeHistoryShort": {
    "8a6bb8409c2dc695c0ffc70df0528d7f8bd5d795": "Ybodychange",
    "f81a4efb8c40f99a9a6b7b42d3b6eeedf43eb27a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8a6bb8409c2dc695c0ffc70df0528d7f8bd5d795": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6964. Fair scheduler misuses Resources operations. (Daniel Templeton and Szilard Nemeth via Haibo Chen)\n",
      "commitDate": "20/07/18 10:46 AM",
      "commitName": "8a6bb8409c2dc695c0ffc70df0528d7f8bd5d795",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "14/09/17 11:23 AM",
      "commitNameOld": "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 308.97,
      "commitsBetweenForRepo": 2762,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     private int compareDemand(Schedulable s1, Schedulable s2) {\n       int res \u003d 0;\n-      Resource demand1 \u003d s1.getDemand();\n-      Resource demand2 \u003d s2.getDemand();\n-      if (demand1.equals(Resources.none()) \u0026\u0026 Resources.greaterThan(\n-          RESOURCE_CALCULATOR, null, demand2, Resources.none())) {\n+      long demand1 \u003d s1.getDemand().getMemorySize();\n+      long demand2 \u003d s2.getDemand().getMemorySize();\n+\n+      if ((demand1 \u003d\u003d 0) \u0026\u0026 (demand2 \u003e 0)) {\n         res \u003d 1;\n-      } else if (demand2.equals(Resources.none()) \u0026\u0026 Resources.greaterThan(\n-          RESOURCE_CALCULATOR, null, demand1, Resources.none())) {\n+      } else if ((demand2 \u003d\u003d 0) \u0026\u0026 (demand1 \u003e 0)) {\n         res \u003d -1;\n       }\n+\n       return res;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private int compareDemand(Schedulable s1, Schedulable s2) {\n      int res \u003d 0;\n      long demand1 \u003d s1.getDemand().getMemorySize();\n      long demand2 \u003d s2.getDemand().getMemorySize();\n\n      if ((demand1 \u003d\u003d 0) \u0026\u0026 (demand2 \u003e 0)) {\n        res \u003d 1;\n      } else if ((demand2 \u003d\u003d 0) \u0026\u0026 (demand1 \u003e 0)) {\n        res \u003d -1;\n      }\n\n      return res;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/FairSharePolicy.java",
      "extendedDetails": {}
    },
    "f81a4efb8c40f99a9a6b7b42d3b6eeedf43eb27a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6307. Refactor FairShareComparator#compare (Contributed by Yufei Gu via Daniel Templeton)\n",
      "commitDate": "25/07/17 1:00 PM",
      "commitName": "f81a4efb8c40f99a9a6b7b42d3b6eeedf43eb27a",
      "commitAuthor": "Daniel Templeton",
      "diff": "@@ -0,0 +1,13 @@\n+    private int compareDemand(Schedulable s1, Schedulable s2) {\n+      int res \u003d 0;\n+      Resource demand1 \u003d s1.getDemand();\n+      Resource demand2 \u003d s2.getDemand();\n+      if (demand1.equals(Resources.none()) \u0026\u0026 Resources.greaterThan(\n+          RESOURCE_CALCULATOR, null, demand2, Resources.none())) {\n+        res \u003d 1;\n+      } else if (demand2.equals(Resources.none()) \u0026\u0026 Resources.greaterThan(\n+          RESOURCE_CALCULATOR, null, demand1, Resources.none())) {\n+        res \u003d -1;\n+      }\n+      return res;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private int compareDemand(Schedulable s1, Schedulable s2) {\n      int res \u003d 0;\n      Resource demand1 \u003d s1.getDemand();\n      Resource demand2 \u003d s2.getDemand();\n      if (demand1.equals(Resources.none()) \u0026\u0026 Resources.greaterThan(\n          RESOURCE_CALCULATOR, null, demand2, Resources.none())) {\n        res \u003d 1;\n      } else if (demand2.equals(Resources.none()) \u0026\u0026 Resources.greaterThan(\n          RESOURCE_CALCULATOR, null, demand1, Resources.none())) {\n        res \u003d -1;\n      }\n      return res;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/FairSharePolicy.java"
    }
  }
}