{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JMXJsonServlet.java",
  "functionName": "writeObject",
  "functionId": "writeObject___jg-JsonGenerator__value-Object",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/jmx/JMXJsonServlet.java",
  "functionStartLine": 389,
  "functionEndLine": 428,
  "numCommitsSeen": 21,
  "timeTaken": 981,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "babd19de331c875a1dffee908617c07c3e1eb31b"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "babd19de331c875a1dffee908617c07c3e1eb31b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void writeObject(JsonGenerator jg, Object value) throws IOException {\n    if(value \u003d\u003d null) {\n      jg.writeNull();\n    } else {\n      Class\u003c?\u003e c \u003d value.getClass();\n      if (c.isArray()) {\n        jg.writeStartArray();\n        int len \u003d Array.getLength(value);\n        for (int j \u003d 0; j \u003c len; j++) {\n          Object item \u003d Array.get(value, j);\n          writeObject(jg, item);\n        }\n        jg.writeEndArray();\n      } else if(value instanceof Number) {\n        Number n \u003d (Number)value;\n        jg.writeNumber(n.toString());\n      } else if(value instanceof Boolean) {\n        Boolean b \u003d (Boolean)value;\n        jg.writeBoolean(b);\n      } else if(value instanceof CompositeData) {\n        CompositeData cds \u003d (CompositeData)value;\n        CompositeType comp \u003d cds.getCompositeType();\n        Set\u003cString\u003e keys \u003d comp.keySet();\n        jg.writeStartObject();\n        for(String key: keys) {\n          writeAttribute(jg, key, cds.get(key));\n        }\n        jg.writeEndObject();\n      } else if(value instanceof TabularData) {\n        TabularData tds \u003d (TabularData)value;\n        jg.writeStartArray();\n        for(Object entry : tds.values()) {\n          writeObject(jg, entry);\n        }\n        jg.writeEndArray();\n      } else {\n        jg.writeString(value.toString());\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/jmx/JMXJsonServlet.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/jmx/JMXJsonServlet.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/jmx/JMXJsonServlet.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void writeObject(JsonGenerator jg, Object value) throws IOException {\n    if(value \u003d\u003d null) {\n      jg.writeNull();\n    } else {\n      Class\u003c?\u003e c \u003d value.getClass();\n      if (c.isArray()) {\n        jg.writeStartArray();\n        int len \u003d Array.getLength(value);\n        for (int j \u003d 0; j \u003c len; j++) {\n          Object item \u003d Array.get(value, j);\n          writeObject(jg, item);\n        }\n        jg.writeEndArray();\n      } else if(value instanceof Number) {\n        Number n \u003d (Number)value;\n        jg.writeNumber(n.toString());\n      } else if(value instanceof Boolean) {\n        Boolean b \u003d (Boolean)value;\n        jg.writeBoolean(b);\n      } else if(value instanceof CompositeData) {\n        CompositeData cds \u003d (CompositeData)value;\n        CompositeType comp \u003d cds.getCompositeType();\n        Set\u003cString\u003e keys \u003d comp.keySet();\n        jg.writeStartObject();\n        for(String key: keys) {\n          writeAttribute(jg, key, cds.get(key));\n        }\n        jg.writeEndObject();\n      } else if(value instanceof TabularData) {\n        TabularData tds \u003d (TabularData)value;\n        jg.writeStartArray();\n        for(Object entry : tds.values()) {\n          writeObject(jg, entry);\n        }\n        jg.writeEndArray();\n      } else {\n        jg.writeString(value.toString());\n      }\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/jmx/JMXJsonServlet.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/jmx/JMXJsonServlet.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/jmx/JMXJsonServlet.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void writeObject(JsonGenerator jg, Object value) throws IOException {\n    if(value \u003d\u003d null) {\n      jg.writeNull();\n    } else {\n      Class\u003c?\u003e c \u003d value.getClass();\n      if (c.isArray()) {\n        jg.writeStartArray();\n        int len \u003d Array.getLength(value);\n        for (int j \u003d 0; j \u003c len; j++) {\n          Object item \u003d Array.get(value, j);\n          writeObject(jg, item);\n        }\n        jg.writeEndArray();\n      } else if(value instanceof Number) {\n        Number n \u003d (Number)value;\n        jg.writeNumber(n.toString());\n      } else if(value instanceof Boolean) {\n        Boolean b \u003d (Boolean)value;\n        jg.writeBoolean(b);\n      } else if(value instanceof CompositeData) {\n        CompositeData cds \u003d (CompositeData)value;\n        CompositeType comp \u003d cds.getCompositeType();\n        Set\u003cString\u003e keys \u003d comp.keySet();\n        jg.writeStartObject();\n        for(String key: keys) {\n          writeAttribute(jg, key, cds.get(key));\n        }\n        jg.writeEndObject();\n      } else if(value instanceof TabularData) {\n        TabularData tds \u003d (TabularData)value;\n        jg.writeStartArray();\n        for(Object entry : tds.values()) {\n          writeObject(jg, entry);\n        }\n        jg.writeEndArray();\n      } else {\n        jg.writeString(value.toString());\n      }\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/jmx/JMXJsonServlet.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/jmx/JMXJsonServlet.java",
        "newPath": "common/src/java/org/apache/hadoop/jmx/JMXJsonServlet.java"
      }
    },
    "babd19de331c875a1dffee908617c07c3e1eb31b": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7144. Expose JMX metrics via JSON servlet.\nContributed by Robert Joseph Evans\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1131289 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/11 4:40 PM",
      "commitName": "babd19de331c875a1dffee908617c07c3e1eb31b",
      "commitAuthor": "Christopher Douglas",
      "diff": "@@ -0,0 +1,40 @@\n+  private void writeObject(JsonGenerator jg, Object value) throws IOException {\n+    if(value \u003d\u003d null) {\n+      jg.writeNull();\n+    } else {\n+      Class\u003c?\u003e c \u003d value.getClass();\n+      if (c.isArray()) {\n+        jg.writeStartArray();\n+        int len \u003d Array.getLength(value);\n+        for (int j \u003d 0; j \u003c len; j++) {\n+          Object item \u003d Array.get(value, j);\n+          writeObject(jg, item);\n+        }\n+        jg.writeEndArray();\n+      } else if(value instanceof Number) {\n+        Number n \u003d (Number)value;\n+        jg.writeNumber(n.toString());\n+      } else if(value instanceof Boolean) {\n+        Boolean b \u003d (Boolean)value;\n+        jg.writeBoolean(b);\n+      } else if(value instanceof CompositeData) {\n+        CompositeData cds \u003d (CompositeData)value;\n+        CompositeType comp \u003d cds.getCompositeType();\n+        Set\u003cString\u003e keys \u003d comp.keySet();\n+        jg.writeStartObject();\n+        for(String key: keys) {\n+          writeAttribute(jg, key, cds.get(key));\n+        }\n+        jg.writeEndObject();\n+      } else if(value instanceof TabularData) {\n+        TabularData tds \u003d (TabularData)value;\n+        jg.writeStartArray();\n+        for(Object entry : tds.values()) {\n+          writeObject(jg, entry);\n+        }\n+        jg.writeEndArray();\n+      } else {\n+        jg.writeString(value.toString());\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void writeObject(JsonGenerator jg, Object value) throws IOException {\n    if(value \u003d\u003d null) {\n      jg.writeNull();\n    } else {\n      Class\u003c?\u003e c \u003d value.getClass();\n      if (c.isArray()) {\n        jg.writeStartArray();\n        int len \u003d Array.getLength(value);\n        for (int j \u003d 0; j \u003c len; j++) {\n          Object item \u003d Array.get(value, j);\n          writeObject(jg, item);\n        }\n        jg.writeEndArray();\n      } else if(value instanceof Number) {\n        Number n \u003d (Number)value;\n        jg.writeNumber(n.toString());\n      } else if(value instanceof Boolean) {\n        Boolean b \u003d (Boolean)value;\n        jg.writeBoolean(b);\n      } else if(value instanceof CompositeData) {\n        CompositeData cds \u003d (CompositeData)value;\n        CompositeType comp \u003d cds.getCompositeType();\n        Set\u003cString\u003e keys \u003d comp.keySet();\n        jg.writeStartObject();\n        for(String key: keys) {\n          writeAttribute(jg, key, cds.get(key));\n        }\n        jg.writeEndObject();\n      } else if(value instanceof TabularData) {\n        TabularData tds \u003d (TabularData)value;\n        jg.writeStartArray();\n        for(Object entry : tds.values()) {\n          writeObject(jg, entry);\n        }\n        jg.writeEndArray();\n      } else {\n        jg.writeString(value.toString());\n      }\n    }\n  }",
      "path": "src/java/org/apache/hadoop/jmx/JMXJsonServlet.java"
    }
  }
}