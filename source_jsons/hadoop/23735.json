{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CachedHistoryStorage.java",
  "functionName": "getFullJob",
  "functionId": "getFullJob___jobId-JobId",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CachedHistoryStorage.java",
  "functionStartLine": 196,
  "functionEndLine": 209,
  "numCommitsSeen": 10,
  "timeTaken": 1321,
  "changeHistory": [
    "0f72da7e281376f4fcbfbf3fb33f5d7fedcdb1aa",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "7d04a96027ad75877b41b7cd8f67455dd13159d7",
    "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f"
  ],
  "changeHistoryShort": {
    "0f72da7e281376f4fcbfbf3fb33f5d7fedcdb1aa": "Ybodychange",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Ybodychange",
    "7d04a96027ad75877b41b7cd8f67455dd13159d7": "Ymultichange(Ymodifierchange,Ybodychange)",
    "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0f72da7e281376f4fcbfbf3fb33f5d7fedcdb1aa": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6622. Add capability to set JHS job cache to a task-based limit (rchiang via rkanter)\n",
      "commitDate": "26/02/16 5:57 PM",
      "commitName": "0f72da7e281376f4fcbfbf3fb33f5d7fedcdb1aa",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "29/07/13 3:33 PM",
      "commitNameOld": "8bb035509ea195ec03b8295a7abd11ce675a4d85",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 942.14,
      "commitsBetweenForRepo": 7216,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,14 @@\n   public Job getFullJob(JobId jobId) {\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Looking for Job \" + jobId);\n-    }\n+    Job retVal \u003d null;\n     try {\n-      HistoryFileInfo fileInfo \u003d hsManager.getFileInfo(jobId);\n-      Job result \u003d null;\n-      if (fileInfo !\u003d null) {\n-        result \u003d loadedJobCache.get(jobId);\n-        if (result \u003d\u003d null) {\n-          result \u003d loadJob(fileInfo);\n-        } else if(fileInfo.isDeleted()) {\n-          loadedJobCache.remove(jobId);\n-          result \u003d null;\n-        }\n+      retVal \u003d loadedJobCache.getUnchecked(jobId);\n+    } catch (UncheckedExecutionException e) {\n+      if (e.getCause() instanceof HSFileRuntimeException) {\n+        LOG.error(e.getCause().getMessage());\n+        return null;\n       } else {\n-        loadedJobCache.remove(jobId);\n+        throw new YarnRuntimeException(e.getCause());\n       }\n-      return result;\n-    } catch (IOException e) {\n-      throw new YarnRuntimeException(e);\n     }\n+    return retVal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Job getFullJob(JobId jobId) {\n    Job retVal \u003d null;\n    try {\n      retVal \u003d loadedJobCache.getUnchecked(jobId);\n    } catch (UncheckedExecutionException e) {\n      if (e.getCause() instanceof HSFileRuntimeException) {\n        LOG.error(e.getCause().getMessage());\n        return null;\n      } else {\n        throw new YarnRuntimeException(e.getCause());\n      }\n    }\n    return retVal;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CachedHistoryStorage.java",
      "extendedDetails": {}
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Ybodychange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/04/12 6:59 PM",
      "commitNameOld": "7d04a96027ad75877b41b7cd8f67455dd13159d7",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 412.09,
      "commitsBetweenForRepo": 2335,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public Job getFullJob(JobId jobId) {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Looking for Job \" + jobId);\n     }\n     try {\n       HistoryFileInfo fileInfo \u003d hsManager.getFileInfo(jobId);\n       Job result \u003d null;\n       if (fileInfo !\u003d null) {\n         result \u003d loadedJobCache.get(jobId);\n         if (result \u003d\u003d null) {\n           result \u003d loadJob(fileInfo);\n         } else if(fileInfo.isDeleted()) {\n           loadedJobCache.remove(jobId);\n           result \u003d null;\n         }\n       } else {\n         loadedJobCache.remove(jobId);\n       }\n       return result;\n     } catch (IOException e) {\n-      throw new YarnException(e);\n+      throw new YarnRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Job getFullJob(JobId jobId) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Looking for Job \" + jobId);\n    }\n    try {\n      HistoryFileInfo fileInfo \u003d hsManager.getFileInfo(jobId);\n      Job result \u003d null;\n      if (fileInfo !\u003d null) {\n        result \u003d loadedJobCache.get(jobId);\n        if (result \u003d\u003d null) {\n          result \u003d loadJob(fileInfo);\n        } else if(fileInfo.isDeleted()) {\n          loadedJobCache.remove(jobId);\n          result \u003d null;\n        }\n      } else {\n        loadedJobCache.remove(jobId);\n      }\n      return result;\n    } catch (IOException e) {\n      throw new YarnRuntimeException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CachedHistoryStorage.java",
      "extendedDetails": {}
    },
    "7d04a96027ad75877b41b7cd8f67455dd13159d7": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-3972. Fix locking and exception issues in JobHistory server. (Contributed by Robert Joseph Evans)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1327354 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/04/12 6:59 PM",
      "commitName": "7d04a96027ad75877b41b7cd8f67455dd13159d7",
      "commitAuthor": "Siddharth Seth",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "MAPREDUCE-3972. Fix locking and exception issues in JobHistory server. (Contributed by Robert Joseph Evans)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1327354 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/04/12 6:59 PM",
          "commitName": "7d04a96027ad75877b41b7cd8f67455dd13159d7",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "10/04/12 11:11 AM",
          "commitNameOld": "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f",
          "commitAuthorOld": "Thomas Graves",
          "daysBetweenCommits": 7.32,
          "commitsBetweenForRepo": 59,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,23 @@\n-  public synchronized Job getFullJob(JobId jobId) {\n+  public Job getFullJob(JobId jobId) {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Looking for Job \" + jobId);\n     }\n     try {\n-      Job result \u003d loadedJobCache.get(jobId);\n-      if (result \u003d\u003d null) {\n-        MetaInfo metaInfo \u003d hsManager.getMetaInfo(jobId);\n-        if (metaInfo !\u003d null) {\n-          result \u003d loadJob(metaInfo);\n+      HistoryFileInfo fileInfo \u003d hsManager.getFileInfo(jobId);\n+      Job result \u003d null;\n+      if (fileInfo !\u003d null) {\n+        result \u003d loadedJobCache.get(jobId);\n+        if (result \u003d\u003d null) {\n+          result \u003d loadJob(fileInfo);\n+        } else if(fileInfo.isDeleted()) {\n+          loadedJobCache.remove(jobId);\n+          result \u003d null;\n         }\n+      } else {\n+        loadedJobCache.remove(jobId);\n       }\n       return result;\n     } catch (IOException e) {\n       throw new YarnException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Job getFullJob(JobId jobId) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Looking for Job \" + jobId);\n    }\n    try {\n      HistoryFileInfo fileInfo \u003d hsManager.getFileInfo(jobId);\n      Job result \u003d null;\n      if (fileInfo !\u003d null) {\n        result \u003d loadedJobCache.get(jobId);\n        if (result \u003d\u003d null) {\n          result \u003d loadJob(fileInfo);\n        } else if(fileInfo.isDeleted()) {\n          loadedJobCache.remove(jobId);\n          result \u003d null;\n        }\n      } else {\n        loadedJobCache.remove(jobId);\n      }\n      return result;\n    } catch (IOException e) {\n      throw new YarnException(e);\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CachedHistoryStorage.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3972. Fix locking and exception issues in JobHistory server. (Contributed by Robert Joseph Evans)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1327354 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/04/12 6:59 PM",
          "commitName": "7d04a96027ad75877b41b7cd8f67455dd13159d7",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "10/04/12 11:11 AM",
          "commitNameOld": "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f",
          "commitAuthorOld": "Thomas Graves",
          "daysBetweenCommits": 7.32,
          "commitsBetweenForRepo": 59,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,23 @@\n-  public synchronized Job getFullJob(JobId jobId) {\n+  public Job getFullJob(JobId jobId) {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Looking for Job \" + jobId);\n     }\n     try {\n-      Job result \u003d loadedJobCache.get(jobId);\n-      if (result \u003d\u003d null) {\n-        MetaInfo metaInfo \u003d hsManager.getMetaInfo(jobId);\n-        if (metaInfo !\u003d null) {\n-          result \u003d loadJob(metaInfo);\n+      HistoryFileInfo fileInfo \u003d hsManager.getFileInfo(jobId);\n+      Job result \u003d null;\n+      if (fileInfo !\u003d null) {\n+        result \u003d loadedJobCache.get(jobId);\n+        if (result \u003d\u003d null) {\n+          result \u003d loadJob(fileInfo);\n+        } else if(fileInfo.isDeleted()) {\n+          loadedJobCache.remove(jobId);\n+          result \u003d null;\n         }\n+      } else {\n+        loadedJobCache.remove(jobId);\n       }\n       return result;\n     } catch (IOException e) {\n       throw new YarnException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Job getFullJob(JobId jobId) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Looking for Job \" + jobId);\n    }\n    try {\n      HistoryFileInfo fileInfo \u003d hsManager.getFileInfo(jobId);\n      Job result \u003d null;\n      if (fileInfo !\u003d null) {\n        result \u003d loadedJobCache.get(jobId);\n        if (result \u003d\u003d null) {\n          result \u003d loadJob(fileInfo);\n        } else if(fileInfo.isDeleted()) {\n          loadedJobCache.remove(jobId);\n          result \u003d null;\n        }\n      } else {\n        loadedJobCache.remove(jobId);\n      }\n      return result;\n    } catch (IOException e) {\n      throw new YarnException(e);\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CachedHistoryStorage.java",
          "extendedDetails": {}
        }
      ]
    },
    "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-4059. The history server should have a separate pluggable storage/query interface. (Robert Evans via tgraves).\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1311896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/04/12 11:11 AM",
      "commitName": "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f",
      "commitAuthor": "Thomas Graves",
      "diff": "@@ -0,0 +1,17 @@\n+  public synchronized Job getFullJob(JobId jobId) {\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Looking for Job \" + jobId);\n+    }\n+    try {\n+      Job result \u003d loadedJobCache.get(jobId);\n+      if (result \u003d\u003d null) {\n+        MetaInfo metaInfo \u003d hsManager.getMetaInfo(jobId);\n+        if (metaInfo !\u003d null) {\n+          result \u003d loadJob(metaInfo);\n+        }\n+      }\n+      return result;\n+    } catch (IOException e) {\n+      throw new YarnException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized Job getFullJob(JobId jobId) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Looking for Job \" + jobId);\n    }\n    try {\n      Job result \u003d loadedJobCache.get(jobId);\n      if (result \u003d\u003d null) {\n        MetaInfo metaInfo \u003d hsManager.getMetaInfo(jobId);\n        if (metaInfo !\u003d null) {\n          result \u003d loadJob(metaInfo);\n        }\n      }\n      return result;\n    } catch (IOException e) {\n      throw new YarnException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/CachedHistoryStorage.java"
    }
  }
}