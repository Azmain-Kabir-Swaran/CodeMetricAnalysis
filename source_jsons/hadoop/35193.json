{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMLeveldbStateStoreService.java",
  "functionName": "getNextStartedResource",
  "functionId": "getNextStartedResource___iter-LeveldbIterator__keyPrefix-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
  "functionStartLine": 915,
  "functionEndLine": 931,
  "numCommitsSeen": 83,
  "timeTaken": 5226,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "250b50018e8c94d8ca83ff981b01f26bb68c0842",
    "66598697a6e777615334ebde5ba7738135da83ae"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "250b50018e8c94d8ca83ff981b01f26bb68c0842": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
    "66598697a6e777615334ebde5ba7738135da83ae": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "13/09/18 11:28 AM",
      "commitNameOld": "250b50018e8c94d8ca83ff981b01f26bb68c0842",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 183.2,
      "commitsBetweenForRepo": 1474,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,17 @@\n   private Entry\u003cLocalResourceProto, Path\u003e getNextStartedResource(\n       LeveldbIterator iter, String keyPrefix) throws IOException {\n     Entry\u003cLocalResourceProto, Path\u003e nextStartedResource \u003d null;\n     if (iter.hasNext()){\n       Entry\u003cbyte[], byte[]\u003e entry \u003d iter.next();\n       String key \u003d asString(entry.getKey());\n       if (!key.startsWith(keyPrefix)) {\n         return null;\n       }\n \n       Path localPath \u003d new Path(key.substring(keyPrefix.length()));\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Loading in-progress resource at \" + localPath);\n-      }\n+      LOG.debug(\"Loading in-progress resource at {}\", localPath);\n       nextStartedResource \u003d new SimpleEntry\u003cLocalResourceProto, Path\u003e(\n           LocalResourceProto.parseFrom(entry.getValue()), localPath);\n     }\n     return nextStartedResource;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Entry\u003cLocalResourceProto, Path\u003e getNextStartedResource(\n      LeveldbIterator iter, String keyPrefix) throws IOException {\n    Entry\u003cLocalResourceProto, Path\u003e nextStartedResource \u003d null;\n    if (iter.hasNext()){\n      Entry\u003cbyte[], byte[]\u003e entry \u003d iter.next();\n      String key \u003d asString(entry.getKey());\n      if (!key.startsWith(keyPrefix)) {\n        return null;\n      }\n\n      Path localPath \u003d new Path(key.substring(keyPrefix.length()));\n      LOG.debug(\"Loading in-progress resource at {}\", localPath);\n      nextStartedResource \u003d new SimpleEntry\u003cLocalResourceProto, Path\u003e(\n          LocalResourceProto.parseFrom(entry.getValue()), localPath);\n    }\n    return nextStartedResource;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "250b50018e8c94d8ca83ff981b01f26bb68c0842": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-8680. YARN NM: Implement Iterable Abstraction for LocalResourceTracker state. Contributed by Pradeep Ambati\n",
      "commitDate": "13/09/18 11:28 AM",
      "commitName": "250b50018e8c94d8ca83ff981b01f26bb68c0842",
      "commitAuthor": "Jason Lowe",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-8680. YARN NM: Implement Iterable Abstraction for LocalResourceTracker state. Contributed by Pradeep Ambati\n",
          "commitDate": "13/09/18 11:28 AM",
          "commitName": "250b50018e8c94d8ca83ff981b01f26bb68c0842",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "20/08/18 8:14 AM",
          "commitNameOld": "65e7469712be6cf393e29ef73cc94727eec81227",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 24.13,
          "commitsBetweenForRepo": 188,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,19 @@\n-  private Map\u003cLocalResourceProto, Path\u003e loadStartedResources(\n+  private Entry\u003cLocalResourceProto, Path\u003e getNextStartedResource(\n       LeveldbIterator iter, String keyPrefix) throws IOException {\n-    Map\u003cLocalResourceProto, Path\u003e rsrcs \u003d\n-        new HashMap\u003cLocalResourceProto, Path\u003e();\n-    while (iter.hasNext()) {\n-      Entry\u003cbyte[],byte[]\u003e entry \u003d iter.peekNext();\n+    Entry\u003cLocalResourceProto, Path\u003e nextStartedResource \u003d null;\n+    if (iter.hasNext()){\n+      Entry\u003cbyte[], byte[]\u003e entry \u003d iter.next();\n       String key \u003d asString(entry.getKey());\n       if (!key.startsWith(keyPrefix)) {\n-        break;\n+        return null;\n       }\n \n       Path localPath \u003d new Path(key.substring(keyPrefix.length()));\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Loading in-progress resource at \" + localPath);\n       }\n-      rsrcs.put(LocalResourceProto.parseFrom(entry.getValue()), localPath);\n-      iter.next();\n+      nextStartedResource \u003d new SimpleEntry\u003cLocalResourceProto, Path\u003e(\n+          LocalResourceProto.parseFrom(entry.getValue()), localPath);\n     }\n-\n-    return rsrcs;\n+    return nextStartedResource;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Entry\u003cLocalResourceProto, Path\u003e getNextStartedResource(\n      LeveldbIterator iter, String keyPrefix) throws IOException {\n    Entry\u003cLocalResourceProto, Path\u003e nextStartedResource \u003d null;\n    if (iter.hasNext()){\n      Entry\u003cbyte[], byte[]\u003e entry \u003d iter.next();\n      String key \u003d asString(entry.getKey());\n      if (!key.startsWith(keyPrefix)) {\n        return null;\n      }\n\n      Path localPath \u003d new Path(key.substring(keyPrefix.length()));\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Loading in-progress resource at \" + localPath);\n      }\n      nextStartedResource \u003d new SimpleEntry\u003cLocalResourceProto, Path\u003e(\n          LocalResourceProto.parseFrom(entry.getValue()), localPath);\n    }\n    return nextStartedResource;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
          "extendedDetails": {
            "oldValue": "loadStartedResources",
            "newValue": "getNextStartedResource"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-8680. YARN NM: Implement Iterable Abstraction for LocalResourceTracker state. Contributed by Pradeep Ambati\n",
          "commitDate": "13/09/18 11:28 AM",
          "commitName": "250b50018e8c94d8ca83ff981b01f26bb68c0842",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "20/08/18 8:14 AM",
          "commitNameOld": "65e7469712be6cf393e29ef73cc94727eec81227",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 24.13,
          "commitsBetweenForRepo": 188,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,19 @@\n-  private Map\u003cLocalResourceProto, Path\u003e loadStartedResources(\n+  private Entry\u003cLocalResourceProto, Path\u003e getNextStartedResource(\n       LeveldbIterator iter, String keyPrefix) throws IOException {\n-    Map\u003cLocalResourceProto, Path\u003e rsrcs \u003d\n-        new HashMap\u003cLocalResourceProto, Path\u003e();\n-    while (iter.hasNext()) {\n-      Entry\u003cbyte[],byte[]\u003e entry \u003d iter.peekNext();\n+    Entry\u003cLocalResourceProto, Path\u003e nextStartedResource \u003d null;\n+    if (iter.hasNext()){\n+      Entry\u003cbyte[], byte[]\u003e entry \u003d iter.next();\n       String key \u003d asString(entry.getKey());\n       if (!key.startsWith(keyPrefix)) {\n-        break;\n+        return null;\n       }\n \n       Path localPath \u003d new Path(key.substring(keyPrefix.length()));\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Loading in-progress resource at \" + localPath);\n       }\n-      rsrcs.put(LocalResourceProto.parseFrom(entry.getValue()), localPath);\n-      iter.next();\n+      nextStartedResource \u003d new SimpleEntry\u003cLocalResourceProto, Path\u003e(\n+          LocalResourceProto.parseFrom(entry.getValue()), localPath);\n     }\n-\n-    return rsrcs;\n+    return nextStartedResource;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Entry\u003cLocalResourceProto, Path\u003e getNextStartedResource(\n      LeveldbIterator iter, String keyPrefix) throws IOException {\n    Entry\u003cLocalResourceProto, Path\u003e nextStartedResource \u003d null;\n    if (iter.hasNext()){\n      Entry\u003cbyte[], byte[]\u003e entry \u003d iter.next();\n      String key \u003d asString(entry.getKey());\n      if (!key.startsWith(keyPrefix)) {\n        return null;\n      }\n\n      Path localPath \u003d new Path(key.substring(keyPrefix.length()));\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Loading in-progress resource at \" + localPath);\n      }\n      nextStartedResource \u003d new SimpleEntry\u003cLocalResourceProto, Path\u003e(\n          LocalResourceProto.parseFrom(entry.getValue()), localPath);\n    }\n    return nextStartedResource;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
          "extendedDetails": {
            "oldValue": "Map\u003cLocalResourceProto,Path\u003e",
            "newValue": "Entry\u003cLocalResourceProto,Path\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8680. YARN NM: Implement Iterable Abstraction for LocalResourceTracker state. Contributed by Pradeep Ambati\n",
          "commitDate": "13/09/18 11:28 AM",
          "commitName": "250b50018e8c94d8ca83ff981b01f26bb68c0842",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "20/08/18 8:14 AM",
          "commitNameOld": "65e7469712be6cf393e29ef73cc94727eec81227",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 24.13,
          "commitsBetweenForRepo": 188,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,19 @@\n-  private Map\u003cLocalResourceProto, Path\u003e loadStartedResources(\n+  private Entry\u003cLocalResourceProto, Path\u003e getNextStartedResource(\n       LeveldbIterator iter, String keyPrefix) throws IOException {\n-    Map\u003cLocalResourceProto, Path\u003e rsrcs \u003d\n-        new HashMap\u003cLocalResourceProto, Path\u003e();\n-    while (iter.hasNext()) {\n-      Entry\u003cbyte[],byte[]\u003e entry \u003d iter.peekNext();\n+    Entry\u003cLocalResourceProto, Path\u003e nextStartedResource \u003d null;\n+    if (iter.hasNext()){\n+      Entry\u003cbyte[], byte[]\u003e entry \u003d iter.next();\n       String key \u003d asString(entry.getKey());\n       if (!key.startsWith(keyPrefix)) {\n-        break;\n+        return null;\n       }\n \n       Path localPath \u003d new Path(key.substring(keyPrefix.length()));\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Loading in-progress resource at \" + localPath);\n       }\n-      rsrcs.put(LocalResourceProto.parseFrom(entry.getValue()), localPath);\n-      iter.next();\n+      nextStartedResource \u003d new SimpleEntry\u003cLocalResourceProto, Path\u003e(\n+          LocalResourceProto.parseFrom(entry.getValue()), localPath);\n     }\n-\n-    return rsrcs;\n+    return nextStartedResource;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Entry\u003cLocalResourceProto, Path\u003e getNextStartedResource(\n      LeveldbIterator iter, String keyPrefix) throws IOException {\n    Entry\u003cLocalResourceProto, Path\u003e nextStartedResource \u003d null;\n    if (iter.hasNext()){\n      Entry\u003cbyte[], byte[]\u003e entry \u003d iter.next();\n      String key \u003d asString(entry.getKey());\n      if (!key.startsWith(keyPrefix)) {\n        return null;\n      }\n\n      Path localPath \u003d new Path(key.substring(keyPrefix.length()));\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Loading in-progress resource at \" + localPath);\n      }\n      nextStartedResource \u003d new SimpleEntry\u003cLocalResourceProto, Path\u003e(\n          LocalResourceProto.parseFrom(entry.getValue()), localPath);\n    }\n    return nextStartedResource;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
          "extendedDetails": {}
        }
      ]
    },
    "66598697a6e777615334ebde5ba7738135da83ae": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1338. Recover localized resource cache state upon nodemanager restart (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598640 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/14 8:37 AM",
      "commitName": "66598697a6e777615334ebde5ba7738135da83ae",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,21 @@\n+  private Map\u003cLocalResourceProto, Path\u003e loadStartedResources(\n+      LeveldbIterator iter, String keyPrefix) throws IOException {\n+    Map\u003cLocalResourceProto, Path\u003e rsrcs \u003d\n+        new HashMap\u003cLocalResourceProto, Path\u003e();\n+    while (iter.hasNext()) {\n+      Entry\u003cbyte[],byte[]\u003e entry \u003d iter.peekNext();\n+      String key \u003d asString(entry.getKey());\n+      if (!key.startsWith(keyPrefix)) {\n+        break;\n+      }\n+\n+      Path localPath \u003d new Path(key.substring(keyPrefix.length()));\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Loading in-progress resource at \" + localPath);\n+      }\n+      rsrcs.put(LocalResourceProto.parseFrom(entry.getValue()), localPath);\n+      iter.next();\n+    }\n+\n+    return rsrcs;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Map\u003cLocalResourceProto, Path\u003e loadStartedResources(\n      LeveldbIterator iter, String keyPrefix) throws IOException {\n    Map\u003cLocalResourceProto, Path\u003e rsrcs \u003d\n        new HashMap\u003cLocalResourceProto, Path\u003e();\n    while (iter.hasNext()) {\n      Entry\u003cbyte[],byte[]\u003e entry \u003d iter.peekNext();\n      String key \u003d asString(entry.getKey());\n      if (!key.startsWith(keyPrefix)) {\n        break;\n      }\n\n      Path localPath \u003d new Path(key.substring(keyPrefix.length()));\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Loading in-progress resource at \" + localPath);\n      }\n      rsrcs.put(LocalResourceProto.parseFrom(entry.getValue()), localPath);\n      iter.next();\n    }\n\n    return rsrcs;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java"
    }
  }
}