{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacitySchedulerConfiguration.java",
  "functionName": "getQueueMappingEntity",
  "functionId": "getQueueMappingEntity___queueMappingSuffix-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
  "functionStartLine": 1042,
  "functionEndLine": 1069,
  "numCommitsSeen": 90,
  "timeTaken": 3164,
  "changeHistory": [
    "cdb2107066a2d8557270888c0a9a75f29a6853bf",
    "5462d2176f7a64b236f06700cd247f946798cb26",
    "a90471b3e65326cc18ed31fe21aef654833b5883"
  ],
  "changeHistoryShort": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": "Ybodychange",
    "5462d2176f7a64b236f06700cd247f946798cb26": "Ybodychange",
    "a90471b3e65326cc18ed31fe21aef654833b5883": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
      "commitDate": "25/03/20 4:20 AM",
      "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthor": "Sunil G",
      "commitDateOld": "15/01/20 12:55 AM",
      "commitNameOld": "7c5cecc3b3c00886a5bc39a9a8cad6ca1088b095",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 70.1,
      "commitsBetweenForRepo": 228,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,28 @@\n   public List\u003cQueueMappingEntity\u003e getQueueMappingEntity(\n       String queueMappingSuffix) {\n     String queueMappingName \u003d buildQueueMappingRuleProperty(queueMappingSuffix);\n \n     List\u003cQueueMappingEntity\u003e mappings \u003d\n         new ArrayList\u003cQueueMappingEntity\u003e();\n     Collection\u003cString\u003e mappingsString \u003d\n         getTrimmedStringCollection(queueMappingName);\n     for (String mappingValue : mappingsString) {\n       String[] mapping \u003d\n           StringUtils.getTrimmedStringCollection(mappingValue, \":\")\n               .toArray(new String[] {});\n       if (mapping.length !\u003d 2 || mapping[1].length() \u003d\u003d 0) {\n         throw new IllegalArgumentException(\n             \"Illegal queue mapping \" + mappingValue);\n       }\n \n-      QueueMappingEntity m \u003d new QueueMappingEntity(mapping[0], mapping[1]);\n+      //Mappings should be consistent, and have the parent path parsed\n+      // from the beginning\n+      QueueMappingEntity m \u003d new QueueMappingEntity(\n+          mapping[0],\n+          QueuePlacementRuleUtils.extractQueuePath(mapping[1]));\n \n       mappings.add(m);\n     }\n \n     return mappings;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cQueueMappingEntity\u003e getQueueMappingEntity(\n      String queueMappingSuffix) {\n    String queueMappingName \u003d buildQueueMappingRuleProperty(queueMappingSuffix);\n\n    List\u003cQueueMappingEntity\u003e mappings \u003d\n        new ArrayList\u003cQueueMappingEntity\u003e();\n    Collection\u003cString\u003e mappingsString \u003d\n        getTrimmedStringCollection(queueMappingName);\n    for (String mappingValue : mappingsString) {\n      String[] mapping \u003d\n          StringUtils.getTrimmedStringCollection(mappingValue, \":\")\n              .toArray(new String[] {});\n      if (mapping.length !\u003d 2 || mapping[1].length() \u003d\u003d 0) {\n        throw new IllegalArgumentException(\n            \"Illegal queue mapping \" + mappingValue);\n      }\n\n      //Mappings should be consistent, and have the parent path parsed\n      // from the beginning\n      QueueMappingEntity m \u003d new QueueMappingEntity(\n          mapping[0],\n          QueuePlacementRuleUtils.extractQueuePath(mapping[1]));\n\n      mappings.add(m);\n    }\n\n    return mappings;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "5462d2176f7a64b236f06700cd247f946798cb26": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9760. Support configuring application priorities on a workflow level. Contributed by Varun Saxena\n",
      "commitDate": "08/10/19 11:20 AM",
      "commitName": "5462d2176f7a64b236f06700cd247f946798cb26",
      "commitAuthor": "Jonathan Hung",
      "commitDateOld": "24/09/19 1:51 PM",
      "commitNameOld": "c2731d4b6399f88f76341ed697e80652ed1b61ea",
      "commitAuthorOld": "Jonathan Hung",
      "daysBetweenCommits": 13.89,
      "commitsBetweenForRepo": 125,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public List\u003cQueueMappingEntity\u003e getQueueMappingEntity(\n       String queueMappingSuffix) {\n     String queueMappingName \u003d buildQueueMappingRuleProperty(queueMappingSuffix);\n \n     List\u003cQueueMappingEntity\u003e mappings \u003d\n         new ArrayList\u003cQueueMappingEntity\u003e();\n     Collection\u003cString\u003e mappingsString \u003d\n         getTrimmedStringCollection(queueMappingName);\n     for (String mappingValue : mappingsString) {\n       String[] mapping \u003d\n-          getTrimmedStringCollection(mappingValue, \":\")\n+          StringUtils.getTrimmedStringCollection(mappingValue, \":\")\n               .toArray(new String[] {});\n       if (mapping.length !\u003d 2 || mapping[1].length() \u003d\u003d 0) {\n         throw new IllegalArgumentException(\n             \"Illegal queue mapping \" + mappingValue);\n       }\n \n       QueueMappingEntity m \u003d new QueueMappingEntity(mapping[0], mapping[1]);\n \n       mappings.add(m);\n     }\n \n     return mappings;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cQueueMappingEntity\u003e getQueueMappingEntity(\n      String queueMappingSuffix) {\n    String queueMappingName \u003d buildQueueMappingRuleProperty(queueMappingSuffix);\n\n    List\u003cQueueMappingEntity\u003e mappings \u003d\n        new ArrayList\u003cQueueMappingEntity\u003e();\n    Collection\u003cString\u003e mappingsString \u003d\n        getTrimmedStringCollection(queueMappingName);\n    for (String mappingValue : mappingsString) {\n      String[] mapping \u003d\n          StringUtils.getTrimmedStringCollection(mappingValue, \":\")\n              .toArray(new String[] {});\n      if (mapping.length !\u003d 2 || mapping[1].length() \u003d\u003d 0) {\n        throw new IllegalArgumentException(\n            \"Illegal queue mapping \" + mappingValue);\n      }\n\n      QueueMappingEntity m \u003d new QueueMappingEntity(mapping[0], mapping[1]);\n\n      mappings.add(m);\n    }\n\n    return mappings;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "a90471b3e65326cc18ed31fe21aef654833b5883": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8016. Refine PlacementRule interface and add a app-name queue mapping rule as an example. (Zian Chen via wangda)\n\nChange-Id: I35caf1480e0f76f5f3a53528af09312e39414bbb\n",
      "commitDate": "23/03/18 4:43 PM",
      "commitName": "a90471b3e65326cc18ed31fe21aef654833b5883",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,24 @@\n+  public List\u003cQueueMappingEntity\u003e getQueueMappingEntity(\n+      String queueMappingSuffix) {\n+    String queueMappingName \u003d buildQueueMappingRuleProperty(queueMappingSuffix);\n+\n+    List\u003cQueueMappingEntity\u003e mappings \u003d\n+        new ArrayList\u003cQueueMappingEntity\u003e();\n+    Collection\u003cString\u003e mappingsString \u003d\n+        getTrimmedStringCollection(queueMappingName);\n+    for (String mappingValue : mappingsString) {\n+      String[] mapping \u003d\n+          getTrimmedStringCollection(mappingValue, \":\")\n+              .toArray(new String[] {});\n+      if (mapping.length !\u003d 2 || mapping[1].length() \u003d\u003d 0) {\n+        throw new IllegalArgumentException(\n+            \"Illegal queue mapping \" + mappingValue);\n+      }\n+\n+      QueueMappingEntity m \u003d new QueueMappingEntity(mapping[0], mapping[1]);\n+\n+      mappings.add(m);\n+    }\n+\n+    return mappings;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cQueueMappingEntity\u003e getQueueMappingEntity(\n      String queueMappingSuffix) {\n    String queueMappingName \u003d buildQueueMappingRuleProperty(queueMappingSuffix);\n\n    List\u003cQueueMappingEntity\u003e mappings \u003d\n        new ArrayList\u003cQueueMappingEntity\u003e();\n    Collection\u003cString\u003e mappingsString \u003d\n        getTrimmedStringCollection(queueMappingName);\n    for (String mappingValue : mappingsString) {\n      String[] mapping \u003d\n          getTrimmedStringCollection(mappingValue, \":\")\n              .toArray(new String[] {});\n      if (mapping.length !\u003d 2 || mapping[1].length() \u003d\u003d 0) {\n        throw new IllegalArgumentException(\n            \"Illegal queue mapping \" + mappingValue);\n      }\n\n      QueueMappingEntity m \u003d new QueueMappingEntity(mapping[0], mapping[1]);\n\n      mappings.add(m);\n    }\n\n    return mappings;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java"
    }
  }
}