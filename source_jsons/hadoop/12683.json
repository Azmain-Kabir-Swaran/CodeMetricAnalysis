{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Mover.java",
  "functionName": "run",
  "functionId": "run___args-String[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
  "functionStartLine": 792,
  "functionEndLine": 815,
  "numCommitsSeen": 54,
  "timeTaken": 1696,
  "changeHistory": [
    "2b5c528a7331a00cfc67e64cd10342650948d686",
    "5d5aae0694bc27df5b9fa50819854cd3050a8658"
  ],
  "changeHistoryShort": {
    "2b5c528a7331a00cfc67e64cd10342650948d686": "Ybodychange",
    "5d5aae0694bc27df5b9fa50819854cd3050a8658": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2b5c528a7331a00cfc67e64cd10342650948d686": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6875. Archival Storage: support migration for a list of specified paths. Contributed by Jing Zhao.\n",
      "commitDate": "08/09/14 2:10 PM",
      "commitName": "2b5c528a7331a00cfc67e64cd10342650948d686",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "06/09/14 4:44 PM",
      "commitNameOld": "22a41dce4af4d5b533ba875b322551db1c152878",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 1.89,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,24 @@\n     public int run(String[] args) throws Exception {\n       final long startTime \u003d Time.monotonicNow();\n       final Configuration conf \u003d getConf();\n \n       try {\n-        final Collection\u003cURI\u003e namenodes \u003d DFSUtil.getNsServiceRpcUris(conf);\n-        return Mover.run(namenodes, conf);\n+        final Map\u003cURI, List\u003cPath\u003e\u003e map \u003d getNameNodePathsToMove(conf, args);\n+        return Mover.run(map, conf);\n       } catch (IOException e) {\n         System.out.println(e + \".  Exiting ...\");\n         return ExitStatus.IO_EXCEPTION.getExitCode();\n       } catch (InterruptedException e) {\n         System.out.println(e + \".  Exiting ...\");\n         return ExitStatus.INTERRUPTED.getExitCode();\n+      } catch (ParseException e) {\n+        System.out.println(e + \".  Exiting ...\");\n+        return ExitStatus.ILLEGAL_ARGUMENTS.getExitCode();\n+      } catch (IllegalArgumentException e) {\n+        System.out.println(e + \".  Exiting ...\");\n+        return ExitStatus.ILLEGAL_ARGUMENTS.getExitCode();\n       } finally {\n         System.out.format(\"%-24s \", DateFormat.getDateTimeInstance().format(new Date()));\n         System.out.println(\"Mover took \" + StringUtils.formatTime(Time.monotonicNow()-startTime));\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public int run(String[] args) throws Exception {\n      final long startTime \u003d Time.monotonicNow();\n      final Configuration conf \u003d getConf();\n\n      try {\n        final Map\u003cURI, List\u003cPath\u003e\u003e map \u003d getNameNodePathsToMove(conf, args);\n        return Mover.run(map, conf);\n      } catch (IOException e) {\n        System.out.println(e + \".  Exiting ...\");\n        return ExitStatus.IO_EXCEPTION.getExitCode();\n      } catch (InterruptedException e) {\n        System.out.println(e + \".  Exiting ...\");\n        return ExitStatus.INTERRUPTED.getExitCode();\n      } catch (ParseException e) {\n        System.out.println(e + \".  Exiting ...\");\n        return ExitStatus.ILLEGAL_ARGUMENTS.getExitCode();\n      } catch (IllegalArgumentException e) {\n        System.out.println(e + \".  Exiting ...\");\n        return ExitStatus.ILLEGAL_ARGUMENTS.getExitCode();\n      } finally {\n        System.out.format(\"%-24s \", DateFormat.getDateTimeInstance().format(new Date()));\n        System.out.println(\"Mover took \" + StringUtils.formatTime(Time.monotonicNow()-startTime));\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
      "extendedDetails": {}
    },
    "5d5aae0694bc27df5b9fa50819854cd3050a8658": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6801. Archival Storage: Add a new data migration tool. Contributed by Tsz Wo Nicholas Sze.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-6584@1618675 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/14 10:51 AM",
      "commitName": "5d5aae0694bc27df5b9fa50819854cd3050a8658",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,18 @@\n+    public int run(String[] args) throws Exception {\n+      final long startTime \u003d Time.monotonicNow();\n+      final Configuration conf \u003d getConf();\n+\n+      try {\n+        final Collection\u003cURI\u003e namenodes \u003d DFSUtil.getNsServiceRpcUris(conf);\n+        return Mover.run(namenodes, conf);\n+      } catch (IOException e) {\n+        System.out.println(e + \".  Exiting ...\");\n+        return ExitStatus.IO_EXCEPTION.getExitCode();\n+      } catch (InterruptedException e) {\n+        System.out.println(e + \".  Exiting ...\");\n+        return ExitStatus.INTERRUPTED.getExitCode();\n+      } finally {\n+        System.out.format(\"%-24s \", DateFormat.getDateTimeInstance().format(new Date()));\n+        System.out.println(\"Mover took \" + StringUtils.formatTime(Time.monotonicNow()-startTime));\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public int run(String[] args) throws Exception {\n      final long startTime \u003d Time.monotonicNow();\n      final Configuration conf \u003d getConf();\n\n      try {\n        final Collection\u003cURI\u003e namenodes \u003d DFSUtil.getNsServiceRpcUris(conf);\n        return Mover.run(namenodes, conf);\n      } catch (IOException e) {\n        System.out.println(e + \".  Exiting ...\");\n        return ExitStatus.IO_EXCEPTION.getExitCode();\n      } catch (InterruptedException e) {\n        System.out.println(e + \".  Exiting ...\");\n        return ExitStatus.INTERRUPTED.getExitCode();\n      } finally {\n        System.out.format(\"%-24s \", DateFormat.getDateTimeInstance().format(new Date()));\n        System.out.println(\"Mover took \" + StringUtils.formatTime(Time.monotonicNow()-startTime));\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java"
    }
  }
}