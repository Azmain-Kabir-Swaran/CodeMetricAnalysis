{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSQueue.java",
  "functionName": "reinit",
  "functionId": "reinit___recursive-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
  "functionStartLine": 111,
  "functionEndLine": 121,
  "numCommitsSeen": 103,
  "timeTaken": 4242,
  "changeHistory": [
    "99292adcefdc6b8f280b8e100605fb39f755c38a",
    "11be3f70e029c2324b167563168c8a254d234aef",
    "e224c9623493d6c4c2f3ff731fd3c72c0f448b19",
    "f6ea9be5473ab66798b0536317d2f32c5348eb57"
  ],
  "changeHistoryShort": {
    "99292adcefdc6b8f280b8e100605fb39f755c38a": "Ymodifierchange",
    "11be3f70e029c2324b167563168c8a254d234aef": "Ybodychange",
    "e224c9623493d6c4c2f3ff731fd3c72c0f448b19": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "f6ea9be5473ab66798b0536317d2f32c5348eb57": "Yintroduced"
  },
  "changeHistoryDetails": {
    "99292adcefdc6b8f280b8e100605fb39f755c38a": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-2162. Add ability in Fair Scheduler to optionally configure maxResources in terms of percentage. (Yufei Gu)\n",
      "commitDate": "05/10/17 11:51 PM",
      "commitName": "99292adcefdc6b8f280b8e100605fb39f755c38a",
      "commitAuthor": "Yufei Gu",
      "commitDateOld": "14/09/17 11:23 AM",
      "commitNameOld": "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 21.52,
      "commitsBetweenForRepo": 160,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n-  public void reinit(boolean recursive) {\n+  public final void reinit(boolean recursive) {\n     AllocationConfiguration allocConf \u003d scheduler.getAllocationConfiguration();\n     allocConf.initFSQueue(this);\n     updatePreemptionVariables();\n \n     if (recursive) {\n       for (FSQueue child : getChildQueues()) {\n         child.reinit(recursive);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public final void reinit(boolean recursive) {\n    AllocationConfiguration allocConf \u003d scheduler.getAllocationConfiguration();\n    allocConf.initFSQueue(this);\n    updatePreemptionVariables();\n\n    if (recursive) {\n      for (FSQueue child : getChildQueues()) {\n        child.reinit(recursive);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[public, final]"
      }
    },
    "11be3f70e029c2324b167563168c8a254d234aef": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4212. FairScheduler: Can\u0027t create a DRF queue under a FAIR policy queue. (Yufei Gu via kasha)\n",
      "commitDate": "15/02/17 11:51 PM",
      "commitName": "11be3f70e029c2324b167563168c8a254d234aef",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "17/01/17 5:01 PM",
      "commitNameOld": "e224c9623493d6c4c2f3ff731fd3c72c0f448b19",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 29.28,
      "commitsBetweenForRepo": 143,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public void reinit(boolean recursive) {\n     AllocationConfiguration allocConf \u003d scheduler.getAllocationConfiguration();\n-    allocConf.initFSQueue(this, scheduler);\n+    allocConf.initFSQueue(this);\n     updatePreemptionVariables();\n \n     if (recursive) {\n       for (FSQueue child : getChildQueues()) {\n         child.reinit(recursive);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void reinit(boolean recursive) {\n    AllocationConfiguration allocConf \u003d scheduler.getAllocationConfiguration();\n    allocConf.initFSQueue(this);\n    updatePreemptionVariables();\n\n    if (recursive) {\n      for (FSQueue child : getChildQueues()) {\n        child.reinit(recursive);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
      "extendedDetails": {}
    },
    "e224c9623493d6c4c2f3ff731fd3c72c0f448b19": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5831. FairScheduler: Propagate allowPreemptionFrom flag all the way down to the app. (Yufei Gu via kasha)\n",
      "commitDate": "17/01/17 5:01 PM",
      "commitName": "e224c9623493d6c4c2f3ff731fd3c72c0f448b19",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-5831. FairScheduler: Propagate allowPreemptionFrom flag all the way down to the app. (Yufei Gu via kasha)\n",
          "commitDate": "17/01/17 5:01 PM",
          "commitName": "e224c9623493d6c4c2f3ff731fd3c72c0f448b19",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "30/11/16 9:50 AM",
          "commitNameOld": "b3befc021b0e2d63d1a3710ea450797d1129f1f5",
          "commitAuthorOld": "Daniel Templeton",
          "daysBetweenCommits": 48.3,
          "commitsBetweenForRepo": 238,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,11 @@\n-  public void init() {\n+  public void reinit(boolean recursive) {\n     AllocationConfiguration allocConf \u003d scheduler.getAllocationConfiguration();\n     allocConf.initFSQueue(this, scheduler);\n+    updatePreemptionVariables();\n+\n+    if (recursive) {\n+      for (FSQueue child : getChildQueues()) {\n+        child.reinit(recursive);\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reinit(boolean recursive) {\n    AllocationConfiguration allocConf \u003d scheduler.getAllocationConfiguration();\n    allocConf.initFSQueue(this, scheduler);\n    updatePreemptionVariables();\n\n    if (recursive) {\n      for (FSQueue child : getChildQueues()) {\n        child.reinit(recursive);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
          "extendedDetails": {
            "oldValue": "init",
            "newValue": "reinit"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5831. FairScheduler: Propagate allowPreemptionFrom flag all the way down to the app. (Yufei Gu via kasha)\n",
          "commitDate": "17/01/17 5:01 PM",
          "commitName": "e224c9623493d6c4c2f3ff731fd3c72c0f448b19",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "30/11/16 9:50 AM",
          "commitNameOld": "b3befc021b0e2d63d1a3710ea450797d1129f1f5",
          "commitAuthorOld": "Daniel Templeton",
          "daysBetweenCommits": 48.3,
          "commitsBetweenForRepo": 238,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,11 @@\n-  public void init() {\n+  public void reinit(boolean recursive) {\n     AllocationConfiguration allocConf \u003d scheduler.getAllocationConfiguration();\n     allocConf.initFSQueue(this, scheduler);\n+    updatePreemptionVariables();\n+\n+    if (recursive) {\n+      for (FSQueue child : getChildQueues()) {\n+        child.reinit(recursive);\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reinit(boolean recursive) {\n    AllocationConfiguration allocConf \u003d scheduler.getAllocationConfiguration();\n    allocConf.initFSQueue(this, scheduler);\n    updatePreemptionVariables();\n\n    if (recursive) {\n      for (FSQueue child : getChildQueues()) {\n        child.reinit(recursive);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[recursive-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5831. FairScheduler: Propagate allowPreemptionFrom flag all the way down to the app. (Yufei Gu via kasha)\n",
          "commitDate": "17/01/17 5:01 PM",
          "commitName": "e224c9623493d6c4c2f3ff731fd3c72c0f448b19",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "30/11/16 9:50 AM",
          "commitNameOld": "b3befc021b0e2d63d1a3710ea450797d1129f1f5",
          "commitAuthorOld": "Daniel Templeton",
          "daysBetweenCommits": 48.3,
          "commitsBetweenForRepo": 238,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,11 @@\n-  public void init() {\n+  public void reinit(boolean recursive) {\n     AllocationConfiguration allocConf \u003d scheduler.getAllocationConfiguration();\n     allocConf.initFSQueue(this, scheduler);\n+    updatePreemptionVariables();\n+\n+    if (recursive) {\n+      for (FSQueue child : getChildQueues()) {\n+        child.reinit(recursive);\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reinit(boolean recursive) {\n    AllocationConfiguration allocConf \u003d scheduler.getAllocationConfiguration();\n    allocConf.initFSQueue(this, scheduler);\n    updatePreemptionVariables();\n\n    if (recursive) {\n      for (FSQueue child : getChildQueues()) {\n        child.reinit(recursive);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "f6ea9be5473ab66798b0536317d2f32c5348eb57": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5264. Store all queue-specific information in FSQueue. (Yufei Gu via kasha)\n",
      "commitDate": "02/09/16 2:56 PM",
      "commitName": "f6ea9be5473ab66798b0536317d2f32c5348eb57",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,4 @@\n+  public void init() {\n+    AllocationConfiguration allocConf \u003d scheduler.getAllocationConfiguration();\n+    allocConf.initFSQueue(this, scheduler);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init() {\n    AllocationConfiguration allocConf \u003d scheduler.getAllocationConfiguration();\n    allocConf.initFSQueue(this, scheduler);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java"
    }
  }
}