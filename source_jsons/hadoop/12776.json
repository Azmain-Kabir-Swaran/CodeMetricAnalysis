{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HeartbeatManager.java",
  "functionName": "updateLifeline",
  "functionId": "updateLifeline___node-DatanodeDescriptor(modifiers-final)__reports-StorageReport[]__cacheCapacity-long__cacheUsed-long__xceiverCount-int__failedVolumes-int__volumeFailureSummary-VolumeFailureSummary",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/HeartbeatManager.java",
  "functionStartLine": 264,
  "functionEndLine": 276,
  "numCommitsSeen": 34,
  "timeTaken": 2109,
  "changeHistory": [
    "f3f5e7ad005a88afad6fa09602073eaa450e21ed",
    "2759689d7d23001f007cb0dbe2521de90734dd5c"
  ],
  "changeHistoryShort": {
    "f3f5e7ad005a88afad6fa09602073eaa450e21ed": "Ybodychange",
    "2759689d7d23001f007cb0dbe2521de90734dd5c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f3f5e7ad005a88afad6fa09602073eaa450e21ed": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14042. Fix NPE when PROVIDED storage is missing. Contributed by Virajith Jalaparti.\n",
      "commitDate": "05/11/18 11:02 AM",
      "commitName": "f3f5e7ad005a88afad6fa09602073eaa450e21ed",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "3b1d30301bcd35bbe525a7e122d3e5acfab92c88",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 324.72,
      "commitsBetweenForRepo": 3008,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   synchronized void updateLifeline(final DatanodeDescriptor node,\n       StorageReport[] reports, long cacheCapacity, long cacheUsed,\n       int xceiverCount, int failedVolumes,\n       VolumeFailureSummary volumeFailureSummary) {\n     stats.subtract(node);\n     // This intentionally calls updateHeartbeatState instead of\n     // updateHeartbeat, because we don\u0027t want to modify the\n     // heartbeatedSinceRegistration flag.  Arrival of a lifeline message does\n     // not count as arrival of the first heartbeat.\n-    node.updateHeartbeatState(reports, cacheCapacity, cacheUsed,\n+    blockManager.updateHeartbeatState(node, reports, cacheCapacity, cacheUsed,\n         xceiverCount, failedVolumes, volumeFailureSummary);\n     stats.add(node);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void updateLifeline(final DatanodeDescriptor node,\n      StorageReport[] reports, long cacheCapacity, long cacheUsed,\n      int xceiverCount, int failedVolumes,\n      VolumeFailureSummary volumeFailureSummary) {\n    stats.subtract(node);\n    // This intentionally calls updateHeartbeatState instead of\n    // updateHeartbeat, because we don\u0027t want to modify the\n    // heartbeatedSinceRegistration flag.  Arrival of a lifeline message does\n    // not count as arrival of the first heartbeat.\n    blockManager.updateHeartbeatState(node, reports, cacheCapacity, cacheUsed,\n        xceiverCount, failedVolumes, volumeFailureSummary);\n    stats.add(node);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/HeartbeatManager.java",
      "extendedDetails": {}
    },
    "2759689d7d23001f007cb0dbe2521de90734dd5c": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9239. DataNode Lifeline Protocol: an alternative protocol for reporting DataNode liveness. Contributed by Chris Nauroth.\n",
      "commitDate": "04/03/16 3:29 PM",
      "commitName": "2759689d7d23001f007cb0dbe2521de90734dd5c",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,13 @@\n+  synchronized void updateLifeline(final DatanodeDescriptor node,\n+      StorageReport[] reports, long cacheCapacity, long cacheUsed,\n+      int xceiverCount, int failedVolumes,\n+      VolumeFailureSummary volumeFailureSummary) {\n+    stats.subtract(node);\n+    // This intentionally calls updateHeartbeatState instead of\n+    // updateHeartbeat, because we don\u0027t want to modify the\n+    // heartbeatedSinceRegistration flag.  Arrival of a lifeline message does\n+    // not count as arrival of the first heartbeat.\n+    node.updateHeartbeatState(reports, cacheCapacity, cacheUsed,\n+        xceiverCount, failedVolumes, volumeFailureSummary);\n+    stats.add(node);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void updateLifeline(final DatanodeDescriptor node,\n      StorageReport[] reports, long cacheCapacity, long cacheUsed,\n      int xceiverCount, int failedVolumes,\n      VolumeFailureSummary volumeFailureSummary) {\n    stats.subtract(node);\n    // This intentionally calls updateHeartbeatState instead of\n    // updateHeartbeat, because we don\u0027t want to modify the\n    // heartbeatedSinceRegistration flag.  Arrival of a lifeline message does\n    // not count as arrival of the first heartbeat.\n    node.updateHeartbeatState(reports, cacheCapacity, cacheUsed,\n        xceiverCount, failedVolumes, volumeFailureSummary);\n    stats.add(node);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/HeartbeatManager.java"
    }
  }
}