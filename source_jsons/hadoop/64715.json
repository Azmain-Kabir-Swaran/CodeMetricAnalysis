{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AFileSystem.java",
  "functionName": "hasCapability",
  "functionId": "hasCapability___capability-String",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
  "functionStartLine": 4490,
  "functionEndLine": 4498,
  "numCommitsSeen": 141,
  "timeTaken": 4822,
  "changeHistory": [
    "e346e3638c595a512cd582739ff51fb64c3b4950",
    "f365957c6326f88734bc0a5d01cfb7eac713db20",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c"
  ],
  "changeHistoryShort": {
    "e346e3638c595a512cd582739ff51fb64c3b4950": "Ybodychange",
    "f365957c6326f88734bc0a5d01cfb7eac713db20": "Ybodychange",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e346e3638c595a512cd582739ff51fb64c3b4950": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15691 Add PathCapabilities to FileSystem and FileContext.\n\nContributed by Steve Loughran.\n\nThis complements the StreamCapabilities Interface by allowing applications to probe for a specific path on a specific instance of a FileSystem client\nto offer a specific capability.\n\nThis is intended to allow applications to determine\n\n* Whether a method is implemented before calling it and dealing with UnsupportedOperationException.\n* Whether a specific feature is believed to be available in the remote store.\n\nAs well as a common set of capabilities defined in CommonPathCapabilities,\nfile systems are free to add their own capabilities, prefixed with\n fs. + schema + .\n\nThe plan is to identify and document more capabilities -and for file systems which add new features, for a declaration of the availability of the feature to always be available.\n\nNote\n\n* The remote store is not expected to be checked for the feature;\n  It is more a check of client API and the client\u0027s configuration/knowledge\n  of the state of the remote system.\n* Permissions are not checked.\n\nChange-Id: I80bfebe94f4a8bdad8f3ac055495735b824968f5\n",
      "commitDate": "25/09/19 4:16 AM",
      "commitName": "e346e3638c595a512cd582739ff51fb64c3b4950",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "20/09/19 11:20 PM",
      "commitNameOld": "e02b1023c2f42b6792d2941c1f987ae06259b021",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 4.21,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,9 @@\n   public boolean hasCapability(String capability) {\n-\n-    switch (capability.toLowerCase(Locale.ENGLISH)) {\n-\n-    case CommitConstants.STORE_CAPABILITY_MAGIC_COMMITTER:\n-      // capability depends on FS configuration\n-      return isMagicCommitEnabled();\n-\n-    case SelectConstants.S3_SELECT_CAPABILITY:\n-      // select is only supported if enabled\n-      return selectBinding.isEnabled();\n-\n-    default:\n+    try {\n+      return hasPathCapability(workingDir, capability);\n+    } catch (IOException ex) {\n+      // should never happen, so log and downgrade.\n+      LOG.debug(\"Ignoring exception on hasCapability({}})\", capability, ex);\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasCapability(String capability) {\n    try {\n      return hasPathCapability(workingDir, capability);\n    } catch (IOException ex) {\n      // should never happen, so log and downgrade.\n      LOG.debug(\"Ignoring exception on hasCapability({}})\", capability, ex);\n      return false;\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "f365957c6326f88734bc0a5d01cfb7eac713db20": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15229. Add FileSystem builder-based openFile() API to match createFile();\nS3A to implement S3 Select through this API.\n\nThe new openFile() API is asynchronous, and implemented across FileSystem and FileContext.\n\nThe MapReduce V2 inputs are moved to this API, and you can actually set must/may\noptions to pass in.\n\nThis is more useful for setting things like s3a seek policy than for S3 select,\nas the existing input format/record readers can\u0027t handle S3 select output where\nthe stream is shorter than the file length, and splitting plain text is suboptimal.\nFuture work is needed there.\n\nIn the meantime, any/all filesystem connectors are now free to add their own filesystem-specific\nconfiguration parameters which can be set in jobs and used to set filesystem input stream\noptions (seek policy, retry, encryption secrets, etc).\n\nContributed by Steve Loughran\n",
      "commitDate": "05/02/19 3:51 AM",
      "commitName": "f365957c6326f88734bc0a5d01cfb7eac713db20",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "14/01/19 9:59 AM",
      "commitNameOld": "6d0bffe17eadedd60d4599427248b0db4a7c5502",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 21.74,
      "commitsBetweenForRepo": 167,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,16 @@\n   public boolean hasCapability(String capability) {\n \n     switch (capability.toLowerCase(Locale.ENGLISH)) {\n \n     case CommitConstants.STORE_CAPABILITY_MAGIC_COMMITTER:\n       // capability depends on FS configuration\n       return isMagicCommitEnabled();\n \n+    case SelectConstants.S3_SELECT_CAPABILITY:\n+      // select is only supported if enabled\n+      return selectBinding.isEnabled();\n+\n     default:\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasCapability(String capability) {\n\n    switch (capability.toLowerCase(Locale.ENGLISH)) {\n\n    case CommitConstants.STORE_CAPABILITY_MAGIC_COMMITTER:\n      // capability depends on FS configuration\n      return isMagicCommitEnabled();\n\n    case SelectConstants.S3_SELECT_CAPABILITY:\n      // select is only supported if enabled\n      return selectBinding.isEnabled();\n\n    default:\n      return false;\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
      "commitDate": "22/11/17 7:28 AM",
      "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,12 @@\n+  public boolean hasCapability(String capability) {\n+\n+    switch (capability.toLowerCase(Locale.ENGLISH)) {\n+\n+    case CommitConstants.STORE_CAPABILITY_MAGIC_COMMITTER:\n+      // capability depends on FS configuration\n+      return isMagicCommitEnabled();\n+\n+    default:\n+      return false;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasCapability(String capability) {\n\n    switch (capability.toLowerCase(Locale.ENGLISH)) {\n\n    case CommitConstants.STORE_CAPABILITY_MAGIC_COMMITTER:\n      // capability depends on FS configuration\n      return isMagicCommitEnabled();\n\n    default:\n      return false;\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java"
    }
  }
}