{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MutableRollingAverages.java",
  "functionName": "snapshot",
  "functionId": "snapshot___builder-MetricsRecordBuilder__all-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MutableRollingAverages.java",
  "functionStartLine": 143,
  "functionEndLine": 167,
  "numCommitsSeen": 5,
  "timeTaken": 1526,
  "changeHistory": [
    "8633ef8e10a78883fbd6bf197007dc5191bf4535",
    "4e9029653dfa7a803d73c173cb7044f7e0dc1eb1"
  ],
  "changeHistoryShort": {
    "8633ef8e10a78883fbd6bf197007dc5191bf4535": "Yfilerename",
    "4e9029653dfa7a803d73c173cb7044f7e0dc1eb1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8633ef8e10a78883fbd6bf197007dc5191bf4535": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-14503. Make RollingAverages a mutable metric. Contributed by Hanisha Koneru.\n",
      "commitDate": "12/06/17 8:43 PM",
      "commitName": "8633ef8e10a78883fbd6bf197007dc5191bf4535",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "12/06/17 6:45 PM",
      "commitNameOld": "bec79ca2495abdc347d64628151c90f5ce777046",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void snapshot(MetricsRecordBuilder builder, boolean all) {\n    if (all || changed()) {\n      for (final Entry\u003cString, LinkedBlockingDeque\u003cSumAndCount\u003e\u003e entry\n          : averages.entrySet()) {\n        final String name \u003d entry.getKey();\n        final MetricsInfo avgInfo \u003d info(\n            String.format(avgInfoNameTemplate, StringUtils.capitalize(name)),\n            String.format(avgInfoDescTemplate, StringUtils.uncapitalize(name)));\n        double totalSum \u003d 0;\n        long totalCount \u003d 0;\n\n        for (final SumAndCount sumAndCount : entry.getValue()) {\n          totalCount +\u003d sumAndCount.getCount();\n          totalSum +\u003d sumAndCount.getSum();\n        }\n\n        if (totalCount !\u003d 0) {\n          builder.addGauge(avgInfo, totalSum / totalCount);\n        }\n      }\n      if (changed()) {\n        clearChanged();\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MutableRollingAverages.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/RollingAverages.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MutableRollingAverages.java"
      }
    },
    "4e9029653dfa7a803d73c173cb7044f7e0dc1eb1": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10917. Collect peer performance statistics on DataNode. Contributed by Xiaobing Zhou.\n",
      "commitDate": "22/12/16 11:46 PM",
      "commitName": "4e9029653dfa7a803d73c173cb7044f7e0dc1eb1",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,25 @@\n+  public void snapshot(MetricsRecordBuilder builder, boolean all) {\n+    if (all || changed()) {\n+      for (final Entry\u003cString, LinkedBlockingDeque\u003cSumAndCount\u003e\u003e entry\n+          : averages.entrySet()) {\n+        final String name \u003d entry.getKey();\n+        final MetricsInfo avgInfo \u003d info(\n+            String.format(avgInfoNameTemplate, StringUtils.capitalize(name)),\n+            String.format(avgInfoDescTemplate, StringUtils.uncapitalize(name)));\n+        double totalSum \u003d 0;\n+        long totalCount \u003d 0;\n+\n+        for (final SumAndCount sumAndCount : entry.getValue()) {\n+          totalCount +\u003d sumAndCount.getCount();\n+          totalSum +\u003d sumAndCount.getSum();\n+        }\n+\n+        if (totalCount !\u003d 0) {\n+          builder.addGauge(avgInfo, totalSum / totalCount);\n+        }\n+      }\n+      if (changed()) {\n+        clearChanged();\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void snapshot(MetricsRecordBuilder builder, boolean all) {\n    if (all || changed()) {\n      for (final Entry\u003cString, LinkedBlockingDeque\u003cSumAndCount\u003e\u003e entry\n          : averages.entrySet()) {\n        final String name \u003d entry.getKey();\n        final MetricsInfo avgInfo \u003d info(\n            String.format(avgInfoNameTemplate, StringUtils.capitalize(name)),\n            String.format(avgInfoDescTemplate, StringUtils.uncapitalize(name)));\n        double totalSum \u003d 0;\n        long totalCount \u003d 0;\n\n        for (final SumAndCount sumAndCount : entry.getValue()) {\n          totalCount +\u003d sumAndCount.getCount();\n          totalSum +\u003d sumAndCount.getSum();\n        }\n\n        if (totalCount !\u003d 0) {\n          builder.addGauge(avgInfo, totalSum / totalCount);\n        }\n      }\n      if (changed()) {\n        clearChanged();\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/RollingAverages.java"
    }
  }
}