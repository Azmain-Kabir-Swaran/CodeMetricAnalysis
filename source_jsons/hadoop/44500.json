{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationMaster.java",
  "functionName": "getTaskResourceCapability",
  "functionId": "getTaskResourceCapability",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
  "functionStartLine": 1930,
  "functionEndLine": 1956,
  "numCommitsSeen": 210,
  "timeTaken": 3659,
  "changeHistory": [
    "aae629913cee0157c945a2c7384c7bf398f10616",
    "783a01eb4a155044a54a30a636b86b3ab2b33044",
    "01f3f2167ec20b52a18bc2cf250fb4229cfd2c14",
    "7805deed4896e470ebd2f6bbd1ba9962947c63cd"
  ],
  "changeHistoryShort": {
    "aae629913cee0157c945a2c7384c7bf398f10616": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
    "783a01eb4a155044a54a30a636b86b3ab2b33044": "Ybodychange",
    "01f3f2167ec20b52a18bc2cf250fb4229cfd2c14": "Ybodychange",
    "7805deed4896e470ebd2f6bbd1ba9962947c63cd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "aae629913cee0157c945a2c7384c7bf398f10616": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-7292. Retrospect Resource Profile Behavior for overriding capability. Contributed by Wangda Tan.\n",
      "commitDate": "15/02/18 11:07 PM",
      "commitName": "aae629913cee0157c945a2c7384c7bf398f10616",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-7292. Retrospect Resource Profile Behavior for overriding capability. Contributed by Wangda Tan.\n",
          "commitDate": "15/02/18 11:07 PM",
          "commitName": "aae629913cee0157c945a2c7384c7bf398f10616",
          "commitAuthor": "Sunil G",
          "commitDateOld": "10/02/18 10:20 PM",
          "commitNameOld": "a08c048832d68c203fbdfce8d9f0e7dcccb02a55",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 5.03,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,27 @@\n-  private ProfileCapability createProfileCapability()\n+  private Resource getTaskResourceCapability()\n       throws YarnRuntimeException {\n     if (containerMemory \u003c -1 || containerMemory \u003d\u003d 0) {\n       throw new YarnRuntimeException(\"Value of AM memory \u0027\" + containerMemory\n           + \"\u0027 has to be greater than 0\");\n     }\n     if (containerVirtualCores \u003c -1 || containerVirtualCores \u003d\u003d 0) {\n       throw new YarnRuntimeException(\n           \"Value of AM vcores \u0027\" + containerVirtualCores\n               + \"\u0027 has to be greater than 0\");\n     }\n \n     Resource resourceCapability \u003d\n         Resource.newInstance(containerMemory, containerVirtualCores);\n     containerMemory \u003d\n         containerMemory \u003d\u003d -1 ? DEFAULT_CONTAINER_MEMORY : containerMemory;\n     containerVirtualCores \u003d containerVirtualCores \u003d\u003d -1 ?\n         DEFAULT_CONTAINER_VCORES :\n         containerVirtualCores;\n     resourceCapability.setMemorySize(containerMemory);\n     resourceCapability.setVirtualCores(containerVirtualCores);\n     for (Map.Entry\u003cString, Long\u003e entry : containerResources.entrySet()) {\n       resourceCapability.setResourceValue(entry.getKey(), entry.getValue());\n     }\n \n-    String profileName \u003d containerResourceProfile;\n-    if (\"\".equals(containerResourceProfile) \u0026\u0026 resourceProfiles !\u003d null) {\n-      profileName \u003d \"default\";\n-    }\n-    ProfileCapability capability \u003d\n-        ProfileCapability.newInstance(profileName, resourceCapability);\n-    return capability;\n+    return resourceCapability;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Resource getTaskResourceCapability()\n      throws YarnRuntimeException {\n    if (containerMemory \u003c -1 || containerMemory \u003d\u003d 0) {\n      throw new YarnRuntimeException(\"Value of AM memory \u0027\" + containerMemory\n          + \"\u0027 has to be greater than 0\");\n    }\n    if (containerVirtualCores \u003c -1 || containerVirtualCores \u003d\u003d 0) {\n      throw new YarnRuntimeException(\n          \"Value of AM vcores \u0027\" + containerVirtualCores\n              + \"\u0027 has to be greater than 0\");\n    }\n\n    Resource resourceCapability \u003d\n        Resource.newInstance(containerMemory, containerVirtualCores);\n    containerMemory \u003d\n        containerMemory \u003d\u003d -1 ? DEFAULT_CONTAINER_MEMORY : containerMemory;\n    containerVirtualCores \u003d containerVirtualCores \u003d\u003d -1 ?\n        DEFAULT_CONTAINER_VCORES :\n        containerVirtualCores;\n    resourceCapability.setMemorySize(containerMemory);\n    resourceCapability.setVirtualCores(containerVirtualCores);\n    for (Map.Entry\u003cString, Long\u003e entry : containerResources.entrySet()) {\n      resourceCapability.setResourceValue(entry.getKey(), entry.getValue());\n    }\n\n    return resourceCapability;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
          "extendedDetails": {
            "oldValue": "createProfileCapability",
            "newValue": "getTaskResourceCapability"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-7292. Retrospect Resource Profile Behavior for overriding capability. Contributed by Wangda Tan.\n",
          "commitDate": "15/02/18 11:07 PM",
          "commitName": "aae629913cee0157c945a2c7384c7bf398f10616",
          "commitAuthor": "Sunil G",
          "commitDateOld": "10/02/18 10:20 PM",
          "commitNameOld": "a08c048832d68c203fbdfce8d9f0e7dcccb02a55",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 5.03,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,27 @@\n-  private ProfileCapability createProfileCapability()\n+  private Resource getTaskResourceCapability()\n       throws YarnRuntimeException {\n     if (containerMemory \u003c -1 || containerMemory \u003d\u003d 0) {\n       throw new YarnRuntimeException(\"Value of AM memory \u0027\" + containerMemory\n           + \"\u0027 has to be greater than 0\");\n     }\n     if (containerVirtualCores \u003c -1 || containerVirtualCores \u003d\u003d 0) {\n       throw new YarnRuntimeException(\n           \"Value of AM vcores \u0027\" + containerVirtualCores\n               + \"\u0027 has to be greater than 0\");\n     }\n \n     Resource resourceCapability \u003d\n         Resource.newInstance(containerMemory, containerVirtualCores);\n     containerMemory \u003d\n         containerMemory \u003d\u003d -1 ? DEFAULT_CONTAINER_MEMORY : containerMemory;\n     containerVirtualCores \u003d containerVirtualCores \u003d\u003d -1 ?\n         DEFAULT_CONTAINER_VCORES :\n         containerVirtualCores;\n     resourceCapability.setMemorySize(containerMemory);\n     resourceCapability.setVirtualCores(containerVirtualCores);\n     for (Map.Entry\u003cString, Long\u003e entry : containerResources.entrySet()) {\n       resourceCapability.setResourceValue(entry.getKey(), entry.getValue());\n     }\n \n-    String profileName \u003d containerResourceProfile;\n-    if (\"\".equals(containerResourceProfile) \u0026\u0026 resourceProfiles !\u003d null) {\n-      profileName \u003d \"default\";\n-    }\n-    ProfileCapability capability \u003d\n-        ProfileCapability.newInstance(profileName, resourceCapability);\n-    return capability;\n+    return resourceCapability;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Resource getTaskResourceCapability()\n      throws YarnRuntimeException {\n    if (containerMemory \u003c -1 || containerMemory \u003d\u003d 0) {\n      throw new YarnRuntimeException(\"Value of AM memory \u0027\" + containerMemory\n          + \"\u0027 has to be greater than 0\");\n    }\n    if (containerVirtualCores \u003c -1 || containerVirtualCores \u003d\u003d 0) {\n      throw new YarnRuntimeException(\n          \"Value of AM vcores \u0027\" + containerVirtualCores\n              + \"\u0027 has to be greater than 0\");\n    }\n\n    Resource resourceCapability \u003d\n        Resource.newInstance(containerMemory, containerVirtualCores);\n    containerMemory \u003d\n        containerMemory \u003d\u003d -1 ? DEFAULT_CONTAINER_MEMORY : containerMemory;\n    containerVirtualCores \u003d containerVirtualCores \u003d\u003d -1 ?\n        DEFAULT_CONTAINER_VCORES :\n        containerVirtualCores;\n    resourceCapability.setMemorySize(containerMemory);\n    resourceCapability.setVirtualCores(containerVirtualCores);\n    for (Map.Entry\u003cString, Long\u003e entry : containerResources.entrySet()) {\n      resourceCapability.setResourceValue(entry.getKey(), entry.getValue());\n    }\n\n    return resourceCapability;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
          "extendedDetails": {
            "oldValue": "ProfileCapability",
            "newValue": "Resource"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7292. Retrospect Resource Profile Behavior for overriding capability. Contributed by Wangda Tan.\n",
          "commitDate": "15/02/18 11:07 PM",
          "commitName": "aae629913cee0157c945a2c7384c7bf398f10616",
          "commitAuthor": "Sunil G",
          "commitDateOld": "10/02/18 10:20 PM",
          "commitNameOld": "a08c048832d68c203fbdfce8d9f0e7dcccb02a55",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 5.03,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,27 @@\n-  private ProfileCapability createProfileCapability()\n+  private Resource getTaskResourceCapability()\n       throws YarnRuntimeException {\n     if (containerMemory \u003c -1 || containerMemory \u003d\u003d 0) {\n       throw new YarnRuntimeException(\"Value of AM memory \u0027\" + containerMemory\n           + \"\u0027 has to be greater than 0\");\n     }\n     if (containerVirtualCores \u003c -1 || containerVirtualCores \u003d\u003d 0) {\n       throw new YarnRuntimeException(\n           \"Value of AM vcores \u0027\" + containerVirtualCores\n               + \"\u0027 has to be greater than 0\");\n     }\n \n     Resource resourceCapability \u003d\n         Resource.newInstance(containerMemory, containerVirtualCores);\n     containerMemory \u003d\n         containerMemory \u003d\u003d -1 ? DEFAULT_CONTAINER_MEMORY : containerMemory;\n     containerVirtualCores \u003d containerVirtualCores \u003d\u003d -1 ?\n         DEFAULT_CONTAINER_VCORES :\n         containerVirtualCores;\n     resourceCapability.setMemorySize(containerMemory);\n     resourceCapability.setVirtualCores(containerVirtualCores);\n     for (Map.Entry\u003cString, Long\u003e entry : containerResources.entrySet()) {\n       resourceCapability.setResourceValue(entry.getKey(), entry.getValue());\n     }\n \n-    String profileName \u003d containerResourceProfile;\n-    if (\"\".equals(containerResourceProfile) \u0026\u0026 resourceProfiles !\u003d null) {\n-      profileName \u003d \"default\";\n-    }\n-    ProfileCapability capability \u003d\n-        ProfileCapability.newInstance(profileName, resourceCapability);\n-    return capability;\n+    return resourceCapability;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Resource getTaskResourceCapability()\n      throws YarnRuntimeException {\n    if (containerMemory \u003c -1 || containerMemory \u003d\u003d 0) {\n      throw new YarnRuntimeException(\"Value of AM memory \u0027\" + containerMemory\n          + \"\u0027 has to be greater than 0\");\n    }\n    if (containerVirtualCores \u003c -1 || containerVirtualCores \u003d\u003d 0) {\n      throw new YarnRuntimeException(\n          \"Value of AM vcores \u0027\" + containerVirtualCores\n              + \"\u0027 has to be greater than 0\");\n    }\n\n    Resource resourceCapability \u003d\n        Resource.newInstance(containerMemory, containerVirtualCores);\n    containerMemory \u003d\n        containerMemory \u003d\u003d -1 ? DEFAULT_CONTAINER_MEMORY : containerMemory;\n    containerVirtualCores \u003d containerVirtualCores \u003d\u003d -1 ?\n        DEFAULT_CONTAINER_VCORES :\n        containerVirtualCores;\n    resourceCapability.setMemorySize(containerMemory);\n    resourceCapability.setVirtualCores(containerVirtualCores);\n    for (Map.Entry\u003cString, Long\u003e entry : containerResources.entrySet()) {\n      resourceCapability.setResourceValue(entry.getKey(), entry.getValue());\n    }\n\n    return resourceCapability;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
          "extendedDetails": {}
        }
      ]
    },
    "783a01eb4a155044a54a30a636b86b3ab2b33044": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7718. DistributedShell failed to specify resource other than memory/vcores from container_resources. Contributed by Wangda Tan.\n",
      "commitDate": "09/01/18 3:09 AM",
      "commitName": "783a01eb4a155044a54a30a636b86b3ab2b33044",
      "commitAuthor": "Sunil G",
      "commitDateOld": "07/01/18 10:29 PM",
      "commitNameOld": "01f3f2167ec20b52a18bc2cf250fb4229cfd2c14",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 1.19,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,33 @@\n   private ProfileCapability createProfileCapability()\n       throws YarnRuntimeException {\n     if (containerMemory \u003c -1 || containerMemory \u003d\u003d 0) {\n       throw new YarnRuntimeException(\"Value of AM memory \u0027\" + containerMemory\n           + \"\u0027 has to be greater than 0\");\n     }\n     if (containerVirtualCores \u003c -1 || containerVirtualCores \u003d\u003d 0) {\n       throw new YarnRuntimeException(\n           \"Value of AM vcores \u0027\" + containerVirtualCores\n               + \"\u0027 has to be greater than 0\");\n     }\n \n     Resource resourceCapability \u003d\n         Resource.newInstance(containerMemory, containerVirtualCores);\n-    if (resourceProfiles \u003d\u003d null) {\n-      containerMemory \u003d containerMemory \u003d\u003d -1 ? DEFAULT_CONTAINER_MEMORY :\n-          containerMemory;\n-      containerVirtualCores \u003d\n-          containerVirtualCores \u003d\u003d -1 ? DEFAULT_CONTAINER_VCORES :\n-              containerVirtualCores;\n-      resourceCapability.setMemorySize(containerMemory);\n-      resourceCapability.setVirtualCores(containerVirtualCores);\n-      for (Map.Entry\u003cString, Long\u003e entry : containerResources.entrySet()) {\n-        resourceCapability.setResourceValue(entry.getKey(), entry.getValue());\n-      }\n+    containerMemory \u003d\n+        containerMemory \u003d\u003d -1 ? DEFAULT_CONTAINER_MEMORY : containerMemory;\n+    containerVirtualCores \u003d containerVirtualCores \u003d\u003d -1 ?\n+        DEFAULT_CONTAINER_VCORES :\n+        containerVirtualCores;\n+    resourceCapability.setMemorySize(containerMemory);\n+    resourceCapability.setVirtualCores(containerVirtualCores);\n+    for (Map.Entry\u003cString, Long\u003e entry : containerResources.entrySet()) {\n+      resourceCapability.setResourceValue(entry.getKey(), entry.getValue());\n     }\n \n     String profileName \u003d containerResourceProfile;\n     if (\"\".equals(containerResourceProfile) \u0026\u0026 resourceProfiles !\u003d null) {\n       profileName \u003d \"default\";\n     }\n     ProfileCapability capability \u003d\n         ProfileCapability.newInstance(profileName, resourceCapability);\n     return capability;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ProfileCapability createProfileCapability()\n      throws YarnRuntimeException {\n    if (containerMemory \u003c -1 || containerMemory \u003d\u003d 0) {\n      throw new YarnRuntimeException(\"Value of AM memory \u0027\" + containerMemory\n          + \"\u0027 has to be greater than 0\");\n    }\n    if (containerVirtualCores \u003c -1 || containerVirtualCores \u003d\u003d 0) {\n      throw new YarnRuntimeException(\n          \"Value of AM vcores \u0027\" + containerVirtualCores\n              + \"\u0027 has to be greater than 0\");\n    }\n\n    Resource resourceCapability \u003d\n        Resource.newInstance(containerMemory, containerVirtualCores);\n    containerMemory \u003d\n        containerMemory \u003d\u003d -1 ? DEFAULT_CONTAINER_MEMORY : containerMemory;\n    containerVirtualCores \u003d containerVirtualCores \u003d\u003d -1 ?\n        DEFAULT_CONTAINER_VCORES :\n        containerVirtualCores;\n    resourceCapability.setMemorySize(containerMemory);\n    resourceCapability.setVirtualCores(containerVirtualCores);\n    for (Map.Entry\u003cString, Long\u003e entry : containerResources.entrySet()) {\n      resourceCapability.setResourceValue(entry.getKey(), entry.getValue());\n    }\n\n    String profileName \u003d containerResourceProfile;\n    if (\"\".equals(containerResourceProfile) \u0026\u0026 resourceProfiles !\u003d null) {\n      profileName \u003d \"default\";\n    }\n    ProfileCapability capability \u003d\n        ProfileCapability.newInstance(profileName, resourceCapability);\n    return capability;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "01f3f2167ec20b52a18bc2cf250fb4229cfd2c14": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7242. Support to specify values of different resource types in DistributedShell for easier testing. Contributed by Gergely Novák.\n",
      "commitDate": "07/01/18 10:29 PM",
      "commitName": "01f3f2167ec20b52a18bc2cf250fb4229cfd2c14",
      "commitAuthor": "Sunil G",
      "commitDateOld": "17/12/17 6:07 PM",
      "commitNameOld": "928964102029e96406f5482e8900802f38164501",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 21.18,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,35 @@\n   private ProfileCapability createProfileCapability()\n       throws YarnRuntimeException {\n     if (containerMemory \u003c -1 || containerMemory \u003d\u003d 0) {\n       throw new YarnRuntimeException(\"Value of AM memory \u0027\" + containerMemory\n           + \"\u0027 has to be greater than 0\");\n     }\n     if (containerVirtualCores \u003c -1 || containerVirtualCores \u003d\u003d 0) {\n       throw new YarnRuntimeException(\n           \"Value of AM vcores \u0027\" + containerVirtualCores\n               + \"\u0027 has to be greater than 0\");\n     }\n \n     Resource resourceCapability \u003d\n         Resource.newInstance(containerMemory, containerVirtualCores);\n     if (resourceProfiles \u003d\u003d null) {\n       containerMemory \u003d containerMemory \u003d\u003d -1 ? DEFAULT_CONTAINER_MEMORY :\n           containerMemory;\n       containerVirtualCores \u003d\n           containerVirtualCores \u003d\u003d -1 ? DEFAULT_CONTAINER_VCORES :\n               containerVirtualCores;\n       resourceCapability.setMemorySize(containerMemory);\n       resourceCapability.setVirtualCores(containerVirtualCores);\n+      for (Map.Entry\u003cString, Long\u003e entry : containerResources.entrySet()) {\n+        resourceCapability.setResourceValue(entry.getKey(), entry.getValue());\n+      }\n     }\n \n     String profileName \u003d containerResourceProfile;\n     if (\"\".equals(containerResourceProfile) \u0026\u0026 resourceProfiles !\u003d null) {\n       profileName \u003d \"default\";\n     }\n     ProfileCapability capability \u003d\n         ProfileCapability.newInstance(profileName, resourceCapability);\n     return capability;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ProfileCapability createProfileCapability()\n      throws YarnRuntimeException {\n    if (containerMemory \u003c -1 || containerMemory \u003d\u003d 0) {\n      throw new YarnRuntimeException(\"Value of AM memory \u0027\" + containerMemory\n          + \"\u0027 has to be greater than 0\");\n    }\n    if (containerVirtualCores \u003c -1 || containerVirtualCores \u003d\u003d 0) {\n      throw new YarnRuntimeException(\n          \"Value of AM vcores \u0027\" + containerVirtualCores\n              + \"\u0027 has to be greater than 0\");\n    }\n\n    Resource resourceCapability \u003d\n        Resource.newInstance(containerMemory, containerVirtualCores);\n    if (resourceProfiles \u003d\u003d null) {\n      containerMemory \u003d containerMemory \u003d\u003d -1 ? DEFAULT_CONTAINER_MEMORY :\n          containerMemory;\n      containerVirtualCores \u003d\n          containerVirtualCores \u003d\u003d -1 ? DEFAULT_CONTAINER_VCORES :\n              containerVirtualCores;\n      resourceCapability.setMemorySize(containerMemory);\n      resourceCapability.setVirtualCores(containerVirtualCores);\n      for (Map.Entry\u003cString, Long\u003e entry : containerResources.entrySet()) {\n        resourceCapability.setResourceValue(entry.getKey(), entry.getValue());\n      }\n    }\n\n    String profileName \u003d containerResourceProfile;\n    if (\"\".equals(containerResourceProfile) \u0026\u0026 resourceProfiles !\u003d null) {\n      profileName \u003d \"default\";\n    }\n    ProfileCapability capability \u003d\n        ProfileCapability.newInstance(profileName, resourceCapability);\n    return capability;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "7805deed4896e470ebd2f6bbd1ba9962947c63cd": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5588. [YARN-3926] Add support for resource profiles in distributed shell. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "7805deed4896e470ebd2f6bbd1ba9962947c63cd",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,32 @@\n+  private ProfileCapability createProfileCapability()\n+      throws YarnRuntimeException {\n+    if (containerMemory \u003c -1 || containerMemory \u003d\u003d 0) {\n+      throw new YarnRuntimeException(\"Value of AM memory \u0027\" + containerMemory\n+          + \"\u0027 has to be greater than 0\");\n+    }\n+    if (containerVirtualCores \u003c -1 || containerVirtualCores \u003d\u003d 0) {\n+      throw new YarnRuntimeException(\n+          \"Value of AM vcores \u0027\" + containerVirtualCores\n+              + \"\u0027 has to be greater than 0\");\n+    }\n+\n+    Resource resourceCapability \u003d\n+        Resource.newInstance(containerMemory, containerVirtualCores);\n+    if (resourceProfiles \u003d\u003d null) {\n+      containerMemory \u003d containerMemory \u003d\u003d -1 ? DEFAULT_CONTAINER_MEMORY :\n+          containerMemory;\n+      containerVirtualCores \u003d\n+          containerVirtualCores \u003d\u003d -1 ? DEFAULT_CONTAINER_VCORES :\n+              containerVirtualCores;\n+      resourceCapability.setMemorySize(containerMemory);\n+      resourceCapability.setVirtualCores(containerVirtualCores);\n+    }\n+\n+    String profileName \u003d containerResourceProfile;\n+    if (\"\".equals(containerResourceProfile) \u0026\u0026 resourceProfiles !\u003d null) {\n+      profileName \u003d \"default\";\n+    }\n+    ProfileCapability capability \u003d\n+        ProfileCapability.newInstance(profileName, resourceCapability);\n+    return capability;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private ProfileCapability createProfileCapability()\n      throws YarnRuntimeException {\n    if (containerMemory \u003c -1 || containerMemory \u003d\u003d 0) {\n      throw new YarnRuntimeException(\"Value of AM memory \u0027\" + containerMemory\n          + \"\u0027 has to be greater than 0\");\n    }\n    if (containerVirtualCores \u003c -1 || containerVirtualCores \u003d\u003d 0) {\n      throw new YarnRuntimeException(\n          \"Value of AM vcores \u0027\" + containerVirtualCores\n              + \"\u0027 has to be greater than 0\");\n    }\n\n    Resource resourceCapability \u003d\n        Resource.newInstance(containerMemory, containerVirtualCores);\n    if (resourceProfiles \u003d\u003d null) {\n      containerMemory \u003d containerMemory \u003d\u003d -1 ? DEFAULT_CONTAINER_MEMORY :\n          containerMemory;\n      containerVirtualCores \u003d\n          containerVirtualCores \u003d\u003d -1 ? DEFAULT_CONTAINER_VCORES :\n              containerVirtualCores;\n      resourceCapability.setMemorySize(containerMemory);\n      resourceCapability.setVirtualCores(containerVirtualCores);\n    }\n\n    String profileName \u003d containerResourceProfile;\n    if (\"\".equals(containerResourceProfile) \u0026\u0026 resourceProfiles !\u003d null) {\n      profileName \u003d \"default\";\n    }\n    ProfileCapability capability \u003d\n        ProfileCapability.newInstance(profileName, resourceCapability);\n    return capability;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java"
    }
  }
}