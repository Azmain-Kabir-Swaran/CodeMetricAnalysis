{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ComponentInstance.java",
  "functionName": "updateLocalizationStatuses",
  "functionId": "updateLocalizationStatuses___statuses-List__org.apache.hadoop.yarn.api.records.LocalizationStatus__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
  "functionStartLine": 782,
  "functionEndLine": 822,
  "numCommitsSeen": 32,
  "timeTaken": 1417,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "a33ef4fd311784dc15401eb54c82e78528c4f961"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "a33ef4fd311784dc15401eb54c82e78528c4f961": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "25/02/19 11:45 AM",
      "commitNameOld": "95372657fc25c02399b01793833021ccf88dada2",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 10.08,
      "commitsBetweenForRepo": 105,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n   void updateLocalizationStatuses(\n       List\u003corg.apache.hadoop.yarn.api.records.LocalizationStatus\u003e statuses) {\n     Map\u003cString, String\u003e resourcesCpy \u003d new HashMap\u003c\u003e();\n+    readLock.lock();\n     try {\n-      readLock.lock();\n       if (resolvedParams \u003d\u003d null || resolvedParams.didLaunchFail() ||\n           resolvedParams.getResolvedRsrcPaths() \u003d\u003d null ||\n           resolvedParams.getResolvedRsrcPaths().isEmpty()) {\n         cancelLclRetriever();\n         return;\n       }\n       resourcesCpy.putAll(resolvedParams.getResolvedRsrcPaths());\n     } finally {\n       readLock.unlock();\n     }\n     boolean allCompleted \u003d true;\n     Map\u003cString, LocalizationStatus\u003e fromNM \u003d new HashMap\u003c\u003e();\n     statuses.forEach(statusFromNM -\u003e {\n       LocalizationStatus lstatus \u003d new LocalizationStatus()\n           .destFile(statusFromNM.getResourceKey())\n           .diagnostics(statusFromNM.getDiagnostics())\n           .state(statusFromNM.getLocalizationState());\n       fromNM.put(statusFromNM.getResourceKey(), lstatus);\n     });\n \n     for (String resourceKey : resourcesCpy.keySet()) {\n       LocalizationStatus lstatus \u003d fromNM.get(resourceKey);\n       if (lstatus \u003d\u003d null ||\n           lstatus.getState().equals(LocalizationState.PENDING)) {\n         allCompleted \u003d false;\n         break;\n       }\n     }\n \n     List\u003cLocalizationStatus\u003e statusList \u003d new ArrayList\u003c\u003e();\n     statusList.addAll(fromNM.values());\n     this.containerSpec.setLocalizationStatuses(statusList);\n     if (allCompleted) {\n       cancelLclRetriever();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void updateLocalizationStatuses(\n      List\u003corg.apache.hadoop.yarn.api.records.LocalizationStatus\u003e statuses) {\n    Map\u003cString, String\u003e resourcesCpy \u003d new HashMap\u003c\u003e();\n    readLock.lock();\n    try {\n      if (resolvedParams \u003d\u003d null || resolvedParams.didLaunchFail() ||\n          resolvedParams.getResolvedRsrcPaths() \u003d\u003d null ||\n          resolvedParams.getResolvedRsrcPaths().isEmpty()) {\n        cancelLclRetriever();\n        return;\n      }\n      resourcesCpy.putAll(resolvedParams.getResolvedRsrcPaths());\n    } finally {\n      readLock.unlock();\n    }\n    boolean allCompleted \u003d true;\n    Map\u003cString, LocalizationStatus\u003e fromNM \u003d new HashMap\u003c\u003e();\n    statuses.forEach(statusFromNM -\u003e {\n      LocalizationStatus lstatus \u003d new LocalizationStatus()\n          .destFile(statusFromNM.getResourceKey())\n          .diagnostics(statusFromNM.getDiagnostics())\n          .state(statusFromNM.getLocalizationState());\n      fromNM.put(statusFromNM.getResourceKey(), lstatus);\n    });\n\n    for (String resourceKey : resourcesCpy.keySet()) {\n      LocalizationStatus lstatus \u003d fromNM.get(resourceKey);\n      if (lstatus \u003d\u003d null ||\n          lstatus.getState().equals(LocalizationState.PENDING)) {\n        allCompleted \u003d false;\n        break;\n      }\n    }\n\n    List\u003cLocalizationStatus\u003e statusList \u003d new ArrayList\u003c\u003e();\n    statusList.addAll(fromNM.values());\n    this.containerSpec.setLocalizationStatuses(statusList);\n    if (allCompleted) {\n      cancelLclRetriever();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
      "extendedDetails": {}
    },
    "a33ef4fd311784dc15401eb54c82e78528c4f961": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8867. Added resource localization status to YARN service status call.\n           Contributed by Chandni Singh\n",
      "commitDate": "24/01/19 3:43 PM",
      "commitName": "a33ef4fd311784dc15401eb54c82e78528c4f961",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,41 @@\n+  void updateLocalizationStatuses(\n+      List\u003corg.apache.hadoop.yarn.api.records.LocalizationStatus\u003e statuses) {\n+    Map\u003cString, String\u003e resourcesCpy \u003d new HashMap\u003c\u003e();\n+    try {\n+      readLock.lock();\n+      if (resolvedParams \u003d\u003d null || resolvedParams.didLaunchFail() ||\n+          resolvedParams.getResolvedRsrcPaths() \u003d\u003d null ||\n+          resolvedParams.getResolvedRsrcPaths().isEmpty()) {\n+        cancelLclRetriever();\n+        return;\n+      }\n+      resourcesCpy.putAll(resolvedParams.getResolvedRsrcPaths());\n+    } finally {\n+      readLock.unlock();\n+    }\n+    boolean allCompleted \u003d true;\n+    Map\u003cString, LocalizationStatus\u003e fromNM \u003d new HashMap\u003c\u003e();\n+    statuses.forEach(statusFromNM -\u003e {\n+      LocalizationStatus lstatus \u003d new LocalizationStatus()\n+          .destFile(statusFromNM.getResourceKey())\n+          .diagnostics(statusFromNM.getDiagnostics())\n+          .state(statusFromNM.getLocalizationState());\n+      fromNM.put(statusFromNM.getResourceKey(), lstatus);\n+    });\n+\n+    for (String resourceKey : resourcesCpy.keySet()) {\n+      LocalizationStatus lstatus \u003d fromNM.get(resourceKey);\n+      if (lstatus \u003d\u003d null ||\n+          lstatus.getState().equals(LocalizationState.PENDING)) {\n+        allCompleted \u003d false;\n+        break;\n+      }\n+    }\n+\n+    List\u003cLocalizationStatus\u003e statusList \u003d new ArrayList\u003c\u003e();\n+    statusList.addAll(fromNM.values());\n+    this.containerSpec.setLocalizationStatuses(statusList);\n+    if (allCompleted) {\n+      cancelLclRetriever();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void updateLocalizationStatuses(\n      List\u003corg.apache.hadoop.yarn.api.records.LocalizationStatus\u003e statuses) {\n    Map\u003cString, String\u003e resourcesCpy \u003d new HashMap\u003c\u003e();\n    try {\n      readLock.lock();\n      if (resolvedParams \u003d\u003d null || resolvedParams.didLaunchFail() ||\n          resolvedParams.getResolvedRsrcPaths() \u003d\u003d null ||\n          resolvedParams.getResolvedRsrcPaths().isEmpty()) {\n        cancelLclRetriever();\n        return;\n      }\n      resourcesCpy.putAll(resolvedParams.getResolvedRsrcPaths());\n    } finally {\n      readLock.unlock();\n    }\n    boolean allCompleted \u003d true;\n    Map\u003cString, LocalizationStatus\u003e fromNM \u003d new HashMap\u003c\u003e();\n    statuses.forEach(statusFromNM -\u003e {\n      LocalizationStatus lstatus \u003d new LocalizationStatus()\n          .destFile(statusFromNM.getResourceKey())\n          .diagnostics(statusFromNM.getDiagnostics())\n          .state(statusFromNM.getLocalizationState());\n      fromNM.put(statusFromNM.getResourceKey(), lstatus);\n    });\n\n    for (String resourceKey : resourcesCpy.keySet()) {\n      LocalizationStatus lstatus \u003d fromNM.get(resourceKey);\n      if (lstatus \u003d\u003d null ||\n          lstatus.getState().equals(LocalizationState.PENDING)) {\n        allCompleted \u003d false;\n        break;\n      }\n    }\n\n    List\u003cLocalizationStatus\u003e statusList \u003d new ArrayList\u003c\u003e();\n    statusList.addAll(fromNM.values());\n    this.containerSpec.setLocalizationStatuses(statusList);\n    if (allCompleted) {\n      cancelLclRetriever();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java"
    }
  }
}