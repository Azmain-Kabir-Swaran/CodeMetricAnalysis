{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsDatasetImpl.java",
  "functionName": "finalizeReplica",
  "functionId": "finalizeReplica___bpid-String__replicaInfo-ReplicaInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
  "functionStartLine": 1828,
  "functionEndLine": 1868,
  "numCommitsSeen": 552,
  "timeTaken": 16468,
  "changeHistory": [
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8",
    "2021f4bdce3b27c46edaad198f0007a26a8a1391",
    "aa45faf0b20c922b0d147ece9fa01fb95a5b0dec",
    "69afa26f19adad4c630a307c274130eb8b697141",
    "1543d0f5be6a02ad00e7a33e35d78af8516043e3",
    "86c9862bec0248d671e657aa56094a2919b8ac14",
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
    "e453989a5722e653bd97e3e54f9bbdffc9454fba",
    "5e8b6973527e5f714652641ed95e8a4509e18cfa",
    "b2d5ed36bcb80e2581191dcdc3976e825c959142",
    "d1fa58292e87bc29b4ef1278368c2be938a0afc4",
    "4cf9afacbe3d0814fb616d238aa9b16b1ae68386",
    "eb448e14399e17f11b9e523e4050de245b9b0408",
    "fba994ffe20d387e8ed875e727fc3d93f7097101",
    "f39f8c57344ede533ca4363c98230f3a0c401a76",
    "46099ce7f1a1d5aab85d9408dc1454fcbe54f7e8",
    "bc13dfb1426944ce45293cb8f444239a7406762c",
    "99a68a14237b4cd1936ba5e9468d25d35dad594c",
    "b6ffb08a467f1b5bc89e5114c462c3117b337be6",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8": "Ybodychange",
    "2021f4bdce3b27c46edaad198f0007a26a8a1391": "Ybodychange",
    "aa45faf0b20c922b0d147ece9fa01fb95a5b0dec": "Ybodychange",
    "69afa26f19adad4c630a307c274130eb8b697141": "Ymultichange(Yparameterchange,Ybodychange)",
    "1543d0f5be6a02ad00e7a33e35d78af8516043e3": "Ymultichange(Yparameterchange,Ybodychange)",
    "86c9862bec0248d671e657aa56094a2919b8ac14": "Ymultichange(Yreturntypechange,Ybodychange)",
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c": "Ymultichange(Ymodifierchange,Ybodychange)",
    "e453989a5722e653bd97e3e54f9bbdffc9454fba": "Ybodychange",
    "5e8b6973527e5f714652641ed95e8a4509e18cfa": "Ybodychange",
    "b2d5ed36bcb80e2581191dcdc3976e825c959142": "Ybodychange",
    "d1fa58292e87bc29b4ef1278368c2be938a0afc4": "Ybodychange",
    "4cf9afacbe3d0814fb616d238aa9b16b1ae68386": "Ybodychange",
    "eb448e14399e17f11b9e523e4050de245b9b0408": "Ybodychange",
    "fba994ffe20d387e8ed875e727fc3d93f7097101": "Ybodychange",
    "f39f8c57344ede533ca4363c98230f3a0c401a76": "Ybodychange",
    "46099ce7f1a1d5aab85d9408dc1454fcbe54f7e8": "Ybodychange",
    "bc13dfb1426944ce45293cb8f444239a7406762c": "Ymultichange(Ymovefromfile,Ybodychange)",
    "99a68a14237b4cd1936ba5e9468d25d35dad594c": "Ybodychange",
    "b6ffb08a467f1b5bc89e5114c462c3117b337be6": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15150. Introduce read write lock to Datanode. Contributed Stephen O\u0027Donnell.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "11/02/20 8:00 AM",
      "commitName": "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8",
      "commitAuthor": "Stephen O\u0027Donnell",
      "commitDateOld": "28/01/20 10:10 AM",
      "commitNameOld": "1839c467f60cbb8592d446694ec3d7710cda5142",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 13.91,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n   private ReplicaInfo finalizeReplica(String bpid, ReplicaInfo replicaInfo)\n       throws IOException {\n-    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n+    try (AutoCloseableLock lock \u003d datasetWriteLock.acquire()) {\n       // Compare generation stamp of old and new replica before finalizing\n       if (volumeMap.get(bpid, replicaInfo.getBlockId()).getGenerationStamp()\n           \u003e replicaInfo.getGenerationStamp()) {\n         throw new IOException(\"Generation Stamp should be monotonically \"\n             + \"increased.\");\n       }\n \n       ReplicaInfo newReplicaInfo \u003d null;\n       if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n           replicaInfo.getOriginalReplica().getState()\n           \u003d\u003d ReplicaState.FINALIZED) {\n         newReplicaInfo \u003d replicaInfo.getOriginalReplica();\n         ((FinalizedReplica)newReplicaInfo).loadLastPartialChunkChecksum();\n       } else {\n         FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n         if (v \u003d\u003d null) {\n           throw new IOException(\"No volume for block \" + replicaInfo);\n         }\n \n         newReplicaInfo \u003d v.addFinalizedBlock(\n             bpid, replicaInfo, replicaInfo, replicaInfo.getBytesReserved());\n         if (v.isTransientStorage()) {\n           releaseLockedMemory(\n               replicaInfo.getOriginalBytesReserved()\n                   - replicaInfo.getNumBytes(),\n               false);\n           ramDiskReplicaTracker.addReplica(\n               bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n           datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n         }\n       }\n       assert newReplicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED\n           : \"Replica should be finalized\";\n \n       volumeMap.add(bpid, newReplicaInfo);\n       return newReplicaInfo;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ReplicaInfo finalizeReplica(String bpid, ReplicaInfo replicaInfo)\n      throws IOException {\n    try (AutoCloseableLock lock \u003d datasetWriteLock.acquire()) {\n      // Compare generation stamp of old and new replica before finalizing\n      if (volumeMap.get(bpid, replicaInfo.getBlockId()).getGenerationStamp()\n          \u003e replicaInfo.getGenerationStamp()) {\n        throw new IOException(\"Generation Stamp should be monotonically \"\n            + \"increased.\");\n      }\n\n      ReplicaInfo newReplicaInfo \u003d null;\n      if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n          replicaInfo.getOriginalReplica().getState()\n          \u003d\u003d ReplicaState.FINALIZED) {\n        newReplicaInfo \u003d replicaInfo.getOriginalReplica();\n        ((FinalizedReplica)newReplicaInfo).loadLastPartialChunkChecksum();\n      } else {\n        FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n        if (v \u003d\u003d null) {\n          throw new IOException(\"No volume for block \" + replicaInfo);\n        }\n\n        newReplicaInfo \u003d v.addFinalizedBlock(\n            bpid, replicaInfo, replicaInfo, replicaInfo.getBytesReserved());\n        if (v.isTransientStorage()) {\n          releaseLockedMemory(\n              replicaInfo.getOriginalBytesReserved()\n                  - replicaInfo.getNumBytes(),\n              false);\n          ramDiskReplicaTracker.addReplica(\n              bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n          datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n        }\n      }\n      assert newReplicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED\n          : \"Replica should be finalized\";\n\n      volumeMap.add(bpid, newReplicaInfo);\n      return newReplicaInfo;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "2021f4bdce3b27c46edaad198f0007a26a8a1391": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11187. Optimize disk access for last partial chunk checksum of Finalized replica. Contributed by Wei-Chiu Chuang.\n",
      "commitDate": "02/02/18 5:18 PM",
      "commitName": "2021f4bdce3b27c46edaad198f0007a26a8a1391",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "01/02/18 6:03 PM",
      "commitNameOld": "aa45faf0b20c922b0d147ece9fa01fb95a5b0dec",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 0.97,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,41 @@\n   private ReplicaInfo finalizeReplica(String bpid, ReplicaInfo replicaInfo)\n       throws IOException {\n     try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n       // Compare generation stamp of old and new replica before finalizing\n       if (volumeMap.get(bpid, replicaInfo.getBlockId()).getGenerationStamp()\n           \u003e replicaInfo.getGenerationStamp()) {\n         throw new IOException(\"Generation Stamp should be monotonically \"\n             + \"increased.\");\n       }\n \n       ReplicaInfo newReplicaInfo \u003d null;\n       if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n           replicaInfo.getOriginalReplica().getState()\n           \u003d\u003d ReplicaState.FINALIZED) {\n         newReplicaInfo \u003d replicaInfo.getOriginalReplica();\n+        ((FinalizedReplica)newReplicaInfo).loadLastPartialChunkChecksum();\n       } else {\n         FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n         if (v \u003d\u003d null) {\n           throw new IOException(\"No volume for block \" + replicaInfo);\n         }\n \n         newReplicaInfo \u003d v.addFinalizedBlock(\n             bpid, replicaInfo, replicaInfo, replicaInfo.getBytesReserved());\n         if (v.isTransientStorage()) {\n           releaseLockedMemory(\n               replicaInfo.getOriginalBytesReserved()\n                   - replicaInfo.getNumBytes(),\n               false);\n           ramDiskReplicaTracker.addReplica(\n               bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n           datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n         }\n       }\n       assert newReplicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED\n           : \"Replica should be finalized\";\n \n       volumeMap.add(bpid, newReplicaInfo);\n       return newReplicaInfo;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ReplicaInfo finalizeReplica(String bpid, ReplicaInfo replicaInfo)\n      throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      // Compare generation stamp of old and new replica before finalizing\n      if (volumeMap.get(bpid, replicaInfo.getBlockId()).getGenerationStamp()\n          \u003e replicaInfo.getGenerationStamp()) {\n        throw new IOException(\"Generation Stamp should be monotonically \"\n            + \"increased.\");\n      }\n\n      ReplicaInfo newReplicaInfo \u003d null;\n      if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n          replicaInfo.getOriginalReplica().getState()\n          \u003d\u003d ReplicaState.FINALIZED) {\n        newReplicaInfo \u003d replicaInfo.getOriginalReplica();\n        ((FinalizedReplica)newReplicaInfo).loadLastPartialChunkChecksum();\n      } else {\n        FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n        if (v \u003d\u003d null) {\n          throw new IOException(\"No volume for block \" + replicaInfo);\n        }\n\n        newReplicaInfo \u003d v.addFinalizedBlock(\n            bpid, replicaInfo, replicaInfo, replicaInfo.getBytesReserved());\n        if (v.isTransientStorage()) {\n          releaseLockedMemory(\n              replicaInfo.getOriginalBytesReserved()\n                  - replicaInfo.getNumBytes(),\n              false);\n          ramDiskReplicaTracker.addReplica(\n              bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n          datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n        }\n      }\n      assert newReplicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED\n          : \"Replica should be finalized\";\n\n      volumeMap.add(bpid, newReplicaInfo);\n      return newReplicaInfo;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "aa45faf0b20c922b0d147ece9fa01fb95a5b0dec": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12942. Synchronization issue in FSDataSetImpl#moveBlock. Contributed by Ajay Kumar.\n",
      "commitDate": "01/02/18 6:03 PM",
      "commitName": "aa45faf0b20c922b0d147ece9fa01fb95a5b0dec",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "19/01/18 5:51 PM",
      "commitNameOld": "62c9e7fa99da1b1c8af222436102b8dea02fcde8",
      "commitAuthorOld": "Chen Liang",
      "daysBetweenCommits": 13.01,
      "commitsBetweenForRepo": 101,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,40 @@\n   private ReplicaInfo finalizeReplica(String bpid, ReplicaInfo replicaInfo)\n       throws IOException {\n     try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n+      // Compare generation stamp of old and new replica before finalizing\n+      if (volumeMap.get(bpid, replicaInfo.getBlockId()).getGenerationStamp()\n+          \u003e replicaInfo.getGenerationStamp()) {\n+        throw new IOException(\"Generation Stamp should be monotonically \"\n+            + \"increased.\");\n+      }\n+\n       ReplicaInfo newReplicaInfo \u003d null;\n       if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n           replicaInfo.getOriginalReplica().getState()\n           \u003d\u003d ReplicaState.FINALIZED) {\n         newReplicaInfo \u003d replicaInfo.getOriginalReplica();\n       } else {\n         FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n         if (v \u003d\u003d null) {\n           throw new IOException(\"No volume for block \" + replicaInfo);\n         }\n \n         newReplicaInfo \u003d v.addFinalizedBlock(\n             bpid, replicaInfo, replicaInfo, replicaInfo.getBytesReserved());\n         if (v.isTransientStorage()) {\n           releaseLockedMemory(\n               replicaInfo.getOriginalBytesReserved()\n                   - replicaInfo.getNumBytes(),\n               false);\n           ramDiskReplicaTracker.addReplica(\n               bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n           datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n         }\n       }\n       assert newReplicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED\n           : \"Replica should be finalized\";\n+\n       volumeMap.add(bpid, newReplicaInfo);\n       return newReplicaInfo;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ReplicaInfo finalizeReplica(String bpid, ReplicaInfo replicaInfo)\n      throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      // Compare generation stamp of old and new replica before finalizing\n      if (volumeMap.get(bpid, replicaInfo.getBlockId()).getGenerationStamp()\n          \u003e replicaInfo.getGenerationStamp()) {\n        throw new IOException(\"Generation Stamp should be monotonically \"\n            + \"increased.\");\n      }\n\n      ReplicaInfo newReplicaInfo \u003d null;\n      if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n          replicaInfo.getOriginalReplica().getState()\n          \u003d\u003d ReplicaState.FINALIZED) {\n        newReplicaInfo \u003d replicaInfo.getOriginalReplica();\n      } else {\n        FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n        if (v \u003d\u003d null) {\n          throw new IOException(\"No volume for block \" + replicaInfo);\n        }\n\n        newReplicaInfo \u003d v.addFinalizedBlock(\n            bpid, replicaInfo, replicaInfo, replicaInfo.getBytesReserved());\n        if (v.isTransientStorage()) {\n          releaseLockedMemory(\n              replicaInfo.getOriginalBytesReserved()\n                  - replicaInfo.getNumBytes(),\n              false);\n          ramDiskReplicaTracker.addReplica(\n              bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n          datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n        }\n      }\n      assert newReplicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED\n          : \"Replica should be finalized\";\n\n      volumeMap.add(bpid, newReplicaInfo);\n      return newReplicaInfo;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "69afa26f19adad4c630a307c274130eb8b697141": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-12157. Do fsyncDirectory(..) outside of FSDataset lock. Contributed by inayakumar B.\n",
      "commitDate": "09/08/17 7:03 AM",
      "commitName": "69afa26f19adad4c630a307c274130eb8b697141",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-12157. Do fsyncDirectory(..) outside of FSDataset lock. Contributed by inayakumar B.\n",
          "commitDate": "09/08/17 7:03 AM",
          "commitName": "69afa26f19adad4c630a307c274130eb8b697141",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "01/08/17 6:34 PM",
          "commitNameOld": "6814324c332a7d780f3b844fd6f1c62db2f6c88e",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 7.52,
          "commitsBetweenForRepo": 54,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,45 +1,32 @@\n-  private ReplicaInfo finalizeReplica(String bpid,\n-      ReplicaInfo replicaInfo, boolean fsyncDir) throws IOException {\n+  private ReplicaInfo finalizeReplica(String bpid, ReplicaInfo replicaInfo)\n+      throws IOException {\n     try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n       ReplicaInfo newReplicaInfo \u003d null;\n       if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n           replicaInfo.getOriginalReplica().getState()\n           \u003d\u003d ReplicaState.FINALIZED) {\n         newReplicaInfo \u003d replicaInfo.getOriginalReplica();\n       } else {\n         FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n         if (v \u003d\u003d null) {\n           throw new IOException(\"No volume for block \" + replicaInfo);\n         }\n \n         newReplicaInfo \u003d v.addFinalizedBlock(\n             bpid, replicaInfo, replicaInfo, replicaInfo.getBytesReserved());\n-        /*\n-         * Sync the directory after rename from tmp/rbw to Finalized if\n-         * configured. Though rename should be atomic operation, sync on both\n-         * dest and src directories are done because IOUtils.fsync() calls\n-         * directory\u0027s channel sync, not the journal itself.\n-         */\n-        if (fsyncDir \u0026\u0026 newReplicaInfo instanceof FinalizedReplica\n-            \u0026\u0026 replicaInfo instanceof LocalReplica) {\n-          FinalizedReplica finalizedReplica \u003d (FinalizedReplica) newReplicaInfo;\n-          finalizedReplica.fsyncDirectory();\n-          LocalReplica localReplica \u003d (LocalReplica) replicaInfo;\n-          localReplica.fsyncDirectory();\n-        }\n         if (v.isTransientStorage()) {\n           releaseLockedMemory(\n               replicaInfo.getOriginalBytesReserved()\n                   - replicaInfo.getNumBytes(),\n               false);\n           ramDiskReplicaTracker.addReplica(\n               bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n           datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n         }\n       }\n       assert newReplicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED\n           : \"Replica should be finalized\";\n       volumeMap.add(bpid, newReplicaInfo);\n       return newReplicaInfo;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ReplicaInfo finalizeReplica(String bpid, ReplicaInfo replicaInfo)\n      throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      ReplicaInfo newReplicaInfo \u003d null;\n      if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n          replicaInfo.getOriginalReplica().getState()\n          \u003d\u003d ReplicaState.FINALIZED) {\n        newReplicaInfo \u003d replicaInfo.getOriginalReplica();\n      } else {\n        FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n        if (v \u003d\u003d null) {\n          throw new IOException(\"No volume for block \" + replicaInfo);\n        }\n\n        newReplicaInfo \u003d v.addFinalizedBlock(\n            bpid, replicaInfo, replicaInfo, replicaInfo.getBytesReserved());\n        if (v.isTransientStorage()) {\n          releaseLockedMemory(\n              replicaInfo.getOriginalBytesReserved()\n                  - replicaInfo.getNumBytes(),\n              false);\n          ramDiskReplicaTracker.addReplica(\n              bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n          datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n        }\n      }\n      assert newReplicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED\n          : \"Replica should be finalized\";\n      volumeMap.add(bpid, newReplicaInfo);\n      return newReplicaInfo;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldValue": "[bpid-String, replicaInfo-ReplicaInfo, fsyncDir-boolean]",
            "newValue": "[bpid-String, replicaInfo-ReplicaInfo]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12157. Do fsyncDirectory(..) outside of FSDataset lock. Contributed by inayakumar B.\n",
          "commitDate": "09/08/17 7:03 AM",
          "commitName": "69afa26f19adad4c630a307c274130eb8b697141",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "01/08/17 6:34 PM",
          "commitNameOld": "6814324c332a7d780f3b844fd6f1c62db2f6c88e",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 7.52,
          "commitsBetweenForRepo": 54,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,45 +1,32 @@\n-  private ReplicaInfo finalizeReplica(String bpid,\n-      ReplicaInfo replicaInfo, boolean fsyncDir) throws IOException {\n+  private ReplicaInfo finalizeReplica(String bpid, ReplicaInfo replicaInfo)\n+      throws IOException {\n     try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n       ReplicaInfo newReplicaInfo \u003d null;\n       if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n           replicaInfo.getOriginalReplica().getState()\n           \u003d\u003d ReplicaState.FINALIZED) {\n         newReplicaInfo \u003d replicaInfo.getOriginalReplica();\n       } else {\n         FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n         if (v \u003d\u003d null) {\n           throw new IOException(\"No volume for block \" + replicaInfo);\n         }\n \n         newReplicaInfo \u003d v.addFinalizedBlock(\n             bpid, replicaInfo, replicaInfo, replicaInfo.getBytesReserved());\n-        /*\n-         * Sync the directory after rename from tmp/rbw to Finalized if\n-         * configured. Though rename should be atomic operation, sync on both\n-         * dest and src directories are done because IOUtils.fsync() calls\n-         * directory\u0027s channel sync, not the journal itself.\n-         */\n-        if (fsyncDir \u0026\u0026 newReplicaInfo instanceof FinalizedReplica\n-            \u0026\u0026 replicaInfo instanceof LocalReplica) {\n-          FinalizedReplica finalizedReplica \u003d (FinalizedReplica) newReplicaInfo;\n-          finalizedReplica.fsyncDirectory();\n-          LocalReplica localReplica \u003d (LocalReplica) replicaInfo;\n-          localReplica.fsyncDirectory();\n-        }\n         if (v.isTransientStorage()) {\n           releaseLockedMemory(\n               replicaInfo.getOriginalBytesReserved()\n                   - replicaInfo.getNumBytes(),\n               false);\n           ramDiskReplicaTracker.addReplica(\n               bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n           datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n         }\n       }\n       assert newReplicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED\n           : \"Replica should be finalized\";\n       volumeMap.add(bpid, newReplicaInfo);\n       return newReplicaInfo;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ReplicaInfo finalizeReplica(String bpid, ReplicaInfo replicaInfo)\n      throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      ReplicaInfo newReplicaInfo \u003d null;\n      if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n          replicaInfo.getOriginalReplica().getState()\n          \u003d\u003d ReplicaState.FINALIZED) {\n        newReplicaInfo \u003d replicaInfo.getOriginalReplica();\n      } else {\n        FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n        if (v \u003d\u003d null) {\n          throw new IOException(\"No volume for block \" + replicaInfo);\n        }\n\n        newReplicaInfo \u003d v.addFinalizedBlock(\n            bpid, replicaInfo, replicaInfo, replicaInfo.getBytesReserved());\n        if (v.isTransientStorage()) {\n          releaseLockedMemory(\n              replicaInfo.getOriginalBytesReserved()\n                  - replicaInfo.getNumBytes(),\n              false);\n          ramDiskReplicaTracker.addReplica(\n              bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n          datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n        }\n      }\n      assert newReplicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED\n          : \"Replica should be finalized\";\n      volumeMap.add(bpid, newReplicaInfo);\n      return newReplicaInfo;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "1543d0f5be6a02ad00e7a33e35d78af8516043e3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5042. Completed files lost after power failure. Contributed by Vinayakumar B.\n",
      "commitDate": "31/05/17 8:55 AM",
      "commitName": "1543d0f5be6a02ad00e7a33e35d78af8516043e3",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5042. Completed files lost after power failure. Contributed by Vinayakumar B.\n",
          "commitDate": "31/05/17 8:55 AM",
          "commitName": "1543d0f5be6a02ad00e7a33e35d78af8516043e3",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "25/05/17 11:05 AM",
          "commitNameOld": "29b7df960fc3d0a7d1416225c3106c7d4222f0ca",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 5.91,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,45 @@\n   private ReplicaInfo finalizeReplica(String bpid,\n-      ReplicaInfo replicaInfo) throws IOException {\n+      ReplicaInfo replicaInfo, boolean fsyncDir) throws IOException {\n     try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n       ReplicaInfo newReplicaInfo \u003d null;\n       if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n           replicaInfo.getOriginalReplica().getState()\n           \u003d\u003d ReplicaState.FINALIZED) {\n         newReplicaInfo \u003d replicaInfo.getOriginalReplica();\n       } else {\n         FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n         if (v \u003d\u003d null) {\n           throw new IOException(\"No volume for block \" + replicaInfo);\n         }\n \n         newReplicaInfo \u003d v.addFinalizedBlock(\n             bpid, replicaInfo, replicaInfo, replicaInfo.getBytesReserved());\n+        /*\n+         * Sync the directory after rename from tmp/rbw to Finalized if\n+         * configured. Though rename should be atomic operation, sync on both\n+         * dest and src directories are done because IOUtils.fsync() calls\n+         * directory\u0027s channel sync, not the journal itself.\n+         */\n+        if (fsyncDir \u0026\u0026 newReplicaInfo instanceof FinalizedReplica\n+            \u0026\u0026 replicaInfo instanceof LocalReplica) {\n+          FinalizedReplica finalizedReplica \u003d (FinalizedReplica) newReplicaInfo;\n+          finalizedReplica.fsyncDirectory();\n+          LocalReplica localReplica \u003d (LocalReplica) replicaInfo;\n+          localReplica.fsyncDirectory();\n+        }\n         if (v.isTransientStorage()) {\n           releaseLockedMemory(\n               replicaInfo.getOriginalBytesReserved()\n                   - replicaInfo.getNumBytes(),\n               false);\n           ramDiskReplicaTracker.addReplica(\n               bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n           datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n         }\n       }\n       assert newReplicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED\n           : \"Replica should be finalized\";\n       volumeMap.add(bpid, newReplicaInfo);\n       return newReplicaInfo;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ReplicaInfo finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo, boolean fsyncDir) throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      ReplicaInfo newReplicaInfo \u003d null;\n      if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n          replicaInfo.getOriginalReplica().getState()\n          \u003d\u003d ReplicaState.FINALIZED) {\n        newReplicaInfo \u003d replicaInfo.getOriginalReplica();\n      } else {\n        FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n        if (v \u003d\u003d null) {\n          throw new IOException(\"No volume for block \" + replicaInfo);\n        }\n\n        newReplicaInfo \u003d v.addFinalizedBlock(\n            bpid, replicaInfo, replicaInfo, replicaInfo.getBytesReserved());\n        /*\n         * Sync the directory after rename from tmp/rbw to Finalized if\n         * configured. Though rename should be atomic operation, sync on both\n         * dest and src directories are done because IOUtils.fsync() calls\n         * directory\u0027s channel sync, not the journal itself.\n         */\n        if (fsyncDir \u0026\u0026 newReplicaInfo instanceof FinalizedReplica\n            \u0026\u0026 replicaInfo instanceof LocalReplica) {\n          FinalizedReplica finalizedReplica \u003d (FinalizedReplica) newReplicaInfo;\n          finalizedReplica.fsyncDirectory();\n          LocalReplica localReplica \u003d (LocalReplica) replicaInfo;\n          localReplica.fsyncDirectory();\n        }\n        if (v.isTransientStorage()) {\n          releaseLockedMemory(\n              replicaInfo.getOriginalBytesReserved()\n                  - replicaInfo.getNumBytes(),\n              false);\n          ramDiskReplicaTracker.addReplica(\n              bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n          datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n        }\n      }\n      assert newReplicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED\n          : \"Replica should be finalized\";\n      volumeMap.add(bpid, newReplicaInfo);\n      return newReplicaInfo;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldValue": "[bpid-String, replicaInfo-ReplicaInfo]",
            "newValue": "[bpid-String, replicaInfo-ReplicaInfo, fsyncDir-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5042. Completed files lost after power failure. Contributed by Vinayakumar B.\n",
          "commitDate": "31/05/17 8:55 AM",
          "commitName": "1543d0f5be6a02ad00e7a33e35d78af8516043e3",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "25/05/17 11:05 AM",
          "commitNameOld": "29b7df960fc3d0a7d1416225c3106c7d4222f0ca",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 5.91,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,45 @@\n   private ReplicaInfo finalizeReplica(String bpid,\n-      ReplicaInfo replicaInfo) throws IOException {\n+      ReplicaInfo replicaInfo, boolean fsyncDir) throws IOException {\n     try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n       ReplicaInfo newReplicaInfo \u003d null;\n       if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n           replicaInfo.getOriginalReplica().getState()\n           \u003d\u003d ReplicaState.FINALIZED) {\n         newReplicaInfo \u003d replicaInfo.getOriginalReplica();\n       } else {\n         FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n         if (v \u003d\u003d null) {\n           throw new IOException(\"No volume for block \" + replicaInfo);\n         }\n \n         newReplicaInfo \u003d v.addFinalizedBlock(\n             bpid, replicaInfo, replicaInfo, replicaInfo.getBytesReserved());\n+        /*\n+         * Sync the directory after rename from tmp/rbw to Finalized if\n+         * configured. Though rename should be atomic operation, sync on both\n+         * dest and src directories are done because IOUtils.fsync() calls\n+         * directory\u0027s channel sync, not the journal itself.\n+         */\n+        if (fsyncDir \u0026\u0026 newReplicaInfo instanceof FinalizedReplica\n+            \u0026\u0026 replicaInfo instanceof LocalReplica) {\n+          FinalizedReplica finalizedReplica \u003d (FinalizedReplica) newReplicaInfo;\n+          finalizedReplica.fsyncDirectory();\n+          LocalReplica localReplica \u003d (LocalReplica) replicaInfo;\n+          localReplica.fsyncDirectory();\n+        }\n         if (v.isTransientStorage()) {\n           releaseLockedMemory(\n               replicaInfo.getOriginalBytesReserved()\n                   - replicaInfo.getNumBytes(),\n               false);\n           ramDiskReplicaTracker.addReplica(\n               bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n           datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n         }\n       }\n       assert newReplicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED\n           : \"Replica should be finalized\";\n       volumeMap.add(bpid, newReplicaInfo);\n       return newReplicaInfo;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ReplicaInfo finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo, boolean fsyncDir) throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      ReplicaInfo newReplicaInfo \u003d null;\n      if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n          replicaInfo.getOriginalReplica().getState()\n          \u003d\u003d ReplicaState.FINALIZED) {\n        newReplicaInfo \u003d replicaInfo.getOriginalReplica();\n      } else {\n        FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n        if (v \u003d\u003d null) {\n          throw new IOException(\"No volume for block \" + replicaInfo);\n        }\n\n        newReplicaInfo \u003d v.addFinalizedBlock(\n            bpid, replicaInfo, replicaInfo, replicaInfo.getBytesReserved());\n        /*\n         * Sync the directory after rename from tmp/rbw to Finalized if\n         * configured. Though rename should be atomic operation, sync on both\n         * dest and src directories are done because IOUtils.fsync() calls\n         * directory\u0027s channel sync, not the journal itself.\n         */\n        if (fsyncDir \u0026\u0026 newReplicaInfo instanceof FinalizedReplica\n            \u0026\u0026 replicaInfo instanceof LocalReplica) {\n          FinalizedReplica finalizedReplica \u003d (FinalizedReplica) newReplicaInfo;\n          finalizedReplica.fsyncDirectory();\n          LocalReplica localReplica \u003d (LocalReplica) replicaInfo;\n          localReplica.fsyncDirectory();\n        }\n        if (v.isTransientStorage()) {\n          releaseLockedMemory(\n              replicaInfo.getOriginalBytesReserved()\n                  - replicaInfo.getNumBytes(),\n              false);\n          ramDiskReplicaTracker.addReplica(\n              bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n          datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n        }\n      }\n      assert newReplicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED\n          : \"Replica should be finalized\";\n      volumeMap.add(bpid, newReplicaInfo);\n      return newReplicaInfo;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "86c9862bec0248d671e657aa56094a2919b8ac14": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "13/09/16 12:54 PM",
      "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthor": "Lei Xu",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
          "commitDate": "13/09/16 12:54 PM",
          "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "10/09/16 6:22 PM",
          "commitNameOld": "a99bf26a0899bcc4307c3a242c8414eaef555aa7",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 2.77,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,32 @@\n-  private FinalizedReplica finalizeReplica(String bpid,\n+  private ReplicaInfo finalizeReplica(String bpid,\n       ReplicaInfo replicaInfo) throws IOException {\n     try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n-      FinalizedReplica newReplicaInfo \u003d null;\n+      ReplicaInfo newReplicaInfo \u003d null;\n       if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n-          ((ReplicaUnderRecovery) replicaInfo).getOriginalReplica().getState()\n-              \u003d\u003d ReplicaState.FINALIZED) {\n-        newReplicaInfo \u003d (FinalizedReplica)\n-            ((ReplicaUnderRecovery) replicaInfo).getOriginalReplica();\n+          replicaInfo.getOriginalReplica().getState()\n+          \u003d\u003d ReplicaState.FINALIZED) {\n+        newReplicaInfo \u003d replicaInfo.getOriginalReplica();\n       } else {\n-        FsVolumeImpl v \u003d (FsVolumeImpl) replicaInfo.getVolume();\n-        File f \u003d replicaInfo.getBlockFile();\n+        FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n         if (v \u003d\u003d null) {\n-          throw new IOException(\"No volume for temporary file \" + f +\n-              \" for block \" + replicaInfo);\n+          throw new IOException(\"No volume for block \" + replicaInfo);\n         }\n \n-        File dest \u003d v.addFinalizedBlock(\n-            bpid, replicaInfo, f, replicaInfo.getBytesReserved());\n-        newReplicaInfo \u003d\n-            new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n-\n+        newReplicaInfo \u003d v.addFinalizedBlock(\n+            bpid, replicaInfo, replicaInfo, replicaInfo.getBytesReserved());\n         if (v.isTransientStorage()) {\n           releaseLockedMemory(\n               replicaInfo.getOriginalBytesReserved()\n                   - replicaInfo.getNumBytes(),\n               false);\n           ramDiskReplicaTracker.addReplica(\n               bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n           datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n         }\n       }\n+      assert newReplicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED\n+          : \"Replica should be finalized\";\n       volumeMap.add(bpid, newReplicaInfo);\n-\n       return newReplicaInfo;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ReplicaInfo finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      ReplicaInfo newReplicaInfo \u003d null;\n      if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n          replicaInfo.getOriginalReplica().getState()\n          \u003d\u003d ReplicaState.FINALIZED) {\n        newReplicaInfo \u003d replicaInfo.getOriginalReplica();\n      } else {\n        FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n        if (v \u003d\u003d null) {\n          throw new IOException(\"No volume for block \" + replicaInfo);\n        }\n\n        newReplicaInfo \u003d v.addFinalizedBlock(\n            bpid, replicaInfo, replicaInfo, replicaInfo.getBytesReserved());\n        if (v.isTransientStorage()) {\n          releaseLockedMemory(\n              replicaInfo.getOriginalBytesReserved()\n                  - replicaInfo.getNumBytes(),\n              false);\n          ramDiskReplicaTracker.addReplica(\n              bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n          datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n        }\n      }\n      assert newReplicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED\n          : \"Replica should be finalized\";\n      volumeMap.add(bpid, newReplicaInfo);\n      return newReplicaInfo;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldValue": "FinalizedReplica",
            "newValue": "ReplicaInfo"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
          "commitDate": "13/09/16 12:54 PM",
          "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "10/09/16 6:22 PM",
          "commitNameOld": "a99bf26a0899bcc4307c3a242c8414eaef555aa7",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 2.77,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,32 @@\n-  private FinalizedReplica finalizeReplica(String bpid,\n+  private ReplicaInfo finalizeReplica(String bpid,\n       ReplicaInfo replicaInfo) throws IOException {\n     try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n-      FinalizedReplica newReplicaInfo \u003d null;\n+      ReplicaInfo newReplicaInfo \u003d null;\n       if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n-          ((ReplicaUnderRecovery) replicaInfo).getOriginalReplica().getState()\n-              \u003d\u003d ReplicaState.FINALIZED) {\n-        newReplicaInfo \u003d (FinalizedReplica)\n-            ((ReplicaUnderRecovery) replicaInfo).getOriginalReplica();\n+          replicaInfo.getOriginalReplica().getState()\n+          \u003d\u003d ReplicaState.FINALIZED) {\n+        newReplicaInfo \u003d replicaInfo.getOriginalReplica();\n       } else {\n-        FsVolumeImpl v \u003d (FsVolumeImpl) replicaInfo.getVolume();\n-        File f \u003d replicaInfo.getBlockFile();\n+        FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n         if (v \u003d\u003d null) {\n-          throw new IOException(\"No volume for temporary file \" + f +\n-              \" for block \" + replicaInfo);\n+          throw new IOException(\"No volume for block \" + replicaInfo);\n         }\n \n-        File dest \u003d v.addFinalizedBlock(\n-            bpid, replicaInfo, f, replicaInfo.getBytesReserved());\n-        newReplicaInfo \u003d\n-            new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n-\n+        newReplicaInfo \u003d v.addFinalizedBlock(\n+            bpid, replicaInfo, replicaInfo, replicaInfo.getBytesReserved());\n         if (v.isTransientStorage()) {\n           releaseLockedMemory(\n               replicaInfo.getOriginalBytesReserved()\n                   - replicaInfo.getNumBytes(),\n               false);\n           ramDiskReplicaTracker.addReplica(\n               bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n           datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n         }\n       }\n+      assert newReplicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED\n+          : \"Replica should be finalized\";\n       volumeMap.add(bpid, newReplicaInfo);\n-\n       return newReplicaInfo;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ReplicaInfo finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      ReplicaInfo newReplicaInfo \u003d null;\n      if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n          replicaInfo.getOriginalReplica().getState()\n          \u003d\u003d ReplicaState.FINALIZED) {\n        newReplicaInfo \u003d replicaInfo.getOriginalReplica();\n      } else {\n        FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n        if (v \u003d\u003d null) {\n          throw new IOException(\"No volume for block \" + replicaInfo);\n        }\n\n        newReplicaInfo \u003d v.addFinalizedBlock(\n            bpid, replicaInfo, replicaInfo, replicaInfo.getBytesReserved());\n        if (v.isTransientStorage()) {\n          releaseLockedMemory(\n              replicaInfo.getOriginalBytesReserved()\n                  - replicaInfo.getNumBytes(),\n              false);\n          ramDiskReplicaTracker.addReplica(\n              bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n          datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n        }\n      }\n      assert newReplicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED\n          : \"Replica should be finalized\";\n      volumeMap.add(bpid, newReplicaInfo);\n      return newReplicaInfo;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-10682. Replace FsDatasetImpl object lock with a separate lock object. (Chen Liang)\n",
      "commitDate": "08/08/16 12:02 PM",
      "commitName": "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-10682. Replace FsDatasetImpl object lock with a separate lock object. (Chen Liang)\n",
          "commitDate": "08/08/16 12:02 PM",
          "commitName": "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/07/16 7:40 PM",
          "commitNameOld": "da6f1b88dd47e22b24d44f6fc8bbee73e85746f7",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 30.68,
          "commitsBetweenForRepo": 320,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,37 @@\n-  private synchronized FinalizedReplica finalizeReplica(String bpid,\n+  private FinalizedReplica finalizeReplica(String bpid,\n       ReplicaInfo replicaInfo) throws IOException {\n-    FinalizedReplica newReplicaInfo \u003d null;\n-    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n-       ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n-         ReplicaState.FINALIZED) {\n-      newReplicaInfo \u003d (FinalizedReplica)\n-             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n-    } else {\n-      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n-      File f \u003d replicaInfo.getBlockFile();\n-      if (v \u003d\u003d null) {\n-        throw new IOException(\"No volume for temporary file \" + f + \n-            \" for block \" + replicaInfo);\n-      }\n+    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n+      FinalizedReplica newReplicaInfo \u003d null;\n+      if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n+          ((ReplicaUnderRecovery) replicaInfo).getOriginalReplica().getState()\n+              \u003d\u003d ReplicaState.FINALIZED) {\n+        newReplicaInfo \u003d (FinalizedReplica)\n+            ((ReplicaUnderRecovery) replicaInfo).getOriginalReplica();\n+      } else {\n+        FsVolumeImpl v \u003d (FsVolumeImpl) replicaInfo.getVolume();\n+        File f \u003d replicaInfo.getBlockFile();\n+        if (v \u003d\u003d null) {\n+          throw new IOException(\"No volume for temporary file \" + f +\n+              \" for block \" + replicaInfo);\n+        }\n \n-      File dest \u003d v.addFinalizedBlock(\n-          bpid, replicaInfo, f, replicaInfo.getBytesReserved());\n-      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n+        File dest \u003d v.addFinalizedBlock(\n+            bpid, replicaInfo, f, replicaInfo.getBytesReserved());\n+        newReplicaInfo \u003d\n+            new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n \n-      if (v.isTransientStorage()) {\n-        releaseLockedMemory(\n-            replicaInfo.getOriginalBytesReserved() - replicaInfo.getNumBytes(),\n-            false);\n-        ramDiskReplicaTracker.addReplica(\n-            bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n-        datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n+        if (v.isTransientStorage()) {\n+          releaseLockedMemory(\n+              replicaInfo.getOriginalBytesReserved()\n+                  - replicaInfo.getNumBytes(),\n+              false);\n+          ramDiskReplicaTracker.addReplica(\n+              bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n+          datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n+        }\n       }\n+      volumeMap.add(bpid, newReplicaInfo);\n+\n+      return newReplicaInfo;\n     }\n-    volumeMap.add(bpid, newReplicaInfo);\n-\n-    return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private FinalizedReplica finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      FinalizedReplica newReplicaInfo \u003d null;\n      if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n          ((ReplicaUnderRecovery) replicaInfo).getOriginalReplica().getState()\n              \u003d\u003d ReplicaState.FINALIZED) {\n        newReplicaInfo \u003d (FinalizedReplica)\n            ((ReplicaUnderRecovery) replicaInfo).getOriginalReplica();\n      } else {\n        FsVolumeImpl v \u003d (FsVolumeImpl) replicaInfo.getVolume();\n        File f \u003d replicaInfo.getBlockFile();\n        if (v \u003d\u003d null) {\n          throw new IOException(\"No volume for temporary file \" + f +\n              \" for block \" + replicaInfo);\n        }\n\n        File dest \u003d v.addFinalizedBlock(\n            bpid, replicaInfo, f, replicaInfo.getBytesReserved());\n        newReplicaInfo \u003d\n            new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n\n        if (v.isTransientStorage()) {\n          releaseLockedMemory(\n              replicaInfo.getOriginalBytesReserved()\n                  - replicaInfo.getNumBytes(),\n              false);\n          ramDiskReplicaTracker.addReplica(\n              bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n          datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n        }\n      }\n      volumeMap.add(bpid, newReplicaInfo);\n\n      return newReplicaInfo;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldValue": "[private, synchronized]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10682. Replace FsDatasetImpl object lock with a separate lock object. (Chen Liang)\n",
          "commitDate": "08/08/16 12:02 PM",
          "commitName": "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/07/16 7:40 PM",
          "commitNameOld": "da6f1b88dd47e22b24d44f6fc8bbee73e85746f7",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 30.68,
          "commitsBetweenForRepo": 320,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,37 @@\n-  private synchronized FinalizedReplica finalizeReplica(String bpid,\n+  private FinalizedReplica finalizeReplica(String bpid,\n       ReplicaInfo replicaInfo) throws IOException {\n-    FinalizedReplica newReplicaInfo \u003d null;\n-    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n-       ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n-         ReplicaState.FINALIZED) {\n-      newReplicaInfo \u003d (FinalizedReplica)\n-             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n-    } else {\n-      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n-      File f \u003d replicaInfo.getBlockFile();\n-      if (v \u003d\u003d null) {\n-        throw new IOException(\"No volume for temporary file \" + f + \n-            \" for block \" + replicaInfo);\n-      }\n+    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n+      FinalizedReplica newReplicaInfo \u003d null;\n+      if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n+          ((ReplicaUnderRecovery) replicaInfo).getOriginalReplica().getState()\n+              \u003d\u003d ReplicaState.FINALIZED) {\n+        newReplicaInfo \u003d (FinalizedReplica)\n+            ((ReplicaUnderRecovery) replicaInfo).getOriginalReplica();\n+      } else {\n+        FsVolumeImpl v \u003d (FsVolumeImpl) replicaInfo.getVolume();\n+        File f \u003d replicaInfo.getBlockFile();\n+        if (v \u003d\u003d null) {\n+          throw new IOException(\"No volume for temporary file \" + f +\n+              \" for block \" + replicaInfo);\n+        }\n \n-      File dest \u003d v.addFinalizedBlock(\n-          bpid, replicaInfo, f, replicaInfo.getBytesReserved());\n-      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n+        File dest \u003d v.addFinalizedBlock(\n+            bpid, replicaInfo, f, replicaInfo.getBytesReserved());\n+        newReplicaInfo \u003d\n+            new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n \n-      if (v.isTransientStorage()) {\n-        releaseLockedMemory(\n-            replicaInfo.getOriginalBytesReserved() - replicaInfo.getNumBytes(),\n-            false);\n-        ramDiskReplicaTracker.addReplica(\n-            bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n-        datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n+        if (v.isTransientStorage()) {\n+          releaseLockedMemory(\n+              replicaInfo.getOriginalBytesReserved()\n+                  - replicaInfo.getNumBytes(),\n+              false);\n+          ramDiskReplicaTracker.addReplica(\n+              bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n+          datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n+        }\n       }\n+      volumeMap.add(bpid, newReplicaInfo);\n+\n+      return newReplicaInfo;\n     }\n-    volumeMap.add(bpid, newReplicaInfo);\n-\n-    return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private FinalizedReplica finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      FinalizedReplica newReplicaInfo \u003d null;\n      if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n          ((ReplicaUnderRecovery) replicaInfo).getOriginalReplica().getState()\n              \u003d\u003d ReplicaState.FINALIZED) {\n        newReplicaInfo \u003d (FinalizedReplica)\n            ((ReplicaUnderRecovery) replicaInfo).getOriginalReplica();\n      } else {\n        FsVolumeImpl v \u003d (FsVolumeImpl) replicaInfo.getVolume();\n        File f \u003d replicaInfo.getBlockFile();\n        if (v \u003d\u003d null) {\n          throw new IOException(\"No volume for temporary file \" + f +\n              \" for block \" + replicaInfo);\n        }\n\n        File dest \u003d v.addFinalizedBlock(\n            bpid, replicaInfo, f, replicaInfo.getBytesReserved());\n        newReplicaInfo \u003d\n            new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n\n        if (v.isTransientStorage()) {\n          releaseLockedMemory(\n              replicaInfo.getOriginalBytesReserved()\n                  - replicaInfo.getNumBytes(),\n              false);\n          ramDiskReplicaTracker.addReplica(\n              bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n          datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n        }\n      }\n      volumeMap.add(bpid, newReplicaInfo);\n\n      return newReplicaInfo;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "e453989a5722e653bd97e3e54f9bbdffc9454fba": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8157. Writes to RAM DISK reserve locked memory for block files. (Arpit Agarwal)\n",
      "commitDate": "16/05/15 9:05 AM",
      "commitName": "e453989a5722e653bd97e3e54f9bbdffc9454fba",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "06/05/15 9:11 PM",
      "commitNameOld": "6633a8474d7e92fa028ede8fd6c6e41b6c5887f5",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 9.5,
      "commitsBetweenForRepo": 157,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,33 @@\n   private synchronized FinalizedReplica finalizeReplica(String bpid,\n       ReplicaInfo replicaInfo) throws IOException {\n     FinalizedReplica newReplicaInfo \u003d null;\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n        ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n          ReplicaState.FINALIZED) {\n       newReplicaInfo \u003d (FinalizedReplica)\n              ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n     } else {\n       FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n       File f \u003d replicaInfo.getBlockFile();\n       if (v \u003d\u003d null) {\n         throw new IOException(\"No volume for temporary file \" + f + \n             \" for block \" + replicaInfo);\n       }\n \n       File dest \u003d v.addFinalizedBlock(\n           bpid, replicaInfo, f, replicaInfo.getBytesReserved());\n       newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n \n       if (v.isTransientStorage()) {\n-        ramDiskReplicaTracker.addReplica(bpid, replicaInfo.getBlockId(), v);\n+        releaseLockedMemory(\n+            replicaInfo.getOriginalBytesReserved() - replicaInfo.getNumBytes(),\n+            false);\n+        ramDiskReplicaTracker.addReplica(\n+            bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n         datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n       }\n     }\n     volumeMap.add(bpid, newReplicaInfo);\n \n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized FinalizedReplica finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    FinalizedReplica newReplicaInfo \u003d null;\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n       ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n         ReplicaState.FINALIZED) {\n      newReplicaInfo \u003d (FinalizedReplica)\n             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n    } else {\n      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n      File f \u003d replicaInfo.getBlockFile();\n      if (v \u003d\u003d null) {\n        throw new IOException(\"No volume for temporary file \" + f + \n            \" for block \" + replicaInfo);\n      }\n\n      File dest \u003d v.addFinalizedBlock(\n          bpid, replicaInfo, f, replicaInfo.getBytesReserved());\n      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n\n      if (v.isTransientStorage()) {\n        releaseLockedMemory(\n            replicaInfo.getOriginalBytesReserved() - replicaInfo.getNumBytes(),\n            false);\n        ramDiskReplicaTracker.addReplica(\n            bpid, replicaInfo.getBlockId(), v, replicaInfo.getNumBytes());\n        datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n      }\n    }\n    volumeMap.add(bpid, newReplicaInfo);\n\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "5e8b6973527e5f714652641ed95e8a4509e18cfa": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7129. Metrics to track usage of memory for writes. (Contributed by Xiaoyu Yao)\n",
      "commitDate": "30/09/14 12:53 AM",
      "commitName": "5e8b6973527e5f714652641ed95e8a4509e18cfa",
      "commitAuthor": "arp",
      "commitDateOld": "29/09/14 10:27 PM",
      "commitNameOld": "bb84f1fccb18c6c7373851e05d2451d55e908242",
      "commitAuthorOld": "arp",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,29 @@\n   private synchronized FinalizedReplica finalizeReplica(String bpid,\n       ReplicaInfo replicaInfo) throws IOException {\n     FinalizedReplica newReplicaInfo \u003d null;\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n        ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n          ReplicaState.FINALIZED) {\n       newReplicaInfo \u003d (FinalizedReplica)\n              ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n     } else {\n       FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n       File f \u003d replicaInfo.getBlockFile();\n       if (v \u003d\u003d null) {\n         throw new IOException(\"No volume for temporary file \" + f + \n             \" for block \" + replicaInfo);\n       }\n \n       File dest \u003d v.addFinalizedBlock(\n           bpid, replicaInfo, f, replicaInfo.getBytesReserved());\n       newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n \n       if (v.isTransientStorage()) {\n         ramDiskReplicaTracker.addReplica(bpid, replicaInfo.getBlockId(), v);\n+        datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n       }\n     }\n     volumeMap.add(bpid, newReplicaInfo);\n \n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized FinalizedReplica finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    FinalizedReplica newReplicaInfo \u003d null;\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n       ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n         ReplicaState.FINALIZED) {\n      newReplicaInfo \u003d (FinalizedReplica)\n             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n    } else {\n      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n      File f \u003d replicaInfo.getBlockFile();\n      if (v \u003d\u003d null) {\n        throw new IOException(\"No volume for temporary file \" + f + \n            \" for block \" + replicaInfo);\n      }\n\n      File dest \u003d v.addFinalizedBlock(\n          bpid, replicaInfo, f, replicaInfo.getBytesReserved());\n      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n\n      if (v.isTransientStorage()) {\n        ramDiskReplicaTracker.addReplica(bpid, replicaInfo.getBlockId(), v);\n        datanode.getMetrics().addRamDiskBytesWrite(replicaInfo.getNumBytes());\n      }\n    }\n    volumeMap.add(bpid, newReplicaInfo);\n\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "b2d5ed36bcb80e2581191dcdc3976e825c959142": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7100. Make eviction scheme pluggable. (Arpit Agarwal)\n",
      "commitDate": "20/09/14 1:25 PM",
      "commitName": "b2d5ed36bcb80e2581191dcdc3976e825c959142",
      "commitAuthor": "arp",
      "commitDateOld": "19/09/14 10:02 AM",
      "commitNameOld": "222bf0fe6706ee43964fd39b8315c1a339fbc84a",
      "commitAuthorOld": "",
      "daysBetweenCommits": 1.14,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   private synchronized FinalizedReplica finalizeReplica(String bpid,\n       ReplicaInfo replicaInfo) throws IOException {\n     FinalizedReplica newReplicaInfo \u003d null;\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n        ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n          ReplicaState.FINALIZED) {\n       newReplicaInfo \u003d (FinalizedReplica)\n              ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n     } else {\n       FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n       File f \u003d replicaInfo.getBlockFile();\n       if (v \u003d\u003d null) {\n         throw new IOException(\"No volume for temporary file \" + f + \n             \" for block \" + replicaInfo);\n       }\n \n       File dest \u003d v.addFinalizedBlock(\n           bpid, replicaInfo, f, replicaInfo.getBytesReserved());\n       newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n \n       if (v.isTransientStorage()) {\n-        lazyWriteReplicaTracker.addReplica(bpid, replicaInfo.getBlockId(), v);\n+        ramDiskReplicaTracker.addReplica(bpid, replicaInfo.getBlockId(), v);\n       }\n     }\n     volumeMap.add(bpid, newReplicaInfo);\n \n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized FinalizedReplica finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    FinalizedReplica newReplicaInfo \u003d null;\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n       ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n         ReplicaState.FINALIZED) {\n      newReplicaInfo \u003d (FinalizedReplica)\n             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n    } else {\n      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n      File f \u003d replicaInfo.getBlockFile();\n      if (v \u003d\u003d null) {\n        throw new IOException(\"No volume for temporary file \" + f + \n            \" for block \" + replicaInfo);\n      }\n\n      File dest \u003d v.addFinalizedBlock(\n          bpid, replicaInfo, f, replicaInfo.getBytesReserved());\n      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n\n      if (v.isTransientStorage()) {\n        ramDiskReplicaTracker.addReplica(bpid, replicaInfo.getBlockId(), v);\n      }\n    }\n    volumeMap.add(bpid, newReplicaInfo);\n\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "d1fa58292e87bc29b4ef1278368c2be938a0afc4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6898. DN must reserve space for a full block when an RBW block is created. (Contributed by Arpit Agarwal)\n",
      "commitDate": "06/09/14 9:04 PM",
      "commitName": "d1fa58292e87bc29b4ef1278368c2be938a0afc4",
      "commitAuthor": "arp",
      "commitDateOld": "29/08/14 1:00 PM",
      "commitNameOld": "7eab2a29a5706ce10912c12fa225ef6b27a82cbe",
      "commitAuthorOld": "Aaron T. Myers",
      "daysBetweenCommits": 8.34,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   private synchronized FinalizedReplica finalizeReplica(String bpid,\n       ReplicaInfo replicaInfo) throws IOException {\n     FinalizedReplica newReplicaInfo \u003d null;\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n        ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n          ReplicaState.FINALIZED) {\n       newReplicaInfo \u003d (FinalizedReplica)\n              ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n     } else {\n       FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n       File f \u003d replicaInfo.getBlockFile();\n       if (v \u003d\u003d null) {\n         throw new IOException(\"No volume for temporary file \" + f + \n             \" for block \" + replicaInfo);\n       }\n \n-      File dest \u003d v.addBlock(bpid, replicaInfo, f);\n+      File dest \u003d v.addFinalizedBlock(\n+          bpid, replicaInfo, f, replicaInfo.getBytesReserved());\n       newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n     }\n     volumeMap.add(bpid, newReplicaInfo);\n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized FinalizedReplica finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    FinalizedReplica newReplicaInfo \u003d null;\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n       ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n         ReplicaState.FINALIZED) {\n      newReplicaInfo \u003d (FinalizedReplica)\n             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n    } else {\n      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n      File f \u003d replicaInfo.getBlockFile();\n      if (v \u003d\u003d null) {\n        throw new IOException(\"No volume for temporary file \" + f + \n            \" for block \" + replicaInfo);\n      }\n\n      File dest \u003d v.addFinalizedBlock(\n          bpid, replicaInfo, f, replicaInfo.getBytesReserved());\n      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n    }\n    volumeMap.add(bpid, newReplicaInfo);\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "4cf9afacbe3d0814fb616d238aa9b16b1ae68386": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6960. Bugfix in LazyWriter, fix test case and some refactoring. (Arpit Agarwal)\n",
      "commitDate": "28/08/14 11:05 PM",
      "commitName": "4cf9afacbe3d0814fb616d238aa9b16b1ae68386",
      "commitAuthor": "arp",
      "commitDateOld": "27/08/14 9:47 PM",
      "commitNameOld": "eb448e14399e17f11b9e523e4050de245b9b0408",
      "commitAuthorOld": "arp",
      "daysBetweenCommits": 1.05,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,27 @@\n   private synchronized FinalizedReplica finalizeReplica(String bpid,\n       ReplicaInfo replicaInfo) throws IOException {\n     FinalizedReplica newReplicaInfo \u003d null;\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n        ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n          ReplicaState.FINALIZED) {\n       newReplicaInfo \u003d (FinalizedReplica)\n              ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n     } else {\n       FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n       File f \u003d replicaInfo.getBlockFile();\n       if (v \u003d\u003d null) {\n         throw new IOException(\"No volume for temporary file \" + f + \n             \" for block \" + replicaInfo);\n       }\n \n       File dest \u003d v.addBlock(bpid, replicaInfo, f);\n       newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n \n       if (v.isTransientStorage()) {\n         lazyWriteReplicaTracker.addReplica(bpid, replicaInfo.getBlockId(), v);\n-\n-        // Schedule a checkpoint.\n-        ((LazyWriter) lazyWriter.getRunnable())\n-            .addReplicaToLazyWriteQueue(bpid, replicaInfo.getBlockId());\n       }\n     }\n     volumeMap.add(bpid, newReplicaInfo);\n \n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized FinalizedReplica finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    FinalizedReplica newReplicaInfo \u003d null;\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n       ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n         ReplicaState.FINALIZED) {\n      newReplicaInfo \u003d (FinalizedReplica)\n             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n    } else {\n      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n      File f \u003d replicaInfo.getBlockFile();\n      if (v \u003d\u003d null) {\n        throw new IOException(\"No volume for temporary file \" + f + \n            \" for block \" + replicaInfo);\n      }\n\n      File dest \u003d v.addBlock(bpid, replicaInfo, f);\n      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n\n      if (v.isTransientStorage()) {\n        lazyWriteReplicaTracker.addReplica(bpid, replicaInfo.getBlockId(), v);\n      }\n    }\n    volumeMap.add(bpid, newReplicaInfo);\n\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "eb448e14399e17f11b9e523e4050de245b9b0408": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6926. DN support for saving replicas to persistent storage and evicting in-memory replicas. (Arpit Agarwal)\n",
      "commitDate": "27/08/14 9:47 PM",
      "commitName": "eb448e14399e17f11b9e523e4050de245b9b0408",
      "commitAuthor": "arp",
      "commitDateOld": "27/08/14 9:47 PM",
      "commitNameOld": "a317bd7b02c37bd57743bfad59593ec12f53f4ed",
      "commitAuthorOld": "arp",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,31 @@\n   private synchronized FinalizedReplica finalizeReplica(String bpid,\n       ReplicaInfo replicaInfo) throws IOException {\n     FinalizedReplica newReplicaInfo \u003d null;\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n        ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n          ReplicaState.FINALIZED) {\n       newReplicaInfo \u003d (FinalizedReplica)\n              ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n     } else {\n       FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n       File f \u003d replicaInfo.getBlockFile();\n       if (v \u003d\u003d null) {\n         throw new IOException(\"No volume for temporary file \" + f + \n             \" for block \" + replicaInfo);\n       }\n \n       File dest \u003d v.addBlock(bpid, replicaInfo, f);\n       newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n+\n+      if (v.isTransientStorage()) {\n+        lazyWriteReplicaTracker.addReplica(bpid, replicaInfo.getBlockId(), v);\n+\n+        // Schedule a checkpoint.\n+        ((LazyWriter) lazyWriter.getRunnable())\n+            .addReplicaToLazyWriteQueue(bpid, replicaInfo.getBlockId());\n+      }\n     }\n     volumeMap.add(bpid, newReplicaInfo);\n+\n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized FinalizedReplica finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    FinalizedReplica newReplicaInfo \u003d null;\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n       ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n         ReplicaState.FINALIZED) {\n      newReplicaInfo \u003d (FinalizedReplica)\n             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n    } else {\n      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n      File f \u003d replicaInfo.getBlockFile();\n      if (v \u003d\u003d null) {\n        throw new IOException(\"No volume for temporary file \" + f + \n            \" for block \" + replicaInfo);\n      }\n\n      File dest \u003d v.addBlock(bpid, replicaInfo, f);\n      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n\n      if (v.isTransientStorage()) {\n        lazyWriteReplicaTracker.addReplica(bpid, replicaInfo.getBlockId(), v);\n\n        // Schedule a checkpoint.\n        ((LazyWriter) lazyWriter.getRunnable())\n            .addReplicaToLazyWriteQueue(bpid, replicaInfo.getBlockId());\n      }\n    }\n    volumeMap.add(bpid, newReplicaInfo);\n\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "fba994ffe20d387e8ed875e727fc3d93f7097101": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5648. Get rid of FsDatasetImpl#perVolumeReplicaMap.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1550357 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/12/13 11:01 PM",
      "commitName": "fba994ffe20d387e8ed875e727fc3d93f7097101",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "03/12/13 8:30 AM",
      "commitNameOld": "a1aa1836fb6831c25efe326cdfdc014370cf5957",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 8.6,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,22 @@\n   private synchronized FinalizedReplica finalizeReplica(String bpid,\n       ReplicaInfo replicaInfo) throws IOException {\n     FinalizedReplica newReplicaInfo \u003d null;\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n        ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n          ReplicaState.FINALIZED) {\n       newReplicaInfo \u003d (FinalizedReplica)\n              ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n     } else {\n       FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n       File f \u003d replicaInfo.getBlockFile();\n       if (v \u003d\u003d null) {\n         throw new IOException(\"No volume for temporary file \" + f + \n             \" for block \" + replicaInfo);\n       }\n \n       File dest \u003d v.addBlock(bpid, replicaInfo, f);\n       newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n     }\n     volumeMap.add(bpid, newReplicaInfo);\n-    perVolumeReplicaMap.get(newReplicaInfo.getVolume().getStorageID())\n-        .add(bpid, newReplicaInfo);\n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized FinalizedReplica finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    FinalizedReplica newReplicaInfo \u003d null;\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n       ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n         ReplicaState.FINALIZED) {\n      newReplicaInfo \u003d (FinalizedReplica)\n             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n    } else {\n      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n      File f \u003d replicaInfo.getBlockFile();\n      if (v \u003d\u003d null) {\n        throw new IOException(\"No volume for temporary file \" + f + \n            \" for block \" + replicaInfo);\n      }\n\n      File dest \u003d v.addBlock(bpid, replicaInfo, f);\n      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n    }\n    volumeMap.add(bpid, newReplicaInfo);\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "f39f8c57344ede533ca4363c98230f3a0c401a76": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5401. Fix NPE in Directory Scanner.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1535158 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/10/13 1:28 PM",
      "commitName": "f39f8c57344ede533ca4363c98230f3a0c401a76",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "22/10/13 6:28 PM",
      "commitNameOld": "01f37e42f050207b7659bf74e2484cf8bdae2d89",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.79,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n   private synchronized FinalizedReplica finalizeReplica(String bpid,\n       ReplicaInfo replicaInfo) throws IOException {\n     FinalizedReplica newReplicaInfo \u003d null;\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n        ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n          ReplicaState.FINALIZED) {\n       newReplicaInfo \u003d (FinalizedReplica)\n              ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n     } else {\n       FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n       File f \u003d replicaInfo.getBlockFile();\n       if (v \u003d\u003d null) {\n         throw new IOException(\"No volume for temporary file \" + f + \n             \" for block \" + replicaInfo);\n       }\n \n       File dest \u003d v.addBlock(bpid, replicaInfo, f);\n       newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n     }\n     volumeMap.add(bpid, newReplicaInfo);\n-    perVolumeReplicaMap.get(newReplicaInfo.getVolume()).add(bpid, newReplicaInfo);\n+    perVolumeReplicaMap.get(newReplicaInfo.getVolume().getStorageID())\n+        .add(bpid, newReplicaInfo);\n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized FinalizedReplica finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    FinalizedReplica newReplicaInfo \u003d null;\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n       ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n         ReplicaState.FINALIZED) {\n      newReplicaInfo \u003d (FinalizedReplica)\n             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n    } else {\n      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n      File f \u003d replicaInfo.getBlockFile();\n      if (v \u003d\u003d null) {\n        throw new IOException(\"No volume for temporary file \" + f + \n            \" for block \" + replicaInfo);\n      }\n\n      File dest \u003d v.addBlock(bpid, replicaInfo, f);\n      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n    }\n    volumeMap.add(bpid, newReplicaInfo);\n    perVolumeReplicaMap.get(newReplicaInfo.getVolume().getStorageID())\n        .add(bpid, newReplicaInfo);\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "46099ce7f1a1d5aab85d9408dc1454fcbe54f7e8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4988. Datanode must support all the volumes as individual storages.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1526969 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 9:05 AM",
      "commitName": "46099ce7f1a1d5aab85d9408dc1454fcbe54f7e8",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "10/09/13 11:30 PM",
      "commitNameOld": "b2976af14034c6e2a7e9964535b9f363bfc31150",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 16.4,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   private synchronized FinalizedReplica finalizeReplica(String bpid,\n       ReplicaInfo replicaInfo) throws IOException {\n     FinalizedReplica newReplicaInfo \u003d null;\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n        ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n          ReplicaState.FINALIZED) {\n       newReplicaInfo \u003d (FinalizedReplica)\n              ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n     } else {\n       FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n       File f \u003d replicaInfo.getBlockFile();\n       if (v \u003d\u003d null) {\n         throw new IOException(\"No volume for temporary file \" + f + \n             \" for block \" + replicaInfo);\n       }\n \n       File dest \u003d v.addBlock(bpid, replicaInfo, f);\n       newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n     }\n     volumeMap.add(bpid, newReplicaInfo);\n+    perVolumeReplicaMap.get(newReplicaInfo.getVolume()).add(bpid, newReplicaInfo);\n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized FinalizedReplica finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    FinalizedReplica newReplicaInfo \u003d null;\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n       ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n         ReplicaState.FINALIZED) {\n      newReplicaInfo \u003d (FinalizedReplica)\n             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n    } else {\n      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n      File f \u003d replicaInfo.getBlockFile();\n      if (v \u003d\u003d null) {\n        throw new IOException(\"No volume for temporary file \" + f + \n            \" for block \" + replicaInfo);\n      }\n\n      File dest \u003d v.addBlock(bpid, replicaInfo, f);\n      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n    }\n    volumeMap.add(bpid, newReplicaInfo);\n    perVolumeReplicaMap.get(newReplicaInfo.getVolume()).add(bpid, newReplicaInfo);\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "bc13dfb1426944ce45293cb8f444239a7406762c": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/12 10:38 AM",
      "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/04/12 10:38 AM",
          "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "01/04/12 8:48 PM",
          "commitNameOld": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.58,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n   private synchronized FinalizedReplica finalizeReplica(String bpid,\n       ReplicaInfo replicaInfo) throws IOException {\n     FinalizedReplica newReplicaInfo \u003d null;\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n        ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n          ReplicaState.FINALIZED) {\n       newReplicaInfo \u003d (FinalizedReplica)\n              ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n     } else {\n-      FSVolume v \u003d (FSVolume)replicaInfo.getVolume();\n+      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n       File f \u003d replicaInfo.getBlockFile();\n       if (v \u003d\u003d null) {\n         throw new IOException(\"No volume for temporary file \" + f + \n             \" for block \" + replicaInfo);\n       }\n \n       File dest \u003d v.addBlock(bpid, replicaInfo, f);\n       newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n     }\n     volumeMap.add(bpid, newReplicaInfo);\n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized FinalizedReplica finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    FinalizedReplica newReplicaInfo \u003d null;\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n       ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n         ReplicaState.FINALIZED) {\n      newReplicaInfo \u003d (FinalizedReplica)\n             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n    } else {\n      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n      File f \u003d replicaInfo.getBlockFile();\n      if (v \u003d\u003d null) {\n        throw new IOException(\"No volume for temporary file \" + f + \n            \" for block \" + replicaInfo);\n      }\n\n      File dest \u003d v.addBlock(bpid, replicaInfo, f);\n      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n    }\n    volumeMap.add(bpid, newReplicaInfo);\n    return newReplicaInfo;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
            "oldMethodName": "finalizeReplica",
            "newMethodName": "finalizeReplica"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/04/12 10:38 AM",
          "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "01/04/12 8:48 PM",
          "commitNameOld": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.58,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n   private synchronized FinalizedReplica finalizeReplica(String bpid,\n       ReplicaInfo replicaInfo) throws IOException {\n     FinalizedReplica newReplicaInfo \u003d null;\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n        ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n          ReplicaState.FINALIZED) {\n       newReplicaInfo \u003d (FinalizedReplica)\n              ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n     } else {\n-      FSVolume v \u003d (FSVolume)replicaInfo.getVolume();\n+      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n       File f \u003d replicaInfo.getBlockFile();\n       if (v \u003d\u003d null) {\n         throw new IOException(\"No volume for temporary file \" + f + \n             \" for block \" + replicaInfo);\n       }\n \n       File dest \u003d v.addBlock(bpid, replicaInfo, f);\n       newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n     }\n     volumeMap.add(bpid, newReplicaInfo);\n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized FinalizedReplica finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    FinalizedReplica newReplicaInfo \u003d null;\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n       ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n         ReplicaState.FINALIZED) {\n      newReplicaInfo \u003d (FinalizedReplica)\n             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n    } else {\n      FsVolumeImpl v \u003d (FsVolumeImpl)replicaInfo.getVolume();\n      File f \u003d replicaInfo.getBlockFile();\n      if (v \u003d\u003d null) {\n        throw new IOException(\"No volume for temporary file \" + f + \n            \" for block \" + replicaInfo);\n      }\n\n      File dest \u003d v.addBlock(bpid, replicaInfo, f);\n      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n    }\n    volumeMap.add(bpid, newReplicaInfo);\n    return newReplicaInfo;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "99a68a14237b4cd1936ba5e9468d25d35dad594c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3155. Clean up FSDataset implemenation related code.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1306582 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/03/12 1:37 PM",
      "commitName": "99a68a14237b4cd1936ba5e9468d25d35dad594c",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "26/03/12 2:14 PM",
      "commitNameOld": "67bdbd60cdebf909a847d56ba0f90b35876af0b3",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 1.97,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private synchronized FinalizedReplica finalizeReplica(String bpid,\n       ReplicaInfo replicaInfo) throws IOException {\n     FinalizedReplica newReplicaInfo \u003d null;\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n-       ((ReplicaUnderRecovery)replicaInfo).getOrignalReplicaState() \u003d\u003d \n+       ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n          ReplicaState.FINALIZED) {\n       newReplicaInfo \u003d (FinalizedReplica)\n              ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n     } else {\n       FSVolume v \u003d (FSVolume)replicaInfo.getVolume();\n       File f \u003d replicaInfo.getBlockFile();\n       if (v \u003d\u003d null) {\n         throw new IOException(\"No volume for temporary file \" + f + \n             \" for block \" + replicaInfo);\n       }\n \n       File dest \u003d v.addBlock(bpid, replicaInfo, f);\n       newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n     }\n     volumeMap.add(bpid, newReplicaInfo);\n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized FinalizedReplica finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    FinalizedReplica newReplicaInfo \u003d null;\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n       ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica().getState() \u003d\u003d \n         ReplicaState.FINALIZED) {\n      newReplicaInfo \u003d (FinalizedReplica)\n             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n    } else {\n      FSVolume v \u003d (FSVolume)replicaInfo.getVolume();\n      File f \u003d replicaInfo.getBlockFile();\n      if (v \u003d\u003d null) {\n        throw new IOException(\"No volume for temporary file \" + f + \n            \" for block \" + replicaInfo);\n      }\n\n      File dest \u003d v.addBlock(bpid, replicaInfo, f);\n      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n    }\n    volumeMap.add(bpid, newReplicaInfo);\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {}
    },
    "b6ffb08a467f1b5bc89e5114c462c3117b337be6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2887. FSVolume, is a part of FSDatasetInterface implementation, should not be referred outside FSDataset.  A new FSVolumeInterface is defined.  The BlockVolumeChoosingPolicy.chooseVolume(..) method signature is also updated.  (szetszwo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1242087 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/02/12 12:58 PM",
      "commitName": "b6ffb08a467f1b5bc89e5114c462c3117b337be6",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "02/02/12 11:26 PM",
      "commitNameOld": "38ad4b503686a0d18cb2d42ffdecf06f0ba7b98f",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 5.56,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private synchronized FinalizedReplica finalizeReplica(String bpid,\n       ReplicaInfo replicaInfo) throws IOException {\n     FinalizedReplica newReplicaInfo \u003d null;\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n        ((ReplicaUnderRecovery)replicaInfo).getOrignalReplicaState() \u003d\u003d \n          ReplicaState.FINALIZED) {\n       newReplicaInfo \u003d (FinalizedReplica)\n              ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n     } else {\n-      FSVolume v \u003d replicaInfo.getVolume();\n+      FSVolume v \u003d (FSVolume)replicaInfo.getVolume();\n       File f \u003d replicaInfo.getBlockFile();\n       if (v \u003d\u003d null) {\n         throw new IOException(\"No volume for temporary file \" + f + \n             \" for block \" + replicaInfo);\n       }\n \n       File dest \u003d v.addBlock(bpid, replicaInfo, f);\n       newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n     }\n     volumeMap.add(bpid, newReplicaInfo);\n     return newReplicaInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized FinalizedReplica finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    FinalizedReplica newReplicaInfo \u003d null;\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n       ((ReplicaUnderRecovery)replicaInfo).getOrignalReplicaState() \u003d\u003d \n         ReplicaState.FINALIZED) {\n      newReplicaInfo \u003d (FinalizedReplica)\n             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n    } else {\n      FSVolume v \u003d (FSVolume)replicaInfo.getVolume();\n      File f \u003d replicaInfo.getBlockFile();\n      if (v \u003d\u003d null) {\n        throw new IOException(\"No volume for temporary file \" + f + \n            \" for block \" + replicaInfo);\n      }\n\n      File dest \u003d v.addBlock(bpid, replicaInfo, f);\n      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n    }\n    volumeMap.add(bpid, newReplicaInfo);\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized FinalizedReplica finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    FinalizedReplica newReplicaInfo \u003d null;\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n       ((ReplicaUnderRecovery)replicaInfo).getOrignalReplicaState() \u003d\u003d \n         ReplicaState.FINALIZED) {\n      newReplicaInfo \u003d (FinalizedReplica)\n             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n    } else {\n      FSVolume v \u003d replicaInfo.getVolume();\n      File f \u003d replicaInfo.getBlockFile();\n      if (v \u003d\u003d null) {\n        throw new IOException(\"No volume for temporary file \" + f + \n            \" for block \" + replicaInfo);\n      }\n\n      File dest \u003d v.addBlock(bpid, replicaInfo, f);\n      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n    }\n    volumeMap.add(bpid, newReplicaInfo);\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized FinalizedReplica finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    FinalizedReplica newReplicaInfo \u003d null;\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n       ((ReplicaUnderRecovery)replicaInfo).getOrignalReplicaState() \u003d\u003d \n         ReplicaState.FINALIZED) {\n      newReplicaInfo \u003d (FinalizedReplica)\n             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n    } else {\n      FSVolume v \u003d replicaInfo.getVolume();\n      File f \u003d replicaInfo.getBlockFile();\n      if (v \u003d\u003d null) {\n        throw new IOException(\"No volume for temporary file \" + f + \n            \" for block \" + replicaInfo);\n      }\n\n      File dest \u003d v.addBlock(bpid, replicaInfo, f);\n      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n    }\n    volumeMap.add(bpid, newReplicaInfo);\n    return newReplicaInfo;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,22 @@\n+  private synchronized FinalizedReplica finalizeReplica(String bpid,\n+      ReplicaInfo replicaInfo) throws IOException {\n+    FinalizedReplica newReplicaInfo \u003d null;\n+    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n+       ((ReplicaUnderRecovery)replicaInfo).getOrignalReplicaState() \u003d\u003d \n+         ReplicaState.FINALIZED) {\n+      newReplicaInfo \u003d (FinalizedReplica)\n+             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n+    } else {\n+      FSVolume v \u003d replicaInfo.getVolume();\n+      File f \u003d replicaInfo.getBlockFile();\n+      if (v \u003d\u003d null) {\n+        throw new IOException(\"No volume for temporary file \" + f + \n+            \" for block \" + replicaInfo);\n+      }\n+\n+      File dest \u003d v.addBlock(bpid, replicaInfo, f);\n+      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n+    }\n+    volumeMap.add(bpid, newReplicaInfo);\n+    return newReplicaInfo;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized FinalizedReplica finalizeReplica(String bpid,\n      ReplicaInfo replicaInfo) throws IOException {\n    FinalizedReplica newReplicaInfo \u003d null;\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.RUR \u0026\u0026\n       ((ReplicaUnderRecovery)replicaInfo).getOrignalReplicaState() \u003d\u003d \n         ReplicaState.FINALIZED) {\n      newReplicaInfo \u003d (FinalizedReplica)\n             ((ReplicaUnderRecovery)replicaInfo).getOriginalReplica();\n    } else {\n      FSVolume v \u003d replicaInfo.getVolume();\n      File f \u003d replicaInfo.getBlockFile();\n      if (v \u003d\u003d null) {\n        throw new IOException(\"No volume for temporary file \" + f + \n            \" for block \" + replicaInfo);\n      }\n\n      File dest \u003d v.addBlock(bpid, replicaInfo, f);\n      newReplicaInfo \u003d new FinalizedReplica(replicaInfo, v, dest.getParentFile());\n    }\n    volumeMap.add(bpid, newReplicaInfo);\n    return newReplicaInfo;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
    }
  }
}