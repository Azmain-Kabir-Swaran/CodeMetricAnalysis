{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileInputFormat.java",
  "functionName": "shrinkStatus",
  "functionId": "shrinkStatus___origStat-FileStatus",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/input/FileInputFormat.java",
  "functionStartLine": 386,
  "functionEndLine": 401,
  "numCommitsSeen": 20,
  "timeTaken": 1183,
  "changeHistory": [
    "c613296dc85ac7b22c171c84f578106b315cc012"
  ],
  "changeHistoryShort": {
    "c613296dc85ac7b22c171c84f578106b315cc012": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c613296dc85ac7b22c171c84f578106b315cc012": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-7241. FileInputFormat listStatus with less memory footprint. Contributed by Zhihua Deng\n",
      "commitDate": "01/04/20 5:46 AM",
      "commitName": "c613296dc85ac7b22c171c84f578106b315cc012",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,16 @@\n+  public static FileStatus shrinkStatus(FileStatus origStat) {\n+    if (origStat.isDirectory() || origStat.getLen() \u003d\u003d 0 ||\n+        !(origStat instanceof LocatedFileStatus)) {\n+      return origStat;\n+    } else {\n+      BlockLocation[] blockLocations \u003d\n+          ((LocatedFileStatus)origStat).getBlockLocations();\n+      BlockLocation[] locs \u003d new BlockLocation[blockLocations.length];\n+      int i \u003d 0;\n+      for (BlockLocation location : blockLocations) {\n+        locs[i++] \u003d new BlockLocation(location);\n+      }\n+      LocatedFileStatus newStat \u003d new LocatedFileStatus(origStat, locs);\n+      return newStat;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static FileStatus shrinkStatus(FileStatus origStat) {\n    if (origStat.isDirectory() || origStat.getLen() \u003d\u003d 0 ||\n        !(origStat instanceof LocatedFileStatus)) {\n      return origStat;\n    } else {\n      BlockLocation[] blockLocations \u003d\n          ((LocatedFileStatus)origStat).getBlockLocations();\n      BlockLocation[] locs \u003d new BlockLocation[blockLocations.length];\n      int i \u003d 0;\n      for (BlockLocation location : blockLocations) {\n        locs[i++] \u003d new BlockLocation(location);\n      }\n      LocatedFileStatus newStat \u003d new LocatedFileStatus(origStat, locs);\n      return newStat;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/input/FileInputFormat.java"
    }
  }
}