{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QueueMetrics.java",
  "functionName": "allocateResources",
  "functionId": "allocateResources___partition-String__user-String__containers-int__res-Resource__decrPending-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
  "functionStartLine": 749,
  "functionEndLine": 765,
  "numCommitsSeen": 90,
  "timeTaken": 11978,
  "changeHistory": [
    "c30c23cb665761e997bcfc1dc00908f70b069fa2",
    "a5034c7988b6bf54bb7dab208100a2d205e3929e",
    "84e22a6af46db2859d7d2caf192861cae9b6a1a8",
    "e9c2aa1bc383cb08784846534415bf17667d6e41",
    "819224dcf9c683aa52f58633ac8e13663f1916d8",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae",
    "9523648d57ebc71cf5c57f3f8c52c4a63265b61c",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434",
    "981679e6d7650141fc8737c7e13b16d8b795b408",
    "f19465f72f57a3226725fc62f8f5711c95147f32",
    "453926397182078c65a4428eb5de5a90d6af6448",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "7f23d7235266cf89710b1d1be411bd5fcdb17769",
    "b3284c4607a8e2ec40ea9f7c090c8b705d2853da",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "c30c23cb665761e997bcfc1dc00908f70b069fa2": "Ybodychange",
    "a5034c7988b6bf54bb7dab208100a2d205e3929e": "Ybodychange",
    "84e22a6af46db2859d7d2caf192861cae9b6a1a8": "Ybodychange",
    "e9c2aa1bc383cb08784846534415bf17667d6e41": "Ymultichange(Yparameterchange,Ybodychange)",
    "819224dcf9c683aa52f58633ac8e13663f1916d8": "Ybodychange",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": "Ybodychange",
    "9523648d57ebc71cf5c57f3f8c52c4a63265b61c": "Ybodychange",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": "Ybodychange",
    "981679e6d7650141fc8737c7e13b16d8b795b408": "Ymultichange(Yparameterchange,Ybodychange)",
    "f19465f72f57a3226725fc62f8f5711c95147f32": "Ybodychange",
    "453926397182078c65a4428eb5de5a90d6af6448": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "7f23d7235266cf89710b1d1be411bd5fcdb17769": "Ybodychange",
    "b3284c4607a8e2ec40ea9f7c090c8b705d2853da": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c30c23cb665761e997bcfc1dc00908f70b069fa2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6492. Generate queue metrics for each partition. Contributed by Manikandan R\n",
      "commitDate": "26/05/20 4:29 PM",
      "commitName": "c30c23cb665761e997bcfc1dc00908f70b069fa2",
      "commitAuthor": "Jonathan Hung",
      "commitDateOld": "08/12/19 4:35 PM",
      "commitNameOld": "6d970d8100000b27747ef8c2322f780179792fe5",
      "commitAuthorOld": "Jonathan Hung",
      "daysBetweenCommits": 169.95,
      "commitsBetweenForRepo": 565,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,17 @@\n-  public void allocateResources(String partition, String user,\n-      int containers, Resource res, boolean decrPending) {\n+  public void allocateResources(String partition, String user, int containers,\n+      Resource res, boolean decrPending) {\n+\n     if (partition \u003d\u003d null || partition.equals(RMNodeLabelsManager.NO_LABEL)) {\n-      allocatedContainers.incr(containers);\n-      aggregateContainersAllocated.incr(containers);\n+      internalAllocateResources(partition, user, containers, res, decrPending);\n+    }\n \n-      allocatedMB.incr(res.getMemorySize() * containers);\n-      allocatedVCores.incr(res.getVirtualCores() * containers);\n-      if (queueMetricsForCustomResources !\u003d null) {\n-        queueMetricsForCustomResources.increaseAllocated(res, containers);\n-        registerCustomResources(\n-            queueMetricsForCustomResources.getAllocatedValues(),\n-            ALLOCATED_RESOURCE_METRIC_PREFIX, ALLOCATED_RESOURCE_METRIC_DESC);\n-      }\n-\n-      if (decrPending) {\n-        _decrPendingResources(containers, res);\n-      }\n-      QueueMetrics userMetrics \u003d getUserMetrics(user);\n-      if (userMetrics !\u003d null) {\n-        userMetrics.allocateResources(partition, user,\n-            containers, res, decrPending);\n-      }\n-      if (parent !\u003d null) {\n-        parent.allocateResources(partition, user, containers, res, decrPending);\n+    QueueMetrics partitionQueueMetrics \u003d getPartitionQueueMetrics(partition);\n+    if (partitionQueueMetrics !\u003d null) {\n+      partitionQueueMetrics.internalAllocateResources(partition, user,\n+          containers, res, decrPending);\n+      QueueMetrics partitionMetrics \u003d getPartitionMetrics(partition);\n+      if (partitionMetrics !\u003d null) {\n+        partitionMetrics.computeAllocateResources(containers, res, decrPending);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void allocateResources(String partition, String user, int containers,\n      Resource res, boolean decrPending) {\n\n    if (partition \u003d\u003d null || partition.equals(RMNodeLabelsManager.NO_LABEL)) {\n      internalAllocateResources(partition, user, containers, res, decrPending);\n    }\n\n    QueueMetrics partitionQueueMetrics \u003d getPartitionQueueMetrics(partition);\n    if (partitionQueueMetrics !\u003d null) {\n      partitionQueueMetrics.internalAllocateResources(partition, user,\n          containers, res, decrPending);\n      QueueMetrics partitionMetrics \u003d getPartitionMetrics(partition);\n      if (partitionMetrics !\u003d null) {\n        partitionMetrics.computeAllocateResources(containers, res, decrPending);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
      "extendedDetails": {}
    },
    "a5034c7988b6bf54bb7dab208100a2d205e3929e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9773: Add QueueMetrics for Custom Resources. Contributed by Manikandan R.\n",
      "commitDate": "16/10/19 2:10 PM",
      "commitName": "a5034c7988b6bf54bb7dab208100a2d205e3929e",
      "commitAuthor": "Eric E Payne",
      "commitDateOld": "28/08/19 1:40 PM",
      "commitNameOld": "6f2226a013daf30b00c6676a5f12160ac0b197b7",
      "commitAuthorOld": "Eric E Payne",
      "daysBetweenCommits": 49.02,
      "commitsBetweenForRepo": 390,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,28 @@\n   public void allocateResources(String partition, String user,\n       int containers, Resource res, boolean decrPending) {\n     if (partition \u003d\u003d null || partition.equals(RMNodeLabelsManager.NO_LABEL)) {\n       allocatedContainers.incr(containers);\n       aggregateContainersAllocated.incr(containers);\n \n       allocatedMB.incr(res.getMemorySize() * containers);\n       allocatedVCores.incr(res.getVirtualCores() * containers);\n       if (queueMetricsForCustomResources !\u003d null) {\n         queueMetricsForCustomResources.increaseAllocated(res, containers);\n+        registerCustomResources(\n+            queueMetricsForCustomResources.getAllocatedValues(),\n+            ALLOCATED_RESOURCE_METRIC_PREFIX, ALLOCATED_RESOURCE_METRIC_DESC);\n       }\n \n       if (decrPending) {\n         _decrPendingResources(containers, res);\n       }\n       QueueMetrics userMetrics \u003d getUserMetrics(user);\n       if (userMetrics !\u003d null) {\n         userMetrics.allocateResources(partition, user,\n             containers, res, decrPending);\n       }\n       if (parent !\u003d null) {\n         parent.allocateResources(partition, user, containers, res, decrPending);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void allocateResources(String partition, String user,\n      int containers, Resource res, boolean decrPending) {\n    if (partition \u003d\u003d null || partition.equals(RMNodeLabelsManager.NO_LABEL)) {\n      allocatedContainers.incr(containers);\n      aggregateContainersAllocated.incr(containers);\n\n      allocatedMB.incr(res.getMemorySize() * containers);\n      allocatedVCores.incr(res.getVirtualCores() * containers);\n      if (queueMetricsForCustomResources !\u003d null) {\n        queueMetricsForCustomResources.increaseAllocated(res, containers);\n        registerCustomResources(\n            queueMetricsForCustomResources.getAllocatedValues(),\n            ALLOCATED_RESOURCE_METRIC_PREFIX, ALLOCATED_RESOURCE_METRIC_DESC);\n      }\n\n      if (decrPending) {\n        _decrPendingResources(containers, res);\n      }\n      QueueMetrics userMetrics \u003d getUserMetrics(user);\n      if (userMetrics !\u003d null) {\n        userMetrics.allocateResources(partition, user,\n            containers, res, decrPending);\n      }\n      if (parent !\u003d null) {\n        parent.allocateResources(partition, user, containers, res, decrPending);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
      "extendedDetails": {}
    },
    "84e22a6af46db2859d7d2caf192861cae9b6a1a8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8842. Expose metrics for custom resource types in QueueMetrics. (Contributed by Szilard Nemeth)\n",
      "commitDate": "16/10/18 2:14 PM",
      "commitName": "84e22a6af46db2859d7d2caf192861cae9b6a1a8",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "25/01/18 1:02 AM",
      "commitNameOld": "82cc6f6968d2897ae006c5ef29eba74023f3483e",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 264.51,
      "commitsBetweenForRepo": 2657,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,25 @@\n   public void allocateResources(String partition, String user,\n       int containers, Resource res, boolean decrPending) {\n-    if(partition \u003d\u003d null || partition.equals(RMNodeLabelsManager.NO_LABEL)) {\n+    if (partition \u003d\u003d null || partition.equals(RMNodeLabelsManager.NO_LABEL)) {\n       allocatedContainers.incr(containers);\n       aggregateContainersAllocated.incr(containers);\n \n       allocatedMB.incr(res.getMemorySize() * containers);\n       allocatedVCores.incr(res.getVirtualCores() * containers);\n+      if (queueMetricsForCustomResources !\u003d null) {\n+        queueMetricsForCustomResources.increaseAllocated(res, containers);\n+      }\n+\n       if (decrPending) {\n         _decrPendingResources(containers, res);\n       }\n       QueueMetrics userMetrics \u003d getUserMetrics(user);\n       if (userMetrics !\u003d null) {\n         userMetrics.allocateResources(partition, user,\n             containers, res, decrPending);\n       }\n       if (parent !\u003d null) {\n         parent.allocateResources(partition, user, containers, res, decrPending);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void allocateResources(String partition, String user,\n      int containers, Resource res, boolean decrPending) {\n    if (partition \u003d\u003d null || partition.equals(RMNodeLabelsManager.NO_LABEL)) {\n      allocatedContainers.incr(containers);\n      aggregateContainersAllocated.incr(containers);\n\n      allocatedMB.incr(res.getMemorySize() * containers);\n      allocatedVCores.incr(res.getVirtualCores() * containers);\n      if (queueMetricsForCustomResources !\u003d null) {\n        queueMetricsForCustomResources.increaseAllocated(res, containers);\n      }\n\n      if (decrPending) {\n        _decrPendingResources(containers, res);\n      }\n      QueueMetrics userMetrics \u003d getUserMetrics(user);\n      if (userMetrics !\u003d null) {\n        userMetrics.allocateResources(partition, user,\n            containers, res, decrPending);\n      }\n      if (parent !\u003d null) {\n        parent.allocateResources(partition, user, containers, res, decrPending);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
      "extendedDetails": {}
    },
    "e9c2aa1bc383cb08784846534415bf17667d6e41": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6467. CSQueueMetrics needs to update the current metrics for default partition only. Contributed by Manikandan R.\n",
      "commitDate": "19/06/17 9:01 AM",
      "commitName": "e9c2aa1bc383cb08784846534415bf17667d6e41",
      "commitAuthor": "Naganarasimha",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6467. CSQueueMetrics needs to update the current metrics for default partition only. Contributed by Manikandan R.\n",
          "commitDate": "19/06/17 9:01 AM",
          "commitName": "e9c2aa1bc383cb08784846534415bf17667d6e41",
          "commitAuthor": "Naganarasimha",
          "commitDateOld": "01/05/17 7:45 AM",
          "commitNameOld": "30fc5801966feb7f9bdd7d79db75acc595102913",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 49.05,
          "commitsBetweenForRepo": 243,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,21 @@\n-  public void allocateResources(String user, int containers, Resource res,\n-      boolean decrPending) {\n-    allocatedContainers.incr(containers);\n-    aggregateContainersAllocated.incr(containers);\n+  public void allocateResources(String partition, String user,\n+      int containers, Resource res, boolean decrPending) {\n+    if(partition \u003d\u003d null || partition.equals(RMNodeLabelsManager.NO_LABEL)) {\n+      allocatedContainers.incr(containers);\n+      aggregateContainersAllocated.incr(containers);\n \n-    allocatedMB.incr(res.getMemorySize() * containers);\n-    allocatedVCores.incr(res.getVirtualCores() * containers);\n-    if (decrPending) {\n-      _decrPendingResources(containers, res);\n-    }\n-    QueueMetrics userMetrics \u003d getUserMetrics(user);\n-    if (userMetrics !\u003d null) {\n-      userMetrics.allocateResources(user, containers, res, decrPending);\n-    }\n-    if (parent !\u003d null) {\n-      parent.allocateResources(user, containers, res, decrPending);\n+      allocatedMB.incr(res.getMemorySize() * containers);\n+      allocatedVCores.incr(res.getVirtualCores() * containers);\n+      if (decrPending) {\n+        _decrPendingResources(containers, res);\n+      }\n+      QueueMetrics userMetrics \u003d getUserMetrics(user);\n+      if (userMetrics !\u003d null) {\n+        userMetrics.allocateResources(partition, user,\n+            containers, res, decrPending);\n+      }\n+      if (parent !\u003d null) {\n+        parent.allocateResources(partition, user, containers, res, decrPending);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void allocateResources(String partition, String user,\n      int containers, Resource res, boolean decrPending) {\n    if(partition \u003d\u003d null || partition.equals(RMNodeLabelsManager.NO_LABEL)) {\n      allocatedContainers.incr(containers);\n      aggregateContainersAllocated.incr(containers);\n\n      allocatedMB.incr(res.getMemorySize() * containers);\n      allocatedVCores.incr(res.getVirtualCores() * containers);\n      if (decrPending) {\n        _decrPendingResources(containers, res);\n      }\n      QueueMetrics userMetrics \u003d getUserMetrics(user);\n      if (userMetrics !\u003d null) {\n        userMetrics.allocateResources(partition, user,\n            containers, res, decrPending);\n      }\n      if (parent !\u003d null) {\n        parent.allocateResources(partition, user, containers, res, decrPending);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
          "extendedDetails": {
            "oldValue": "[user-String, containers-int, res-Resource, decrPending-boolean]",
            "newValue": "[partition-String, user-String, containers-int, res-Resource, decrPending-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6467. CSQueueMetrics needs to update the current metrics for default partition only. Contributed by Manikandan R.\n",
          "commitDate": "19/06/17 9:01 AM",
          "commitName": "e9c2aa1bc383cb08784846534415bf17667d6e41",
          "commitAuthor": "Naganarasimha",
          "commitDateOld": "01/05/17 7:45 AM",
          "commitNameOld": "30fc5801966feb7f9bdd7d79db75acc595102913",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 49.05,
          "commitsBetweenForRepo": 243,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,21 @@\n-  public void allocateResources(String user, int containers, Resource res,\n-      boolean decrPending) {\n-    allocatedContainers.incr(containers);\n-    aggregateContainersAllocated.incr(containers);\n+  public void allocateResources(String partition, String user,\n+      int containers, Resource res, boolean decrPending) {\n+    if(partition \u003d\u003d null || partition.equals(RMNodeLabelsManager.NO_LABEL)) {\n+      allocatedContainers.incr(containers);\n+      aggregateContainersAllocated.incr(containers);\n \n-    allocatedMB.incr(res.getMemorySize() * containers);\n-    allocatedVCores.incr(res.getVirtualCores() * containers);\n-    if (decrPending) {\n-      _decrPendingResources(containers, res);\n-    }\n-    QueueMetrics userMetrics \u003d getUserMetrics(user);\n-    if (userMetrics !\u003d null) {\n-      userMetrics.allocateResources(user, containers, res, decrPending);\n-    }\n-    if (parent !\u003d null) {\n-      parent.allocateResources(user, containers, res, decrPending);\n+      allocatedMB.incr(res.getMemorySize() * containers);\n+      allocatedVCores.incr(res.getVirtualCores() * containers);\n+      if (decrPending) {\n+        _decrPendingResources(containers, res);\n+      }\n+      QueueMetrics userMetrics \u003d getUserMetrics(user);\n+      if (userMetrics !\u003d null) {\n+        userMetrics.allocateResources(partition, user,\n+            containers, res, decrPending);\n+      }\n+      if (parent !\u003d null) {\n+        parent.allocateResources(partition, user, containers, res, decrPending);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void allocateResources(String partition, String user,\n      int containers, Resource res, boolean decrPending) {\n    if(partition \u003d\u003d null || partition.equals(RMNodeLabelsManager.NO_LABEL)) {\n      allocatedContainers.incr(containers);\n      aggregateContainersAllocated.incr(containers);\n\n      allocatedMB.incr(res.getMemorySize() * containers);\n      allocatedVCores.incr(res.getVirtualCores() * containers);\n      if (decrPending) {\n        _decrPendingResources(containers, res);\n      }\n      QueueMetrics userMetrics \u003d getUserMetrics(user);\n      if (userMetrics !\u003d null) {\n        userMetrics.allocateResources(partition, user,\n            containers, res, decrPending);\n      }\n      if (parent !\u003d null) {\n        parent.allocateResources(partition, user, containers, res, decrPending);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
          "extendedDetails": {}
        }
      ]
    },
    "819224dcf9c683aa52f58633ac8e13663f1916d8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5270. Solve miscellaneous issues caused by YARN-4844. Contributed by Wangda Tan\n",
      "commitDate": "11/07/16 10:36 PM",
      "commitName": "819224dcf9c683aa52f58633ac8e13663f1916d8",
      "commitAuthor": "Jian He",
      "commitDateOld": "29/05/16 8:54 AM",
      "commitNameOld": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 43.57,
      "commitsBetweenForRepo": 400,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public void allocateResources(String user, int containers, Resource res,\n       boolean decrPending) {\n     allocatedContainers.incr(containers);\n     aggregateContainersAllocated.incr(containers);\n \n     allocatedMB.incr(res.getMemorySize() * containers);\n-    allocatedVCores.incr(res.getVirtualCoresSize() * containers);\n+    allocatedVCores.incr(res.getVirtualCores() * containers);\n     if (decrPending) {\n       _decrPendingResources(containers, res);\n     }\n     QueueMetrics userMetrics \u003d getUserMetrics(user);\n     if (userMetrics !\u003d null) {\n       userMetrics.allocateResources(user, containers, res, decrPending);\n     }\n     if (parent !\u003d null) {\n       parent.allocateResources(user, containers, res, decrPending);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void allocateResources(String user, int containers, Resource res,\n      boolean decrPending) {\n    allocatedContainers.incr(containers);\n    aggregateContainersAllocated.incr(containers);\n\n    allocatedMB.incr(res.getMemorySize() * containers);\n    allocatedVCores.incr(res.getVirtualCores() * containers);\n    if (decrPending) {\n      _decrPendingResources(containers, res);\n    }\n    QueueMetrics userMetrics \u003d getUserMetrics(user);\n    if (userMetrics !\u003d null) {\n      userMetrics.allocateResources(user, containers, res, decrPending);\n    }\n    if (parent !\u003d null) {\n      parent.allocateResources(user, containers, res, decrPending);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
      "extendedDetails": {}
    },
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
      "commitDate": "29/05/16 8:54 AM",
      "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "17/01/16 6:57 PM",
      "commitNameOld": "9523648d57ebc71cf5c57f3f8c52c4a63265b61c",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 132.54,
      "commitsBetweenForRepo": 873,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public void allocateResources(String user, int containers, Resource res,\n       boolean decrPending) {\n     allocatedContainers.incr(containers);\n     aggregateContainersAllocated.incr(containers);\n \n-    allocatedMB.incr(res.getMemory() * containers);\n-    allocatedVCores.incr(res.getVirtualCores() * containers);\n+    allocatedMB.incr(res.getMemorySize() * containers);\n+    allocatedVCores.incr(res.getVirtualCoresSize() * containers);\n     if (decrPending) {\n       _decrPendingResources(containers, res);\n     }\n     QueueMetrics userMetrics \u003d getUserMetrics(user);\n     if (userMetrics !\u003d null) {\n       userMetrics.allocateResources(user, containers, res, decrPending);\n     }\n     if (parent !\u003d null) {\n       parent.allocateResources(user, containers, res, decrPending);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void allocateResources(String user, int containers, Resource res,\n      boolean decrPending) {\n    allocatedContainers.incr(containers);\n    aggregateContainersAllocated.incr(containers);\n\n    allocatedMB.incr(res.getMemorySize() * containers);\n    allocatedVCores.incr(res.getVirtualCoresSize() * containers);\n    if (decrPending) {\n      _decrPendingResources(containers, res);\n    }\n    QueueMetrics userMetrics \u003d getUserMetrics(user);\n    if (userMetrics !\u003d null) {\n      userMetrics.allocateResources(user, containers, res, decrPending);\n    }\n    if (parent !\u003d null) {\n      parent.allocateResources(user, containers, res, decrPending);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
      "extendedDetails": {}
    },
    "9523648d57ebc71cf5c57f3f8c52c4a63265b61c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4538. QueueMetrics pending cores and memory metrics wrong. (Bibin A Chundatt via wangda)\n",
      "commitDate": "17/01/16 6:57 PM",
      "commitName": "9523648d57ebc71cf5c57f3f8c52c4a63265b61c",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "12/11/15 11:09 AM",
      "commitNameOld": "796638d9bc86235b9f3e5d1a3a9a25bbf5c04d1c",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 66.32,
      "commitsBetweenForRepo": 388,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n   public void allocateResources(String user, int containers, Resource res,\n       boolean decrPending) {\n-    // if #containers \u003d 0, means change container resource\n     allocatedContainers.incr(containers);\n     aggregateContainersAllocated.incr(containers);\n \n-    allocatedMB.incr(res.getMemory() * Math.max(containers, 1));\n-    allocatedVCores.incr(res.getVirtualCores() * Math.max(containers, 1));\n+    allocatedMB.incr(res.getMemory() * containers);\n+    allocatedVCores.incr(res.getVirtualCores() * containers);\n     if (decrPending) {\n       _decrPendingResources(containers, res);\n     }\n     QueueMetrics userMetrics \u003d getUserMetrics(user);\n     if (userMetrics !\u003d null) {\n       userMetrics.allocateResources(user, containers, res, decrPending);\n     }\n     if (parent !\u003d null) {\n       parent.allocateResources(user, containers, res, decrPending);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void allocateResources(String user, int containers, Resource res,\n      boolean decrPending) {\n    allocatedContainers.incr(containers);\n    aggregateContainersAllocated.incr(containers);\n\n    allocatedMB.incr(res.getMemory() * containers);\n    allocatedVCores.incr(res.getVirtualCores() * containers);\n    if (decrPending) {\n      _decrPendingResources(containers, res);\n    }\n    QueueMetrics userMetrics \u003d getUserMetrics(user);\n    if (userMetrics !\u003d null) {\n      userMetrics.allocateResources(user, containers, res, decrPending);\n    }\n    if (parent !\u003d null) {\n      parent.allocateResources(user, containers, res, decrPending);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
      "extendedDetails": {}
    },
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1651. CapacityScheduler side changes to support container resize. Contributed by Wangda Tan\n",
      "commitDate": "23/09/15 1:29 PM",
      "commitName": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
      "commitAuthor": "Jian He",
      "commitDateOld": "21/04/15 8:06 PM",
      "commitNameOld": "bdd90110e6904b59746812d9a093924a65e72280",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 154.72,
      "commitsBetweenForRepo": 1119,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,19 @@\n   public void allocateResources(String user, int containers, Resource res,\n       boolean decrPending) {\n+    // if #containers \u003d 0, means change container resource\n     allocatedContainers.incr(containers);\n     aggregateContainersAllocated.incr(containers);\n-    allocatedMB.incr(res.getMemory() * containers);\n-    allocatedVCores.incr(res.getVirtualCores() * containers);\n+\n+    allocatedMB.incr(res.getMemory() * Math.max(containers, 1));\n+    allocatedVCores.incr(res.getVirtualCores() * Math.max(containers, 1));\n     if (decrPending) {\n       _decrPendingResources(containers, res);\n     }\n     QueueMetrics userMetrics \u003d getUserMetrics(user);\n     if (userMetrics !\u003d null) {\n       userMetrics.allocateResources(user, containers, res, decrPending);\n     }\n     if (parent !\u003d null) {\n       parent.allocateResources(user, containers, res, decrPending);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void allocateResources(String user, int containers, Resource res,\n      boolean decrPending) {\n    // if #containers \u003d 0, means change container resource\n    allocatedContainers.incr(containers);\n    aggregateContainersAllocated.incr(containers);\n\n    allocatedMB.incr(res.getMemory() * Math.max(containers, 1));\n    allocatedVCores.incr(res.getVirtualCores() * Math.max(containers, 1));\n    if (decrPending) {\n      _decrPendingResources(containers, res);\n    }\n    QueueMetrics userMetrics \u003d getUserMetrics(user);\n    if (userMetrics !\u003d null) {\n      userMetrics.allocateResources(user, containers, res, decrPending);\n    }\n    if (parent !\u003d null) {\n      parent.allocateResources(user, containers, res, decrPending);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
      "extendedDetails": {}
    },
    "981679e6d7650141fc8737c7e13b16d8b795b408": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1498. Common scheduler changes for moving apps between queues (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1563021 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/01/14 4:14 PM",
      "commitName": "981679e6d7650141fc8737c7e13b16d8b795b408",
      "commitAuthor": "Sanford Ryza",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1498. Common scheduler changes for moving apps between queues (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1563021 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/01/14 4:14 PM",
          "commitName": "981679e6d7650141fc8737c7e13b16d8b795b408",
          "commitAuthor": "Sanford Ryza",
          "commitDateOld": "14/01/14 2:33 PM",
          "commitNameOld": "f4fd050dee83ecbff0a92b28c3a51ae353f95c24",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 16.07,
          "commitsBetweenForRepo": 110,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,17 @@\n-  public void allocateResources(String user, int containers, Resource res) {\n+  public void allocateResources(String user, int containers, Resource res,\n+      boolean decrPending) {\n     allocatedContainers.incr(containers);\n     aggregateContainersAllocated.incr(containers);\n     allocatedMB.incr(res.getMemory() * containers);\n     allocatedVCores.incr(res.getVirtualCores() * containers);\n-    _decrPendingResources(containers, Resources.multiply(res, containers));\n+    if (decrPending) {\n+      _decrPendingResources(containers, res);\n+    }\n     QueueMetrics userMetrics \u003d getUserMetrics(user);\n     if (userMetrics !\u003d null) {\n-      userMetrics.allocateResources(user, containers, res);\n+      userMetrics.allocateResources(user, containers, res, decrPending);\n     }\n     if (parent !\u003d null) {\n-      parent.allocateResources(user, containers, res);\n+      parent.allocateResources(user, containers, res, decrPending);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void allocateResources(String user, int containers, Resource res,\n      boolean decrPending) {\n    allocatedContainers.incr(containers);\n    aggregateContainersAllocated.incr(containers);\n    allocatedMB.incr(res.getMemory() * containers);\n    allocatedVCores.incr(res.getVirtualCores() * containers);\n    if (decrPending) {\n      _decrPendingResources(containers, res);\n    }\n    QueueMetrics userMetrics \u003d getUserMetrics(user);\n    if (userMetrics !\u003d null) {\n      userMetrics.allocateResources(user, containers, res, decrPending);\n    }\n    if (parent !\u003d null) {\n      parent.allocateResources(user, containers, res, decrPending);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
          "extendedDetails": {
            "oldValue": "[user-String, containers-int, res-Resource]",
            "newValue": "[user-String, containers-int, res-Resource, decrPending-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1498. Common scheduler changes for moving apps between queues (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1563021 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/01/14 4:14 PM",
          "commitName": "981679e6d7650141fc8737c7e13b16d8b795b408",
          "commitAuthor": "Sanford Ryza",
          "commitDateOld": "14/01/14 2:33 PM",
          "commitNameOld": "f4fd050dee83ecbff0a92b28c3a51ae353f95c24",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 16.07,
          "commitsBetweenForRepo": 110,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,17 @@\n-  public void allocateResources(String user, int containers, Resource res) {\n+  public void allocateResources(String user, int containers, Resource res,\n+      boolean decrPending) {\n     allocatedContainers.incr(containers);\n     aggregateContainersAllocated.incr(containers);\n     allocatedMB.incr(res.getMemory() * containers);\n     allocatedVCores.incr(res.getVirtualCores() * containers);\n-    _decrPendingResources(containers, Resources.multiply(res, containers));\n+    if (decrPending) {\n+      _decrPendingResources(containers, res);\n+    }\n     QueueMetrics userMetrics \u003d getUserMetrics(user);\n     if (userMetrics !\u003d null) {\n-      userMetrics.allocateResources(user, containers, res);\n+      userMetrics.allocateResources(user, containers, res, decrPending);\n     }\n     if (parent !\u003d null) {\n-      parent.allocateResources(user, containers, res);\n+      parent.allocateResources(user, containers, res, decrPending);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void allocateResources(String user, int containers, Resource res,\n      boolean decrPending) {\n    allocatedContainers.incr(containers);\n    aggregateContainersAllocated.incr(containers);\n    allocatedMB.incr(res.getMemory() * containers);\n    allocatedVCores.incr(res.getVirtualCores() * containers);\n    if (decrPending) {\n      _decrPendingResources(containers, res);\n    }\n    QueueMetrics userMetrics \u003d getUserMetrics(user);\n    if (userMetrics !\u003d null) {\n      userMetrics.allocateResources(user, containers, res, decrPending);\n    }\n    if (parent !\u003d null) {\n      parent.allocateResources(user, containers, res, decrPending);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
          "extendedDetails": {}
        }
      ]
    },
    "f19465f72f57a3226725fc62f8f5711c95147f32": {
      "type": "Ybodychange",
      "commitMessage": "YARN-598. Add virtual cores to queue metrics. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1480816 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/05/13 3:23 PM",
      "commitName": "f19465f72f57a3226725fc62f8f5711c95147f32",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "09/05/13 3:15 PM",
      "commitNameOld": "51ccb87031eda6a2b75be098a88f1d89ea82c610",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   public void allocateResources(String user, int containers, Resource res) {\n     allocatedContainers.incr(containers);\n     aggregateContainersAllocated.incr(containers);\n     allocatedMB.incr(res.getMemory() * containers);\n+    allocatedVCores.incr(res.getVirtualCores() * containers);\n     _decrPendingResources(containers, Resources.multiply(res, containers));\n     QueueMetrics userMetrics \u003d getUserMetrics(user);\n     if (userMetrics !\u003d null) {\n       userMetrics.allocateResources(user, containers, res);\n     }\n     if (parent !\u003d null) {\n       parent.allocateResources(user, containers, res);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void allocateResources(String user, int containers, Resource res) {\n    allocatedContainers.incr(containers);\n    aggregateContainersAllocated.incr(containers);\n    allocatedMB.incr(res.getMemory() * containers);\n    allocatedVCores.incr(res.getVirtualCores() * containers);\n    _decrPendingResources(containers, Resources.multiply(res, containers));\n    QueueMetrics userMetrics \u003d getUserMetrics(user);\n    if (userMetrics !\u003d null) {\n      userMetrics.allocateResources(user, containers, res);\n    }\n    if (parent !\u003d null) {\n      parent.allocateResources(user, containers, res);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
      "extendedDetails": {}
    },
    "453926397182078c65a4428eb5de5a90d6af6448": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2. Enhanced CapacityScheduler to account for CPU alongwith memory for multi-dimensional resource scheduling. Contributed by Arun C. Murthy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1430682 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/01/13 9:08 PM",
      "commitName": "453926397182078c65a4428eb5de5a90d6af6448",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "20/08/12 8:36 AM",
      "commitNameOld": "bc538e100ab48f3f2b539f3b2a6e19a25d31f9fc",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 141.56,
      "commitsBetweenForRepo": 740,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public void allocateResources(String user, int containers, Resource res) {\n     allocatedContainers.incr(containers);\n     aggregateContainersAllocated.incr(containers);\n     allocatedMB.incr(res.getMemory() * containers);\n-    _decrPendingResources(containers, multiply(res, containers));\n+    _decrPendingResources(containers, Resources.multiply(res, containers));\n     QueueMetrics userMetrics \u003d getUserMetrics(user);\n     if (userMetrics !\u003d null) {\n       userMetrics.allocateResources(user, containers, res);\n     }\n     if (parent !\u003d null) {\n       parent.allocateResources(user, containers, res);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void allocateResources(String user, int containers, Resource res) {\n    allocatedContainers.incr(containers);\n    aggregateContainersAllocated.incr(containers);\n    allocatedMB.incr(res.getMemory() * containers);\n    _decrPendingResources(containers, Resources.multiply(res, containers));\n    QueueMetrics userMetrics \u003d getUserMetrics(user);\n    if (userMetrics !\u003d null) {\n      userMetrics.allocateResources(user, containers, res);\n    }\n    if (parent !\u003d null) {\n      parent.allocateResources(user, containers, res);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void allocateResources(String user, int containers, Resource res) {\n    allocatedContainers.incr(containers);\n    aggregateContainersAllocated.incr(containers);\n    allocatedMB.incr(res.getMemory() * containers);\n    _decrPendingResources(containers, multiply(res, containers));\n    QueueMetrics userMetrics \u003d getUserMetrics(user);\n    if (userMetrics !\u003d null) {\n      userMetrics.allocateResources(user, containers, res);\n    }\n    if (parent !\u003d null) {\n      parent.allocateResources(user, containers, res);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java"
      }
    },
    "7f23d7235266cf89710b1d1be411bd5fcdb17769": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3764. Fixed resource usage metrics for queues and users.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1238255 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/01/12 12:30 AM",
      "commitName": "7f23d7235266cf89710b1d1be411bd5fcdb17769",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "27/01/12 5:32 PM",
      "commitNameOld": "5262b7ba4d018562d4e7d60772af4ddc3d770a23",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 3.29,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public void allocateResources(String user, int containers, Resource res) {\n     allocatedContainers.incr(containers);\n     aggregateContainersAllocated.incr(containers);\n-    allocatedGB.incr(res.getMemory()/GB * containers);\n+    allocatedMB.incr(res.getMemory() * containers);\n     _decrPendingResources(containers, multiply(res, containers));\n     QueueMetrics userMetrics \u003d getUserMetrics(user);\n     if (userMetrics !\u003d null) {\n       userMetrics.allocateResources(user, containers, res);\n     }\n     if (parent !\u003d null) {\n       parent.allocateResources(user, containers, res);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void allocateResources(String user, int containers, Resource res) {\n    allocatedContainers.incr(containers);\n    aggregateContainersAllocated.incr(containers);\n    allocatedMB.incr(res.getMemory() * containers);\n    _decrPendingResources(containers, multiply(res, containers));\n    QueueMetrics userMetrics \u003d getUserMetrics(user);\n    if (userMetrics !\u003d null) {\n      userMetrics.allocateResources(user, containers, res);\n    }\n    if (parent !\u003d null) {\n      parent.allocateResources(user, containers, res);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
      "extendedDetails": {}
    },
    "b3284c4607a8e2ec40ea9f7c090c8b705d2853da": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3059. QueueMetrics do not have metrics for aggregate containers-allocated and aggregate containers-released. (Devaraj K via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1183540 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/10/11 3:38 PM",
      "commitName": "b3284c4607a8e2ec40ea9f7c090c8b705d2853da",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "05/10/11 7:01 AM",
      "commitNameOld": "9a4e890f4aadc921fa468fd1292d215704429b61",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 9.36,
      "commitsBetweenForRepo": 80,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n   public void allocateResources(String user, int containers, Resource res) {\n     allocatedContainers.incr(containers);\n+    aggregateContainersAllocated.incr(containers);\n     allocatedGB.incr(res.getMemory()/GB * containers);\n     _decrPendingResources(containers, multiply(res, containers));\n     QueueMetrics userMetrics \u003d getUserMetrics(user);\n     if (userMetrics !\u003d null) {\n       userMetrics.allocateResources(user, containers, res);\n     }\n     if (parent !\u003d null) {\n       parent.allocateResources(user, containers, res);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void allocateResources(String user, int containers, Resource res) {\n    allocatedContainers.incr(containers);\n    aggregateContainersAllocated.incr(containers);\n    allocatedGB.incr(res.getMemory()/GB * containers);\n    _decrPendingResources(containers, multiply(res, containers));\n    QueueMetrics userMetrics \u003d getUserMetrics(user);\n    if (userMetrics !\u003d null) {\n      userMetrics.allocateResources(user, containers, res);\n    }\n    if (parent !\u003d null) {\n      parent.allocateResources(user, containers, res);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void allocateResources(String user, int containers, Resource res) {\n    allocatedContainers.incr(containers);\n    allocatedGB.incr(res.getMemory()/GB * containers);\n    _decrPendingResources(containers, multiply(res, containers));\n    QueueMetrics userMetrics \u003d getUserMetrics(user);\n    if (userMetrics !\u003d null) {\n      userMetrics.allocateResources(user, containers, res);\n    }\n    if (parent !\u003d null) {\n      parent.allocateResources(user, containers, res);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,12 @@\n+  public void allocateResources(String user, int containers, Resource res) {\n+    allocatedContainers.incr(containers);\n+    allocatedGB.incr(res.getMemory()/GB * containers);\n+    _decrPendingResources(containers, multiply(res, containers));\n+    QueueMetrics userMetrics \u003d getUserMetrics(user);\n+    if (userMetrics !\u003d null) {\n+      userMetrics.allocateResources(user, containers, res);\n+    }\n+    if (parent !\u003d null) {\n+      parent.allocateResources(user, containers, res);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void allocateResources(String user, int containers, Resource res) {\n    allocatedContainers.incr(containers);\n    allocatedGB.incr(res.getMemory()/GB * containers);\n    _decrPendingResources(containers, multiply(res, containers));\n    QueueMetrics userMetrics \u003d getUserMetrics(user);\n    if (userMetrics !\u003d null) {\n      userMetrics.allocateResources(user, containers, res);\n    }\n    if (parent !\u003d null) {\n      parent.allocateResources(user, containers, res);\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/QueueMetrics.java"
    }
  }
}