{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSUtilClient.java",
  "functionName": "getHaNnWebHdfsAddresses",
  "functionId": "getHaNnWebHdfsAddresses___conf-Configuration__scheme-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
  "functionStartLine": 247,
  "functionEndLine": 258,
  "numCommitsSeen": 143,
  "timeTaken": 3367,
  "changeHistory": [
    "6f8003dc7bc9e8be7b0512c514d370c303faf003",
    "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3"
  ],
  "changeHistoryShort": {
    "6f8003dc7bc9e8be7b0512c514d370c303faf003": "Ymultichange(Ymovefromfile,Ybodychange)",
    "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6f8003dc7bc9e8be7b0512c514d370c303faf003": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-8185. Separate client related routines in HAUtil into a new class. Contributed by Haohui Mai.\n",
      "commitDate": "21/04/15 9:59 PM",
      "commitName": "6f8003dc7bc9e8be7b0512c514d370c303faf003",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-8185. Separate client related routines in HAUtil into a new class. Contributed by Haohui Mai.\n",
          "commitDate": "21/04/15 9:59 PM",
          "commitName": "6f8003dc7bc9e8be7b0512c514d370c303faf003",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "21/04/15 8:57 PM",
          "commitNameOld": "674c7ef64916fabbe59c8d6cdd50ca19cf7ddb7c",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n   public static Map\u003cString, Map\u003cString, InetSocketAddress\u003e\u003e getHaNnWebHdfsAddresses(\n       Configuration conf, String scheme) {\n-    if (WebHdfsFileSystem.SCHEME.equals(scheme)) {\n+    if (WebHdfsConstants.WEBHDFS_SCHEME.equals(scheme)) {\n       return getAddresses(conf, null,\n-          DFSConfigKeys.DFS_NAMENODE_HTTP_ADDRESS_KEY);\n-    } else if (SWebHdfsFileSystem.SCHEME.equals(scheme)) {\n+          HdfsClientConfigKeys.DFS_NAMENODE_HTTP_ADDRESS_KEY);\n+    } else if (WebHdfsConstants.SWEBHDFS_SCHEME.equals(scheme)) {\n       return getAddresses(conf, null,\n-          DFSConfigKeys.DFS_NAMENODE_HTTPS_ADDRESS_KEY);\n+          HdfsClientConfigKeys.DFS_NAMENODE_HTTPS_ADDRESS_KEY);\n     } else {\n       throw new IllegalArgumentException(\"Unsupported scheme: \" + scheme);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Map\u003cString, Map\u003cString, InetSocketAddress\u003e\u003e getHaNnWebHdfsAddresses(\n      Configuration conf, String scheme) {\n    if (WebHdfsConstants.WEBHDFS_SCHEME.equals(scheme)) {\n      return getAddresses(conf, null,\n          HdfsClientConfigKeys.DFS_NAMENODE_HTTP_ADDRESS_KEY);\n    } else if (WebHdfsConstants.SWEBHDFS_SCHEME.equals(scheme)) {\n      return getAddresses(conf, null,\n          HdfsClientConfigKeys.DFS_NAMENODE_HTTPS_ADDRESS_KEY);\n    } else {\n      throw new IllegalArgumentException(\"Unsupported scheme: \" + scheme);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
            "oldMethodName": "getHaNnWebHdfsAddresses",
            "newMethodName": "getHaNnWebHdfsAddresses"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8185. Separate client related routines in HAUtil into a new class. Contributed by Haohui Mai.\n",
          "commitDate": "21/04/15 9:59 PM",
          "commitName": "6f8003dc7bc9e8be7b0512c514d370c303faf003",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "21/04/15 8:57 PM",
          "commitNameOld": "674c7ef64916fabbe59c8d6cdd50ca19cf7ddb7c",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n   public static Map\u003cString, Map\u003cString, InetSocketAddress\u003e\u003e getHaNnWebHdfsAddresses(\n       Configuration conf, String scheme) {\n-    if (WebHdfsFileSystem.SCHEME.equals(scheme)) {\n+    if (WebHdfsConstants.WEBHDFS_SCHEME.equals(scheme)) {\n       return getAddresses(conf, null,\n-          DFSConfigKeys.DFS_NAMENODE_HTTP_ADDRESS_KEY);\n-    } else if (SWebHdfsFileSystem.SCHEME.equals(scheme)) {\n+          HdfsClientConfigKeys.DFS_NAMENODE_HTTP_ADDRESS_KEY);\n+    } else if (WebHdfsConstants.SWEBHDFS_SCHEME.equals(scheme)) {\n       return getAddresses(conf, null,\n-          DFSConfigKeys.DFS_NAMENODE_HTTPS_ADDRESS_KEY);\n+          HdfsClientConfigKeys.DFS_NAMENODE_HTTPS_ADDRESS_KEY);\n     } else {\n       throw new IllegalArgumentException(\"Unsupported scheme: \" + scheme);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Map\u003cString, Map\u003cString, InetSocketAddress\u003e\u003e getHaNnWebHdfsAddresses(\n      Configuration conf, String scheme) {\n    if (WebHdfsConstants.WEBHDFS_SCHEME.equals(scheme)) {\n      return getAddresses(conf, null,\n          HdfsClientConfigKeys.DFS_NAMENODE_HTTP_ADDRESS_KEY);\n    } else if (WebHdfsConstants.SWEBHDFS_SCHEME.equals(scheme)) {\n      return getAddresses(conf, null,\n          HdfsClientConfigKeys.DFS_NAMENODE_HTTPS_ADDRESS_KEY);\n    } else {\n      throw new IllegalArgumentException(\"Unsupported scheme: \" + scheme);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3987. Support webhdfs over HTTPS. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543962 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/11/13 1:51 PM",
      "commitName": "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,12 @@\n+  public static Map\u003cString, Map\u003cString, InetSocketAddress\u003e\u003e getHaNnWebHdfsAddresses(\n+      Configuration conf, String scheme) {\n+    if (WebHdfsFileSystem.SCHEME.equals(scheme)) {\n+      return getAddresses(conf, null,\n+          DFSConfigKeys.DFS_NAMENODE_HTTP_ADDRESS_KEY);\n+    } else if (SWebHdfsFileSystem.SCHEME.equals(scheme)) {\n+      return getAddresses(conf, null,\n+          DFSConfigKeys.DFS_NAMENODE_HTTPS_ADDRESS_KEY);\n+    } else {\n+      throw new IllegalArgumentException(\"Unsupported scheme: \" + scheme);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Map\u003cString, Map\u003cString, InetSocketAddress\u003e\u003e getHaNnWebHdfsAddresses(\n      Configuration conf, String scheme) {\n    if (WebHdfsFileSystem.SCHEME.equals(scheme)) {\n      return getAddresses(conf, null,\n          DFSConfigKeys.DFS_NAMENODE_HTTP_ADDRESS_KEY);\n    } else if (SWebHdfsFileSystem.SCHEME.equals(scheme)) {\n      return getAddresses(conf, null,\n          DFSConfigKeys.DFS_NAMENODE_HTTPS_ADDRESS_KEY);\n    } else {\n      throw new IllegalArgumentException(\"Unsupported scheme: \" + scheme);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java"
    }
  }
}