{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationReportPBImpl.java",
  "functionName": "mergeLocalToBuilder",
  "functionId": "mergeLocalToBuilder",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java",
  "functionStartLine": 497,
  "functionEndLine": 530,
  "numCommitsSeen": 36,
  "timeTaken": 9013,
  "changeHistory": [
    "ab923a53fcf55d4d75aa027d46e3c4a659015325",
    "eb0a483ed07399c7a06ed9db4bfbec382de470da",
    "b6265d39c5d0fda21dfe55273f193d8a6a20c6a8",
    "1141edc424a2975ab48871108e5da4bc3def49f6",
    "ebe0c17a95ae37d4768f2928ea193e89db34ead5",
    "f179afc68d863ea35f3ce5c06f1690fb7a4e8f02",
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0",
    "5d1b453b8591d87ffb564857015c26c99fb7437c",
    "a2c42330047bf955a6a585dcddf798920d4c8640",
    "6a2f2551fd13f6d3c932cc9b592e2a23b616a7f5",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "ae6cc14611a5898ed637a2e0f9df559f6c29093e",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "ab923a53fcf55d4d75aa027d46e3c4a659015325": "Ybodychange",
    "eb0a483ed07399c7a06ed9db4bfbec382de470da": "Ybodychange",
    "b6265d39c5d0fda21dfe55273f193d8a6a20c6a8": "Ybodychange",
    "1141edc424a2975ab48871108e5da4bc3def49f6": "Ybodychange",
    "ebe0c17a95ae37d4768f2928ea193e89db34ead5": "Ybodychange",
    "f179afc68d863ea35f3ce5c06f1690fb7a4e8f02": "Ybodychange",
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0": "Yfilerename",
    "5d1b453b8591d87ffb564857015c26c99fb7437c": "Ybodychange",
    "a2c42330047bf955a6a585dcddf798920d4c8640": "Ybodychange",
    "6a2f2551fd13f6d3c932cc9b592e2a23b616a7f5": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "ae6cc14611a5898ed637a2e0f9df559f6c29093e": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ab923a53fcf55d4d75aa027d46e3c4a659015325": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5965. Retrospect ApplicationReport#getApplicationTimeouts. Contributed by Rohith Sharma K S\n",
      "commitDate": "07/12/16 10:57 AM",
      "commitName": "ab923a53fcf55d4d75aa027d46e3c4a659015325",
      "commitAuthor": "Sunil",
      "commitDateOld": "24/11/16 4:48 AM",
      "commitNameOld": "eb0a483ed07399c7a06ed9db4bfbec382de470da",
      "commitAuthorOld": "Sunil",
      "daysBetweenCommits": 13.26,
      "commitsBetweenForRepo": 81,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null\n         \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n             builder.getApplicationId())) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.currentApplicationAttemptId !\u003d null\n         \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n             builder.getCurrentApplicationAttemptId())) {\n       builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n     }\n     if (this.clientToAMToken !\u003d null\n         \u0026\u0026 !((TokenPBImpl) this.clientToAMToken).getProto().equals(\n             builder.getClientToAmToken())) {\n       builder.setClientToAmToken(convertToProtoFormat(this.clientToAMToken));\n     }\n     if (this.amRmToken !\u003d null\n       \u0026\u0026 !((TokenPBImpl) this.amRmToken).getProto().equals(\n       builder.getAmRmToken())) {\n       builder.setAmRmToken(convertToProtoFormat(this.amRmToken));\n     }\n     if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n       builder.clearApplicationTags();\n       builder.addAllApplicationTags(this.applicationTags);\n     }\n     if (this.priority !\u003d null\n         \u0026\u0026 !((PriorityPBImpl) this.priority).getProto().equals(\n             builder.getPriority())) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n-    if (this.applicationTimeoutList !\u003d null) {\n-      addLocalApplicationTimeoutToProto();\n+    if (this.applicationTimeouts !\u003d null) {\n+      addApplicationTimeouts();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null\n        \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n            builder.getApplicationId())) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.currentApplicationAttemptId !\u003d null\n        \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n            builder.getCurrentApplicationAttemptId())) {\n      builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n    }\n    if (this.clientToAMToken !\u003d null\n        \u0026\u0026 !((TokenPBImpl) this.clientToAMToken).getProto().equals(\n            builder.getClientToAmToken())) {\n      builder.setClientToAmToken(convertToProtoFormat(this.clientToAMToken));\n    }\n    if (this.amRmToken !\u003d null\n      \u0026\u0026 !((TokenPBImpl) this.amRmToken).getProto().equals(\n      builder.getAmRmToken())) {\n      builder.setAmRmToken(convertToProtoFormat(this.amRmToken));\n    }\n    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n      builder.clearApplicationTags();\n      builder.addAllApplicationTags(this.applicationTags);\n    }\n    if (this.priority !\u003d null\n        \u0026\u0026 !((PriorityPBImpl) this.priority).getProto().equals(\n            builder.getPriority())) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.applicationTimeouts !\u003d null) {\n      addApplicationTimeouts();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java",
      "extendedDetails": {}
    },
    "eb0a483ed07399c7a06ed9db4bfbec382de470da": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4206. Add Application timeouts in Application report and CLI. Contributed by Rohith Sharma K S.\n",
      "commitDate": "24/11/16 4:48 AM",
      "commitName": "eb0a483ed07399c7a06ed9db4bfbec382de470da",
      "commitAuthor": "Sunil",
      "commitDateOld": "15/09/15 11:40 AM",
      "commitNameOld": "ae5308fe1d08479da0f3929cc6a57816411e9121",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 435.76,
      "commitsBetweenForRepo": 3124,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,34 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null\n         \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n             builder.getApplicationId())) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.currentApplicationAttemptId !\u003d null\n         \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n             builder.getCurrentApplicationAttemptId())) {\n       builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n     }\n     if (this.clientToAMToken !\u003d null\n         \u0026\u0026 !((TokenPBImpl) this.clientToAMToken).getProto().equals(\n             builder.getClientToAmToken())) {\n       builder.setClientToAmToken(convertToProtoFormat(this.clientToAMToken));\n     }\n     if (this.amRmToken !\u003d null\n       \u0026\u0026 !((TokenPBImpl) this.amRmToken).getProto().equals(\n       builder.getAmRmToken())) {\n       builder.setAmRmToken(convertToProtoFormat(this.amRmToken));\n     }\n     if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n       builder.clearApplicationTags();\n       builder.addAllApplicationTags(this.applicationTags);\n     }\n     if (this.priority !\u003d null\n         \u0026\u0026 !((PriorityPBImpl) this.priority).getProto().equals(\n             builder.getPriority())) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n+    if (this.applicationTimeoutList !\u003d null) {\n+      addLocalApplicationTimeoutToProto();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null\n        \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n            builder.getApplicationId())) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.currentApplicationAttemptId !\u003d null\n        \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n            builder.getCurrentApplicationAttemptId())) {\n      builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n    }\n    if (this.clientToAMToken !\u003d null\n        \u0026\u0026 !((TokenPBImpl) this.clientToAMToken).getProto().equals(\n            builder.getClientToAmToken())) {\n      builder.setClientToAmToken(convertToProtoFormat(this.clientToAMToken));\n    }\n    if (this.amRmToken !\u003d null\n      \u0026\u0026 !((TokenPBImpl) this.amRmToken).getProto().equals(\n      builder.getAmRmToken())) {\n      builder.setAmRmToken(convertToProtoFormat(this.amRmToken));\n    }\n    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n      builder.clearApplicationTags();\n      builder.addAllApplicationTags(this.applicationTags);\n    }\n    if (this.priority !\u003d null\n        \u0026\u0026 !((PriorityPBImpl) this.priority).getProto().equals(\n            builder.getPriority())) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.applicationTimeoutList !\u003d null) {\n      addLocalApplicationTimeoutToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java",
      "extendedDetails": {}
    },
    "b6265d39c5d0fda21dfe55273f193d8a6a20c6a8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3948. Display Application Priority in RM Web UI.(Sunil G via rohithsharmaks)\n",
      "commitDate": "06/08/15 10:13 PM",
      "commitName": "b6265d39c5d0fda21dfe55273f193d8a6a20c6a8",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "03/08/15 3:46 PM",
      "commitNameOld": "0306d902f53582320aa5895ca9f5c31f64aaaff6",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 3.27,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,31 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null\n         \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n             builder.getApplicationId())) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.currentApplicationAttemptId !\u003d null\n         \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n             builder.getCurrentApplicationAttemptId())) {\n       builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n     }\n     if (this.clientToAMToken !\u003d null\n         \u0026\u0026 !((TokenPBImpl) this.clientToAMToken).getProto().equals(\n             builder.getClientToAmToken())) {\n       builder.setClientToAmToken(convertToProtoFormat(this.clientToAMToken));\n     }\n     if (this.amRmToken !\u003d null\n       \u0026\u0026 !((TokenPBImpl) this.amRmToken).getProto().equals(\n       builder.getAmRmToken())) {\n       builder.setAmRmToken(convertToProtoFormat(this.amRmToken));\n     }\n     if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n       builder.clearApplicationTags();\n       builder.addAllApplicationTags(this.applicationTags);\n     }\n+    if (this.priority !\u003d null\n+        \u0026\u0026 !((PriorityPBImpl) this.priority).getProto().equals(\n+            builder.getPriority())) {\n+      builder.setPriority(convertToProtoFormat(this.priority));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null\n        \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n            builder.getApplicationId())) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.currentApplicationAttemptId !\u003d null\n        \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n            builder.getCurrentApplicationAttemptId())) {\n      builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n    }\n    if (this.clientToAMToken !\u003d null\n        \u0026\u0026 !((TokenPBImpl) this.clientToAMToken).getProto().equals(\n            builder.getClientToAmToken())) {\n      builder.setClientToAmToken(convertToProtoFormat(this.clientToAMToken));\n    }\n    if (this.amRmToken !\u003d null\n      \u0026\u0026 !((TokenPBImpl) this.amRmToken).getProto().equals(\n      builder.getAmRmToken())) {\n      builder.setAmRmToken(convertToProtoFormat(this.amRmToken));\n    }\n    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n      builder.clearApplicationTags();\n      builder.addAllApplicationTags(this.applicationTags);\n    }\n    if (this.priority !\u003d null\n        \u0026\u0026 !((PriorityPBImpl) this.priority).getProto().equals(\n            builder.getPriority())) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java",
      "extendedDetails": {}
    },
    "1141edc424a2975ab48871108e5da4bc3def49f6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2051. Fix bug in PBimpls and add more unit tests with reflection. (Contributed by Binglin Chang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615025 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/07/14 9:16 PM",
      "commitName": "1141edc424a2975ab48871108e5da4bc3def49f6",
      "commitAuthor": "Junping Du",
      "commitDateOld": "04/02/14 8:55 PM",
      "commitNameOld": "ebe0c17a95ae37d4768f2928ea193e89db34ead5",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 176.97,
      "commitsBetweenForRepo": 1245,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null\n         \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n             builder.getApplicationId())) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.currentApplicationAttemptId !\u003d null\n         \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n             builder.getCurrentApplicationAttemptId())) {\n       builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n     }\n     if (this.clientToAMToken !\u003d null\n         \u0026\u0026 !((TokenPBImpl) this.clientToAMToken).getProto().equals(\n             builder.getClientToAmToken())) {\n       builder.setClientToAmToken(convertToProtoFormat(this.clientToAMToken));\n     }\n     if (this.amRmToken !\u003d null\n       \u0026\u0026 !((TokenPBImpl) this.amRmToken).getProto().equals(\n       builder.getAmRmToken())) {\n       builder.setAmRmToken(convertToProtoFormat(this.amRmToken));\n     }\n     if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n+      builder.clearApplicationTags();\n       builder.addAllApplicationTags(this.applicationTags);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null\n        \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n            builder.getApplicationId())) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.currentApplicationAttemptId !\u003d null\n        \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n            builder.getCurrentApplicationAttemptId())) {\n      builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n    }\n    if (this.clientToAMToken !\u003d null\n        \u0026\u0026 !((TokenPBImpl) this.clientToAMToken).getProto().equals(\n            builder.getClientToAmToken())) {\n      builder.setClientToAmToken(convertToProtoFormat(this.clientToAMToken));\n    }\n    if (this.amRmToken !\u003d null\n      \u0026\u0026 !((TokenPBImpl) this.amRmToken).getProto().equals(\n      builder.getAmRmToken())) {\n      builder.setAmRmToken(convertToProtoFormat(this.amRmToken));\n    }\n    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n      builder.clearApplicationTags();\n      builder.addAllApplicationTags(this.applicationTags);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java",
      "extendedDetails": {}
    },
    "ebe0c17a95ae37d4768f2928ea193e89db34ead5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1461. Added tags for YARN applications and changed RM to handle them. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1564633 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/02/14 8:55 PM",
      "commitName": "ebe0c17a95ae37d4768f2928ea193e89db34ead5",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "15/08/13 12:20 AM",
      "commitNameOld": "b776bd46aed2f5b3aa226af36c0081a7d1f69eda",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 173.9,
      "commitsBetweenForRepo": 1061,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null\n         \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n             builder.getApplicationId())) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.currentApplicationAttemptId !\u003d null\n         \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n             builder.getCurrentApplicationAttemptId())) {\n       builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n     }\n     if (this.clientToAMToken !\u003d null\n         \u0026\u0026 !((TokenPBImpl) this.clientToAMToken).getProto().equals(\n             builder.getClientToAmToken())) {\n       builder.setClientToAmToken(convertToProtoFormat(this.clientToAMToken));\n     }\n     if (this.amRmToken !\u003d null\n       \u0026\u0026 !((TokenPBImpl) this.amRmToken).getProto().equals(\n       builder.getAmRmToken())) {\n       builder.setAmRmToken(convertToProtoFormat(this.amRmToken));\n     }\n+    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n+      builder.addAllApplicationTags(this.applicationTags);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null\n        \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n            builder.getApplicationId())) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.currentApplicationAttemptId !\u003d null\n        \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n            builder.getCurrentApplicationAttemptId())) {\n      builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n    }\n    if (this.clientToAMToken !\u003d null\n        \u0026\u0026 !((TokenPBImpl) this.clientToAMToken).getProto().equals(\n            builder.getClientToAmToken())) {\n      builder.setClientToAmToken(convertToProtoFormat(this.clientToAMToken));\n    }\n    if (this.amRmToken !\u003d null\n      \u0026\u0026 !((TokenPBImpl) this.amRmToken).getProto().equals(\n      builder.getAmRmToken())) {\n      builder.setAmRmToken(convertToProtoFormat(this.amRmToken));\n    }\n    if (this.applicationTags !\u003d null \u0026\u0026 !this.applicationTags.isEmpty()) {\n      builder.addAllApplicationTags(this.applicationTags);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java",
      "extendedDetails": {}
    },
    "f179afc68d863ea35f3ce5c06f1690fb7a4e8f02": {
      "type": "Ybodychange",
      "commitMessage": "YARN-937. Fix unmanaged AM in non-secure/secure setup post YARN-701. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1507706 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/07/13 1:04 PM",
      "commitName": "f179afc68d863ea35f3ce5c06f1690fb7a4e8f02",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/06/13 12:36 AM",
      "commitNameOld": "2fd7f2823074cbfbcc083a6f66edff62c7a131f0",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 39.52,
      "commitsBetweenForRepo": 219,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,22 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null\n         \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n             builder.getApplicationId())) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.currentApplicationAttemptId !\u003d null\n         \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n             builder.getCurrentApplicationAttemptId())) {\n       builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n     }\n     if (this.clientToAMToken !\u003d null\n         \u0026\u0026 !((TokenPBImpl) this.clientToAMToken).getProto().equals(\n             builder.getClientToAmToken())) {\n       builder.setClientToAmToken(convertToProtoFormat(this.clientToAMToken));\n     }\n+    if (this.amRmToken !\u003d null\n+      \u0026\u0026 !((TokenPBImpl) this.amRmToken).getProto().equals(\n+      builder.getAmRmToken())) {\n+      builder.setAmRmToken(convertToProtoFormat(this.amRmToken));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null\n        \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n            builder.getApplicationId())) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.currentApplicationAttemptId !\u003d null\n        \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n            builder.getCurrentApplicationAttemptId())) {\n      builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n    }\n    if (this.clientToAMToken !\u003d null\n        \u0026\u0026 !((TokenPBImpl) this.clientToAMToken).getProto().equals(\n            builder.getClientToAmToken())) {\n      builder.setClientToAmToken(convertToProtoFormat(this.clientToAMToken));\n    }\n    if (this.amRmToken !\u003d null\n      \u0026\u0026 !((TokenPBImpl) this.amRmToken).getProto().equals(\n      builder.getAmRmToken())) {\n      builder.setAmRmToken(convertToProtoFormat(this.amRmToken));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java",
      "extendedDetails": {}
    },
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0": {
      "type": "Yfilerename",
      "commitMessage": "YARN-846.  Move pb Impl classes from yarn-api to yarn-common. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494052 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/13 12:36 AM",
      "commitName": "2fd7f2823074cbfbcc083a6f66edff62c7a131f0",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 11:34 PM",
      "commitNameOld": "6451288704922576e75dd1597f5fd0ef09ab4f26",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null\n        \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n            builder.getApplicationId())) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.currentApplicationAttemptId !\u003d null\n        \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n            builder.getCurrentApplicationAttemptId())) {\n      builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n    }\n    if (this.clientToAMToken !\u003d null\n        \u0026\u0026 !((TokenPBImpl) this.clientToAMToken).getProto().equals(\n            builder.getClientToAmToken())) {\n      builder.setClientToAmToken(convertToProtoFormat(this.clientToAMToken));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java"
      }
    },
    "5d1b453b8591d87ffb564857015c26c99fb7437c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-610. ClientToken is no longer set in the environment of the Containers. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493968 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/06/13 4:13 PM",
      "commitName": "5d1b453b8591d87ffb564857015c26c99fb7437c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "01/06/13 2:43 PM",
      "commitNameOld": "a2c42330047bf955a6a585dcddf798920d4c8640",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 16.06,
      "commitsBetweenForRepo": 142,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null\n         \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n             builder.getApplicationId())) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.currentApplicationAttemptId !\u003d null\n         \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n             builder.getCurrentApplicationAttemptId())) {\n       builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n     }\n-    if (this.clientToken !\u003d null\n-        \u0026\u0026 !((TokenPBImpl) this.clientToken).getProto().equals(\n-            builder.getClientToken())) {\n-      builder.setClientToken(convertToProtoFormat(this.clientToken));\n+    if (this.clientToAMToken !\u003d null\n+        \u0026\u0026 !((TokenPBImpl) this.clientToAMToken).getProto().equals(\n+            builder.getClientToAmToken())) {\n+      builder.setClientToAmToken(convertToProtoFormat(this.clientToAMToken));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null\n        \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n            builder.getApplicationId())) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.currentApplicationAttemptId !\u003d null\n        \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n            builder.getCurrentApplicationAttemptId())) {\n      builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n    }\n    if (this.clientToAMToken !\u003d null\n        \u0026\u0026 !((TokenPBImpl) this.clientToAMToken).getProto().equals(\n            builder.getClientToAmToken())) {\n      builder.setClientToAmToken(convertToProtoFormat(this.clientToAMToken));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java",
      "extendedDetails": {}
    },
    "a2c42330047bf955a6a585dcddf798920d4c8640": {
      "type": "Ybodychange",
      "commitMessage": "YARN-717. Put object creation factories for Token in the class itself and remove useless derivations for specific tokens. Contributed by Jian He.\nMAPREDUCE-5289. Updated MR App to use Token directly after YARN-717. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488616 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/06/13 2:43 PM",
      "commitName": "a2c42330047bf955a6a585dcddf798920d4c8640",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "23/05/13 3:47 PM",
      "commitNameOld": "61885df2fa76c589df9751653f94d9b26948dc3e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 8.96,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null\n         \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n             builder.getApplicationId())) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.currentApplicationAttemptId !\u003d null\n         \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n             builder.getCurrentApplicationAttemptId())) {\n       builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n     }\n     if (this.clientToken !\u003d null\n-        \u0026\u0026 !((ClientTokenPBImpl) this.clientToken).getProto().equals(\n+        \u0026\u0026 !((TokenPBImpl) this.clientToken).getProto().equals(\n             builder.getClientToken())) {\n       builder.setClientToken(convertToProtoFormat(this.clientToken));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null\n        \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n            builder.getApplicationId())) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.currentApplicationAttemptId !\u003d null\n        \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n            builder.getCurrentApplicationAttemptId())) {\n      builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n    }\n    if (this.clientToken !\u003d null\n        \u0026\u0026 !((TokenPBImpl) this.clientToken).getProto().equals(\n            builder.getClientToken())) {\n      builder.setClientToken(convertToProtoFormat(this.clientToken));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java",
      "extendedDetails": {}
    },
    "6a2f2551fd13f6d3c932cc9b592e2a23b616a7f5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-135. Client tokens should be per app-attempt, and should be unregistered on App-finish. Contributed by Vinod Kumar Vavilapalli\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1433570 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/01/13 10:33 AM",
      "commitName": "6a2f2551fd13f6d3c932cc9b592e2a23b616a7f5",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 160.55,
      "commitsBetweenForRepo": 867,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,17 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null\n         \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n             builder.getApplicationId())) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n     if (this.currentApplicationAttemptId !\u003d null\n         \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n             builder.getCurrentApplicationAttemptId())) {\n       builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n     }\n+    if (this.clientToken !\u003d null\n+        \u0026\u0026 !((ClientTokenPBImpl) this.clientToken).getProto().equals(\n+            builder.getClientToken())) {\n+      builder.setClientToken(convertToProtoFormat(this.clientToken));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null\n        \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n            builder.getApplicationId())) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.currentApplicationAttemptId !\u003d null\n        \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n            builder.getCurrentApplicationAttemptId())) {\n      builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n    }\n    if (this.clientToken !\u003d null\n        \u0026\u0026 !((ClientTokenPBImpl) this.clientToken).getProto().equals(\n            builder.getClientToken())) {\n      builder.setClientToken(convertToProtoFormat(this.clientToken));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null\n        \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n            builder.getApplicationId())) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.currentApplicationAttemptId !\u003d null\n        \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n            builder.getCurrentApplicationAttemptId())) {\n      builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java"
      }
    },
    "ae6cc14611a5898ed637a2e0f9df559f6c29093e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4427. Added an \u0027unmanaged\u0027 mode for AMs so as to ease development of new applications. Contributed by Bikas Saha.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1361813 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/07/12 2:46 PM",
      "commitName": "ae6cc14611a5898ed637a2e0f9df559f6c29093e",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "25/10/11 11:29 PM",
      "commitNameOld": "8aabd3d4e67cad8dc7e46f5339981135badc7421",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 263.64,
      "commitsBetweenForRepo": 1771,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,12 @@\n   private void mergeLocalToBuilder() {\n     if (this.applicationId !\u003d null\n         \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n             builder.getApplicationId())) {\n       builder.setApplicationId(convertToProtoFormat(this.applicationId));\n     }\n+    if (this.currentApplicationAttemptId !\u003d null\n+        \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n+            builder.getCurrentApplicationAttemptId())) {\n+      builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null\n        \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n            builder.getApplicationId())) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n    if (this.currentApplicationAttemptId !\u003d null\n        \u0026\u0026 !((ApplicationAttemptIdPBImpl) this.currentApplicationAttemptId).getProto().equals(\n            builder.getCurrentApplicationAttemptId())) {\n      builder.setCurrentApplicationAttemptId(convertToProtoFormat(this.currentApplicationAttemptId));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null\n        \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n            builder.getApplicationId())) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,7 @@\n+  private void mergeLocalToBuilder() {\n+    if (this.applicationId !\u003d null\n+        \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n+            builder.getApplicationId())) {\n+      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.applicationId !\u003d null\n        \u0026\u0026 !((ApplicationIdPBImpl) this.applicationId).getProto().equals(\n            builder.getApplicationId())) {\n      builder.setApplicationId(convertToProtoFormat(this.applicationId));\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationReportPBImpl.java"
    }
  }
}