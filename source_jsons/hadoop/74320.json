{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SaslInputStream.java",
  "functionName": "read",
  "functionId": "read___dst-ByteBuffer",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslInputStream.java",
  "functionStartLine": 368,
  "functionEndLine": 384,
  "numCommitsSeen": 5,
  "timeTaken": 1766,
  "changeHistory": [
    "9b4a7900c7dfc0590316eedaa97144f938885651"
  ],
  "changeHistoryShort": {
    "9b4a7900c7dfc0590316eedaa97144f938885651": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9b4a7900c7dfc0590316eedaa97144f938885651": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3637. Add support for encrypting the DataTransferProtocol. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370354 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 9:40 AM",
      "commitName": "9b4a7900c7dfc0590316eedaa97144f938885651",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,17 @@\n+  public int read(ByteBuffer dst) throws IOException {\n+    int bytesRead \u003d 0;\n+    if (dst.hasArray()) {\n+      bytesRead \u003d read(dst.array(), dst.arrayOffset() + dst.position(),\n+          dst.remaining());\n+      if (bytesRead \u003e -1) {\n+        dst.position(dst.position() + bytesRead);\n+      }\n+    } else {\n+      byte[] buf \u003d new byte[dst.remaining()];\n+      bytesRead \u003d read(buf);\n+      if (bytesRead \u003e -1) {\n+        dst.put(buf, 0, bytesRead);\n+      }\n+    }\n+    return bytesRead;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int read(ByteBuffer dst) throws IOException {\n    int bytesRead \u003d 0;\n    if (dst.hasArray()) {\n      bytesRead \u003d read(dst.array(), dst.arrayOffset() + dst.position(),\n          dst.remaining());\n      if (bytesRead \u003e -1) {\n        dst.position(dst.position() + bytesRead);\n      }\n    } else {\n      byte[] buf \u003d new byte[dst.remaining()];\n      bytesRead \u003d read(buf);\n      if (bytesRead \u003e -1) {\n        dst.put(buf, 0, bytesRead);\n      }\n    }\n    return bytesRead;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslInputStream.java"
    }
  }
}