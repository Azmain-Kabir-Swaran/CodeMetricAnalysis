{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineReaderManager.java",
  "functionName": "fillUID",
  "functionId": "fillUID___entityType-TimelineEntityType__entity-TimelineEntity__context-TimelineReaderContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderManager.java",
  "functionStartLine": 95,
  "functionEndLine": 131,
  "numCommitsSeen": 16,
  "timeTaken": 1227,
  "changeHistory": [
    "b2efebdd077ecb7b6ffe7fb8a957dadb0e78290f",
    "18b3a80df7e028dfa0d1fa2d48b9f9ac1401ec54",
    "02a9710a099fc9572122d87dd3e90c78522f5836",
    "9d40d9d34ce3b88e868ae91fcc09377107c094c7"
  ],
  "changeHistoryShort": {
    "b2efebdd077ecb7b6ffe7fb8a957dadb0e78290f": "Ybodychange",
    "18b3a80df7e028dfa0d1fa2d48b9f9ac1401ec54": "Ybodychange",
    "02a9710a099fc9572122d87dd3e90c78522f5836": "Ybodychange",
    "9d40d9d34ce3b88e868ae91fcc09377107c094c7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b2efebdd077ecb7b6ffe7fb8a957dadb0e78290f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6861. Reader API for sub application entities (Rohith Sharma K S via Varun Saxena)\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "b2efebdd077ecb7b6ffe7fb8a957dadb0e78290f",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "18b3a80df7e028dfa0d1fa2d48b9f9ac1401ec54",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,37 @@\n   private static void fillUID(TimelineEntityType entityType,\n       TimelineEntity entity, TimelineReaderContext context) {\n     if (entityType !\u003d null) {\n       switch(entityType) {\n       case YARN_FLOW_ACTIVITY:\n         FlowActivityEntity activityEntity \u003d (FlowActivityEntity)entity;\n         context.setUserId(activityEntity.getUser());\n         context.setFlowName(activityEntity.getFlowName());\n         entity.setUID(TimelineReaderUtils.UID_KEY,\n             TimelineUIDConverter.FLOW_UID.encodeUID(context));\n         return;\n       case YARN_FLOW_RUN:\n         FlowRunEntity runEntity \u003d (FlowRunEntity)entity;\n         context.setFlowRunId(runEntity.getRunId());\n         entity.setUID(TimelineReaderUtils.UID_KEY,\n             TimelineUIDConverter.FLOWRUN_UID.encodeUID(context));\n         return;\n       case YARN_APPLICATION:\n         context.setAppId(entity.getId());\n         entity.setUID(TimelineReaderUtils.UID_KEY,\n             TimelineUIDConverter.APPLICATION_UID.encodeUID(context));\n         return;\n       default:\n         break;\n       }\n     }\n     context.setEntityType(entity.getType());\n     context.setEntityIdPrefix(entity.getIdPrefix());\n     context.setEntityId(entity.getId());\n-    entity.setUID(TimelineReaderUtils.UID_KEY,\n-        TimelineUIDConverter.GENERIC_ENTITY_UID.encodeUID(context));\n+    if (context.getDoAsUser() !\u003d null) {\n+      entity.setUID(TimelineReaderUtils.UID_KEY,\n+          TimelineUIDConverter.SUB_APPLICATION_ENTITY_UID.encodeUID(context));\n+    } else {\n+      entity.setUID(TimelineReaderUtils.UID_KEY,\n+          TimelineUIDConverter.GENERIC_ENTITY_UID.encodeUID(context));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void fillUID(TimelineEntityType entityType,\n      TimelineEntity entity, TimelineReaderContext context) {\n    if (entityType !\u003d null) {\n      switch(entityType) {\n      case YARN_FLOW_ACTIVITY:\n        FlowActivityEntity activityEntity \u003d (FlowActivityEntity)entity;\n        context.setUserId(activityEntity.getUser());\n        context.setFlowName(activityEntity.getFlowName());\n        entity.setUID(TimelineReaderUtils.UID_KEY,\n            TimelineUIDConverter.FLOW_UID.encodeUID(context));\n        return;\n      case YARN_FLOW_RUN:\n        FlowRunEntity runEntity \u003d (FlowRunEntity)entity;\n        context.setFlowRunId(runEntity.getRunId());\n        entity.setUID(TimelineReaderUtils.UID_KEY,\n            TimelineUIDConverter.FLOWRUN_UID.encodeUID(context));\n        return;\n      case YARN_APPLICATION:\n        context.setAppId(entity.getId());\n        entity.setUID(TimelineReaderUtils.UID_KEY,\n            TimelineUIDConverter.APPLICATION_UID.encodeUID(context));\n        return;\n      default:\n        break;\n      }\n    }\n    context.setEntityType(entity.getType());\n    context.setEntityIdPrefix(entity.getIdPrefix());\n    context.setEntityId(entity.getId());\n    if (context.getDoAsUser() !\u003d null) {\n      entity.setUID(TimelineReaderUtils.UID_KEY,\n          TimelineUIDConverter.SUB_APPLICATION_ENTITY_UID.encodeUID(context));\n    } else {\n      entity.setUID(TimelineReaderUtils.UID_KEY,\n          TimelineUIDConverter.GENERIC_ENTITY_UID.encodeUID(context));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderManager.java",
      "extendedDetails": {}
    },
    "18b3a80df7e028dfa0d1fa2d48b9f9ac1401ec54": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6237. Move UID constant to TimelineReaderUtils (Rohith Sharma K S via Varun Saxena)\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "18b3a80df7e028dfa0d1fa2d48b9f9ac1401ec54",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "02a9710a099fc9572122d87dd3e90c78522f5836",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   private static void fillUID(TimelineEntityType entityType,\n       TimelineEntity entity, TimelineReaderContext context) {\n     if (entityType !\u003d null) {\n       switch(entityType) {\n       case YARN_FLOW_ACTIVITY:\n         FlowActivityEntity activityEntity \u003d (FlowActivityEntity)entity;\n         context.setUserId(activityEntity.getUser());\n         context.setFlowName(activityEntity.getFlowName());\n-        entity.setUID(UID_KEY,\n+        entity.setUID(TimelineReaderUtils.UID_KEY,\n             TimelineUIDConverter.FLOW_UID.encodeUID(context));\n         return;\n       case YARN_FLOW_RUN:\n         FlowRunEntity runEntity \u003d (FlowRunEntity)entity;\n         context.setFlowRunId(runEntity.getRunId());\n-        entity.setUID(UID_KEY,\n+        entity.setUID(TimelineReaderUtils.UID_KEY,\n             TimelineUIDConverter.FLOWRUN_UID.encodeUID(context));\n         return;\n       case YARN_APPLICATION:\n         context.setAppId(entity.getId());\n-        entity.setUID(UID_KEY,\n+        entity.setUID(TimelineReaderUtils.UID_KEY,\n             TimelineUIDConverter.APPLICATION_UID.encodeUID(context));\n         return;\n       default:\n         break;\n       }\n     }\n     context.setEntityType(entity.getType());\n     context.setEntityIdPrefix(entity.getIdPrefix());\n     context.setEntityId(entity.getId());\n-    entity.setUID(UID_KEY,\n+    entity.setUID(TimelineReaderUtils.UID_KEY,\n         TimelineUIDConverter.GENERIC_ENTITY_UID.encodeUID(context));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void fillUID(TimelineEntityType entityType,\n      TimelineEntity entity, TimelineReaderContext context) {\n    if (entityType !\u003d null) {\n      switch(entityType) {\n      case YARN_FLOW_ACTIVITY:\n        FlowActivityEntity activityEntity \u003d (FlowActivityEntity)entity;\n        context.setUserId(activityEntity.getUser());\n        context.setFlowName(activityEntity.getFlowName());\n        entity.setUID(TimelineReaderUtils.UID_KEY,\n            TimelineUIDConverter.FLOW_UID.encodeUID(context));\n        return;\n      case YARN_FLOW_RUN:\n        FlowRunEntity runEntity \u003d (FlowRunEntity)entity;\n        context.setFlowRunId(runEntity.getRunId());\n        entity.setUID(TimelineReaderUtils.UID_KEY,\n            TimelineUIDConverter.FLOWRUN_UID.encodeUID(context));\n        return;\n      case YARN_APPLICATION:\n        context.setAppId(entity.getId());\n        entity.setUID(TimelineReaderUtils.UID_KEY,\n            TimelineUIDConverter.APPLICATION_UID.encodeUID(context));\n        return;\n      default:\n        break;\n      }\n    }\n    context.setEntityType(entity.getType());\n    context.setEntityIdPrefix(entity.getIdPrefix());\n    context.setEntityId(entity.getId());\n    entity.setUID(TimelineReaderUtils.UID_KEY,\n        TimelineUIDConverter.GENERIC_ENTITY_UID.encodeUID(context));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderManager.java",
      "extendedDetails": {}
    },
    "02a9710a099fc9572122d87dd3e90c78522f5836": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5585. [Atsv2] Reader side changes for entity prefix and support for pagination via additional filters (Rohith Sharma K S via Varun Saxena)\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "02a9710a099fc9572122d87dd3e90c78522f5836",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "4481561e4a3433197dd8e73f38856eef84f0fd03",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,32 @@\n   private static void fillUID(TimelineEntityType entityType,\n       TimelineEntity entity, TimelineReaderContext context) {\n     if (entityType !\u003d null) {\n       switch(entityType) {\n       case YARN_FLOW_ACTIVITY:\n         FlowActivityEntity activityEntity \u003d (FlowActivityEntity)entity;\n         context.setUserId(activityEntity.getUser());\n         context.setFlowName(activityEntity.getFlowName());\n         entity.setUID(UID_KEY,\n             TimelineUIDConverter.FLOW_UID.encodeUID(context));\n         return;\n       case YARN_FLOW_RUN:\n         FlowRunEntity runEntity \u003d (FlowRunEntity)entity;\n         context.setFlowRunId(runEntity.getRunId());\n         entity.setUID(UID_KEY,\n             TimelineUIDConverter.FLOWRUN_UID.encodeUID(context));\n         return;\n       case YARN_APPLICATION:\n         context.setAppId(entity.getId());\n         entity.setUID(UID_KEY,\n             TimelineUIDConverter.APPLICATION_UID.encodeUID(context));\n         return;\n       default:\n         break;\n       }\n     }\n     context.setEntityType(entity.getType());\n+    context.setEntityIdPrefix(entity.getIdPrefix());\n     context.setEntityId(entity.getId());\n     entity.setUID(UID_KEY,\n         TimelineUIDConverter.GENERIC_ENTITY_UID.encodeUID(context));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void fillUID(TimelineEntityType entityType,\n      TimelineEntity entity, TimelineReaderContext context) {\n    if (entityType !\u003d null) {\n      switch(entityType) {\n      case YARN_FLOW_ACTIVITY:\n        FlowActivityEntity activityEntity \u003d (FlowActivityEntity)entity;\n        context.setUserId(activityEntity.getUser());\n        context.setFlowName(activityEntity.getFlowName());\n        entity.setUID(UID_KEY,\n            TimelineUIDConverter.FLOW_UID.encodeUID(context));\n        return;\n      case YARN_FLOW_RUN:\n        FlowRunEntity runEntity \u003d (FlowRunEntity)entity;\n        context.setFlowRunId(runEntity.getRunId());\n        entity.setUID(UID_KEY,\n            TimelineUIDConverter.FLOWRUN_UID.encodeUID(context));\n        return;\n      case YARN_APPLICATION:\n        context.setAppId(entity.getId());\n        entity.setUID(UID_KEY,\n            TimelineUIDConverter.APPLICATION_UID.encodeUID(context));\n        return;\n      default:\n        break;\n      }\n    }\n    context.setEntityType(entity.getType());\n    context.setEntityIdPrefix(entity.getIdPrefix());\n    context.setEntityId(entity.getId());\n    entity.setUID(UID_KEY,\n        TimelineUIDConverter.GENERIC_ENTITY_UID.encodeUID(context));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderManager.java",
      "extendedDetails": {}
    },
    "9d40d9d34ce3b88e868ae91fcc09377107c094c7": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4224. Support fetching entities by UID and change the REST\ninterface to conform to current REST APIs\u0027 in YARN. (Varun Saxena via\ngtcarrera9)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9d40d9d34ce3b88e868ae91fcc09377107c094c7",
      "commitAuthor": "Li Lu",
      "diff": "@@ -0,0 +1,31 @@\n+  private static void fillUID(TimelineEntityType entityType,\n+      TimelineEntity entity, TimelineReaderContext context) {\n+    if (entityType !\u003d null) {\n+      switch(entityType) {\n+      case YARN_FLOW_ACTIVITY:\n+        FlowActivityEntity activityEntity \u003d (FlowActivityEntity)entity;\n+        context.setUserId(activityEntity.getUser());\n+        context.setFlowName(activityEntity.getFlowName());\n+        entity.setUID(UID_KEY,\n+            TimelineUIDConverter.FLOW_UID.encodeUID(context));\n+        return;\n+      case YARN_FLOW_RUN:\n+        FlowRunEntity runEntity \u003d (FlowRunEntity)entity;\n+        context.setFlowRunId(runEntity.getRunId());\n+        entity.setUID(UID_KEY,\n+            TimelineUIDConverter.FLOWRUN_UID.encodeUID(context));\n+        return;\n+      case YARN_APPLICATION:\n+        context.setAppId(entity.getId());\n+        entity.setUID(UID_KEY,\n+            TimelineUIDConverter.APPLICATION_UID.encodeUID(context));\n+        return;\n+      default:\n+        break;\n+      }\n+    }\n+    context.setEntityType(entity.getType());\n+    context.setEntityId(entity.getId());\n+    entity.setUID(UID_KEY,\n+        TimelineUIDConverter.GENERIC_ENTITY_UID.encodeUID(context));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void fillUID(TimelineEntityType entityType,\n      TimelineEntity entity, TimelineReaderContext context) {\n    if (entityType !\u003d null) {\n      switch(entityType) {\n      case YARN_FLOW_ACTIVITY:\n        FlowActivityEntity activityEntity \u003d (FlowActivityEntity)entity;\n        context.setUserId(activityEntity.getUser());\n        context.setFlowName(activityEntity.getFlowName());\n        entity.setUID(UID_KEY,\n            TimelineUIDConverter.FLOW_UID.encodeUID(context));\n        return;\n      case YARN_FLOW_RUN:\n        FlowRunEntity runEntity \u003d (FlowRunEntity)entity;\n        context.setFlowRunId(runEntity.getRunId());\n        entity.setUID(UID_KEY,\n            TimelineUIDConverter.FLOWRUN_UID.encodeUID(context));\n        return;\n      case YARN_APPLICATION:\n        context.setAppId(entity.getId());\n        entity.setUID(UID_KEY,\n            TimelineUIDConverter.APPLICATION_UID.encodeUID(context));\n        return;\n      default:\n        break;\n      }\n    }\n    context.setEntityType(entity.getType());\n    context.setEntityId(entity.getId());\n    entity.setUID(UID_KEY,\n        TimelineUIDConverter.GENERIC_ENTITY_UID.encodeUID(context));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderManager.java"
    }
  }
}