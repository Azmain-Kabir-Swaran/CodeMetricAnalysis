{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedFileSystem.java",
  "functionName": "getErasureCodingPolicy",
  "functionId": "getErasureCodingPolicy___path-Path(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
  "functionStartLine": 3086,
  "functionEndLine": 3109,
  "numCommitsSeen": 96,
  "timeTaken": 3882,
  "changeHistory": [
    "f534736867eed962899615ca1b7eb68bcf591d17",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93"
  ],
  "changeHistoryShort": {
    "f534736867eed962899615ca1b7eb68bcf591d17": "Ybodychange",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": "Ybodychange"
  },
  "changeHistoryDetails": {
    "f534736867eed962899615ca1b7eb68bcf591d17": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14095. EC: Track Erasure Coding commands in DFS statistics. Contributed by Ayush Saxena.\n",
      "commitDate": "29/11/18 10:48 AM",
      "commitName": "f534736867eed962899615ca1b7eb68bcf591d17",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "15/10/18 10:51 AM",
      "commitNameOld": "b6fc72a0250ac3f2341ebe8a14d19b073e6224c8",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 45.04,
      "commitsBetweenForRepo": 367,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,24 @@\n   public ErasureCodingPolicy getErasureCodingPolicy(final Path path)\n       throws IOException {\n+    statistics.incrementReadOps(1);\n+    storageStatistics.incrementOpCounter(OpType.GET_EC_POLICY);\n     Path absF \u003d fixRelativePart(path);\n     return new FileSystemLinkResolver\u003cErasureCodingPolicy\u003e() {\n       @Override\n       public ErasureCodingPolicy doCall(final Path p) throws IOException {\n         return dfs.getErasureCodingPolicy(getPathName(p));\n       }\n \n       @Override\n       public ErasureCodingPolicy next(final FileSystem fs, final Path p)\n           throws IOException {\n         if (fs instanceof DistributedFileSystem) {\n           DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n           return myDfs.getErasureCodingPolicy(p);\n         }\n         throw new UnsupportedOperationException(\n             \"Cannot getErasureCodingPolicy through a symlink to a \"\n                 + \"non-DistributedFileSystem: \" + path + \" -\u003e \" + p);\n       }\n     }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ErasureCodingPolicy getErasureCodingPolicy(final Path path)\n      throws IOException {\n    statistics.incrementReadOps(1);\n    storageStatistics.incrementOpCounter(OpType.GET_EC_POLICY);\n    Path absF \u003d fixRelativePart(path);\n    return new FileSystemLinkResolver\u003cErasureCodingPolicy\u003e() {\n      @Override\n      public ErasureCodingPolicy doCall(final Path p) throws IOException {\n        return dfs.getErasureCodingPolicy(getPathName(p));\n      }\n\n      @Override\n      public ErasureCodingPolicy next(final FileSystem fs, final Path p)\n          throws IOException {\n        if (fs instanceof DistributedFileSystem) {\n          DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n          return myDfs.getErasureCodingPolicy(p);\n        }\n        throw new UnsupportedOperationException(\n            \"Cannot getErasureCodingPolicy through a symlink to a \"\n                + \"non-DistributedFileSystem: \" + path + \" -\u003e \" + p);\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "03/10/15 11:38 AM",
      "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/09/15 1:39 AM",
      "commitNameOld": "8fd55202468b28422b0df888641c9b08906fe4a7",
      "commitAuthorOld": "",
      "daysBetweenCommits": 4.42,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n   public ErasureCodingPolicy getErasureCodingPolicy(final Path path)\n       throws IOException {\n     Path absF \u003d fixRelativePart(path);\n     return new FileSystemLinkResolver\u003cErasureCodingPolicy\u003e() {\n       @Override\n-      public ErasureCodingPolicy doCall(final Path p) throws IOException,\n-          UnresolvedLinkException {\n+      public ErasureCodingPolicy doCall(final Path p) throws IOException {\n         return dfs.getErasureCodingPolicy(getPathName(p));\n       }\n \n       @Override\n       public ErasureCodingPolicy next(final FileSystem fs, final Path p)\n           throws IOException {\n         if (fs instanceof DistributedFileSystem) {\n           DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n           return myDfs.getErasureCodingPolicy(p);\n         }\n         throw new UnsupportedOperationException(\n             \"Cannot getErasureCodingPolicy through a symlink to a \"\n                 + \"non-DistributedFileSystem: \" + path + \" -\u003e \" + p);\n       }\n     }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ErasureCodingPolicy getErasureCodingPolicy(final Path path)\n      throws IOException {\n    Path absF \u003d fixRelativePart(path);\n    return new FileSystemLinkResolver\u003cErasureCodingPolicy\u003e() {\n      @Override\n      public ErasureCodingPolicy doCall(final Path p) throws IOException {\n        return dfs.getErasureCodingPolicy(getPathName(p));\n      }\n\n      @Override\n      public ErasureCodingPolicy next(final FileSystem fs, final Path p)\n          throws IOException {\n        if (fs instanceof DistributedFileSystem) {\n          DistributedFileSystem myDfs \u003d (DistributedFileSystem) fs;\n          return myDfs.getErasureCodingPolicy(p);\n        }\n        throw new UnsupportedOperationException(\n            \"Cannot getErasureCodingPolicy through a symlink to a \"\n                + \"non-DistributedFileSystem: \" + path + \" -\u003e \" + p);\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    }
  }
}