{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JournalNode.java",
  "functionName": "getOrCreateJournal",
  "functionId": "getOrCreateJournal___jid-String__nameServiceId-String__startOpt-StartupOption",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JournalNode.java",
  "functionStartLine": 96,
  "functionEndLine": 123,
  "numCommitsSeen": 73,
  "timeTaken": 3923,
  "changeHistory": [
    "dd50f53997239bf9078481cf46592ca3e41520b5",
    "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
    "13d4bcfe3535a2df79c2a56e7578716d15497ff4",
    "56205ca7d7f3b2a7e55f48b9cf444326e1d2b1a7",
    "cb11d68f409b7dabfc1f31c43f026a905810ed01",
    "13daca1ef6aa4a24ff9a840397dda1bbddb16e37",
    "b17018e4b821ec860144d8bd38bc1fcb0d7eeaa5",
    "74d4573a23db5586c6e47ff2277aa7c35237da34"
  ],
  "changeHistoryShort": {
    "dd50f53997239bf9078481cf46592ca3e41520b5": "Ybodychange",
    "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34": "Ymultichange(Yparameterchange,Ybodychange)",
    "13d4bcfe3535a2df79c2a56e7578716d15497ff4": "Ybodychange",
    "56205ca7d7f3b2a7e55f48b9cf444326e1d2b1a7": "Ymultichange(Yparameterchange,Ybodychange)",
    "cb11d68f409b7dabfc1f31c43f026a905810ed01": "Ybodychange",
    "13daca1ef6aa4a24ff9a840397dda1bbddb16e37": "Ybodychange",
    "b17018e4b821ec860144d8bd38bc1fcb0d7eeaa5": "Yexceptionschange",
    "74d4573a23db5586c6e47ff2277aa7c35237da34": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dd50f53997239bf9078481cf46592ca3e41520b5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13062. Provide support for JN to use separate journal disk per namespace. Contributed by Bharat Viswanadham.\n",
      "commitDate": "01/02/18 12:28 PM",
      "commitName": "dd50f53997239bf9078481cf46592ca3e41520b5",
      "commitAuthor": "Hanisha Koneru",
      "commitDateOld": "13/10/17 2:22 PM",
      "commitNameOld": "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 110.96,
      "commitsBetweenForRepo": 747,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,28 @@\n   synchronized Journal getOrCreateJournal(String jid,\n                                           String nameServiceId,\n                                           StartupOption startOpt)\n       throws IOException {\n     QuorumJournalManager.checkJournalId(jid);\n     \n     Journal journal \u003d journalsById.get(jid);\n     if (journal \u003d\u003d null) {\n-      File logDir \u003d getLogDir(jid);\n-      LOG.info(\"Initializing journal in directory \" + logDir);      \n+      File logDir \u003d getLogDir(jid, nameServiceId);\n+      LOG.info(\"Initializing journal in directory \" + logDir);\n       journal \u003d new Journal(conf, logDir, jid, startOpt, new ErrorReporter());\n       journalsById.put(jid, journal);\n-\n       // Start SyncJouranl thread, if JournalNode Sync is enabled\n       if (conf.getBoolean(\n           DFSConfigKeys.DFS_JOURNALNODE_ENABLE_SYNC_KEY,\n           DFSConfigKeys.DFS_JOURNALNODE_ENABLE_SYNC_DEFAULT)) {\n         startSyncer(journal, jid, nameServiceId);\n       }\n     } else if (journalSyncersById.get(jid) !\u003d null \u0026\u0026\n         !journalSyncersById.get(jid).isJournalSyncerStarted() \u0026\u0026\n         !journalsById.get(jid).getTriedJournalSyncerStartedwithnsId() \u0026\u0026\n         nameServiceId !\u003d null) {\n       startSyncer(journal, jid, nameServiceId);\n     }\n \n \n     return journal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized Journal getOrCreateJournal(String jid,\n                                          String nameServiceId,\n                                          StartupOption startOpt)\n      throws IOException {\n    QuorumJournalManager.checkJournalId(jid);\n    \n    Journal journal \u003d journalsById.get(jid);\n    if (journal \u003d\u003d null) {\n      File logDir \u003d getLogDir(jid, nameServiceId);\n      LOG.info(\"Initializing journal in directory \" + logDir);\n      journal \u003d new Journal(conf, logDir, jid, startOpt, new ErrorReporter());\n      journalsById.put(jid, journal);\n      // Start SyncJouranl thread, if JournalNode Sync is enabled\n      if (conf.getBoolean(\n          DFSConfigKeys.DFS_JOURNALNODE_ENABLE_SYNC_KEY,\n          DFSConfigKeys.DFS_JOURNALNODE_ENABLE_SYNC_DEFAULT)) {\n        startSyncer(journal, jid, nameServiceId);\n      }\n    } else if (journalSyncersById.get(jid) !\u003d null \u0026\u0026\n        !journalSyncersById.get(jid).isJournalSyncerStarted() \u0026\u0026\n        !journalsById.get(jid).getTriedJournalSyncerStartedwithnsId() \u0026\u0026\n        nameServiceId !\u003d null) {\n      startSyncer(journal, jid, nameServiceId);\n    }\n\n\n    return journal;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JournalNode.java",
      "extendedDetails": {}
    },
    "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-12553. Add nameServiceId to QJournalProtocol. Contributed by Bharat Viswanadham\n",
      "commitDate": "13/10/17 2:22 PM",
      "commitName": "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-12553. Add nameServiceId to QJournalProtocol. Contributed by Bharat Viswanadham\n",
          "commitDate": "13/10/17 2:22 PM",
          "commitName": "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "12/09/17 4:18 PM",
          "commitNameOld": "68282c8eacfedb0298741e6c41ff0b2ec71b018c",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 30.92,
          "commitsBetweenForRepo": 264,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,29 @@\n-  synchronized Journal getOrCreateJournal(String jid, StartupOption startOpt)\n+  synchronized Journal getOrCreateJournal(String jid,\n+                                          String nameServiceId,\n+                                          StartupOption startOpt)\n       throws IOException {\n     QuorumJournalManager.checkJournalId(jid);\n     \n     Journal journal \u003d journalsById.get(jid);\n     if (journal \u003d\u003d null) {\n       File logDir \u003d getLogDir(jid);\n       LOG.info(\"Initializing journal in directory \" + logDir);      \n       journal \u003d new Journal(conf, logDir, jid, startOpt, new ErrorReporter());\n       journalsById.put(jid, journal);\n \n       // Start SyncJouranl thread, if JournalNode Sync is enabled\n       if (conf.getBoolean(\n           DFSConfigKeys.DFS_JOURNALNODE_ENABLE_SYNC_KEY,\n           DFSConfigKeys.DFS_JOURNALNODE_ENABLE_SYNC_DEFAULT)) {\n-        startSyncer(journal, jid);\n+        startSyncer(journal, jid, nameServiceId);\n       }\n+    } else if (journalSyncersById.get(jid) !\u003d null \u0026\u0026\n+        !journalSyncersById.get(jid).isJournalSyncerStarted() \u0026\u0026\n+        !journalsById.get(jid).getTriedJournalSyncerStartedwithnsId() \u0026\u0026\n+        nameServiceId !\u003d null) {\n+      startSyncer(journal, jid, nameServiceId);\n     }\n \n+\n     return journal;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized Journal getOrCreateJournal(String jid,\n                                          String nameServiceId,\n                                          StartupOption startOpt)\n      throws IOException {\n    QuorumJournalManager.checkJournalId(jid);\n    \n    Journal journal \u003d journalsById.get(jid);\n    if (journal \u003d\u003d null) {\n      File logDir \u003d getLogDir(jid);\n      LOG.info(\"Initializing journal in directory \" + logDir);      \n      journal \u003d new Journal(conf, logDir, jid, startOpt, new ErrorReporter());\n      journalsById.put(jid, journal);\n\n      // Start SyncJouranl thread, if JournalNode Sync is enabled\n      if (conf.getBoolean(\n          DFSConfigKeys.DFS_JOURNALNODE_ENABLE_SYNC_KEY,\n          DFSConfigKeys.DFS_JOURNALNODE_ENABLE_SYNC_DEFAULT)) {\n        startSyncer(journal, jid, nameServiceId);\n      }\n    } else if (journalSyncersById.get(jid) !\u003d null \u0026\u0026\n        !journalSyncersById.get(jid).isJournalSyncerStarted() \u0026\u0026\n        !journalsById.get(jid).getTriedJournalSyncerStartedwithnsId() \u0026\u0026\n        nameServiceId !\u003d null) {\n      startSyncer(journal, jid, nameServiceId);\n    }\n\n\n    return journal;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JournalNode.java",
          "extendedDetails": {
            "oldValue": "[jid-String, startOpt-StartupOption]",
            "newValue": "[jid-String, nameServiceId-String, startOpt-StartupOption]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12553. Add nameServiceId to QJournalProtocol. Contributed by Bharat Viswanadham\n",
          "commitDate": "13/10/17 2:22 PM",
          "commitName": "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "12/09/17 4:18 PM",
          "commitNameOld": "68282c8eacfedb0298741e6c41ff0b2ec71b018c",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 30.92,
          "commitsBetweenForRepo": 264,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,29 @@\n-  synchronized Journal getOrCreateJournal(String jid, StartupOption startOpt)\n+  synchronized Journal getOrCreateJournal(String jid,\n+                                          String nameServiceId,\n+                                          StartupOption startOpt)\n       throws IOException {\n     QuorumJournalManager.checkJournalId(jid);\n     \n     Journal journal \u003d journalsById.get(jid);\n     if (journal \u003d\u003d null) {\n       File logDir \u003d getLogDir(jid);\n       LOG.info(\"Initializing journal in directory \" + logDir);      \n       journal \u003d new Journal(conf, logDir, jid, startOpt, new ErrorReporter());\n       journalsById.put(jid, journal);\n \n       // Start SyncJouranl thread, if JournalNode Sync is enabled\n       if (conf.getBoolean(\n           DFSConfigKeys.DFS_JOURNALNODE_ENABLE_SYNC_KEY,\n           DFSConfigKeys.DFS_JOURNALNODE_ENABLE_SYNC_DEFAULT)) {\n-        startSyncer(journal, jid);\n+        startSyncer(journal, jid, nameServiceId);\n       }\n+    } else if (journalSyncersById.get(jid) !\u003d null \u0026\u0026\n+        !journalSyncersById.get(jid).isJournalSyncerStarted() \u0026\u0026\n+        !journalsById.get(jid).getTriedJournalSyncerStartedwithnsId() \u0026\u0026\n+        nameServiceId !\u003d null) {\n+      startSyncer(journal, jid, nameServiceId);\n     }\n \n+\n     return journal;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized Journal getOrCreateJournal(String jid,\n                                          String nameServiceId,\n                                          StartupOption startOpt)\n      throws IOException {\n    QuorumJournalManager.checkJournalId(jid);\n    \n    Journal journal \u003d journalsById.get(jid);\n    if (journal \u003d\u003d null) {\n      File logDir \u003d getLogDir(jid);\n      LOG.info(\"Initializing journal in directory \" + logDir);      \n      journal \u003d new Journal(conf, logDir, jid, startOpt, new ErrorReporter());\n      journalsById.put(jid, journal);\n\n      // Start SyncJouranl thread, if JournalNode Sync is enabled\n      if (conf.getBoolean(\n          DFSConfigKeys.DFS_JOURNALNODE_ENABLE_SYNC_KEY,\n          DFSConfigKeys.DFS_JOURNALNODE_ENABLE_SYNC_DEFAULT)) {\n        startSyncer(journal, jid, nameServiceId);\n      }\n    } else if (journalSyncersById.get(jid) !\u003d null \u0026\u0026\n        !journalSyncersById.get(jid).isJournalSyncerStarted() \u0026\u0026\n        !journalsById.get(jid).getTriedJournalSyncerStartedwithnsId() \u0026\u0026\n        nameServiceId !\u003d null) {\n      startSyncer(journal, jid, nameServiceId);\n    }\n\n\n    return journal;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JournalNode.java",
          "extendedDetails": {}
        }
      ]
    },
    "13d4bcfe3535a2df79c2a56e7578716d15497ff4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4025. QJM: Sychronize past log segments to JNs that missed them. Contributed by Hanisha Koneru.\n",
      "commitDate": "22/02/17 4:33 PM",
      "commitName": "13d4bcfe3535a2df79c2a56e7578716d15497ff4",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "27/10/16 4:09 PM",
      "commitNameOld": "5877f20f9c3f6f0afa505715e9a2ee312475af17",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 118.06,
      "commitsBetweenForRepo": 673,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,21 @@\n   synchronized Journal getOrCreateJournal(String jid, StartupOption startOpt)\n       throws IOException {\n     QuorumJournalManager.checkJournalId(jid);\n     \n     Journal journal \u003d journalsById.get(jid);\n     if (journal \u003d\u003d null) {\n       File logDir \u003d getLogDir(jid);\n       LOG.info(\"Initializing journal in directory \" + logDir);      \n       journal \u003d new Journal(conf, logDir, jid, startOpt, new ErrorReporter());\n       journalsById.put(jid, journal);\n+\n+      // Start SyncJouranl thread, if JournalNode Sync is enabled\n+      if (conf.getBoolean(\n+          DFSConfigKeys.DFS_JOURNALNODE_ENABLE_SYNC_KEY,\n+          DFSConfigKeys.DFS_JOURNALNODE_ENABLE_SYNC_DEFAULT)) {\n+        startSyncer(journal, jid);\n+      }\n     }\n-    \n+\n     return journal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized Journal getOrCreateJournal(String jid, StartupOption startOpt)\n      throws IOException {\n    QuorumJournalManager.checkJournalId(jid);\n    \n    Journal journal \u003d journalsById.get(jid);\n    if (journal \u003d\u003d null) {\n      File logDir \u003d getLogDir(jid);\n      LOG.info(\"Initializing journal in directory \" + logDir);      \n      journal \u003d new Journal(conf, logDir, jid, startOpt, new ErrorReporter());\n      journalsById.put(jid, journal);\n\n      // Start SyncJouranl thread, if JournalNode Sync is enabled\n      if (conf.getBoolean(\n          DFSConfigKeys.DFS_JOURNALNODE_ENABLE_SYNC_KEY,\n          DFSConfigKeys.DFS_JOURNALNODE_ENABLE_SYNC_DEFAULT)) {\n        startSyncer(journal, jid);\n      }\n    }\n\n    return journal;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JournalNode.java",
      "extendedDetails": {}
    },
    "56205ca7d7f3b2a7e55f48b9cf444326e1d2b1a7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5840. Follow-up to HDFS-5138 to improve error handling during partial upgrade failures. Contributed by Aaron T. Myers, Suresh Srinivas, and Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1581260 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/03/14 11:48 PM",
      "commitName": "56205ca7d7f3b2a7e55f48b9cf444326e1d2b1a7",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5840. Follow-up to HDFS-5138 to improve error handling during partial upgrade failures. Contributed by Aaron T. Myers, Suresh Srinivas, and Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1581260 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/03/14 11:48 PM",
          "commitName": "56205ca7d7f3b2a7e55f48b9cf444326e1d2b1a7",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "24/03/14 4:32 PM",
          "commitNameOld": "c2ef7e239eb0e81cf8a3e971378e9e696202de67",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.3,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  synchronized Journal getOrCreateJournal(String jid) throws IOException {\n+  synchronized Journal getOrCreateJournal(String jid, StartupOption startOpt)\n+      throws IOException {\n     QuorumJournalManager.checkJournalId(jid);\n     \n     Journal journal \u003d journalsById.get(jid);\n     if (journal \u003d\u003d null) {\n       File logDir \u003d getLogDir(jid);\n       LOG.info(\"Initializing journal in directory \" + logDir);      \n-      journal \u003d new Journal(conf, logDir, jid, new ErrorReporter());\n+      journal \u003d new Journal(conf, logDir, jid, startOpt, new ErrorReporter());\n       journalsById.put(jid, journal);\n     }\n     \n     return journal;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized Journal getOrCreateJournal(String jid, StartupOption startOpt)\n      throws IOException {\n    QuorumJournalManager.checkJournalId(jid);\n    \n    Journal journal \u003d journalsById.get(jid);\n    if (journal \u003d\u003d null) {\n      File logDir \u003d getLogDir(jid);\n      LOG.info(\"Initializing journal in directory \" + logDir);      \n      journal \u003d new Journal(conf, logDir, jid, startOpt, new ErrorReporter());\n      journalsById.put(jid, journal);\n    }\n    \n    return journal;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JournalNode.java",
          "extendedDetails": {
            "oldValue": "[jid-String]",
            "newValue": "[jid-String, startOpt-StartupOption]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5840. Follow-up to HDFS-5138 to improve error handling during partial upgrade failures. Contributed by Aaron T. Myers, Suresh Srinivas, and Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1581260 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/03/14 11:48 PM",
          "commitName": "56205ca7d7f3b2a7e55f48b9cf444326e1d2b1a7",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "24/03/14 4:32 PM",
          "commitNameOld": "c2ef7e239eb0e81cf8a3e971378e9e696202de67",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.3,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  synchronized Journal getOrCreateJournal(String jid) throws IOException {\n+  synchronized Journal getOrCreateJournal(String jid, StartupOption startOpt)\n+      throws IOException {\n     QuorumJournalManager.checkJournalId(jid);\n     \n     Journal journal \u003d journalsById.get(jid);\n     if (journal \u003d\u003d null) {\n       File logDir \u003d getLogDir(jid);\n       LOG.info(\"Initializing journal in directory \" + logDir);      \n-      journal \u003d new Journal(conf, logDir, jid, new ErrorReporter());\n+      journal \u003d new Journal(conf, logDir, jid, startOpt, new ErrorReporter());\n       journalsById.put(jid, journal);\n     }\n     \n     return journal;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized Journal getOrCreateJournal(String jid, StartupOption startOpt)\n      throws IOException {\n    QuorumJournalManager.checkJournalId(jid);\n    \n    Journal journal \u003d journalsById.get(jid);\n    if (journal \u003d\u003d null) {\n      File logDir \u003d getLogDir(jid);\n      LOG.info(\"Initializing journal in directory \" + logDir);      \n      journal \u003d new Journal(conf, logDir, jid, startOpt, new ErrorReporter());\n      journalsById.put(jid, journal);\n    }\n    \n    return journal;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JournalNode.java",
          "extendedDetails": {}
        }
      ]
    },
    "cb11d68f409b7dabfc1f31c43f026a905810ed01": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4677. Editlog should support synchronous writes. Contributed by Ivan Mitic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1491096 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/06/13 4:28 PM",
      "commitName": "cb11d68f409b7dabfc1f31c43f026a905810ed01",
      "commitAuthor": "Ivan Mitic",
      "commitDateOld": "15/03/13 11:59 AM",
      "commitNameOld": "415d03831914c01176b63fa3d7cd5fcff165c7fd",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 85.19,
      "commitsBetweenForRepo": 526,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   synchronized Journal getOrCreateJournal(String jid) throws IOException {\n     QuorumJournalManager.checkJournalId(jid);\n     \n     Journal journal \u003d journalsById.get(jid);\n     if (journal \u003d\u003d null) {\n       File logDir \u003d getLogDir(jid);\n       LOG.info(\"Initializing journal in directory \" + logDir);      \n-      journal \u003d new Journal(logDir, jid, new ErrorReporter());\n+      journal \u003d new Journal(conf, logDir, jid, new ErrorReporter());\n       journalsById.put(jid, journal);\n     }\n     \n     return journal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized Journal getOrCreateJournal(String jid) throws IOException {\n    QuorumJournalManager.checkJournalId(jid);\n    \n    Journal journal \u003d journalsById.get(jid);\n    if (journal \u003d\u003d null) {\n      File logDir \u003d getLogDir(jid);\n      LOG.info(\"Initializing journal in directory \" + logDir);      \n      journal \u003d new Journal(conf, logDir, jid, new ErrorReporter());\n      journalsById.put(jid, journal);\n    }\n    \n    return journal;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JournalNode.java",
      "extendedDetails": {}
    },
    "13daca1ef6aa4a24ff9a840397dda1bbddb16e37": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3870. Add metrics to JournalNode. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1380980 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/09/12 9:30 PM",
      "commitName": "13daca1ef6aa4a24ff9a840397dda1bbddb16e37",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "14/08/12 5:52 PM",
      "commitNameOld": "160bfcd6c2e2bc4a4adfa397f0f716430a0832bb",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 21.15,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   synchronized Journal getOrCreateJournal(String jid) throws IOException {\n     QuorumJournalManager.checkJournalId(jid);\n     \n     Journal journal \u003d journalsById.get(jid);\n     if (journal \u003d\u003d null) {\n       File logDir \u003d getLogDir(jid);\n       LOG.info(\"Initializing journal in directory \" + logDir);      \n-      journal \u003d new Journal(logDir, new ErrorReporter());\n+      journal \u003d new Journal(logDir, jid, new ErrorReporter());\n       journalsById.put(jid, journal);\n     }\n     \n     return journal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized Journal getOrCreateJournal(String jid) throws IOException {\n    QuorumJournalManager.checkJournalId(jid);\n    \n    Journal journal \u003d journalsById.get(jid);\n    if (journal \u003d\u003d null) {\n      File logDir \u003d getLogDir(jid);\n      LOG.info(\"Initializing journal in directory \" + logDir);      \n      journal \u003d new Journal(logDir, jid, new ErrorReporter());\n      journalsById.put(jid, journal);\n    }\n    \n    return journal;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JournalNode.java",
      "extendedDetails": {}
    },
    "b17018e4b821ec860144d8bd38bc1fcb0d7eeaa5": {
      "type": "Yexceptionschange",
      "commitMessage": "HDFS-3693. JNStorage should read its storage info even before a writer becomes active. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1365794 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/07/12 2:47 PM",
      "commitName": "b17018e4b821ec860144d8bd38bc1fcb0d7eeaa5",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "19/07/12 5:25 PM",
      "commitNameOld": "74d4573a23db5586c6e47ff2277aa7c35237da34",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 5.89,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n-  synchronized Journal getOrCreateJournal(String jid) {\n+  synchronized Journal getOrCreateJournal(String jid) throws IOException {\n     QuorumJournalManager.checkJournalId(jid);\n     \n     Journal journal \u003d journalsById.get(jid);\n     if (journal \u003d\u003d null) {\n       File logDir \u003d getLogDir(jid);\n       LOG.info(\"Initializing journal in directory \" + logDir);      \n       journal \u003d new Journal(logDir, new ErrorReporter());\n       journalsById.put(jid, journal);\n     }\n     \n     return journal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized Journal getOrCreateJournal(String jid) throws IOException {\n    QuorumJournalManager.checkJournalId(jid);\n    \n    Journal journal \u003d journalsById.get(jid);\n    if (journal \u003d\u003d null) {\n      File logDir \u003d getLogDir(jid);\n      LOG.info(\"Initializing journal in directory \" + logDir);      \n      journal \u003d new Journal(logDir, new ErrorReporter());\n      journalsById.put(jid, journal);\n    }\n    \n    return journal;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JournalNode.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[IOException]"
      }
    },
    "74d4573a23db5586c6e47ff2277aa7c35237da34": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1363596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/07/12 5:25 PM",
      "commitName": "74d4573a23db5586c6e47ff2277aa7c35237da34",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,13 @@\n+  synchronized Journal getOrCreateJournal(String jid) {\n+    QuorumJournalManager.checkJournalId(jid);\n+    \n+    Journal journal \u003d journalsById.get(jid);\n+    if (journal \u003d\u003d null) {\n+      File logDir \u003d getLogDir(jid);\n+      LOG.info(\"Initializing journal in directory \" + logDir);      \n+      journal \u003d new Journal(logDir, new ErrorReporter());\n+      journalsById.put(jid, journal);\n+    }\n+    \n+    return journal;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized Journal getOrCreateJournal(String jid) {\n    QuorumJournalManager.checkJournalId(jid);\n    \n    Journal journal \u003d journalsById.get(jid);\n    if (journal \u003d\u003d null) {\n      File logDir \u003d getLogDir(jid);\n      LOG.info(\"Initializing journal in directory \" + logDir);      \n      journal \u003d new Journal(logDir, new ErrorReporter());\n      journalsById.put(jid, journal);\n    }\n    \n    return journal;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JournalNode.java"
    }
  }
}