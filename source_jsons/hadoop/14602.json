{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSUtil.java",
  "functionName": "getHttpPolicy",
  "functionId": "getHttpPolicy___conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
  "functionStartLine": 1484,
  "functionEndLine": 1495,
  "numCommitsSeen": 154,
  "timeTaken": 4287,
  "changeHistory": [
    "9ebbda342f2adbbce30820a6f8374d310e361ff8",
    "1b5cceaffbdde50a87ede81552dc380832db8e79",
    "b9522e86a55564c2ccb5ca3f1ca871965cbe74de",
    "8b196816d8de638aaab0294249e560303fd92b7a",
    "d598b6ef9f10ae011fecbe198360cde63a4e4d50",
    "d02baff9a0d8cec92bde751777f3e575da2339c8"
  ],
  "changeHistoryShort": {
    "9ebbda342f2adbbce30820a6f8374d310e361ff8": "Ybodychange",
    "1b5cceaffbdde50a87ede81552dc380832db8e79": "Ybodychange",
    "b9522e86a55564c2ccb5ca3f1ca871965cbe74de": "Ybodychange",
    "8b196816d8de638aaab0294249e560303fd92b7a": "Ybodychange",
    "d598b6ef9f10ae011fecbe198360cde63a4e4d50": "Ybodychange",
    "d02baff9a0d8cec92bde751777f3e575da2339c8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9ebbda342f2adbbce30820a6f8374d310e361ff8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16372. Fix typo in DFSUtil getHttpPolicy method\n\nCloses #967\n",
      "commitDate": "14/06/19 7:09 AM",
      "commitName": "9ebbda342f2adbbce30820a6f8374d310e361ff8",
      "commitAuthor": "dineshchitlangia",
      "commitDateOld": "11/06/19 3:41 PM",
      "commitNameOld": "4ea6c2f457496461afc63f38ef4cef3ab0efce49",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 2.64,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public static HttpConfig.Policy getHttpPolicy(Configuration conf) {\n     String policyStr \u003d conf.get(DFSConfigKeys.DFS_HTTP_POLICY_KEY,\n         DFSConfigKeys.DFS_HTTP_POLICY_DEFAULT);\n     HttpConfig.Policy policy \u003d HttpConfig.Policy.fromString(policyStr);\n     if (policy \u003d\u003d null) {\n-      throw new HadoopIllegalArgumentException(\"Unregonized value \u0027\"\n+      throw new HadoopIllegalArgumentException(\"Unrecognized value \u0027\"\n           + policyStr + \"\u0027 for \" + DFSConfigKeys.DFS_HTTP_POLICY_KEY);\n     }\n \n     conf.set(DFSConfigKeys.DFS_HTTP_POLICY_KEY, policy.name());\n     return policy;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static HttpConfig.Policy getHttpPolicy(Configuration conf) {\n    String policyStr \u003d conf.get(DFSConfigKeys.DFS_HTTP_POLICY_KEY,\n        DFSConfigKeys.DFS_HTTP_POLICY_DEFAULT);\n    HttpConfig.Policy policy \u003d HttpConfig.Policy.fromString(policyStr);\n    if (policy \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"Unrecognized value \u0027\"\n          + policyStr + \"\u0027 for \" + DFSConfigKeys.DFS_HTTP_POLICY_KEY);\n    }\n\n    conf.set(DFSConfigKeys.DFS_HTTP_POLICY_KEY, policy.name());\n    return policy;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    },
    "1b5cceaffbdde50a87ede81552dc380832db8e79": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-11201. Spelling errors in the logging, help, assertions and exception messages. Contributed by Grant Sohn.\"\n\nThis reverts commit b9522e86a55564c2ccb5ca3f1ca871965cbe74de.\n",
      "commitDate": "05/12/16 10:54 AM",
      "commitName": "1b5cceaffbdde50a87ede81552dc380832db8e79",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "05/12/16 10:48 AM",
      "commitNameOld": "b9522e86a55564c2ccb5ca3f1ca871965cbe74de",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public static HttpConfig.Policy getHttpPolicy(Configuration conf) {\n     String policyStr \u003d conf.get(DFSConfigKeys.DFS_HTTP_POLICY_KEY,\n         DFSConfigKeys.DFS_HTTP_POLICY_DEFAULT);\n     HttpConfig.Policy policy \u003d HttpConfig.Policy.fromString(policyStr);\n     if (policy \u003d\u003d null) {\n-      throw new HadoopIllegalArgumentException(\"Unrecognized value \u0027\"\n+      throw new HadoopIllegalArgumentException(\"Unregonized value \u0027\"\n           + policyStr + \"\u0027 for \" + DFSConfigKeys.DFS_HTTP_POLICY_KEY);\n     }\n \n     conf.set(DFSConfigKeys.DFS_HTTP_POLICY_KEY, policy.name());\n     return policy;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static HttpConfig.Policy getHttpPolicy(Configuration conf) {\n    String policyStr \u003d conf.get(DFSConfigKeys.DFS_HTTP_POLICY_KEY,\n        DFSConfigKeys.DFS_HTTP_POLICY_DEFAULT);\n    HttpConfig.Policy policy \u003d HttpConfig.Policy.fromString(policyStr);\n    if (policy \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"Unregonized value \u0027\"\n          + policyStr + \"\u0027 for \" + DFSConfigKeys.DFS_HTTP_POLICY_KEY);\n    }\n\n    conf.set(DFSConfigKeys.DFS_HTTP_POLICY_KEY, policy.name());\n    return policy;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    },
    "b9522e86a55564c2ccb5ca3f1ca871965cbe74de": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11201. Spelling errors in the logging, help, assertions and exception messages. Contributed by Grant Sohn.\n",
      "commitDate": "05/12/16 10:48 AM",
      "commitName": "b9522e86a55564c2ccb5ca3f1ca871965cbe74de",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "17/10/16 5:45 PM",
      "commitNameOld": "b61fb267b92b2736920b4bd0c673d31e7632ebb9",
      "commitAuthorOld": "Ming Ma",
      "daysBetweenCommits": 48.75,
      "commitsBetweenForRepo": 393,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public static HttpConfig.Policy getHttpPolicy(Configuration conf) {\n     String policyStr \u003d conf.get(DFSConfigKeys.DFS_HTTP_POLICY_KEY,\n         DFSConfigKeys.DFS_HTTP_POLICY_DEFAULT);\n     HttpConfig.Policy policy \u003d HttpConfig.Policy.fromString(policyStr);\n     if (policy \u003d\u003d null) {\n-      throw new HadoopIllegalArgumentException(\"Unregonized value \u0027\"\n+      throw new HadoopIllegalArgumentException(\"Unrecognized value \u0027\"\n           + policyStr + \"\u0027 for \" + DFSConfigKeys.DFS_HTTP_POLICY_KEY);\n     }\n \n     conf.set(DFSConfigKeys.DFS_HTTP_POLICY_KEY, policy.name());\n     return policy;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static HttpConfig.Policy getHttpPolicy(Configuration conf) {\n    String policyStr \u003d conf.get(DFSConfigKeys.DFS_HTTP_POLICY_KEY,\n        DFSConfigKeys.DFS_HTTP_POLICY_DEFAULT);\n    HttpConfig.Policy policy \u003d HttpConfig.Policy.fromString(policyStr);\n    if (policy \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"Unrecognized value \u0027\"\n          + policyStr + \"\u0027 for \" + DFSConfigKeys.DFS_HTTP_POLICY_KEY);\n    }\n\n    conf.set(DFSConfigKeys.DFS_HTTP_POLICY_KEY, policy.name());\n    return policy;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    },
    "8b196816d8de638aaab0294249e560303fd92b7a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10348. Deprecate hadoop.ssl.configuration in branch-2, and remove it in trunk. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/02/14 10:34 AM",
      "commitName": "8b196816d8de638aaab0294249e560303fd92b7a",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "05/02/14 2:48 PM",
      "commitNameOld": "d598b6ef9f10ae011fecbe198360cde63a4e4d50",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 14.82,
      "commitsBetweenForRepo": 124,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,12 @@\n   public static HttpConfig.Policy getHttpPolicy(Configuration conf) {\n-    String policyStr \u003d conf.get(DFSConfigKeys.DFS_HTTP_POLICY_KEY);\n-    if (policyStr \u003d\u003d null) {\n-      boolean https \u003d conf.getBoolean(DFSConfigKeys.DFS_HTTPS_ENABLE_KEY,\n-          DFSConfigKeys.DFS_HTTPS_ENABLE_DEFAULT);\n-\n-      boolean hadoopSsl \u003d conf.getBoolean(\n-          CommonConfigurationKeys.HADOOP_SSL_ENABLED_KEY,\n-          CommonConfigurationKeys.HADOOP_SSL_ENABLED_DEFAULT);\n-\n-      if (hadoopSsl) {\n-        LOG.warn(CommonConfigurationKeys.HADOOP_SSL_ENABLED_KEY\n-            + \" is deprecated. Please use \" + DFSConfigKeys.DFS_HTTP_POLICY_KEY\n-            + \".\");\n-      }\n-      if (https) {\n-        LOG.warn(DFSConfigKeys.DFS_HTTPS_ENABLE_KEY\n-            + \" is deprecated. Please use \" + DFSConfigKeys.DFS_HTTP_POLICY_KEY\n-            + \".\");\n-      }\n-\n-      return (hadoopSsl || https) ? HttpConfig.Policy.HTTP_AND_HTTPS\n-          : HttpConfig.Policy.HTTP_ONLY;\n-    }\n-\n+    String policyStr \u003d conf.get(DFSConfigKeys.DFS_HTTP_POLICY_KEY,\n+        DFSConfigKeys.DFS_HTTP_POLICY_DEFAULT);\n     HttpConfig.Policy policy \u003d HttpConfig.Policy.fromString(policyStr);\n     if (policy \u003d\u003d null) {\n       throw new HadoopIllegalArgumentException(\"Unregonized value \u0027\"\n           + policyStr + \"\u0027 for \" + DFSConfigKeys.DFS_HTTP_POLICY_KEY);\n     }\n \n     conf.set(DFSConfigKeys.DFS_HTTP_POLICY_KEY, policy.name());\n     return policy;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static HttpConfig.Policy getHttpPolicy(Configuration conf) {\n    String policyStr \u003d conf.get(DFSConfigKeys.DFS_HTTP_POLICY_KEY,\n        DFSConfigKeys.DFS_HTTP_POLICY_DEFAULT);\n    HttpConfig.Policy policy \u003d HttpConfig.Policy.fromString(policyStr);\n    if (policy \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"Unregonized value \u0027\"\n          + policyStr + \"\u0027 for \" + DFSConfigKeys.DFS_HTTP_POLICY_KEY);\n    }\n\n    conf.set(DFSConfigKeys.DFS_HTTP_POLICY_KEY, policy.name());\n    return policy;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    },
    "d598b6ef9f10ae011fecbe198360cde63a4e4d50": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5873. dfs.http.policy should have higher precedence over dfs.https.enable. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1564973 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/02/14 2:48 PM",
      "commitName": "d598b6ef9f10ae011fecbe198360cde63a4e4d50",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "04/02/14 10:48 PM",
      "commitNameOld": "d6bd920bba0d7cb77ca76c3a79d1ba1e039da9e5",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.67,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,34 @@\n   public static HttpConfig.Policy getHttpPolicy(Configuration conf) {\n-    String httpPolicy \u003d conf.get(DFSConfigKeys.DFS_HTTP_POLICY_KEY,\n-        DFSConfigKeys.DFS_HTTP_POLICY_DEFAULT);\n-\n-    HttpConfig.Policy policy \u003d HttpConfig.Policy.fromString(httpPolicy);\n-\n-    if (policy \u003d\u003d HttpConfig.Policy.HTTP_ONLY) {\n-      boolean httpsEnabled \u003d conf.getBoolean(\n-          DFSConfigKeys.DFS_HTTPS_ENABLE_KEY,\n+    String policyStr \u003d conf.get(DFSConfigKeys.DFS_HTTP_POLICY_KEY);\n+    if (policyStr \u003d\u003d null) {\n+      boolean https \u003d conf.getBoolean(DFSConfigKeys.DFS_HTTPS_ENABLE_KEY,\n           DFSConfigKeys.DFS_HTTPS_ENABLE_DEFAULT);\n \n-      boolean hadoopSslEnabled \u003d conf.getBoolean(\n+      boolean hadoopSsl \u003d conf.getBoolean(\n           CommonConfigurationKeys.HADOOP_SSL_ENABLED_KEY,\n           CommonConfigurationKeys.HADOOP_SSL_ENABLED_DEFAULT);\n \n-      if (hadoopSslEnabled) {\n+      if (hadoopSsl) {\n         LOG.warn(CommonConfigurationKeys.HADOOP_SSL_ENABLED_KEY\n-            + \" is deprecated. Please use \"\n-            + DFSConfigKeys.DFS_HTTPS_ENABLE_KEY + \".\");\n-        policy \u003d HttpConfig.Policy.HTTPS_ONLY;\n-      } else if (httpsEnabled) {\n-        LOG.warn(DFSConfigKeys.DFS_HTTPS_ENABLE_KEY\n-            + \" is deprecated. Please use \"\n-            + DFSConfigKeys.DFS_HTTPS_ENABLE_KEY + \".\");\n-        policy \u003d HttpConfig.Policy.HTTP_AND_HTTPS;\n+            + \" is deprecated. Please use \" + DFSConfigKeys.DFS_HTTP_POLICY_KEY\n+            + \".\");\n       }\n+      if (https) {\n+        LOG.warn(DFSConfigKeys.DFS_HTTPS_ENABLE_KEY\n+            + \" is deprecated. Please use \" + DFSConfigKeys.DFS_HTTP_POLICY_KEY\n+            + \".\");\n+      }\n+\n+      return (hadoopSsl || https) ? HttpConfig.Policy.HTTP_AND_HTTPS\n+          : HttpConfig.Policy.HTTP_ONLY;\n+    }\n+\n+    HttpConfig.Policy policy \u003d HttpConfig.Policy.fromString(policyStr);\n+    if (policy \u003d\u003d null) {\n+      throw new HadoopIllegalArgumentException(\"Unregonized value \u0027\"\n+          + policyStr + \"\u0027 for \" + DFSConfigKeys.DFS_HTTP_POLICY_KEY);\n     }\n \n     conf.set(DFSConfigKeys.DFS_HTTP_POLICY_KEY, policy.name());\n     return policy;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static HttpConfig.Policy getHttpPolicy(Configuration conf) {\n    String policyStr \u003d conf.get(DFSConfigKeys.DFS_HTTP_POLICY_KEY);\n    if (policyStr \u003d\u003d null) {\n      boolean https \u003d conf.getBoolean(DFSConfigKeys.DFS_HTTPS_ENABLE_KEY,\n          DFSConfigKeys.DFS_HTTPS_ENABLE_DEFAULT);\n\n      boolean hadoopSsl \u003d conf.getBoolean(\n          CommonConfigurationKeys.HADOOP_SSL_ENABLED_KEY,\n          CommonConfigurationKeys.HADOOP_SSL_ENABLED_DEFAULT);\n\n      if (hadoopSsl) {\n        LOG.warn(CommonConfigurationKeys.HADOOP_SSL_ENABLED_KEY\n            + \" is deprecated. Please use \" + DFSConfigKeys.DFS_HTTP_POLICY_KEY\n            + \".\");\n      }\n      if (https) {\n        LOG.warn(DFSConfigKeys.DFS_HTTPS_ENABLE_KEY\n            + \" is deprecated. Please use \" + DFSConfigKeys.DFS_HTTP_POLICY_KEY\n            + \".\");\n      }\n\n      return (hadoopSsl || https) ? HttpConfig.Policy.HTTP_AND_HTTPS\n          : HttpConfig.Policy.HTTP_ONLY;\n    }\n\n    HttpConfig.Policy policy \u003d HttpConfig.Policy.fromString(policyStr);\n    if (policy \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"Unregonized value \u0027\"\n          + policyStr + \"\u0027 for \" + DFSConfigKeys.DFS_HTTP_POLICY_KEY);\n    }\n\n    conf.set(DFSConfigKeys.DFS_HTTP_POLICY_KEY, policy.name());\n    return policy;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    },
    "d02baff9a0d8cec92bde751777f3e575da2339c8": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5536. Implement HTTP policy for Namenode and DataNode. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547925 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/12/13 1:40 PM",
      "commitName": "d02baff9a0d8cec92bde751777f3e575da2339c8",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,31 @@\n+  public static HttpConfig.Policy getHttpPolicy(Configuration conf) {\n+    String httpPolicy \u003d conf.get(DFSConfigKeys.DFS_HTTP_POLICY_KEY,\n+        DFSConfigKeys.DFS_HTTP_POLICY_DEFAULT);\n+\n+    HttpConfig.Policy policy \u003d HttpConfig.Policy.fromString(httpPolicy);\n+\n+    if (policy \u003d\u003d HttpConfig.Policy.HTTP_ONLY) {\n+      boolean httpsEnabled \u003d conf.getBoolean(\n+          DFSConfigKeys.DFS_HTTPS_ENABLE_KEY,\n+          DFSConfigKeys.DFS_HTTPS_ENABLE_DEFAULT);\n+\n+      boolean hadoopSslEnabled \u003d conf.getBoolean(\n+          CommonConfigurationKeys.HADOOP_SSL_ENABLED_KEY,\n+          CommonConfigurationKeys.HADOOP_SSL_ENABLED_DEFAULT);\n+\n+      if (hadoopSslEnabled) {\n+        LOG.warn(CommonConfigurationKeys.HADOOP_SSL_ENABLED_KEY\n+            + \" is deprecated. Please use \"\n+            + DFSConfigKeys.DFS_HTTPS_ENABLE_KEY + \".\");\n+        policy \u003d HttpConfig.Policy.HTTPS_ONLY;\n+      } else if (httpsEnabled) {\n+        LOG.warn(DFSConfigKeys.DFS_HTTPS_ENABLE_KEY\n+            + \" is deprecated. Please use \"\n+            + DFSConfigKeys.DFS_HTTPS_ENABLE_KEY + \".\");\n+        policy \u003d HttpConfig.Policy.HTTP_AND_HTTPS;\n+      }\n+    }\n+\n+    conf.set(DFSConfigKeys.DFS_HTTP_POLICY_KEY, policy.name());\n+    return policy;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static HttpConfig.Policy getHttpPolicy(Configuration conf) {\n    String httpPolicy \u003d conf.get(DFSConfigKeys.DFS_HTTP_POLICY_KEY,\n        DFSConfigKeys.DFS_HTTP_POLICY_DEFAULT);\n\n    HttpConfig.Policy policy \u003d HttpConfig.Policy.fromString(httpPolicy);\n\n    if (policy \u003d\u003d HttpConfig.Policy.HTTP_ONLY) {\n      boolean httpsEnabled \u003d conf.getBoolean(\n          DFSConfigKeys.DFS_HTTPS_ENABLE_KEY,\n          DFSConfigKeys.DFS_HTTPS_ENABLE_DEFAULT);\n\n      boolean hadoopSslEnabled \u003d conf.getBoolean(\n          CommonConfigurationKeys.HADOOP_SSL_ENABLED_KEY,\n          CommonConfigurationKeys.HADOOP_SSL_ENABLED_DEFAULT);\n\n      if (hadoopSslEnabled) {\n        LOG.warn(CommonConfigurationKeys.HADOOP_SSL_ENABLED_KEY\n            + \" is deprecated. Please use \"\n            + DFSConfigKeys.DFS_HTTPS_ENABLE_KEY + \".\");\n        policy \u003d HttpConfig.Policy.HTTPS_ONLY;\n      } else if (httpsEnabled) {\n        LOG.warn(DFSConfigKeys.DFS_HTTPS_ENABLE_KEY\n            + \" is deprecated. Please use \"\n            + DFSConfigKeys.DFS_HTTPS_ENABLE_KEY + \".\");\n        policy \u003d HttpConfig.Policy.HTTP_AND_HTTPS;\n      }\n    }\n\n    conf.set(DFSConfigKeys.DFS_HTTP_POLICY_KEY, policy.name());\n    return policy;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java"
    }
  }
}