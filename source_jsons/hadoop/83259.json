{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MutableRatesWithAggregation.java",
  "functionName": "addMetricIfNotExists",
  "functionId": "addMetricIfNotExists___name-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MutableRatesWithAggregation.java",
  "functionStartLine": 162,
  "functionEndLine": 169,
  "numCommitsSeen": 5,
  "timeTaken": 1111,
  "changeHistory": [
    "e356e4f4b70b756667f76c2f9d0d47eb8fceeb9d",
    "77c13c385774c51766fe505397fa916754ac08d4"
  ],
  "changeHistoryShort": {
    "e356e4f4b70b756667f76c2f9d0d47eb8fceeb9d": "Ybodychange",
    "77c13c385774c51766fe505397fa916754ac08d4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e356e4f4b70b756667f76c2f9d0d47eb8fceeb9d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16391 Add a prefix to the metric names for MutableRatesWithAggregation used for deferred RPC metrics to avoid collision with non-deferred metrics. Contributed by Bilwa S T.\n",
      "commitDate": "16/08/19 9:01 AM",
      "commitName": "e356e4f4b70b756667f76c2f9d0d47eb8fceeb9d",
      "commitAuthor": "Erik Krogen",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 759.48,
      "commitsBetweenForRepo": 6353,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   private synchronized MutableRate addMetricIfNotExists(String name) {\n     MutableRate metric \u003d globalMetrics.get(name);\n     if (metric \u003d\u003d null) {\n-      metric \u003d new MutableRate(name, name, false);\n+      metric \u003d new MutableRate(name + typePrefix, name + typePrefix, false);\n       globalMetrics.put(name, metric);\n     }\n     return metric;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized MutableRate addMetricIfNotExists(String name) {\n    MutableRate metric \u003d globalMetrics.get(name);\n    if (metric \u003d\u003d null) {\n      metric \u003d new MutableRate(name + typePrefix, name + typePrefix, false);\n      globalMetrics.put(name, metric);\n    }\n    return metric;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MutableRatesWithAggregation.java",
      "extendedDetails": {}
    },
    "77c13c385774c51766fe505397fa916754ac08d4": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13782. Make MutableRates metrics thread-local write, aggregate-on-read. Contributed by Erik Krogen.\n",
      "commitDate": "08/11/16 4:07 PM",
      "commitName": "77c13c385774c51766fe505397fa916754ac08d4",
      "commitAuthor": "Zhe Zhang",
      "diff": "@@ -0,0 +1,8 @@\n+  private synchronized MutableRate addMetricIfNotExists(String name) {\n+    MutableRate metric \u003d globalMetrics.get(name);\n+    if (metric \u003d\u003d null) {\n+      metric \u003d new MutableRate(name, name, false);\n+      globalMetrics.put(name, metric);\n+    }\n+    return metric;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized MutableRate addMetricIfNotExists(String name) {\n    MutableRate metric \u003d globalMetrics.get(name);\n    if (metric \u003d\u003d null) {\n      metric \u003d new MutableRate(name, name, false);\n      globalMetrics.put(name, metric);\n    }\n    return metric;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MutableRatesWithAggregation.java"
    }
  }
}