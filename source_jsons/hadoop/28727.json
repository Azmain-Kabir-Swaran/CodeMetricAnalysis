{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "YarnServerSecurityUtils.java",
  "functionName": "updateAMRMToken",
  "functionId": "updateAMRMToken___token-org.apache.hadoop.yarn.api.records.Token__user-UserGroupInformation__conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/YarnServerSecurityUtils.java",
  "functionStartLine": 123,
  "functionEndLine": 134,
  "numCommitsSeen": 10,
  "timeTaken": 4114,
  "changeHistory": [
    "859aa1f9d621d07693825e610bdc0149f7a2770a",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02"
  ],
  "changeHistoryShort": {
    "859aa1f9d621d07693825e610bdc0149f7a2770a": "Ymultichange(Ymovefromfile,Ymodifierchange,Yexceptionschange,Ybodychange,Yparameterchange)",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": "Yintroduced"
  },
  "changeHistoryDetails": {
    "859aa1f9d621d07693825e610bdc0149f7a2770a": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Yexceptionschange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-5531. UnmanagedAM pool manager for federating application across clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 73bb2102ce4b82b3a3bed91319f7c8f067ddc3e8)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "859aa1f9d621d07693825e610bdc0149f7a2770a",
      "commitAuthor": "Subru Krishnan",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-5531. UnmanagedAM pool manager for federating application across clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 73bb2102ce4b82b3a3bed91319f7c8f067ddc3e8)\n",
          "commitDate": "01/08/17 5:28 PM",
          "commitName": "859aa1f9d621d07693825e610bdc0149f7a2770a",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "01/08/17 5:28 PM",
          "commitNameOld": "7444406d6d48846d06b04e82587885bb8632a16c",
          "commitAuthorOld": "Subru Krishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,12 @@\n-  private void updateAMRMToken(Token token) throws IOException {\n-    org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d\n-        new org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e(\n-            token.getIdentifier().array(), token.getPassword().array(),\n-            new Text(token.getKind()), new Text(token.getService()));\n+  public static void updateAMRMToken(\n+      org.apache.hadoop.yarn.api.records.Token token, UserGroupInformation user,\n+      Configuration conf) {\n+    Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d new Token\u003cAMRMTokenIdentifier\u003e(\n+        token.getIdentifier().array(), token.getPassword().array(),\n+        new Text(token.getKind()), new Text(token.getService()));\n     // Preserve the token service sent by the RM when adding the token\n     // to ensure we replace the previous token setup by the RM.\n     // Afterwards we can update the service address for the RPC layer.\n     user.addToken(amrmToken);\n-    amrmToken.setService(ClientRMProxy.getAMRMTokenService(getConf()));\n+    amrmToken.setService(ClientRMProxy.getAMRMTokenService(conf));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void updateAMRMToken(\n      org.apache.hadoop.yarn.api.records.Token token, UserGroupInformation user,\n      Configuration conf) {\n    Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d new Token\u003cAMRMTokenIdentifier\u003e(\n        token.getIdentifier().array(), token.getPassword().array(),\n        new Text(token.getKind()), new Text(token.getService()));\n    // Preserve the token service sent by the RM when adding the token\n    // to ensure we replace the previous token setup by the RM.\n    // Afterwards we can update the service address for the RPC layer.\n    user.addToken(amrmToken);\n    amrmToken.setService(ClientRMProxy.getAMRMTokenService(conf));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/YarnServerSecurityUtils.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/DefaultRequestInterceptor.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/YarnServerSecurityUtils.java",
            "oldMethodName": "updateAMRMToken",
            "newMethodName": "updateAMRMToken"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-5531. UnmanagedAM pool manager for federating application across clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 73bb2102ce4b82b3a3bed91319f7c8f067ddc3e8)\n",
          "commitDate": "01/08/17 5:28 PM",
          "commitName": "859aa1f9d621d07693825e610bdc0149f7a2770a",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "01/08/17 5:28 PM",
          "commitNameOld": "7444406d6d48846d06b04e82587885bb8632a16c",
          "commitAuthorOld": "Subru Krishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,12 @@\n-  private void updateAMRMToken(Token token) throws IOException {\n-    org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d\n-        new org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e(\n-            token.getIdentifier().array(), token.getPassword().array(),\n-            new Text(token.getKind()), new Text(token.getService()));\n+  public static void updateAMRMToken(\n+      org.apache.hadoop.yarn.api.records.Token token, UserGroupInformation user,\n+      Configuration conf) {\n+    Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d new Token\u003cAMRMTokenIdentifier\u003e(\n+        token.getIdentifier().array(), token.getPassword().array(),\n+        new Text(token.getKind()), new Text(token.getService()));\n     // Preserve the token service sent by the RM when adding the token\n     // to ensure we replace the previous token setup by the RM.\n     // Afterwards we can update the service address for the RPC layer.\n     user.addToken(amrmToken);\n-    amrmToken.setService(ClientRMProxy.getAMRMTokenService(getConf()));\n+    amrmToken.setService(ClientRMProxy.getAMRMTokenService(conf));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void updateAMRMToken(\n      org.apache.hadoop.yarn.api.records.Token token, UserGroupInformation user,\n      Configuration conf) {\n    Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d new Token\u003cAMRMTokenIdentifier\u003e(\n        token.getIdentifier().array(), token.getPassword().array(),\n        new Text(token.getKind()), new Text(token.getService()));\n    // Preserve the token service sent by the RM when adding the token\n    // to ensure we replace the previous token setup by the RM.\n    // Afterwards we can update the service address for the RPC layer.\n    user.addToken(amrmToken);\n    amrmToken.setService(ClientRMProxy.getAMRMTokenService(conf));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/YarnServerSecurityUtils.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-5531. UnmanagedAM pool manager for federating application across clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 73bb2102ce4b82b3a3bed91319f7c8f067ddc3e8)\n",
          "commitDate": "01/08/17 5:28 PM",
          "commitName": "859aa1f9d621d07693825e610bdc0149f7a2770a",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "01/08/17 5:28 PM",
          "commitNameOld": "7444406d6d48846d06b04e82587885bb8632a16c",
          "commitAuthorOld": "Subru Krishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,12 @@\n-  private void updateAMRMToken(Token token) throws IOException {\n-    org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d\n-        new org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e(\n-            token.getIdentifier().array(), token.getPassword().array(),\n-            new Text(token.getKind()), new Text(token.getService()));\n+  public static void updateAMRMToken(\n+      org.apache.hadoop.yarn.api.records.Token token, UserGroupInformation user,\n+      Configuration conf) {\n+    Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d new Token\u003cAMRMTokenIdentifier\u003e(\n+        token.getIdentifier().array(), token.getPassword().array(),\n+        new Text(token.getKind()), new Text(token.getService()));\n     // Preserve the token service sent by the RM when adding the token\n     // to ensure we replace the previous token setup by the RM.\n     // Afterwards we can update the service address for the RPC layer.\n     user.addToken(amrmToken);\n-    amrmToken.setService(ClientRMProxy.getAMRMTokenService(getConf()));\n+    amrmToken.setService(ClientRMProxy.getAMRMTokenService(conf));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void updateAMRMToken(\n      org.apache.hadoop.yarn.api.records.Token token, UserGroupInformation user,\n      Configuration conf) {\n    Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d new Token\u003cAMRMTokenIdentifier\u003e(\n        token.getIdentifier().array(), token.getPassword().array(),\n        new Text(token.getKind()), new Text(token.getService()));\n    // Preserve the token service sent by the RM when adding the token\n    // to ensure we replace the previous token setup by the RM.\n    // Afterwards we can update the service address for the RPC layer.\n    user.addToken(amrmToken);\n    amrmToken.setService(ClientRMProxy.getAMRMTokenService(conf));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/YarnServerSecurityUtils.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5531. UnmanagedAM pool manager for federating application across clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 73bb2102ce4b82b3a3bed91319f7c8f067ddc3e8)\n",
          "commitDate": "01/08/17 5:28 PM",
          "commitName": "859aa1f9d621d07693825e610bdc0149f7a2770a",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "01/08/17 5:28 PM",
          "commitNameOld": "7444406d6d48846d06b04e82587885bb8632a16c",
          "commitAuthorOld": "Subru Krishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,12 @@\n-  private void updateAMRMToken(Token token) throws IOException {\n-    org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d\n-        new org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e(\n-            token.getIdentifier().array(), token.getPassword().array(),\n-            new Text(token.getKind()), new Text(token.getService()));\n+  public static void updateAMRMToken(\n+      org.apache.hadoop.yarn.api.records.Token token, UserGroupInformation user,\n+      Configuration conf) {\n+    Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d new Token\u003cAMRMTokenIdentifier\u003e(\n+        token.getIdentifier().array(), token.getPassword().array(),\n+        new Text(token.getKind()), new Text(token.getService()));\n     // Preserve the token service sent by the RM when adding the token\n     // to ensure we replace the previous token setup by the RM.\n     // Afterwards we can update the service address for the RPC layer.\n     user.addToken(amrmToken);\n-    amrmToken.setService(ClientRMProxy.getAMRMTokenService(getConf()));\n+    amrmToken.setService(ClientRMProxy.getAMRMTokenService(conf));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void updateAMRMToken(\n      org.apache.hadoop.yarn.api.records.Token token, UserGroupInformation user,\n      Configuration conf) {\n    Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d new Token\u003cAMRMTokenIdentifier\u003e(\n        token.getIdentifier().array(), token.getPassword().array(),\n        new Text(token.getKind()), new Text(token.getService()));\n    // Preserve the token service sent by the RM when adding the token\n    // to ensure we replace the previous token setup by the RM.\n    // Afterwards we can update the service address for the RPC layer.\n    user.addToken(amrmToken);\n    amrmToken.setService(ClientRMProxy.getAMRMTokenService(conf));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/YarnServerSecurityUtils.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5531. UnmanagedAM pool manager for federating application across clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 73bb2102ce4b82b3a3bed91319f7c8f067ddc3e8)\n",
          "commitDate": "01/08/17 5:28 PM",
          "commitName": "859aa1f9d621d07693825e610bdc0149f7a2770a",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "01/08/17 5:28 PM",
          "commitNameOld": "7444406d6d48846d06b04e82587885bb8632a16c",
          "commitAuthorOld": "Subru Krishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,12 @@\n-  private void updateAMRMToken(Token token) throws IOException {\n-    org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d\n-        new org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e(\n-            token.getIdentifier().array(), token.getPassword().array(),\n-            new Text(token.getKind()), new Text(token.getService()));\n+  public static void updateAMRMToken(\n+      org.apache.hadoop.yarn.api.records.Token token, UserGroupInformation user,\n+      Configuration conf) {\n+    Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d new Token\u003cAMRMTokenIdentifier\u003e(\n+        token.getIdentifier().array(), token.getPassword().array(),\n+        new Text(token.getKind()), new Text(token.getService()));\n     // Preserve the token service sent by the RM when adding the token\n     // to ensure we replace the previous token setup by the RM.\n     // Afterwards we can update the service address for the RPC layer.\n     user.addToken(amrmToken);\n-    amrmToken.setService(ClientRMProxy.getAMRMTokenService(getConf()));\n+    amrmToken.setService(ClientRMProxy.getAMRMTokenService(conf));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void updateAMRMToken(\n      org.apache.hadoop.yarn.api.records.Token token, UserGroupInformation user,\n      Configuration conf) {\n    Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d new Token\u003cAMRMTokenIdentifier\u003e(\n        token.getIdentifier().array(), token.getPassword().array(),\n        new Text(token.getKind()), new Text(token.getService()));\n    // Preserve the token service sent by the RM when adding the token\n    // to ensure we replace the previous token setup by the RM.\n    // Afterwards we can update the service address for the RPC layer.\n    user.addToken(amrmToken);\n    amrmToken.setService(ClientRMProxy.getAMRMTokenService(conf));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/YarnServerSecurityUtils.java",
          "extendedDetails": {
            "oldValue": "[token-Token]",
            "newValue": "[token-org.apache.hadoop.yarn.api.records.Token, user-UserGroupInformation, conf-Configuration]"
          }
        }
      ]
    },
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2884. Added a proxy service in NM to proxy the the communication between AM and RM. Contributed by Kishore Chaliparambil\n",
      "commitDate": "07/09/15 6:35 PM",
      "commitName": "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,11 @@\n+  private void updateAMRMToken(Token token) throws IOException {\n+    org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d\n+        new org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e(\n+            token.getIdentifier().array(), token.getPassword().array(),\n+            new Text(token.getKind()), new Text(token.getService()));\n+    // Preserve the token service sent by the RM when adding the token\n+    // to ensure we replace the previous token setup by the RM.\n+    // Afterwards we can update the service address for the RPC layer.\n+    user.addToken(amrmToken);\n+    amrmToken.setService(ClientRMProxy.getAMRMTokenService(getConf()));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateAMRMToken(Token token) throws IOException {\n    org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e amrmToken \u003d\n        new org.apache.hadoop.security.token.Token\u003cAMRMTokenIdentifier\u003e(\n            token.getIdentifier().array(), token.getPassword().array(),\n            new Text(token.getKind()), new Text(token.getService()));\n    // Preserve the token service sent by the RM when adding the token\n    // to ensure we replace the previous token setup by the RM.\n    // Afterwards we can update the service address for the RPC layer.\n    user.addToken(amrmToken);\n    amrmToken.setService(ClientRMProxy.getAMRMTokenService(getConf()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/DefaultRequestInterceptor.java"
    }
  }
}