{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockReceiver.java",
  "functionName": "verifyChunks",
  "functionId": "verifyChunks___dataBuf-ByteBuffer__checksumBuf-ByteBuffer",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
  "functionStartLine": 476,
  "functionEndLine": 502,
  "numCommitsSeen": 127,
  "timeTaken": 7668,
  "changeHistory": [
    "eb7ff0c9927131f4a797148b970a95a1abf7d847",
    "98a692fd6361365db4afb9523a5d83ee32774112",
    "cea7bbc630deede93dbe6a1bbda56ad49de4f3de",
    "9ea7c06468d236452f03c38a31d1a45f7f09dc50",
    "1e346aa829519f8a2aa830e76d9856f914861805",
    "f84552ac35bb5221290be68fece9c779ebeaf4bc",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "eb7ff0c9927131f4a797148b970a95a1abf7d847": "Ybodychange",
    "98a692fd6361365db4afb9523a5d83ee32774112": "Ybodychange",
    "cea7bbc630deede93dbe6a1bbda56ad49de4f3de": "Ybodychange",
    "9ea7c06468d236452f03c38a31d1a45f7f09dc50": "Ymultichange(Yparameterchange,Ybodychange)",
    "1e346aa829519f8a2aa830e76d9856f914861805": "Ybodychange",
    "f84552ac35bb5221290be68fece9c779ebeaf4bc": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eb7ff0c9927131f4a797148b970a95a1abf7d847": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10667. Report more accurate info about data corruption location. (Yuanbo Liu via Yongjun Zhang)\n",
      "commitDate": "27/07/16 1:58 PM",
      "commitName": "eb7ff0c9927131f4a797148b970a95a1abf7d847",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "06/04/16 1:20 PM",
      "commitNameOld": "aede8c10ecad4f2a8802a834e4bd0b8286cebade",
      "commitAuthorOld": "Eric Payne",
      "daysBetweenCommits": 112.03,
      "commitsBetweenForRepo": 854,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,27 @@\n   private void verifyChunks(ByteBuffer dataBuf, ByteBuffer checksumBuf)\n       throws IOException {\n     try {\n       clientChecksum.verifyChunkedSums(dataBuf, checksumBuf, clientname, 0);\n     } catch (ChecksumException ce) {\n-      LOG.warn(\"Checksum error in block \" + block + \" from \" + inAddr, ce);\n+      PacketHeader header \u003d packetReceiver.getHeader();\n+      String specificOffset \u003d \"specific offsets are:\"\n+          + \" offsetInBlock \u003d \" + header.getOffsetInBlock()\n+          + \" offsetInPacket \u003d \" + ce.getPos();\n+      LOG.warn(\"Checksum error in block \"\n+          + block + \" from \" + inAddr\n+          + \", \" + specificOffset, ce);\n       // No need to report to namenode when client is writing.\n       if (srcDataNode !\u003d null \u0026\u0026 isDatanode) {\n         try {\n           LOG.info(\"report corrupt \" + block + \" from datanode \" +\n                     srcDataNode + \" to namenode\");\n           datanode.reportRemoteBadBlock(srcDataNode, block);\n         } catch (IOException e) {\n           LOG.warn(\"Failed to report bad \" + block + \n                     \" from datanode \" + srcDataNode + \" to namenode\");\n         }\n       }\n       throw new IOException(\"Unexpected checksum mismatch while writing \"\n           + block + \" from \" + inAddr);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void verifyChunks(ByteBuffer dataBuf, ByteBuffer checksumBuf)\n      throws IOException {\n    try {\n      clientChecksum.verifyChunkedSums(dataBuf, checksumBuf, clientname, 0);\n    } catch (ChecksumException ce) {\n      PacketHeader header \u003d packetReceiver.getHeader();\n      String specificOffset \u003d \"specific offsets are:\"\n          + \" offsetInBlock \u003d \" + header.getOffsetInBlock()\n          + \" offsetInPacket \u003d \" + ce.getPos();\n      LOG.warn(\"Checksum error in block \"\n          + block + \" from \" + inAddr\n          + \", \" + specificOffset, ce);\n      // No need to report to namenode when client is writing.\n      if (srcDataNode !\u003d null \u0026\u0026 isDatanode) {\n        try {\n          LOG.info(\"report corrupt \" + block + \" from datanode \" +\n                    srcDataNode + \" to namenode\");\n          datanode.reportRemoteBadBlock(srcDataNode, block);\n        } catch (IOException e) {\n          LOG.warn(\"Failed to report bad \" + block + \n                    \" from datanode \" + srcDataNode + \" to namenode\");\n        }\n      }\n      throw new IOException(\"Unexpected checksum mismatch while writing \"\n          + block + \" from \" + inAddr);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {}
    },
    "98a692fd6361365db4afb9523a5d83ee32774112": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3875. Issue handling checksum errors in write pipeline. Contributed by Kihwal Lee.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1484808 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/05/13 6:42 AM",
      "commitName": "98a692fd6361365db4afb9523a5d83ee32774112",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "06/03/13 11:15 AM",
      "commitNameOld": "638801cce16fc1dc3259c541dc30a599faaddda1",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 75.77,
      "commitsBetweenForRepo": 469,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   private void verifyChunks(ByteBuffer dataBuf, ByteBuffer checksumBuf)\n       throws IOException {\n     try {\n       clientChecksum.verifyChunkedSums(dataBuf, checksumBuf, clientname, 0);\n     } catch (ChecksumException ce) {\n       LOG.warn(\"Checksum error in block \" + block + \" from \" + inAddr, ce);\n-      if (srcDataNode !\u003d null) {\n+      // No need to report to namenode when client is writing.\n+      if (srcDataNode !\u003d null \u0026\u0026 isDatanode) {\n         try {\n           LOG.info(\"report corrupt \" + block + \" from datanode \" +\n                     srcDataNode + \" to namenode\");\n           datanode.reportRemoteBadBlock(srcDataNode, block);\n         } catch (IOException e) {\n           LOG.warn(\"Failed to report bad \" + block + \n                     \" from datanode \" + srcDataNode + \" to namenode\");\n         }\n       }\n       throw new IOException(\"Unexpected checksum mismatch while writing \"\n           + block + \" from \" + inAddr);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void verifyChunks(ByteBuffer dataBuf, ByteBuffer checksumBuf)\n      throws IOException {\n    try {\n      clientChecksum.verifyChunkedSums(dataBuf, checksumBuf, clientname, 0);\n    } catch (ChecksumException ce) {\n      LOG.warn(\"Checksum error in block \" + block + \" from \" + inAddr, ce);\n      // No need to report to namenode when client is writing.\n      if (srcDataNode !\u003d null \u0026\u0026 isDatanode) {\n        try {\n          LOG.info(\"report corrupt \" + block + \" from datanode \" +\n                    srcDataNode + \" to namenode\");\n          datanode.reportRemoteBadBlock(srcDataNode, block);\n        } catch (IOException e) {\n          LOG.warn(\"Failed to report bad \" + block + \n                    \" from datanode \" + srcDataNode + \" to namenode\");\n        }\n      }\n      throw new IOException(\"Unexpected checksum mismatch while writing \"\n          + block + \" from \" + inAddr);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {}
    },
    "cea7bbc630deede93dbe6a1bbda56ad49de4f3de": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4122. Cleanup HDFS logs and reduce the size of logged messages. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1403120 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/10/12 4:10 PM",
      "commitName": "cea7bbc630deede93dbe6a1bbda56ad49de4f3de",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "09/08/12 2:31 PM",
      "commitNameOld": "9ea7c06468d236452f03c38a31d1a45f7f09dc50",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 80.07,
      "commitsBetweenForRepo": 496,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private void verifyChunks(ByteBuffer dataBuf, ByteBuffer checksumBuf)\n       throws IOException {\n     try {\n       clientChecksum.verifyChunkedSums(dataBuf, checksumBuf, clientname, 0);\n     } catch (ChecksumException ce) {\n       LOG.warn(\"Checksum error in block \" + block + \" from \" + inAddr, ce);\n       if (srcDataNode !\u003d null) {\n         try {\n-          LOG.info(\"report corrupt block \" + block + \" from datanode \" +\n+          LOG.info(\"report corrupt \" + block + \" from datanode \" +\n                     srcDataNode + \" to namenode\");\n           datanode.reportRemoteBadBlock(srcDataNode, block);\n         } catch (IOException e) {\n-          LOG.warn(\"Failed to report bad block \" + block + \n+          LOG.warn(\"Failed to report bad \" + block + \n                     \" from datanode \" + srcDataNode + \" to namenode\");\n         }\n       }\n-      throw new IOException(\"Unexpected checksum mismatch \" + \n-                            \"while writing \" + block + \" from \" + inAddr);\n+      throw new IOException(\"Unexpected checksum mismatch while writing \"\n+          + block + \" from \" + inAddr);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void verifyChunks(ByteBuffer dataBuf, ByteBuffer checksumBuf)\n      throws IOException {\n    try {\n      clientChecksum.verifyChunkedSums(dataBuf, checksumBuf, clientname, 0);\n    } catch (ChecksumException ce) {\n      LOG.warn(\"Checksum error in block \" + block + \" from \" + inAddr, ce);\n      if (srcDataNode !\u003d null) {\n        try {\n          LOG.info(\"report corrupt \" + block + \" from datanode \" +\n                    srcDataNode + \" to namenode\");\n          datanode.reportRemoteBadBlock(srcDataNode, block);\n        } catch (IOException e) {\n          LOG.warn(\"Failed to report bad \" + block + \n                    \" from datanode \" + srcDataNode + \" to namenode\");\n        }\n      }\n      throw new IOException(\"Unexpected checksum mismatch while writing \"\n          + block + \" from \" + inAddr);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {}
    },
    "9ea7c06468d236452f03c38a31d1a45f7f09dc50": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-3721. hsync support broke wire compatibility. Contributed by Todd Lipcon and Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1371495 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/08/12 2:31 PM",
      "commitName": "9ea7c06468d236452f03c38a31d1a45f7f09dc50",
      "commitAuthor": "Aaron Myers",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-3721. hsync support broke wire compatibility. Contributed by Todd Lipcon and Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1371495 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/08/12 2:31 PM",
          "commitName": "9ea7c06468d236452f03c38a31d1a45f7f09dc50",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "15/07/12 7:58 PM",
          "commitNameOld": "0e8e499ff482c165d21c8e4f5ff9c33f306ca0d9",
          "commitAuthorOld": "Harsh J",
          "daysBetweenCommits": 24.77,
          "commitsBetweenForRepo": 121,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,20 @@\n-  private void verifyChunks( byte[] dataBuf, int dataOff, int len, \n-                             byte[] checksumBuf, int checksumOff ) \n-                             throws IOException {\n-    while (len \u003e 0) {\n-      int chunkLen \u003d Math.min(len, bytesPerChecksum);\n-      \n-      clientChecksum.update(dataBuf, dataOff, chunkLen);\n-\n-      if (!clientChecksum.compare(checksumBuf, checksumOff)) {\n-        if (srcDataNode !\u003d null) {\n-          try {\n-            LOG.info(\"report corrupt block \" + block + \" from datanode \" +\n-                      srcDataNode + \" to namenode\");\n-            datanode.reportRemoteBadBlock(srcDataNode, block);\n-          } catch (IOException e) {\n-            LOG.warn(\"Failed to report bad block \" + block + \n-                      \" from datanode \" + srcDataNode + \" to namenode\");\n-          }\n+  private void verifyChunks(ByteBuffer dataBuf, ByteBuffer checksumBuf)\n+      throws IOException {\n+    try {\n+      clientChecksum.verifyChunkedSums(dataBuf, checksumBuf, clientname, 0);\n+    } catch (ChecksumException ce) {\n+      LOG.warn(\"Checksum error in block \" + block + \" from \" + inAddr, ce);\n+      if (srcDataNode !\u003d null) {\n+        try {\n+          LOG.info(\"report corrupt block \" + block + \" from datanode \" +\n+                    srcDataNode + \" to namenode\");\n+          datanode.reportRemoteBadBlock(srcDataNode, block);\n+        } catch (IOException e) {\n+          LOG.warn(\"Failed to report bad block \" + block + \n+                    \" from datanode \" + srcDataNode + \" to namenode\");\n         }\n-        throw new IOException(\"Unexpected checksum mismatch \" + \n-                              \"while writing \" + block + \" from \" + inAddr);\n       }\n-\n-      clientChecksum.reset();\n-      dataOff +\u003d chunkLen;\n-      checksumOff +\u003d checksumSize;\n-      len -\u003d chunkLen;\n+      throw new IOException(\"Unexpected checksum mismatch \" + \n+                            \"while writing \" + block + \" from \" + inAddr);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void verifyChunks(ByteBuffer dataBuf, ByteBuffer checksumBuf)\n      throws IOException {\n    try {\n      clientChecksum.verifyChunkedSums(dataBuf, checksumBuf, clientname, 0);\n    } catch (ChecksumException ce) {\n      LOG.warn(\"Checksum error in block \" + block + \" from \" + inAddr, ce);\n      if (srcDataNode !\u003d null) {\n        try {\n          LOG.info(\"report corrupt block \" + block + \" from datanode \" +\n                    srcDataNode + \" to namenode\");\n          datanode.reportRemoteBadBlock(srcDataNode, block);\n        } catch (IOException e) {\n          LOG.warn(\"Failed to report bad block \" + block + \n                    \" from datanode \" + srcDataNode + \" to namenode\");\n        }\n      }\n      throw new IOException(\"Unexpected checksum mismatch \" + \n                            \"while writing \" + block + \" from \" + inAddr);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
          "extendedDetails": {
            "oldValue": "[dataBuf-byte[], dataOff-int, len-int, checksumBuf-byte[], checksumOff-int]",
            "newValue": "[dataBuf-ByteBuffer, checksumBuf-ByteBuffer]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3721. hsync support broke wire compatibility. Contributed by Todd Lipcon and Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1371495 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/08/12 2:31 PM",
          "commitName": "9ea7c06468d236452f03c38a31d1a45f7f09dc50",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "15/07/12 7:58 PM",
          "commitNameOld": "0e8e499ff482c165d21c8e4f5ff9c33f306ca0d9",
          "commitAuthorOld": "Harsh J",
          "daysBetweenCommits": 24.77,
          "commitsBetweenForRepo": 121,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,20 @@\n-  private void verifyChunks( byte[] dataBuf, int dataOff, int len, \n-                             byte[] checksumBuf, int checksumOff ) \n-                             throws IOException {\n-    while (len \u003e 0) {\n-      int chunkLen \u003d Math.min(len, bytesPerChecksum);\n-      \n-      clientChecksum.update(dataBuf, dataOff, chunkLen);\n-\n-      if (!clientChecksum.compare(checksumBuf, checksumOff)) {\n-        if (srcDataNode !\u003d null) {\n-          try {\n-            LOG.info(\"report corrupt block \" + block + \" from datanode \" +\n-                      srcDataNode + \" to namenode\");\n-            datanode.reportRemoteBadBlock(srcDataNode, block);\n-          } catch (IOException e) {\n-            LOG.warn(\"Failed to report bad block \" + block + \n-                      \" from datanode \" + srcDataNode + \" to namenode\");\n-          }\n+  private void verifyChunks(ByteBuffer dataBuf, ByteBuffer checksumBuf)\n+      throws IOException {\n+    try {\n+      clientChecksum.verifyChunkedSums(dataBuf, checksumBuf, clientname, 0);\n+    } catch (ChecksumException ce) {\n+      LOG.warn(\"Checksum error in block \" + block + \" from \" + inAddr, ce);\n+      if (srcDataNode !\u003d null) {\n+        try {\n+          LOG.info(\"report corrupt block \" + block + \" from datanode \" +\n+                    srcDataNode + \" to namenode\");\n+          datanode.reportRemoteBadBlock(srcDataNode, block);\n+        } catch (IOException e) {\n+          LOG.warn(\"Failed to report bad block \" + block + \n+                    \" from datanode \" + srcDataNode + \" to namenode\");\n         }\n-        throw new IOException(\"Unexpected checksum mismatch \" + \n-                              \"while writing \" + block + \" from \" + inAddr);\n       }\n-\n-      clientChecksum.reset();\n-      dataOff +\u003d chunkLen;\n-      checksumOff +\u003d checksumSize;\n-      len -\u003d chunkLen;\n+      throw new IOException(\"Unexpected checksum mismatch \" + \n+                            \"while writing \" + block + \" from \" + inAddr);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void verifyChunks(ByteBuffer dataBuf, ByteBuffer checksumBuf)\n      throws IOException {\n    try {\n      clientChecksum.verifyChunkedSums(dataBuf, checksumBuf, clientname, 0);\n    } catch (ChecksumException ce) {\n      LOG.warn(\"Checksum error in block \" + block + \" from \" + inAddr, ce);\n      if (srcDataNode !\u003d null) {\n        try {\n          LOG.info(\"report corrupt block \" + block + \" from datanode \" +\n                    srcDataNode + \" to namenode\");\n          datanode.reportRemoteBadBlock(srcDataNode, block);\n        } catch (IOException e) {\n          LOG.warn(\"Failed to report bad block \" + block + \n                    \" from datanode \" + srcDataNode + \" to namenode\");\n        }\n      }\n      throw new IOException(\"Unexpected checksum mismatch \" + \n                            \"while writing \" + block + \" from \" + inAddr);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
          "extendedDetails": {}
        }
      ]
    },
    "1e346aa829519f8a2aa830e76d9856f914861805": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208925 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/11 5:10 PM",
      "commitName": "1e346aa829519f8a2aa830e76d9856f914861805",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "19/11/11 7:58 PM",
      "commitNameOld": "b2313021fd03d9803a04b120d97bfd91fcbd4d36",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 10.88,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,29 @@\n   private void verifyChunks( byte[] dataBuf, int dataOff, int len, \n                              byte[] checksumBuf, int checksumOff ) \n                              throws IOException {\n-    DatanodeProtocol nn \u003d datanode.getBPNamenode(block.getBlockPoolId());\n     while (len \u003e 0) {\n       int chunkLen \u003d Math.min(len, bytesPerChecksum);\n       \n       clientChecksum.update(dataBuf, dataOff, chunkLen);\n \n       if (!clientChecksum.compare(checksumBuf, checksumOff)) {\n         if (srcDataNode !\u003d null) {\n           try {\n             LOG.info(\"report corrupt block \" + block + \" from datanode \" +\n                       srcDataNode + \" to namenode\");\n-            LocatedBlock lb \u003d new LocatedBlock(block, \n-                                            new DatanodeInfo[] {srcDataNode});\n-            nn.reportBadBlocks(new LocatedBlock[] {lb});\n+            datanode.reportRemoteBadBlock(srcDataNode, block);\n           } catch (IOException e) {\n             LOG.warn(\"Failed to report bad block \" + block + \n                       \" from datanode \" + srcDataNode + \" to namenode\");\n           }\n         }\n         throw new IOException(\"Unexpected checksum mismatch \" + \n                               \"while writing \" + block + \" from \" + inAddr);\n       }\n \n       clientChecksum.reset();\n       dataOff +\u003d chunkLen;\n       checksumOff +\u003d checksumSize;\n       len -\u003d chunkLen;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void verifyChunks( byte[] dataBuf, int dataOff, int len, \n                             byte[] checksumBuf, int checksumOff ) \n                             throws IOException {\n    while (len \u003e 0) {\n      int chunkLen \u003d Math.min(len, bytesPerChecksum);\n      \n      clientChecksum.update(dataBuf, dataOff, chunkLen);\n\n      if (!clientChecksum.compare(checksumBuf, checksumOff)) {\n        if (srcDataNode !\u003d null) {\n          try {\n            LOG.info(\"report corrupt block \" + block + \" from datanode \" +\n                      srcDataNode + \" to namenode\");\n            datanode.reportRemoteBadBlock(srcDataNode, block);\n          } catch (IOException e) {\n            LOG.warn(\"Failed to report bad block \" + block + \n                      \" from datanode \" + srcDataNode + \" to namenode\");\n          }\n        }\n        throw new IOException(\"Unexpected checksum mismatch \" + \n                              \"while writing \" + block + \" from \" + inAddr);\n      }\n\n      clientChecksum.reset();\n      dataOff +\u003d chunkLen;\n      checksumOff +\u003d checksumSize;\n      len -\u003d chunkLen;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {}
    },
    "f84552ac35bb5221290be68fece9c779ebeaf4bc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2130. Switch default checksum to CRC32C. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1196889 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/11/11 5:35 PM",
      "commitName": "f84552ac35bb5221290be68fece9c779ebeaf4bc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "31/10/11 10:17 PM",
      "commitNameOld": "1c940637b14eee777a65d153d0d712a1aea3866c",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 1.8,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   private void verifyChunks( byte[] dataBuf, int dataOff, int len, \n                              byte[] checksumBuf, int checksumOff ) \n                              throws IOException {\n     DatanodeProtocol nn \u003d datanode.getBPNamenode(block.getBlockPoolId());\n     while (len \u003e 0) {\n       int chunkLen \u003d Math.min(len, bytesPerChecksum);\n       \n-      checksum.update(dataBuf, dataOff, chunkLen);\n+      clientChecksum.update(dataBuf, dataOff, chunkLen);\n \n-      if (!checksum.compare(checksumBuf, checksumOff)) {\n+      if (!clientChecksum.compare(checksumBuf, checksumOff)) {\n         if (srcDataNode !\u003d null) {\n           try {\n             LOG.info(\"report corrupt block \" + block + \" from datanode \" +\n                       srcDataNode + \" to namenode\");\n             LocatedBlock lb \u003d new LocatedBlock(block, \n                                             new DatanodeInfo[] {srcDataNode});\n             nn.reportBadBlocks(new LocatedBlock[] {lb});\n           } catch (IOException e) {\n             LOG.warn(\"Failed to report bad block \" + block + \n                       \" from datanode \" + srcDataNode + \" to namenode\");\n           }\n         }\n         throw new IOException(\"Unexpected checksum mismatch \" + \n                               \"while writing \" + block + \" from \" + inAddr);\n       }\n \n-      checksum.reset();\n+      clientChecksum.reset();\n       dataOff +\u003d chunkLen;\n       checksumOff +\u003d checksumSize;\n       len -\u003d chunkLen;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void verifyChunks( byte[] dataBuf, int dataOff, int len, \n                             byte[] checksumBuf, int checksumOff ) \n                             throws IOException {\n    DatanodeProtocol nn \u003d datanode.getBPNamenode(block.getBlockPoolId());\n    while (len \u003e 0) {\n      int chunkLen \u003d Math.min(len, bytesPerChecksum);\n      \n      clientChecksum.update(dataBuf, dataOff, chunkLen);\n\n      if (!clientChecksum.compare(checksumBuf, checksumOff)) {\n        if (srcDataNode !\u003d null) {\n          try {\n            LOG.info(\"report corrupt block \" + block + \" from datanode \" +\n                      srcDataNode + \" to namenode\");\n            LocatedBlock lb \u003d new LocatedBlock(block, \n                                            new DatanodeInfo[] {srcDataNode});\n            nn.reportBadBlocks(new LocatedBlock[] {lb});\n          } catch (IOException e) {\n            LOG.warn(\"Failed to report bad block \" + block + \n                      \" from datanode \" + srcDataNode + \" to namenode\");\n          }\n        }\n        throw new IOException(\"Unexpected checksum mismatch \" + \n                              \"while writing \" + block + \" from \" + inAddr);\n      }\n\n      clientChecksum.reset();\n      dataOff +\u003d chunkLen;\n      checksumOff +\u003d checksumSize;\n      len -\u003d chunkLen;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void verifyChunks( byte[] dataBuf, int dataOff, int len, \n                             byte[] checksumBuf, int checksumOff ) \n                             throws IOException {\n    DatanodeProtocol nn \u003d datanode.getBPNamenode(block.getBlockPoolId());\n    while (len \u003e 0) {\n      int chunkLen \u003d Math.min(len, bytesPerChecksum);\n      \n      checksum.update(dataBuf, dataOff, chunkLen);\n\n      if (!checksum.compare(checksumBuf, checksumOff)) {\n        if (srcDataNode !\u003d null) {\n          try {\n            LOG.info(\"report corrupt block \" + block + \" from datanode \" +\n                      srcDataNode + \" to namenode\");\n            LocatedBlock lb \u003d new LocatedBlock(block, \n                                            new DatanodeInfo[] {srcDataNode});\n            nn.reportBadBlocks(new LocatedBlock[] {lb});\n          } catch (IOException e) {\n            LOG.warn(\"Failed to report bad block \" + block + \n                      \" from datanode \" + srcDataNode + \" to namenode\");\n          }\n        }\n        throw new IOException(\"Unexpected checksum mismatch \" + \n                              \"while writing \" + block + \" from \" + inAddr);\n      }\n\n      checksum.reset();\n      dataOff +\u003d chunkLen;\n      checksumOff +\u003d checksumSize;\n      len -\u003d chunkLen;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void verifyChunks( byte[] dataBuf, int dataOff, int len, \n                             byte[] checksumBuf, int checksumOff ) \n                             throws IOException {\n    DatanodeProtocol nn \u003d datanode.getBPNamenode(block.getBlockPoolId());\n    while (len \u003e 0) {\n      int chunkLen \u003d Math.min(len, bytesPerChecksum);\n      \n      checksum.update(dataBuf, dataOff, chunkLen);\n\n      if (!checksum.compare(checksumBuf, checksumOff)) {\n        if (srcDataNode !\u003d null) {\n          try {\n            LOG.info(\"report corrupt block \" + block + \" from datanode \" +\n                      srcDataNode + \" to namenode\");\n            LocatedBlock lb \u003d new LocatedBlock(block, \n                                            new DatanodeInfo[] {srcDataNode});\n            nn.reportBadBlocks(new LocatedBlock[] {lb});\n          } catch (IOException e) {\n            LOG.warn(\"Failed to report bad block \" + block + \n                      \" from datanode \" + srcDataNode + \" to namenode\");\n          }\n        }\n        throw new IOException(\"Unexpected checksum mismatch \" + \n                              \"while writing \" + block + \" from \" + inAddr);\n      }\n\n      checksum.reset();\n      dataOff +\u003d chunkLen;\n      checksumOff +\u003d checksumSize;\n      len -\u003d chunkLen;\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,32 @@\n+  private void verifyChunks( byte[] dataBuf, int dataOff, int len, \n+                             byte[] checksumBuf, int checksumOff ) \n+                             throws IOException {\n+    DatanodeProtocol nn \u003d datanode.getBPNamenode(block.getBlockPoolId());\n+    while (len \u003e 0) {\n+      int chunkLen \u003d Math.min(len, bytesPerChecksum);\n+      \n+      checksum.update(dataBuf, dataOff, chunkLen);\n+\n+      if (!checksum.compare(checksumBuf, checksumOff)) {\n+        if (srcDataNode !\u003d null) {\n+          try {\n+            LOG.info(\"report corrupt block \" + block + \" from datanode \" +\n+                      srcDataNode + \" to namenode\");\n+            LocatedBlock lb \u003d new LocatedBlock(block, \n+                                            new DatanodeInfo[] {srcDataNode});\n+            nn.reportBadBlocks(new LocatedBlock[] {lb});\n+          } catch (IOException e) {\n+            LOG.warn(\"Failed to report bad block \" + block + \n+                      \" from datanode \" + srcDataNode + \" to namenode\");\n+          }\n+        }\n+        throw new IOException(\"Unexpected checksum mismatch \" + \n+                              \"while writing \" + block + \" from \" + inAddr);\n+      }\n+\n+      checksum.reset();\n+      dataOff +\u003d chunkLen;\n+      checksumOff +\u003d checksumSize;\n+      len -\u003d chunkLen;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void verifyChunks( byte[] dataBuf, int dataOff, int len, \n                             byte[] checksumBuf, int checksumOff ) \n                             throws IOException {\n    DatanodeProtocol nn \u003d datanode.getBPNamenode(block.getBlockPoolId());\n    while (len \u003e 0) {\n      int chunkLen \u003d Math.min(len, bytesPerChecksum);\n      \n      checksum.update(dataBuf, dataOff, chunkLen);\n\n      if (!checksum.compare(checksumBuf, checksumOff)) {\n        if (srcDataNode !\u003d null) {\n          try {\n            LOG.info(\"report corrupt block \" + block + \" from datanode \" +\n                      srcDataNode + \" to namenode\");\n            LocatedBlock lb \u003d new LocatedBlock(block, \n                                            new DatanodeInfo[] {srcDataNode});\n            nn.reportBadBlocks(new LocatedBlock[] {lb});\n          } catch (IOException e) {\n            LOG.warn(\"Failed to report bad block \" + block + \n                      \" from datanode \" + srcDataNode + \" to namenode\");\n          }\n        }\n        throw new IOException(\"Unexpected checksum mismatch \" + \n                              \"while writing \" + block + \" from \" + inAddr);\n      }\n\n      checksum.reset();\n      dataOff +\u003d chunkLen;\n      checksumOff +\u003d checksumSize;\n      len -\u003d chunkLen;\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java"
    }
  }
}