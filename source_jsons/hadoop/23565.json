{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HistoryClientService.java",
  "functionName": "checkAccess",
  "functionId": "checkAccess___job-Job__jobOperation-JobACL",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
  "functionStartLine": 438,
  "functionEndLine": 449,
  "numCommitsSeen": 41,
  "timeTaken": 9322,
  "changeHistory": [
    "7359dc32d3781d5318efee4cf6185616c7c00c18",
    "3cbb9d20d0bf9d4f28c64bd56c5b9c7dd70ed801",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "ded6f225a55517deedc2bd502f2b68f1ca2ddee8",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "7359dc32d3781d5318efee4cf6185616c7c00c18": "Ymultichange(Yexceptionschange,Ybodychange)",
    "3cbb9d20d0bf9d4f28c64bd56c5b9c7dd70ed801": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Yexceptionschange,Ybodychange,Yparameterchange)",
    "ded6f225a55517deedc2bd502f2b68f1ca2ddee8": "Ymodifierchange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7359dc32d3781d5318efee4cf6185616c7c00c18": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "MAPREDUCE-4067. Changed MRClientProtocol api to throw IOException only (Xuan Gong via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1481695 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/05/13 8:34 PM",
      "commitName": "7359dc32d3781d5318efee4cf6185616c7c00c18",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "MAPREDUCE-4067. Changed MRClientProtocol api to throw IOException only (Xuan Gong via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1481695 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/05/13 8:34 PM",
          "commitName": "7359dc32d3781d5318efee4cf6185616c7c00c18",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "04/01/13 12:15 PM",
          "commitNameOld": "e17cecf5505dddb92e2212147505c7c900184431",
          "commitAuthorOld": "Thomas Graves",
          "daysBetweenCommits": 128.3,
          "commitsBetweenForRepo": 767,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,12 @@\n     private void checkAccess(Job job, JobACL jobOperation)\n-        throws YarnRemoteException {\n+        throws IOException {\n \n       UserGroupInformation callerUGI;\n-      try {\n-        callerUGI \u003d UserGroupInformation.getCurrentUser();\n-      } catch (IOException e) {\n-        throw RPCUtil.getRemoteException(e);\n-      }\n+      callerUGI \u003d UserGroupInformation.getCurrentUser();\n+\n       if (!job.checkAccess(callerUGI, jobOperation)) {\n-        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n+        throw new IOException(new AccessControlException(\"User \"\n             + callerUGI.getShortUserName() + \" cannot perform operation \"\n             + jobOperation.name() + \" on \" + job.getID()));\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkAccess(Job job, JobACL jobOperation)\n        throws IOException {\n\n      UserGroupInformation callerUGI;\n      callerUGI \u003d UserGroupInformation.getCurrentUser();\n\n      if (!job.checkAccess(callerUGI, jobOperation)) {\n        throw new IOException(new AccessControlException(\"User \"\n            + callerUGI.getShortUserName() + \" cannot perform operation \"\n            + jobOperation.name() + \" on \" + job.getID()));\n      }\n    }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
          "extendedDetails": {
            "oldValue": "[YarnRemoteException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-4067. Changed MRClientProtocol api to throw IOException only (Xuan Gong via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1481695 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/05/13 8:34 PM",
          "commitName": "7359dc32d3781d5318efee4cf6185616c7c00c18",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "04/01/13 12:15 PM",
          "commitNameOld": "e17cecf5505dddb92e2212147505c7c900184431",
          "commitAuthorOld": "Thomas Graves",
          "daysBetweenCommits": 128.3,
          "commitsBetweenForRepo": 767,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,12 @@\n     private void checkAccess(Job job, JobACL jobOperation)\n-        throws YarnRemoteException {\n+        throws IOException {\n \n       UserGroupInformation callerUGI;\n-      try {\n-        callerUGI \u003d UserGroupInformation.getCurrentUser();\n-      } catch (IOException e) {\n-        throw RPCUtil.getRemoteException(e);\n-      }\n+      callerUGI \u003d UserGroupInformation.getCurrentUser();\n+\n       if (!job.checkAccess(callerUGI, jobOperation)) {\n-        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n+        throw new IOException(new AccessControlException(\"User \"\n             + callerUGI.getShortUserName() + \" cannot perform operation \"\n             + jobOperation.name() + \" on \" + job.getID()));\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkAccess(Job job, JobACL jobOperation)\n        throws IOException {\n\n      UserGroupInformation callerUGI;\n      callerUGI \u003d UserGroupInformation.getCurrentUser();\n\n      if (!job.checkAccess(callerUGI, jobOperation)) {\n        throw new IOException(new AccessControlException(\"User \"\n            + callerUGI.getShortUserName() + \" cannot perform operation \"\n            + jobOperation.name() + \" on \" + job.getID()));\n      }\n    }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
          "extendedDetails": {}
        }
      ]
    },
    "3cbb9d20d0bf9d4f28c64bd56c5b9c7dd70ed801": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3903. Add support for mapreduce admin users. (Contributed by Thomas Graves)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1295262 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/02/12 12:48 PM",
      "commitName": "3cbb9d20d0bf9d4f28c64bd56c5b9c7dd70ed801",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "20/01/12 12:44 PM",
      "commitNameOld": "c6923061d0384cc22d459ee570f3626d98b3ef69",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 40.0,
      "commitsBetweenForRepo": 285,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,15 @@\n     private void checkAccess(Job job, JobACL jobOperation)\n         throws YarnRemoteException {\n-      if (!UserGroupInformation.isSecurityEnabled()) {\n-        return;\n-      }\n+\n       UserGroupInformation callerUGI;\n       try {\n         callerUGI \u003d UserGroupInformation.getCurrentUser();\n       } catch (IOException e) {\n         throw RPCUtil.getRemoteException(e);\n       }\n       if (!job.checkAccess(callerUGI, jobOperation)) {\n         throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n             + callerUGI.getShortUserName() + \" cannot perform operation \"\n             + jobOperation.name() + \" on \" + job.getID()));\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkAccess(Job job, JobACL jobOperation)\n        throws YarnRemoteException {\n\n      UserGroupInformation callerUGI;\n      try {\n        callerUGI \u003d UserGroupInformation.getCurrentUser();\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if (!job.checkAccess(callerUGI, jobOperation)) {\n        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n            + callerUGI.getShortUserName() + \" cannot perform operation \"\n            + jobOperation.name() + \" on \" + job.getID()));\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void checkAccess(Job job, JobACL jobOperation)\n        throws YarnRemoteException {\n      if (!UserGroupInformation.isSecurityEnabled()) {\n        return;\n      }\n      UserGroupInformation callerUGI;\n      try {\n        callerUGI \u003d UserGroupInformation.getCurrentUser();\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if (!job.checkAccess(callerUGI, jobOperation)) {\n        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n            + callerUGI.getShortUserName() + \" cannot perform operation \"\n            + jobOperation.name() + \" on \" + job.getID()));\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Yexceptionschange,Ybodychange,Yparameterchange)",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  public boolean checkAccess(UserGroupInformation callerUGI,\n-      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n-\n-    String user \u003d callerUGI.getShortUserName();\n-    if (!areACLsEnabled()) {\n-      return true;\n-    }\n-\n-    // Allow Job-owner for any operation on the job\n-    if (user.equals(jobOwner)\n-        || jobACL.isUserAllowed(callerUGI)) {\n-      return true;\n-    }\n-\n-    return false;\n-  }\n\\ No newline at end of file\n+    private void checkAccess(Job job, JobACL jobOperation)\n+        throws YarnRemoteException {\n+      if (!UserGroupInformation.isSecurityEnabled()) {\n+        return;\n+      }\n+      UserGroupInformation callerUGI;\n+      try {\n+        callerUGI \u003d UserGroupInformation.getCurrentUser();\n+      } catch (IOException e) {\n+        throw RPCUtil.getRemoteException(e);\n+      }\n+      if (!job.checkAccess(callerUGI, jobOperation)) {\n+        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n+            + callerUGI.getShortUserName() + \" cannot perform operation \"\n+            + jobOperation.name() + \" on \" + job.getID()));\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkAccess(Job job, JobACL jobOperation)\n        throws YarnRemoteException {\n      if (!UserGroupInformation.isSecurityEnabled()) {\n        return;\n      }\n      UserGroupInformation callerUGI;\n      try {\n        callerUGI \u003d UserGroupInformation.getCurrentUser();\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if (!job.checkAccess(callerUGI, jobOperation)) {\n        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n            + callerUGI.getShortUserName() + \" cannot perform operation \"\n            + jobOperation.name() + \" on \" + job.getID()));\n      }\n    }",
          "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
          "extendedDetails": {
            "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/JobACLsManager.java",
            "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
            "oldMethodName": "checkAccess",
            "newMethodName": "checkAccess"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  public boolean checkAccess(UserGroupInformation callerUGI,\n-      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n-\n-    String user \u003d callerUGI.getShortUserName();\n-    if (!areACLsEnabled()) {\n-      return true;\n-    }\n-\n-    // Allow Job-owner for any operation on the job\n-    if (user.equals(jobOwner)\n-        || jobACL.isUserAllowed(callerUGI)) {\n-      return true;\n-    }\n-\n-    return false;\n-  }\n\\ No newline at end of file\n+    private void checkAccess(Job job, JobACL jobOperation)\n+        throws YarnRemoteException {\n+      if (!UserGroupInformation.isSecurityEnabled()) {\n+        return;\n+      }\n+      UserGroupInformation callerUGI;\n+      try {\n+        callerUGI \u003d UserGroupInformation.getCurrentUser();\n+      } catch (IOException e) {\n+        throw RPCUtil.getRemoteException(e);\n+      }\n+      if (!job.checkAccess(callerUGI, jobOperation)) {\n+        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n+            + callerUGI.getShortUserName() + \" cannot perform operation \"\n+            + jobOperation.name() + \" on \" + job.getID()));\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkAccess(Job job, JobACL jobOperation)\n        throws YarnRemoteException {\n      if (!UserGroupInformation.isSecurityEnabled()) {\n        return;\n      }\n      UserGroupInformation callerUGI;\n      try {\n        callerUGI \u003d UserGroupInformation.getCurrentUser();\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if (!job.checkAccess(callerUGI, jobOperation)) {\n        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n            + callerUGI.getShortUserName() + \" cannot perform operation \"\n            + jobOperation.name() + \" on \" + job.getID()));\n      }\n    }",
          "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
          "extendedDetails": {
            "oldValue": "boolean",
            "newValue": "void"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  public boolean checkAccess(UserGroupInformation callerUGI,\n-      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n-\n-    String user \u003d callerUGI.getShortUserName();\n-    if (!areACLsEnabled()) {\n-      return true;\n-    }\n-\n-    // Allow Job-owner for any operation on the job\n-    if (user.equals(jobOwner)\n-        || jobACL.isUserAllowed(callerUGI)) {\n-      return true;\n-    }\n-\n-    return false;\n-  }\n\\ No newline at end of file\n+    private void checkAccess(Job job, JobACL jobOperation)\n+        throws YarnRemoteException {\n+      if (!UserGroupInformation.isSecurityEnabled()) {\n+        return;\n+      }\n+      UserGroupInformation callerUGI;\n+      try {\n+        callerUGI \u003d UserGroupInformation.getCurrentUser();\n+      } catch (IOException e) {\n+        throw RPCUtil.getRemoteException(e);\n+      }\n+      if (!job.checkAccess(callerUGI, jobOperation)) {\n+        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n+            + callerUGI.getShortUserName() + \" cannot perform operation \"\n+            + jobOperation.name() + \" on \" + job.getID()));\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkAccess(Job job, JobACL jobOperation)\n        throws YarnRemoteException {\n      if (!UserGroupInformation.isSecurityEnabled()) {\n        return;\n      }\n      UserGroupInformation callerUGI;\n      try {\n        callerUGI \u003d UserGroupInformation.getCurrentUser();\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if (!job.checkAccess(callerUGI, jobOperation)) {\n        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n            + callerUGI.getShortUserName() + \" cannot perform operation \"\n            + jobOperation.name() + \" on \" + job.getID()));\n      }\n    }",
          "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  public boolean checkAccess(UserGroupInformation callerUGI,\n-      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n-\n-    String user \u003d callerUGI.getShortUserName();\n-    if (!areACLsEnabled()) {\n-      return true;\n-    }\n-\n-    // Allow Job-owner for any operation on the job\n-    if (user.equals(jobOwner)\n-        || jobACL.isUserAllowed(callerUGI)) {\n-      return true;\n-    }\n-\n-    return false;\n-  }\n\\ No newline at end of file\n+    private void checkAccess(Job job, JobACL jobOperation)\n+        throws YarnRemoteException {\n+      if (!UserGroupInformation.isSecurityEnabled()) {\n+        return;\n+      }\n+      UserGroupInformation callerUGI;\n+      try {\n+        callerUGI \u003d UserGroupInformation.getCurrentUser();\n+      } catch (IOException e) {\n+        throw RPCUtil.getRemoteException(e);\n+      }\n+      if (!job.checkAccess(callerUGI, jobOperation)) {\n+        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n+            + callerUGI.getShortUserName() + \" cannot perform operation \"\n+            + jobOperation.name() + \" on \" + job.getID()));\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkAccess(Job job, JobACL jobOperation)\n        throws YarnRemoteException {\n      if (!UserGroupInformation.isSecurityEnabled()) {\n        return;\n      }\n      UserGroupInformation callerUGI;\n      try {\n        callerUGI \u003d UserGroupInformation.getCurrentUser();\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if (!job.checkAccess(callerUGI, jobOperation)) {\n        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n            + callerUGI.getShortUserName() + \" cannot perform operation \"\n            + jobOperation.name() + \" on \" + job.getID()));\n      }\n    }",
          "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[YarnRemoteException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  public boolean checkAccess(UserGroupInformation callerUGI,\n-      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n-\n-    String user \u003d callerUGI.getShortUserName();\n-    if (!areACLsEnabled()) {\n-      return true;\n-    }\n-\n-    // Allow Job-owner for any operation on the job\n-    if (user.equals(jobOwner)\n-        || jobACL.isUserAllowed(callerUGI)) {\n-      return true;\n-    }\n-\n-    return false;\n-  }\n\\ No newline at end of file\n+    private void checkAccess(Job job, JobACL jobOperation)\n+        throws YarnRemoteException {\n+      if (!UserGroupInformation.isSecurityEnabled()) {\n+        return;\n+      }\n+      UserGroupInformation callerUGI;\n+      try {\n+        callerUGI \u003d UserGroupInformation.getCurrentUser();\n+      } catch (IOException e) {\n+        throw RPCUtil.getRemoteException(e);\n+      }\n+      if (!job.checkAccess(callerUGI, jobOperation)) {\n+        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n+            + callerUGI.getShortUserName() + \" cannot perform operation \"\n+            + jobOperation.name() + \" on \" + job.getID()));\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkAccess(Job job, JobACL jobOperation)\n        throws YarnRemoteException {\n      if (!UserGroupInformation.isSecurityEnabled()) {\n        return;\n      }\n      UserGroupInformation callerUGI;\n      try {\n        callerUGI \u003d UserGroupInformation.getCurrentUser();\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if (!job.checkAccess(callerUGI, jobOperation)) {\n        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n            + callerUGI.getShortUserName() + \" cannot perform operation \"\n            + jobOperation.name() + \" on \" + job.getID()));\n      }\n    }",
          "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  public boolean checkAccess(UserGroupInformation callerUGI,\n-      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n-\n-    String user \u003d callerUGI.getShortUserName();\n-    if (!areACLsEnabled()) {\n-      return true;\n-    }\n-\n-    // Allow Job-owner for any operation on the job\n-    if (user.equals(jobOwner)\n-        || jobACL.isUserAllowed(callerUGI)) {\n-      return true;\n-    }\n-\n-    return false;\n-  }\n\\ No newline at end of file\n+    private void checkAccess(Job job, JobACL jobOperation)\n+        throws YarnRemoteException {\n+      if (!UserGroupInformation.isSecurityEnabled()) {\n+        return;\n+      }\n+      UserGroupInformation callerUGI;\n+      try {\n+        callerUGI \u003d UserGroupInformation.getCurrentUser();\n+      } catch (IOException e) {\n+        throw RPCUtil.getRemoteException(e);\n+      }\n+      if (!job.checkAccess(callerUGI, jobOperation)) {\n+        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n+            + callerUGI.getShortUserName() + \" cannot perform operation \"\n+            + jobOperation.name() + \" on \" + job.getID()));\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkAccess(Job job, JobACL jobOperation)\n        throws YarnRemoteException {\n      if (!UserGroupInformation.isSecurityEnabled()) {\n        return;\n      }\n      UserGroupInformation callerUGI;\n      try {\n        callerUGI \u003d UserGroupInformation.getCurrentUser();\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if (!job.checkAccess(callerUGI, jobOperation)) {\n        throw RPCUtil.getRemoteException(new AccessControlException(\"User \"\n            + callerUGI.getShortUserName() + \" cannot perform operation \"\n            + jobOperation.name() + \" on \" + job.getID()));\n      }\n    }",
          "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
          "extendedDetails": {
            "oldValue": "[callerUGI-UserGroupInformation, jobOperation-JobACL, jobOwner-String, jobACL-AccessControlList]",
            "newValue": "[job-Job, jobOperation-JobACL]"
          }
        }
      ]
    },
    "ded6f225a55517deedc2bd502f2b68f1ca2ddee8": {
      "type": "Ymodifierchange",
      "commitMessage": "MAPREDUCE-2837. Ported bug fixes from y-merge to prepare for MAPREDUCE-279 merge. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1157249 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/11 2:00 PM",
      "commitName": "ded6f225a55517deedc2bd502f2b68f1ca2ddee8",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "12/07/11 11:03 PM",
      "commitNameOld": "f57eaf39898b36f4d0f711485003298b857de5f7",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 30.62,
      "commitsBetweenForRepo": 127,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n-  boolean checkAccess(UserGroupInformation callerUGI,\n+  public boolean checkAccess(UserGroupInformation callerUGI,\n       JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n \n     String user \u003d callerUGI.getShortUserName();\n     if (!areACLsEnabled()) {\n       return true;\n     }\n \n     // Allow Job-owner for any operation on the job\n     if (user.equals(jobOwner)\n         || jobACL.isUserAllowed(callerUGI)) {\n       return true;\n     }\n \n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkAccess(UserGroupInformation callerUGI,\n      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n\n    // Allow Job-owner for any operation on the job\n    if (user.equals(jobOwner)\n        || jobACL.isUserAllowed(callerUGI)) {\n      return true;\n    }\n\n    return false;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/JobACLsManager.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[public]"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,16 @@\n+  boolean checkAccess(UserGroupInformation callerUGI,\n+      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n+\n+    String user \u003d callerUGI.getShortUserName();\n+    if (!areACLsEnabled()) {\n+      return true;\n+    }\n+\n+    // Allow Job-owner for any operation on the job\n+    if (user.equals(jobOwner)\n+        || jobACL.isUserAllowed(callerUGI)) {\n+      return true;\n+    }\n+\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  boolean checkAccess(UserGroupInformation callerUGI,\n      JobACL jobOperation, String jobOwner, AccessControlList jobACL) {\n\n    String user \u003d callerUGI.getShortUserName();\n    if (!areACLsEnabled()) {\n      return true;\n    }\n\n    // Allow Job-owner for any operation on the job\n    if (user.equals(jobOwner)\n        || jobACL.isUserAllowed(callerUGI)) {\n      return true;\n    }\n\n    return false;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/JobACLsManager.java"
    }
  }
}