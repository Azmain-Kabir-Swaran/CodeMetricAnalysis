{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReservationSystemUtil.java",
  "functionName": "buildStateProto",
  "functionId": "buildStateProto___allocation-ReservationAllocation",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/ReservationSystemUtil.java",
  "functionStartLine": 73,
  "functionEndLine": 100,
  "numCommitsSeen": 5,
  "timeTaken": 1490,
  "changeHistory": [
    "9875325d5c63f343809907d06bf48a298035a611",
    "f271d377357ad680924d19f07e6c8315e7c89bae"
  ],
  "changeHistoryShort": {
    "9875325d5c63f343809907d06bf48a298035a611": "Ybodychange",
    "f271d377357ad680924d19f07e6c8315e7c89bae": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9875325d5c63f343809907d06bf48a298035a611": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4340. Add list API to reservation system. (Sean Po via wangda)\n",
      "commitDate": "01/02/16 6:17 PM",
      "commitName": "9875325d5c63f343809907d06bf48a298035a611",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "05/08/15 12:57 PM",
      "commitNameOld": "f271d377357ad680924d19f07e6c8315e7c89bae",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 180.26,
      "commitsBetweenForRepo": 1196,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   public static ReservationAllocationStateProto buildStateProto(\n       ReservationAllocation allocation) {\n     ReservationAllocationStateProto.Builder builder \u003d\n         ReservationAllocationStateProto.newBuilder();\n \n-    builder.setAcceptanceTimestamp(allocation.getAcceptanceTime());\n+    builder.setAcceptanceTime(allocation.getAcceptanceTime());\n     builder.setContainsGangs(allocation.containsGangs());\n     builder.setStartTime(allocation.getStartTime());\n     builder.setEndTime(allocation.getEndTime());\n     builder.setUser(allocation.getUser());\n     ReservationDefinitionProto definitionProto \u003d convertToProtoFormat(\n         allocation.getReservationDefinition());\n     builder.setReservationDefinition(definitionProto);\n \n     for (Map.Entry\u003cReservationInterval, Resource\u003e entry :\n         allocation.getAllocationRequests().entrySet()) {\n       ResourceAllocationRequestProto p \u003d\n           ResourceAllocationRequestProto.newBuilder()\n           .setStartTime(entry.getKey().getStartTime())\n           .setEndTime(entry.getKey().getEndTime())\n           .setResource(convertToProtoFormat(entry.getValue()))\n           .build();\n       builder.addAllocationRequests(p);\n     }\n \n     ReservationAllocationStateProto allocationProto \u003d builder.build();\n     return allocationProto;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ReservationAllocationStateProto buildStateProto(\n      ReservationAllocation allocation) {\n    ReservationAllocationStateProto.Builder builder \u003d\n        ReservationAllocationStateProto.newBuilder();\n\n    builder.setAcceptanceTime(allocation.getAcceptanceTime());\n    builder.setContainsGangs(allocation.containsGangs());\n    builder.setStartTime(allocation.getStartTime());\n    builder.setEndTime(allocation.getEndTime());\n    builder.setUser(allocation.getUser());\n    ReservationDefinitionProto definitionProto \u003d convertToProtoFormat(\n        allocation.getReservationDefinition());\n    builder.setReservationDefinition(definitionProto);\n\n    for (Map.Entry\u003cReservationInterval, Resource\u003e entry :\n        allocation.getAllocationRequests().entrySet()) {\n      ResourceAllocationRequestProto p \u003d\n          ResourceAllocationRequestProto.newBuilder()\n          .setStartTime(entry.getKey().getStartTime())\n          .setEndTime(entry.getKey().getEndTime())\n          .setResource(convertToProtoFormat(entry.getValue()))\n          .build();\n      builder.addAllocationRequests(p);\n    }\n\n    ReservationAllocationStateProto allocationProto \u003d builder.build();\n    return allocationProto;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/ReservationSystemUtil.java",
      "extendedDetails": {}
    },
    "f271d377357ad680924d19f07e6c8315e7c89bae": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3736. Add RMStateStore apis to store and load accepted reservations for failover (adhoot via asuresh)\n",
      "commitDate": "05/08/15 12:57 PM",
      "commitName": "f271d377357ad680924d19f07e6c8315e7c89bae",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,28 @@\n+  public static ReservationAllocationStateProto buildStateProto(\n+      ReservationAllocation allocation) {\n+    ReservationAllocationStateProto.Builder builder \u003d\n+        ReservationAllocationStateProto.newBuilder();\n+\n+    builder.setAcceptanceTimestamp(allocation.getAcceptanceTime());\n+    builder.setContainsGangs(allocation.containsGangs());\n+    builder.setStartTime(allocation.getStartTime());\n+    builder.setEndTime(allocation.getEndTime());\n+    builder.setUser(allocation.getUser());\n+    ReservationDefinitionProto definitionProto \u003d convertToProtoFormat(\n+        allocation.getReservationDefinition());\n+    builder.setReservationDefinition(definitionProto);\n+\n+    for (Map.Entry\u003cReservationInterval, Resource\u003e entry :\n+        allocation.getAllocationRequests().entrySet()) {\n+      ResourceAllocationRequestProto p \u003d\n+          ResourceAllocationRequestProto.newBuilder()\n+          .setStartTime(entry.getKey().getStartTime())\n+          .setEndTime(entry.getKey().getEndTime())\n+          .setResource(convertToProtoFormat(entry.getValue()))\n+          .build();\n+      builder.addAllocationRequests(p);\n+    }\n+\n+    ReservationAllocationStateProto allocationProto \u003d builder.build();\n+    return allocationProto;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static ReservationAllocationStateProto buildStateProto(\n      ReservationAllocation allocation) {\n    ReservationAllocationStateProto.Builder builder \u003d\n        ReservationAllocationStateProto.newBuilder();\n\n    builder.setAcceptanceTimestamp(allocation.getAcceptanceTime());\n    builder.setContainsGangs(allocation.containsGangs());\n    builder.setStartTime(allocation.getStartTime());\n    builder.setEndTime(allocation.getEndTime());\n    builder.setUser(allocation.getUser());\n    ReservationDefinitionProto definitionProto \u003d convertToProtoFormat(\n        allocation.getReservationDefinition());\n    builder.setReservationDefinition(definitionProto);\n\n    for (Map.Entry\u003cReservationInterval, Resource\u003e entry :\n        allocation.getAllocationRequests().entrySet()) {\n      ResourceAllocationRequestProto p \u003d\n          ResourceAllocationRequestProto.newBuilder()\n          .setStartTime(entry.getKey().getStartTime())\n          .setEndTime(entry.getKey().getEndTime())\n          .setResource(convertToProtoFormat(entry.getValue()))\n          .build();\n      builder.addAllocationRequests(p);\n    }\n\n    ReservationAllocationStateProto allocationProto \u003d builder.build();\n    return allocationProto;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/ReservationSystemUtil.java"
    }
  }
}