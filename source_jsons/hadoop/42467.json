{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeveldbRMStateStore.java",
  "functionName": "getAndIncrementEpoch",
  "functionId": "getAndIncrementEpoch",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java",
  "functionStartLine": 212,
  "functionEndLine": 226,
  "numCommitsSeen": 19,
  "timeTaken": 1861,
  "changeHistory": [
    "e6a80e476d4348a4373e6dd5792d70edff16516f",
    "2797507d51566ab3b8328e5fb1d0beb9fbce5bae",
    "a7fba0bc28764e0fb36c335ea60cc58079fe007f"
  ],
  "changeHistoryShort": {
    "e6a80e476d4348a4373e6dd5792d70edff16516f": "Ybodychange",
    "2797507d51566ab3b8328e5fb1d0beb9fbce5bae": "Ybodychange",
    "a7fba0bc28764e0fb36c335ea60cc58079fe007f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e6a80e476d4348a4373e6dd5792d70edff16516f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8151. Yarn RM Epoch should wrap around. Contributed by Young Chen.\n",
      "commitDate": "02/05/18 5:23 PM",
      "commitName": "e6a80e476d4348a4373e6dd5792d70edff16516f",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "12/04/18 9:04 AM",
      "commitNameOld": "6bb128dfb893cf0e4aa2d3ecc65440668a1fc8d7",
      "commitAuthorOld": "Eric E Payne",
      "daysBetweenCommits": 20.35,
      "commitsBetweenForRepo": 648,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public synchronized long getAndIncrementEpoch() throws Exception {\n     long currentEpoch \u003d baseEpoch;\n     byte[] dbKeyBytes \u003d bytes(EPOCH_NODE);\n     try {\n       byte[] data \u003d db.get(dbKeyBytes);\n       if (data !\u003d null) {\n         currentEpoch \u003d EpochProto.parseFrom(data).getEpoch();\n       }\n-      EpochProto proto \u003d Epoch.newInstance(currentEpoch + 1).getProto();\n+      EpochProto proto \u003d Epoch.newInstance(nextEpoch(currentEpoch)).getProto();\n       db.put(dbKeyBytes, proto.toByteArray());\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n     return currentEpoch;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized long getAndIncrementEpoch() throws Exception {\n    long currentEpoch \u003d baseEpoch;\n    byte[] dbKeyBytes \u003d bytes(EPOCH_NODE);\n    try {\n      byte[] data \u003d db.get(dbKeyBytes);\n      if (data !\u003d null) {\n        currentEpoch \u003d EpochProto.parseFrom(data).getEpoch();\n      }\n      EpochProto proto \u003d Epoch.newInstance(nextEpoch(currentEpoch)).getProto();\n      db.put(dbKeyBytes, proto.toByteArray());\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n    return currentEpoch;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java",
      "extendedDetails": {}
    },
    "2797507d51566ab3b8328e5fb1d0beb9fbce5bae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5601. Make the RM epoch base value configurable. Contributed by Subru Krishnan\n\n(cherry picked from commit 9ca2aba9cc65090162b3517b194b5e655ee4a157)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "2797507d51566ab3b8328e5fb1d0beb9fbce5bae",
      "commitAuthor": "Jian He",
      "commitDateOld": "31/03/17 10:30 AM",
      "commitNameOld": "318bfb01bc6793da09e32e9cc292eb63224b6ca2",
      "commitAuthorOld": "Eric Payne",
      "daysBetweenCommits": 123.29,
      "commitsBetweenForRepo": 644,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public synchronized long getAndIncrementEpoch() throws Exception {\n-    long currentEpoch \u003d 0;\n+    long currentEpoch \u003d baseEpoch;\n     byte[] dbKeyBytes \u003d bytes(EPOCH_NODE);\n     try {\n       byte[] data \u003d db.get(dbKeyBytes);\n       if (data !\u003d null) {\n         currentEpoch \u003d EpochProto.parseFrom(data).getEpoch();\n       }\n       EpochProto proto \u003d Epoch.newInstance(currentEpoch + 1).getProto();\n       db.put(dbKeyBytes, proto.toByteArray());\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n     return currentEpoch;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized long getAndIncrementEpoch() throws Exception {\n    long currentEpoch \u003d baseEpoch;\n    byte[] dbKeyBytes \u003d bytes(EPOCH_NODE);\n    try {\n      byte[] data \u003d db.get(dbKeyBytes);\n      if (data !\u003d null) {\n        currentEpoch \u003d EpochProto.parseFrom(data).getEpoch();\n      }\n      EpochProto proto \u003d Epoch.newInstance(currentEpoch + 1).getProto();\n      db.put(dbKeyBytes, proto.toByteArray());\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n    return currentEpoch;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java",
      "extendedDetails": {}
    },
    "a7fba0bc28764e0fb36c335ea60cc58079fe007f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2765. Added leveldb-based implementation for RMStateStore. Contributed by Jason Lowe\n",
      "commitDate": "01/12/14 4:38 PM",
      "commitName": "a7fba0bc28764e0fb36c335ea60cc58079fe007f",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,15 @@\n+  public synchronized long getAndIncrementEpoch() throws Exception {\n+    long currentEpoch \u003d 0;\n+    byte[] dbKeyBytes \u003d bytes(EPOCH_NODE);\n+    try {\n+      byte[] data \u003d db.get(dbKeyBytes);\n+      if (data !\u003d null) {\n+        currentEpoch \u003d EpochProto.parseFrom(data).getEpoch();\n+      }\n+      EpochProto proto \u003d Epoch.newInstance(currentEpoch + 1).getProto();\n+      db.put(dbKeyBytes, proto.toByteArray());\n+    } catch (DBException e) {\n+      throw new IOException(e);\n+    }\n+    return currentEpoch;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized long getAndIncrementEpoch() throws Exception {\n    long currentEpoch \u003d 0;\n    byte[] dbKeyBytes \u003d bytes(EPOCH_NODE);\n    try {\n      byte[] data \u003d db.get(dbKeyBytes);\n      if (data !\u003d null) {\n        currentEpoch \u003d EpochProto.parseFrom(data).getEpoch();\n      }\n      EpochProto proto \u003d Epoch.newInstance(currentEpoch + 1).getProto();\n      db.put(dbKeyBytes, proto.toByteArray());\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n    return currentEpoch;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java"
    }
  }
}