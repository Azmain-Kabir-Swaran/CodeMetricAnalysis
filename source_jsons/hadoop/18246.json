{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BalanceProcedureScheduler.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/procedure/BalanceProcedureScheduler.java",
  "functionStartLine": 314,
  "functionEndLine": 324,
  "numCommitsSeen": 1,
  "timeTaken": 369,
  "changeHistory": [
    "1983eea62def58fb769f44c1d41dc29690274809"
  ],
  "changeHistoryShort": {
    "1983eea62def58fb769f44c1d41dc29690274809": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1983eea62def58fb769f44c1d41dc29690274809": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-15340. RBF: Implement BalanceProcedureScheduler basic framework. Contributed by Jinglun.\n",
      "commitDate": "19/05/20 7:39 PM",
      "commitName": "1983eea62def58fb769f44c1d41dc29690274809",
      "commitAuthor": "Yiqun Lin",
      "diff": "@@ -0,0 +1,21 @@\n+    public void run() {\n+      while (running.get()) {\n+        BalanceJob job \u003d null;\n+        try {\n+          job \u003d recoverQueue.poll(500, TimeUnit.MILLISECONDS);\n+        } catch (InterruptedException ie) {\n+          // ignore interrupt exception.\n+        }\n+        if (job !\u003d null) {\n+          try {\n+            journal.recoverJob(job);\n+            job.setScheduler(BalanceProcedureScheduler.this);\n+            runningQueue.add(job);\n+            LOG.info(\"Recover success, add to runningQueue. job\u003d{}\", job);\n+          } catch (IOException e) {\n+            LOG.warn(\"Recover failed, re-add to recoverQueue. job\u003d\" + job, e);\n+            recoverQueue.add(job);\n+          }\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (running.get()) {\n        BalanceJob job \u003d null;\n        try {\n          job \u003d recoverQueue.poll(500, TimeUnit.MILLISECONDS);\n        } catch (InterruptedException ie) {\n          // ignore interrupt exception.\n        }\n        if (job !\u003d null) {\n          try {\n            journal.recoverJob(job);\n            job.setScheduler(BalanceProcedureScheduler.this);\n            runningQueue.add(job);\n            LOG.info(\"Recover success, add to runningQueue. job\u003d{}\", job);\n          } catch (IOException e) {\n            LOG.warn(\"Recover failed, re-add to recoverQueue. job\u003d\" + job, e);\n            recoverQueue.add(job);\n          }\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/procedure/BalanceProcedureScheduler.java"
    }
  }
}