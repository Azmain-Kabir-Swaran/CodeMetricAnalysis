{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKRMStateStore.java",
  "functionName": "addOrUpdateReservationState",
  "functionId": "addOrUpdateReservationState___reservationAllocation-ReservationAllocationStateProto__planName-String__reservationIdName-String__trx-SafeTransaction__isUpdate-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
  "functionStartLine": 1206,
  "functionEndLine": 1232,
  "numCommitsSeen": 77,
  "timeTaken": 2093,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "f271d377357ad680924d19f07e6c8315e7c89bae"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "f271d377357ad680924d19f07e6c8315e7c89bae": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,27 @@\n   private void addOrUpdateReservationState(\n       ReservationAllocationStateProto reservationAllocation, String planName,\n       String reservationIdName, SafeTransaction trx, boolean isUpdate)\n       throws Exception {\n     String planCreatePath \u003d\n         getNodePath(reservationRoot, planName);\n     String reservationPath \u003d getNodePath(planCreatePath,\n         reservationIdName);\n     byte[] reservationData \u003d reservationAllocation.toByteArray();\n \n     if (!exists(planCreatePath)) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Creating plan node: \" + planName + \" at: \" + planCreatePath);\n-      }\n+      LOG.debug(\"Creating plan node: {} at: {}\", planName, planCreatePath);\n \n       trx.create(planCreatePath, null, zkAcl, CreateMode.PERSISTENT);\n     }\n \n     if (isUpdate) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Updating reservation: \" + reservationIdName + \" in plan:\"\n-            + planName + \" at: \" + reservationPath);\n-      }\n+      LOG.debug(\"Updating reservation: {} in plan:{} at: {}\",\n+          reservationIdName, planName, reservationPath);\n       trx.setData(reservationPath, reservationData, -1);\n     } else {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Storing reservation: \" + reservationIdName + \" in plan:\"\n-            + planName + \" at: \" + reservationPath);\n-      }\n+      LOG.debug(\"Storing reservation: {} in plan:{} at: {}\",\n+          reservationIdName, planName, reservationPath);\n       trx.create(reservationPath, reservationData, zkAcl,\n           CreateMode.PERSISTENT);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addOrUpdateReservationState(\n      ReservationAllocationStateProto reservationAllocation, String planName,\n      String reservationIdName, SafeTransaction trx, boolean isUpdate)\n      throws Exception {\n    String planCreatePath \u003d\n        getNodePath(reservationRoot, planName);\n    String reservationPath \u003d getNodePath(planCreatePath,\n        reservationIdName);\n    byte[] reservationData \u003d reservationAllocation.toByteArray();\n\n    if (!exists(planCreatePath)) {\n      LOG.debug(\"Creating plan node: {} at: {}\", planName, planCreatePath);\n\n      trx.create(planCreatePath, null, zkAcl, CreateMode.PERSISTENT);\n    }\n\n    if (isUpdate) {\n      LOG.debug(\"Updating reservation: {} in plan:{} at: {}\",\n          reservationIdName, planName, reservationPath);\n      trx.setData(reservationPath, reservationData, -1);\n    } else {\n      LOG.debug(\"Storing reservation: {} in plan:{} at: {}\",\n          reservationIdName, planName, reservationPath);\n      trx.create(reservationPath, reservationData, zkAcl,\n          CreateMode.PERSISTENT);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "f271d377357ad680924d19f07e6c8315e7c89bae": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3736. Add RMStateStore apis to store and load accepted reservations for failover (adhoot via asuresh)\n",
      "commitDate": "05/08/15 12:57 PM",
      "commitName": "f271d377357ad680924d19f07e6c8315e7c89bae",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,32 @@\n+  private void addOrUpdateReservationState(\n+      ReservationAllocationStateProto reservationAllocation, String planName,\n+      String reservationIdName, SafeTransaction trx, boolean isUpdate)\n+      throws Exception {\n+    String planCreatePath \u003d\n+        getNodePath(reservationRoot, planName);\n+    String reservationPath \u003d getNodePath(planCreatePath,\n+        reservationIdName);\n+    byte[] reservationData \u003d reservationAllocation.toByteArray();\n+\n+    if (!exists(planCreatePath)) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Creating plan node: \" + planName + \" at: \" + planCreatePath);\n+      }\n+      trx.create(planCreatePath, null, zkAcl, CreateMode.PERSISTENT);\n+    }\n+\n+    if (isUpdate) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Updating reservation: \" + reservationIdName + \" in plan:\"\n+            + planName + \" at: \" + reservationPath);\n+      }\n+      trx.setData(reservationPath, reservationData, -1);\n+    } else {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Storing reservation: \" + reservationIdName + \" in plan:\"\n+            + planName + \" at: \" + reservationPath);\n+      }\n+      trx.create(reservationPath, reservationData, zkAcl,\n+          CreateMode.PERSISTENT);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addOrUpdateReservationState(\n      ReservationAllocationStateProto reservationAllocation, String planName,\n      String reservationIdName, SafeTransaction trx, boolean isUpdate)\n      throws Exception {\n    String planCreatePath \u003d\n        getNodePath(reservationRoot, planName);\n    String reservationPath \u003d getNodePath(planCreatePath,\n        reservationIdName);\n    byte[] reservationData \u003d reservationAllocation.toByteArray();\n\n    if (!exists(planCreatePath)) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Creating plan node: \" + planName + \" at: \" + planCreatePath);\n      }\n      trx.create(planCreatePath, null, zkAcl, CreateMode.PERSISTENT);\n    }\n\n    if (isUpdate) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Updating reservation: \" + reservationIdName + \" in plan:\"\n            + planName + \" at: \" + reservationPath);\n      }\n      trx.setData(reservationPath, reservationData, -1);\n    } else {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Storing reservation: \" + reservationIdName + \" in plan:\"\n            + planName + \" at: \" + reservationPath);\n      }\n      trx.create(reservationPath, reservationData, zkAcl,\n          CreateMode.PERSISTENT);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java"
    }
  }
}