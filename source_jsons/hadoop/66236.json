{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SLSRunner.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java",
  "functionStartLine": 380,
  "functionEndLine": 399,
  "numCommitsSeen": 40,
  "timeTaken": 1155,
  "changeHistory": [
    "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
    "fd24fd0ff771a6cba3097179fbb040d3b4f2a2d1"
  ],
  "changeHistoryShort": {
    "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53": "Ybodychange",
    "fd24fd0ff771a6cba3097179fbb040d3b4f2a2d1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8175. Add support for Node Labels in SLS. Contributed by Abhishek Modi.\n",
      "commitDate": "31/07/18 9:36 AM",
      "commitName": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "26/04/18 1:52 PM",
      "commitNameOld": "2adda92de1535c0472c0df33a145fa1814703f4f",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 95.82,
      "commitsBetweenForRepo": 689,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n         @Override public void run() {\n           try {\n             // we randomize the heartbeat start time from zero to 1 interval\n             NMSimulator nm \u003d new NMSimulator();\n             Resource nmResource \u003d nodeManagerResource;\n-            String hostName \u003d entry.getKey();\n-            if (entry.getValue() !\u003d null) {\n-              nmResource \u003d entry.getValue();\n+            String hostName \u003d nodeDetails.getHostname();\n+            if (nodeDetails.getNodeResource() !\u003d null) {\n+              nmResource \u003d nodeDetails.getNodeResource();\n             }\n+            Set\u003cNodeLabel\u003e nodeLabels \u003d nodeDetails.getLabels();\n             nm.init(hostName, nmResource,\n                 random.nextInt(heartbeatInterval),\n-                heartbeatInterval, rm, resourceUtilizationRatio);\n+                heartbeatInterval, rm, resourceUtilizationRatio, nodeLabels);\n             nmMap.put(nm.getNode().getNodeID(), nm);\n             runner.schedule(nm);\n             rackSet.add(nm.getNode().getRackName());\n           } catch (IOException | YarnException e) {\n             LOG.error(\"Got an error while adding node\", e);\n           }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        @Override public void run() {\n          try {\n            // we randomize the heartbeat start time from zero to 1 interval\n            NMSimulator nm \u003d new NMSimulator();\n            Resource nmResource \u003d nodeManagerResource;\n            String hostName \u003d nodeDetails.getHostname();\n            if (nodeDetails.getNodeResource() !\u003d null) {\n              nmResource \u003d nodeDetails.getNodeResource();\n            }\n            Set\u003cNodeLabel\u003e nodeLabels \u003d nodeDetails.getLabels();\n            nm.init(hostName, nmResource,\n                random.nextInt(heartbeatInterval),\n                heartbeatInterval, rm, resourceUtilizationRatio, nodeLabels);\n            nmMap.put(nm.getNode().getNodeID(), nm);\n            runner.schedule(nm);\n            rackSet.add(nm.getNode().getRackName());\n          } catch (IOException | YarnException e) {\n            LOG.error(\"Got an error while adding node\", e);\n          }\n        }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java",
      "extendedDetails": {}
    },
    "fd24fd0ff771a6cba3097179fbb040d3b4f2a2d1": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8137. Parallelize node addition in SLS. Contributed by Abhishek Modi.\n",
      "commitDate": "20/04/18 9:09 AM",
      "commitName": "fd24fd0ff771a6cba3097179fbb040d3b4f2a2d1",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,19 @@\n+        @Override public void run() {\n+          try {\n+            // we randomize the heartbeat start time from zero to 1 interval\n+            NMSimulator nm \u003d new NMSimulator();\n+            Resource nmResource \u003d nodeManagerResource;\n+            String hostName \u003d entry.getKey();\n+            if (entry.getValue() !\u003d null) {\n+              nmResource \u003d entry.getValue();\n+            }\n+            nm.init(hostName, nmResource,\n+                random.nextInt(heartbeatInterval),\n+                heartbeatInterval, rm, resourceUtilizationRatio);\n+            nmMap.put(nm.getNode().getNodeID(), nm);\n+            runner.schedule(nm);\n+            rackSet.add(nm.getNode().getRackName());\n+          } catch (IOException | YarnException e) {\n+            LOG.error(\"Got an error while adding node\", e);\n+          }\n+        }\n\\ No newline at end of file\n",
      "actualSource": "        @Override public void run() {\n          try {\n            // we randomize the heartbeat start time from zero to 1 interval\n            NMSimulator nm \u003d new NMSimulator();\n            Resource nmResource \u003d nodeManagerResource;\n            String hostName \u003d entry.getKey();\n            if (entry.getValue() !\u003d null) {\n              nmResource \u003d entry.getValue();\n            }\n            nm.init(hostName, nmResource,\n                random.nextInt(heartbeatInterval),\n                heartbeatInterval, rm, resourceUtilizationRatio);\n            nmMap.put(nm.getNode().getNodeID(), nm);\n            runner.schedule(nm);\n            rackSet.add(nm.getNode().getRackName());\n          } catch (IOException | YarnException e) {\n            LOG.error(\"Got an error while adding node\", e);\n          }\n        }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java"
    }
  }
}