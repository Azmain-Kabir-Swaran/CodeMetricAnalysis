{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GenericOptionsParser.java",
  "functionName": "getLibJars",
  "functionId": "getLibJars___conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/GenericOptionsParser.java",
  "functionStartLine": 366,
  "functionEndLine": 383,
  "numCommitsSeen": 36,
  "timeTaken": 1383,
  "changeHistory": [
    "0ad48aa2c8f41196743305c711ea19cc48f186da",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "d97ab376d2d2c5ae1173141037c2c5eb85dd7f18",
    "a5427fc7eb4155437261cbcf55144f6f82675809",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "0ad48aa2c8f41196743305c711ea19cc48f186da": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "d97ab376d2d2c5ae1173141037c2c5eb85dd7f18": "Ybodychange",
    "a5427fc7eb4155437261cbcf55144f6f82675809": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0ad48aa2c8f41196743305c711ea19cc48f186da": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12747. support wildcard in libjars argument (sjlee)\n",
      "commitDate": "08/08/16 5:34 PM",
      "commitName": "0ad48aa2c8f41196743305c711ea19cc48f186da",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "14/06/16 3:31 AM",
      "commitNameOld": "8e8cb4c6ca7e803674b160946ac92274bac0f96d",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 55.59,
      "commitsBetweenForRepo": 500,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public static URL[] getLibJars(Configuration conf) throws IOException {\n     String jars \u003d conf.get(\"tmpjars\");\n-    if(jars\u003d\u003dnull) {\n+    if (jars \u003d\u003d null || jars.trim().isEmpty()) {\n       return null;\n     }\n     String[] files \u003d jars.split(\",\");\n     List\u003cURL\u003e cp \u003d new ArrayList\u003cURL\u003e();\n     for (String file : files) {\n       Path tmp \u003d new Path(file);\n       if (tmp.getFileSystem(conf).equals(FileSystem.getLocal(conf))) {\n         cp.add(FileSystem.getLocal(conf).pathToFile(tmp).toURI().toURL());\n       } else {\n         LOG.warn(\"The libjars file \" + tmp + \" is not on the local \" +\n-          \"filesystem. Ignoring.\");\n+            \"filesystem. It will not be added to the local classpath.\");\n       }\n     }\n     return cp.toArray(new URL[0]);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static URL[] getLibJars(Configuration conf) throws IOException {\n    String jars \u003d conf.get(\"tmpjars\");\n    if (jars \u003d\u003d null || jars.trim().isEmpty()) {\n      return null;\n    }\n    String[] files \u003d jars.split(\",\");\n    List\u003cURL\u003e cp \u003d new ArrayList\u003cURL\u003e();\n    for (String file : files) {\n      Path tmp \u003d new Path(file);\n      if (tmp.getFileSystem(conf).equals(FileSystem.getLocal(conf))) {\n        cp.add(FileSystem.getLocal(conf).pathToFile(tmp).toURI().toURL());\n      } else {\n        LOG.warn(\"The libjars file \" + tmp + \" is not on the local \" +\n            \"filesystem. It will not be added to the local classpath.\");\n      }\n    }\n    return cp.toArray(new URL[0]);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/GenericOptionsParser.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static URL[] getLibJars(Configuration conf) throws IOException {\n    String jars \u003d conf.get(\"tmpjars\");\n    if(jars\u003d\u003dnull) {\n      return null;\n    }\n    String[] files \u003d jars.split(\",\");\n    List\u003cURL\u003e cp \u003d new ArrayList\u003cURL\u003e();\n    for (String file : files) {\n      Path tmp \u003d new Path(file);\n      if (tmp.getFileSystem(conf).equals(FileSystem.getLocal(conf))) {\n        cp.add(FileSystem.getLocal(conf).pathToFile(tmp).toURI().toURL());\n      } else {\n        LOG.warn(\"The libjars file \" + tmp + \" is not on the local \" +\n          \"filesystem. Ignoring.\");\n      }\n    }\n    return cp.toArray(new URL[0]);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/GenericOptionsParser.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/util/GenericOptionsParser.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/GenericOptionsParser.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static URL[] getLibJars(Configuration conf) throws IOException {\n    String jars \u003d conf.get(\"tmpjars\");\n    if(jars\u003d\u003dnull) {\n      return null;\n    }\n    String[] files \u003d jars.split(\",\");\n    List\u003cURL\u003e cp \u003d new ArrayList\u003cURL\u003e();\n    for (String file : files) {\n      Path tmp \u003d new Path(file);\n      if (tmp.getFileSystem(conf).equals(FileSystem.getLocal(conf))) {\n        cp.add(FileSystem.getLocal(conf).pathToFile(tmp).toURI().toURL());\n      } else {\n        LOG.warn(\"The libjars file \" + tmp + \" is not on the local \" +\n          \"filesystem. Ignoring.\");\n      }\n    }\n    return cp.toArray(new URL[0]);\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/util/GenericOptionsParser.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/util/GenericOptionsParser.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/util/GenericOptionsParser.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static URL[] getLibJars(Configuration conf) throws IOException {\n    String jars \u003d conf.get(\"tmpjars\");\n    if(jars\u003d\u003dnull) {\n      return null;\n    }\n    String[] files \u003d jars.split(\",\");\n    List\u003cURL\u003e cp \u003d new ArrayList\u003cURL\u003e();\n    for (String file : files) {\n      Path tmp \u003d new Path(file);\n      if (tmp.getFileSystem(conf).equals(FileSystem.getLocal(conf))) {\n        cp.add(FileSystem.getLocal(conf).pathToFile(tmp).toURI().toURL());\n      } else {\n        LOG.warn(\"The libjars file \" + tmp + \" is not on the local \" +\n          \"filesystem. Ignoring.\");\n      }\n    }\n    return cp.toArray(new URL[0]);\n  }",
      "path": "common/src/java/org/apache/hadoop/util/GenericOptionsParser.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/util/GenericOptionsParser.java",
        "newPath": "common/src/java/org/apache/hadoop/util/GenericOptionsParser.java"
      }
    },
    "d97ab376d2d2c5ae1173141037c2c5eb85dd7f18": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7112. Issue a warning when GenericOptionsParser libjars are not on local filesystem.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1075554 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/02/11 1:48 PM",
      "commitName": "d97ab376d2d2c5ae1173141037c2c5eb85dd7f18",
      "commitAuthor": "Thomas White",
      "commitDateOld": "28/08/10 3:44 PM",
      "commitNameOld": "7efb9640be26aabe3878310e82248a1b6b767a9a",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 183.96,
      "commitsBetweenForRepo": 139,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,18 @@\n   public static URL[] getLibJars(Configuration conf) throws IOException {\n     String jars \u003d conf.get(\"tmpjars\");\n     if(jars\u003d\u003dnull) {\n       return null;\n     }\n     String[] files \u003d jars.split(\",\");\n     List\u003cURL\u003e cp \u003d new ArrayList\u003cURL\u003e();\n     for (String file : files) {\n       Path tmp \u003d new Path(file);\n       if (tmp.getFileSystem(conf).equals(FileSystem.getLocal(conf))) {\n         cp.add(FileSystem.getLocal(conf).pathToFile(tmp).toURI().toURL());\n+      } else {\n+        LOG.warn(\"The libjars file \" + tmp + \" is not on the local \" +\n+          \"filesystem. Ignoring.\");\n       }\n     }\n     return cp.toArray(new URL[0]);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static URL[] getLibJars(Configuration conf) throws IOException {\n    String jars \u003d conf.get(\"tmpjars\");\n    if(jars\u003d\u003dnull) {\n      return null;\n    }\n    String[] files \u003d jars.split(\",\");\n    List\u003cURL\u003e cp \u003d new ArrayList\u003cURL\u003e();\n    for (String file : files) {\n      Path tmp \u003d new Path(file);\n      if (tmp.getFileSystem(conf).equals(FileSystem.getLocal(conf))) {\n        cp.add(FileSystem.getLocal(conf).pathToFile(tmp).toURI().toURL());\n      } else {\n        LOG.warn(\"The libjars file \" + tmp + \" is not on the local \" +\n          \"filesystem. Ignoring.\");\n      }\n    }\n    return cp.toArray(new URL[0]);\n  }",
      "path": "src/java/org/apache/hadoop/util/GenericOptionsParser.java",
      "extendedDetails": {}
    },
    "a5427fc7eb4155437261cbcf55144f6f82675809": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6334.  Fix GenericOptionsParser and Path to have a better URI support.  Contributed by Amareshwari Sriramadasu\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@831412 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/10/09 11:21 AM",
      "commitName": "a5427fc7eb4155437261cbcf55144f6f82675809",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "27/08/09 6:55 AM",
      "commitNameOld": "aa10f303e3cb5b8b533e3407a6be6d2b4d81217c",
      "commitAuthorOld": "Sharad Agarwal",
      "daysBetweenCommits": 64.18,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n   public static URL[] getLibJars(Configuration conf) throws IOException {\n     String jars \u003d conf.get(\"tmpjars\");\n     if(jars\u003d\u003dnull) {\n       return null;\n     }\n     String[] files \u003d jars.split(\",\");\n-    URL[] cp \u003d new URL[files.length];\n-    for (int i\u003d0;i\u003ccp.length;i++) {\n-      Path tmp \u003d new Path(files[i]);\n-      cp[i] \u003d FileSystem.getLocal(conf).pathToFile(tmp).toURI().toURL();\n+    List\u003cURL\u003e cp \u003d new ArrayList\u003cURL\u003e();\n+    for (String file : files) {\n+      Path tmp \u003d new Path(file);\n+      if (tmp.getFileSystem(conf).equals(FileSystem.getLocal(conf))) {\n+        cp.add(FileSystem.getLocal(conf).pathToFile(tmp).toURI().toURL());\n+      }\n     }\n-    return cp;\n+    return cp.toArray(new URL[0]);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static URL[] getLibJars(Configuration conf) throws IOException {\n    String jars \u003d conf.get(\"tmpjars\");\n    if(jars\u003d\u003dnull) {\n      return null;\n    }\n    String[] files \u003d jars.split(\",\");\n    List\u003cURL\u003e cp \u003d new ArrayList\u003cURL\u003e();\n    for (String file : files) {\n      Path tmp \u003d new Path(file);\n      if (tmp.getFileSystem(conf).equals(FileSystem.getLocal(conf))) {\n        cp.add(FileSystem.getLocal(conf).pathToFile(tmp).toURI().toURL());\n      }\n    }\n    return cp.toArray(new URL[0]);\n  }",
      "path": "src/java/org/apache/hadoop/util/GenericOptionsParser.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,13 @@\n+  public static URL[] getLibJars(Configuration conf) throws IOException {\n+    String jars \u003d conf.get(\"tmpjars\");\n+    if(jars\u003d\u003dnull) {\n+      return null;\n+    }\n+    String[] files \u003d jars.split(\",\");\n+    URL[] cp \u003d new URL[files.length];\n+    for (int i\u003d0;i\u003ccp.length;i++) {\n+      Path tmp \u003d new Path(files[i]);\n+      cp[i] \u003d FileSystem.getLocal(conf).pathToFile(tmp).toURI().toURL();\n+    }\n+    return cp;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static URL[] getLibJars(Configuration conf) throws IOException {\n    String jars \u003d conf.get(\"tmpjars\");\n    if(jars\u003d\u003dnull) {\n      return null;\n    }\n    String[] files \u003d jars.split(\",\");\n    URL[] cp \u003d new URL[files.length];\n    for (int i\u003d0;i\u003ccp.length;i++) {\n      Path tmp \u003d new Path(files[i]);\n      cp[i] \u003d FileSystem.getLocal(conf).pathToFile(tmp).toURI().toURL();\n    }\n    return cp;\n  }",
      "path": "src/java/org/apache/hadoop/util/GenericOptionsParser.java"
    }
  }
}