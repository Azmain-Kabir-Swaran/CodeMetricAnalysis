{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProtoUtil.java",
  "functionName": "makeRpcRequestHeader",
  "functionId": "makeRpcRequestHeader___rpcKind-RPC.RpcKind__operation-RpcRequestHeaderProto.OperationProto__callId-int__retryCount-int__uuid-byte[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ProtoUtil.java",
  "functionStartLine": 166,
  "functionEndLine": 171,
  "numCommitsSeen": 30,
  "timeTaken": 3506,
  "changeHistory": [
    "9bf0696c7348879678693176da0071628ca42566",
    "3cde6931cb5055a9d92503f4ecefa35571e7b07f",
    "600ad7bf4104bcaeec00a4089d59bb1fdf423299",
    "892ade689f9bcce76daae8f66fc00a49bee8548e",
    "6962510f729717f776929708813f99a28e582f34",
    "8724ceb2359af66c800043e665c17a2a30981c7d",
    "eb2a60338715e517ba8e4d32ecfe28691a882188",
    "aa4fe26a01d2ca881cb458d49032ce419351bed1",
    "589c68ae09effd6c4f26505d61636f779c22e99f"
  ],
  "changeHistoryShort": {
    "9bf0696c7348879678693176da0071628ca42566": "Ybodychange",
    "3cde6931cb5055a9d92503f4ecefa35571e7b07f": "Ybodychange",
    "600ad7bf4104bcaeec00a4089d59bb1fdf423299": "Ybodychange",
    "892ade689f9bcce76daae8f66fc00a49bee8548e": "Ybodychange",
    "6962510f729717f776929708813f99a28e582f34": "Ybodychange",
    "8724ceb2359af66c800043e665c17a2a30981c7d": "Ymultichange(Yparameterchange,Ybodychange)",
    "eb2a60338715e517ba8e4d32ecfe28691a882188": "Ymultichange(Yparameterchange,Ybodychange)",
    "aa4fe26a01d2ca881cb458d49032ce419351bed1": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "589c68ae09effd6c4f26505d61636f779c22e99f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9bf0696c7348879678693176da0071628ca42566": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13331. [SBN read] Add lastSeenStateId to RpcRequestHeader. Contributed by Plamen Jeliazkov.\n",
      "commitDate": "24/12/18 9:33 AM",
      "commitName": "9bf0696c7348879678693176da0071628ca42566",
      "commitAuthor": "Erik Krogen",
      "commitDateOld": "31/05/16 5:41 PM",
      "commitNameOld": "93d8a7f2a2d72a1719d02b1ed90678397900b6ed",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 936.7,
      "commitsBetweenForRepo": 7194,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,6 @@\n   public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n       RpcRequestHeaderProto.OperationProto operation, int callId,\n       int retryCount, byte[] uuid) {\n-    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n-    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n-        .setRetryCount(retryCount).setClientId(ByteString.copyFrom(uuid));\n-\n-    // Add tracing info if we are currently tracing.\n-    Span span \u003d Tracer.getCurrentSpan();\n-    if (span !\u003d null) {\n-      result.setTraceInfo(RPCTraceInfoProto.newBuilder()\n-          .setTraceId(span.getSpanId().getHigh())\n-          .setParentId(span.getSpanId().getLow())\n-            .build());\n-    }\n-\n-    // Add caller context if it is not null\n-    CallerContext callerContext \u003d CallerContext.getCurrent();\n-    if (callerContext !\u003d null \u0026\u0026 callerContext.isContextValid()) {\n-      RPCCallerContextProto.Builder contextBuilder \u003d RPCCallerContextProto\n-          .newBuilder().setContext(callerContext.getContext());\n-      if (callerContext.getSignature() !\u003d null) {\n-        contextBuilder.setSignature(\n-            ByteString.copyFrom(callerContext.getSignature()));\n-      }\n-      result.setCallerContext(contextBuilder);\n-    }\n-\n-    return result.build();\n+    return makeRpcRequestHeader(rpcKind, operation, callId, retryCount, uuid,\n+        null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n      RpcRequestHeaderProto.OperationProto operation, int callId,\n      int retryCount, byte[] uuid) {\n    return makeRpcRequestHeader(rpcKind, operation, callId, retryCount, uuid,\n        null);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ProtoUtil.java",
      "extendedDetails": {}
    },
    "3cde6931cb5055a9d92503f4ecefa35571e7b07f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9343. Empty caller context considered invalid. (Contributed by Mingliang Liu)\n",
      "commitDate": "01/11/15 3:35 PM",
      "commitName": "3cde6931cb5055a9d92503f4ecefa35571e7b07f",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "23/10/15 12:15 PM",
      "commitNameOld": "600ad7bf4104bcaeec00a4089d59bb1fdf423299",
      "commitAuthorOld": "Jitendra Pandey",
      "daysBetweenCommits": 9.18,
      "commitsBetweenForRepo": 94,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n       RpcRequestHeaderProto.OperationProto operation, int callId,\n       int retryCount, byte[] uuid) {\n     RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n     result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n         .setRetryCount(retryCount).setClientId(ByteString.copyFrom(uuid));\n \n     // Add tracing info if we are currently tracing.\n     Span span \u003d Tracer.getCurrentSpan();\n     if (span !\u003d null) {\n       result.setTraceInfo(RPCTraceInfoProto.newBuilder()\n           .setTraceId(span.getSpanId().getHigh())\n           .setParentId(span.getSpanId().getLow())\n             .build());\n     }\n \n     // Add caller context if it is not null\n     CallerContext callerContext \u003d CallerContext.getCurrent();\n-    if (callerContext !\u003d null \u0026\u0026 callerContext.isValid()) {\n+    if (callerContext !\u003d null \u0026\u0026 callerContext.isContextValid()) {\n       RPCCallerContextProto.Builder contextBuilder \u003d RPCCallerContextProto\n           .newBuilder().setContext(callerContext.getContext());\n       if (callerContext.getSignature() !\u003d null) {\n         contextBuilder.setSignature(\n             ByteString.copyFrom(callerContext.getSignature()));\n       }\n       result.setCallerContext(contextBuilder);\n     }\n \n     return result.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n      RpcRequestHeaderProto.OperationProto operation, int callId,\n      int retryCount, byte[] uuid) {\n    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n        .setRetryCount(retryCount).setClientId(ByteString.copyFrom(uuid));\n\n    // Add tracing info if we are currently tracing.\n    Span span \u003d Tracer.getCurrentSpan();\n    if (span !\u003d null) {\n      result.setTraceInfo(RPCTraceInfoProto.newBuilder()\n          .setTraceId(span.getSpanId().getHigh())\n          .setParentId(span.getSpanId().getLow())\n            .build());\n    }\n\n    // Add caller context if it is not null\n    CallerContext callerContext \u003d CallerContext.getCurrent();\n    if (callerContext !\u003d null \u0026\u0026 callerContext.isContextValid()) {\n      RPCCallerContextProto.Builder contextBuilder \u003d RPCCallerContextProto\n          .newBuilder().setContext(callerContext.getContext());\n      if (callerContext.getSignature() !\u003d null) {\n        contextBuilder.setSignature(\n            ByteString.copyFrom(callerContext.getSignature()));\n      }\n      result.setCallerContext(contextBuilder);\n    }\n\n    return result.build();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ProtoUtil.java",
      "extendedDetails": {}
    },
    "600ad7bf4104bcaeec00a4089d59bb1fdf423299": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9184. Logging HDFS operation\u0027s caller context into audit logs. Contributed by Mingliang Liu.\n",
      "commitDate": "23/10/15 12:15 PM",
      "commitName": "600ad7bf4104bcaeec00a4089d59bb1fdf423299",
      "commitAuthor": "Jitendra Pandey",
      "commitDateOld": "28/09/15 7:42 AM",
      "commitNameOld": "892ade689f9bcce76daae8f66fc00a49bee8548e",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 25.19,
      "commitsBetweenForRepo": 200,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,30 @@\n   public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n       RpcRequestHeaderProto.OperationProto operation, int callId,\n       int retryCount, byte[] uuid) {\n     RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n     result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n         .setRetryCount(retryCount).setClientId(ByteString.copyFrom(uuid));\n \n     // Add tracing info if we are currently tracing.\n     Span span \u003d Tracer.getCurrentSpan();\n     if (span !\u003d null) {\n       result.setTraceInfo(RPCTraceInfoProto.newBuilder()\n           .setTraceId(span.getSpanId().getHigh())\n           .setParentId(span.getSpanId().getLow())\n             .build());\n     }\n \n+    // Add caller context if it is not null\n+    CallerContext callerContext \u003d CallerContext.getCurrent();\n+    if (callerContext !\u003d null \u0026\u0026 callerContext.isValid()) {\n+      RPCCallerContextProto.Builder contextBuilder \u003d RPCCallerContextProto\n+          .newBuilder().setContext(callerContext.getContext());\n+      if (callerContext.getSignature() !\u003d null) {\n+        contextBuilder.setSignature(\n+            ByteString.copyFrom(callerContext.getSignature()));\n+      }\n+      result.setCallerContext(contextBuilder);\n+    }\n+\n     return result.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n      RpcRequestHeaderProto.OperationProto operation, int callId,\n      int retryCount, byte[] uuid) {\n    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n        .setRetryCount(retryCount).setClientId(ByteString.copyFrom(uuid));\n\n    // Add tracing info if we are currently tracing.\n    Span span \u003d Tracer.getCurrentSpan();\n    if (span !\u003d null) {\n      result.setTraceInfo(RPCTraceInfoProto.newBuilder()\n          .setTraceId(span.getSpanId().getHigh())\n          .setParentId(span.getSpanId().getLow())\n            .build());\n    }\n\n    // Add caller context if it is not null\n    CallerContext callerContext \u003d CallerContext.getCurrent();\n    if (callerContext !\u003d null \u0026\u0026 callerContext.isValid()) {\n      RPCCallerContextProto.Builder contextBuilder \u003d RPCCallerContextProto\n          .newBuilder().setContext(callerContext.getContext());\n      if (callerContext.getSignature() !\u003d null) {\n        contextBuilder.setSignature(\n            ByteString.copyFrom(callerContext.getSignature()));\n      }\n      result.setCallerContext(contextBuilder);\n    }\n\n    return result.build();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ProtoUtil.java",
      "extendedDetails": {}
    },
    "892ade689f9bcce76daae8f66fc00a49bee8548e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9080. Update htrace version to 4.0.1 (cmccabe)\n",
      "commitDate": "28/09/15 7:42 AM",
      "commitName": "892ade689f9bcce76daae8f66fc00a49bee8548e",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "30/01/15 4:01 PM",
      "commitNameOld": "09ad9a868a89922e9b55b3e7c5b9f41fa54d3770",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 240.61,
      "commitsBetweenForRepo": 1895,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n       RpcRequestHeaderProto.OperationProto operation, int callId,\n       int retryCount, byte[] uuid) {\n     RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n     result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n         .setRetryCount(retryCount).setClientId(ByteString.copyFrom(uuid));\n \n     // Add tracing info if we are currently tracing.\n-    if (Trace.isTracing()) {\n-      Span s \u003d Trace.currentSpan();\n+    Span span \u003d Tracer.getCurrentSpan();\n+    if (span !\u003d null) {\n       result.setTraceInfo(RPCTraceInfoProto.newBuilder()\n-          .setParentId(s.getSpanId())\n-          .setTraceId(s.getTraceId()).build());\n+          .setTraceId(span.getSpanId().getHigh())\n+          .setParentId(span.getSpanId().getLow())\n+            .build());\n     }\n \n     return result.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n      RpcRequestHeaderProto.OperationProto operation, int callId,\n      int retryCount, byte[] uuid) {\n    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n        .setRetryCount(retryCount).setClientId(ByteString.copyFrom(uuid));\n\n    // Add tracing info if we are currently tracing.\n    Span span \u003d Tracer.getCurrentSpan();\n    if (span !\u003d null) {\n      result.setTraceInfo(RPCTraceInfoProto.newBuilder()\n          .setTraceId(span.getSpanId().getHigh())\n          .setParentId(span.getSpanId().getLow())\n            .build());\n    }\n\n    return result.build();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ProtoUtil.java",
      "extendedDetails": {}
    },
    "6962510f729717f776929708813f99a28e582f34": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6879. Adding tracing to Hadoop RPC.  Contributed by Masatake Iwasaki.\n",
      "commitDate": "27/08/14 2:12 PM",
      "commitName": "6962510f729717f776929708813f99a28e582f34",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "18/07/13 4:44 PM",
      "commitNameOld": "8724ceb2359af66c800043e665c17a2a30981c7d",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 404.89,
      "commitsBetweenForRepo": 2793,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,17 @@\n   public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n       RpcRequestHeaderProto.OperationProto operation, int callId,\n       int retryCount, byte[] uuid) {\n     RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n     result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n         .setRetryCount(retryCount).setClientId(ByteString.copyFrom(uuid));\n+\n+    // Add tracing info if we are currently tracing.\n+    if (Trace.isTracing()) {\n+      Span s \u003d Trace.currentSpan();\n+      result.setTraceInfo(RPCTraceInfoProto.newBuilder()\n+          .setParentId(s.getSpanId())\n+          .setTraceId(s.getTraceId()).build());\n+    }\n+\n     return result.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n      RpcRequestHeaderProto.OperationProto operation, int callId,\n      int retryCount, byte[] uuid) {\n    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n        .setRetryCount(retryCount).setClientId(ByteString.copyFrom(uuid));\n\n    // Add tracing info if we are currently tracing.\n    if (Trace.isTracing()) {\n      Span s \u003d Trace.currentSpan();\n      result.setTraceInfo(RPCTraceInfoProto.newBuilder()\n          .setParentId(s.getSpanId())\n          .setTraceId(s.getTraceId()).build());\n    }\n\n    return result.build();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ProtoUtil.java",
      "extendedDetails": {}
    },
    "8724ceb2359af66c800043e665c17a2a30981c7d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-9717. Add retry attempt count to the RPC requests. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1504725 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/07/13 4:44 PM",
      "commitName": "8724ceb2359af66c800043e665c17a2a30981c7d",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-9717. Add retry attempt count to the RPC requests. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1504725 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/07/13 4:44 PM",
          "commitName": "8724ceb2359af66c800043e665c17a2a30981c7d",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "08/07/13 10:08 AM",
          "commitNameOld": "eb2a60338715e517ba8e4d32ecfe28691a882188",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 10.28,
          "commitsBetweenForRepo": 73,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,8 @@\n   public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n-      RpcRequestHeaderProto.OperationProto operation, int callId, byte[] uuid) {\n+      RpcRequestHeaderProto.OperationProto operation, int callId,\n+      int retryCount, byte[] uuid) {\n     RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n     result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n-        .setClientId(ByteString.copyFrom(uuid));\n+        .setRetryCount(retryCount).setClientId(ByteString.copyFrom(uuid));\n     return result.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n      RpcRequestHeaderProto.OperationProto operation, int callId,\n      int retryCount, byte[] uuid) {\n    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n        .setRetryCount(retryCount).setClientId(ByteString.copyFrom(uuid));\n    return result.build();\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ProtoUtil.java",
          "extendedDetails": {
            "oldValue": "[rpcKind-RPC.RpcKind, operation-RpcRequestHeaderProto.OperationProto, callId-int, uuid-byte[]]",
            "newValue": "[rpcKind-RPC.RpcKind, operation-RpcRequestHeaderProto.OperationProto, callId-int, retryCount-int, uuid-byte[]]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-9717. Add retry attempt count to the RPC requests. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1504725 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/07/13 4:44 PM",
          "commitName": "8724ceb2359af66c800043e665c17a2a30981c7d",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "08/07/13 10:08 AM",
          "commitNameOld": "eb2a60338715e517ba8e4d32ecfe28691a882188",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 10.28,
          "commitsBetweenForRepo": 73,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,8 @@\n   public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n-      RpcRequestHeaderProto.OperationProto operation, int callId, byte[] uuid) {\n+      RpcRequestHeaderProto.OperationProto operation, int callId,\n+      int retryCount, byte[] uuid) {\n     RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n     result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n-        .setClientId(ByteString.copyFrom(uuid));\n+        .setRetryCount(retryCount).setClientId(ByteString.copyFrom(uuid));\n     return result.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n      RpcRequestHeaderProto.OperationProto operation, int callId,\n      int retryCount, byte[] uuid) {\n    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n        .setRetryCount(retryCount).setClientId(ByteString.copyFrom(uuid));\n    return result.build();\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ProtoUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "eb2a60338715e517ba8e4d32ecfe28691a882188": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-9688. Add globally unique Client ID to RPC requests. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1500843 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/07/13 10:08 AM",
      "commitName": "eb2a60338715e517ba8e4d32ecfe28691a882188",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-9688. Add globally unique Client ID to RPC requests. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1500843 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/07/13 10:08 AM",
          "commitName": "eb2a60338715e517ba8e4d32ecfe28691a882188",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "21/06/13 1:09 PM",
          "commitNameOld": "5f9b4c14a175873b4f82654513e289c657c694eb",
          "commitAuthorOld": "Daryn Sharp",
          "daysBetweenCommits": 16.87,
          "commitsBetweenForRepo": 50,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,7 @@\n   public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n-      RpcRequestHeaderProto.OperationProto operation, int callId) {\n+      RpcRequestHeaderProto.OperationProto operation, int callId, byte[] uuid) {\n     RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n-    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId);\n+    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n+        .setClientId(ByteString.copyFrom(uuid));\n     return result.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n      RpcRequestHeaderProto.OperationProto operation, int callId, byte[] uuid) {\n    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n        .setClientId(ByteString.copyFrom(uuid));\n    return result.build();\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ProtoUtil.java",
          "extendedDetails": {
            "oldValue": "[rpcKind-RPC.RpcKind, operation-RpcRequestHeaderProto.OperationProto, callId-int]",
            "newValue": "[rpcKind-RPC.RpcKind, operation-RpcRequestHeaderProto.OperationProto, callId-int, uuid-byte[]]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-9688. Add globally unique Client ID to RPC requests. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1500843 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/07/13 10:08 AM",
          "commitName": "eb2a60338715e517ba8e4d32ecfe28691a882188",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "21/06/13 1:09 PM",
          "commitNameOld": "5f9b4c14a175873b4f82654513e289c657c694eb",
          "commitAuthorOld": "Daryn Sharp",
          "daysBetweenCommits": 16.87,
          "commitsBetweenForRepo": 50,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,7 @@\n   public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n-      RpcRequestHeaderProto.OperationProto operation, int callId) {\n+      RpcRequestHeaderProto.OperationProto operation, int callId, byte[] uuid) {\n     RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n-    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId);\n+    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n+        .setClientId(ByteString.copyFrom(uuid));\n     return result.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n      RpcRequestHeaderProto.OperationProto operation, int callId, byte[] uuid) {\n    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n        .setClientId(ByteString.copyFrom(uuid));\n    return result.build();\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ProtoUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "aa4fe26a01d2ca881cb458d49032ce419351bed1": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HADOOP-9140 Cleanup rpc PB protos (sanjay Radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1423189 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/12/12 2:16 PM",
      "commitName": "aa4fe26a01d2ca881cb458d49032ce419351bed1",
      "commitAuthor": "Sanjay Radia",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-9140 Cleanup rpc PB protos (sanjay Radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1423189 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/12/12 2:16 PM",
          "commitName": "aa4fe26a01d2ca881cb458d49032ce419351bed1",
          "commitAuthor": "Sanjay Radia",
          "commitDateOld": "23/04/12 9:34 AM",
          "commitNameOld": "589c68ae09effd6c4f26505d61636f779c22e99f",
          "commitAuthorOld": "Sanjay Radia",
          "daysBetweenCommits": 238.24,
          "commitsBetweenForRepo": 1306,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  public static RpcPayloadHeaderProto makeRpcPayloadHeader(RPC.RpcKind rpcKind,\n-      RpcPayloadOperationProto operation, int callId) {\n-    RpcPayloadHeaderProto.Builder result \u003d RpcPayloadHeaderProto.newBuilder();\n+  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n+      RpcRequestHeaderProto.OperationProto operation, int callId) {\n+    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n     result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId);\n     return result.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n      RpcRequestHeaderProto.OperationProto operation, int callId) {\n    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId);\n    return result.build();\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ProtoUtil.java",
          "extendedDetails": {
            "oldValue": "makeRpcPayloadHeader",
            "newValue": "makeRpcRequestHeader"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-9140 Cleanup rpc PB protos (sanjay Radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1423189 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/12/12 2:16 PM",
          "commitName": "aa4fe26a01d2ca881cb458d49032ce419351bed1",
          "commitAuthor": "Sanjay Radia",
          "commitDateOld": "23/04/12 9:34 AM",
          "commitNameOld": "589c68ae09effd6c4f26505d61636f779c22e99f",
          "commitAuthorOld": "Sanjay Radia",
          "daysBetweenCommits": 238.24,
          "commitsBetweenForRepo": 1306,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  public static RpcPayloadHeaderProto makeRpcPayloadHeader(RPC.RpcKind rpcKind,\n-      RpcPayloadOperationProto operation, int callId) {\n-    RpcPayloadHeaderProto.Builder result \u003d RpcPayloadHeaderProto.newBuilder();\n+  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n+      RpcRequestHeaderProto.OperationProto operation, int callId) {\n+    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n     result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId);\n     return result.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n      RpcRequestHeaderProto.OperationProto operation, int callId) {\n    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId);\n    return result.build();\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ProtoUtil.java",
          "extendedDetails": {
            "oldValue": "[rpcKind-RPC.RpcKind, operation-RpcPayloadOperationProto, callId-int]",
            "newValue": "[rpcKind-RPC.RpcKind, operation-RpcRequestHeaderProto.OperationProto, callId-int]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-9140 Cleanup rpc PB protos (sanjay Radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1423189 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/12/12 2:16 PM",
          "commitName": "aa4fe26a01d2ca881cb458d49032ce419351bed1",
          "commitAuthor": "Sanjay Radia",
          "commitDateOld": "23/04/12 9:34 AM",
          "commitNameOld": "589c68ae09effd6c4f26505d61636f779c22e99f",
          "commitAuthorOld": "Sanjay Radia",
          "daysBetweenCommits": 238.24,
          "commitsBetweenForRepo": 1306,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  public static RpcPayloadHeaderProto makeRpcPayloadHeader(RPC.RpcKind rpcKind,\n-      RpcPayloadOperationProto operation, int callId) {\n-    RpcPayloadHeaderProto.Builder result \u003d RpcPayloadHeaderProto.newBuilder();\n+  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n+      RpcRequestHeaderProto.OperationProto operation, int callId) {\n+    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n     result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId);\n     return result.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n      RpcRequestHeaderProto.OperationProto operation, int callId) {\n    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId);\n    return result.build();\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ProtoUtil.java",
          "extendedDetails": {
            "oldValue": "RpcPayloadHeaderProto",
            "newValue": "RpcRequestHeaderProto"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-9140 Cleanup rpc PB protos (sanjay Radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1423189 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/12/12 2:16 PM",
          "commitName": "aa4fe26a01d2ca881cb458d49032ce419351bed1",
          "commitAuthor": "Sanjay Radia",
          "commitDateOld": "23/04/12 9:34 AM",
          "commitNameOld": "589c68ae09effd6c4f26505d61636f779c22e99f",
          "commitAuthorOld": "Sanjay Radia",
          "daysBetweenCommits": 238.24,
          "commitsBetweenForRepo": 1306,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-  public static RpcPayloadHeaderProto makeRpcPayloadHeader(RPC.RpcKind rpcKind,\n-      RpcPayloadOperationProto operation, int callId) {\n-    RpcPayloadHeaderProto.Builder result \u003d RpcPayloadHeaderProto.newBuilder();\n+  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n+      RpcRequestHeaderProto.OperationProto operation, int callId) {\n+    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n     result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId);\n     return result.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n      RpcRequestHeaderProto.OperationProto operation, int callId) {\n    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId);\n    return result.build();\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ProtoUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "589c68ae09effd6c4f26505d61636f779c22e99f": {
      "type": "Yintroduced",
      "commitMessage": "    HADOOP-8285 Use ProtoBuf for RpcPayLoadHeader (sanjay radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1329319 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/04/12 9:34 AM",
      "commitName": "589c68ae09effd6c4f26505d61636f779c22e99f",
      "commitAuthor": "Sanjay Radia",
      "diff": "@@ -0,0 +1,6 @@\n+  public static RpcPayloadHeaderProto makeRpcPayloadHeader(RPC.RpcKind rpcKind,\n+      RpcPayloadOperationProto operation, int callId) {\n+    RpcPayloadHeaderProto.Builder result \u003d RpcPayloadHeaderProto.newBuilder();\n+    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId);\n+    return result.build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static RpcPayloadHeaderProto makeRpcPayloadHeader(RPC.RpcKind rpcKind,\n      RpcPayloadOperationProto operation, int callId) {\n    RpcPayloadHeaderProto.Builder result \u003d RpcPayloadHeaderProto.newBuilder();\n    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId);\n    return result.build();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ProtoUtil.java"
    }
  }
}