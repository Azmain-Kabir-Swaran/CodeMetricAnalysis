{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RackResolver.java",
  "functionName": "init",
  "functionId": "init___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/RackResolver.java",
  "functionStartLine": 54,
  "functionEndLine": 76,
  "numCommitsSeen": 11,
  "timeTaken": 7300,
  "changeHistory": [
    "351e509a47ad5f6a1601e2345d890796ecde0e62",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "241e3d40accd891e90327d301688b26e505a27ee",
    "c6282df3e59eb1e5481158184c344034872d2a89",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "351e509a47ad5f6a1601e2345d890796ecde0e62": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "241e3d40accd891e90327d301688b26e505a27ee": "Ybodychange",
    "c6282df3e59eb1e5481158184c344034872d2a89": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "351e509a47ad5f6a1601e2345d890796ecde0e62": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8169. Cleanup RackResolver.java\n\nSigned-off-by: Akira Ajisaka \u003caajisaka@apache.org\u003e\n",
      "commitDate": "19/04/18 12:07 AM",
      "commitName": "351e509a47ad5f6a1601e2345d890796ecde0e62",
      "commitAuthor": "BELUGA BEHR",
      "commitDateOld": "20/03/15 6:21 PM",
      "commitNameOld": "7f1e2f996995e1883d9336f720c27621cf1b73b6",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 1125.24,
      "commitsBetweenForRepo": 8011,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,23 @@\n   public synchronized static void init(Configuration conf) {\n     if (initCalled) {\n       return;\n-    } else {\n-      initCalled \u003d true;\n     }\n+    initCalled \u003d true;\n     Class\u003c? extends DNSToSwitchMapping\u003e dnsToSwitchMappingClass \u003d\n-      conf.getClass(\n-        CommonConfigurationKeysPublic.NET_TOPOLOGY_NODE_SWITCH_MAPPING_IMPL_KEY, \n+        conf.getClass(\n+        CommonConfigurationKeysPublic.NET_TOPOLOGY_NODE_SWITCH_MAPPING_IMPL_KEY,\n         ScriptBasedMapping.class,\n         DNSToSwitchMapping.class);\n     try {\n       DNSToSwitchMapping newInstance \u003d ReflectionUtils.newInstance(\n           dnsToSwitchMappingClass, conf);\n       // Wrap around the configured class with the Cached implementation so as\n       // to save on repetitive lookups.\n       // Check if the impl is already caching, to avoid double caching.\n       dnsToSwitchMapping \u003d\n           ((newInstance instanceof CachedDNSToSwitchMapping) ? newInstance\n               : new CachedDNSToSwitchMapping(newInstance));\n     } catch (Exception e) {\n       throw new RuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized static void init(Configuration conf) {\n    if (initCalled) {\n      return;\n    }\n    initCalled \u003d true;\n    Class\u003c? extends DNSToSwitchMapping\u003e dnsToSwitchMappingClass \u003d\n        conf.getClass(\n        CommonConfigurationKeysPublic.NET_TOPOLOGY_NODE_SWITCH_MAPPING_IMPL_KEY,\n        ScriptBasedMapping.class,\n        DNSToSwitchMapping.class);\n    try {\n      DNSToSwitchMapping newInstance \u003d ReflectionUtils.newInstance(\n          dnsToSwitchMappingClass, conf);\n      // Wrap around the configured class with the Cached implementation so as\n      // to save on repetitive lookups.\n      // Check if the impl is already caching, to avoid double caching.\n      dnsToSwitchMapping \u003d\n          ((newInstance instanceof CachedDNSToSwitchMapping) ? newInstance\n              : new CachedDNSToSwitchMapping(newInstance));\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/RackResolver.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized static void init(Configuration conf) {\n    if (initCalled) {\n      return;\n    } else {\n      initCalled \u003d true;\n    }\n    Class\u003c? extends DNSToSwitchMapping\u003e dnsToSwitchMappingClass \u003d\n      conf.getClass(\n        CommonConfigurationKeysPublic.NET_TOPOLOGY_NODE_SWITCH_MAPPING_IMPL_KEY, \n        ScriptBasedMapping.class,\n        DNSToSwitchMapping.class);\n    try {\n      DNSToSwitchMapping newInstance \u003d ReflectionUtils.newInstance(\n          dnsToSwitchMappingClass, conf);\n      // Wrap around the configured class with the Cached implementation so as\n      // to save on repetitive lookups.\n      // Check if the impl is already caching, to avoid double caching.\n      dnsToSwitchMapping \u003d\n          ((newInstance instanceof CachedDNSToSwitchMapping) ? newInstance\n              : new CachedDNSToSwitchMapping(newInstance));\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/RackResolver.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/RackResolver.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/RackResolver.java"
      }
    },
    "241e3d40accd891e90327d301688b26e505a27ee": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4105. Yarn RackResolver ignores rack configurations. Contributed by Ahmed Radwan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1311520 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/04/12 4:32 PM",
      "commitName": "241e3d40accd891e90327d301688b26e505a27ee",
      "commitAuthor": "Thomas White",
      "commitDateOld": "06/02/12 2:06 PM",
      "commitNameOld": "c6282df3e59eb1e5481158184c344034872d2a89",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 63.06,
      "commitsBetweenForRepo": 485,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,24 @@\n   public synchronized static void init(Configuration conf) {\n     if (initCalled) {\n       return;\n     } else {\n       initCalled \u003d true;\n     }\n     Class\u003c? extends DNSToSwitchMapping\u003e dnsToSwitchMappingClass \u003d\n       conf.getClass(\n         CommonConfigurationKeysPublic.NET_TOPOLOGY_NODE_SWITCH_MAPPING_IMPL_KEY, \n         ScriptBasedMapping.class,\n         DNSToSwitchMapping.class);\n     try {\n-      Constructor\u003c? extends DNSToSwitchMapping\u003e dnsToSwitchMappingConstructor\n-                             \u003d dnsToSwitchMappingClass.getConstructor();\n-      DNSToSwitchMapping newInstance \u003d\n-          dnsToSwitchMappingConstructor.newInstance();\n+      DNSToSwitchMapping newInstance \u003d ReflectionUtils.newInstance(\n+          dnsToSwitchMappingClass, conf);\n       // Wrap around the configured class with the Cached implementation so as\n       // to save on repetitive lookups.\n       // Check if the impl is already caching, to avoid double caching.\n       dnsToSwitchMapping \u003d\n           ((newInstance instanceof CachedDNSToSwitchMapping) ? newInstance\n               : new CachedDNSToSwitchMapping(newInstance));\n     } catch (Exception e) {\n       throw new RuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized static void init(Configuration conf) {\n    if (initCalled) {\n      return;\n    } else {\n      initCalled \u003d true;\n    }\n    Class\u003c? extends DNSToSwitchMapping\u003e dnsToSwitchMappingClass \u003d\n      conf.getClass(\n        CommonConfigurationKeysPublic.NET_TOPOLOGY_NODE_SWITCH_MAPPING_IMPL_KEY, \n        ScriptBasedMapping.class,\n        DNSToSwitchMapping.class);\n    try {\n      DNSToSwitchMapping newInstance \u003d ReflectionUtils.newInstance(\n          dnsToSwitchMappingClass, conf);\n      // Wrap around the configured class with the Cached implementation so as\n      // to save on repetitive lookups.\n      // Check if the impl is already caching, to avoid double caching.\n      dnsToSwitchMapping \u003d\n          ((newInstance instanceof CachedDNSToSwitchMapping) ? newInstance\n              : new CachedDNSToSwitchMapping(newInstance));\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/RackResolver.java",
      "extendedDetails": {}
    },
    "c6282df3e59eb1e5481158184c344034872d2a89": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3813. Added a cache for resolved racks. Contributed by Vinod K V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241209 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/02/12 2:06 PM",
      "commitName": "c6282df3e59eb1e5481158184c344034872d2a89",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "29/08/11 4:27 PM",
      "commitNameOld": "fb6ecb9b27798a923ca290ba5d23368e3a820a6c",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 160.94,
      "commitsBetweenForRepo": 1007,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,26 @@\n   public synchronized static void init(Configuration conf) {\n     if (initCalled) {\n       return;\n     } else {\n       initCalled \u003d true;\n     }\n     Class\u003c? extends DNSToSwitchMapping\u003e dnsToSwitchMappingClass \u003d\n       conf.getClass(\n         CommonConfigurationKeysPublic.NET_TOPOLOGY_NODE_SWITCH_MAPPING_IMPL_KEY, \n         ScriptBasedMapping.class,\n         DNSToSwitchMapping.class);\n     try {\n       Constructor\u003c? extends DNSToSwitchMapping\u003e dnsToSwitchMappingConstructor\n                              \u003d dnsToSwitchMappingClass.getConstructor();\n-      dnsToSwitchMapping \u003d dnsToSwitchMappingConstructor.newInstance();\n+      DNSToSwitchMapping newInstance \u003d\n+          dnsToSwitchMappingConstructor.newInstance();\n+      // Wrap around the configured class with the Cached implementation so as\n+      // to save on repetitive lookups.\n+      // Check if the impl is already caching, to avoid double caching.\n+      dnsToSwitchMapping \u003d\n+          ((newInstance instanceof CachedDNSToSwitchMapping) ? newInstance\n+              : new CachedDNSToSwitchMapping(newInstance));\n     } catch (Exception e) {\n       throw new RuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized static void init(Configuration conf) {\n    if (initCalled) {\n      return;\n    } else {\n      initCalled \u003d true;\n    }\n    Class\u003c? extends DNSToSwitchMapping\u003e dnsToSwitchMappingClass \u003d\n      conf.getClass(\n        CommonConfigurationKeysPublic.NET_TOPOLOGY_NODE_SWITCH_MAPPING_IMPL_KEY, \n        ScriptBasedMapping.class,\n        DNSToSwitchMapping.class);\n    try {\n      Constructor\u003c? extends DNSToSwitchMapping\u003e dnsToSwitchMappingConstructor\n                             \u003d dnsToSwitchMappingClass.getConstructor();\n      DNSToSwitchMapping newInstance \u003d\n          dnsToSwitchMappingConstructor.newInstance();\n      // Wrap around the configured class with the Cached implementation so as\n      // to save on repetitive lookups.\n      // Check if the impl is already caching, to avoid double caching.\n      dnsToSwitchMapping \u003d\n          ((newInstance instanceof CachedDNSToSwitchMapping) ? newInstance\n              : new CachedDNSToSwitchMapping(newInstance));\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/RackResolver.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized static void init(Configuration conf) {\n    if (initCalled) {\n      return;\n    } else {\n      initCalled \u003d true;\n    }\n    Class\u003c? extends DNSToSwitchMapping\u003e dnsToSwitchMappingClass \u003d\n      conf.getClass(\n        CommonConfigurationKeysPublic.NET_TOPOLOGY_NODE_SWITCH_MAPPING_IMPL_KEY, \n        ScriptBasedMapping.class,\n        DNSToSwitchMapping.class);\n    try {\n      Constructor\u003c? extends DNSToSwitchMapping\u003e dnsToSwitchMappingConstructor\n                             \u003d dnsToSwitchMappingClass.getConstructor();\n      dnsToSwitchMapping \u003d dnsToSwitchMappingConstructor.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/RackResolver.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/RackResolver.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/RackResolver.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,19 @@\n+  public synchronized static void init(Configuration conf) {\n+    if (initCalled) {\n+      return;\n+    } else {\n+      initCalled \u003d true;\n+    }\n+    Class\u003c? extends DNSToSwitchMapping\u003e dnsToSwitchMappingClass \u003d\n+      conf.getClass(\n+        CommonConfigurationKeysPublic.NET_TOPOLOGY_NODE_SWITCH_MAPPING_IMPL_KEY, \n+        ScriptBasedMapping.class,\n+        DNSToSwitchMapping.class);\n+    try {\n+      Constructor\u003c? extends DNSToSwitchMapping\u003e dnsToSwitchMappingConstructor\n+                             \u003d dnsToSwitchMappingClass.getConstructor();\n+      dnsToSwitchMapping \u003d dnsToSwitchMappingConstructor.newInstance();\n+    } catch (Exception e) {\n+      throw new RuntimeException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized static void init(Configuration conf) {\n    if (initCalled) {\n      return;\n    } else {\n      initCalled \u003d true;\n    }\n    Class\u003c? extends DNSToSwitchMapping\u003e dnsToSwitchMappingClass \u003d\n      conf.getClass(\n        CommonConfigurationKeysPublic.NET_TOPOLOGY_NODE_SWITCH_MAPPING_IMPL_KEY, \n        ScriptBasedMapping.class,\n        DNSToSwitchMapping.class);\n    try {\n      Constructor\u003c? extends DNSToSwitchMapping\u003e dnsToSwitchMappingConstructor\n                             \u003d dnsToSwitchMappingClass.getConstructor();\n      dnsToSwitchMapping \u003d dnsToSwitchMappingConstructor.newInstance();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/RackResolver.java"
    }
  }
}