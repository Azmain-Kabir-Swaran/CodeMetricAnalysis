{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMLeveldbStateStoreService.java",
  "functionName": "startCompactionTimer",
  "functionId": "startCompactionTimer___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
  "functionStartLine": 1717,
  "functionEndLine": 1727,
  "numCommitsSeen": 43,
  "timeTaken": 1476,
  "changeHistory": [
    "4a8508501bc753858693dacdafba61d604702f71"
  ],
  "changeHistoryShort": {
    "4a8508501bc753858693dacdafba61d604702f71": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4a8508501bc753858693dacdafba61d604702f71": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5009. NMLeveldbStateStoreService database can grow substantially leading to longer recovery times. Contributed by Jason Lowe\n",
      "commitDate": "28/04/16 9:54 PM",
      "commitName": "4a8508501bc753858693dacdafba61d604702f71",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,11 @@\n+  private void startCompactionTimer(Configuration conf) {\n+    long intervalMsec \u003d conf.getLong(\n+        YarnConfiguration.NM_RECOVERY_COMPACTION_INTERVAL_SECS,\n+        YarnConfiguration.DEFAULT_NM_RECOVERY_COMPACTION_INTERVAL_SECS) * 1000;\n+    if (intervalMsec \u003e 0) {\n+      compactionTimer \u003d new Timer(\n+          this.getClass().getSimpleName() + \" compaction timer\", true);\n+      compactionTimer.schedule(new CompactionTimerTask(),\n+          intervalMsec, intervalMsec);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void startCompactionTimer(Configuration conf) {\n    long intervalMsec \u003d conf.getLong(\n        YarnConfiguration.NM_RECOVERY_COMPACTION_INTERVAL_SECS,\n        YarnConfiguration.DEFAULT_NM_RECOVERY_COMPACTION_INTERVAL_SECS) * 1000;\n    if (intervalMsec \u003e 0) {\n      compactionTimer \u003d new Timer(\n          this.getClass().getSimpleName() + \" compaction timer\", true);\n      compactionTimer.schedule(new CompactionTimerTask(),\n          intervalMsec, intervalMsec);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java"
    }
  }
}