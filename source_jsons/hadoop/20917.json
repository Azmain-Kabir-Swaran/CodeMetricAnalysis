{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Job.java",
  "functionName": "getSharedCacheUploadPolicies",
  "functionId": "getSharedCacheUploadPolicies___conf-Configuration__areFiles-boolean",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java",
  "functionStartLine": 1485,
  "functionEndLine": 1504,
  "numCommitsSeen": 39,
  "timeTaken": 1657,
  "changeHistory": [
    "e46d5bb962b0c942f993afc505b165b1cd96e51b"
  ],
  "changeHistoryShort": {
    "e46d5bb962b0c942f993afc505b165b1cd96e51b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e46d5bb962b0c942f993afc505b165b1cd96e51b": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5951. Add support for the YARN Shared Cache.\n",
      "commitDate": "12/10/17 10:59 AM",
      "commitName": "e46d5bb962b0c942f993afc505b165b1cd96e51b",
      "commitAuthor": "Chris Trezzo",
      "diff": "@@ -0,0 +1,20 @@\n+  private static Map\u003cString, Boolean\u003e getSharedCacheUploadPolicies(\n+      Configuration conf, boolean areFiles) {\n+    String confParam \u003d\n+        areFiles ? MRJobConfig.CACHE_FILES_SHARED_CACHE_UPLOAD_POLICIES\n+            : MRJobConfig.CACHE_ARCHIVES_SHARED_CACHE_UPLOAD_POLICIES;\n+    Collection\u003cString\u003e policies \u003d conf.getStringCollection(confParam);\n+    String[] policy;\n+    Map\u003cString, Boolean\u003e policyMap \u003d new LinkedHashMap\u003cString, Boolean\u003e();\n+    for (String s : policies) {\n+      policy \u003d s.split(DELIM);\n+      if (policy.length !\u003d 2) {\n+        LOG.error(confParam\n+            + \" is mis-formatted, returning empty shared cache upload policies.\"\n+            + \" Error on [\" + s + \"]\");\n+        return new LinkedHashMap\u003cString, Boolean\u003e();\n+      }\n+      policyMap.put(policy[0], Boolean.parseBoolean(policy[1]));\n+    }\n+    return policyMap;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static Map\u003cString, Boolean\u003e getSharedCacheUploadPolicies(\n      Configuration conf, boolean areFiles) {\n    String confParam \u003d\n        areFiles ? MRJobConfig.CACHE_FILES_SHARED_CACHE_UPLOAD_POLICIES\n            : MRJobConfig.CACHE_ARCHIVES_SHARED_CACHE_UPLOAD_POLICIES;\n    Collection\u003cString\u003e policies \u003d conf.getStringCollection(confParam);\n    String[] policy;\n    Map\u003cString, Boolean\u003e policyMap \u003d new LinkedHashMap\u003cString, Boolean\u003e();\n    for (String s : policies) {\n      policy \u003d s.split(DELIM);\n      if (policy.length !\u003d 2) {\n        LOG.error(confParam\n            + \" is mis-formatted, returning empty shared cache upload policies.\"\n            + \" Error on [\" + s + \"]\");\n        return new LinkedHashMap\u003cString, Boolean\u003e();\n      }\n      policyMap.put(policy[0], Boolean.parseBoolean(policy[1]));\n    }\n    return policyMap;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java"
    }
  }
}