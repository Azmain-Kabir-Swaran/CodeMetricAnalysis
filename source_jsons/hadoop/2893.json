{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSInotifyEventInputStream.java",
  "functionName": "poll",
  "functionId": "poll___time-long__tu-TimeUnit",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSInotifyEventInputStream.java",
  "functionStartLine": 173,
  "functionEndLine": 196,
  "numCommitsSeen": 9,
  "timeTaken": 2892,
  "changeHistory": [
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
    "892ade689f9bcce76daae8f66fc00a49bee8548e",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
    "c4ccbe62c0857261b197a68c1e03a02e92f21a38",
    "75a326aaff8c92349701d9b3473c3070b8c2be44",
    "faa4455be512e070fa420084be8d1be5c72f3b08"
  ],
  "changeHistoryShort": {
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": "Ybodychange",
    "892ade689f9bcce76daae8f66fc00a49bee8548e": "Ybodychange",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": "Yfilerename",
    "c4ccbe62c0857261b197a68c1e03a02e92f21a38": "Ybodychange",
    "75a326aaff8c92349701d9b3473c3070b8c2be44": "Ymultichange(Yreturntypechange,Ybodychange)",
    "faa4455be512e070fa420084be8d1be5c72f3b08": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "03/10/15 11:38 AM",
      "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "28/09/15 7:42 AM",
      "commitNameOld": "892ade689f9bcce76daae8f66fc00a49bee8548e",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 5.16,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,24 @@\n   public EventBatch poll(long time, TimeUnit tu) throws IOException,\n       InterruptedException, MissingEventsException {\n-    TraceScope scope \u003d tracer.newScope(\"inotifyPollWithTimeout\");\n-    EventBatch next \u003d null;\n-    try {\n+    EventBatch next;\n+    try (TraceScope ignored \u003d tracer.newScope(\"inotifyPollWithTimeout\")) {\n       long initialTime \u003d Time.monotonicNow();\n       long totalWait \u003d TimeUnit.MILLISECONDS.convert(time, tu);\n       long nextWait \u003d INITIAL_WAIT_MS;\n       while ((next \u003d poll()) \u003d\u003d null) {\n         long timeLeft \u003d totalWait - (Time.monotonicNow() - initialTime);\n         if (timeLeft \u003c\u003d 0) {\n           LOG.debug(\"timed poll(): timed out\");\n           break;\n         } else if (timeLeft \u003c nextWait * 2) {\n           nextWait \u003d timeLeft;\n         } else {\n           nextWait *\u003d 2;\n         }\n         LOG.debug(\"timed poll(): poll() returned null, sleeping for {} ms\",\n             nextWait);\n         Thread.sleep(nextWait);\n       }\n-    } finally {\n-      scope.close();\n     }\n     return next;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public EventBatch poll(long time, TimeUnit tu) throws IOException,\n      InterruptedException, MissingEventsException {\n    EventBatch next;\n    try (TraceScope ignored \u003d tracer.newScope(\"inotifyPollWithTimeout\")) {\n      long initialTime \u003d Time.monotonicNow();\n      long totalWait \u003d TimeUnit.MILLISECONDS.convert(time, tu);\n      long nextWait \u003d INITIAL_WAIT_MS;\n      while ((next \u003d poll()) \u003d\u003d null) {\n        long timeLeft \u003d totalWait - (Time.monotonicNow() - initialTime);\n        if (timeLeft \u003c\u003d 0) {\n          LOG.debug(\"timed poll(): timed out\");\n          break;\n        } else if (timeLeft \u003c nextWait * 2) {\n          nextWait \u003d timeLeft;\n        } else {\n          nextWait *\u003d 2;\n        }\n        LOG.debug(\"timed poll(): poll() returned null, sleeping for {} ms\",\n            nextWait);\n        Thread.sleep(nextWait);\n      }\n    }\n    return next;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSInotifyEventInputStream.java",
      "extendedDetails": {}
    },
    "892ade689f9bcce76daae8f66fc00a49bee8548e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9080. Update htrace version to 4.0.1 (cmccabe)\n",
      "commitDate": "28/09/15 7:42 AM",
      "commitName": "892ade689f9bcce76daae8f66fc00a49bee8548e",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "26/09/15 11:08 AM",
      "commitNameOld": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 1.86,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public EventBatch poll(long time, TimeUnit tu) throws IOException,\n       InterruptedException, MissingEventsException {\n-    TraceScope scope \u003d Trace.startSpan(\"inotifyPollWithTimeout\", traceSampler);\n+    TraceScope scope \u003d tracer.newScope(\"inotifyPollWithTimeout\");\n     EventBatch next \u003d null;\n     try {\n       long initialTime \u003d Time.monotonicNow();\n       long totalWait \u003d TimeUnit.MILLISECONDS.convert(time, tu);\n       long nextWait \u003d INITIAL_WAIT_MS;\n       while ((next \u003d poll()) \u003d\u003d null) {\n         long timeLeft \u003d totalWait - (Time.monotonicNow() - initialTime);\n         if (timeLeft \u003c\u003d 0) {\n           LOG.debug(\"timed poll(): timed out\");\n           break;\n         } else if (timeLeft \u003c nextWait * 2) {\n           nextWait \u003d timeLeft;\n         } else {\n           nextWait *\u003d 2;\n         }\n         LOG.debug(\"timed poll(): poll() returned null, sleeping for {} ms\",\n             nextWait);\n         Thread.sleep(nextWait);\n       }\n     } finally {\n       scope.close();\n     }\n     return next;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public EventBatch poll(long time, TimeUnit tu) throws IOException,\n      InterruptedException, MissingEventsException {\n    TraceScope scope \u003d tracer.newScope(\"inotifyPollWithTimeout\");\n    EventBatch next \u003d null;\n    try {\n      long initialTime \u003d Time.monotonicNow();\n      long totalWait \u003d TimeUnit.MILLISECONDS.convert(time, tu);\n      long nextWait \u003d INITIAL_WAIT_MS;\n      while ((next \u003d poll()) \u003d\u003d null) {\n        long timeLeft \u003d totalWait - (Time.monotonicNow() - initialTime);\n        if (timeLeft \u003c\u003d 0) {\n          LOG.debug(\"timed poll(): timed out\");\n          break;\n        } else if (timeLeft \u003c nextWait * 2) {\n          nextWait \u003d timeLeft;\n        } else {\n          nextWait *\u003d 2;\n        }\n        LOG.debug(\"timed poll(): poll() returned null, sleeping for {} ms\",\n            nextWait);\n        Thread.sleep(nextWait);\n      }\n    } finally {\n      scope.close();\n    }\n    return next;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSInotifyEventInputStream.java",
      "extendedDetails": {}
    },
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8053. Move DFSIn/OutputStream and related classes to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "26/09/15 11:08 AM",
      "commitName": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/09/15 9:06 AM",
      "commitNameOld": "861b52db242f238d7e36ad75c158025be959a696",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public EventBatch poll(long time, TimeUnit tu) throws IOException,\n      InterruptedException, MissingEventsException {\n    TraceScope scope \u003d Trace.startSpan(\"inotifyPollWithTimeout\", traceSampler);\n    EventBatch next \u003d null;\n    try {\n      long initialTime \u003d Time.monotonicNow();\n      long totalWait \u003d TimeUnit.MILLISECONDS.convert(time, tu);\n      long nextWait \u003d INITIAL_WAIT_MS;\n      while ((next \u003d poll()) \u003d\u003d null) {\n        long timeLeft \u003d totalWait - (Time.monotonicNow() - initialTime);\n        if (timeLeft \u003c\u003d 0) {\n          LOG.debug(\"timed poll(): timed out\");\n          break;\n        } else if (timeLeft \u003c nextWait * 2) {\n          nextWait \u003d timeLeft;\n        } else {\n          nextWait *\u003d 2;\n        }\n        LOG.debug(\"timed poll(): poll() returned null, sleeping for {} ms\",\n            nextWait);\n        Thread.sleep(nextWait);\n      }\n    } finally {\n      scope.close();\n    }\n    return next;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSInotifyEventInputStream.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInotifyEventInputStream.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSInotifyEventInputStream.java"
      }
    },
    "c4ccbe62c0857261b197a68c1e03a02e92f21a38": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7189. Add trace spans for DFSClient metadata operations. (Colin P. McCabe via yliu)\n",
      "commitDate": "15/01/15 8:23 AM",
      "commitName": "c4ccbe62c0857261b197a68c1e03a02e92f21a38",
      "commitAuthor": "yliu",
      "commitDateOld": "02/12/14 5:15 PM",
      "commitNameOld": "75a326aaff8c92349701d9b3473c3070b8c2be44",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 43.63,
      "commitsBetweenForRepo": 261,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,27 @@\n   public EventBatch poll(long time, TimeUnit tu) throws IOException,\n       InterruptedException, MissingEventsException {\n-    long initialTime \u003d Time.monotonicNow();\n-    long totalWait \u003d TimeUnit.MILLISECONDS.convert(time, tu);\n-    long nextWait \u003d INITIAL_WAIT_MS;\n+    TraceScope scope \u003d Trace.startSpan(\"inotifyPollWithTimeout\", traceSampler);\n     EventBatch next \u003d null;\n-    while ((next \u003d poll()) \u003d\u003d null) {\n-      long timeLeft \u003d totalWait - (Time.monotonicNow() - initialTime);\n-      if (timeLeft \u003c\u003d 0) {\n-        LOG.debug(\"timed poll(): timed out\");\n-        break;\n-      } else if (timeLeft \u003c nextWait * 2) {\n-        nextWait \u003d timeLeft;\n-      } else {\n-        nextWait *\u003d 2;\n+    try {\n+      long initialTime \u003d Time.monotonicNow();\n+      long totalWait \u003d TimeUnit.MILLISECONDS.convert(time, tu);\n+      long nextWait \u003d INITIAL_WAIT_MS;\n+      while ((next \u003d poll()) \u003d\u003d null) {\n+        long timeLeft \u003d totalWait - (Time.monotonicNow() - initialTime);\n+        if (timeLeft \u003c\u003d 0) {\n+          LOG.debug(\"timed poll(): timed out\");\n+          break;\n+        } else if (timeLeft \u003c nextWait * 2) {\n+          nextWait \u003d timeLeft;\n+        } else {\n+          nextWait *\u003d 2;\n+        }\n+        LOG.debug(\"timed poll(): poll() returned null, sleeping for {} ms\",\n+            nextWait);\n+        Thread.sleep(nextWait);\n       }\n-      LOG.debug(\"timed poll(): poll() returned null, sleeping for {} ms\",\n-          nextWait);\n-      Thread.sleep(nextWait);\n+    } finally {\n+      scope.close();\n     }\n-\n     return next;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public EventBatch poll(long time, TimeUnit tu) throws IOException,\n      InterruptedException, MissingEventsException {\n    TraceScope scope \u003d Trace.startSpan(\"inotifyPollWithTimeout\", traceSampler);\n    EventBatch next \u003d null;\n    try {\n      long initialTime \u003d Time.monotonicNow();\n      long totalWait \u003d TimeUnit.MILLISECONDS.convert(time, tu);\n      long nextWait \u003d INITIAL_WAIT_MS;\n      while ((next \u003d poll()) \u003d\u003d null) {\n        long timeLeft \u003d totalWait - (Time.monotonicNow() - initialTime);\n        if (timeLeft \u003c\u003d 0) {\n          LOG.debug(\"timed poll(): timed out\");\n          break;\n        } else if (timeLeft \u003c nextWait * 2) {\n          nextWait \u003d timeLeft;\n        } else {\n          nextWait *\u003d 2;\n        }\n        LOG.debug(\"timed poll(): poll() returned null, sleeping for {} ms\",\n            nextWait);\n        Thread.sleep(nextWait);\n      }\n    } finally {\n      scope.close();\n    }\n    return next;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInotifyEventInputStream.java",
      "extendedDetails": {}
    },
    "75a326aaff8c92349701d9b3473c3070b8c2be44": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7446. HDFS inotify should have the ability to determine what txid it has read up to (cmccabe)\n",
      "commitDate": "02/12/14 5:15 PM",
      "commitName": "75a326aaff8c92349701d9b3473c3070b8c2be44",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7446. HDFS inotify should have the ability to determine what txid it has read up to (cmccabe)\n",
          "commitDate": "02/12/14 5:15 PM",
          "commitName": "75a326aaff8c92349701d9b3473c3070b8c2be44",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "02/09/14 2:02 PM",
          "commitNameOld": "faa4455be512e070fa420084be8d1be5c72f3b08",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 91.18,
          "commitsBetweenForRepo": 869,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n-  public Event poll(long time, TimeUnit tu) throws IOException,\n+  public EventBatch poll(long time, TimeUnit tu) throws IOException,\n       InterruptedException, MissingEventsException {\n     long initialTime \u003d Time.monotonicNow();\n     long totalWait \u003d TimeUnit.MILLISECONDS.convert(time, tu);\n     long nextWait \u003d INITIAL_WAIT_MS;\n-    Event next \u003d null;\n+    EventBatch next \u003d null;\n     while ((next \u003d poll()) \u003d\u003d null) {\n       long timeLeft \u003d totalWait - (Time.monotonicNow() - initialTime);\n       if (timeLeft \u003c\u003d 0) {\n         LOG.debug(\"timed poll(): timed out\");\n         break;\n       } else if (timeLeft \u003c nextWait * 2) {\n         nextWait \u003d timeLeft;\n       } else {\n         nextWait *\u003d 2;\n       }\n       LOG.debug(\"timed poll(): poll() returned null, sleeping for {} ms\",\n           nextWait);\n       Thread.sleep(nextWait);\n     }\n \n     return next;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public EventBatch poll(long time, TimeUnit tu) throws IOException,\n      InterruptedException, MissingEventsException {\n    long initialTime \u003d Time.monotonicNow();\n    long totalWait \u003d TimeUnit.MILLISECONDS.convert(time, tu);\n    long nextWait \u003d INITIAL_WAIT_MS;\n    EventBatch next \u003d null;\n    while ((next \u003d poll()) \u003d\u003d null) {\n      long timeLeft \u003d totalWait - (Time.monotonicNow() - initialTime);\n      if (timeLeft \u003c\u003d 0) {\n        LOG.debug(\"timed poll(): timed out\");\n        break;\n      } else if (timeLeft \u003c nextWait * 2) {\n        nextWait \u003d timeLeft;\n      } else {\n        nextWait *\u003d 2;\n      }\n      LOG.debug(\"timed poll(): poll() returned null, sleeping for {} ms\",\n          nextWait);\n      Thread.sleep(nextWait);\n    }\n\n    return next;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInotifyEventInputStream.java",
          "extendedDetails": {
            "oldValue": "Event",
            "newValue": "EventBatch"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7446. HDFS inotify should have the ability to determine what txid it has read up to (cmccabe)\n",
          "commitDate": "02/12/14 5:15 PM",
          "commitName": "75a326aaff8c92349701d9b3473c3070b8c2be44",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "02/09/14 2:02 PM",
          "commitNameOld": "faa4455be512e070fa420084be8d1be5c72f3b08",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 91.18,
          "commitsBetweenForRepo": 869,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n-  public Event poll(long time, TimeUnit tu) throws IOException,\n+  public EventBatch poll(long time, TimeUnit tu) throws IOException,\n       InterruptedException, MissingEventsException {\n     long initialTime \u003d Time.monotonicNow();\n     long totalWait \u003d TimeUnit.MILLISECONDS.convert(time, tu);\n     long nextWait \u003d INITIAL_WAIT_MS;\n-    Event next \u003d null;\n+    EventBatch next \u003d null;\n     while ((next \u003d poll()) \u003d\u003d null) {\n       long timeLeft \u003d totalWait - (Time.monotonicNow() - initialTime);\n       if (timeLeft \u003c\u003d 0) {\n         LOG.debug(\"timed poll(): timed out\");\n         break;\n       } else if (timeLeft \u003c nextWait * 2) {\n         nextWait \u003d timeLeft;\n       } else {\n         nextWait *\u003d 2;\n       }\n       LOG.debug(\"timed poll(): poll() returned null, sleeping for {} ms\",\n           nextWait);\n       Thread.sleep(nextWait);\n     }\n \n     return next;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public EventBatch poll(long time, TimeUnit tu) throws IOException,\n      InterruptedException, MissingEventsException {\n    long initialTime \u003d Time.monotonicNow();\n    long totalWait \u003d TimeUnit.MILLISECONDS.convert(time, tu);\n    long nextWait \u003d INITIAL_WAIT_MS;\n    EventBatch next \u003d null;\n    while ((next \u003d poll()) \u003d\u003d null) {\n      long timeLeft \u003d totalWait - (Time.monotonicNow() - initialTime);\n      if (timeLeft \u003c\u003d 0) {\n        LOG.debug(\"timed poll(): timed out\");\n        break;\n      } else if (timeLeft \u003c nextWait * 2) {\n        nextWait \u003d timeLeft;\n      } else {\n        nextWait *\u003d 2;\n      }\n      LOG.debug(\"timed poll(): poll() returned null, sleeping for {} ms\",\n          nextWait);\n      Thread.sleep(nextWait);\n    }\n\n    return next;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInotifyEventInputStream.java",
          "extendedDetails": {}
        }
      ]
    },
    "faa4455be512e070fa420084be8d1be5c72f3b08": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6634. inotify in HDFS. Contributed by James Thomas.\n",
      "commitDate": "02/09/14 2:02 PM",
      "commitName": "faa4455be512e070fa420084be8d1be5c72f3b08",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,23 @@\n+  public Event poll(long time, TimeUnit tu) throws IOException,\n+      InterruptedException, MissingEventsException {\n+    long initialTime \u003d Time.monotonicNow();\n+    long totalWait \u003d TimeUnit.MILLISECONDS.convert(time, tu);\n+    long nextWait \u003d INITIAL_WAIT_MS;\n+    Event next \u003d null;\n+    while ((next \u003d poll()) \u003d\u003d null) {\n+      long timeLeft \u003d totalWait - (Time.monotonicNow() - initialTime);\n+      if (timeLeft \u003c\u003d 0) {\n+        LOG.debug(\"timed poll(): timed out\");\n+        break;\n+      } else if (timeLeft \u003c nextWait * 2) {\n+        nextWait \u003d timeLeft;\n+      } else {\n+        nextWait *\u003d 2;\n+      }\n+      LOG.debug(\"timed poll(): poll() returned null, sleeping for {} ms\",\n+          nextWait);\n+      Thread.sleep(nextWait);\n+    }\n+\n+    return next;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Event poll(long time, TimeUnit tu) throws IOException,\n      InterruptedException, MissingEventsException {\n    long initialTime \u003d Time.monotonicNow();\n    long totalWait \u003d TimeUnit.MILLISECONDS.convert(time, tu);\n    long nextWait \u003d INITIAL_WAIT_MS;\n    Event next \u003d null;\n    while ((next \u003d poll()) \u003d\u003d null) {\n      long timeLeft \u003d totalWait - (Time.monotonicNow() - initialTime);\n      if (timeLeft \u003c\u003d 0) {\n        LOG.debug(\"timed poll(): timed out\");\n        break;\n      } else if (timeLeft \u003c nextWait * 2) {\n        nextWait \u003d timeLeft;\n      } else {\n        nextWait *\u003d 2;\n      }\n      LOG.debug(\"timed poll(): poll() returned null, sleeping for {} ms\",\n          nextWait);\n      Thread.sleep(nextWait);\n    }\n\n    return next;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInotifyEventInputStream.java"
    }
  }
}