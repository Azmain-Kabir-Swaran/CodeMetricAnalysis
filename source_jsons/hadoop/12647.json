{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ExternalSPSBlockMoveTaskHandler.java",
  "functionName": "handle",
  "functionId": "handle___attemptedMove-BlockMovementAttemptFinished",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalSPSBlockMoveTaskHandler.java",
  "functionStartLine": 164,
  "functionEndLine": 168,
  "numCommitsSeen": 39,
  "timeTaken": 7013,
  "changeHistory": [
    "2acc50b826fa8b00f2b09d9546c4b3215b89d46d",
    "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10",
    "00eceed233d6e80d5c7137bf5b5286746ec4d5fb",
    "0f2d1ddc2c41c8db800c58cabb150e71804fe23a",
    "24add8c2f89b63640672c016f03ebfa07d585a0d"
  ],
  "changeHistoryShort": {
    "2acc50b826fa8b00f2b09d9546c4b3215b89d46d": "Ymultichange(Yparameterchange,Ybodychange)",
    "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "00eceed233d6e80d5c7137bf5b5286746ec4d5fb": "Ymultichange(Yparameterchange,Ybodychange)",
    "0f2d1ddc2c41c8db800c58cabb150e71804fe23a": "Ymultichange(Yparameterchange,Ybodychange)",
    "24add8c2f89b63640672c016f03ebfa07d585a0d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2acc50b826fa8b00f2b09d9546c4b3215b89d46d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-13165: [SPS]: Collects successfully moved block details via IBR. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "2acc50b826fa8b00f2b09d9546c4b3215b89d46d",
      "commitAuthor": "Rakesh Radhakrishnan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-13165: [SPS]: Collects successfully moved block details via IBR. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "2acc50b826fa8b00f2b09d9546c4b3215b89d46d",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "8467ec24fb74f30371d5a13e893fc56309ee9372",
          "commitAuthorOld": "Rakesh Radhakrishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,5 @@\n-    public void handle(\n-        List\u003cBlockMovementAttemptFinished\u003e moveAttemptFinishedBlks) {\n-      List\u003cBlock\u003e blocks \u003d new ArrayList\u003c\u003e();\n-      for (BlockMovementAttemptFinished item : moveAttemptFinishedBlks) {\n-        blocks.add(item.getBlock());\n-      }\n-      BlocksStorageMoveAttemptFinished blkAttempted \u003d\n-          new BlocksStorageMoveAttemptFinished(\n-          blocks.toArray(new Block[blocks.size()]));\n-      service.notifyStorageMovementAttemptFinishedBlks(blkAttempted);\n+    public void handle(BlockMovementAttemptFinished attemptedMove) {\n+      service.notifyStorageMovementAttemptFinishedBlk(\n+          attemptedMove.getTargetDatanode(), attemptedMove.getTargetType(),\n+          attemptedMove.getBlock());\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void handle(BlockMovementAttemptFinished attemptedMove) {\n      service.notifyStorageMovementAttemptFinishedBlk(\n          attemptedMove.getTargetDatanode(), attemptedMove.getTargetType(),\n          attemptedMove.getBlock());\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalSPSBlockMoveTaskHandler.java",
          "extendedDetails": {
            "oldValue": "[moveAttemptFinishedBlks-List\u003cBlockMovementAttemptFinished\u003e]",
            "newValue": "[attemptedMove-BlockMovementAttemptFinished]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13165: [SPS]: Collects successfully moved block details via IBR. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "2acc50b826fa8b00f2b09d9546c4b3215b89d46d",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "8467ec24fb74f30371d5a13e893fc56309ee9372",
          "commitAuthorOld": "Rakesh Radhakrishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,5 @@\n-    public void handle(\n-        List\u003cBlockMovementAttemptFinished\u003e moveAttemptFinishedBlks) {\n-      List\u003cBlock\u003e blocks \u003d new ArrayList\u003c\u003e();\n-      for (BlockMovementAttemptFinished item : moveAttemptFinishedBlks) {\n-        blocks.add(item.getBlock());\n-      }\n-      BlocksStorageMoveAttemptFinished blkAttempted \u003d\n-          new BlocksStorageMoveAttemptFinished(\n-          blocks.toArray(new Block[blocks.size()]));\n-      service.notifyStorageMovementAttemptFinishedBlks(blkAttempted);\n+    public void handle(BlockMovementAttemptFinished attemptedMove) {\n+      service.notifyStorageMovementAttemptFinishedBlk(\n+          attemptedMove.getTargetDatanode(), attemptedMove.getTargetType(),\n+          attemptedMove.getBlock());\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void handle(BlockMovementAttemptFinished attemptedMove) {\n      service.notifyStorageMovementAttemptFinishedBlk(\n          attemptedMove.getTargetDatanode(), attemptedMove.getTargetType(),\n          attemptedMove.getBlock());\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalSPSBlockMoveTaskHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-13033: [SPS]: Implement a mechanism to do file block movements for external SPS. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10",
      "commitAuthor": "Uma Maheswara Rao G",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-13033: [SPS]: Implement a mechanism to do file block movements for external SPS. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "3159b39cf8ef704835325263154fb1a1cecc109d",
          "commitAuthorOld": "Rakesh Radhakrishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,11 @@\n-    void handle(List\u003cBlockMovementAttemptFinished\u003e moveAttemptFinishedBlks) {\n+    public void handle(\n+        List\u003cBlockMovementAttemptFinished\u003e moveAttemptFinishedBlks) {\n       List\u003cBlock\u003e blocks \u003d new ArrayList\u003c\u003e();\n-\n       for (BlockMovementAttemptFinished item : moveAttemptFinishedBlks) {\n         blocks.add(item.getBlock());\n       }\n-      // Adding to the tracking report list. Later this will be send to\n-      // namenode via datanode heartbeat.\n-      synchronized (blockIdVsMovementStatus) {\n-        blockIdVsMovementStatus.addAll(blocks);\n-      }\n+      BlocksStorageMoveAttemptFinished blkAttempted \u003d\n+          new BlocksStorageMoveAttemptFinished(\n+          blocks.toArray(new Block[blocks.size()]));\n+      service.notifyStorageMovementAttemptFinishedBlks(blkAttempted);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void handle(\n        List\u003cBlockMovementAttemptFinished\u003e moveAttemptFinishedBlks) {\n      List\u003cBlock\u003e blocks \u003d new ArrayList\u003c\u003e();\n      for (BlockMovementAttemptFinished item : moveAttemptFinishedBlks) {\n        blocks.add(item.getBlock());\n      }\n      BlocksStorageMoveAttemptFinished blkAttempted \u003d\n          new BlocksStorageMoveAttemptFinished(\n          blocks.toArray(new Block[blocks.size()]));\n      service.notifyStorageMovementAttemptFinishedBlks(blkAttempted);\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalSPSBlockMoveTaskHandler.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StoragePolicySatisfyWorker.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalSPSBlockMoveTaskHandler.java",
            "oldMethodName": "handle",
            "newMethodName": "handle"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-13033: [SPS]: Implement a mechanism to do file block movements for external SPS. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "3159b39cf8ef704835325263154fb1a1cecc109d",
          "commitAuthorOld": "Rakesh Radhakrishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,11 @@\n-    void handle(List\u003cBlockMovementAttemptFinished\u003e moveAttemptFinishedBlks) {\n+    public void handle(\n+        List\u003cBlockMovementAttemptFinished\u003e moveAttemptFinishedBlks) {\n       List\u003cBlock\u003e blocks \u003d new ArrayList\u003c\u003e();\n-\n       for (BlockMovementAttemptFinished item : moveAttemptFinishedBlks) {\n         blocks.add(item.getBlock());\n       }\n-      // Adding to the tracking report list. Later this will be send to\n-      // namenode via datanode heartbeat.\n-      synchronized (blockIdVsMovementStatus) {\n-        blockIdVsMovementStatus.addAll(blocks);\n-      }\n+      BlocksStorageMoveAttemptFinished blkAttempted \u003d\n+          new BlocksStorageMoveAttemptFinished(\n+          blocks.toArray(new Block[blocks.size()]));\n+      service.notifyStorageMovementAttemptFinishedBlks(blkAttempted);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void handle(\n        List\u003cBlockMovementAttemptFinished\u003e moveAttemptFinishedBlks) {\n      List\u003cBlock\u003e blocks \u003d new ArrayList\u003c\u003e();\n      for (BlockMovementAttemptFinished item : moveAttemptFinishedBlks) {\n        blocks.add(item.getBlock());\n      }\n      BlocksStorageMoveAttemptFinished blkAttempted \u003d\n          new BlocksStorageMoveAttemptFinished(\n          blocks.toArray(new Block[blocks.size()]));\n      service.notifyStorageMovementAttemptFinishedBlks(blkAttempted);\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalSPSBlockMoveTaskHandler.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13033: [SPS]: Implement a mechanism to do file block movements for external SPS. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "b0cb8d9bb44c963ae686d2b5c1b70bc76b955e10",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "3159b39cf8ef704835325263154fb1a1cecc109d",
          "commitAuthorOld": "Rakesh Radhakrishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,11 @@\n-    void handle(List\u003cBlockMovementAttemptFinished\u003e moveAttemptFinishedBlks) {\n+    public void handle(\n+        List\u003cBlockMovementAttemptFinished\u003e moveAttemptFinishedBlks) {\n       List\u003cBlock\u003e blocks \u003d new ArrayList\u003c\u003e();\n-\n       for (BlockMovementAttemptFinished item : moveAttemptFinishedBlks) {\n         blocks.add(item.getBlock());\n       }\n-      // Adding to the tracking report list. Later this will be send to\n-      // namenode via datanode heartbeat.\n-      synchronized (blockIdVsMovementStatus) {\n-        blockIdVsMovementStatus.addAll(blocks);\n-      }\n+      BlocksStorageMoveAttemptFinished blkAttempted \u003d\n+          new BlocksStorageMoveAttemptFinished(\n+          blocks.toArray(new Block[blocks.size()]));\n+      service.notifyStorageMovementAttemptFinishedBlks(blkAttempted);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void handle(\n        List\u003cBlockMovementAttemptFinished\u003e moveAttemptFinishedBlks) {\n      List\u003cBlock\u003e blocks \u003d new ArrayList\u003c\u003e();\n      for (BlockMovementAttemptFinished item : moveAttemptFinishedBlks) {\n        blocks.add(item.getBlock());\n      }\n      BlocksStorageMoveAttemptFinished blkAttempted \u003d\n          new BlocksStorageMoveAttemptFinished(\n          blocks.toArray(new Block[blocks.size()]));\n      service.notifyStorageMovementAttemptFinishedBlks(blkAttempted);\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/sps/ExternalSPSBlockMoveTaskHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "00eceed233d6e80d5c7137bf5b5286746ec4d5fb": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-12570: [SPS]: Refactor Co-ordinator datanode logic to track the block storage movements. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "00eceed233d6e80d5c7137bf5b5286746ec4d5fb",
      "commitAuthor": "Uma Maheswara Rao G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-12570: [SPS]: Refactor Co-ordinator datanode logic to track the block storage movements. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "00eceed233d6e80d5c7137bf5b5286746ec4d5fb",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "3b601f2c0e16b84e35ebe5ecdcd06d3277eabb74",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,12 @@\n-    void handle(List\u003cBlockMovementResult\u003e resultsPerTrackId) {\n-      BlocksStorageMovementResult.Status status \u003d\n-          BlocksStorageMovementResult.Status.SUCCESS;\n-      long trackId \u003d -1;\n-      for (BlockMovementResult blockMovementResult : resultsPerTrackId) {\n-        trackId \u003d blockMovementResult.getTrackId();\n-        if (blockMovementResult.status \u003d\u003d\n-            BlockMovementStatus.DN_BLK_STORAGE_MOVEMENT_FAILURE) {\n-          status \u003d BlocksStorageMovementResult.Status.FAILURE;\n-          // If any of the block movement is failed, then mark as failure so\n-          // that namenode can take a decision to retry the blocks associated to\n-          // the given trackId.\n-          break;\n-        }\n-      }\n+    void handle(List\u003cBlockMovementAttemptFinished\u003e moveAttemptFinishedBlks) {\n+      List\u003cBlock\u003e blocks \u003d new ArrayList\u003c\u003e();\n \n-      // Adding to the tracking results list. Later this will be send to\n+      for (BlockMovementAttemptFinished item : moveAttemptFinishedBlks) {\n+        blocks.add(item.getBlock());\n+      }\n+      // Adding to the tracking report list. Later this will be send to\n       // namenode via datanode heartbeat.\n-      synchronized (trackIdVsMovementStatus) {\n-        trackIdVsMovementStatus.add(\n-            new BlocksStorageMovementResult(trackId, status));\n+      synchronized (blockIdVsMovementStatus) {\n+        blockIdVsMovementStatus.addAll(blocks);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    void handle(List\u003cBlockMovementAttemptFinished\u003e moveAttemptFinishedBlks) {\n      List\u003cBlock\u003e blocks \u003d new ArrayList\u003c\u003e();\n\n      for (BlockMovementAttemptFinished item : moveAttemptFinishedBlks) {\n        blocks.add(item.getBlock());\n      }\n      // Adding to the tracking report list. Later this will be send to\n      // namenode via datanode heartbeat.\n      synchronized (blockIdVsMovementStatus) {\n        blockIdVsMovementStatus.addAll(blocks);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StoragePolicySatisfyWorker.java",
          "extendedDetails": {
            "oldValue": "[resultsPerTrackId-List\u003cBlockMovementResult\u003e]",
            "newValue": "[moveAttemptFinishedBlks-List\u003cBlockMovementAttemptFinished\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12570: [SPS]: Refactor Co-ordinator datanode logic to track the block storage movements. Contributed by Rakesh R.\n",
          "commitDate": "12/08/18 3:06 AM",
          "commitName": "00eceed233d6e80d5c7137bf5b5286746ec4d5fb",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "12/08/18 3:06 AM",
          "commitNameOld": "3b601f2c0e16b84e35ebe5ecdcd06d3277eabb74",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,12 @@\n-    void handle(List\u003cBlockMovementResult\u003e resultsPerTrackId) {\n-      BlocksStorageMovementResult.Status status \u003d\n-          BlocksStorageMovementResult.Status.SUCCESS;\n-      long trackId \u003d -1;\n-      for (BlockMovementResult blockMovementResult : resultsPerTrackId) {\n-        trackId \u003d blockMovementResult.getTrackId();\n-        if (blockMovementResult.status \u003d\u003d\n-            BlockMovementStatus.DN_BLK_STORAGE_MOVEMENT_FAILURE) {\n-          status \u003d BlocksStorageMovementResult.Status.FAILURE;\n-          // If any of the block movement is failed, then mark as failure so\n-          // that namenode can take a decision to retry the blocks associated to\n-          // the given trackId.\n-          break;\n-        }\n-      }\n+    void handle(List\u003cBlockMovementAttemptFinished\u003e moveAttemptFinishedBlks) {\n+      List\u003cBlock\u003e blocks \u003d new ArrayList\u003c\u003e();\n \n-      // Adding to the tracking results list. Later this will be send to\n+      for (BlockMovementAttemptFinished item : moveAttemptFinishedBlks) {\n+        blocks.add(item.getBlock());\n+      }\n+      // Adding to the tracking report list. Later this will be send to\n       // namenode via datanode heartbeat.\n-      synchronized (trackIdVsMovementStatus) {\n-        trackIdVsMovementStatus.add(\n-            new BlocksStorageMovementResult(trackId, status));\n+      synchronized (blockIdVsMovementStatus) {\n+        blockIdVsMovementStatus.addAll(blocks);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    void handle(List\u003cBlockMovementAttemptFinished\u003e moveAttemptFinishedBlks) {\n      List\u003cBlock\u003e blocks \u003d new ArrayList\u003c\u003e();\n\n      for (BlockMovementAttemptFinished item : moveAttemptFinishedBlks) {\n        blocks.add(item.getBlock());\n      }\n      // Adding to the tracking report list. Later this will be send to\n      // namenode via datanode heartbeat.\n      synchronized (blockIdVsMovementStatus) {\n        blockIdVsMovementStatus.addAll(blocks);\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StoragePolicySatisfyWorker.java",
          "extendedDetails": {}
        }
      ]
    },
    "0f2d1ddc2c41c8db800c58cabb150e71804fe23a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10954. [SPS]: Provide mechanism to send blocks movement result back to NN from coordinator DN. Contributed by Rakesh R\n",
      "commitDate": "12/08/18 3:05 AM",
      "commitName": "0f2d1ddc2c41c8db800c58cabb150e71804fe23a",
      "commitAuthor": "Rakesh Radhakrishnan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10954. [SPS]: Provide mechanism to send blocks movement result back to NN from coordinator DN. Contributed by Rakesh R\n",
          "commitDate": "12/08/18 3:05 AM",
          "commitName": "0f2d1ddc2c41c8db800c58cabb150e71804fe23a",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "12/08/18 3:05 AM",
          "commitNameOld": "24add8c2f89b63640672c016f03ebfa07d585a0d",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,23 @@\n-    void handle(List\u003cBlockMovementResult\u003e results) {\n-      completedBlocks.addAll(results);\n-      // TODO: notify namenode about the success/failures.\n+    void handle(List\u003cBlockMovementResult\u003e resultsPerTrackId) {\n+      BlocksStorageMovementResult.Status status \u003d\n+          BlocksStorageMovementResult.Status.SUCCESS;\n+      long trackId \u003d -1;\n+      for (BlockMovementResult blockMovementResult : resultsPerTrackId) {\n+        trackId \u003d blockMovementResult.getTrackId();\n+        if (blockMovementResult.status \u003d\u003d\n+            BlockMovementStatus.DN_BLK_STORAGE_MOVEMENT_FAILURE) {\n+          status \u003d BlocksStorageMovementResult.Status.FAILURE;\n+          // If any of the block movement is failed, then mark as failure so\n+          // that namenode can take a decision to retry the blocks associated to\n+          // the given trackId.\n+          break;\n+        }\n+      }\n+\n+      // Adding to the tracking results list. Later this will be send to\n+      // namenode via datanode heartbeat.\n+      synchronized (trackIdVsMovementStatus) {\n+        trackIdVsMovementStatus.add(\n+            new BlocksStorageMovementResult(trackId, status));\n+      }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    void handle(List\u003cBlockMovementResult\u003e resultsPerTrackId) {\n      BlocksStorageMovementResult.Status status \u003d\n          BlocksStorageMovementResult.Status.SUCCESS;\n      long trackId \u003d -1;\n      for (BlockMovementResult blockMovementResult : resultsPerTrackId) {\n        trackId \u003d blockMovementResult.getTrackId();\n        if (blockMovementResult.status \u003d\u003d\n            BlockMovementStatus.DN_BLK_STORAGE_MOVEMENT_FAILURE) {\n          status \u003d BlocksStorageMovementResult.Status.FAILURE;\n          // If any of the block movement is failed, then mark as failure so\n          // that namenode can take a decision to retry the blocks associated to\n          // the given trackId.\n          break;\n        }\n      }\n\n      // Adding to the tracking results list. Later this will be send to\n      // namenode via datanode heartbeat.\n      synchronized (trackIdVsMovementStatus) {\n        trackIdVsMovementStatus.add(\n            new BlocksStorageMovementResult(trackId, status));\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StoragePolicySatisfyWorker.java",
          "extendedDetails": {
            "oldValue": "[results-List\u003cBlockMovementResult\u003e]",
            "newValue": "[resultsPerTrackId-List\u003cBlockMovementResult\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10954. [SPS]: Provide mechanism to send blocks movement result back to NN from coordinator DN. Contributed by Rakesh R\n",
          "commitDate": "12/08/18 3:05 AM",
          "commitName": "0f2d1ddc2c41c8db800c58cabb150e71804fe23a",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "12/08/18 3:05 AM",
          "commitNameOld": "24add8c2f89b63640672c016f03ebfa07d585a0d",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,23 @@\n-    void handle(List\u003cBlockMovementResult\u003e results) {\n-      completedBlocks.addAll(results);\n-      // TODO: notify namenode about the success/failures.\n+    void handle(List\u003cBlockMovementResult\u003e resultsPerTrackId) {\n+      BlocksStorageMovementResult.Status status \u003d\n+          BlocksStorageMovementResult.Status.SUCCESS;\n+      long trackId \u003d -1;\n+      for (BlockMovementResult blockMovementResult : resultsPerTrackId) {\n+        trackId \u003d blockMovementResult.getTrackId();\n+        if (blockMovementResult.status \u003d\u003d\n+            BlockMovementStatus.DN_BLK_STORAGE_MOVEMENT_FAILURE) {\n+          status \u003d BlocksStorageMovementResult.Status.FAILURE;\n+          // If any of the block movement is failed, then mark as failure so\n+          // that namenode can take a decision to retry the blocks associated to\n+          // the given trackId.\n+          break;\n+        }\n+      }\n+\n+      // Adding to the tracking results list. Later this will be send to\n+      // namenode via datanode heartbeat.\n+      synchronized (trackIdVsMovementStatus) {\n+        trackIdVsMovementStatus.add(\n+            new BlocksStorageMovementResult(trackId, status));\n+      }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    void handle(List\u003cBlockMovementResult\u003e resultsPerTrackId) {\n      BlocksStorageMovementResult.Status status \u003d\n          BlocksStorageMovementResult.Status.SUCCESS;\n      long trackId \u003d -1;\n      for (BlockMovementResult blockMovementResult : resultsPerTrackId) {\n        trackId \u003d blockMovementResult.getTrackId();\n        if (blockMovementResult.status \u003d\u003d\n            BlockMovementStatus.DN_BLK_STORAGE_MOVEMENT_FAILURE) {\n          status \u003d BlocksStorageMovementResult.Status.FAILURE;\n          // If any of the block movement is failed, then mark as failure so\n          // that namenode can take a decision to retry the blocks associated to\n          // the given trackId.\n          break;\n        }\n      }\n\n      // Adding to the tracking results list. Later this will be send to\n      // namenode via datanode heartbeat.\n      synchronized (trackIdVsMovementStatus) {\n        trackIdVsMovementStatus.add(\n            new BlocksStorageMovementResult(trackId, status));\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StoragePolicySatisfyWorker.java",
          "extendedDetails": {}
        }
      ]
    },
    "24add8c2f89b63640672c016f03ebfa07d585a0d": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10884: [SPS]: Add block movement tracker to track the completion of block movement future tasks at DN. Contributed by Rakesh R\n",
      "commitDate": "12/08/18 3:05 AM",
      "commitName": "24add8c2f89b63640672c016f03ebfa07d585a0d",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,4 @@\n+    void handle(List\u003cBlockMovementResult\u003e results) {\n+      completedBlocks.addAll(results);\n+      // TODO: notify namenode about the success/failures.\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    void handle(List\u003cBlockMovementResult\u003e results) {\n      completedBlocks.addAll(results);\n      // TODO: notify namenode about the success/failures.\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StoragePolicySatisfyWorker.java"
    }
  }
}