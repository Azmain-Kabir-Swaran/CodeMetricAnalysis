{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SerializedExceptionPBImpl.java",
  "functionName": "deSerialize",
  "functionId": "deSerialize",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/SerializedExceptionPBImpl.java",
  "functionStartLine": 86,
  "functionEndLine": 108,
  "numCommitsSeen": 4,
  "timeTaken": 829,
  "changeHistory": [
    "4672315e2d6abe1cee0210cf7d3e8ab114ba933c",
    "3ca3137179ef093e42cde06587c9ea785b10f32c"
  ],
  "changeHistoryShort": {
    "4672315e2d6abe1cee0210cf7d3e8ab114ba933c": "Ybodychange",
    "3ca3137179ef093e42cde06587c9ea785b10f32c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4672315e2d6abe1cee0210cf7d3e8ab114ba933c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3770. SerializedException should also handle java.lang.Error on de-serialization. Contributed by Lavkesh Lahngir\n",
      "commitDate": "29/06/15 2:31 PM",
      "commitName": "4672315e2d6abe1cee0210cf7d3e8ab114ba933c",
      "commitAuthor": "Jian He",
      "commitDateOld": "25/06/15 5:08 AM",
      "commitNameOld": "b381f88c71d18497deb35039372b1e9715d2c038",
      "commitAuthorOld": "Devaraj K",
      "daysBetweenCommits": 4.39,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public Throwable deSerialize() {\n \n     SerializedException cause \u003d getCause();\n     SerializedExceptionProtoOrBuilder p \u003d viaProto ? proto : builder;\n     Class\u003c?\u003e realClass \u003d null;\n     try {\n       realClass \u003d Class.forName(p.getClassName());\n     } catch (ClassNotFoundException e) {\n       throw new YarnRuntimeException(e);\n     }\n     Class classType \u003d null;\n     if (YarnException.class.isAssignableFrom(realClass)) {\n       classType \u003d YarnException.class;\n     } else if (IOException.class.isAssignableFrom(realClass)) {\n       classType \u003d IOException.class;\n     } else if (RuntimeException.class.isAssignableFrom(realClass)) {\n       classType \u003d RuntimeException.class;\n     } else {\n-      classType \u003d Exception.class;\n+      classType \u003d Throwable.class;\n     }\n     return instantiateException(realClass.asSubclass(classType), getMessage(),\n       cause \u003d\u003d null ? null : cause.deSerialize());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Throwable deSerialize() {\n\n    SerializedException cause \u003d getCause();\n    SerializedExceptionProtoOrBuilder p \u003d viaProto ? proto : builder;\n    Class\u003c?\u003e realClass \u003d null;\n    try {\n      realClass \u003d Class.forName(p.getClassName());\n    } catch (ClassNotFoundException e) {\n      throw new YarnRuntimeException(e);\n    }\n    Class classType \u003d null;\n    if (YarnException.class.isAssignableFrom(realClass)) {\n      classType \u003d YarnException.class;\n    } else if (IOException.class.isAssignableFrom(realClass)) {\n      classType \u003d IOException.class;\n    } else if (RuntimeException.class.isAssignableFrom(realClass)) {\n      classType \u003d RuntimeException.class;\n    } else {\n      classType \u003d Throwable.class;\n    }\n    return instantiateException(realClass.asSubclass(classType), getMessage(),\n      cause \u003d\u003d null ? null : cause.deSerialize());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/SerializedExceptionPBImpl.java",
      "extendedDetails": {}
    },
    "3ca3137179ef093e42cde06587c9ea785b10f32c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/07/13 8:41 PM",
      "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,23 @@\n+  public Throwable deSerialize() {\n+\n+    SerializedException cause \u003d getCause();\n+    SerializedExceptionProtoOrBuilder p \u003d viaProto ? proto : builder;\n+    Class\u003c?\u003e realClass \u003d null;\n+    try {\n+      realClass \u003d Class.forName(p.getClassName());\n+    } catch (ClassNotFoundException e) {\n+      throw new YarnRuntimeException(e);\n+    }\n+    Class classType \u003d null;\n+    if (YarnException.class.isAssignableFrom(realClass)) {\n+      classType \u003d YarnException.class;\n+    } else if (IOException.class.isAssignableFrom(realClass)) {\n+      classType \u003d IOException.class;\n+    } else if (RuntimeException.class.isAssignableFrom(realClass)) {\n+      classType \u003d RuntimeException.class;\n+    } else {\n+      classType \u003d Exception.class;\n+    }\n+    return instantiateException(realClass.asSubclass(classType), getMessage(),\n+      cause \u003d\u003d null ? null : cause.deSerialize());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Throwable deSerialize() {\n\n    SerializedException cause \u003d getCause();\n    SerializedExceptionProtoOrBuilder p \u003d viaProto ? proto : builder;\n    Class\u003c?\u003e realClass \u003d null;\n    try {\n      realClass \u003d Class.forName(p.getClassName());\n    } catch (ClassNotFoundException e) {\n      throw new YarnRuntimeException(e);\n    }\n    Class classType \u003d null;\n    if (YarnException.class.isAssignableFrom(realClass)) {\n      classType \u003d YarnException.class;\n    } else if (IOException.class.isAssignableFrom(realClass)) {\n      classType \u003d IOException.class;\n    } else if (RuntimeException.class.isAssignableFrom(realClass)) {\n      classType \u003d RuntimeException.class;\n    } else {\n      classType \u003d Exception.class;\n    }\n    return instantiateException(realClass.asSubclass(classType), getMessage(),\n      cause \u003d\u003d null ? null : cause.deSerialize());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/SerializedExceptionPBImpl.java"
    }
  }
}