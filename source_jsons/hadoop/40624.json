{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BatchedRequests.java",
  "functionName": "addToBlacklist",
  "functionId": "addToBlacklist___tags-Set__String____node-SchedulerNode",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/processor/BatchedRequests.java",
  "functionStartLine": 111,
  "functionEndLine": 118,
  "numCommitsSeen": 5,
  "timeTaken": 1940,
  "changeHistory": [
    "6e5ba9366fc05719906ff2789b1a0fd26001182b",
    "a52d11fb8c103f14e42692600a058ba3b56e2ecf",
    "f9af15d659f59fd0cf564fe1ecc8e06c6429ba68"
  ],
  "changeHistoryShort": {
    "6e5ba9366fc05719906ff2789b1a0fd26001182b": "Ybodychange",
    "a52d11fb8c103f14e42692600a058ba3b56e2ecf": "Ymodifierchange",
    "f9af15d659f59fd0cf564fe1ecc8e06c6429ba68": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6e5ba9366fc05719906ff2789b1a0fd26001182b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7839. Modify PlacementAlgorithm to Check node capacity before placing request on node. (Panagiotis Garefalakis via asuresh)\n",
      "commitDate": "02/02/18 10:28 AM",
      "commitName": "6e5ba9366fc05719906ff2789b1a0fd26001182b",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "31/01/18 1:30 AM",
      "commitNameOld": "28fe7f331837b36e78fa34ed990993677dddeaee",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 2.37,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   public void addToBlacklist(Set\u003cString\u003e tags, SchedulerNode node) {\n-    if (tags !\u003d null \u0026\u0026 !tags.isEmpty()) {\n+    if (tags !\u003d null \u0026\u0026 !tags.isEmpty() \u0026\u0026 node !\u003d null) {\n       // We are currently assuming a single allocation tag\n       // per scheduler request currently.\n       blacklist.computeIfAbsent(tags.iterator().next(),\n           k -\u003e new HashSet\u003c\u003e()).add(node.getNodeID());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addToBlacklist(Set\u003cString\u003e tags, SchedulerNode node) {\n    if (tags !\u003d null \u0026\u0026 !tags.isEmpty() \u0026\u0026 node !\u003d null) {\n      // We are currently assuming a single allocation tag\n      // per scheduler request currently.\n      blacklist.computeIfAbsent(tags.iterator().next(),\n          k -\u003e new HashSet\u003c\u003e()).add(node.getNodeID());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/processor/BatchedRequests.java",
      "extendedDetails": {}
    },
    "a52d11fb8c103f14e42692600a058ba3b56e2ecf": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-7613. Implement Basic algorithm for constraint based placement. (Panagiotis Garefalakis via asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "a52d11fb8c103f14e42692600a058ba3b56e2ecf",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "31/01/18 1:30 AM",
      "commitNameOld": "f9af15d659f59fd0cf564fe1ecc8e06c6429ba68",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n-  void addToBlacklist(Set\u003cString\u003e tags, SchedulerNode node) {\n+  public void addToBlacklist(Set\u003cString\u003e tags, SchedulerNode node) {\n     if (tags !\u003d null \u0026\u0026 !tags.isEmpty()) {\n       // We are currently assuming a single allocation tag\n       // per scheduler request currently.\n       blacklist.computeIfAbsent(tags.iterator().next(),\n           k -\u003e new HashSet\u003c\u003e()).add(node.getNodeID());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addToBlacklist(Set\u003cString\u003e tags, SchedulerNode node) {\n    if (tags !\u003d null \u0026\u0026 !tags.isEmpty()) {\n      // We are currently assuming a single allocation tag\n      // per scheduler request currently.\n      blacklist.computeIfAbsent(tags.iterator().next(),\n          k -\u003e new HashSet\u003c\u003e()).add(node.getNodeID());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/processor/BatchedRequests.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[public]"
      }
    },
    "f9af15d659f59fd0cf564fe1ecc8e06c6429ba68": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7612. Add Processor Framework for Rich Placement Constraints. (asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "f9af15d659f59fd0cf564fe1ecc8e06c6429ba68",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,8 @@\n+  void addToBlacklist(Set\u003cString\u003e tags, SchedulerNode node) {\n+    if (tags !\u003d null \u0026\u0026 !tags.isEmpty()) {\n+      // We are currently assuming a single allocation tag\n+      // per scheduler request currently.\n+      blacklist.computeIfAbsent(tags.iterator().next(),\n+          k -\u003e new HashSet\u003c\u003e()).add(node.getNodeID());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void addToBlacklist(Set\u003cString\u003e tags, SchedulerNode node) {\n    if (tags !\u003d null \u0026\u0026 !tags.isEmpty()) {\n      // We are currently assuming a single allocation tag\n      // per scheduler request currently.\n      blacklist.computeIfAbsent(tags.iterator().next(),\n          k -\u003e new HashSet\u003c\u003e()).add(node.getNodeID());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/processor/BatchedRequests.java"
    }
  }
}