{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MRAppMaster.java",
  "functionName": "createSpeculator",
  "functionId": "createSpeculator___conf-Configuration__context-AppContext(modifiers-final)",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java",
  "functionStartLine": 823,
  "functionEndLine": 859,
  "numCommitsSeen": 126,
  "timeTaken": 8665,
  "changeHistory": [
    "9e62bcca4e2ee4aaa3844d1d975dc0adc93ab602",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "fafe8cd28e726566509c679e19d7da622f29f90d",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "9e62bcca4e2ee4aaa3844d1d975dc0adc93ab602": "Ymultichange(Ybodychange,Yparametermetachange)",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Ybodychange",
    "fafe8cd28e726566509c679e19d7da622f29f90d": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9e62bcca4e2ee4aaa3844d1d975dc0adc93ab602": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "MAPREDUCE-5957. AM throws ClassNotFoundException with job classloader enabled if custom output format/committer is used. Contributed by Sangjin Lee\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612358 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/07/14 10:54 AM",
      "commitName": "9e62bcca4e2ee4aaa3844d1d975dc0adc93ab602",
      "commitAuthor": "Jason Darrell Lowe",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-5957. AM throws ClassNotFoundException with job classloader enabled if custom output format/committer is used. Contributed by Sangjin Lee\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612358 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/07/14 10:54 AM",
          "commitName": "9e62bcca4e2ee4aaa3844d1d975dc0adc93ab602",
          "commitAuthor": "Jason Darrell Lowe",
          "commitDateOld": "11/07/14 1:45 AM",
          "commitNameOld": "64306aa1b5f280e5ffaf2186bef706acd93b1412",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 10.38,
          "commitsBetweenForRepo": 64,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,37 @@\n-  protected Speculator createSpeculator(Configuration conf, AppContext context) {\n-    Class\u003c? extends Speculator\u003e speculatorClass;\n+  protected Speculator createSpeculator(Configuration conf,\n+      final AppContext context) {\n+    return callWithJobClassLoader(conf, new Action\u003cSpeculator\u003e() {\n+      public Speculator call(Configuration conf) {\n+        Class\u003c? extends Speculator\u003e speculatorClass;\n+        try {\n+          speculatorClass\n+              // \"yarn.mapreduce.job.speculator.class\"\n+              \u003d conf.getClass(MRJobConfig.MR_AM_JOB_SPECULATOR,\n+                              DefaultSpeculator.class,\n+                              Speculator.class);\n+          Constructor\u003c? extends Speculator\u003e speculatorConstructor\n+              \u003d speculatorClass.getConstructor\n+                   (Configuration.class, AppContext.class);\n+          Speculator result \u003d speculatorConstructor.newInstance(conf, context);\n \n-    try {\n-      speculatorClass\n-          // \"yarn.mapreduce.job.speculator.class\"\n-          \u003d conf.getClass(MRJobConfig.MR_AM_JOB_SPECULATOR,\n-                          DefaultSpeculator.class,\n-                          Speculator.class);\n-      Constructor\u003c? extends Speculator\u003e speculatorConstructor\n-          \u003d speculatorClass.getConstructor\n-               (Configuration.class, AppContext.class);\n-      Speculator result \u003d speculatorConstructor.newInstance(conf, context);\n-\n-      return result;\n-    } catch (InstantiationException ex) {\n-      LOG.error(\"Can\u0027t make a speculator -- check \"\n-          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n-      throw new YarnRuntimeException(ex);\n-    } catch (IllegalAccessException ex) {\n-      LOG.error(\"Can\u0027t make a speculator -- check \"\n-          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n-      throw new YarnRuntimeException(ex);\n-    } catch (InvocationTargetException ex) {\n-      LOG.error(\"Can\u0027t make a speculator -- check \"\n-          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n-      throw new YarnRuntimeException(ex);\n-    } catch (NoSuchMethodException ex) {\n-      LOG.error(\"Can\u0027t make a speculator -- check \"\n-          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n-      throw new YarnRuntimeException(ex);\n-    }\n+          return result;\n+        } catch (InstantiationException ex) {\n+          LOG.error(\"Can\u0027t make a speculator -- check \"\n+              + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n+          throw new YarnRuntimeException(ex);\n+        } catch (IllegalAccessException ex) {\n+          LOG.error(\"Can\u0027t make a speculator -- check \"\n+              + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n+          throw new YarnRuntimeException(ex);\n+        } catch (InvocationTargetException ex) {\n+          LOG.error(\"Can\u0027t make a speculator -- check \"\n+              + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n+          throw new YarnRuntimeException(ex);\n+        } catch (NoSuchMethodException ex) {\n+          LOG.error(\"Can\u0027t make a speculator -- check \"\n+              + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n+          throw new YarnRuntimeException(ex);\n+        }\n+      }\n+    });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected Speculator createSpeculator(Configuration conf,\n      final AppContext context) {\n    return callWithJobClassLoader(conf, new Action\u003cSpeculator\u003e() {\n      public Speculator call(Configuration conf) {\n        Class\u003c? extends Speculator\u003e speculatorClass;\n        try {\n          speculatorClass\n              // \"yarn.mapreduce.job.speculator.class\"\n              \u003d conf.getClass(MRJobConfig.MR_AM_JOB_SPECULATOR,\n                              DefaultSpeculator.class,\n                              Speculator.class);\n          Constructor\u003c? extends Speculator\u003e speculatorConstructor\n              \u003d speculatorClass.getConstructor\n                   (Configuration.class, AppContext.class);\n          Speculator result \u003d speculatorConstructor.newInstance(conf, context);\n\n          return result;\n        } catch (InstantiationException ex) {\n          LOG.error(\"Can\u0027t make a speculator -- check \"\n              + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n          throw new YarnRuntimeException(ex);\n        } catch (IllegalAccessException ex) {\n          LOG.error(\"Can\u0027t make a speculator -- check \"\n              + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n          throw new YarnRuntimeException(ex);\n        } catch (InvocationTargetException ex) {\n          LOG.error(\"Can\u0027t make a speculator -- check \"\n              + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n          throw new YarnRuntimeException(ex);\n        } catch (NoSuchMethodException ex) {\n          LOG.error(\"Can\u0027t make a speculator -- check \"\n              + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n          throw new YarnRuntimeException(ex);\n        }\n      }\n    });\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "MAPREDUCE-5957. AM throws ClassNotFoundException with job classloader enabled if custom output format/committer is used. Contributed by Sangjin Lee\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612358 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/07/14 10:54 AM",
          "commitName": "9e62bcca4e2ee4aaa3844d1d975dc0adc93ab602",
          "commitAuthor": "Jason Darrell Lowe",
          "commitDateOld": "11/07/14 1:45 AM",
          "commitNameOld": "64306aa1b5f280e5ffaf2186bef706acd93b1412",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 10.38,
          "commitsBetweenForRepo": 64,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,37 @@\n-  protected Speculator createSpeculator(Configuration conf, AppContext context) {\n-    Class\u003c? extends Speculator\u003e speculatorClass;\n+  protected Speculator createSpeculator(Configuration conf,\n+      final AppContext context) {\n+    return callWithJobClassLoader(conf, new Action\u003cSpeculator\u003e() {\n+      public Speculator call(Configuration conf) {\n+        Class\u003c? extends Speculator\u003e speculatorClass;\n+        try {\n+          speculatorClass\n+              // \"yarn.mapreduce.job.speculator.class\"\n+              \u003d conf.getClass(MRJobConfig.MR_AM_JOB_SPECULATOR,\n+                              DefaultSpeculator.class,\n+                              Speculator.class);\n+          Constructor\u003c? extends Speculator\u003e speculatorConstructor\n+              \u003d speculatorClass.getConstructor\n+                   (Configuration.class, AppContext.class);\n+          Speculator result \u003d speculatorConstructor.newInstance(conf, context);\n \n-    try {\n-      speculatorClass\n-          // \"yarn.mapreduce.job.speculator.class\"\n-          \u003d conf.getClass(MRJobConfig.MR_AM_JOB_SPECULATOR,\n-                          DefaultSpeculator.class,\n-                          Speculator.class);\n-      Constructor\u003c? extends Speculator\u003e speculatorConstructor\n-          \u003d speculatorClass.getConstructor\n-               (Configuration.class, AppContext.class);\n-      Speculator result \u003d speculatorConstructor.newInstance(conf, context);\n-\n-      return result;\n-    } catch (InstantiationException ex) {\n-      LOG.error(\"Can\u0027t make a speculator -- check \"\n-          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n-      throw new YarnRuntimeException(ex);\n-    } catch (IllegalAccessException ex) {\n-      LOG.error(\"Can\u0027t make a speculator -- check \"\n-          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n-      throw new YarnRuntimeException(ex);\n-    } catch (InvocationTargetException ex) {\n-      LOG.error(\"Can\u0027t make a speculator -- check \"\n-          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n-      throw new YarnRuntimeException(ex);\n-    } catch (NoSuchMethodException ex) {\n-      LOG.error(\"Can\u0027t make a speculator -- check \"\n-          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n-      throw new YarnRuntimeException(ex);\n-    }\n+          return result;\n+        } catch (InstantiationException ex) {\n+          LOG.error(\"Can\u0027t make a speculator -- check \"\n+              + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n+          throw new YarnRuntimeException(ex);\n+        } catch (IllegalAccessException ex) {\n+          LOG.error(\"Can\u0027t make a speculator -- check \"\n+              + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n+          throw new YarnRuntimeException(ex);\n+        } catch (InvocationTargetException ex) {\n+          LOG.error(\"Can\u0027t make a speculator -- check \"\n+              + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n+          throw new YarnRuntimeException(ex);\n+        } catch (NoSuchMethodException ex) {\n+          LOG.error(\"Can\u0027t make a speculator -- check \"\n+              + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n+          throw new YarnRuntimeException(ex);\n+        }\n+      }\n+    });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected Speculator createSpeculator(Configuration conf,\n      final AppContext context) {\n    return callWithJobClassLoader(conf, new Action\u003cSpeculator\u003e() {\n      public Speculator call(Configuration conf) {\n        Class\u003c? extends Speculator\u003e speculatorClass;\n        try {\n          speculatorClass\n              // \"yarn.mapreduce.job.speculator.class\"\n              \u003d conf.getClass(MRJobConfig.MR_AM_JOB_SPECULATOR,\n                              DefaultSpeculator.class,\n                              Speculator.class);\n          Constructor\u003c? extends Speculator\u003e speculatorConstructor\n              \u003d speculatorClass.getConstructor\n                   (Configuration.class, AppContext.class);\n          Speculator result \u003d speculatorConstructor.newInstance(conf, context);\n\n          return result;\n        } catch (InstantiationException ex) {\n          LOG.error(\"Can\u0027t make a speculator -- check \"\n              + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n          throw new YarnRuntimeException(ex);\n        } catch (IllegalAccessException ex) {\n          LOG.error(\"Can\u0027t make a speculator -- check \"\n              + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n          throw new YarnRuntimeException(ex);\n        } catch (InvocationTargetException ex) {\n          LOG.error(\"Can\u0027t make a speculator -- check \"\n              + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n          throw new YarnRuntimeException(ex);\n        } catch (NoSuchMethodException ex) {\n          LOG.error(\"Can\u0027t make a speculator -- check \"\n              + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n          throw new YarnRuntimeException(ex);\n        }\n      }\n    });\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, context-AppContext]",
            "newValue": "[conf-Configuration, context-AppContext(modifiers-final)]"
          }
        }
      ]
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Ybodychange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "14/05/13 4:43 PM",
      "commitNameOld": "4d8e350750748b919ee2158690a44cd9fd80dcae",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 20.18,
      "commitsBetweenForRepo": 112,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   protected Speculator createSpeculator(Configuration conf, AppContext context) {\n     Class\u003c? extends Speculator\u003e speculatorClass;\n \n     try {\n       speculatorClass\n           // \"yarn.mapreduce.job.speculator.class\"\n           \u003d conf.getClass(MRJobConfig.MR_AM_JOB_SPECULATOR,\n                           DefaultSpeculator.class,\n                           Speculator.class);\n       Constructor\u003c? extends Speculator\u003e speculatorConstructor\n           \u003d speculatorClass.getConstructor\n                (Configuration.class, AppContext.class);\n       Speculator result \u003d speculatorConstructor.newInstance(conf, context);\n \n       return result;\n     } catch (InstantiationException ex) {\n       LOG.error(\"Can\u0027t make a speculator -- check \"\n           + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n-      throw new YarnException(ex);\n+      throw new YarnRuntimeException(ex);\n     } catch (IllegalAccessException ex) {\n       LOG.error(\"Can\u0027t make a speculator -- check \"\n           + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n-      throw new YarnException(ex);\n+      throw new YarnRuntimeException(ex);\n     } catch (InvocationTargetException ex) {\n       LOG.error(\"Can\u0027t make a speculator -- check \"\n           + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n-      throw new YarnException(ex);\n+      throw new YarnRuntimeException(ex);\n     } catch (NoSuchMethodException ex) {\n       LOG.error(\"Can\u0027t make a speculator -- check \"\n           + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n-      throw new YarnException(ex);\n+      throw new YarnRuntimeException(ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Speculator createSpeculator(Configuration conf, AppContext context) {\n    Class\u003c? extends Speculator\u003e speculatorClass;\n\n    try {\n      speculatorClass\n          // \"yarn.mapreduce.job.speculator.class\"\n          \u003d conf.getClass(MRJobConfig.MR_AM_JOB_SPECULATOR,\n                          DefaultSpeculator.class,\n                          Speculator.class);\n      Constructor\u003c? extends Speculator\u003e speculatorConstructor\n          \u003d speculatorClass.getConstructor\n               (Configuration.class, AppContext.class);\n      Speculator result \u003d speculatorConstructor.newInstance(conf, context);\n\n      return result;\n    } catch (InstantiationException ex) {\n      LOG.error(\"Can\u0027t make a speculator -- check \"\n          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n      throw new YarnRuntimeException(ex);\n    } catch (IllegalAccessException ex) {\n      LOG.error(\"Can\u0027t make a speculator -- check \"\n          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n      throw new YarnRuntimeException(ex);\n    } catch (InvocationTargetException ex) {\n      LOG.error(\"Can\u0027t make a speculator -- check \"\n          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n      throw new YarnRuntimeException(ex);\n    } catch (NoSuchMethodException ex) {\n      LOG.error(\"Can\u0027t make a speculator -- check \"\n          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n      throw new YarnRuntimeException(ex);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java",
      "extendedDetails": {}
    },
    "fafe8cd28e726566509c679e19d7da622f29f90d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2864. Normalize configuration variable names for YARN. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166955 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/11 6:44 PM",
      "commitName": "fafe8cd28e726566509c679e19d7da622f29f90d",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 15.06,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   protected Speculator createSpeculator(Configuration conf, AppContext context) {\n     Class\u003c? extends Speculator\u003e speculatorClass;\n \n     try {\n       speculatorClass\n           // \"yarn.mapreduce.job.speculator.class\"\n-          \u003d conf.getClass(AMConstants.SPECULATOR_CLASS,\n+          \u003d conf.getClass(MRJobConfig.MR_AM_JOB_SPECULATOR,\n                           DefaultSpeculator.class,\n                           Speculator.class);\n       Constructor\u003c? extends Speculator\u003e speculatorConstructor\n           \u003d speculatorClass.getConstructor\n                (Configuration.class, AppContext.class);\n       Speculator result \u003d speculatorConstructor.newInstance(conf, context);\n \n       return result;\n     } catch (InstantiationException ex) {\n       LOG.error(\"Can\u0027t make a speculator -- check \"\n-          + AMConstants.SPECULATOR_CLASS + \" \" + ex);\n+          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n       throw new YarnException(ex);\n     } catch (IllegalAccessException ex) {\n       LOG.error(\"Can\u0027t make a speculator -- check \"\n-          + AMConstants.SPECULATOR_CLASS + \" \" + ex);\n+          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n       throw new YarnException(ex);\n     } catch (InvocationTargetException ex) {\n       LOG.error(\"Can\u0027t make a speculator -- check \"\n-          + AMConstants.SPECULATOR_CLASS + \" \" + ex);\n+          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n       throw new YarnException(ex);\n     } catch (NoSuchMethodException ex) {\n       LOG.error(\"Can\u0027t make a speculator -- check \"\n-          + AMConstants.SPECULATOR_CLASS + \" \" + ex);\n+          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n       throw new YarnException(ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Speculator createSpeculator(Configuration conf, AppContext context) {\n    Class\u003c? extends Speculator\u003e speculatorClass;\n\n    try {\n      speculatorClass\n          // \"yarn.mapreduce.job.speculator.class\"\n          \u003d conf.getClass(MRJobConfig.MR_AM_JOB_SPECULATOR,\n                          DefaultSpeculator.class,\n                          Speculator.class);\n      Constructor\u003c? extends Speculator\u003e speculatorConstructor\n          \u003d speculatorClass.getConstructor\n               (Configuration.class, AppContext.class);\n      Speculator result \u003d speculatorConstructor.newInstance(conf, context);\n\n      return result;\n    } catch (InstantiationException ex) {\n      LOG.error(\"Can\u0027t make a speculator -- check \"\n          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n      throw new YarnException(ex);\n    } catch (IllegalAccessException ex) {\n      LOG.error(\"Can\u0027t make a speculator -- check \"\n          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n      throw new YarnException(ex);\n    } catch (InvocationTargetException ex) {\n      LOG.error(\"Can\u0027t make a speculator -- check \"\n          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n      throw new YarnException(ex);\n    } catch (NoSuchMethodException ex) {\n      LOG.error(\"Can\u0027t make a speculator -- check \"\n          + MRJobConfig.MR_AM_JOB_SPECULATOR, ex);\n      throw new YarnException(ex);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected Speculator createSpeculator(Configuration conf, AppContext context) {\n    Class\u003c? extends Speculator\u003e speculatorClass;\n\n    try {\n      speculatorClass\n          // \"yarn.mapreduce.job.speculator.class\"\n          \u003d conf.getClass(AMConstants.SPECULATOR_CLASS,\n                          DefaultSpeculator.class,\n                          Speculator.class);\n      Constructor\u003c? extends Speculator\u003e speculatorConstructor\n          \u003d speculatorClass.getConstructor\n               (Configuration.class, AppContext.class);\n      Speculator result \u003d speculatorConstructor.newInstance(conf, context);\n\n      return result;\n    } catch (InstantiationException ex) {\n      LOG.error(\"Can\u0027t make a speculator -- check \"\n          + AMConstants.SPECULATOR_CLASS + \" \" + ex);\n      throw new YarnException(ex);\n    } catch (IllegalAccessException ex) {\n      LOG.error(\"Can\u0027t make a speculator -- check \"\n          + AMConstants.SPECULATOR_CLASS + \" \" + ex);\n      throw new YarnException(ex);\n    } catch (InvocationTargetException ex) {\n      LOG.error(\"Can\u0027t make a speculator -- check \"\n          + AMConstants.SPECULATOR_CLASS + \" \" + ex);\n      throw new YarnException(ex);\n    } catch (NoSuchMethodException ex) {\n      LOG.error(\"Can\u0027t make a speculator -- check \"\n          + AMConstants.SPECULATOR_CLASS + \" \" + ex);\n      throw new YarnException(ex);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,33 @@\n+  protected Speculator createSpeculator(Configuration conf, AppContext context) {\n+    Class\u003c? extends Speculator\u003e speculatorClass;\n+\n+    try {\n+      speculatorClass\n+          // \"yarn.mapreduce.job.speculator.class\"\n+          \u003d conf.getClass(AMConstants.SPECULATOR_CLASS,\n+                          DefaultSpeculator.class,\n+                          Speculator.class);\n+      Constructor\u003c? extends Speculator\u003e speculatorConstructor\n+          \u003d speculatorClass.getConstructor\n+               (Configuration.class, AppContext.class);\n+      Speculator result \u003d speculatorConstructor.newInstance(conf, context);\n+\n+      return result;\n+    } catch (InstantiationException ex) {\n+      LOG.error(\"Can\u0027t make a speculator -- check \"\n+          + AMConstants.SPECULATOR_CLASS + \" \" + ex);\n+      throw new YarnException(ex);\n+    } catch (IllegalAccessException ex) {\n+      LOG.error(\"Can\u0027t make a speculator -- check \"\n+          + AMConstants.SPECULATOR_CLASS + \" \" + ex);\n+      throw new YarnException(ex);\n+    } catch (InvocationTargetException ex) {\n+      LOG.error(\"Can\u0027t make a speculator -- check \"\n+          + AMConstants.SPECULATOR_CLASS + \" \" + ex);\n+      throw new YarnException(ex);\n+    } catch (NoSuchMethodException ex) {\n+      LOG.error(\"Can\u0027t make a speculator -- check \"\n+          + AMConstants.SPECULATOR_CLASS + \" \" + ex);\n+      throw new YarnException(ex);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected Speculator createSpeculator(Configuration conf, AppContext context) {\n    Class\u003c? extends Speculator\u003e speculatorClass;\n\n    try {\n      speculatorClass\n          // \"yarn.mapreduce.job.speculator.class\"\n          \u003d conf.getClass(AMConstants.SPECULATOR_CLASS,\n                          DefaultSpeculator.class,\n                          Speculator.class);\n      Constructor\u003c? extends Speculator\u003e speculatorConstructor\n          \u003d speculatorClass.getConstructor\n               (Configuration.class, AppContext.class);\n      Speculator result \u003d speculatorConstructor.newInstance(conf, context);\n\n      return result;\n    } catch (InstantiationException ex) {\n      LOG.error(\"Can\u0027t make a speculator -- check \"\n          + AMConstants.SPECULATOR_CLASS + \" \" + ex);\n      throw new YarnException(ex);\n    } catch (IllegalAccessException ex) {\n      LOG.error(\"Can\u0027t make a speculator -- check \"\n          + AMConstants.SPECULATOR_CLASS + \" \" + ex);\n      throw new YarnException(ex);\n    } catch (InvocationTargetException ex) {\n      LOG.error(\"Can\u0027t make a speculator -- check \"\n          + AMConstants.SPECULATOR_CLASS + \" \" + ex);\n      throw new YarnException(ex);\n    } catch (NoSuchMethodException ex) {\n      LOG.error(\"Can\u0027t make a speculator -- check \"\n          + AMConstants.SPECULATOR_CLASS + \" \" + ex);\n      throw new YarnException(ex);\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java"
    }
  }
}