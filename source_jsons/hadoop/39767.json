{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UsersManager.java",
  "functionName": "getLocalVersionOfUsersState",
  "functionId": "getLocalVersionOfUsersState___nodePartition-String__schedulingMode-SchedulingMode__isActive-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
  "functionStartLine": 622,
  "functionEndLine": 644,
  "numCommitsSeen": 13,
  "timeTaken": 2205,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private long getLocalVersionOfUsersState(String nodePartition,\n       SchedulingMode schedulingMode, boolean isActive) {\n+    this.readLock.lock();\n     try {\n-      this.readLock.lock();\n       Map\u003cString, Map\u003cSchedulingMode, Long\u003e\u003e localVersionOfUsersState \u003d (isActive)\n           ? localVersionOfActiveUsersState\n           : localVersionOfAllUsersState;\n \n       if (!localVersionOfUsersState.containsKey(nodePartition)) {\n         return -1;\n       }\n \n       Map\u003cSchedulingMode, Long\u003e localVersion \u003d localVersionOfUsersState\n           .get(nodePartition);\n       if (!localVersion.containsKey(schedulingMode)) {\n         return -1;\n       }\n \n       return localVersion.get(schedulingMode);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long getLocalVersionOfUsersState(String nodePartition,\n      SchedulingMode schedulingMode, boolean isActive) {\n    this.readLock.lock();\n    try {\n      Map\u003cString, Map\u003cSchedulingMode, Long\u003e\u003e localVersionOfUsersState \u003d (isActive)\n          ? localVersionOfActiveUsersState\n          : localVersionOfAllUsersState;\n\n      if (!localVersionOfUsersState.containsKey(nodePartition)) {\n        return -1;\n      }\n\n      Map\u003cSchedulingMode, Long\u003e localVersion \u003d localVersionOfUsersState\n          .get(nodePartition);\n      if (!localVersion.containsKey(schedulingMode)) {\n        return -1;\n      }\n\n      return localVersion.get(schedulingMode);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
      "extendedDetails": {}
    },
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5889. Improve and refactor user-limit calculation in Capacity Scheduler. (Sunil G via wangda)\n",
      "commitDate": "09/02/17 10:23 AM",
      "commitName": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,23 @@\n+  private long getLocalVersionOfUsersState(String nodePartition,\n+      SchedulingMode schedulingMode, boolean isActive) {\n+    try {\n+      this.readLock.lock();\n+      Map\u003cString, Map\u003cSchedulingMode, Long\u003e\u003e localVersionOfUsersState \u003d (isActive)\n+          ? localVersionOfActiveUsersState\n+          : localVersionOfAllUsersState;\n+\n+      if (!localVersionOfUsersState.containsKey(nodePartition)) {\n+        return -1;\n+      }\n+\n+      Map\u003cSchedulingMode, Long\u003e localVersion \u003d localVersionOfUsersState\n+          .get(nodePartition);\n+      if (!localVersion.containsKey(schedulingMode)) {\n+        return -1;\n+      }\n+\n+      return localVersion.get(schedulingMode);\n+    } finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private long getLocalVersionOfUsersState(String nodePartition,\n      SchedulingMode schedulingMode, boolean isActive) {\n    try {\n      this.readLock.lock();\n      Map\u003cString, Map\u003cSchedulingMode, Long\u003e\u003e localVersionOfUsersState \u003d (isActive)\n          ? localVersionOfActiveUsersState\n          : localVersionOfAllUsersState;\n\n      if (!localVersionOfUsersState.containsKey(nodePartition)) {\n        return -1;\n      }\n\n      Map\u003cSchedulingMode, Long\u003e localVersion \u003d localVersionOfUsersState\n          .get(nodePartition);\n      if (!localVersion.containsKey(schedulingMode)) {\n        return -1;\n      }\n\n      return localVersion.get(schedulingMode);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java"
    }
  }
}