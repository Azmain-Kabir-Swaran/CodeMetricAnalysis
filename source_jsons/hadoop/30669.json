{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeveldbTimelineStateStore.java",
  "functionName": "storeToken",
  "functionId": "storeToken___tokenId-TimelineDelegationTokenIdentifier__renewDate-Long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/recovery/LeveldbTimelineStateStore.java",
  "functionStartLine": 151,
  "functionEndLine": 174,
  "numCommitsSeen": 4,
  "timeTaken": 1830,
  "changeHistory": [
    "839e077faf4019d6efdcd89d95930023cd0b0a08",
    "a4aa1cb40504299d3401008fdabc795eafb28713",
    "1a78c0ff016097930edf68e8278f826b637e918c",
    "149512a83743715bb100feb6747b7e88301018ab"
  ],
  "changeHistoryShort": {
    "839e077faf4019d6efdcd89d95930023cd0b0a08": "Ybodychange",
    "a4aa1cb40504299d3401008fdabc795eafb28713": "Ybodychange",
    "1a78c0ff016097930edf68e8278f826b637e918c": "Ybodychange",
    "149512a83743715bb100feb6747b7e88301018ab": "Yintroduced"
  },
  "changeHistoryDetails": {
    "839e077faf4019d6efdcd89d95930023cd0b0a08": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6873. Moving logging APIs over to slf4j in hadoop-yarn-server-applicationhistoryservice. Contributed by Yeliang Cang.\n",
      "commitDate": "07/08/17 2:56 AM",
      "commitName": "839e077faf4019d6efdcd89d95930023cd0b0a08",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "31/07/17 8:15 PM",
      "commitNameOld": "a4aa1cb40504299d3401008fdabc795eafb28713",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 6.28,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public void storeToken(TimelineDelegationTokenIdentifier tokenId,\n       Long renewDate) throws IOException {\n     DataOutputStream ds \u003d null;\n     WriteBatch batch \u003d null;\n     try {\n       byte[] k \u003d createTokenEntryKey(tokenId.getSequenceNumber());\n       if (db.get(k) !\u003d null) {\n         throw new IOException(tokenId + \" already exists\");\n       }\n       byte[] v \u003d buildTokenData(tokenId, renewDate);\n       ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n       ds \u003d new DataOutputStream(bs);\n       ds.writeInt(tokenId.getSequenceNumber());\n       batch \u003d db.createWriteBatch();\n       batch.put(k, v);\n       batch.put(LATEST_SEQUENCE_NUMBER_KEY, bs.toByteArray());\n       db.write(batch);\n     } catch (DBException e) {\n       throw new IOException(e);\n     } finally {\n-      IOUtils.cleanup(LOG, ds);\n-      IOUtils.cleanup(LOG, batch);\n+      IOUtils.cleanupWithLogger(LOG, ds);\n+      IOUtils.cleanupWithLogger(LOG, batch);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeToken(TimelineDelegationTokenIdentifier tokenId,\n      Long renewDate) throws IOException {\n    DataOutputStream ds \u003d null;\n    WriteBatch batch \u003d null;\n    try {\n      byte[] k \u003d createTokenEntryKey(tokenId.getSequenceNumber());\n      if (db.get(k) !\u003d null) {\n        throw new IOException(tokenId + \" already exists\");\n      }\n      byte[] v \u003d buildTokenData(tokenId, renewDate);\n      ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n      ds \u003d new DataOutputStream(bs);\n      ds.writeInt(tokenId.getSequenceNumber());\n      batch \u003d db.createWriteBatch();\n      batch.put(k, v);\n      batch.put(LATEST_SEQUENCE_NUMBER_KEY, bs.toByteArray());\n      db.write(batch);\n    } catch (DBException e) {\n      throw new IOException(e);\n    } finally {\n      IOUtils.cleanupWithLogger(LOG, ds);\n      IOUtils.cleanupWithLogger(LOG, batch);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/recovery/LeveldbTimelineStateStore.java",
      "extendedDetails": {}
    },
    "a4aa1cb40504299d3401008fdabc795eafb28713": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-6873. Moving logging APIs over to slf4j in hadoop-yarn-server-applicationhistoryservice. Contributed by Yeliang Cang.\"\n\nThis reverts commit 1a78c0ff016097930edf68e8278f826b637e918c.\n",
      "commitDate": "31/07/17 8:15 PM",
      "commitName": "a4aa1cb40504299d3401008fdabc795eafb28713",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "31/07/17 6:53 PM",
      "commitNameOld": "1a78c0ff016097930edf68e8278f826b637e918c",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public void storeToken(TimelineDelegationTokenIdentifier tokenId,\n       Long renewDate) throws IOException {\n     DataOutputStream ds \u003d null;\n     WriteBatch batch \u003d null;\n     try {\n       byte[] k \u003d createTokenEntryKey(tokenId.getSequenceNumber());\n       if (db.get(k) !\u003d null) {\n         throw new IOException(tokenId + \" already exists\");\n       }\n       byte[] v \u003d buildTokenData(tokenId, renewDate);\n       ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n       ds \u003d new DataOutputStream(bs);\n       ds.writeInt(tokenId.getSequenceNumber());\n       batch \u003d db.createWriteBatch();\n       batch.put(k, v);\n       batch.put(LATEST_SEQUENCE_NUMBER_KEY, bs.toByteArray());\n       db.write(batch);\n     } catch (DBException e) {\n       throw new IOException(e);\n     } finally {\n-      IOUtils.cleanupWithLogger(LOG, ds);\n-      IOUtils.cleanupWithLogger(LOG, batch);\n+      IOUtils.cleanup(LOG, ds);\n+      IOUtils.cleanup(LOG, batch);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeToken(TimelineDelegationTokenIdentifier tokenId,\n      Long renewDate) throws IOException {\n    DataOutputStream ds \u003d null;\n    WriteBatch batch \u003d null;\n    try {\n      byte[] k \u003d createTokenEntryKey(tokenId.getSequenceNumber());\n      if (db.get(k) !\u003d null) {\n        throw new IOException(tokenId + \" already exists\");\n      }\n      byte[] v \u003d buildTokenData(tokenId, renewDate);\n      ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n      ds \u003d new DataOutputStream(bs);\n      ds.writeInt(tokenId.getSequenceNumber());\n      batch \u003d db.createWriteBatch();\n      batch.put(k, v);\n      batch.put(LATEST_SEQUENCE_NUMBER_KEY, bs.toByteArray());\n      db.write(batch);\n    } catch (DBException e) {\n      throw new IOException(e);\n    } finally {\n      IOUtils.cleanup(LOG, ds);\n      IOUtils.cleanup(LOG, batch);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/recovery/LeveldbTimelineStateStore.java",
      "extendedDetails": {}
    },
    "1a78c0ff016097930edf68e8278f826b637e918c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6873. Moving logging APIs over to slf4j in hadoop-yarn-server-applicationhistoryservice. Contributed by Yeliang Cang.\n",
      "commitDate": "31/07/17 6:53 PM",
      "commitName": "1a78c0ff016097930edf68e8278f826b637e918c",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "23/12/14 6:25 PM",
      "commitNameOld": "149512a83743715bb100feb6747b7e88301018ab",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 950.98,
      "commitsBetweenForRepo": 6637,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public void storeToken(TimelineDelegationTokenIdentifier tokenId,\n       Long renewDate) throws IOException {\n     DataOutputStream ds \u003d null;\n     WriteBatch batch \u003d null;\n     try {\n       byte[] k \u003d createTokenEntryKey(tokenId.getSequenceNumber());\n       if (db.get(k) !\u003d null) {\n         throw new IOException(tokenId + \" already exists\");\n       }\n       byte[] v \u003d buildTokenData(tokenId, renewDate);\n       ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n       ds \u003d new DataOutputStream(bs);\n       ds.writeInt(tokenId.getSequenceNumber());\n       batch \u003d db.createWriteBatch();\n       batch.put(k, v);\n       batch.put(LATEST_SEQUENCE_NUMBER_KEY, bs.toByteArray());\n       db.write(batch);\n     } catch (DBException e) {\n       throw new IOException(e);\n     } finally {\n-      IOUtils.cleanup(LOG, ds);\n-      IOUtils.cleanup(LOG, batch);\n+      IOUtils.cleanupWithLogger(LOG, ds);\n+      IOUtils.cleanupWithLogger(LOG, batch);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeToken(TimelineDelegationTokenIdentifier tokenId,\n      Long renewDate) throws IOException {\n    DataOutputStream ds \u003d null;\n    WriteBatch batch \u003d null;\n    try {\n      byte[] k \u003d createTokenEntryKey(tokenId.getSequenceNumber());\n      if (db.get(k) !\u003d null) {\n        throw new IOException(tokenId + \" already exists\");\n      }\n      byte[] v \u003d buildTokenData(tokenId, renewDate);\n      ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n      ds \u003d new DataOutputStream(bs);\n      ds.writeInt(tokenId.getSequenceNumber());\n      batch \u003d db.createWriteBatch();\n      batch.put(k, v);\n      batch.put(LATEST_SEQUENCE_NUMBER_KEY, bs.toByteArray());\n      db.write(batch);\n    } catch (DBException e) {\n      throw new IOException(e);\n    } finally {\n      IOUtils.cleanupWithLogger(LOG, ds);\n      IOUtils.cleanupWithLogger(LOG, batch);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/recovery/LeveldbTimelineStateStore.java",
      "extendedDetails": {}
    },
    "149512a83743715bb100feb6747b7e88301018ab": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2837. Support TimeLine server to recover delegation token when restarting. Contributed by Zhijie Shen\n",
      "commitDate": "23/12/14 6:25 PM",
      "commitName": "149512a83743715bb100feb6747b7e88301018ab",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,24 @@\n+  public void storeToken(TimelineDelegationTokenIdentifier tokenId,\n+      Long renewDate) throws IOException {\n+    DataOutputStream ds \u003d null;\n+    WriteBatch batch \u003d null;\n+    try {\n+      byte[] k \u003d createTokenEntryKey(tokenId.getSequenceNumber());\n+      if (db.get(k) !\u003d null) {\n+        throw new IOException(tokenId + \" already exists\");\n+      }\n+      byte[] v \u003d buildTokenData(tokenId, renewDate);\n+      ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n+      ds \u003d new DataOutputStream(bs);\n+      ds.writeInt(tokenId.getSequenceNumber());\n+      batch \u003d db.createWriteBatch();\n+      batch.put(k, v);\n+      batch.put(LATEST_SEQUENCE_NUMBER_KEY, bs.toByteArray());\n+      db.write(batch);\n+    } catch (DBException e) {\n+      throw new IOException(e);\n+    } finally {\n+      IOUtils.cleanup(LOG, ds);\n+      IOUtils.cleanup(LOG, batch);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeToken(TimelineDelegationTokenIdentifier tokenId,\n      Long renewDate) throws IOException {\n    DataOutputStream ds \u003d null;\n    WriteBatch batch \u003d null;\n    try {\n      byte[] k \u003d createTokenEntryKey(tokenId.getSequenceNumber());\n      if (db.get(k) !\u003d null) {\n        throw new IOException(tokenId + \" already exists\");\n      }\n      byte[] v \u003d buildTokenData(tokenId, renewDate);\n      ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n      ds \u003d new DataOutputStream(bs);\n      ds.writeInt(tokenId.getSequenceNumber());\n      batch \u003d db.createWriteBatch();\n      batch.put(k, v);\n      batch.put(LATEST_SEQUENCE_NUMBER_KEY, bs.toByteArray());\n      db.write(batch);\n    } catch (DBException e) {\n      throw new IOException(e);\n    } finally {\n      IOUtils.cleanup(LOG, ds);\n      IOUtils.cleanup(LOG, batch);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/recovery/LeveldbTimelineStateStore.java"
    }
  }
}