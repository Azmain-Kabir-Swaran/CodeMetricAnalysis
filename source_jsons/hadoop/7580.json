{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NameNode.java",
  "functionName": "monitorHealth",
  "functionId": "monitorHealth",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
  "functionStartLine": 1831,
  "functionEndLine": 1853,
  "numCommitsSeen": 210,
  "timeTaken": 4881,
  "changeHistory": [
    "3ab77d9bc9eacfdb218b68988235a921c810b0d1",
    "3f0a727f7585147207f2a011816434d0002b5284",
    "7b6b204924ec3d2aeb4c42c09456fbbefc3c7817",
    "978a8050e28b2afb193a3e00d82a8475fa4d2428"
  ],
  "changeHistoryShort": {
    "3ab77d9bc9eacfdb218b68988235a921c810b0d1": "Ybodychange",
    "3f0a727f7585147207f2a011816434d0002b5284": "Ybodychange",
    "7b6b204924ec3d2aeb4c42c09456fbbefc3c7817": "Ybodychange",
    "978a8050e28b2afb193a3e00d82a8475fa4d2428": "Ybodychange"
  },
  "changeHistoryDetails": {
    "3ab77d9bc9eacfdb218b68988235a921c810b0d1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14201. Ability to disallow safemode NN to become active. Contributed by Xiao Liang and He Xiaoqiao.\n",
      "commitDate": "18/06/19 9:58 AM",
      "commitName": "3ab77d9bc9eacfdb218b68988235a921c810b0d1",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "13/06/19 6:26 PM",
      "commitNameOld": "4f455290b15902e7e44c4b1a762bf915414b2bb6",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 4.65,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,23 @@\n   synchronized void monitorHealth() \n       throws HealthCheckFailedException, AccessControlException {\n     namesystem.checkSuperuserPrivilege();\n     if (!haEnabled) {\n       return; // no-op, if HA is not enabled\n     }\n     long start \u003d Time.monotonicNow();\n     getNamesystem().checkAvailableResources();\n     long end \u003d Time.monotonicNow();\n     if (end - start \u003e\u003d HEALTH_MONITOR_WARN_THRESHOLD_MS) {\n       // log a warning if it take \u003e\u003d 5 seconds.\n       LOG.warn(\"Remote IP {} checking available resources took {}ms\",\n           Server.getRemoteIp(), end - start);\n     }\n     if (!getNamesystem().nameNodeHasResourcesAvailable()) {\n       throw new HealthCheckFailedException(\n           \"The NameNode has no resources available\");\n     }\n+    if (notBecomeActiveInSafemode \u0026\u0026 isInSafeMode()) {\n+      throw new HealthCheckFailedException(\"The NameNode is configured to \" +\n+          \"report UNHEALTHY to ZKFC in Safemode.\");\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void monitorHealth() \n      throws HealthCheckFailedException, AccessControlException {\n    namesystem.checkSuperuserPrivilege();\n    if (!haEnabled) {\n      return; // no-op, if HA is not enabled\n    }\n    long start \u003d Time.monotonicNow();\n    getNamesystem().checkAvailableResources();\n    long end \u003d Time.monotonicNow();\n    if (end - start \u003e\u003d HEALTH_MONITOR_WARN_THRESHOLD_MS) {\n      // log a warning if it take \u003e\u003d 5 seconds.\n      LOG.warn(\"Remote IP {} checking available resources took {}ms\",\n          Server.getRemoteIp(), end - start);\n    }\n    if (!getNamesystem().nameNodeHasResourcesAvailable()) {\n      throw new HealthCheckFailedException(\n          \"The NameNode has no resources available\");\n    }\n    if (notBecomeActiveInSafemode \u0026\u0026 isInSafeMode()) {\n      throw new HealthCheckFailedException(\"The NameNode is configured to \" +\n          \"report UNHEALTHY to ZKFC in Safemode.\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {}
    },
    "3f0a727f7585147207f2a011816434d0002b5284": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11907. Add metric for time taken by NameNode resource check. Contributed by Chen Liang.\n",
      "commitDate": "12/06/17 3:18 PM",
      "commitName": "3f0a727f7585147207f2a011816434d0002b5284",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "31/05/17 8:09 AM",
      "commitNameOld": "13de636b4079b077890ad10389ff350dcf8086a2",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 12.3,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,19 @@\n   synchronized void monitorHealth() \n       throws HealthCheckFailedException, AccessControlException {\n     namesystem.checkSuperuserPrivilege();\n     if (!haEnabled) {\n       return; // no-op, if HA is not enabled\n     }\n+    long start \u003d Time.monotonicNow();\n     getNamesystem().checkAvailableResources();\n+    long end \u003d Time.monotonicNow();\n+    if (end - start \u003e\u003d HEALTH_MONITOR_WARN_THRESHOLD_MS) {\n+      // log a warning if it take \u003e\u003d 5 seconds.\n+      LOG.warn(\"Remote IP {} checking available resources took {}ms\",\n+          Server.getRemoteIp(), end - start);\n+    }\n     if (!getNamesystem().nameNodeHasResourcesAvailable()) {\n       throw new HealthCheckFailedException(\n           \"The NameNode has no resources available\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void monitorHealth() \n      throws HealthCheckFailedException, AccessControlException {\n    namesystem.checkSuperuserPrivilege();\n    if (!haEnabled) {\n      return; // no-op, if HA is not enabled\n    }\n    long start \u003d Time.monotonicNow();\n    getNamesystem().checkAvailableResources();\n    long end \u003d Time.monotonicNow();\n    if (end - start \u003e\u003d HEALTH_MONITOR_WARN_THRESHOLD_MS) {\n      // log a warning if it take \u003e\u003d 5 seconds.\n      LOG.warn(\"Remote IP {} checking available resources took {}ms\",\n          Server.getRemoteIp(), end - start);\n    }\n    if (!getNamesystem().nameNodeHasResourcesAvailable()) {\n      throw new HealthCheckFailedException(\n          \"The NameNode has no resources available\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {}
    },
    "7b6b204924ec3d2aeb4c42c09456fbbefc3c7817": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3027. Implement a simple NN health check. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1295300 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/02/12 1:57 PM",
      "commitName": "7b6b204924ec3d2aeb4c42c09456fbbefc3c7817",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "28/02/12 5:09 PM",
      "commitNameOld": "978a8050e28b2afb193a3e00d82a8475fa4d2428",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.87,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,12 @@\n   synchronized void monitorHealth() \n       throws HealthCheckFailedException, AccessControlException {\n     namesystem.checkSuperuserPrivilege();\n     if (!haEnabled) {\n       return; // no-op, if HA is not enabled\n     }\n-    // TODO(HA): implement health check\n-    return;\n+    getNamesystem().checkAvailableResources();\n+    if (!getNamesystem().nameNodeHasResourcesAvailable()) {\n+      throw new HealthCheckFailedException(\n+          \"The NameNode has no resources available\");\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void monitorHealth() \n      throws HealthCheckFailedException, AccessControlException {\n    namesystem.checkSuperuserPrivilege();\n    if (!haEnabled) {\n      return; // no-op, if HA is not enabled\n    }\n    getNamesystem().checkAvailableResources();\n    if (!getNamesystem().nameNodeHasResourcesAvailable()) {\n      throw new HealthCheckFailedException(\n          \"The NameNode has no resources available\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {}
    },
    "978a8050e28b2afb193a3e00d82a8475fa4d2428": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2920. fix remaining TODO items. Contributed by Aaron T. Myers and Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1294923 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/02/12 5:09 PM",
      "commitName": "978a8050e28b2afb193a3e00d82a8475fa4d2428",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "27/02/12 4:43 PM",
      "commitNameOld": "da9aa34bec7c68ba7f2988abb917b0a7aeb7f23f",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 1.02,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   synchronized void monitorHealth() \n       throws HealthCheckFailedException, AccessControlException {\n     namesystem.checkSuperuserPrivilege();\n     if (!haEnabled) {\n       return; // no-op, if HA is not enabled\n     }\n-    // TODO:HA implement health check\n+    // TODO(HA): implement health check\n     return;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void monitorHealth() \n      throws HealthCheckFailedException, AccessControlException {\n    namesystem.checkSuperuserPrivilege();\n    if (!haEnabled) {\n      return; // no-op, if HA is not enabled\n    }\n    // TODO(HA): implement health check\n    return;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
      "extendedDetails": {}
    }
  }
}