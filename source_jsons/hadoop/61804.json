{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProcfsBasedProcessTree.java",
  "functionName": "getProcessList",
  "functionId": "getProcessList",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ProcfsBasedProcessTree.java",
  "functionStartLine": 484,
  "functionEndLine": 499,
  "numCommitsSeen": 34,
  "timeTaken": 8560,
  "changeHistory": [
    "626b5103d44692adf3882af61bdafa40114c44f7",
    "4b5bd73ac53f7de4899b5b70078249ad20216048",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "b4c8567e1b975ccf32dfc1f63aadb78ac29f2c69",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "626b5103d44692adf3882af61bdafa40114c44f7": "Ybodychange",
    "4b5bd73ac53f7de4899b5b70078249ad20216048": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "b4c8567e1b975ccf32dfc1f63aadb78ac29f2c69": "Ymultichange(Yreturntypechange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "626b5103d44692adf3882af61bdafa40114c44f7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7688. Miscellaneous Improvements To ProcfsBasedProcessTree. Contributed by BELUGA BEHR.\n",
      "commitDate": "02/01/18 5:39 PM",
      "commitName": "626b5103d44692adf3882af61bdafa40114c44f7",
      "commitAuthor": "Miklos Szegedi",
      "commitDateOld": "01/05/17 4:01 AM",
      "commitNameOld": "4b5bd73ac53f7de4899b5b70078249ad20216048",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 246.61,
      "commitsBetweenForRepo": 1710,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,16 @@\n   private List\u003cString\u003e getProcessList() {\n-    List\u003cString\u003e processList \u003d new ArrayList\u003cString\u003e();\n-    String[] processDirs \u003d (new File(procfsDir)).list();\n-    if (processDirs !\u003d null) {\n-      for (String dir : processDirs) {\n-        Matcher m \u003d numberPattern.matcher(dir);\n-        if (!m.matches()) {\n-          continue;\n-        }\n-        try {\n-          if ((new File(procfsDir, dir)).isDirectory()) {\n-            processList.add(dir);\n-          }\n-        } catch (SecurityException s) {\n-          // skip this process\n-        }\n+    List\u003cString\u003e processList \u003d Collections.emptyList();\n+    FileFilter procListFileFilter \u003d new AndFileFilter(\n+        DirectoryFileFilter.INSTANCE, new RegexFileFilter(numberPattern));\n+\n+    File dir \u003d new File(procfsDir);\n+    File[] processDirs \u003d dir.listFiles(procListFileFilter);\n+\n+    if (ArrayUtils.isNotEmpty(processDirs)) {\n+      processList \u003d new ArrayList\u003cString\u003e(processDirs.length);\n+      for (File processDir : processDirs) {\n+        processList.add(processDir.getName());\n       }\n     }\n     return processList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cString\u003e getProcessList() {\n    List\u003cString\u003e processList \u003d Collections.emptyList();\n    FileFilter procListFileFilter \u003d new AndFileFilter(\n        DirectoryFileFilter.INSTANCE, new RegexFileFilter(numberPattern));\n\n    File dir \u003d new File(procfsDir);\n    File[] processDirs \u003d dir.listFiles(procListFileFilter);\n\n    if (ArrayUtils.isNotEmpty(processDirs)) {\n      processList \u003d new ArrayList\u003cString\u003e(processDirs.length);\n      for (File processDir : processDirs) {\n        processList.add(processDir.getName());\n      }\n    }\n    return processList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ProcfsBasedProcessTree.java",
      "extendedDetails": {}
    },
    "4b5bd73ac53f7de4899b5b70078249ad20216048": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6517. Fix warnings from Spotbugs in hadoop-yarn-common. Contributed by Weiwei Yang\n",
      "commitDate": "01/05/17 4:01 AM",
      "commitName": "4b5bd73ac53f7de4899b5b70078249ad20216048",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "26/04/17 11:46 AM",
      "commitNameOld": "4f3ca0396a810f54f7fd0489a224c1bb13143aa4",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 4.68,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,20 @@\n   private List\u003cString\u003e getProcessList() {\n-    String[] processDirs \u003d (new File(procfsDir)).list();\n     List\u003cString\u003e processList \u003d new ArrayList\u003cString\u003e();\n-\n-    for (String dir : processDirs) {\n-      Matcher m \u003d numberPattern.matcher(dir);\n-      if (!m.matches()) continue;\n-      try {\n-        if ((new File(procfsDir, dir)).isDirectory()) {\n-          processList.add(dir);\n+    String[] processDirs \u003d (new File(procfsDir)).list();\n+    if (processDirs !\u003d null) {\n+      for (String dir : processDirs) {\n+        Matcher m \u003d numberPattern.matcher(dir);\n+        if (!m.matches()) {\n+          continue;\n         }\n-      } catch (SecurityException s) {\n-        // skip this process\n+        try {\n+          if ((new File(procfsDir, dir)).isDirectory()) {\n+            processList.add(dir);\n+          }\n+        } catch (SecurityException s) {\n+          // skip this process\n+        }\n       }\n     }\n     return processList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cString\u003e getProcessList() {\n    List\u003cString\u003e processList \u003d new ArrayList\u003cString\u003e();\n    String[] processDirs \u003d (new File(procfsDir)).list();\n    if (processDirs !\u003d null) {\n      for (String dir : processDirs) {\n        Matcher m \u003d numberPattern.matcher(dir);\n        if (!m.matches()) {\n          continue;\n        }\n        try {\n          if ((new File(procfsDir, dir)).isDirectory()) {\n            processList.add(dir);\n          }\n        } catch (SecurityException s) {\n          // skip this process\n        }\n      }\n    }\n    return processList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ProcfsBasedProcessTree.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private List\u003cString\u003e getProcessList() {\n    String[] processDirs \u003d (new File(procfsDir)).list();\n    List\u003cString\u003e processList \u003d new ArrayList\u003cString\u003e();\n\n    for (String dir : processDirs) {\n      Matcher m \u003d numberPattern.matcher(dir);\n      if (!m.matches()) continue;\n      try {\n        if ((new File(procfsDir, dir)).isDirectory()) {\n          processList.add(dir);\n        }\n      } catch (SecurityException s) {\n        // skip this process\n      }\n    }\n    return processList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ProcfsBasedProcessTree.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ProcfsBasedProcessTree.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ProcfsBasedProcessTree.java"
      }
    },
    "b4c8567e1b975ccf32dfc1f63aadb78ac29f2c69": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "MAPREDUCE-3583. Change pid to String and stime to BigInteger in order to handle integers larger than Long.MAX_VALUE.  Contributed by Zhihong Yu\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1245828 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/02/12 5:12 PM",
      "commitName": "b4c8567e1b975ccf32dfc1f63aadb78ac29f2c69",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "MAPREDUCE-3583. Change pid to String and stime to BigInteger in order to handle integers larger than Long.MAX_VALUE.  Contributed by Zhihong Yu\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1245828 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/02/12 5:12 PM",
          "commitName": "b4c8567e1b975ccf32dfc1f63aadb78ac29f2c69",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "29/08/11 4:27 PM",
          "commitNameOld": "fb6ecb9b27798a923ca290ba5d23368e3a820a6c",
          "commitAuthorOld": "Mahadev Konar",
          "daysBetweenCommits": 172.07,
          "commitsBetweenForRepo": 1095,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n-  private List\u003cInteger\u003e getProcessList() {\n+  private List\u003cString\u003e getProcessList() {\n     String[] processDirs \u003d (new File(procfsDir)).list();\n-    List\u003cInteger\u003e processList \u003d new ArrayList\u003cInteger\u003e();\n+    List\u003cString\u003e processList \u003d new ArrayList\u003cString\u003e();\n \n     for (String dir : processDirs) {\n+      Matcher m \u003d numberPattern.matcher(dir);\n+      if (!m.matches()) continue;\n       try {\n-        int pd \u003d Integer.parseInt(dir);\n         if ((new File(procfsDir, dir)).isDirectory()) {\n-          processList.add(Integer.valueOf(pd));\n+          processList.add(dir);\n         }\n-      } catch (NumberFormatException n) {\n-        // skip this directory\n       } catch (SecurityException s) {\n         // skip this process\n       }\n     }\n     return processList;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private List\u003cString\u003e getProcessList() {\n    String[] processDirs \u003d (new File(procfsDir)).list();\n    List\u003cString\u003e processList \u003d new ArrayList\u003cString\u003e();\n\n    for (String dir : processDirs) {\n      Matcher m \u003d numberPattern.matcher(dir);\n      if (!m.matches()) continue;\n      try {\n        if ((new File(procfsDir, dir)).isDirectory()) {\n          processList.add(dir);\n        }\n      } catch (SecurityException s) {\n        // skip this process\n      }\n    }\n    return processList;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ProcfsBasedProcessTree.java",
          "extendedDetails": {
            "oldValue": "List\u003cInteger\u003e",
            "newValue": "List\u003cString\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3583. Change pid to String and stime to BigInteger in order to handle integers larger than Long.MAX_VALUE.  Contributed by Zhihong Yu\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1245828 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/02/12 5:12 PM",
          "commitName": "b4c8567e1b975ccf32dfc1f63aadb78ac29f2c69",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "29/08/11 4:27 PM",
          "commitNameOld": "fb6ecb9b27798a923ca290ba5d23368e3a820a6c",
          "commitAuthorOld": "Mahadev Konar",
          "daysBetweenCommits": 172.07,
          "commitsBetweenForRepo": 1095,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n-  private List\u003cInteger\u003e getProcessList() {\n+  private List\u003cString\u003e getProcessList() {\n     String[] processDirs \u003d (new File(procfsDir)).list();\n-    List\u003cInteger\u003e processList \u003d new ArrayList\u003cInteger\u003e();\n+    List\u003cString\u003e processList \u003d new ArrayList\u003cString\u003e();\n \n     for (String dir : processDirs) {\n+      Matcher m \u003d numberPattern.matcher(dir);\n+      if (!m.matches()) continue;\n       try {\n-        int pd \u003d Integer.parseInt(dir);\n         if ((new File(procfsDir, dir)).isDirectory()) {\n-          processList.add(Integer.valueOf(pd));\n+          processList.add(dir);\n         }\n-      } catch (NumberFormatException n) {\n-        // skip this directory\n       } catch (SecurityException s) {\n         // skip this process\n       }\n     }\n     return processList;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private List\u003cString\u003e getProcessList() {\n    String[] processDirs \u003d (new File(procfsDir)).list();\n    List\u003cString\u003e processList \u003d new ArrayList\u003cString\u003e();\n\n    for (String dir : processDirs) {\n      Matcher m \u003d numberPattern.matcher(dir);\n      if (!m.matches()) continue;\n      try {\n        if ((new File(procfsDir, dir)).isDirectory()) {\n          processList.add(dir);\n        }\n      } catch (SecurityException s) {\n        // skip this process\n      }\n    }\n    return processList;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ProcfsBasedProcessTree.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private List\u003cInteger\u003e getProcessList() {\n    String[] processDirs \u003d (new File(procfsDir)).list();\n    List\u003cInteger\u003e processList \u003d new ArrayList\u003cInteger\u003e();\n\n    for (String dir : processDirs) {\n      try {\n        int pd \u003d Integer.parseInt(dir);\n        if ((new File(procfsDir, dir)).isDirectory()) {\n          processList.add(Integer.valueOf(pd));\n        }\n      } catch (NumberFormatException n) {\n        // skip this directory\n      } catch (SecurityException s) {\n        // skip this process\n      }\n    }\n    return processList;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ProcfsBasedProcessTree.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ProcfsBasedProcessTree.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ProcfsBasedProcessTree.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,18 @@\n+  private List\u003cInteger\u003e getProcessList() {\n+    String[] processDirs \u003d (new File(procfsDir)).list();\n+    List\u003cInteger\u003e processList \u003d new ArrayList\u003cInteger\u003e();\n+\n+    for (String dir : processDirs) {\n+      try {\n+        int pd \u003d Integer.parseInt(dir);\n+        if ((new File(procfsDir, dir)).isDirectory()) {\n+          processList.add(Integer.valueOf(pd));\n+        }\n+      } catch (NumberFormatException n) {\n+        // skip this directory\n+      } catch (SecurityException s) {\n+        // skip this process\n+      }\n+    }\n+    return processList;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cInteger\u003e getProcessList() {\n    String[] processDirs \u003d (new File(procfsDir)).list();\n    List\u003cInteger\u003e processList \u003d new ArrayList\u003cInteger\u003e();\n\n    for (String dir : processDirs) {\n      try {\n        int pd \u003d Integer.parseInt(dir);\n        if ((new File(procfsDir, dir)).isDirectory()) {\n          processList.add(Integer.valueOf(pd));\n        }\n      } catch (NumberFormatException n) {\n        // skip this directory\n      } catch (SecurityException s) {\n        // skip this process\n      }\n    }\n    return processList;\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ProcfsBasedProcessTree.java"
    }
  }
}