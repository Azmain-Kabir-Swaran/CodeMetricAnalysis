{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystemApplicationHistoryStore.java",
  "functionName": "applicationStarted",
  "functionId": "applicationStarted___appStart-ApplicationStartData",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/FileSystemApplicationHistoryStore.java",
  "functionStartLine": 416,
  "functionEndLine": 449,
  "numCommitsSeen": 16,
  "timeTaken": 1542,
  "changeHistory": [
    "3993d646d7fe8d28ac33e9bbda2c357d94dd98ea",
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a"
  ],
  "changeHistoryShort": {
    "3993d646d7fe8d28ac33e9bbda2c357d94dd98ea": "Ybodychange",
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3993d646d7fe8d28ac33e9bbda2c357d94dd98ea": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1920. Fixed TestFileSystemApplicationHistoryStore failure on windows. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1586414 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/04/14 11:57 AM",
      "commitName": "3993d646d7fe8d28ac33e9bbda2c357d94dd98ea",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "17/03/14 2:36 PM",
      "commitNameOld": "8314674947ec087899d2515ae6b668c6c39cabbd",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 23.89,
      "commitsBetweenForRepo": 171,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   public void applicationStarted(ApplicationStartData appStart)\n       throws IOException {\n     HistoryFileWriter hfWriter \u003d\n         outstandingWriters.get(appStart.getApplicationId());\n     if (hfWriter \u003d\u003d null) {\n       Path applicationHistoryFile \u003d\n           new Path(rootDirPath, appStart.getApplicationId().toString());\n       try {\n         hfWriter \u003d new HistoryFileWriter(applicationHistoryFile);\n         LOG.info(\"Opened history file of application \"\n             + appStart.getApplicationId());\n       } catch (IOException e) {\n         LOG.error(\"Error when openning history file of application \"\n-            + appStart.getApplicationId());\n+            + appStart.getApplicationId(), e);\n         throw e;\n       }\n       outstandingWriters.put(appStart.getApplicationId(), hfWriter);\n     } else {\n       throw new IOException(\"History file of application \"\n           + appStart.getApplicationId() + \" is already opened\");\n     }\n     assert appStart instanceof ApplicationStartDataPBImpl;\n     try {\n       hfWriter.writeHistoryData(new HistoryDataKey(appStart.getApplicationId()\n         .toString(), START_DATA_SUFFIX),\n         ((ApplicationStartDataPBImpl) appStart).getProto().toByteArray());\n       LOG.info(\"Start information of application \"\n           + appStart.getApplicationId() + \" is written\");\n     } catch (IOException e) {\n       LOG.error(\"Error when writing start information of application \"\n-          + appStart.getApplicationId());\n+          + appStart.getApplicationId(), e);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void applicationStarted(ApplicationStartData appStart)\n      throws IOException {\n    HistoryFileWriter hfWriter \u003d\n        outstandingWriters.get(appStart.getApplicationId());\n    if (hfWriter \u003d\u003d null) {\n      Path applicationHistoryFile \u003d\n          new Path(rootDirPath, appStart.getApplicationId().toString());\n      try {\n        hfWriter \u003d new HistoryFileWriter(applicationHistoryFile);\n        LOG.info(\"Opened history file of application \"\n            + appStart.getApplicationId());\n      } catch (IOException e) {\n        LOG.error(\"Error when openning history file of application \"\n            + appStart.getApplicationId(), e);\n        throw e;\n      }\n      outstandingWriters.put(appStart.getApplicationId(), hfWriter);\n    } else {\n      throw new IOException(\"History file of application \"\n          + appStart.getApplicationId() + \" is already opened\");\n    }\n    assert appStart instanceof ApplicationStartDataPBImpl;\n    try {\n      hfWriter.writeHistoryData(new HistoryDataKey(appStart.getApplicationId()\n        .toString(), START_DATA_SUFFIX),\n        ((ApplicationStartDataPBImpl) appStart).getProto().toByteArray());\n      LOG.info(\"Start information of application \"\n          + appStart.getApplicationId() + \" is written\");\n    } catch (IOException e) {\n      LOG.error(\"Error when writing start information of application \"\n          + appStart.getApplicationId(), e);\n      throw e;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/FileSystemApplicationHistoryStore.java",
      "extendedDetails": {}
    },
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-321. Merging YARN-321 branch to trunk.\nsvn merge ../branches/YARN-321\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561452 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/14 8:51 PM",
      "commitName": "cbee889711eddc5c67a61df4a6531b4ab3cd205a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,34 @@\n+  public void applicationStarted(ApplicationStartData appStart)\n+      throws IOException {\n+    HistoryFileWriter hfWriter \u003d\n+        outstandingWriters.get(appStart.getApplicationId());\n+    if (hfWriter \u003d\u003d null) {\n+      Path applicationHistoryFile \u003d\n+          new Path(rootDirPath, appStart.getApplicationId().toString());\n+      try {\n+        hfWriter \u003d new HistoryFileWriter(applicationHistoryFile);\n+        LOG.info(\"Opened history file of application \"\n+            + appStart.getApplicationId());\n+      } catch (IOException e) {\n+        LOG.error(\"Error when openning history file of application \"\n+            + appStart.getApplicationId());\n+        throw e;\n+      }\n+      outstandingWriters.put(appStart.getApplicationId(), hfWriter);\n+    } else {\n+      throw new IOException(\"History file of application \"\n+          + appStart.getApplicationId() + \" is already opened\");\n+    }\n+    assert appStart instanceof ApplicationStartDataPBImpl;\n+    try {\n+      hfWriter.writeHistoryData(new HistoryDataKey(appStart.getApplicationId()\n+        .toString(), START_DATA_SUFFIX),\n+        ((ApplicationStartDataPBImpl) appStart).getProto().toByteArray());\n+      LOG.info(\"Start information of application \"\n+          + appStart.getApplicationId() + \" is written\");\n+    } catch (IOException e) {\n+      LOG.error(\"Error when writing start information of application \"\n+          + appStart.getApplicationId());\n+      throw e;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void applicationStarted(ApplicationStartData appStart)\n      throws IOException {\n    HistoryFileWriter hfWriter \u003d\n        outstandingWriters.get(appStart.getApplicationId());\n    if (hfWriter \u003d\u003d null) {\n      Path applicationHistoryFile \u003d\n          new Path(rootDirPath, appStart.getApplicationId().toString());\n      try {\n        hfWriter \u003d new HistoryFileWriter(applicationHistoryFile);\n        LOG.info(\"Opened history file of application \"\n            + appStart.getApplicationId());\n      } catch (IOException e) {\n        LOG.error(\"Error when openning history file of application \"\n            + appStart.getApplicationId());\n        throw e;\n      }\n      outstandingWriters.put(appStart.getApplicationId(), hfWriter);\n    } else {\n      throw new IOException(\"History file of application \"\n          + appStart.getApplicationId() + \" is already opened\");\n    }\n    assert appStart instanceof ApplicationStartDataPBImpl;\n    try {\n      hfWriter.writeHistoryData(new HistoryDataKey(appStart.getApplicationId()\n        .toString(), START_DATA_SUFFIX),\n        ((ApplicationStartDataPBImpl) appStart).getProto().toByteArray());\n      LOG.info(\"Start information of application \"\n          + appStart.getApplicationId() + \" is written\");\n    } catch (IOException e) {\n      LOG.error(\"Error when writing start information of application \"\n          + appStart.getApplicationId());\n      throw e;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/FileSystemApplicationHistoryStore.java"
    }
  }
}