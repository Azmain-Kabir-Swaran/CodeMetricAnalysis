{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StorageLocation.java",
  "functionName": "compareTo",
  "functionId": "compareTo___obj-StorageLocation",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
  "functionStartLine": 167,
  "functionEndLine": 188,
  "numCommitsSeen": 19,
  "timeTaken": 2627,
  "changeHistory": [
    "f209e93566b159c22054dcb276e45f23a2b7b7d1",
    "96b12662ea76e3ded4ef13944fc8df206cfb4613"
  ],
  "changeHistoryShort": {
    "f209e93566b159c22054dcb276e45f23a2b7b7d1": "Ybodychange",
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f209e93566b159c22054dcb276e45f23a2b7b7d1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10638. Modifications to remove the assumption that StorageLocation is associated with java.io.File in Datanode. (Virajith Jalaparti via lei)\n",
      "commitDate": "26/10/16 10:32 AM",
      "commitName": "f209e93566b159c22054dcb276e45f23a2b7b7d1",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "10/10/16 3:30 PM",
      "commitNameOld": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 15.79,
      "commitsBetweenForRepo": 122,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   public int compareTo(StorageLocation obj) {\n     if (obj \u003d\u003d this) {\n       return 0;\n     } else if (obj \u003d\u003d null) {\n       return -1;\n     }\n \n     StorageLocation otherStorage \u003d (StorageLocation) obj;\n-    if (this.getFile() !\u003d null \u0026\u0026 otherStorage.getFile() !\u003d null) {\n-      return this.getFile().getAbsolutePath().compareTo(\n-          otherStorage.getFile().getAbsolutePath());\n-    } else if (this.getFile() \u003d\u003d null \u0026\u0026 otherStorage.getFile() \u003d\u003d null) {\n+    if (this.getNormalizedUri() !\u003d null \u0026\u0026\n+        otherStorage.getNormalizedUri() !\u003d null) {\n+      return this.getNormalizedUri().compareTo(\n+          otherStorage.getNormalizedUri());\n+    } else if (this.getNormalizedUri() \u003d\u003d null \u0026\u0026\n+        otherStorage.getNormalizedUri() \u003d\u003d null) {\n       return this.storageType.compareTo(otherStorage.getStorageType());\n-    } else if (this.getFile() \u003d\u003d null) {\n+    } else if (this.getNormalizedUri() \u003d\u003d null) {\n       return -1;\n     } else {\n       return 1;\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int compareTo(StorageLocation obj) {\n    if (obj \u003d\u003d this) {\n      return 0;\n    } else if (obj \u003d\u003d null) {\n      return -1;\n    }\n\n    StorageLocation otherStorage \u003d (StorageLocation) obj;\n    if (this.getNormalizedUri() !\u003d null \u0026\u0026\n        otherStorage.getNormalizedUri() !\u003d null) {\n      return this.getNormalizedUri().compareTo(\n          otherStorage.getNormalizedUri());\n    } else if (this.getNormalizedUri() \u003d\u003d null \u0026\u0026\n        otherStorage.getNormalizedUri() \u003d\u003d null) {\n      return this.storageType.compareTo(otherStorage.getStorageType());\n    } else if (this.getNormalizedUri() \u003d\u003d null) {\n      return -1;\n    } else {\n      return 1;\n    }\n\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
      "extendedDetails": {}
    },
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10637. Modifications to remove the assumption that FsVolumes are backed by java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "10/10/16 3:30 PM",
      "commitName": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
      "commitAuthor": "Lei Xu",
      "diff": "@@ -0,0 +1,20 @@\n+  public int compareTo(StorageLocation obj) {\n+    if (obj \u003d\u003d this) {\n+      return 0;\n+    } else if (obj \u003d\u003d null) {\n+      return -1;\n+    }\n+\n+    StorageLocation otherStorage \u003d (StorageLocation) obj;\n+    if (this.getFile() !\u003d null \u0026\u0026 otherStorage.getFile() !\u003d null) {\n+      return this.getFile().getAbsolutePath().compareTo(\n+          otherStorage.getFile().getAbsolutePath());\n+    } else if (this.getFile() \u003d\u003d null \u0026\u0026 otherStorage.getFile() \u003d\u003d null) {\n+      return this.storageType.compareTo(otherStorage.getStorageType());\n+    } else if (this.getFile() \u003d\u003d null) {\n+      return -1;\n+    } else {\n+      return 1;\n+    }\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int compareTo(StorageLocation obj) {\n    if (obj \u003d\u003d this) {\n      return 0;\n    } else if (obj \u003d\u003d null) {\n      return -1;\n    }\n\n    StorageLocation otherStorage \u003d (StorageLocation) obj;\n    if (this.getFile() !\u003d null \u0026\u0026 otherStorage.getFile() !\u003d null) {\n      return this.getFile().getAbsolutePath().compareTo(\n          otherStorage.getFile().getAbsolutePath());\n    } else if (this.getFile() \u003d\u003d null \u0026\u0026 otherStorage.getFile() \u003d\u003d null) {\n      return this.storageType.compareTo(otherStorage.getStorageType());\n    } else if (this.getFile() \u003d\u003d null) {\n      return -1;\n    } else {\n      return 1;\n    }\n\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java"
    }
  }
}