{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AdminService.java",
  "functionName": "refreshServiceAcls",
  "functionId": "refreshServiceAcls___request-RefreshServiceAclsRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
  "functionStartLine": 571,
  "functionEndLine": 593,
  "numCommitsSeen": 89,
  "timeTaken": 4491,
  "changeHistory": [
    "e49e0a6e37f4a32535d7d4a07015fbf9eb33c74a",
    "d9a354c2f39274b2810144d1ae133201e44e3bfc",
    "c63afdbe14df7359841aa4b213252a8a275e8c4b",
    "ef3d66d4624d360e75c016e36824a6782d6a9746",
    "40ee4bff65b2bfdabfd16ee7d9be3382a0476565",
    "9da9f7d4d8f1dce210995a06863a8836c23d7c3a",
    "1fa6ab249b0fa63cab550e1b7703339c4d888c5d",
    "b812af964d100c50d065cdd9007cef31ea2642a8",
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "d19cfe01642f9582e1fe5d567beb480399c37a01"
  ],
  "changeHistoryShort": {
    "e49e0a6e37f4a32535d7d4a07015fbf9eb33c74a": "Ybodychange",
    "d9a354c2f39274b2810144d1ae133201e44e3bfc": "Ybodychange",
    "c63afdbe14df7359841aa4b213252a8a275e8c4b": "Ybodychange",
    "ef3d66d4624d360e75c016e36824a6782d6a9746": "Ybodychange",
    "40ee4bff65b2bfdabfd16ee7d9be3382a0476565": "Ybodychange",
    "9da9f7d4d8f1dce210995a06863a8836c23d7c3a": "Ybodychange",
    "1fa6ab249b0fa63cab550e1b7703339c4d888c5d": "Ybodychange",
    "b812af964d100c50d065cdd9007cef31ea2642a8": "Ymultichange(Yexceptionschange,Ybodychange)",
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8": "Ybodychange",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Yexceptionschange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "d19cfe01642f9582e1fe5d567beb480399c37a01": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e49e0a6e37f4a32535d7d4a07015fbf9eb33c74a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5988. RM unable to start in secure setup. Contributed by Ajith S.\n",
      "commitDate": "03/01/17 10:39 PM",
      "commitName": "e49e0a6e37f4a32535d7d4a07015fbf9eb33c74a",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "09/12/16 5:00 PM",
      "commitNameOld": "a6410a542e59acd9827457df4a257a843f785c29",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 25.24,
      "commitsBetweenForRepo": 97,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   public RefreshServiceAclsResponse refreshServiceAcls(\n       RefreshServiceAclsRequest request) throws YarnException, IOException {\n     if (!getConfig().getBoolean(\n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,\n              false)) {\n       throw RPCUtil.getRemoteException(\n           new IOException(\"Service Authorization (\" +\n               CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION +\n               \") not enabled.\"));\n     }\n \n     final String operation \u003d \"refreshServiceAcls\";\n     UserGroupInformation user \u003d checkAcls(operation);\n \n     checkRMStatus(user.getShortUserName(), operation, \"refresh Service ACLs.\");\n \n     refreshServiceAcls();\n+    refreshActiveServicesAcls();\n     RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n             \"AdminService\");\n \n     return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshServiceAclsResponse refreshServiceAcls(\n      RefreshServiceAclsRequest request) throws YarnException, IOException {\n    if (!getConfig().getBoolean(\n             CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,\n             false)) {\n      throw RPCUtil.getRemoteException(\n          new IOException(\"Service Authorization (\" +\n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION +\n              \") not enabled.\"));\n    }\n\n    final String operation \u003d \"refreshServiceAcls\";\n    UserGroupInformation user \u003d checkAcls(operation);\n\n    checkRMStatus(user.getShortUserName(), operation, \"refresh Service ACLs.\");\n\n    refreshServiceAcls();\n    refreshActiveServicesAcls();\n    RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n            \"AdminService\");\n\n    return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "d9a354c2f39274b2810144d1ae133201e44e3bfc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5333. Some recovered apps are put into default queue when RM HA. Contributed by Jun Gong.\n",
      "commitDate": "05/08/16 9:05 AM",
      "commitName": "d9a354c2f39274b2810144d1ae133201e44e3bfc",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "20/07/16 4:51 PM",
      "commitNameOld": "c63afdbe14df7359841aa4b213252a8a275e8c4b",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 15.68,
      "commitsBetweenForRepo": 112,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,22 @@\n   public RefreshServiceAclsResponse refreshServiceAcls(\n       RefreshServiceAclsRequest request) throws YarnException, IOException {\n     if (!getConfig().getBoolean(\n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,\n              false)) {\n       throw RPCUtil.getRemoteException(\n           new IOException(\"Service Authorization (\" +\n               CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION +\n               \") not enabled.\"));\n     }\n \n     final String operation \u003d \"refreshServiceAcls\";\n     UserGroupInformation user \u003d checkAcls(operation);\n \n     checkRMStatus(user.getShortUserName(), operation, \"refresh Service ACLs.\");\n \n-    PolicyProvider policyProvider \u003d RMPolicyProvider.getInstance();\n-    Configuration conf \u003d\n-        getConfiguration(new Configuration(false),\n-            YarnConfiguration.HADOOP_POLICY_CONFIGURATION_FILE);\n-\n-    refreshServiceAcls(conf, policyProvider);\n-    rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n-    rmContext.getApplicationMasterService().refreshServiceAcls(\n-        conf, policyProvider);\n-    rmContext.getResourceTrackerService().refreshServiceAcls(\n-        conf, policyProvider);\n-\n+    refreshServiceAcls();\n     RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n             \"AdminService\");\n \n     return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshServiceAclsResponse refreshServiceAcls(\n      RefreshServiceAclsRequest request) throws YarnException, IOException {\n    if (!getConfig().getBoolean(\n             CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,\n             false)) {\n      throw RPCUtil.getRemoteException(\n          new IOException(\"Service Authorization (\" +\n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION +\n              \") not enabled.\"));\n    }\n\n    final String operation \u003d \"refreshServiceAcls\";\n    UserGroupInformation user \u003d checkAcls(operation);\n\n    checkRMStatus(user.getShortUserName(), operation, \"refresh Service ACLs.\");\n\n    refreshServiceAcls();\n    RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n            \"AdminService\");\n\n    return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "c63afdbe14df7359841aa4b213252a8a275e8c4b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4883. Make consistent operation name in AdminService. Contributed by Kai Sasaki.\n",
      "commitDate": "20/07/16 4:51 PM",
      "commitName": "c63afdbe14df7359841aa4b213252a8a275e8c4b",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "09/04/16 10:31 AM",
      "commitNameOld": "ff95fd547b3030529983fa4e701ac728c54ab63a",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 102.26,
      "commitsBetweenForRepo": 794,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,33 @@\n   public RefreshServiceAclsResponse refreshServiceAcls(\n       RefreshServiceAclsRequest request) throws YarnException, IOException {\n     if (!getConfig().getBoolean(\n-             CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n+             CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,\n              false)) {\n       throw RPCUtil.getRemoteException(\n-          new IOException(\"Service Authorization (\" + \n-              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n+          new IOException(\"Service Authorization (\" +\n+              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION +\n               \") not enabled.\"));\n     }\n \n-    String argName \u003d \"refreshServiceAcls\";\n-    UserGroupInformation user \u003d checkAcls(argName);\n+    final String operation \u003d \"refreshServiceAcls\";\n+    UserGroupInformation user \u003d checkAcls(operation);\n \n-    checkRMStatus(user.getShortUserName(), argName, \"refresh Service ACLs.\");\n+    checkRMStatus(user.getShortUserName(), operation, \"refresh Service ACLs.\");\n \n     PolicyProvider policyProvider \u003d RMPolicyProvider.getInstance();\n     Configuration conf \u003d\n         getConfiguration(new Configuration(false),\n             YarnConfiguration.HADOOP_POLICY_CONFIGURATION_FILE);\n \n     refreshServiceAcls(conf, policyProvider);\n     rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n     rmContext.getApplicationMasterService().refreshServiceAcls(\n         conf, policyProvider);\n     rmContext.getResourceTrackerService().refreshServiceAcls(\n         conf, policyProvider);\n \n-    RMAuditLogger.logSuccess(user.getShortUserName(), argName, \"AdminService\");\n+    RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n+            \"AdminService\");\n \n     return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshServiceAclsResponse refreshServiceAcls(\n      RefreshServiceAclsRequest request) throws YarnException, IOException {\n    if (!getConfig().getBoolean(\n             CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,\n             false)) {\n      throw RPCUtil.getRemoteException(\n          new IOException(\"Service Authorization (\" +\n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION +\n              \") not enabled.\"));\n    }\n\n    final String operation \u003d \"refreshServiceAcls\";\n    UserGroupInformation user \u003d checkAcls(operation);\n\n    checkRMStatus(user.getShortUserName(), operation, \"refresh Service ACLs.\");\n\n    PolicyProvider policyProvider \u003d RMPolicyProvider.getInstance();\n    Configuration conf \u003d\n        getConfiguration(new Configuration(false),\n            YarnConfiguration.HADOOP_POLICY_CONFIGURATION_FILE);\n\n    refreshServiceAcls(conf, policyProvider);\n    rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n    rmContext.getApplicationMasterService().refreshServiceAcls(\n        conf, policyProvider);\n    rmContext.getResourceTrackerService().refreshServiceAcls(\n        conf, policyProvider);\n\n    RMAuditLogger.logSuccess(user.getShortUserName(), operation,\n            \"AdminService\");\n\n    return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "ef3d66d4624d360e75c016e36824a6782d6a9746": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3358. Audit log not present while refreshing Service ACLs.\nContributed by Varun Saxena.\n",
      "commitDate": "07/05/15 11:44 PM",
      "commitName": "ef3d66d4624d360e75c016e36824a6782d6a9746",
      "commitAuthor": "Devaraj K",
      "commitDateOld": "27/04/15 4:24 PM",
      "commitNameOld": "db1b674b50ddecf2774f4092d677c412722bdcb1",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 10.31,
      "commitsBetweenForRepo": 106,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,32 @@\n   public RefreshServiceAclsResponse refreshServiceAcls(\n       RefreshServiceAclsRequest request) throws YarnException, IOException {\n     if (!getConfig().getBoolean(\n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n              false)) {\n       throw RPCUtil.getRemoteException(\n           new IOException(\"Service Authorization (\" + \n               CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n               \") not enabled.\"));\n     }\n \n     String argName \u003d \"refreshServiceAcls\";\n     UserGroupInformation user \u003d checkAcls(argName);\n \n     checkRMStatus(user.getShortUserName(), argName, \"refresh Service ACLs.\");\n \n     PolicyProvider policyProvider \u003d RMPolicyProvider.getInstance();\n     Configuration conf \u003d\n         getConfiguration(new Configuration(false),\n             YarnConfiguration.HADOOP_POLICY_CONFIGURATION_FILE);\n \n     refreshServiceAcls(conf, policyProvider);\n     rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n     rmContext.getApplicationMasterService().refreshServiceAcls(\n         conf, policyProvider);\n     rmContext.getResourceTrackerService().refreshServiceAcls(\n         conf, policyProvider);\n-    \n+\n+    RMAuditLogger.logSuccess(user.getShortUserName(), argName, \"AdminService\");\n+\n     return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshServiceAclsResponse refreshServiceAcls(\n      RefreshServiceAclsRequest request) throws YarnException, IOException {\n    if (!getConfig().getBoolean(\n             CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n             false)) {\n      throw RPCUtil.getRemoteException(\n          new IOException(\"Service Authorization (\" + \n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n              \") not enabled.\"));\n    }\n\n    String argName \u003d \"refreshServiceAcls\";\n    UserGroupInformation user \u003d checkAcls(argName);\n\n    checkRMStatus(user.getShortUserName(), argName, \"refresh Service ACLs.\");\n\n    PolicyProvider policyProvider \u003d RMPolicyProvider.getInstance();\n    Configuration conf \u003d\n        getConfiguration(new Configuration(false),\n            YarnConfiguration.HADOOP_POLICY_CONFIGURATION_FILE);\n\n    refreshServiceAcls(conf, policyProvider);\n    rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n    rmContext.getApplicationMasterService().refreshServiceAcls(\n        conf, policyProvider);\n    rmContext.getResourceTrackerService().refreshServiceAcls(\n        conf, policyProvider);\n\n    RMAuditLogger.logSuccess(user.getShortUserName(), argName, \"AdminService\");\n\n    return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "40ee4bff65b2bfdabfd16ee7d9be3382a0476565": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2993. Several fixes (missing acl check, error log msg ...) and some refinement in AdminService. (Contributed by Yi Liu)\n",
      "commitDate": "26/12/14 6:59 AM",
      "commitName": "40ee4bff65b2bfdabfd16ee7d9be3382a0476565",
      "commitAuthor": "Junping Du",
      "commitDateOld": "30/10/14 10:59 PM",
      "commitNameOld": "e0233c16ebd06bb3aabeb523cd17259008e243ef",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 56.37,
      "commitsBetweenForRepo": 427,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,30 @@\n   public RefreshServiceAclsResponse refreshServiceAcls(\n       RefreshServiceAclsRequest request) throws YarnException, IOException {\n     if (!getConfig().getBoolean(\n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n              false)) {\n       throw RPCUtil.getRemoteException(\n           new IOException(\"Service Authorization (\" + \n               CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n               \") not enabled.\"));\n     }\n \n     String argName \u003d \"refreshServiceAcls\";\n-    if (!isRMActive()) {\n-      RMAuditLogger.logFailure(UserGroupInformation.getCurrentUser()\n-          .getShortUserName(), argName,\n-          adminAcl.toString(), \"AdminService\",\n-          \"ResourceManager is not active. Can not refresh Service ACLs.\");\n-      throwStandbyException();\n-    }\n+    UserGroupInformation user \u003d checkAcls(argName);\n+\n+    checkRMStatus(user.getShortUserName(), argName, \"refresh Service ACLs.\");\n \n     PolicyProvider policyProvider \u003d RMPolicyProvider.getInstance();\n     Configuration conf \u003d\n         getConfiguration(new Configuration(false),\n             YarnConfiguration.HADOOP_POLICY_CONFIGURATION_FILE);\n \n     refreshServiceAcls(conf, policyProvider);\n     rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n     rmContext.getApplicationMasterService().refreshServiceAcls(\n         conf, policyProvider);\n     rmContext.getResourceTrackerService().refreshServiceAcls(\n         conf, policyProvider);\n     \n     return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshServiceAclsResponse refreshServiceAcls(\n      RefreshServiceAclsRequest request) throws YarnException, IOException {\n    if (!getConfig().getBoolean(\n             CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n             false)) {\n      throw RPCUtil.getRemoteException(\n          new IOException(\"Service Authorization (\" + \n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n              \") not enabled.\"));\n    }\n\n    String argName \u003d \"refreshServiceAcls\";\n    UserGroupInformation user \u003d checkAcls(argName);\n\n    checkRMStatus(user.getShortUserName(), argName, \"refresh Service ACLs.\");\n\n    PolicyProvider policyProvider \u003d RMPolicyProvider.getInstance();\n    Configuration conf \u003d\n        getConfiguration(new Configuration(false),\n            YarnConfiguration.HADOOP_POLICY_CONFIGURATION_FILE);\n\n    refreshServiceAcls(conf, policyProvider);\n    rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n    rmContext.getApplicationMasterService().refreshServiceAcls(\n        conf, policyProvider);\n    rmContext.getResourceTrackerService().refreshServiceAcls(\n        conf, policyProvider);\n    \n    return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "9da9f7d4d8f1dce210995a06863a8836c23d7c3a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1666. Modified RM HA handling of include/exclude node-lists to be available across RM failover by making using of a remote configuration-provider. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1569856 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/02/14 9:52 AM",
      "commitName": "9da9f7d4d8f1dce210995a06863a8836c23d7c3a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/02/14 1:23 PM",
      "commitNameOld": "2b916db60b94ceffbb17dc2778287c88b966bc04",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 5.85,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   public RefreshServiceAclsResponse refreshServiceAcls(\n       RefreshServiceAclsRequest request) throws YarnException, IOException {\n     if (!getConfig().getBoolean(\n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n              false)) {\n       throw RPCUtil.getRemoteException(\n           new IOException(\"Service Authorization (\" + \n               CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n               \") not enabled.\"));\n     }\n \n     String argName \u003d \"refreshServiceAcls\";\n     if (!isRMActive()) {\n       RMAuditLogger.logFailure(UserGroupInformation.getCurrentUser()\n           .getShortUserName(), argName,\n           adminAcl.toString(), \"AdminService\",\n           \"ResourceManager is not active. Can not refresh Service ACLs.\");\n       throwStandbyException();\n     }\n \n     PolicyProvider policyProvider \u003d RMPolicyProvider.getInstance();\n     Configuration conf \u003d\n-        getConfiguration(getConfig(),\n+        getConfiguration(new Configuration(false),\n             YarnConfiguration.HADOOP_POLICY_CONFIGURATION_FILE);\n \n     refreshServiceAcls(conf, policyProvider);\n     rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n     rmContext.getApplicationMasterService().refreshServiceAcls(\n         conf, policyProvider);\n     rmContext.getResourceTrackerService().refreshServiceAcls(\n         conf, policyProvider);\n     \n     return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshServiceAclsResponse refreshServiceAcls(\n      RefreshServiceAclsRequest request) throws YarnException, IOException {\n    if (!getConfig().getBoolean(\n             CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n             false)) {\n      throw RPCUtil.getRemoteException(\n          new IOException(\"Service Authorization (\" + \n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n              \") not enabled.\"));\n    }\n\n    String argName \u003d \"refreshServiceAcls\";\n    if (!isRMActive()) {\n      RMAuditLogger.logFailure(UserGroupInformation.getCurrentUser()\n          .getShortUserName(), argName,\n          adminAcl.toString(), \"AdminService\",\n          \"ResourceManager is not active. Can not refresh Service ACLs.\");\n      throwStandbyException();\n    }\n\n    PolicyProvider policyProvider \u003d RMPolicyProvider.getInstance();\n    Configuration conf \u003d\n        getConfiguration(new Configuration(false),\n            YarnConfiguration.HADOOP_POLICY_CONFIGURATION_FILE);\n\n    refreshServiceAcls(conf, policyProvider);\n    rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n    rmContext.getApplicationMasterService().refreshServiceAcls(\n        conf, policyProvider);\n    rmContext.getResourceTrackerService().refreshServiceAcls(\n        conf, policyProvider);\n    \n    return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "1fa6ab249b0fa63cab550e1b7703339c4d888c5d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1459. Changed ResourceManager to depend its service initialization on the configuration-provider mechanism during startup too. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566791 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/02/14 2:50 PM",
      "commitName": "1fa6ab249b0fa63cab550e1b7703339c4d888c5d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/02/14 2:46 PM",
      "commitNameOld": "b812af964d100c50d065cdd9007cef31ea2642a8",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 6.0,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,34 @@\n   public RefreshServiceAclsResponse refreshServiceAcls(\n       RefreshServiceAclsRequest request) throws YarnException, IOException {\n     if (!getConfig().getBoolean(\n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n              false)) {\n       throw RPCUtil.getRemoteException(\n           new IOException(\"Service Authorization (\" + \n               CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n               \") not enabled.\"));\n     }\n \n     String argName \u003d \"refreshServiceAcls\";\n     if (!isRMActive()) {\n       RMAuditLogger.logFailure(UserGroupInformation.getCurrentUser()\n           .getShortUserName(), argName,\n           adminAcl.toString(), \"AdminService\",\n           \"ResourceManager is not active. Can not refresh Service ACLs.\");\n       throwStandbyException();\n     }\n \n-    PolicyProvider policyProvider \u003d new RMPolicyProvider(); \n+    PolicyProvider policyProvider \u003d RMPolicyProvider.getInstance();\n     Configuration conf \u003d\n-        getConfiguration(YarnConfiguration.HADOOP_POLICY_CONFIGURATION_FILE);\n+        getConfiguration(getConfig(),\n+            YarnConfiguration.HADOOP_POLICY_CONFIGURATION_FILE);\n \n     refreshServiceAcls(conf, policyProvider);\n     rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n     rmContext.getApplicationMasterService().refreshServiceAcls(\n         conf, policyProvider);\n     rmContext.getResourceTrackerService().refreshServiceAcls(\n         conf, policyProvider);\n     \n     return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshServiceAclsResponse refreshServiceAcls(\n      RefreshServiceAclsRequest request) throws YarnException, IOException {\n    if (!getConfig().getBoolean(\n             CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n             false)) {\n      throw RPCUtil.getRemoteException(\n          new IOException(\"Service Authorization (\" + \n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n              \") not enabled.\"));\n    }\n\n    String argName \u003d \"refreshServiceAcls\";\n    if (!isRMActive()) {\n      RMAuditLogger.logFailure(UserGroupInformation.getCurrentUser()\n          .getShortUserName(), argName,\n          adminAcl.toString(), \"AdminService\",\n          \"ResourceManager is not active. Can not refresh Service ACLs.\");\n      throwStandbyException();\n    }\n\n    PolicyProvider policyProvider \u003d RMPolicyProvider.getInstance();\n    Configuration conf \u003d\n        getConfiguration(getConfig(),\n            YarnConfiguration.HADOOP_POLICY_CONFIGURATION_FILE);\n\n    refreshServiceAcls(conf, policyProvider);\n    rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n    rmContext.getApplicationMasterService().refreshServiceAcls(\n        conf, policyProvider);\n    rmContext.getResourceTrackerService().refreshServiceAcls(\n        conf, policyProvider);\n    \n    return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "b812af964d100c50d065cdd9007cef31ea2642a8": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-1669. Modified RM HA handling of protocol level service-ACLS to be available across RM failover by making using of a remote configuration-provider. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1564549 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/02/14 2:46 PM",
      "commitName": "b812af964d100c50d065cdd9007cef31ea2642a8",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-1669. Modified RM HA handling of protocol level service-ACLS to be available across RM failover by making using of a remote configuration-provider. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1564549 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/02/14 2:46 PM",
          "commitName": "b812af964d100c50d065cdd9007cef31ea2642a8",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/02/14 2:10 PM",
          "commitNameOld": "24fa232707b56f6ccc88a460dc0d708d35a28ff4",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 1.02,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,33 @@\n   public RefreshServiceAclsResponse refreshServiceAcls(\n-      RefreshServiceAclsRequest request) throws YarnException {\n-    Configuration conf \u003d new Configuration();\n-    if (!conf.getBoolean(\n+      RefreshServiceAclsRequest request) throws YarnException, IOException {\n+    if (!getConfig().getBoolean(\n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n              false)) {\n       throw RPCUtil.getRemoteException(\n           new IOException(\"Service Authorization (\" + \n               CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n               \") not enabled.\"));\n     }\n-    \n-    PolicyProvider policyProvider \u003d new RMPolicyProvider(); \n-    \n-    refreshServiceAcls(conf, policyProvider);\n-    if (isRMActive()) {\n-      rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n-      rmContext.getApplicationMasterService().refreshServiceAcls(\n-          conf, policyProvider);\n-      rmContext.getResourceTrackerService().refreshServiceAcls(\n-          conf, policyProvider);\n-    } else {\n-      LOG.warn(\"ResourceManager is not active. Not refreshing ACLs for \" +\n-          \"Clients, ApplicationMasters and NodeManagers\");\n+\n+    String argName \u003d \"refreshServiceAcls\";\n+    if (!isRMActive()) {\n+      RMAuditLogger.logFailure(UserGroupInformation.getCurrentUser()\n+          .getShortUserName(), argName,\n+          adminAcl.toString(), \"AdminService\",\n+          \"ResourceManager is not active. Can not refresh Service ACLs.\");\n+      throwStandbyException();\n     }\n+\n+    PolicyProvider policyProvider \u003d new RMPolicyProvider(); \n+    Configuration conf \u003d\n+        getConfiguration(YarnConfiguration.HADOOP_POLICY_CONFIGURATION_FILE);\n+\n+    refreshServiceAcls(conf, policyProvider);\n+    rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n+    rmContext.getApplicationMasterService().refreshServiceAcls(\n+        conf, policyProvider);\n+    rmContext.getResourceTrackerService().refreshServiceAcls(\n+        conf, policyProvider);\n     \n     return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public RefreshServiceAclsResponse refreshServiceAcls(\n      RefreshServiceAclsRequest request) throws YarnException, IOException {\n    if (!getConfig().getBoolean(\n             CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n             false)) {\n      throw RPCUtil.getRemoteException(\n          new IOException(\"Service Authorization (\" + \n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n              \") not enabled.\"));\n    }\n\n    String argName \u003d \"refreshServiceAcls\";\n    if (!isRMActive()) {\n      RMAuditLogger.logFailure(UserGroupInformation.getCurrentUser()\n          .getShortUserName(), argName,\n          adminAcl.toString(), \"AdminService\",\n          \"ResourceManager is not active. Can not refresh Service ACLs.\");\n      throwStandbyException();\n    }\n\n    PolicyProvider policyProvider \u003d new RMPolicyProvider(); \n    Configuration conf \u003d\n        getConfiguration(YarnConfiguration.HADOOP_POLICY_CONFIGURATION_FILE);\n\n    refreshServiceAcls(conf, policyProvider);\n    rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n    rmContext.getApplicationMasterService().refreshServiceAcls(\n        conf, policyProvider);\n    rmContext.getResourceTrackerService().refreshServiceAcls(\n        conf, policyProvider);\n    \n    return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {
            "oldValue": "[YarnException]",
            "newValue": "[YarnException, IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1669. Modified RM HA handling of protocol level service-ACLS to be available across RM failover by making using of a remote configuration-provider. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1564549 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/02/14 2:46 PM",
          "commitName": "b812af964d100c50d065cdd9007cef31ea2642a8",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/02/14 2:10 PM",
          "commitNameOld": "24fa232707b56f6ccc88a460dc0d708d35a28ff4",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 1.02,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,33 @@\n   public RefreshServiceAclsResponse refreshServiceAcls(\n-      RefreshServiceAclsRequest request) throws YarnException {\n-    Configuration conf \u003d new Configuration();\n-    if (!conf.getBoolean(\n+      RefreshServiceAclsRequest request) throws YarnException, IOException {\n+    if (!getConfig().getBoolean(\n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n              false)) {\n       throw RPCUtil.getRemoteException(\n           new IOException(\"Service Authorization (\" + \n               CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n               \") not enabled.\"));\n     }\n-    \n-    PolicyProvider policyProvider \u003d new RMPolicyProvider(); \n-    \n-    refreshServiceAcls(conf, policyProvider);\n-    if (isRMActive()) {\n-      rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n-      rmContext.getApplicationMasterService().refreshServiceAcls(\n-          conf, policyProvider);\n-      rmContext.getResourceTrackerService().refreshServiceAcls(\n-          conf, policyProvider);\n-    } else {\n-      LOG.warn(\"ResourceManager is not active. Not refreshing ACLs for \" +\n-          \"Clients, ApplicationMasters and NodeManagers\");\n+\n+    String argName \u003d \"refreshServiceAcls\";\n+    if (!isRMActive()) {\n+      RMAuditLogger.logFailure(UserGroupInformation.getCurrentUser()\n+          .getShortUserName(), argName,\n+          adminAcl.toString(), \"AdminService\",\n+          \"ResourceManager is not active. Can not refresh Service ACLs.\");\n+      throwStandbyException();\n     }\n+\n+    PolicyProvider policyProvider \u003d new RMPolicyProvider(); \n+    Configuration conf \u003d\n+        getConfiguration(YarnConfiguration.HADOOP_POLICY_CONFIGURATION_FILE);\n+\n+    refreshServiceAcls(conf, policyProvider);\n+    rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n+    rmContext.getApplicationMasterService().refreshServiceAcls(\n+        conf, policyProvider);\n+    rmContext.getResourceTrackerService().refreshServiceAcls(\n+        conf, policyProvider);\n     \n     return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public RefreshServiceAclsResponse refreshServiceAcls(\n      RefreshServiceAclsRequest request) throws YarnException, IOException {\n    if (!getConfig().getBoolean(\n             CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n             false)) {\n      throw RPCUtil.getRemoteException(\n          new IOException(\"Service Authorization (\" + \n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n              \") not enabled.\"));\n    }\n\n    String argName \u003d \"refreshServiceAcls\";\n    if (!isRMActive()) {\n      RMAuditLogger.logFailure(UserGroupInformation.getCurrentUser()\n          .getShortUserName(), argName,\n          adminAcl.toString(), \"AdminService\",\n          \"ResourceManager is not active. Can not refresh Service ACLs.\");\n      throwStandbyException();\n    }\n\n    PolicyProvider policyProvider \u003d new RMPolicyProvider(); \n    Configuration conf \u003d\n        getConfiguration(YarnConfiguration.HADOOP_POLICY_CONFIGURATION_FILE);\n\n    refreshServiceAcls(conf, policyProvider);\n    rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n    rmContext.getApplicationMasterService().refreshServiceAcls(\n        conf, policyProvider);\n    rmContext.getResourceTrackerService().refreshServiceAcls(\n        conf, policyProvider);\n    \n    return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {}
        }
      ]
    },
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/12/13 2:18 PM",
      "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "29/10/13 2:03 PM",
      "commitNameOld": "03510d00f48137fe4273c3e694e87fc0e660a706",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 34.05,
      "commitsBetweenForRepo": 180,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,28 @@\n   public RefreshServiceAclsResponse refreshServiceAcls(\n       RefreshServiceAclsRequest request) throws YarnException {\n     Configuration conf \u003d new Configuration();\n     if (!conf.getBoolean(\n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n              false)) {\n       throw RPCUtil.getRemoteException(\n           new IOException(\"Service Authorization (\" + \n               CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n               \") not enabled.\"));\n     }\n     \n     PolicyProvider policyProvider \u003d new RMPolicyProvider(); \n     \n     refreshServiceAcls(conf, policyProvider);\n-    clientRMService.refreshServiceAcls(conf, policyProvider);\n-    applicationMasterService.refreshServiceAcls(conf, policyProvider);\n-    resourceTrackerService.refreshServiceAcls(conf, policyProvider);\n+    if (isRMActive()) {\n+      rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n+      rmContext.getApplicationMasterService().refreshServiceAcls(\n+          conf, policyProvider);\n+      rmContext.getResourceTrackerService().refreshServiceAcls(\n+          conf, policyProvider);\n+    } else {\n+      LOG.warn(\"ResourceManager is not active. Not refreshing ACLs for \" +\n+          \"Clients, ApplicationMasters and NodeManagers\");\n+    }\n     \n     return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshServiceAclsResponse refreshServiceAcls(\n      RefreshServiceAclsRequest request) throws YarnException {\n    Configuration conf \u003d new Configuration();\n    if (!conf.getBoolean(\n             CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n             false)) {\n      throw RPCUtil.getRemoteException(\n          new IOException(\"Service Authorization (\" + \n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n              \") not enabled.\"));\n    }\n    \n    PolicyProvider policyProvider \u003d new RMPolicyProvider(); \n    \n    refreshServiceAcls(conf, policyProvider);\n    if (isRMActive()) {\n      rmContext.getClientRMService().refreshServiceAcls(conf, policyProvider);\n      rmContext.getApplicationMasterService().refreshServiceAcls(\n          conf, policyProvider);\n      rmContext.getResourceTrackerService().refreshServiceAcls(\n          conf, policyProvider);\n    } else {\n      LOG.warn(\"ResourceManager is not active. Not refreshing ACLs for \" +\n          \"Clients, ApplicationMasters and NodeManagers\");\n    }\n    \n    return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/10/12 2:21 PM",
      "commitNameOld": "494e21052156a7c5abedbbee824578837ad8cc11",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 238.28,
      "commitsBetweenForRepo": 1343,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public RefreshServiceAclsResponse refreshServiceAcls(\n-      RefreshServiceAclsRequest request) throws YarnRemoteException {\n+      RefreshServiceAclsRequest request) throws YarnException {\n     Configuration conf \u003d new Configuration();\n     if (!conf.getBoolean(\n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n              false)) {\n       throw RPCUtil.getRemoteException(\n           new IOException(\"Service Authorization (\" + \n               CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n               \") not enabled.\"));\n     }\n     \n     PolicyProvider policyProvider \u003d new RMPolicyProvider(); \n     \n     refreshServiceAcls(conf, policyProvider);\n     clientRMService.refreshServiceAcls(conf, policyProvider);\n     applicationMasterService.refreshServiceAcls(conf, policyProvider);\n     resourceTrackerService.refreshServiceAcls(conf, policyProvider);\n     \n     return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshServiceAclsResponse refreshServiceAcls(\n      RefreshServiceAclsRequest request) throws YarnException {\n    Configuration conf \u003d new Configuration();\n    if (!conf.getBoolean(\n             CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n             false)) {\n      throw RPCUtil.getRemoteException(\n          new IOException(\"Service Authorization (\" + \n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n              \") not enabled.\"));\n    }\n    \n    PolicyProvider policyProvider \u003d new RMPolicyProvider(); \n    \n    refreshServiceAcls(conf, policyProvider);\n    clientRMService.refreshServiceAcls(conf, policyProvider);\n    applicationMasterService.refreshServiceAcls(conf, policyProvider);\n    resourceTrackerService.refreshServiceAcls(conf, policyProvider);\n    \n    return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {
        "oldValue": "[YarnRemoteException]",
        "newValue": "[YarnException]"
      }
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public RefreshServiceAclsResponse refreshServiceAcls(\n      RefreshServiceAclsRequest request) throws YarnRemoteException {\n    Configuration conf \u003d new Configuration();\n    if (!conf.getBoolean(\n             CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n             false)) {\n      throw RPCUtil.getRemoteException(\n          new IOException(\"Service Authorization (\" + \n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n              \") not enabled.\"));\n    }\n    \n    PolicyProvider policyProvider \u003d new RMPolicyProvider(); \n    \n    refreshServiceAcls(conf, policyProvider);\n    clientRMService.refreshServiceAcls(conf, policyProvider);\n    applicationMasterService.refreshServiceAcls(conf, policyProvider);\n    resourceTrackerService.refreshServiceAcls(conf, policyProvider);\n    \n    return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java"
      }
    },
    "d19cfe01642f9582e1fe5d567beb480399c37a01": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2746. Yarn servers can\u0027t communicate with each other with hadoop.security.authorization set to true (acmurthy via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1188522 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/10/11 11:07 PM",
      "commitName": "d19cfe01642f9582e1fe5d567beb480399c37a01",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,21 @@\n+  public RefreshServiceAclsResponse refreshServiceAcls(\n+      RefreshServiceAclsRequest request) throws YarnRemoteException {\n+    Configuration conf \u003d new Configuration();\n+    if (!conf.getBoolean(\n+             CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n+             false)) {\n+      throw RPCUtil.getRemoteException(\n+          new IOException(\"Service Authorization (\" + \n+              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n+              \") not enabled.\"));\n+    }\n+    \n+    PolicyProvider policyProvider \u003d new RMPolicyProvider(); \n+    \n+    refreshServiceAcls(conf, policyProvider);\n+    clientRMService.refreshServiceAcls(conf, policyProvider);\n+    applicationMasterService.refreshServiceAcls(conf, policyProvider);\n+    resourceTrackerService.refreshServiceAcls(conf, policyProvider);\n+    \n+    return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public RefreshServiceAclsResponse refreshServiceAcls(\n      RefreshServiceAclsRequest request) throws YarnRemoteException {\n    Configuration conf \u003d new Configuration();\n    if (!conf.getBoolean(\n             CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n             false)) {\n      throw RPCUtil.getRemoteException(\n          new IOException(\"Service Authorization (\" + \n              CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION + \n              \") not enabled.\"));\n    }\n    \n    PolicyProvider policyProvider \u003d new RMPolicyProvider(); \n    \n    refreshServiceAcls(conf, policyProvider);\n    clientRMService.refreshServiceAcls(conf, policyProvider);\n    applicationMasterService.refreshServiceAcls(conf, policyProvider);\n    resourceTrackerService.refreshServiceAcls(conf, policyProvider);\n    \n    return recordFactory.newRecordInstance(RefreshServiceAclsResponse.class);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java"
    }
  }
}