{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Mover.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
  "functionStartLine": 174,
  "functionEndLine": 188,
  "numCommitsSeen": 54,
  "timeTaken": 2507,
  "changeHistory": [
    "c31cb879a3595f76d01408e6d066a0bde20be043",
    "321940cf19375febe9660e96d905360cfcc15f5f",
    "a26aa6bd0716da89853566961390d711511084e3",
    "8ea20b53a861a2771c206afaacf8e7783568c4b1",
    "5d5aae0694bc27df5b9fa50819854cd3050a8658"
  ],
  "changeHistoryShort": {
    "c31cb879a3595f76d01408e6d066a0bde20be043": "Ybodychange",
    "321940cf19375febe9660e96d905360cfcc15f5f": "Ybodychange",
    "a26aa6bd0716da89853566961390d711511084e3": "Ybodychange",
    "8ea20b53a861a2771c206afaacf8e7783568c4b1": "Ybodychange",
    "5d5aae0694bc27df5b9fa50819854cd3050a8658": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c31cb879a3595f76d01408e6d066a0bde20be043": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11840. Log HDFS Mover exception message of exit to its own log. Contributed by LiXin Ge.\n",
      "commitDate": "06/06/17 2:57 PM",
      "commitName": "c31cb879a3595f76d01408e6d066a0bde20be043",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "11/04/17 10:03 PM",
      "commitNameOld": "23b1a7bdf1b546c1e29d7010cf139b6d700461fc",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 55.7,
      "commitsBetweenForRepo": 289,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   private ExitStatus run() {\n     try {\n       init();\n       return new Processor().processNamespace().getExitStatus();\n     } catch (IllegalArgumentException e) {\n       System.out.println(e + \".  Exiting ...\");\n       return ExitStatus.ILLEGAL_ARGUMENTS;\n     } catch (IOException e) {\n       System.out.println(e + \".  Exiting ...\");\n+      LOG.error(e + \".  Exiting ...\");\n       return ExitStatus.IO_EXCEPTION;\n     } finally {\n       dispatcher.shutdownNow();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ExitStatus run() {\n    try {\n      init();\n      return new Processor().processNamespace().getExitStatus();\n    } catch (IllegalArgumentException e) {\n      System.out.println(e + \".  Exiting ...\");\n      return ExitStatus.ILLEGAL_ARGUMENTS;\n    } catch (IOException e) {\n      System.out.println(e + \".  Exiting ...\");\n      LOG.error(e + \".  Exiting ...\");\n      return ExitStatus.IO_EXCEPTION;\n    } finally {\n      dispatcher.shutdownNow();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
      "extendedDetails": {}
    },
    "321940cf19375febe9660e96d905360cfcc15f5f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8540.  Mover should exit with NO_MOVE_BLOCK if no block can be moved.  Contributed by surendra singh lilhore\n",
      "commitDate": "15/06/15 4:26 PM",
      "commitName": "321940cf19375febe9660e96d905360cfcc15f5f",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "18/05/15 11:36 AM",
      "commitNameOld": "a2190bf15d25e01fb4b220ba6401ce2f787a5c61",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 28.2,
      "commitsBetweenForRepo": 199,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,14 @@\n   private ExitStatus run() {\n     try {\n       init();\n-      boolean hasRemaining \u003d new Processor().processNamespace();\n-      return hasRemaining ? ExitStatus.IN_PROGRESS : ExitStatus.SUCCESS;\n+      return new Processor().processNamespace().getExitStatus();\n     } catch (IllegalArgumentException e) {\n       System.out.println(e + \".  Exiting ...\");\n       return ExitStatus.ILLEGAL_ARGUMENTS;\n     } catch (IOException e) {\n       System.out.println(e + \".  Exiting ...\");\n       return ExitStatus.IO_EXCEPTION;\n     } finally {\n       dispatcher.shutdownNow();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ExitStatus run() {\n    try {\n      init();\n      return new Processor().processNamespace().getExitStatus();\n    } catch (IllegalArgumentException e) {\n      System.out.println(e + \".  Exiting ...\");\n      return ExitStatus.ILLEGAL_ARGUMENTS;\n    } catch (IOException e) {\n      System.out.println(e + \".  Exiting ...\");\n      return ExitStatus.IO_EXCEPTION;\n    } finally {\n      dispatcher.shutdownNow();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
      "extendedDetails": {}
    },
    "a26aa6bd0716da89853566961390d711511084e3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6944. Archival Storage: add retry and termination logic for Mover. Contributed by Jing Zhao.\n",
      "commitDate": "27/08/14 2:20 PM",
      "commitName": "a26aa6bd0716da89853566961390d711511084e3",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "27/08/14 10:38 AM",
      "commitNameOld": "8ea20b53a861a2771c206afaacf8e7783568c4b1",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,15 @@\n   private ExitStatus run() {\n     try {\n       init();\n-      new Processor().processNamespace();\n-\n-      return ExitStatus.IN_PROGRESS;\n+      boolean hasRemaining \u003d new Processor().processNamespace();\n+      return hasRemaining ? ExitStatus.IN_PROGRESS : ExitStatus.SUCCESS;\n     } catch (IllegalArgumentException e) {\n       System.out.println(e + \".  Exiting ...\");\n       return ExitStatus.ILLEGAL_ARGUMENTS;\n     } catch (IOException e) {\n       System.out.println(e + \".  Exiting ...\");\n       return ExitStatus.IO_EXCEPTION;\n     } finally {\n       dispatcher.shutdownNow();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ExitStatus run() {\n    try {\n      init();\n      boolean hasRemaining \u003d new Processor().processNamespace();\n      return hasRemaining ? ExitStatus.IN_PROGRESS : ExitStatus.SUCCESS;\n    } catch (IllegalArgumentException e) {\n      System.out.println(e + \".  Exiting ...\");\n      return ExitStatus.ILLEGAL_ARGUMENTS;\n    } catch (IOException e) {\n      System.out.println(e + \".  Exiting ...\");\n      return ExitStatus.IO_EXCEPTION;\n    } finally {\n      dispatcher.shutdownNow();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
      "extendedDetails": {}
    },
    "8ea20b53a861a2771c206afaacf8e7783568c4b1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6911. Archival Storage: check if a block is already scheduled in Mover. Contributed by Tsz Wo Nicholas Sze.\n",
      "commitDate": "27/08/14 10:38 AM",
      "commitName": "8ea20b53a861a2771c206afaacf8e7783568c4b1",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "21/08/14 4:41 PM",
      "commitNameOld": "603cbe5eead655a56cbb6bdbfa1414c9b05e2bbc",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 5.75,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,16 @@\n   private ExitStatus run() {\n     try {\n-      final List\u003cDatanodeStorageReport\u003e reports \u003d dispatcher.init();\n-      for(DatanodeStorageReport r : reports) {\n-        final DDatanode dn \u003d dispatcher.newDatanode(r.getDatanodeInfo());\n-        for(StorageType t : StorageType.asList()) {\n-          final long maxRemaining \u003d getMaxRemaining(r, t);\n-          if (maxRemaining \u003e 0L) {\n-            final Source source \u003d dn.addSource(t, Long.MAX_VALUE, dispatcher); \n-            final StorageGroup target \u003d dn.addTarget(t, maxRemaining);\n-            storages.add(source, target);\n-          }\n-        }\n-      }\n-\n+      init();\n       new Processor().processNamespace();\n \n       return ExitStatus.IN_PROGRESS;\n     } catch (IllegalArgumentException e) {\n       System.out.println(e + \".  Exiting ...\");\n       return ExitStatus.ILLEGAL_ARGUMENTS;\n     } catch (IOException e) {\n       System.out.println(e + \".  Exiting ...\");\n       return ExitStatus.IO_EXCEPTION;\n     } finally {\n       dispatcher.shutdownNow();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ExitStatus run() {\n    try {\n      init();\n      new Processor().processNamespace();\n\n      return ExitStatus.IN_PROGRESS;\n    } catch (IllegalArgumentException e) {\n      System.out.println(e + \".  Exiting ...\");\n      return ExitStatus.ILLEGAL_ARGUMENTS;\n    } catch (IOException e) {\n      System.out.println(e + \".  Exiting ...\");\n      return ExitStatus.IO_EXCEPTION;\n    } finally {\n      dispatcher.shutdownNow();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
      "extendedDetails": {}
    },
    "5d5aae0694bc27df5b9fa50819854cd3050a8658": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6801. Archival Storage: Add a new data migration tool. Contributed by Tsz Wo Nicholas Sze.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-6584@1618675 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/14 10:51 AM",
      "commitName": "5d5aae0694bc27df5b9fa50819854cd3050a8658",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,28 @@\n+  private ExitStatus run() {\n+    try {\n+      final List\u003cDatanodeStorageReport\u003e reports \u003d dispatcher.init();\n+      for(DatanodeStorageReport r : reports) {\n+        final DDatanode dn \u003d dispatcher.newDatanode(r.getDatanodeInfo());\n+        for(StorageType t : StorageType.asList()) {\n+          final long maxRemaining \u003d getMaxRemaining(r, t);\n+          if (maxRemaining \u003e 0L) {\n+            final Source source \u003d dn.addSource(t, Long.MAX_VALUE, dispatcher); \n+            final StorageGroup target \u003d dn.addTarget(t, maxRemaining);\n+            storages.add(source, target);\n+          }\n+        }\n+      }\n+\n+      new Processor().processNamespace();\n+\n+      return ExitStatus.IN_PROGRESS;\n+    } catch (IllegalArgumentException e) {\n+      System.out.println(e + \".  Exiting ...\");\n+      return ExitStatus.ILLEGAL_ARGUMENTS;\n+    } catch (IOException e) {\n+      System.out.println(e + \".  Exiting ...\");\n+      return ExitStatus.IO_EXCEPTION;\n+    } finally {\n+      dispatcher.shutdownNow();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private ExitStatus run() {\n    try {\n      final List\u003cDatanodeStorageReport\u003e reports \u003d dispatcher.init();\n      for(DatanodeStorageReport r : reports) {\n        final DDatanode dn \u003d dispatcher.newDatanode(r.getDatanodeInfo());\n        for(StorageType t : StorageType.asList()) {\n          final long maxRemaining \u003d getMaxRemaining(r, t);\n          if (maxRemaining \u003e 0L) {\n            final Source source \u003d dn.addSource(t, Long.MAX_VALUE, dispatcher); \n            final StorageGroup target \u003d dn.addTarget(t, maxRemaining);\n            storages.add(source, target);\n          }\n        }\n      }\n\n      new Processor().processNamespace();\n\n      return ExitStatus.IN_PROGRESS;\n    } catch (IllegalArgumentException e) {\n      System.out.println(e + \".  Exiting ...\");\n      return ExitStatus.ILLEGAL_ARGUMENTS;\n    } catch (IOException e) {\n      System.out.println(e + \".  Exiting ...\");\n      return ExitStatus.IO_EXCEPTION;\n    } finally {\n      dispatcher.shutdownNow();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java"
    }
  }
}