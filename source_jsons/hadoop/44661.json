{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationCLI.java",
  "functionName": "listApplications",
  "functionId": "listApplications___appTypes-Set__String____appStates-EnumSet__YarnApplicationState____appTags-Set__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
  "functionStartLine": 467,
  "functionEndLine": 504,
  "numCommitsSeen": 135,
  "timeTaken": 4129,
  "changeHistory": [
    "143c59e4c5a811eb2c12cf6626d558f9b8796e03",
    "d468c9aaf15e977f12e6214b47996412c907e069",
    "856b46cf47d3d17d3db2ca23106cb472aa8dd488",
    "ca3381de61ff53604d9389694049a1a4dedc7571",
    "2d525510b42457dd4b519a0d4e49cac4ffe48a6f",
    "962da4dcc74d23c7ce78164dcde38ea5aaf3dd68",
    "e2cce7bd26cb943225a0d4ffb6f674e1b8ee39ae",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "43876770d91a374563bf3379a5ffab5c2bac2264",
    "0727ecaf50481fa7a529398bc2a12ce18c9a6b43",
    "448df186467c64d992d6d8c9b35b645dbd48898c",
    "331b1123fbb892524ecb58e551c20befd26c9ea9"
  ],
  "changeHistoryShort": {
    "143c59e4c5a811eb2c12cf6626d558f9b8796e03": "Ymultichange(Yparameterchange,Ybodychange)",
    "d468c9aaf15e977f12e6214b47996412c907e069": "Ybodychange",
    "856b46cf47d3d17d3db2ca23106cb472aa8dd488": "Ybodychange",
    "ca3381de61ff53604d9389694049a1a4dedc7571": "Ybodychange",
    "2d525510b42457dd4b519a0d4e49cac4ffe48a6f": "Ybodychange",
    "962da4dcc74d23c7ce78164dcde38ea5aaf3dd68": "Ymultichange(Yparameterchange,Ybodychange)",
    "e2cce7bd26cb943225a0d4ffb6f674e1b8ee39ae": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Yexceptionschange",
    "43876770d91a374563bf3379a5ffab5c2bac2264": "Ybodychange",
    "0727ecaf50481fa7a529398bc2a12ce18c9a6b43": "Yexceptionschange",
    "448df186467c64d992d6d8c9b35b645dbd48898c": "Ybodychange",
    "331b1123fbb892524ecb58e551c20befd26c9ea9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "143c59e4c5a811eb2c12cf6626d558f9b8796e03": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4491. yarn list command to support filtering by tags. Contributed by Varun Saxena\n",
      "commitDate": "23/08/16 1:23 PM",
      "commitName": "143c59e4c5a811eb2c12cf6626d558f9b8796e03",
      "commitAuthor": "Naganarasimha",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4491. yarn list command to support filtering by tags. Contributed by Varun Saxena\n",
          "commitDate": "23/08/16 1:23 PM",
          "commitName": "143c59e4c5a811eb2c12cf6626d558f9b8796e03",
          "commitAuthor": "Naganarasimha",
          "commitDateOld": "14/06/16 3:06 PM",
          "commitNameOld": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 69.93,
          "commitsBetweenForRepo": 607,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,38 @@\n   private void listApplications(Set\u003cString\u003e appTypes,\n-      EnumSet\u003cYarnApplicationState\u003e appStates) throws YarnException,\n-      IOException {\n+      EnumSet\u003cYarnApplicationState\u003e appStates, Set\u003cString\u003e appTags)\n+      throws YarnException, IOException {\n     PrintWriter writer \u003d new PrintWriter(\n         new OutputStreamWriter(sysout, Charset.forName(\"UTF-8\")));\n     if (allAppStates) {\n       for (YarnApplicationState appState : YarnApplicationState.values()) {\n         appStates.add(appState);\n       }\n     } else {\n       if (appStates.isEmpty()) {\n         appStates.add(YarnApplicationState.RUNNING);\n         appStates.add(YarnApplicationState.ACCEPTED);\n         appStates.add(YarnApplicationState.SUBMITTED);\n       }\n     }\n \n     List\u003cApplicationReport\u003e appsReport \u003d client.getApplications(appTypes,\n-        appStates);\n+        appStates, appTags);\n \n     writer.println(\"Total number of applications (application-types: \"\n-        + appTypes + \" and states: \" + appStates + \")\" + \":\"\n-        + appsReport.size());\n+        + appTypes + \", states: \" + appStates + \" and tags: \" + appTags + \")\"\n+        + \":\" + appsReport.size());\n     writer.printf(APPLICATIONS_PATTERN, \"Application-Id\", \"Application-Name\",\n         \"Application-Type\", \"User\", \"Queue\", \"State\", \"Final-State\",\n         \"Progress\", \"Tracking-URL\");\n     for (ApplicationReport appReport : appsReport) {\n       DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n       String progress \u003d formatter.format(appReport.getProgress());\n       writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n           appReport.getName(), appReport.getApplicationType(), appReport\n               .getUser(), appReport.getQueue(), appReport\n               .getYarnApplicationState(),\n           appReport.getFinalApplicationStatus(), progress, appReport\n               .getOriginalTrackingUrl());\n     }\n     writer.flush();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void listApplications(Set\u003cString\u003e appTypes,\n      EnumSet\u003cYarnApplicationState\u003e appStates, Set\u003cString\u003e appTags)\n      throws YarnException, IOException {\n    PrintWriter writer \u003d new PrintWriter(\n        new OutputStreamWriter(sysout, Charset.forName(\"UTF-8\")));\n    if (allAppStates) {\n      for (YarnApplicationState appState : YarnApplicationState.values()) {\n        appStates.add(appState);\n      }\n    } else {\n      if (appStates.isEmpty()) {\n        appStates.add(YarnApplicationState.RUNNING);\n        appStates.add(YarnApplicationState.ACCEPTED);\n        appStates.add(YarnApplicationState.SUBMITTED);\n      }\n    }\n\n    List\u003cApplicationReport\u003e appsReport \u003d client.getApplications(appTypes,\n        appStates, appTags);\n\n    writer.println(\"Total number of applications (application-types: \"\n        + appTypes + \", states: \" + appStates + \" and tags: \" + appTags + \")\"\n        + \":\" + appsReport.size());\n    writer.printf(APPLICATIONS_PATTERN, \"Application-Id\", \"Application-Name\",\n        \"Application-Type\", \"User\", \"Queue\", \"State\", \"Final-State\",\n        \"Progress\", \"Tracking-URL\");\n    for (ApplicationReport appReport : appsReport) {\n      DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n      String progress \u003d formatter.format(appReport.getProgress());\n      writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n          appReport.getName(), appReport.getApplicationType(), appReport\n              .getUser(), appReport.getQueue(), appReport\n              .getYarnApplicationState(),\n          appReport.getFinalApplicationStatus(), progress, appReport\n              .getOriginalTrackingUrl());\n    }\n    writer.flush();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
          "extendedDetails": {
            "oldValue": "[appTypes-Set\u003cString\u003e, appStates-EnumSet\u003cYarnApplicationState\u003e]",
            "newValue": "[appTypes-Set\u003cString\u003e, appStates-EnumSet\u003cYarnApplicationState\u003e, appTags-Set\u003cString\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4491. yarn list command to support filtering by tags. Contributed by Varun Saxena\n",
          "commitDate": "23/08/16 1:23 PM",
          "commitName": "143c59e4c5a811eb2c12cf6626d558f9b8796e03",
          "commitAuthor": "Naganarasimha",
          "commitDateOld": "14/06/16 3:06 PM",
          "commitNameOld": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 69.93,
          "commitsBetweenForRepo": 607,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,38 @@\n   private void listApplications(Set\u003cString\u003e appTypes,\n-      EnumSet\u003cYarnApplicationState\u003e appStates) throws YarnException,\n-      IOException {\n+      EnumSet\u003cYarnApplicationState\u003e appStates, Set\u003cString\u003e appTags)\n+      throws YarnException, IOException {\n     PrintWriter writer \u003d new PrintWriter(\n         new OutputStreamWriter(sysout, Charset.forName(\"UTF-8\")));\n     if (allAppStates) {\n       for (YarnApplicationState appState : YarnApplicationState.values()) {\n         appStates.add(appState);\n       }\n     } else {\n       if (appStates.isEmpty()) {\n         appStates.add(YarnApplicationState.RUNNING);\n         appStates.add(YarnApplicationState.ACCEPTED);\n         appStates.add(YarnApplicationState.SUBMITTED);\n       }\n     }\n \n     List\u003cApplicationReport\u003e appsReport \u003d client.getApplications(appTypes,\n-        appStates);\n+        appStates, appTags);\n \n     writer.println(\"Total number of applications (application-types: \"\n-        + appTypes + \" and states: \" + appStates + \")\" + \":\"\n-        + appsReport.size());\n+        + appTypes + \", states: \" + appStates + \" and tags: \" + appTags + \")\"\n+        + \":\" + appsReport.size());\n     writer.printf(APPLICATIONS_PATTERN, \"Application-Id\", \"Application-Name\",\n         \"Application-Type\", \"User\", \"Queue\", \"State\", \"Final-State\",\n         \"Progress\", \"Tracking-URL\");\n     for (ApplicationReport appReport : appsReport) {\n       DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n       String progress \u003d formatter.format(appReport.getProgress());\n       writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n           appReport.getName(), appReport.getApplicationType(), appReport\n               .getUser(), appReport.getQueue(), appReport\n               .getYarnApplicationState(),\n           appReport.getFinalApplicationStatus(), progress, appReport\n               .getOriginalTrackingUrl());\n     }\n     writer.flush();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void listApplications(Set\u003cString\u003e appTypes,\n      EnumSet\u003cYarnApplicationState\u003e appStates, Set\u003cString\u003e appTags)\n      throws YarnException, IOException {\n    PrintWriter writer \u003d new PrintWriter(\n        new OutputStreamWriter(sysout, Charset.forName(\"UTF-8\")));\n    if (allAppStates) {\n      for (YarnApplicationState appState : YarnApplicationState.values()) {\n        appStates.add(appState);\n      }\n    } else {\n      if (appStates.isEmpty()) {\n        appStates.add(YarnApplicationState.RUNNING);\n        appStates.add(YarnApplicationState.ACCEPTED);\n        appStates.add(YarnApplicationState.SUBMITTED);\n      }\n    }\n\n    List\u003cApplicationReport\u003e appsReport \u003d client.getApplications(appTypes,\n        appStates, appTags);\n\n    writer.println(\"Total number of applications (application-types: \"\n        + appTypes + \", states: \" + appStates + \" and tags: \" + appTags + \")\"\n        + \":\" + appsReport.size());\n    writer.printf(APPLICATIONS_PATTERN, \"Application-Id\", \"Application-Name\",\n        \"Application-Type\", \"User\", \"Queue\", \"State\", \"Final-State\",\n        \"Progress\", \"Tracking-URL\");\n    for (ApplicationReport appReport : appsReport) {\n      DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n      String progress \u003d formatter.format(appReport.getProgress());\n      writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n          appReport.getName(), appReport.getApplicationType(), appReport\n              .getUser(), appReport.getQueue(), appReport\n              .getYarnApplicationState(),\n          appReport.getFinalApplicationStatus(), progress, appReport\n              .getOriginalTrackingUrl());\n    }\n    writer.flush();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
          "extendedDetails": {}
        }
      ]
    },
    "d468c9aaf15e977f12e6214b47996412c907e069": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2940. Fix new findbugs warnings in rest of the hadoop-yarn components. (Contributed by Li Lu)\n",
      "commitDate": "23/12/14 8:04 PM",
      "commitName": "d468c9aaf15e977f12e6214b47996412c907e069",
      "commitAuthor": "Junping Du",
      "commitDateOld": "23/12/14 8:02 PM",
      "commitNameOld": "856b46cf47d3d17d3db2ca23106cb472aa8dd488",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,38 @@\n   private void listApplications(Set\u003cString\u003e appTypes,\n       EnumSet\u003cYarnApplicationState\u003e appStates) throws YarnException,\n       IOException {\n-    PrintWriter writer \u003d new PrintWriter(sysout);\n+    PrintWriter writer \u003d new PrintWriter(\n+        new OutputStreamWriter(sysout, Charset.forName(\"UTF-8\")));\n     if (allAppStates) {\n       for (YarnApplicationState appState : YarnApplicationState.values()) {\n         appStates.add(appState);\n       }\n     } else {\n       if (appStates.isEmpty()) {\n         appStates.add(YarnApplicationState.RUNNING);\n         appStates.add(YarnApplicationState.ACCEPTED);\n         appStates.add(YarnApplicationState.SUBMITTED);\n       }\n     }\n \n     List\u003cApplicationReport\u003e appsReport \u003d client.getApplications(appTypes,\n         appStates);\n \n     writer.println(\"Total number of applications (application-types: \"\n         + appTypes + \" and states: \" + appStates + \")\" + \":\"\n         + appsReport.size());\n     writer.printf(APPLICATIONS_PATTERN, \"Application-Id\", \"Application-Name\",\n         \"Application-Type\", \"User\", \"Queue\", \"State\", \"Final-State\",\n         \"Progress\", \"Tracking-URL\");\n     for (ApplicationReport appReport : appsReport) {\n       DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n       String progress \u003d formatter.format(appReport.getProgress());\n       writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n           appReport.getName(), appReport.getApplicationType(), appReport\n               .getUser(), appReport.getQueue(), appReport\n               .getYarnApplicationState(),\n           appReport.getFinalApplicationStatus(), progress, appReport\n               .getOriginalTrackingUrl());\n     }\n     writer.flush();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void listApplications(Set\u003cString\u003e appTypes,\n      EnumSet\u003cYarnApplicationState\u003e appStates) throws YarnException,\n      IOException {\n    PrintWriter writer \u003d new PrintWriter(\n        new OutputStreamWriter(sysout, Charset.forName(\"UTF-8\")));\n    if (allAppStates) {\n      for (YarnApplicationState appState : YarnApplicationState.values()) {\n        appStates.add(appState);\n      }\n    } else {\n      if (appStates.isEmpty()) {\n        appStates.add(YarnApplicationState.RUNNING);\n        appStates.add(YarnApplicationState.ACCEPTED);\n        appStates.add(YarnApplicationState.SUBMITTED);\n      }\n    }\n\n    List\u003cApplicationReport\u003e appsReport \u003d client.getApplications(appTypes,\n        appStates);\n\n    writer.println(\"Total number of applications (application-types: \"\n        + appTypes + \" and states: \" + appStates + \")\" + \":\"\n        + appsReport.size());\n    writer.printf(APPLICATIONS_PATTERN, \"Application-Id\", \"Application-Name\",\n        \"Application-Type\", \"User\", \"Queue\", \"State\", \"Final-State\",\n        \"Progress\", \"Tracking-URL\");\n    for (ApplicationReport appReport : appsReport) {\n      DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n      String progress \u003d formatter.format(appReport.getProgress());\n      writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n          appReport.getName(), appReport.getApplicationType(), appReport\n              .getUser(), appReport.getQueue(), appReport\n              .getYarnApplicationState(),\n          appReport.getFinalApplicationStatus(), progress, appReport\n              .getOriginalTrackingUrl());\n    }\n    writer.flush();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
      "extendedDetails": {}
    },
    "856b46cf47d3d17d3db2ca23106cb472aa8dd488": {
      "type": "Ybodychange",
      "commitMessage": "Revert ca3381de61ff53604d9389694049a1a4dedc7571 and 20674255ad891bb693ecb2faa5bdb37477073dac as missing JIRA number in commit message\n",
      "commitDate": "23/12/14 8:02 PM",
      "commitName": "856b46cf47d3d17d3db2ca23106cb472aa8dd488",
      "commitAuthor": "Junping Du",
      "commitDateOld": "23/12/14 6:57 PM",
      "commitNameOld": "ca3381de61ff53604d9389694049a1a4dedc7571",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,37 @@\n   private void listApplications(Set\u003cString\u003e appTypes,\n       EnumSet\u003cYarnApplicationState\u003e appStates) throws YarnException,\n       IOException {\n-    PrintWriter writer \u003d new PrintWriter(\n-        new OutputStreamWriter(sysout, Charset.forName(\"UTF-8\")));\n+    PrintWriter writer \u003d new PrintWriter(sysout);\n     if (allAppStates) {\n       for (YarnApplicationState appState : YarnApplicationState.values()) {\n         appStates.add(appState);\n       }\n     } else {\n       if (appStates.isEmpty()) {\n         appStates.add(YarnApplicationState.RUNNING);\n         appStates.add(YarnApplicationState.ACCEPTED);\n         appStates.add(YarnApplicationState.SUBMITTED);\n       }\n     }\n \n     List\u003cApplicationReport\u003e appsReport \u003d client.getApplications(appTypes,\n         appStates);\n \n     writer.println(\"Total number of applications (application-types: \"\n         + appTypes + \" and states: \" + appStates + \")\" + \":\"\n         + appsReport.size());\n     writer.printf(APPLICATIONS_PATTERN, \"Application-Id\", \"Application-Name\",\n         \"Application-Type\", \"User\", \"Queue\", \"State\", \"Final-State\",\n         \"Progress\", \"Tracking-URL\");\n     for (ApplicationReport appReport : appsReport) {\n       DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n       String progress \u003d formatter.format(appReport.getProgress());\n       writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n           appReport.getName(), appReport.getApplicationType(), appReport\n               .getUser(), appReport.getQueue(), appReport\n               .getYarnApplicationState(),\n           appReport.getFinalApplicationStatus(), progress, appReport\n               .getOriginalTrackingUrl());\n     }\n     writer.flush();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void listApplications(Set\u003cString\u003e appTypes,\n      EnumSet\u003cYarnApplicationState\u003e appStates) throws YarnException,\n      IOException {\n    PrintWriter writer \u003d new PrintWriter(sysout);\n    if (allAppStates) {\n      for (YarnApplicationState appState : YarnApplicationState.values()) {\n        appStates.add(appState);\n      }\n    } else {\n      if (appStates.isEmpty()) {\n        appStates.add(YarnApplicationState.RUNNING);\n        appStates.add(YarnApplicationState.ACCEPTED);\n        appStates.add(YarnApplicationState.SUBMITTED);\n      }\n    }\n\n    List\u003cApplicationReport\u003e appsReport \u003d client.getApplications(appTypes,\n        appStates);\n\n    writer.println(\"Total number of applications (application-types: \"\n        + appTypes + \" and states: \" + appStates + \")\" + \":\"\n        + appsReport.size());\n    writer.printf(APPLICATIONS_PATTERN, \"Application-Id\", \"Application-Name\",\n        \"Application-Type\", \"User\", \"Queue\", \"State\", \"Final-State\",\n        \"Progress\", \"Tracking-URL\");\n    for (ApplicationReport appReport : appsReport) {\n      DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n      String progress \u003d formatter.format(appReport.getProgress());\n      writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n          appReport.getName(), appReport.getApplicationType(), appReport\n              .getUser(), appReport.getQueue(), appReport\n              .getYarnApplicationState(),\n          appReport.getFinalApplicationStatus(), progress, appReport\n              .getOriginalTrackingUrl());\n    }\n    writer.flush();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
      "extendedDetails": {}
    },
    "ca3381de61ff53604d9389694049a1a4dedc7571": {
      "type": "Ybodychange",
      "commitMessage": "Fix new findbugs warnings in rest of the hadoop-yarn components. (Contributed by Li Lu)\n",
      "commitDate": "23/12/14 6:57 PM",
      "commitName": "ca3381de61ff53604d9389694049a1a4dedc7571",
      "commitAuthor": "Junping Du",
      "commitDateOld": "15/12/14 1:13 AM",
      "commitNameOld": "fae3e8614f4f9a42904e39c51ca68b0d1e67469f",
      "commitAuthorOld": "Devaraj K",
      "daysBetweenCommits": 8.74,
      "commitsBetweenForRepo": 70,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,38 @@\n   private void listApplications(Set\u003cString\u003e appTypes,\n       EnumSet\u003cYarnApplicationState\u003e appStates) throws YarnException,\n       IOException {\n-    PrintWriter writer \u003d new PrintWriter(sysout);\n+    PrintWriter writer \u003d new PrintWriter(\n+        new OutputStreamWriter(sysout, Charset.forName(\"UTF-8\")));\n     if (allAppStates) {\n       for (YarnApplicationState appState : YarnApplicationState.values()) {\n         appStates.add(appState);\n       }\n     } else {\n       if (appStates.isEmpty()) {\n         appStates.add(YarnApplicationState.RUNNING);\n         appStates.add(YarnApplicationState.ACCEPTED);\n         appStates.add(YarnApplicationState.SUBMITTED);\n       }\n     }\n \n     List\u003cApplicationReport\u003e appsReport \u003d client.getApplications(appTypes,\n         appStates);\n \n     writer.println(\"Total number of applications (application-types: \"\n         + appTypes + \" and states: \" + appStates + \")\" + \":\"\n         + appsReport.size());\n     writer.printf(APPLICATIONS_PATTERN, \"Application-Id\", \"Application-Name\",\n         \"Application-Type\", \"User\", \"Queue\", \"State\", \"Final-State\",\n         \"Progress\", \"Tracking-URL\");\n     for (ApplicationReport appReport : appsReport) {\n       DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n       String progress \u003d formatter.format(appReport.getProgress());\n       writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n           appReport.getName(), appReport.getApplicationType(), appReport\n               .getUser(), appReport.getQueue(), appReport\n               .getYarnApplicationState(),\n           appReport.getFinalApplicationStatus(), progress, appReport\n               .getOriginalTrackingUrl());\n     }\n     writer.flush();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void listApplications(Set\u003cString\u003e appTypes,\n      EnumSet\u003cYarnApplicationState\u003e appStates) throws YarnException,\n      IOException {\n    PrintWriter writer \u003d new PrintWriter(\n        new OutputStreamWriter(sysout, Charset.forName(\"UTF-8\")));\n    if (allAppStates) {\n      for (YarnApplicationState appState : YarnApplicationState.values()) {\n        appStates.add(appState);\n      }\n    } else {\n      if (appStates.isEmpty()) {\n        appStates.add(YarnApplicationState.RUNNING);\n        appStates.add(YarnApplicationState.ACCEPTED);\n        appStates.add(YarnApplicationState.SUBMITTED);\n      }\n    }\n\n    List\u003cApplicationReport\u003e appsReport \u003d client.getApplications(appTypes,\n        appStates);\n\n    writer.println(\"Total number of applications (application-types: \"\n        + appTypes + \" and states: \" + appStates + \")\" + \":\"\n        + appsReport.size());\n    writer.printf(APPLICATIONS_PATTERN, \"Application-Id\", \"Application-Name\",\n        \"Application-Type\", \"User\", \"Queue\", \"State\", \"Final-State\",\n        \"Progress\", \"Tracking-URL\");\n    for (ApplicationReport appReport : appsReport) {\n      DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n      String progress \u003d formatter.format(appReport.getProgress());\n      writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n          appReport.getName(), appReport.getApplicationType(), appReport\n              .getUser(), appReport.getQueue(), appReport\n              .getYarnApplicationState(),\n          appReport.getFinalApplicationStatus(), progress, appReport\n              .getOriginalTrackingUrl());\n    }\n    writer.flush();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
      "extendedDetails": {}
    },
    "2d525510b42457dd4b519a0d4e49cac4ffe48a6f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1124. Modified YARN CLI application list to display new and submitted applications together with running apps by default, following up YARN-1074. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1519869 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/09/13 3:18 PM",
      "commitName": "2d525510b42457dd4b519a0d4e49cac4ffe48a6f",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "30/08/13 4:26 PM",
      "commitNameOld": "6d100eb79409cbca70a22ada705dedf6658545e3",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 3.95,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,36 @@\n   private void listApplications(Set\u003cString\u003e appTypes,\n       EnumSet\u003cYarnApplicationState\u003e appStates) throws YarnException,\n       IOException {\n     PrintWriter writer \u003d new PrintWriter(sysout);\n     if (allAppStates) {\n       for(YarnApplicationState appState : YarnApplicationState.values()) {\n         appStates.add(appState);\n       }\n     } else {\n       if (appStates.isEmpty()) {\n         appStates.add(YarnApplicationState.RUNNING);\n+        appStates.add(YarnApplicationState.ACCEPTED);\n+        appStates.add(YarnApplicationState.SUBMITTED);\n       }\n     }\n \n     List\u003cApplicationReport\u003e appsReport \u003d\n         client.getApplications(appTypes, appStates);\n \n     writer\n         .println(\"Total number of applications (application-types: \" + appTypes\n             + \" and states: \" + appStates + \")\" + \":\" + appsReport.size());\n     writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n         \"Application-Name\",\"Application-Type\", \"User\", \"Queue\", \n         \"State\", \"Final-State\",\"Progress\", \"Tracking-URL\");\n     for (ApplicationReport appReport : appsReport) {\n       DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n       String progress \u003d formatter.format(appReport.getProgress());\n       writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n           appReport.getName(),appReport.getApplicationType(), appReport.getUser(),\n           appReport.getQueue(),appReport.getYarnApplicationState(),\n           appReport.getFinalApplicationStatus(),progress,\n           appReport.getOriginalTrackingUrl());\n     }\n     writer.flush();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void listApplications(Set\u003cString\u003e appTypes,\n      EnumSet\u003cYarnApplicationState\u003e appStates) throws YarnException,\n      IOException {\n    PrintWriter writer \u003d new PrintWriter(sysout);\n    if (allAppStates) {\n      for(YarnApplicationState appState : YarnApplicationState.values()) {\n        appStates.add(appState);\n      }\n    } else {\n      if (appStates.isEmpty()) {\n        appStates.add(YarnApplicationState.RUNNING);\n        appStates.add(YarnApplicationState.ACCEPTED);\n        appStates.add(YarnApplicationState.SUBMITTED);\n      }\n    }\n\n    List\u003cApplicationReport\u003e appsReport \u003d\n        client.getApplications(appTypes, appStates);\n\n    writer\n        .println(\"Total number of applications (application-types: \" + appTypes\n            + \" and states: \" + appStates + \")\" + \":\" + appsReport.size());\n    writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n        \"Application-Name\",\"Application-Type\", \"User\", \"Queue\", \n        \"State\", \"Final-State\",\"Progress\", \"Tracking-URL\");\n    for (ApplicationReport appReport : appsReport) {\n      DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n      String progress \u003d formatter.format(appReport.getProgress());\n      writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n          appReport.getName(),appReport.getApplicationType(), appReport.getUser(),\n          appReport.getQueue(),appReport.getYarnApplicationState(),\n          appReport.getFinalApplicationStatus(),progress,\n          appReport.getOriginalTrackingUrl());\n    }\n    writer.flush();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
      "extendedDetails": {}
    },
    "962da4dcc74d23c7ce78164dcde38ea5aaf3dd68": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1074. Cleaned up YARN CLI application list to only display running applications by default. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1517196 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/13 2:16 PM",
      "commitName": "962da4dcc74d23c7ce78164dcde38ea5aaf3dd68",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1074. Cleaned up YARN CLI application list to only display running applications by default. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1517196 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/08/13 2:16 PM",
          "commitName": "962da4dcc74d23c7ce78164dcde38ea5aaf3dd68",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "16/08/13 4:00 PM",
          "commitNameOld": "1ad3fe46332586cea73c47ba06342f91359db561",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 7.93,
          "commitsBetweenForRepo": 42,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,34 @@\n-  private void listApplications(Set\u003cString\u003e appTypes)\n-      throws YarnException, IOException {\n+  private void listApplications(Set\u003cString\u003e appTypes,\n+      EnumSet\u003cYarnApplicationState\u003e appStates) throws YarnException,\n+      IOException {\n     PrintWriter writer \u003d new PrintWriter(sysout);\n-    List\u003cApplicationReport\u003e appsReport \u003d\n-        client.getApplications(appTypes);\n+    if (allAppStates) {\n+      for(YarnApplicationState appState : YarnApplicationState.values()) {\n+        appStates.add(appState);\n+      }\n+    } else {\n+      if (appStates.isEmpty()) {\n+        appStates.add(YarnApplicationState.RUNNING);\n+      }\n+    }\n \n-    writer.println(\"Total Applications:\" + appsReport.size());\n+    List\u003cApplicationReport\u003e appsReport \u003d\n+        client.getApplications(appTypes, appStates);\n+\n+    writer\n+        .println(\"Total number of applications (application-types: \" + appTypes\n+            + \" and states: \" + appStates + \")\" + \":\" + appsReport.size());\n     writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n         \"Application-Name\",\"Application-Type\", \"User\", \"Queue\", \n         \"State\", \"Final-State\",\"Progress\", \"Tracking-URL\");\n     for (ApplicationReport appReport : appsReport) {\n       DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n       String progress \u003d formatter.format(appReport.getProgress());\n       writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n           appReport.getName(),appReport.getApplicationType(), appReport.getUser(),\n           appReport.getQueue(),appReport.getYarnApplicationState(),\n           appReport.getFinalApplicationStatus(),progress,\n           appReport.getOriginalTrackingUrl());\n     }\n     writer.flush();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void listApplications(Set\u003cString\u003e appTypes,\n      EnumSet\u003cYarnApplicationState\u003e appStates) throws YarnException,\n      IOException {\n    PrintWriter writer \u003d new PrintWriter(sysout);\n    if (allAppStates) {\n      for(YarnApplicationState appState : YarnApplicationState.values()) {\n        appStates.add(appState);\n      }\n    } else {\n      if (appStates.isEmpty()) {\n        appStates.add(YarnApplicationState.RUNNING);\n      }\n    }\n\n    List\u003cApplicationReport\u003e appsReport \u003d\n        client.getApplications(appTypes, appStates);\n\n    writer\n        .println(\"Total number of applications (application-types: \" + appTypes\n            + \" and states: \" + appStates + \")\" + \":\" + appsReport.size());\n    writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n        \"Application-Name\",\"Application-Type\", \"User\", \"Queue\", \n        \"State\", \"Final-State\",\"Progress\", \"Tracking-URL\");\n    for (ApplicationReport appReport : appsReport) {\n      DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n      String progress \u003d formatter.format(appReport.getProgress());\n      writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n          appReport.getName(),appReport.getApplicationType(), appReport.getUser(),\n          appReport.getQueue(),appReport.getYarnApplicationState(),\n          appReport.getFinalApplicationStatus(),progress,\n          appReport.getOriginalTrackingUrl());\n    }\n    writer.flush();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
          "extendedDetails": {
            "oldValue": "[appTypes-Set\u003cString\u003e]",
            "newValue": "[appTypes-Set\u003cString\u003e, appStates-EnumSet\u003cYarnApplicationState\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1074. Cleaned up YARN CLI application list to only display running applications by default. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1517196 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/08/13 2:16 PM",
          "commitName": "962da4dcc74d23c7ce78164dcde38ea5aaf3dd68",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "16/08/13 4:00 PM",
          "commitNameOld": "1ad3fe46332586cea73c47ba06342f91359db561",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 7.93,
          "commitsBetweenForRepo": 42,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,34 @@\n-  private void listApplications(Set\u003cString\u003e appTypes)\n-      throws YarnException, IOException {\n+  private void listApplications(Set\u003cString\u003e appTypes,\n+      EnumSet\u003cYarnApplicationState\u003e appStates) throws YarnException,\n+      IOException {\n     PrintWriter writer \u003d new PrintWriter(sysout);\n-    List\u003cApplicationReport\u003e appsReport \u003d\n-        client.getApplications(appTypes);\n+    if (allAppStates) {\n+      for(YarnApplicationState appState : YarnApplicationState.values()) {\n+        appStates.add(appState);\n+      }\n+    } else {\n+      if (appStates.isEmpty()) {\n+        appStates.add(YarnApplicationState.RUNNING);\n+      }\n+    }\n \n-    writer.println(\"Total Applications:\" + appsReport.size());\n+    List\u003cApplicationReport\u003e appsReport \u003d\n+        client.getApplications(appTypes, appStates);\n+\n+    writer\n+        .println(\"Total number of applications (application-types: \" + appTypes\n+            + \" and states: \" + appStates + \")\" + \":\" + appsReport.size());\n     writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n         \"Application-Name\",\"Application-Type\", \"User\", \"Queue\", \n         \"State\", \"Final-State\",\"Progress\", \"Tracking-URL\");\n     for (ApplicationReport appReport : appsReport) {\n       DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n       String progress \u003d formatter.format(appReport.getProgress());\n       writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n           appReport.getName(),appReport.getApplicationType(), appReport.getUser(),\n           appReport.getQueue(),appReport.getYarnApplicationState(),\n           appReport.getFinalApplicationStatus(),progress,\n           appReport.getOriginalTrackingUrl());\n     }\n     writer.flush();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void listApplications(Set\u003cString\u003e appTypes,\n      EnumSet\u003cYarnApplicationState\u003e appStates) throws YarnException,\n      IOException {\n    PrintWriter writer \u003d new PrintWriter(sysout);\n    if (allAppStates) {\n      for(YarnApplicationState appState : YarnApplicationState.values()) {\n        appStates.add(appState);\n      }\n    } else {\n      if (appStates.isEmpty()) {\n        appStates.add(YarnApplicationState.RUNNING);\n      }\n    }\n\n    List\u003cApplicationReport\u003e appsReport \u003d\n        client.getApplications(appTypes, appStates);\n\n    writer\n        .println(\"Total number of applications (application-types: \" + appTypes\n            + \" and states: \" + appStates + \")\" + \":\" + appsReport.size());\n    writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n        \"Application-Name\",\"Application-Type\", \"User\", \"Queue\", \n        \"State\", \"Final-State\",\"Progress\", \"Tracking-URL\");\n    for (ApplicationReport appReport : appsReport) {\n      DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n      String progress \u003d formatter.format(appReport.getProgress());\n      writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n          appReport.getName(),appReport.getApplicationType(), appReport.getUser(),\n          appReport.getQueue(),appReport.getYarnApplicationState(),\n          appReport.getFinalApplicationStatus(),progress,\n          appReport.getOriginalTrackingUrl());\n    }\n    writer.flush();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
          "extendedDetails": {}
        }
      ]
    },
    "e2cce7bd26cb943225a0d4ffb6f674e1b8ee39ae": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-727, MAPREDUCE-5325. ClientRMProtocol.getAllApplications should accept ApplicationType as a parameter. Contributed by Xuan Gong.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1501599 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/07/13 4:01 PM",
      "commitName": "e2cce7bd26cb943225a0d4ffb6f674e1b8ee39ae",
      "commitAuthor": "Hitesh Shah",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-727, MAPREDUCE-5325. ClientRMProtocol.getAllApplications should accept ApplicationType as a parameter. Contributed by Xuan Gong.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1501599 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/07/13 4:01 PM",
          "commitName": "e2cce7bd26cb943225a0d4ffb6f674e1b8ee39ae",
          "commitAuthor": "Hitesh Shah",
          "commitDateOld": "17/06/13 9:02 PM",
          "commitNameOld": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 21.79,
          "commitsBetweenForRepo": 99,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-  private void listAllApplications() throws YarnException, IOException {\n+  private void listApplications(Set\u003cString\u003e appTypes)\n+      throws YarnException, IOException {\n     PrintWriter writer \u003d new PrintWriter(sysout);\n-    List\u003cApplicationReport\u003e appsReport \u003d client.getApplicationList();\n+    List\u003cApplicationReport\u003e appsReport \u003d\n+        client.getApplications(appTypes);\n \n     writer.println(\"Total Applications:\" + appsReport.size());\n     writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n         \"Application-Name\",\"Application-Type\", \"User\", \"Queue\", \n         \"State\", \"Final-State\",\"Progress\", \"Tracking-URL\");\n     for (ApplicationReport appReport : appsReport) {\n       DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n       String progress \u003d formatter.format(appReport.getProgress());\n       writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n           appReport.getName(),appReport.getApplicationType(), appReport.getUser(),\n           appReport.getQueue(),appReport.getYarnApplicationState(),\n           appReport.getFinalApplicationStatus(),progress,\n           appReport.getOriginalTrackingUrl());\n     }\n     writer.flush();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void listApplications(Set\u003cString\u003e appTypes)\n      throws YarnException, IOException {\n    PrintWriter writer \u003d new PrintWriter(sysout);\n    List\u003cApplicationReport\u003e appsReport \u003d\n        client.getApplications(appTypes);\n\n    writer.println(\"Total Applications:\" + appsReport.size());\n    writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n        \"Application-Name\",\"Application-Type\", \"User\", \"Queue\", \n        \"State\", \"Final-State\",\"Progress\", \"Tracking-URL\");\n    for (ApplicationReport appReport : appsReport) {\n      DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n      String progress \u003d formatter.format(appReport.getProgress());\n      writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n          appReport.getName(),appReport.getApplicationType(), appReport.getUser(),\n          appReport.getQueue(),appReport.getYarnApplicationState(),\n          appReport.getFinalApplicationStatus(),progress,\n          appReport.getOriginalTrackingUrl());\n    }\n    writer.flush();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
          "extendedDetails": {
            "oldValue": "listAllApplications",
            "newValue": "listApplications"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-727, MAPREDUCE-5325. ClientRMProtocol.getAllApplications should accept ApplicationType as a parameter. Contributed by Xuan Gong.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1501599 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/07/13 4:01 PM",
          "commitName": "e2cce7bd26cb943225a0d4ffb6f674e1b8ee39ae",
          "commitAuthor": "Hitesh Shah",
          "commitDateOld": "17/06/13 9:02 PM",
          "commitNameOld": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 21.79,
          "commitsBetweenForRepo": 99,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-  private void listAllApplications() throws YarnException, IOException {\n+  private void listApplications(Set\u003cString\u003e appTypes)\n+      throws YarnException, IOException {\n     PrintWriter writer \u003d new PrintWriter(sysout);\n-    List\u003cApplicationReport\u003e appsReport \u003d client.getApplicationList();\n+    List\u003cApplicationReport\u003e appsReport \u003d\n+        client.getApplications(appTypes);\n \n     writer.println(\"Total Applications:\" + appsReport.size());\n     writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n         \"Application-Name\",\"Application-Type\", \"User\", \"Queue\", \n         \"State\", \"Final-State\",\"Progress\", \"Tracking-URL\");\n     for (ApplicationReport appReport : appsReport) {\n       DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n       String progress \u003d formatter.format(appReport.getProgress());\n       writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n           appReport.getName(),appReport.getApplicationType(), appReport.getUser(),\n           appReport.getQueue(),appReport.getYarnApplicationState(),\n           appReport.getFinalApplicationStatus(),progress,\n           appReport.getOriginalTrackingUrl());\n     }\n     writer.flush();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void listApplications(Set\u003cString\u003e appTypes)\n      throws YarnException, IOException {\n    PrintWriter writer \u003d new PrintWriter(sysout);\n    List\u003cApplicationReport\u003e appsReport \u003d\n        client.getApplications(appTypes);\n\n    writer.println(\"Total Applications:\" + appsReport.size());\n    writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n        \"Application-Name\",\"Application-Type\", \"User\", \"Queue\", \n        \"State\", \"Final-State\",\"Progress\", \"Tracking-URL\");\n    for (ApplicationReport appReport : appsReport) {\n      DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n      String progress \u003d formatter.format(appReport.getProgress());\n      writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n          appReport.getName(),appReport.getApplicationType(), appReport.getUser(),\n          appReport.getQueue(),appReport.getYarnApplicationState(),\n          appReport.getFinalApplicationStatus(),progress,\n          appReport.getOriginalTrackingUrl());\n    }\n    writer.flush();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[appTypes-Set\u003cString\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-727, MAPREDUCE-5325. ClientRMProtocol.getAllApplications should accept ApplicationType as a parameter. Contributed by Xuan Gong.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1501599 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/07/13 4:01 PM",
          "commitName": "e2cce7bd26cb943225a0d4ffb6f674e1b8ee39ae",
          "commitAuthor": "Hitesh Shah",
          "commitDateOld": "17/06/13 9:02 PM",
          "commitNameOld": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 21.79,
          "commitsBetweenForRepo": 99,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-  private void listAllApplications() throws YarnException, IOException {\n+  private void listApplications(Set\u003cString\u003e appTypes)\n+      throws YarnException, IOException {\n     PrintWriter writer \u003d new PrintWriter(sysout);\n-    List\u003cApplicationReport\u003e appsReport \u003d client.getApplicationList();\n+    List\u003cApplicationReport\u003e appsReport \u003d\n+        client.getApplications(appTypes);\n \n     writer.println(\"Total Applications:\" + appsReport.size());\n     writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n         \"Application-Name\",\"Application-Type\", \"User\", \"Queue\", \n         \"State\", \"Final-State\",\"Progress\", \"Tracking-URL\");\n     for (ApplicationReport appReport : appsReport) {\n       DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n       String progress \u003d formatter.format(appReport.getProgress());\n       writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n           appReport.getName(),appReport.getApplicationType(), appReport.getUser(),\n           appReport.getQueue(),appReport.getYarnApplicationState(),\n           appReport.getFinalApplicationStatus(),progress,\n           appReport.getOriginalTrackingUrl());\n     }\n     writer.flush();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void listApplications(Set\u003cString\u003e appTypes)\n      throws YarnException, IOException {\n    PrintWriter writer \u003d new PrintWriter(sysout);\n    List\u003cApplicationReport\u003e appsReport \u003d\n        client.getApplications(appTypes);\n\n    writer.println(\"Total Applications:\" + appsReport.size());\n    writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n        \"Application-Name\",\"Application-Type\", \"User\", \"Queue\", \n        \"State\", \"Final-State\",\"Progress\", \"Tracking-URL\");\n    for (ApplicationReport appReport : appsReport) {\n      DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n      String progress \u003d formatter.format(appReport.getProgress());\n      writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n          appReport.getName(),appReport.getApplicationType(), appReport.getUser(),\n          appReport.getQueue(),appReport.getYarnApplicationState(),\n          appReport.getFinalApplicationStatus(),progress,\n          appReport.getOriginalTrackingUrl());\n    }\n    writer.flush();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
          "extendedDetails": {}
        }
      ]
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "23/05/13 11:02 AM",
      "commitNameOld": "43876770d91a374563bf3379a5ffab5c2bac2264",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 11.42,
      "commitsBetweenForRepo": 81,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-  private void listAllApplications() throws YarnRemoteException, IOException {\n+  private void listAllApplications() throws YarnException, IOException {\n     PrintWriter writer \u003d new PrintWriter(sysout);\n     List\u003cApplicationReport\u003e appsReport \u003d client.getApplicationList();\n \n     writer.println(\"Total Applications:\" + appsReport.size());\n     writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n         \"Application-Name\",\"Application-Type\", \"User\", \"Queue\", \n         \"State\", \"Final-State\",\"Progress\", \"Tracking-URL\");\n     for (ApplicationReport appReport : appsReport) {\n       DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n       String progress \u003d formatter.format(appReport.getProgress());\n       writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n           appReport.getName(),appReport.getApplicationType(), appReport.getUser(),\n           appReport.getQueue(),appReport.getYarnApplicationState(),\n           appReport.getFinalApplicationStatus(),progress,\n           appReport.getOriginalTrackingUrl());\n     }\n     writer.flush();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void listAllApplications() throws YarnException, IOException {\n    PrintWriter writer \u003d new PrintWriter(sysout);\n    List\u003cApplicationReport\u003e appsReport \u003d client.getApplicationList();\n\n    writer.println(\"Total Applications:\" + appsReport.size());\n    writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n        \"Application-Name\",\"Application-Type\", \"User\", \"Queue\", \n        \"State\", \"Final-State\",\"Progress\", \"Tracking-URL\");\n    for (ApplicationReport appReport : appsReport) {\n      DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n      String progress \u003d formatter.format(appReport.getProgress());\n      writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n          appReport.getName(),appReport.getApplicationType(), appReport.getUser(),\n          appReport.getQueue(),appReport.getYarnApplicationState(),\n          appReport.getFinalApplicationStatus(),progress,\n          appReport.getOriginalTrackingUrl());\n    }\n    writer.flush();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
      "extendedDetails": {
        "oldValue": "[YarnRemoteException, IOException]",
        "newValue": "[YarnException, IOException]"
      }
    },
    "43876770d91a374563bf3379a5ffab5c2bac2264": {
      "type": "Ybodychange",
      "commitMessage": "YARN-563. Add the concept of an application-type for each application. Contributed by Mayank Bansal.\nMAPREDUCE-5246. Specify application-type at the time of job submission after YARN-563. Contributed by Mayank Bansal.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485790 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/05/13 11:02 AM",
      "commitName": "43876770d91a374563bf3379a5ffab5c2bac2264",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/05/13 3:53 PM",
      "commitNameOld": "0727ecaf50481fa7a529398bc2a12ce18c9a6b43",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 14.8,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   private void listAllApplications() throws YarnRemoteException, IOException {\n     PrintWriter writer \u003d new PrintWriter(sysout);\n     List\u003cApplicationReport\u003e appsReport \u003d client.getApplicationList();\n \n     writer.println(\"Total Applications:\" + appsReport.size());\n     writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n-        \"Application-Name\", \"User\", \"Queue\", \"State\", \"Final-State\",\n-        \"Progress\", \"Tracking-URL\");\n+        \"Application-Name\",\"Application-Type\", \"User\", \"Queue\", \n+        \"State\", \"Final-State\",\"Progress\", \"Tracking-URL\");\n     for (ApplicationReport appReport : appsReport) {\n       DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n       String progress \u003d formatter.format(appReport.getProgress());\n       writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n-          appReport.getName(), appReport.getUser(), appReport.getQueue(),\n-          appReport.getYarnApplicationState(), appReport\n-              .getFinalApplicationStatus(),\n-          progress, appReport.getOriginalTrackingUrl());\n+          appReport.getName(),appReport.getApplicationType(), appReport.getUser(),\n+          appReport.getQueue(),appReport.getYarnApplicationState(),\n+          appReport.getFinalApplicationStatus(),progress,\n+          appReport.getOriginalTrackingUrl());\n     }\n     writer.flush();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void listAllApplications() throws YarnRemoteException, IOException {\n    PrintWriter writer \u003d new PrintWriter(sysout);\n    List\u003cApplicationReport\u003e appsReport \u003d client.getApplicationList();\n\n    writer.println(\"Total Applications:\" + appsReport.size());\n    writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n        \"Application-Name\",\"Application-Type\", \"User\", \"Queue\", \n        \"State\", \"Final-State\",\"Progress\", \"Tracking-URL\");\n    for (ApplicationReport appReport : appsReport) {\n      DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n      String progress \u003d formatter.format(appReport.getProgress());\n      writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n          appReport.getName(),appReport.getApplicationType(), appReport.getUser(),\n          appReport.getQueue(),appReport.getYarnApplicationState(),\n          appReport.getFinalApplicationStatus(),progress,\n          appReport.getOriginalTrackingUrl());\n    }\n    writer.flush();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
      "extendedDetails": {}
    },
    "0727ecaf50481fa7a529398bc2a12ce18c9a6b43": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-631. Changed ClientRMProtocol api to throw IOException and YarnRemoteException. Contributed by Xuan Gong.\nMAPREDUCE-5212. Handling YarnRemoteException separately from IOException in MR App after YARN-631. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1480494 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/05/13 3:53 PM",
      "commitName": "0727ecaf50481fa7a529398bc2a12ce18c9a6b43",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/04/13 10:42 PM",
      "commitNameOld": "448df186467c64d992d6d8c9b35b645dbd48898c",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 13.72,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-  private void listAllApplications() throws YarnRemoteException {\n+  private void listAllApplications() throws YarnRemoteException, IOException {\n     PrintWriter writer \u003d new PrintWriter(sysout);\n     List\u003cApplicationReport\u003e appsReport \u003d client.getApplicationList();\n \n     writer.println(\"Total Applications:\" + appsReport.size());\n     writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n         \"Application-Name\", \"User\", \"Queue\", \"State\", \"Final-State\",\n         \"Progress\", \"Tracking-URL\");\n     for (ApplicationReport appReport : appsReport) {\n       DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n       String progress \u003d formatter.format(appReport.getProgress());\n       writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n           appReport.getName(), appReport.getUser(), appReport.getQueue(),\n           appReport.getYarnApplicationState(), appReport\n               .getFinalApplicationStatus(),\n           progress, appReport.getOriginalTrackingUrl());\n     }\n     writer.flush();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void listAllApplications() throws YarnRemoteException, IOException {\n    PrintWriter writer \u003d new PrintWriter(sysout);\n    List\u003cApplicationReport\u003e appsReport \u003d client.getApplicationList();\n\n    writer.println(\"Total Applications:\" + appsReport.size());\n    writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n        \"Application-Name\", \"User\", \"Queue\", \"State\", \"Final-State\",\n        \"Progress\", \"Tracking-URL\");\n    for (ApplicationReport appReport : appsReport) {\n      DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n      String progress \u003d formatter.format(appReport.getProgress());\n      writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n          appReport.getName(), appReport.getUser(), appReport.getQueue(),\n          appReport.getYarnApplicationState(), appReport\n              .getFinalApplicationStatus(),\n          progress, appReport.getOriginalTrackingUrl());\n    }\n    writer.flush();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
      "extendedDetails": {
        "oldValue": "[YarnRemoteException]",
        "newValue": "[YarnRemoteException, IOException]"
      }
    },
    "448df186467c64d992d6d8c9b35b645dbd48898c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-577. Add application-progress also to ApplicationReport. Contributed by Hitesh Shah.\nMAPREDUCE-5178. Update MR App to set progress in ApplicationReport after YARN-577. Contributed by Hitesh Shah.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1475636 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/04/13 10:42 PM",
      "commitName": "448df186467c64d992d6d8c9b35b645dbd48898c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "18/03/13 4:48 PM",
      "commitNameOld": "37eed0a3e1c1a826ce1505325cc54201b3b105f7",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 37.25,
      "commitsBetweenForRepo": 205,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,19 @@\n   private void listAllApplications() throws YarnRemoteException {\n     PrintWriter writer \u003d new PrintWriter(sysout);\n     List\u003cApplicationReport\u003e appsReport \u003d client.getApplicationList();\n \n     writer.println(\"Total Applications:\" + appsReport.size());\n     writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n         \"Application-Name\", \"User\", \"Queue\", \"State\", \"Final-State\",\n-        \"Tracking-URL\");\n+        \"Progress\", \"Tracking-URL\");\n     for (ApplicationReport appReport : appsReport) {\n+      DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n+      String progress \u003d formatter.format(appReport.getProgress());\n       writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n           appReport.getName(), appReport.getUser(), appReport.getQueue(),\n           appReport.getYarnApplicationState(), appReport\n-              .getFinalApplicationStatus(), appReport.getOriginalTrackingUrl());\n+              .getFinalApplicationStatus(),\n+          progress, appReport.getOriginalTrackingUrl());\n     }\n     writer.flush();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void listAllApplications() throws YarnRemoteException {\n    PrintWriter writer \u003d new PrintWriter(sysout);\n    List\u003cApplicationReport\u003e appsReport \u003d client.getApplicationList();\n\n    writer.println(\"Total Applications:\" + appsReport.size());\n    writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n        \"Application-Name\", \"User\", \"Queue\", \"State\", \"Final-State\",\n        \"Progress\", \"Tracking-URL\");\n    for (ApplicationReport appReport : appsReport) {\n      DecimalFormat formatter \u003d new DecimalFormat(\"###.##%\");\n      String progress \u003d formatter.format(appReport.getProgress());\n      writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n          appReport.getName(), appReport.getUser(), appReport.getQueue(),\n          appReport.getYarnApplicationState(), appReport\n              .getFinalApplicationStatus(),\n          progress, appReport.getOriginalTrackingUrl());\n    }\n    writer.flush();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
      "extendedDetails": {}
    },
    "331b1123fbb892524ecb58e551c20befd26c9ea9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-40. Provided support for missing YARN commands Contributed by Devaraj K and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1395793 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/10/12 3:18 PM",
      "commitName": "331b1123fbb892524ecb58e551c20befd26c9ea9",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,16 @@\n+  private void listAllApplications() throws YarnRemoteException {\n+    PrintWriter writer \u003d new PrintWriter(sysout);\n+    List\u003cApplicationReport\u003e appsReport \u003d client.getApplicationList();\n+\n+    writer.println(\"Total Applications:\" + appsReport.size());\n+    writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n+        \"Application-Name\", \"User\", \"Queue\", \"State\", \"Final-State\",\n+        \"Tracking-URL\");\n+    for (ApplicationReport appReport : appsReport) {\n+      writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n+          appReport.getName(), appReport.getUser(), appReport.getQueue(),\n+          appReport.getYarnApplicationState(), appReport\n+              .getFinalApplicationStatus(), appReport.getOriginalTrackingUrl());\n+    }\n+    writer.flush();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void listAllApplications() throws YarnRemoteException {\n    PrintWriter writer \u003d new PrintWriter(sysout);\n    List\u003cApplicationReport\u003e appsReport \u003d client.getApplicationList();\n\n    writer.println(\"Total Applications:\" + appsReport.size());\n    writer.printf(APPLICATIONS_PATTERN, \"Application-Id\",\n        \"Application-Name\", \"User\", \"Queue\", \"State\", \"Final-State\",\n        \"Tracking-URL\");\n    for (ApplicationReport appReport : appsReport) {\n      writer.printf(APPLICATIONS_PATTERN, appReport.getApplicationId(),\n          appReport.getName(), appReport.getUser(), appReport.getQueue(),\n          appReport.getYarnApplicationState(), appReport\n              .getFinalApplicationStatus(), appReport.getOriginalTrackingUrl());\n    }\n    writer.flush();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java"
    }
  }
}