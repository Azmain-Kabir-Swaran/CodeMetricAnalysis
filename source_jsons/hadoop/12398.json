{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalReplicaInPipeline.java",
  "functionName": "stopWriter",
  "functionId": "stopWriter___xceiverStopTimeout-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/LocalReplicaInPipeline.java",
  "functionStartLine": 253,
  "functionEndLine": 278,
  "numCommitsSeen": 33,
  "timeTaken": 7678,
  "changeHistory": [
    "86c9862bec0248d671e657aa56094a2919b8ac14",
    "f6b1a818124cc42688c4c5acaf537d96cf00e43b",
    "7723b139d55fc2c3954939559cb4914046a0f81c",
    "bc13dfb1426944ce45293cb8f444239a7406762c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "86c9862bec0248d671e657aa56094a2919b8ac14": "Ymultichange(Ymovefromfile,Ybodychange)",
    "f6b1a818124cc42688c4c5acaf537d96cf00e43b": "Ybodychange",
    "7723b139d55fc2c3954939559cb4914046a0f81c": "Ymultichange(Yparameterchange,Ybodychange)",
    "bc13dfb1426944ce45293cb8f444239a7406762c": "Ymodifierchange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "86c9862bec0248d671e657aa56094a2919b8ac14": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "13/09/16 12:54 PM",
      "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthor": "Lei Xu",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
          "commitDate": "13/09/16 12:54 PM",
          "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "13/09/16 12:42 PM",
          "commitNameOld": "1c0d18f32289837b8981aed80e7bdcd360adfb85",
          "commitAuthorOld": "Anu Engineer",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n   public void stopWriter(long xceiverStopTimeout) throws IOException {\n     while (true) {\n       Thread thread \u003d writer.get();\n       if ((thread \u003d\u003d null) || (thread \u003d\u003d Thread.currentThread()) ||\n           (!thread.isAlive())) {\n-        if (writer.compareAndSet(thread, null) \u003d\u003d true) {\n+        if (writer.compareAndSet(thread, null)) {\n           return; // Done\n         }\n         // The writer changed.  Go back to the start of the loop and attempt to\n         // stop the new writer.\n         continue;\n       }\n       thread.interrupt();\n       try {\n         thread.join(xceiverStopTimeout);\n         if (thread.isAlive()) {\n           // Our thread join timed out.\n           final String msg \u003d \"Join on writer thread \" + thread + \" timed out\";\n           DataNode.LOG.warn(msg + \"\\n\" + StringUtils.getStackTrace(thread));\n           throw new IOException(msg);\n         }\n       } catch (InterruptedException e) {\n         throw new IOException(\"Waiting for writer thread is interrupted.\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void stopWriter(long xceiverStopTimeout) throws IOException {\n    while (true) {\n      Thread thread \u003d writer.get();\n      if ((thread \u003d\u003d null) || (thread \u003d\u003d Thread.currentThread()) ||\n          (!thread.isAlive())) {\n        if (writer.compareAndSet(thread, null)) {\n          return; // Done\n        }\n        // The writer changed.  Go back to the start of the loop and attempt to\n        // stop the new writer.\n        continue;\n      }\n      thread.interrupt();\n      try {\n        thread.join(xceiverStopTimeout);\n        if (thread.isAlive()) {\n          // Our thread join timed out.\n          final String msg \u003d \"Join on writer thread \" + thread + \" timed out\";\n          DataNode.LOG.warn(msg + \"\\n\" + StringUtils.getStackTrace(thread));\n          throw new IOException(msg);\n        }\n      } catch (InterruptedException e) {\n        throw new IOException(\"Waiting for writer thread is interrupted.\");\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/LocalReplicaInPipeline.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaInPipeline.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/LocalReplicaInPipeline.java",
            "oldMethodName": "stopWriter",
            "newMethodName": "stopWriter"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
          "commitDate": "13/09/16 12:54 PM",
          "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "13/09/16 12:42 PM",
          "commitNameOld": "1c0d18f32289837b8981aed80e7bdcd360adfb85",
          "commitAuthorOld": "Anu Engineer",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n   public void stopWriter(long xceiverStopTimeout) throws IOException {\n     while (true) {\n       Thread thread \u003d writer.get();\n       if ((thread \u003d\u003d null) || (thread \u003d\u003d Thread.currentThread()) ||\n           (!thread.isAlive())) {\n-        if (writer.compareAndSet(thread, null) \u003d\u003d true) {\n+        if (writer.compareAndSet(thread, null)) {\n           return; // Done\n         }\n         // The writer changed.  Go back to the start of the loop and attempt to\n         // stop the new writer.\n         continue;\n       }\n       thread.interrupt();\n       try {\n         thread.join(xceiverStopTimeout);\n         if (thread.isAlive()) {\n           // Our thread join timed out.\n           final String msg \u003d \"Join on writer thread \" + thread + \" timed out\";\n           DataNode.LOG.warn(msg + \"\\n\" + StringUtils.getStackTrace(thread));\n           throw new IOException(msg);\n         }\n       } catch (InterruptedException e) {\n         throw new IOException(\"Waiting for writer thread is interrupted.\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void stopWriter(long xceiverStopTimeout) throws IOException {\n    while (true) {\n      Thread thread \u003d writer.get();\n      if ((thread \u003d\u003d null) || (thread \u003d\u003d Thread.currentThread()) ||\n          (!thread.isAlive())) {\n        if (writer.compareAndSet(thread, null)) {\n          return; // Done\n        }\n        // The writer changed.  Go back to the start of the loop and attempt to\n        // stop the new writer.\n        continue;\n      }\n      thread.interrupt();\n      try {\n        thread.join(xceiverStopTimeout);\n        if (thread.isAlive()) {\n          // Our thread join timed out.\n          final String msg \u003d \"Join on writer thread \" + thread + \" timed out\";\n          DataNode.LOG.warn(msg + \"\\n\" + StringUtils.getStackTrace(thread));\n          throw new IOException(msg);\n        }\n      } catch (InterruptedException e) {\n        throw new IOException(\"Waiting for writer thread is interrupted.\");\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/LocalReplicaInPipeline.java",
          "extendedDetails": {}
        }
      ]
    },
    "f6b1a818124cc42688c4c5acaf537d96cf00e43b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8496. Calling stopWriter() with FSDatasetImpl lock held may block other threads (cmccabe)\n",
      "commitDate": "04/04/16 6:02 PM",
      "commitName": "f6b1a818124cc42688c4c5acaf537d96cf00e43b",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "18/03/16 8:24 AM",
      "commitNameOld": "63c966a3fbeb675959fc4101e65de9f57aecd17d",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 17.4,
      "commitsBetweenForRepo": 95,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,26 @@\n   public void stopWriter(long xceiverStopTimeout) throws IOException {\n-    if (writer !\u003d null \u0026\u0026 writer !\u003d Thread.currentThread() \u0026\u0026 writer.isAlive()) {\n-      writer.interrupt();\n+    while (true) {\n+      Thread thread \u003d writer.get();\n+      if ((thread \u003d\u003d null) || (thread \u003d\u003d Thread.currentThread()) ||\n+          (!thread.isAlive())) {\n+        if (writer.compareAndSet(thread, null) \u003d\u003d true) {\n+          return; // Done\n+        }\n+        // The writer changed.  Go back to the start of the loop and attempt to\n+        // stop the new writer.\n+        continue;\n+      }\n+      thread.interrupt();\n       try {\n-        writer.join(xceiverStopTimeout);\n-        if (writer.isAlive()) {\n-          final String msg \u003d \"Join on writer thread \" + writer + \" timed out\";\n-          DataNode.LOG.warn(msg + \"\\n\" + StringUtils.getStackTrace(writer));\n+        thread.join(xceiverStopTimeout);\n+        if (thread.isAlive()) {\n+          // Our thread join timed out.\n+          final String msg \u003d \"Join on writer thread \" + thread + \" timed out\";\n+          DataNode.LOG.warn(msg + \"\\n\" + StringUtils.getStackTrace(thread));\n           throw new IOException(msg);\n         }\n       } catch (InterruptedException e) {\n         throw new IOException(\"Waiting for writer thread is interrupted.\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stopWriter(long xceiverStopTimeout) throws IOException {\n    while (true) {\n      Thread thread \u003d writer.get();\n      if ((thread \u003d\u003d null) || (thread \u003d\u003d Thread.currentThread()) ||\n          (!thread.isAlive())) {\n        if (writer.compareAndSet(thread, null) \u003d\u003d true) {\n          return; // Done\n        }\n        // The writer changed.  Go back to the start of the loop and attempt to\n        // stop the new writer.\n        continue;\n      }\n      thread.interrupt();\n      try {\n        thread.join(xceiverStopTimeout);\n        if (thread.isAlive()) {\n          // Our thread join timed out.\n          final String msg \u003d \"Join on writer thread \" + thread + \" timed out\";\n          DataNode.LOG.warn(msg + \"\\n\" + StringUtils.getStackTrace(thread));\n          throw new IOException(msg);\n        }\n      } catch (InterruptedException e) {\n        throw new IOException(\"Waiting for writer thread is interrupted.\");\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaInPipeline.java",
      "extendedDetails": {}
    },
    "7723b139d55fc2c3954939559cb4914046a0f81c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5016. Deadlock in pipeline recovery causes Datanode to be marked dead. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1507189 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/07/13 9:42 PM",
      "commitName": "7723b139d55fc2c3954939559cb4914046a0f81c",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5016. Deadlock in pipeline recovery causes Datanode to be marked dead. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1507189 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/07/13 9:42 PM",
          "commitName": "7723b139d55fc2c3954939559cb4914046a0f81c",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "02/04/12 10:38 AM",
          "commitNameOld": "bc13dfb1426944ce45293cb8f444239a7406762c",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 479.46,
          "commitsBetweenForRepo": 2818,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,15 @@\n-  public void stopWriter() throws IOException {\n+  public void stopWriter(long xceiverStopTimeout) throws IOException {\n     if (writer !\u003d null \u0026\u0026 writer !\u003d Thread.currentThread() \u0026\u0026 writer.isAlive()) {\n       writer.interrupt();\n       try {\n-        writer.join();\n+        writer.join(xceiverStopTimeout);\n+        if (writer.isAlive()) {\n+          final String msg \u003d \"Join on writer thread \" + writer + \" timed out\";\n+          DataNode.LOG.warn(msg + \"\\n\" + StringUtils.getStackTrace(writer));\n+          throw new IOException(msg);\n+        }\n       } catch (InterruptedException e) {\n         throw new IOException(\"Waiting for writer thread is interrupted.\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void stopWriter(long xceiverStopTimeout) throws IOException {\n    if (writer !\u003d null \u0026\u0026 writer !\u003d Thread.currentThread() \u0026\u0026 writer.isAlive()) {\n      writer.interrupt();\n      try {\n        writer.join(xceiverStopTimeout);\n        if (writer.isAlive()) {\n          final String msg \u003d \"Join on writer thread \" + writer + \" timed out\";\n          DataNode.LOG.warn(msg + \"\\n\" + StringUtils.getStackTrace(writer));\n          throw new IOException(msg);\n        }\n      } catch (InterruptedException e) {\n        throw new IOException(\"Waiting for writer thread is interrupted.\");\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaInPipeline.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[xceiverStopTimeout-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5016. Deadlock in pipeline recovery causes Datanode to be marked dead. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1507189 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/07/13 9:42 PM",
          "commitName": "7723b139d55fc2c3954939559cb4914046a0f81c",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "02/04/12 10:38 AM",
          "commitNameOld": "bc13dfb1426944ce45293cb8f444239a7406762c",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 479.46,
          "commitsBetweenForRepo": 2818,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,15 @@\n-  public void stopWriter() throws IOException {\n+  public void stopWriter(long xceiverStopTimeout) throws IOException {\n     if (writer !\u003d null \u0026\u0026 writer !\u003d Thread.currentThread() \u0026\u0026 writer.isAlive()) {\n       writer.interrupt();\n       try {\n-        writer.join();\n+        writer.join(xceiverStopTimeout);\n+        if (writer.isAlive()) {\n+          final String msg \u003d \"Join on writer thread \" + writer + \" timed out\";\n+          DataNode.LOG.warn(msg + \"\\n\" + StringUtils.getStackTrace(writer));\n+          throw new IOException(msg);\n+        }\n       } catch (InterruptedException e) {\n         throw new IOException(\"Waiting for writer thread is interrupted.\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void stopWriter(long xceiverStopTimeout) throws IOException {\n    if (writer !\u003d null \u0026\u0026 writer !\u003d Thread.currentThread() \u0026\u0026 writer.isAlive()) {\n      writer.interrupt();\n      try {\n        writer.join(xceiverStopTimeout);\n        if (writer.isAlive()) {\n          final String msg \u003d \"Join on writer thread \" + writer + \" timed out\";\n          DataNode.LOG.warn(msg + \"\\n\" + StringUtils.getStackTrace(writer));\n          throw new IOException(msg);\n        }\n      } catch (InterruptedException e) {\n        throw new IOException(\"Waiting for writer thread is interrupted.\");\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaInPipeline.java",
          "extendedDetails": {}
        }
      ]
    },
    "bc13dfb1426944ce45293cb8f444239a7406762c": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/12 10:38 AM",
      "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "16/03/12 10:32 AM",
      "commitNameOld": "662b1887af4e39f3eadd7dda4953c7f2529b43bc",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 17.0,
      "commitsBetweenForRepo": 100,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n-  void stopWriter() throws IOException {\n+  public void stopWriter() throws IOException {\n     if (writer !\u003d null \u0026\u0026 writer !\u003d Thread.currentThread() \u0026\u0026 writer.isAlive()) {\n       writer.interrupt();\n       try {\n         writer.join();\n       } catch (InterruptedException e) {\n         throw new IOException(\"Waiting for writer thread is interrupted.\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stopWriter() throws IOException {\n    if (writer !\u003d null \u0026\u0026 writer !\u003d Thread.currentThread() \u0026\u0026 writer.isAlive()) {\n      writer.interrupt();\n      try {\n        writer.join();\n      } catch (InterruptedException e) {\n        throw new IOException(\"Waiting for writer thread is interrupted.\");\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaInPipeline.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[public]"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void stopWriter() throws IOException {\n    if (writer !\u003d null \u0026\u0026 writer !\u003d Thread.currentThread() \u0026\u0026 writer.isAlive()) {\n      writer.interrupt();\n      try {\n        writer.join();\n      } catch (InterruptedException e) {\n        throw new IOException(\"Waiting for writer thread is interrupted.\");\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaInPipeline.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaInPipeline.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaInPipeline.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void stopWriter() throws IOException {\n    if (writer !\u003d null \u0026\u0026 writer !\u003d Thread.currentThread() \u0026\u0026 writer.isAlive()) {\n      writer.interrupt();\n      try {\n        writer.join();\n      } catch (InterruptedException e) {\n        throw new IOException(\"Waiting for writer thread is interrupted.\");\n      }\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaInPipeline.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/ReplicaInPipeline.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ReplicaInPipeline.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,10 @@\n+  void stopWriter() throws IOException {\n+    if (writer !\u003d null \u0026\u0026 writer !\u003d Thread.currentThread() \u0026\u0026 writer.isAlive()) {\n+      writer.interrupt();\n+      try {\n+        writer.join();\n+      } catch (InterruptedException e) {\n+        throw new IOException(\"Waiting for writer thread is interrupted.\");\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void stopWriter() throws IOException {\n    if (writer !\u003d null \u0026\u0026 writer !\u003d Thread.currentThread() \u0026\u0026 writer.isAlive()) {\n      writer.interrupt();\n      try {\n        writer.join();\n      } catch (InterruptedException e) {\n        throw new IOException(\"Waiting for writer thread is interrupted.\");\n      }\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/ReplicaInPipeline.java"
    }
  }
}