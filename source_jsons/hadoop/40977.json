{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSQueueConverter.java",
  "functionName": "emitMaxAllocations",
  "functionId": "emitMaxAllocations___queueName-String__queue-FSQueue",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSQueueConverter.java",
  "functionStartLine": 179,
  "functionEndLine": 207,
  "numCommitsSeen": 9,
  "timeTaken": 1015,
  "changeHistory": [
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d"
  ],
  "changeHistoryShort": {
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9699. Migration tool that help to generate CS config based on FS config [Phase 1]. Contributed by Peter Bacsko\n",
      "commitDate": "14/10/19 8:19 AM",
      "commitName": "5cc7873a4723a6c8e8e001d008fcd522eec0433d",
      "commitAuthor": "Szilard Nemeth",
      "diff": "@@ -0,0 +1,29 @@\n+  private void emitMaxAllocations(String queueName, FSQueue queue) {\n+    Resource maxAllocation \u003d queue.getMaximumContainerAllocation();\n+\n+    if (isNotUnboundedResource(maxAllocation)) {\n+      long parentMaxVcores \u003d Integer.MIN_VALUE;\n+      long parentMaxMemory \u003d Integer.MIN_VALUE;\n+\n+      if (queue.getParent() !\u003d null) {\n+        FSQueue parent \u003d queue.getParent();\n+        Resource parentMaxAllocation \u003d parent.getMaximumContainerAllocation();\n+        if (isNotUnboundedResource(parentMaxAllocation)) {\n+          parentMaxVcores \u003d parentMaxAllocation.getVirtualCores();\n+          parentMaxMemory \u003d parentMaxAllocation.getMemorySize();\n+        }\n+      }\n+\n+      long maxVcores \u003d maxAllocation.getVirtualCores();\n+      long maxMemory \u003d maxAllocation.getMemorySize();\n+\n+      // only emit max allocation if it differs from the parent\u0027s setting\n+      if (maxVcores !\u003d parentMaxVcores || maxMemory !\u003d parentMaxMemory) {\n+        capacitySchedulerConfig.set(PREFIX + queueName +\n+            \".maximum-allocation-mb\", String.valueOf(maxMemory));\n+\n+        capacitySchedulerConfig.set(PREFIX + queueName +\n+            \".maximum-allocation-vcores\", String.valueOf(maxVcores));\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void emitMaxAllocations(String queueName, FSQueue queue) {\n    Resource maxAllocation \u003d queue.getMaximumContainerAllocation();\n\n    if (isNotUnboundedResource(maxAllocation)) {\n      long parentMaxVcores \u003d Integer.MIN_VALUE;\n      long parentMaxMemory \u003d Integer.MIN_VALUE;\n\n      if (queue.getParent() !\u003d null) {\n        FSQueue parent \u003d queue.getParent();\n        Resource parentMaxAllocation \u003d parent.getMaximumContainerAllocation();\n        if (isNotUnboundedResource(parentMaxAllocation)) {\n          parentMaxVcores \u003d parentMaxAllocation.getVirtualCores();\n          parentMaxMemory \u003d parentMaxAllocation.getMemorySize();\n        }\n      }\n\n      long maxVcores \u003d maxAllocation.getVirtualCores();\n      long maxMemory \u003d maxAllocation.getMemorySize();\n\n      // only emit max allocation if it differs from the parent\u0027s setting\n      if (maxVcores !\u003d parentMaxVcores || maxMemory !\u003d parentMaxMemory) {\n        capacitySchedulerConfig.set(PREFIX + queueName +\n            \".maximum-allocation-mb\", String.valueOf(maxMemory));\n\n        capacitySchedulerConfig.set(PREFIX + queueName +\n            \".maximum-allocation-vcores\", String.valueOf(maxVcores));\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSQueueConverter.java"
    }
  }
}