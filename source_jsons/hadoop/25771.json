{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMContainerRequestor.java",
  "functionName": "addResourceRequest",
  "functionId": "addResourceRequest___priority-Priority__resourceName-String__capability-Resource__nodeLabelExpression-String",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerRequestor.java",
  "functionStartLine": 436,
  "functionEndLine": 440,
  "numCommitsSeen": 70,
  "timeTaken": 8589,
  "changeHistory": [
    "ae353ea96993ec664090c5d84f6675c29d9f0f5f",
    "3164e7d83875aa6b7435d1dfe61ac280aa277f1c",
    "f27e484636f9903bb80afac9c9e51a04a7dbce76",
    "35832053bf46f77a6350ef8e716a67f2a374b1a0",
    "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "ae353ea96993ec664090c5d84f6675c29d9f0f5f": "Ybodychange",
    "3164e7d83875aa6b7435d1dfe61ac280aa277f1c": "Ymultichange(Yparameterchange,Ybodychange)",
    "f27e484636f9903bb80afac9c9e51a04a7dbce76": "Ybodychange",
    "35832053bf46f77a6350ef8e716a67f2a374b1a0": "Ybodychange",
    "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ae353ea96993ec664090c5d84f6675c29d9f0f5f": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6703. Add flag to allow MapReduce AM to request for OPPORTUNISTIC containers. Contributed by Arun Suresh\n",
      "commitDate": "24/05/16 7:47 PM",
      "commitName": "ae353ea96993ec664090c5d84f6675c29d9f0f5f",
      "commitAuthor": "Jian He",
      "commitDateOld": "05/05/16 7:03 PM",
      "commitNameOld": "8d48266720dcf0e71cfd87fef18b60a53aa1bef9",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 19.03,
      "commitsBetweenForRepo": 131,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,5 @@\n   private void addResourceRequest(Priority priority, String resourceName,\n       Resource capability, String nodeLabelExpression) {\n-    Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n-      this.remoteRequestsTable.get(priority);\n-    if (remoteRequests \u003d\u003d null) {\n-      remoteRequests \u003d new HashMap\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e();\n-      this.remoteRequestsTable.put(priority, remoteRequests);\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Added priority\u003d\" + priority);\n-      }\n-    }\n-    Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n-    if (reqMap \u003d\u003d null) {\n-      reqMap \u003d new HashMap\u003cResource, ResourceRequest\u003e();\n-      remoteRequests.put(resourceName, reqMap);\n-    }\n-    ResourceRequest remoteRequest \u003d reqMap.get(capability);\n-    if (remoteRequest \u003d\u003d null) {\n-      remoteRequest \u003d recordFactory.newRecordInstance(ResourceRequest.class);\n-      remoteRequest.setPriority(priority);\n-      remoteRequest.setResourceName(resourceName);\n-      remoteRequest.setCapability(capability);\n-      remoteRequest.setNumContainers(0);\n-      remoteRequest.setNodeLabelExpression(nodeLabelExpression);\n-      reqMap.put(capability, remoteRequest);\n-    }\n-    remoteRequest.setNumContainers(remoteRequest.getNumContainers() + 1);\n-\n-    // Note this down for next interaction with ResourceManager\n-    addResourceRequestToAsk(remoteRequest);\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"addResourceRequest:\" + \" applicationId\u003d\"\n-          + applicationId.getId() + \" priority\u003d\" + priority.getPriority()\n-          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n-          + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n-    }\n+    addResourceRequest(priority, resourceName, capability, nodeLabelExpression,\n+        ExecutionType.GUARANTEED);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addResourceRequest(Priority priority, String resourceName,\n      Resource capability, String nodeLabelExpression) {\n    addResourceRequest(priority, resourceName, capability, nodeLabelExpression,\n        ExecutionType.GUARANTEED);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerRequestor.java",
      "extendedDetails": {}
    },
    "3164e7d83875aa6b7435d1dfe61ac280aa277f1c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-6304. Specifying node labels when submitting MR jobs. (Naganarasimha G R via wangda)\n",
      "commitDate": "27/05/15 2:26 PM",
      "commitName": "3164e7d83875aa6b7435d1dfe61ac280aa277f1c",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-6304. Specifying node labels when submitting MR jobs. (Naganarasimha G R via wangda)\n",
          "commitDate": "27/05/15 2:26 PM",
          "commitName": "3164e7d83875aa6b7435d1dfe61ac280aa277f1c",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "03/03/15 2:02 AM",
          "commitNameOld": "4228de94028f1e10ca59ce23e963e488fe566909",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 85.47,
          "commitsBetweenForRepo": 800,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,36 +1,37 @@\n   private void addResourceRequest(Priority priority, String resourceName,\n-      Resource capability) {\n+      Resource capability, String nodeLabelExpression) {\n     Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n       this.remoteRequestsTable.get(priority);\n     if (remoteRequests \u003d\u003d null) {\n       remoteRequests \u003d new HashMap\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e();\n       this.remoteRequestsTable.put(priority, remoteRequests);\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Added priority\u003d\" + priority);\n       }\n     }\n     Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n     if (reqMap \u003d\u003d null) {\n       reqMap \u003d new HashMap\u003cResource, ResourceRequest\u003e();\n       remoteRequests.put(resourceName, reqMap);\n     }\n     ResourceRequest remoteRequest \u003d reqMap.get(capability);\n     if (remoteRequest \u003d\u003d null) {\n       remoteRequest \u003d recordFactory.newRecordInstance(ResourceRequest.class);\n       remoteRequest.setPriority(priority);\n       remoteRequest.setResourceName(resourceName);\n       remoteRequest.setCapability(capability);\n       remoteRequest.setNumContainers(0);\n+      remoteRequest.setNodeLabelExpression(nodeLabelExpression);\n       reqMap.put(capability, remoteRequest);\n     }\n     remoteRequest.setNumContainers(remoteRequest.getNumContainers() + 1);\n \n     // Note this down for next interaction with ResourceManager\n     addResourceRequestToAsk(remoteRequest);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"addResourceRequest:\" + \" applicationId\u003d\"\n           + applicationId.getId() + \" priority\u003d\" + priority.getPriority()\n           + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n           + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void addResourceRequest(Priority priority, String resourceName,\n      Resource capability, String nodeLabelExpression) {\n    Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n      this.remoteRequestsTable.get(priority);\n    if (remoteRequests \u003d\u003d null) {\n      remoteRequests \u003d new HashMap\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e();\n      this.remoteRequestsTable.put(priority, remoteRequests);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Added priority\u003d\" + priority);\n      }\n    }\n    Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n    if (reqMap \u003d\u003d null) {\n      reqMap \u003d new HashMap\u003cResource, ResourceRequest\u003e();\n      remoteRequests.put(resourceName, reqMap);\n    }\n    ResourceRequest remoteRequest \u003d reqMap.get(capability);\n    if (remoteRequest \u003d\u003d null) {\n      remoteRequest \u003d recordFactory.newRecordInstance(ResourceRequest.class);\n      remoteRequest.setPriority(priority);\n      remoteRequest.setResourceName(resourceName);\n      remoteRequest.setCapability(capability);\n      remoteRequest.setNumContainers(0);\n      remoteRequest.setNodeLabelExpression(nodeLabelExpression);\n      reqMap.put(capability, remoteRequest);\n    }\n    remoteRequest.setNumContainers(remoteRequest.getNumContainers() + 1);\n\n    // Note this down for next interaction with ResourceManager\n    addResourceRequestToAsk(remoteRequest);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"addResourceRequest:\" + \" applicationId\u003d\"\n          + applicationId.getId() + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerRequestor.java",
          "extendedDetails": {
            "oldValue": "[priority-Priority, resourceName-String, capability-Resource]",
            "newValue": "[priority-Priority, resourceName-String, capability-Resource, nodeLabelExpression-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-6304. Specifying node labels when submitting MR jobs. (Naganarasimha G R via wangda)\n",
          "commitDate": "27/05/15 2:26 PM",
          "commitName": "3164e7d83875aa6b7435d1dfe61ac280aa277f1c",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "03/03/15 2:02 AM",
          "commitNameOld": "4228de94028f1e10ca59ce23e963e488fe566909",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 85.47,
          "commitsBetweenForRepo": 800,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,36 +1,37 @@\n   private void addResourceRequest(Priority priority, String resourceName,\n-      Resource capability) {\n+      Resource capability, String nodeLabelExpression) {\n     Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n       this.remoteRequestsTable.get(priority);\n     if (remoteRequests \u003d\u003d null) {\n       remoteRequests \u003d new HashMap\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e();\n       this.remoteRequestsTable.put(priority, remoteRequests);\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Added priority\u003d\" + priority);\n       }\n     }\n     Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n     if (reqMap \u003d\u003d null) {\n       reqMap \u003d new HashMap\u003cResource, ResourceRequest\u003e();\n       remoteRequests.put(resourceName, reqMap);\n     }\n     ResourceRequest remoteRequest \u003d reqMap.get(capability);\n     if (remoteRequest \u003d\u003d null) {\n       remoteRequest \u003d recordFactory.newRecordInstance(ResourceRequest.class);\n       remoteRequest.setPriority(priority);\n       remoteRequest.setResourceName(resourceName);\n       remoteRequest.setCapability(capability);\n       remoteRequest.setNumContainers(0);\n+      remoteRequest.setNodeLabelExpression(nodeLabelExpression);\n       reqMap.put(capability, remoteRequest);\n     }\n     remoteRequest.setNumContainers(remoteRequest.getNumContainers() + 1);\n \n     // Note this down for next interaction with ResourceManager\n     addResourceRequestToAsk(remoteRequest);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"addResourceRequest:\" + \" applicationId\u003d\"\n           + applicationId.getId() + \" priority\u003d\" + priority.getPriority()\n           + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n           + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void addResourceRequest(Priority priority, String resourceName,\n      Resource capability, String nodeLabelExpression) {\n    Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n      this.remoteRequestsTable.get(priority);\n    if (remoteRequests \u003d\u003d null) {\n      remoteRequests \u003d new HashMap\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e();\n      this.remoteRequestsTable.put(priority, remoteRequests);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Added priority\u003d\" + priority);\n      }\n    }\n    Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n    if (reqMap \u003d\u003d null) {\n      reqMap \u003d new HashMap\u003cResource, ResourceRequest\u003e();\n      remoteRequests.put(resourceName, reqMap);\n    }\n    ResourceRequest remoteRequest \u003d reqMap.get(capability);\n    if (remoteRequest \u003d\u003d null) {\n      remoteRequest \u003d recordFactory.newRecordInstance(ResourceRequest.class);\n      remoteRequest.setPriority(priority);\n      remoteRequest.setResourceName(resourceName);\n      remoteRequest.setCapability(capability);\n      remoteRequest.setNumContainers(0);\n      remoteRequest.setNodeLabelExpression(nodeLabelExpression);\n      reqMap.put(capability, remoteRequest);\n    }\n    remoteRequest.setNumContainers(remoteRequest.getNumContainers() + 1);\n\n    // Note this down for next interaction with ResourceManager\n    addResourceRequestToAsk(remoteRequest);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"addResourceRequest:\" + \" applicationId\u003d\"\n          + applicationId.getId() + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerRequestor.java",
          "extendedDetails": {}
        }
      ]
    },
    "f27e484636f9903bb80afac9c9e51a04a7dbce76": {
      "type": "Ybodychange",
      "commitMessage": "YARN-749. Rename ResourceRequest.(get,set)HostName to ResourceRequest.(get,set)ResourceName. Contributed by Arun C. Murthy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488806 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/06/13 3:53 PM",
      "commitName": "f27e484636f9903bb80afac9c9e51a04a7dbce76",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/05/13 6:46 PM",
      "commitNameOld": "643155cbee54809e1a7febd96cbb7d8111689b38",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 8.88,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   private void addResourceRequest(Priority priority, String resourceName,\n       Resource capability) {\n     Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n       this.remoteRequestsTable.get(priority);\n     if (remoteRequests \u003d\u003d null) {\n       remoteRequests \u003d new HashMap\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e();\n       this.remoteRequestsTable.put(priority, remoteRequests);\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Added priority\u003d\" + priority);\n       }\n     }\n     Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n     if (reqMap \u003d\u003d null) {\n       reqMap \u003d new HashMap\u003cResource, ResourceRequest\u003e();\n       remoteRequests.put(resourceName, reqMap);\n     }\n     ResourceRequest remoteRequest \u003d reqMap.get(capability);\n     if (remoteRequest \u003d\u003d null) {\n       remoteRequest \u003d recordFactory.newRecordInstance(ResourceRequest.class);\n       remoteRequest.setPriority(priority);\n-      remoteRequest.setHostName(resourceName);\n+      remoteRequest.setResourceName(resourceName);\n       remoteRequest.setCapability(capability);\n       remoteRequest.setNumContainers(0);\n       reqMap.put(capability, remoteRequest);\n     }\n     remoteRequest.setNumContainers(remoteRequest.getNumContainers() + 1);\n \n     // Note this down for next interaction with ResourceManager\n     addResourceRequestToAsk(remoteRequest);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"addResourceRequest:\" + \" applicationId\u003d\"\n           + applicationId.getId() + \" priority\u003d\" + priority.getPriority()\n           + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n           + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addResourceRequest(Priority priority, String resourceName,\n      Resource capability) {\n    Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n      this.remoteRequestsTable.get(priority);\n    if (remoteRequests \u003d\u003d null) {\n      remoteRequests \u003d new HashMap\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e();\n      this.remoteRequestsTable.put(priority, remoteRequests);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Added priority\u003d\" + priority);\n      }\n    }\n    Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n    if (reqMap \u003d\u003d null) {\n      reqMap \u003d new HashMap\u003cResource, ResourceRequest\u003e();\n      remoteRequests.put(resourceName, reqMap);\n    }\n    ResourceRequest remoteRequest \u003d reqMap.get(capability);\n    if (remoteRequest \u003d\u003d null) {\n      remoteRequest \u003d recordFactory.newRecordInstance(ResourceRequest.class);\n      remoteRequest.setPriority(priority);\n      remoteRequest.setResourceName(resourceName);\n      remoteRequest.setCapability(capability);\n      remoteRequest.setNumContainers(0);\n      reqMap.put(capability, remoteRequest);\n    }\n    remoteRequest.setNumContainers(remoteRequest.getNumContainers() + 1);\n\n    // Note this down for next interaction with ResourceManager\n    addResourceRequestToAsk(remoteRequest);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"addResourceRequest:\" + \" applicationId\u003d\"\n          + applicationId.getId() + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerRequestor.java",
      "extendedDetails": {}
    },
    "35832053bf46f77a6350ef8e716a67f2a374b1a0": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4671. AM does not tell the RM about container requests which are no longer needed. Contributed by Bikas Saha.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1443323 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/02/13 11:07 PM",
      "commitName": "35832053bf46f77a6350ef8e716a67f2a374b1a0",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "14/11/12 4:16 PM",
      "commitNameOld": "905b17876c44634545a68300ff2f2d73fb86d3b7",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 84.29,
      "commitsBetweenForRepo": 365,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   private void addResourceRequest(Priority priority, String resourceName,\n       Resource capability) {\n     Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n       this.remoteRequestsTable.get(priority);\n     if (remoteRequests \u003d\u003d null) {\n       remoteRequests \u003d new HashMap\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e();\n       this.remoteRequestsTable.put(priority, remoteRequests);\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Added priority\u003d\" + priority);\n       }\n     }\n     Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n     if (reqMap \u003d\u003d null) {\n       reqMap \u003d new HashMap\u003cResource, ResourceRequest\u003e();\n       remoteRequests.put(resourceName, reqMap);\n     }\n     ResourceRequest remoteRequest \u003d reqMap.get(capability);\n     if (remoteRequest \u003d\u003d null) {\n       remoteRequest \u003d recordFactory.newRecordInstance(ResourceRequest.class);\n       remoteRequest.setPriority(priority);\n       remoteRequest.setHostName(resourceName);\n       remoteRequest.setCapability(capability);\n       remoteRequest.setNumContainers(0);\n       reqMap.put(capability, remoteRequest);\n     }\n     remoteRequest.setNumContainers(remoteRequest.getNumContainers() + 1);\n \n     // Note this down for next interaction with ResourceManager\n-    ask.add(remoteRequest);\n+    addResourceRequestToAsk(remoteRequest);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"addResourceRequest:\" + \" applicationId\u003d\"\n           + applicationId.getId() + \" priority\u003d\" + priority.getPriority()\n           + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n           + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addResourceRequest(Priority priority, String resourceName,\n      Resource capability) {\n    Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n      this.remoteRequestsTable.get(priority);\n    if (remoteRequests \u003d\u003d null) {\n      remoteRequests \u003d new HashMap\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e();\n      this.remoteRequestsTable.put(priority, remoteRequests);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Added priority\u003d\" + priority);\n      }\n    }\n    Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n    if (reqMap \u003d\u003d null) {\n      reqMap \u003d new HashMap\u003cResource, ResourceRequest\u003e();\n      remoteRequests.put(resourceName, reqMap);\n    }\n    ResourceRequest remoteRequest \u003d reqMap.get(capability);\n    if (remoteRequest \u003d\u003d null) {\n      remoteRequest \u003d recordFactory.newRecordInstance(ResourceRequest.class);\n      remoteRequest.setPriority(priority);\n      remoteRequest.setHostName(resourceName);\n      remoteRequest.setCapability(capability);\n      remoteRequest.setNumContainers(0);\n      reqMap.put(capability, remoteRequest);\n    }\n    remoteRequest.setNumContainers(remoteRequest.getNumContainers() + 1);\n\n    // Note this down for next interaction with ResourceManager\n    addResourceRequestToAsk(remoteRequest);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"addResourceRequest:\" + \" applicationId\u003d\"\n          + applicationId.getId() + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerRequestor.java",
      "extendedDetails": {}
    },
    "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3810. Performance tweaks - reduced logging in AM and defined hascode/equals for ResourceRequest \u0026 Priority. Contributed by Vinod K V. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241205 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/02/12 2:01 PM",
      "commitName": "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "27/12/11 11:54 AM",
      "commitNameOld": "fcbad14a3da7fadbb601bf245552ecca2fbc5026",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 41.09,
      "commitsBetweenForRepo": 218,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,36 @@\n   private void addResourceRequest(Priority priority, String resourceName,\n       Resource capability) {\n     Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n       this.remoteRequestsTable.get(priority);\n     if (remoteRequests \u003d\u003d null) {\n       remoteRequests \u003d new HashMap\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e();\n       this.remoteRequestsTable.put(priority, remoteRequests);\n-      LOG.info(\"Added priority\u003d\" + priority);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Added priority\u003d\" + priority);\n+      }\n     }\n     Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n     if (reqMap \u003d\u003d null) {\n       reqMap \u003d new HashMap\u003cResource, ResourceRequest\u003e();\n       remoteRequests.put(resourceName, reqMap);\n     }\n     ResourceRequest remoteRequest \u003d reqMap.get(capability);\n     if (remoteRequest \u003d\u003d null) {\n       remoteRequest \u003d recordFactory.newRecordInstance(ResourceRequest.class);\n       remoteRequest.setPriority(priority);\n       remoteRequest.setHostName(resourceName);\n       remoteRequest.setCapability(capability);\n       remoteRequest.setNumContainers(0);\n       reqMap.put(capability, remoteRequest);\n     }\n     remoteRequest.setNumContainers(remoteRequest.getNumContainers() + 1);\n \n     // Note this down for next interaction with ResourceManager\n     ask.add(remoteRequest);\n-    LOG.info(\"addResourceRequest:\" + \" applicationId\u003d\" + applicationId.getId()\n-        + \" priority\u003d\" + priority.getPriority() + \" resourceName\u003d\" + resourceName\n-        + \" numContainers\u003d\" + remoteRequest.getNumContainers() + \" #asks\u003d\"\n-        + ask.size());\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"addResourceRequest:\" + \" applicationId\u003d\"\n+          + applicationId.getId() + \" priority\u003d\" + priority.getPriority()\n+          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n+          + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addResourceRequest(Priority priority, String resourceName,\n      Resource capability) {\n    Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n      this.remoteRequestsTable.get(priority);\n    if (remoteRequests \u003d\u003d null) {\n      remoteRequests \u003d new HashMap\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e();\n      this.remoteRequestsTable.put(priority, remoteRequests);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Added priority\u003d\" + priority);\n      }\n    }\n    Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n    if (reqMap \u003d\u003d null) {\n      reqMap \u003d new HashMap\u003cResource, ResourceRequest\u003e();\n      remoteRequests.put(resourceName, reqMap);\n    }\n    ResourceRequest remoteRequest \u003d reqMap.get(capability);\n    if (remoteRequest \u003d\u003d null) {\n      remoteRequest \u003d recordFactory.newRecordInstance(ResourceRequest.class);\n      remoteRequest.setPriority(priority);\n      remoteRequest.setHostName(resourceName);\n      remoteRequest.setCapability(capability);\n      remoteRequest.setNumContainers(0);\n      reqMap.put(capability, remoteRequest);\n    }\n    remoteRequest.setNumContainers(remoteRequest.getNumContainers() + 1);\n\n    // Note this down for next interaction with ResourceManager\n    ask.add(remoteRequest);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"addResourceRequest:\" + \" applicationId\u003d\"\n          + applicationId.getId() + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerRequestor.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void addResourceRequest(Priority priority, String resourceName,\n      Resource capability) {\n    Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n      this.remoteRequestsTable.get(priority);\n    if (remoteRequests \u003d\u003d null) {\n      remoteRequests \u003d new HashMap\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e();\n      this.remoteRequestsTable.put(priority, remoteRequests);\n      LOG.info(\"Added priority\u003d\" + priority);\n    }\n    Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n    if (reqMap \u003d\u003d null) {\n      reqMap \u003d new HashMap\u003cResource, ResourceRequest\u003e();\n      remoteRequests.put(resourceName, reqMap);\n    }\n    ResourceRequest remoteRequest \u003d reqMap.get(capability);\n    if (remoteRequest \u003d\u003d null) {\n      remoteRequest \u003d recordFactory.newRecordInstance(ResourceRequest.class);\n      remoteRequest.setPriority(priority);\n      remoteRequest.setHostName(resourceName);\n      remoteRequest.setCapability(capability);\n      remoteRequest.setNumContainers(0);\n      reqMap.put(capability, remoteRequest);\n    }\n    remoteRequest.setNumContainers(remoteRequest.getNumContainers() + 1);\n\n    // Note this down for next interaction with ResourceManager\n    ask.add(remoteRequest);\n    LOG.info(\"addResourceRequest:\" + \" applicationId\u003d\" + applicationId.getId()\n        + \" priority\u003d\" + priority.getPriority() + \" resourceName\u003d\" + resourceName\n        + \" numContainers\u003d\" + remoteRequest.getNumContainers() + \" #asks\u003d\"\n        + ask.size());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerRequestor.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerRequestor.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerRequestor.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,32 @@\n+  private void addResourceRequest(Priority priority, String resourceName,\n+      Resource capability) {\n+    Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n+      this.remoteRequestsTable.get(priority);\n+    if (remoteRequests \u003d\u003d null) {\n+      remoteRequests \u003d new HashMap\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e();\n+      this.remoteRequestsTable.put(priority, remoteRequests);\n+      LOG.info(\"Added priority\u003d\" + priority);\n+    }\n+    Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n+    if (reqMap \u003d\u003d null) {\n+      reqMap \u003d new HashMap\u003cResource, ResourceRequest\u003e();\n+      remoteRequests.put(resourceName, reqMap);\n+    }\n+    ResourceRequest remoteRequest \u003d reqMap.get(capability);\n+    if (remoteRequest \u003d\u003d null) {\n+      remoteRequest \u003d recordFactory.newRecordInstance(ResourceRequest.class);\n+      remoteRequest.setPriority(priority);\n+      remoteRequest.setHostName(resourceName);\n+      remoteRequest.setCapability(capability);\n+      remoteRequest.setNumContainers(0);\n+      reqMap.put(capability, remoteRequest);\n+    }\n+    remoteRequest.setNumContainers(remoteRequest.getNumContainers() + 1);\n+\n+    // Note this down for next interaction with ResourceManager\n+    ask.add(remoteRequest);\n+    LOG.info(\"addResourceRequest:\" + \" applicationId\u003d\" + applicationId.getId()\n+        + \" priority\u003d\" + priority.getPriority() + \" resourceName\u003d\" + resourceName\n+        + \" numContainers\u003d\" + remoteRequest.getNumContainers() + \" #asks\u003d\"\n+        + ask.size());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addResourceRequest(Priority priority, String resourceName,\n      Resource capability) {\n    Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n      this.remoteRequestsTable.get(priority);\n    if (remoteRequests \u003d\u003d null) {\n      remoteRequests \u003d new HashMap\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e();\n      this.remoteRequestsTable.put(priority, remoteRequests);\n      LOG.info(\"Added priority\u003d\" + priority);\n    }\n    Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n    if (reqMap \u003d\u003d null) {\n      reqMap \u003d new HashMap\u003cResource, ResourceRequest\u003e();\n      remoteRequests.put(resourceName, reqMap);\n    }\n    ResourceRequest remoteRequest \u003d reqMap.get(capability);\n    if (remoteRequest \u003d\u003d null) {\n      remoteRequest \u003d recordFactory.newRecordInstance(ResourceRequest.class);\n      remoteRequest.setPriority(priority);\n      remoteRequest.setHostName(resourceName);\n      remoteRequest.setCapability(capability);\n      remoteRequest.setNumContainers(0);\n      reqMap.put(capability, remoteRequest);\n    }\n    remoteRequest.setNumContainers(remoteRequest.getNumContainers() + 1);\n\n    // Note this down for next interaction with ResourceManager\n    ask.add(remoteRequest);\n    LOG.info(\"addResourceRequest:\" + \" applicationId\u003d\" + applicationId.getId()\n        + \" priority\u003d\" + priority.getPriority() + \" resourceName\u003d\" + resourceName\n        + \" numContainers\u003d\" + remoteRequest.getNumContainers() + \" #asks\u003d\"\n        + ask.size());\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerRequestor.java"
    }
  }
}