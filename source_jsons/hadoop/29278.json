{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeHeartbeatResponsePBImpl.java",
  "functionName": "mergeLocalToBuilder",
  "functionId": "mergeLocalToBuilder",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
  "functionStartLine": 100,
  "functionEndLine": 137,
  "numCommitsSeen": 34,
  "timeTaken": 10638,
  "changeHistory": [
    "6a923464afa6b635f505be5d5b2414d47d570f99",
    "e74d1be04be47969943b0501a4f335b0b5188287",
    "8410d862d3a72740f461ef91dddb5325955e1ca5",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438",
    "9b5636408005676ae580f8d929f8e912c27828e7",
    "fa3bc3405dc2f8497faab45ba5c4de2caf4c29bc",
    "f0ac18d001d97914a9ee810b1fab56c5cebff830",
    "8f08532bde153811368e1b8336446fba4743f9d2",
    "c3dc1af072574f5890a8d43e4d60526951b4b8bc",
    "a16d022ca4313a41425c8e97841c841a2d6f2f54",
    "52bbe0f11bc8e97df78a1ab9b63f4eff65fd7a76",
    "0a641496c706fc175e7bf66d69ebf71c7d078e84",
    "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb",
    "18e08a8f511652ed9f4ba386bb4f0cf8339e2729",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "6a923464afa6b635f505be5d5b2414d47d570f99": "Ybodychange",
    "e74d1be04be47969943b0501a4f335b0b5188287": "Ybodychange",
    "8410d862d3a72740f461ef91dddb5325955e1ca5": "Ybodychange",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": "Ybodychange",
    "9b5636408005676ae580f8d929f8e912c27828e7": "Ybodychange",
    "fa3bc3405dc2f8497faab45ba5c4de2caf4c29bc": "Ybodychange",
    "f0ac18d001d97914a9ee810b1fab56c5cebff830": "Ybodychange",
    "8f08532bde153811368e1b8336446fba4743f9d2": "Ybodychange",
    "c3dc1af072574f5890a8d43e4d60526951b4b8bc": "Ybodychange",
    "a16d022ca4313a41425c8e97841c841a2d6f2f54": "Ybodychange",
    "52bbe0f11bc8e97df78a1ab9b63f4eff65fd7a76": "Ybodychange",
    "0a641496c706fc175e7bf66d69ebf71c7d078e84": "Ybodychange",
    "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb": "Ybodychange",
    "18e08a8f511652ed9f4ba386bb4f0cf8339e2729": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6a923464afa6b635f505be5d5b2414d47d570f99": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6523. Optimize system credentials sent in node heartbeat responses. Contributed by Manikandan R\n",
      "commitDate": "08/01/19 2:54 PM",
      "commitName": "6a923464afa6b635f505be5d5b2414d47d570f99",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "20/12/18 6:56 PM",
      "commitNameOld": "f659485ee83f3f34e3717631983adfc8fa1e53dc",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 18.83,
      "commitsBetweenForRepo": 114,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,38 @@\n   private void mergeLocalToBuilder() {\n     if (this.containersToCleanup !\u003d null) {\n       addContainersToCleanupToProto();\n     }\n     if (this.applicationsToCleanup !\u003d null) {\n       addApplicationsToCleanupToProto();\n     }\n     if (this.containersToBeRemovedFromNM !\u003d null) {\n       addContainersToBeRemovedFromNMToProto();\n     }\n     if (this.containerTokenMasterKey !\u003d null) {\n       builder.setContainerTokenMasterKey(\n           convertToProtoFormat(this.containerTokenMasterKey));\n     }\n     if (this.nmTokenMasterKey !\u003d null) {\n       builder.setNmTokenMasterKey(\n           convertToProtoFormat(this.nmTokenMasterKey));\n     }\n     if (this.containerQueuingLimit !\u003d null) {\n       builder.setContainerQueuingLimit(\n           convertToProtoFormat(this.containerQueuingLimit));\n     }\n-    if (this.systemCredentials !\u003d null) {\n-      addSystemCredentialsToProto();\n-    }\n     if (this.containersToUpdate !\u003d null) {\n       addContainersToUpdateToProto();\n     }\n     if (this.containersToDecrease !\u003d null) {\n       addContainersToDecreaseToProto();\n     }\n     if (this.containersToSignal !\u003d null) {\n       addContainersToSignalToProto();\n     }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.appCollectorsMap !\u003d null) {\n       addAppCollectorsMapToProto();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containersToCleanup !\u003d null) {\n      addContainersToCleanupToProto();\n    }\n    if (this.applicationsToCleanup !\u003d null) {\n      addApplicationsToCleanupToProto();\n    }\n    if (this.containersToBeRemovedFromNM !\u003d null) {\n      addContainersToBeRemovedFromNMToProto();\n    }\n    if (this.containerTokenMasterKey !\u003d null) {\n      builder.setContainerTokenMasterKey(\n          convertToProtoFormat(this.containerTokenMasterKey));\n    }\n    if (this.nmTokenMasterKey !\u003d null) {\n      builder.setNmTokenMasterKey(\n          convertToProtoFormat(this.nmTokenMasterKey));\n    }\n    if (this.containerQueuingLimit !\u003d null) {\n      builder.setContainerQueuingLimit(\n          convertToProtoFormat(this.containerQueuingLimit));\n    }\n    if (this.containersToUpdate !\u003d null) {\n      addContainersToUpdateToProto();\n    }\n    if (this.containersToDecrease !\u003d null) {\n      addContainersToDecreaseToProto();\n    }\n    if (this.containersToSignal !\u003d null) {\n      addContainersToSignalToProto();\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.appCollectorsMap !\u003d null) {\n      addAppCollectorsMapToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "e74d1be04be47969943b0501a4f335b0b5188287": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7173. Container update RM-NM communication fix for backward compatibility. (Arun Suresh via wangda)\n\nChange-Id: I1c39ed5c59dee739ba5044b61b3ef5ed203b79c1\n",
      "commitDate": "11/09/17 8:52 PM",
      "commitName": "e74d1be04be47969943b0501a4f335b0b5188287",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "e276c75ec17634fc3b521fdb15b6ac141b001274",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 12.91,
      "commitsBetweenForRepo": 104,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,41 @@\n   private void mergeLocalToBuilder() {\n     if (this.containersToCleanup !\u003d null) {\n       addContainersToCleanupToProto();\n     }\n     if (this.applicationsToCleanup !\u003d null) {\n       addApplicationsToCleanupToProto();\n     }\n     if (this.containersToBeRemovedFromNM !\u003d null) {\n       addContainersToBeRemovedFromNMToProto();\n     }\n     if (this.containerTokenMasterKey !\u003d null) {\n       builder.setContainerTokenMasterKey(\n           convertToProtoFormat(this.containerTokenMasterKey));\n     }\n     if (this.nmTokenMasterKey !\u003d null) {\n       builder.setNmTokenMasterKey(\n           convertToProtoFormat(this.nmTokenMasterKey));\n     }\n     if (this.containerQueuingLimit !\u003d null) {\n       builder.setContainerQueuingLimit(\n           convertToProtoFormat(this.containerQueuingLimit));\n     }\n     if (this.systemCredentials !\u003d null) {\n       addSystemCredentialsToProto();\n     }\n     if (this.containersToUpdate !\u003d null) {\n       addContainersToUpdateToProto();\n     }\n+    if (this.containersToDecrease !\u003d null) {\n+      addContainersToDecreaseToProto();\n+    }\n     if (this.containersToSignal !\u003d null) {\n       addContainersToSignalToProto();\n     }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.appCollectorsMap !\u003d null) {\n       addAppCollectorsMapToProto();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containersToCleanup !\u003d null) {\n      addContainersToCleanupToProto();\n    }\n    if (this.applicationsToCleanup !\u003d null) {\n      addApplicationsToCleanupToProto();\n    }\n    if (this.containersToBeRemovedFromNM !\u003d null) {\n      addContainersToBeRemovedFromNMToProto();\n    }\n    if (this.containerTokenMasterKey !\u003d null) {\n      builder.setContainerTokenMasterKey(\n          convertToProtoFormat(this.containerTokenMasterKey));\n    }\n    if (this.nmTokenMasterKey !\u003d null) {\n      builder.setNmTokenMasterKey(\n          convertToProtoFormat(this.nmTokenMasterKey));\n    }\n    if (this.containerQueuingLimit !\u003d null) {\n      builder.setContainerQueuingLimit(\n          convertToProtoFormat(this.containerQueuingLimit));\n    }\n    if (this.systemCredentials !\u003d null) {\n      addSystemCredentialsToProto();\n    }\n    if (this.containersToUpdate !\u003d null) {\n      addContainersToUpdateToProto();\n    }\n    if (this.containersToDecrease !\u003d null) {\n      addContainersToDecreaseToProto();\n    }\n    if (this.containersToSignal !\u003d null) {\n      addContainersToSignalToProto();\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.appCollectorsMap !\u003d null) {\n      addAppCollectorsMapToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "8410d862d3a72740f461ef91dddb5325955e1ca5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6979. Add flag to notify all types of container updates to NM via NodeHeartbeatResponse. (Kartheek Muthyala via asuresh)\n",
      "commitDate": "20/08/17 7:54 AM",
      "commitName": "8410d862d3a72740f461ef91dddb5325955e1ca5",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "08/06/17 10:08 AM",
      "commitNameOld": "a062374c396ba2bddbbe4d3806cc2896293b4e0b",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 72.91,
      "commitsBetweenForRepo": 433,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   private void mergeLocalToBuilder() {\n     if (this.containersToCleanup !\u003d null) {\n       addContainersToCleanupToProto();\n     }\n     if (this.applicationsToCleanup !\u003d null) {\n       addApplicationsToCleanupToProto();\n     }\n     if (this.containersToBeRemovedFromNM !\u003d null) {\n       addContainersToBeRemovedFromNMToProto();\n     }\n     if (this.containerTokenMasterKey !\u003d null) {\n       builder.setContainerTokenMasterKey(\n           convertToProtoFormat(this.containerTokenMasterKey));\n     }\n     if (this.nmTokenMasterKey !\u003d null) {\n       builder.setNmTokenMasterKey(\n           convertToProtoFormat(this.nmTokenMasterKey));\n     }\n     if (this.containerQueuingLimit !\u003d null) {\n       builder.setContainerQueuingLimit(\n           convertToProtoFormat(this.containerQueuingLimit));\n     }\n     if (this.systemCredentials !\u003d null) {\n       addSystemCredentialsToProto();\n     }\n-    if (this.containersToDecrease !\u003d null) {\n-      addContainersToDecreaseToProto();\n+    if (this.containersToUpdate !\u003d null) {\n+      addContainersToUpdateToProto();\n     }\n     if (this.containersToSignal !\u003d null) {\n       addContainersToSignalToProto();\n     }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.appCollectorsMap !\u003d null) {\n       addAppCollectorsMapToProto();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containersToCleanup !\u003d null) {\n      addContainersToCleanupToProto();\n    }\n    if (this.applicationsToCleanup !\u003d null) {\n      addApplicationsToCleanupToProto();\n    }\n    if (this.containersToBeRemovedFromNM !\u003d null) {\n      addContainersToBeRemovedFromNMToProto();\n    }\n    if (this.containerTokenMasterKey !\u003d null) {\n      builder.setContainerTokenMasterKey(\n          convertToProtoFormat(this.containerTokenMasterKey));\n    }\n    if (this.nmTokenMasterKey !\u003d null) {\n      builder.setNmTokenMasterKey(\n          convertToProtoFormat(this.nmTokenMasterKey));\n    }\n    if (this.containerQueuingLimit !\u003d null) {\n      builder.setContainerQueuingLimit(\n          convertToProtoFormat(this.containerQueuingLimit));\n    }\n    if (this.systemCredentials !\u003d null) {\n      addSystemCredentialsToProto();\n    }\n    if (this.containersToUpdate !\u003d null) {\n      addContainersToUpdateToProto();\n    }\n    if (this.containersToSignal !\u003d null) {\n      addContainersToSignalToProto();\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.appCollectorsMap !\u003d null) {\n      addAppCollectorsMapToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
      "commitAuthor": "Junping Du",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   private void mergeLocalToBuilder() {\n     if (this.containersToCleanup !\u003d null) {\n       addContainersToCleanupToProto();\n     }\n     if (this.applicationsToCleanup !\u003d null) {\n       addApplicationsToCleanupToProto();\n     }\n     if (this.containersToBeRemovedFromNM !\u003d null) {\n       addContainersToBeRemovedFromNMToProto();\n     }\n     if (this.containerTokenMasterKey !\u003d null) {\n       builder.setContainerTokenMasterKey(\n           convertToProtoFormat(this.containerTokenMasterKey));\n     }\n     if (this.nmTokenMasterKey !\u003d null) {\n       builder.setNmTokenMasterKey(\n           convertToProtoFormat(this.nmTokenMasterKey));\n     }\n     if (this.containerQueuingLimit !\u003d null) {\n       builder.setContainerQueuingLimit(\n           convertToProtoFormat(this.containerQueuingLimit));\n     }\n     if (this.systemCredentials !\u003d null) {\n       addSystemCredentialsToProto();\n     }\n     if (this.containersToDecrease !\u003d null) {\n       addContainersToDecreaseToProto();\n     }\n     if (this.containersToSignal !\u003d null) {\n       addContainersToSignalToProto();\n     }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n-    if (this.appAggregatorsMap !\u003d null) {\n-      addAppAggregatorsMapToProto();\n+    if (this.appCollectorsMap !\u003d null) {\n+      addAppCollectorsMapToProto();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containersToCleanup !\u003d null) {\n      addContainersToCleanupToProto();\n    }\n    if (this.applicationsToCleanup !\u003d null) {\n      addApplicationsToCleanupToProto();\n    }\n    if (this.containersToBeRemovedFromNM !\u003d null) {\n      addContainersToBeRemovedFromNMToProto();\n    }\n    if (this.containerTokenMasterKey !\u003d null) {\n      builder.setContainerTokenMasterKey(\n          convertToProtoFormat(this.containerTokenMasterKey));\n    }\n    if (this.nmTokenMasterKey !\u003d null) {\n      builder.setNmTokenMasterKey(\n          convertToProtoFormat(this.nmTokenMasterKey));\n    }\n    if (this.containerQueuingLimit !\u003d null) {\n      builder.setContainerQueuingLimit(\n          convertToProtoFormat(this.containerQueuingLimit));\n    }\n    if (this.systemCredentials !\u003d null) {\n      addSystemCredentialsToProto();\n    }\n    if (this.containersToDecrease !\u003d null) {\n      addContainersToDecreaseToProto();\n    }\n    if (this.containersToSignal !\u003d null) {\n      addContainersToSignalToProto();\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.appCollectorsMap !\u003d null) {\n      addAppCollectorsMapToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "9b5636408005676ae580f8d929f8e912c27828e7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3039. Implemented the app-level timeline aggregator discovery service. Contributed by Junping Du.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9b5636408005676ae580f8d929f8e912c27828e7",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "17/05/16 12:52 PM",
      "commitNameOld": "fa3bc3405dc2f8497faab45ba5c4de2caf4c29bc",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 53.83,
      "commitsBetweenForRepo": 372,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,38 @@\n   private void mergeLocalToBuilder() {\n     if (this.containersToCleanup !\u003d null) {\n       addContainersToCleanupToProto();\n     }\n     if (this.applicationsToCleanup !\u003d null) {\n       addApplicationsToCleanupToProto();\n     }\n     if (this.containersToBeRemovedFromNM !\u003d null) {\n       addContainersToBeRemovedFromNMToProto();\n     }\n     if (this.containerTokenMasterKey !\u003d null) {\n       builder.setContainerTokenMasterKey(\n           convertToProtoFormat(this.containerTokenMasterKey));\n     }\n     if (this.nmTokenMasterKey !\u003d null) {\n       builder.setNmTokenMasterKey(\n           convertToProtoFormat(this.nmTokenMasterKey));\n     }\n     if (this.containerQueuingLimit !\u003d null) {\n       builder.setContainerQueuingLimit(\n           convertToProtoFormat(this.containerQueuingLimit));\n     }\n     if (this.systemCredentials !\u003d null) {\n       addSystemCredentialsToProto();\n     }\n     if (this.containersToDecrease !\u003d null) {\n       addContainersToDecreaseToProto();\n     }\n     if (this.containersToSignal !\u003d null) {\n       addContainersToSignalToProto();\n     }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n+    if (this.appAggregatorsMap !\u003d null) {\n+      addAppAggregatorsMapToProto();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containersToCleanup !\u003d null) {\n      addContainersToCleanupToProto();\n    }\n    if (this.applicationsToCleanup !\u003d null) {\n      addApplicationsToCleanupToProto();\n    }\n    if (this.containersToBeRemovedFromNM !\u003d null) {\n      addContainersToBeRemovedFromNMToProto();\n    }\n    if (this.containerTokenMasterKey !\u003d null) {\n      builder.setContainerTokenMasterKey(\n          convertToProtoFormat(this.containerTokenMasterKey));\n    }\n    if (this.nmTokenMasterKey !\u003d null) {\n      builder.setNmTokenMasterKey(\n          convertToProtoFormat(this.nmTokenMasterKey));\n    }\n    if (this.containerQueuingLimit !\u003d null) {\n      builder.setContainerQueuingLimit(\n          convertToProtoFormat(this.containerQueuingLimit));\n    }\n    if (this.systemCredentials !\u003d null) {\n      addSystemCredentialsToProto();\n    }\n    if (this.containersToDecrease !\u003d null) {\n      addContainersToDecreaseToProto();\n    }\n    if (this.containersToSignal !\u003d null) {\n      addContainersToSignalToProto();\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.appAggregatorsMap !\u003d null) {\n      addAppAggregatorsMapToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "fa3bc3405dc2f8497faab45ba5c4de2caf4c29bc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4832. NM side resource value should get updated if change applied in RM side. Contributed by Junping Du\n",
      "commitDate": "17/05/16 12:52 PM",
      "commitName": "fa3bc3405dc2f8497faab45ba5c4de2caf4c29bc",
      "commitAuthor": "Jian He",
      "commitDateOld": "13/05/16 1:38 PM",
      "commitNameOld": "f0ac18d001d97914a9ee810b1fab56c5cebff830",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 3.97,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,35 @@\n   private void mergeLocalToBuilder() {\n     if (this.containersToCleanup !\u003d null) {\n       addContainersToCleanupToProto();\n     }\n     if (this.applicationsToCleanup !\u003d null) {\n       addApplicationsToCleanupToProto();\n     }\n     if (this.containersToBeRemovedFromNM !\u003d null) {\n       addContainersToBeRemovedFromNMToProto();\n     }\n     if (this.containerTokenMasterKey !\u003d null) {\n       builder.setContainerTokenMasterKey(\n           convertToProtoFormat(this.containerTokenMasterKey));\n     }\n     if (this.nmTokenMasterKey !\u003d null) {\n       builder.setNmTokenMasterKey(\n           convertToProtoFormat(this.nmTokenMasterKey));\n     }\n     if (this.containerQueuingLimit !\u003d null) {\n       builder.setContainerQueuingLimit(\n           convertToProtoFormat(this.containerQueuingLimit));\n     }\n     if (this.systemCredentials !\u003d null) {\n       addSystemCredentialsToProto();\n     }\n     if (this.containersToDecrease !\u003d null) {\n       addContainersToDecreaseToProto();\n     }\n     if (this.containersToSignal !\u003d null) {\n       addContainersToSignalToProto();\n     }\n+    if (this.resource !\u003d null) {\n+      builder.setResource(convertToProtoFormat(this.resource));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containersToCleanup !\u003d null) {\n      addContainersToCleanupToProto();\n    }\n    if (this.applicationsToCleanup !\u003d null) {\n      addApplicationsToCleanupToProto();\n    }\n    if (this.containersToBeRemovedFromNM !\u003d null) {\n      addContainersToBeRemovedFromNMToProto();\n    }\n    if (this.containerTokenMasterKey !\u003d null) {\n      builder.setContainerTokenMasterKey(\n          convertToProtoFormat(this.containerTokenMasterKey));\n    }\n    if (this.nmTokenMasterKey !\u003d null) {\n      builder.setNmTokenMasterKey(\n          convertToProtoFormat(this.nmTokenMasterKey));\n    }\n    if (this.containerQueuingLimit !\u003d null) {\n      builder.setContainerQueuingLimit(\n          convertToProtoFormat(this.containerQueuingLimit));\n    }\n    if (this.systemCredentials !\u003d null) {\n      addSystemCredentialsToProto();\n    }\n    if (this.containersToDecrease !\u003d null) {\n      addContainersToDecreaseToProto();\n    }\n    if (this.containersToSignal !\u003d null) {\n      addContainersToSignalToProto();\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "f0ac18d001d97914a9ee810b1fab56c5cebff830": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2888. Corrective mechanisms for rebalancing NM container queues. (asuresh)\n",
      "commitDate": "13/05/16 1:38 PM",
      "commitName": "f0ac18d001d97914a9ee810b1fab56c5cebff830",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "02/10/15 6:50 PM",
      "commitNameOld": "8f08532bde153811368e1b8336446fba4743f9d2",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 223.78,
      "commitsBetweenForRepo": 1475,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,32 @@\n   private void mergeLocalToBuilder() {\n     if (this.containersToCleanup !\u003d null) {\n       addContainersToCleanupToProto();\n     }\n     if (this.applicationsToCleanup !\u003d null) {\n       addApplicationsToCleanupToProto();\n     }\n     if (this.containersToBeRemovedFromNM !\u003d null) {\n       addContainersToBeRemovedFromNMToProto();\n     }\n     if (this.containerTokenMasterKey !\u003d null) {\n       builder.setContainerTokenMasterKey(\n           convertToProtoFormat(this.containerTokenMasterKey));\n     }\n     if (this.nmTokenMasterKey !\u003d null) {\n       builder.setNmTokenMasterKey(\n           convertToProtoFormat(this.nmTokenMasterKey));\n     }\n+    if (this.containerQueuingLimit !\u003d null) {\n+      builder.setContainerQueuingLimit(\n+          convertToProtoFormat(this.containerQueuingLimit));\n+    }\n     if (this.systemCredentials !\u003d null) {\n       addSystemCredentialsToProto();\n     }\n     if (this.containersToDecrease !\u003d null) {\n       addContainersToDecreaseToProto();\n     }\n     if (this.containersToSignal !\u003d null) {\n       addContainersToSignalToProto();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containersToCleanup !\u003d null) {\n      addContainersToCleanupToProto();\n    }\n    if (this.applicationsToCleanup !\u003d null) {\n      addApplicationsToCleanupToProto();\n    }\n    if (this.containersToBeRemovedFromNM !\u003d null) {\n      addContainersToBeRemovedFromNMToProto();\n    }\n    if (this.containerTokenMasterKey !\u003d null) {\n      builder.setContainerTokenMasterKey(\n          convertToProtoFormat(this.containerTokenMasterKey));\n    }\n    if (this.nmTokenMasterKey !\u003d null) {\n      builder.setNmTokenMasterKey(\n          convertToProtoFormat(this.nmTokenMasterKey));\n    }\n    if (this.containerQueuingLimit !\u003d null) {\n      builder.setContainerQueuingLimit(\n          convertToProtoFormat(this.containerQueuingLimit));\n    }\n    if (this.systemCredentials !\u003d null) {\n      addSystemCredentialsToProto();\n    }\n    if (this.containersToDecrease !\u003d null) {\n      addContainersToDecreaseToProto();\n    }\n    if (this.containersToSignal !\u003d null) {\n      addContainersToSignalToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "8f08532bde153811368e1b8336446fba4743f9d2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1897. CLI and core support for signal container functionality. Contributed by Ming Ma\n",
      "commitDate": "02/10/15 6:50 PM",
      "commitName": "8f08532bde153811368e1b8336446fba4743f9d2",
      "commitAuthor": "Xuan",
      "commitDateOld": "23/09/15 1:29 PM",
      "commitNameOld": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 9.22,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,28 @@\n   private void mergeLocalToBuilder() {\n     if (this.containersToCleanup !\u003d null) {\n       addContainersToCleanupToProto();\n     }\n     if (this.applicationsToCleanup !\u003d null) {\n       addApplicationsToCleanupToProto();\n     }\n     if (this.containersToBeRemovedFromNM !\u003d null) {\n       addContainersToBeRemovedFromNMToProto();\n     }\n     if (this.containerTokenMasterKey !\u003d null) {\n       builder.setContainerTokenMasterKey(\n           convertToProtoFormat(this.containerTokenMasterKey));\n     }\n     if (this.nmTokenMasterKey !\u003d null) {\n       builder.setNmTokenMasterKey(\n           convertToProtoFormat(this.nmTokenMasterKey));\n     }\n     if (this.systemCredentials !\u003d null) {\n       addSystemCredentialsToProto();\n     }\n     if (this.containersToDecrease !\u003d null) {\n       addContainersToDecreaseToProto();\n     }\n+    if (this.containersToSignal !\u003d null) {\n+      addContainersToSignalToProto();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containersToCleanup !\u003d null) {\n      addContainersToCleanupToProto();\n    }\n    if (this.applicationsToCleanup !\u003d null) {\n      addApplicationsToCleanupToProto();\n    }\n    if (this.containersToBeRemovedFromNM !\u003d null) {\n      addContainersToBeRemovedFromNMToProto();\n    }\n    if (this.containerTokenMasterKey !\u003d null) {\n      builder.setContainerTokenMasterKey(\n          convertToProtoFormat(this.containerTokenMasterKey));\n    }\n    if (this.nmTokenMasterKey !\u003d null) {\n      builder.setNmTokenMasterKey(\n          convertToProtoFormat(this.nmTokenMasterKey));\n    }\n    if (this.systemCredentials !\u003d null) {\n      addSystemCredentialsToProto();\n    }\n    if (this.containersToDecrease !\u003d null) {\n      addContainersToDecreaseToProto();\n    }\n    if (this.containersToSignal !\u003d null) {\n      addContainersToSignalToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "c3dc1af072574f5890a8d43e4d60526951b4b8bc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1644. RM-NM protocol changes and NodeStatusUpdater implementation to support container resizing. Contributed by Meng Ding\n",
      "commitDate": "23/09/15 1:29 PM",
      "commitName": "c3dc1af072574f5890a8d43e4d60526951b4b8bc",
      "commitAuthor": "Jian He",
      "commitDateOld": "30/03/15 12:05 PM",
      "commitNameOld": "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 177.06,
      "commitsBetweenForRepo": 1299,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n   private void mergeLocalToBuilder() {\n     if (this.containersToCleanup !\u003d null) {\n       addContainersToCleanupToProto();\n     }\n     if (this.applicationsToCleanup !\u003d null) {\n       addApplicationsToCleanupToProto();\n     }\n     if (this.containersToBeRemovedFromNM !\u003d null) {\n       addContainersToBeRemovedFromNMToProto();\n     }\n     if (this.containerTokenMasterKey !\u003d null) {\n       builder.setContainerTokenMasterKey(\n           convertToProtoFormat(this.containerTokenMasterKey));\n     }\n     if (this.nmTokenMasterKey !\u003d null) {\n       builder.setNmTokenMasterKey(\n           convertToProtoFormat(this.nmTokenMasterKey));\n     }\n     if (this.systemCredentials !\u003d null) {\n       addSystemCredentialsToProto();\n     }\n+    if (this.containersToDecrease !\u003d null) {\n+      addContainersToDecreaseToProto();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containersToCleanup !\u003d null) {\n      addContainersToCleanupToProto();\n    }\n    if (this.applicationsToCleanup !\u003d null) {\n      addApplicationsToCleanupToProto();\n    }\n    if (this.containersToBeRemovedFromNM !\u003d null) {\n      addContainersToBeRemovedFromNMToProto();\n    }\n    if (this.containerTokenMasterKey !\u003d null) {\n      builder.setContainerTokenMasterKey(\n          convertToProtoFormat(this.containerTokenMasterKey));\n    }\n    if (this.nmTokenMasterKey !\u003d null) {\n      builder.setNmTokenMasterKey(\n          convertToProtoFormat(this.nmTokenMasterKey));\n    }\n    if (this.systemCredentials !\u003d null) {\n      addSystemCredentialsToProto();\n    }\n    if (this.containersToDecrease !\u003d null) {\n      addContainersToDecreaseToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "a16d022ca4313a41425c8e97841c841a2d6f2f54": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2704. Changed ResourceManager to optionally obtain tokens itself for the sake of localization and log-aggregation for long-running services. Contributed by Jian He.\n",
      "commitDate": "27/10/14 3:49 PM",
      "commitName": "a16d022ca4313a41425c8e97841c841a2d6f2f54",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "01/10/14 3:38 PM",
      "commitNameOld": "52bbe0f11bc8e97df78a1ab9b63f4eff65fd7a76",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 26.01,
      "commitsBetweenForRepo": 213,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,22 @@\n   private void mergeLocalToBuilder() {\n     if (this.containersToCleanup !\u003d null) {\n       addContainersToCleanupToProto();\n     }\n     if (this.applicationsToCleanup !\u003d null) {\n       addApplicationsToCleanupToProto();\n     }\n     if (this.containersToBeRemovedFromNM !\u003d null) {\n       addContainersToBeRemovedFromNMToProto();\n     }\n     if (this.containerTokenMasterKey !\u003d null) {\n       builder.setContainerTokenMasterKey(\n           convertToProtoFormat(this.containerTokenMasterKey));\n     }\n     if (this.nmTokenMasterKey !\u003d null) {\n       builder.setNmTokenMasterKey(\n           convertToProtoFormat(this.nmTokenMasterKey));\n     }\n+    if (this.systemCredentials !\u003d null) {\n+      addSystemCredentialsToProto();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containersToCleanup !\u003d null) {\n      addContainersToCleanupToProto();\n    }\n    if (this.applicationsToCleanup !\u003d null) {\n      addApplicationsToCleanupToProto();\n    }\n    if (this.containersToBeRemovedFromNM !\u003d null) {\n      addContainersToBeRemovedFromNMToProto();\n    }\n    if (this.containerTokenMasterKey !\u003d null) {\n      builder.setContainerTokenMasterKey(\n          convertToProtoFormat(this.containerTokenMasterKey));\n    }\n    if (this.nmTokenMasterKey !\u003d null) {\n      builder.setNmTokenMasterKey(\n          convertToProtoFormat(this.nmTokenMasterKey));\n    }\n    if (this.systemCredentials !\u003d null) {\n      addSystemCredentialsToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "52bbe0f11bc8e97df78a1ab9b63f4eff65fd7a76": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2630. Prevented previous AM container status from being acquired by the current restarted AM. Contributed by Jian He.\n",
      "commitDate": "01/10/14 3:38 PM",
      "commitName": "52bbe0f11bc8e97df78a1ab9b63f4eff65fd7a76",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "22/09/14 10:30 AM",
      "commitNameOld": "0a641496c706fc175e7bf66d69ebf71c7d078e84",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 9.21,
      "commitsBetweenForRepo": 114,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   private void mergeLocalToBuilder() {\n     if (this.containersToCleanup !\u003d null) {\n       addContainersToCleanupToProto();\n     }\n     if (this.applicationsToCleanup !\u003d null) {\n       addApplicationsToCleanupToProto();\n     }\n-    if (this.finishedContainersPulledByAM !\u003d null) {\n-      addFinishedContainersPulledByAMToProto();\n+    if (this.containersToBeRemovedFromNM !\u003d null) {\n+      addContainersToBeRemovedFromNMToProto();\n     }\n     if (this.containerTokenMasterKey !\u003d null) {\n       builder.setContainerTokenMasterKey(\n           convertToProtoFormat(this.containerTokenMasterKey));\n     }\n     if (this.nmTokenMasterKey !\u003d null) {\n       builder.setNmTokenMasterKey(\n           convertToProtoFormat(this.nmTokenMasterKey));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containersToCleanup !\u003d null) {\n      addContainersToCleanupToProto();\n    }\n    if (this.applicationsToCleanup !\u003d null) {\n      addApplicationsToCleanupToProto();\n    }\n    if (this.containersToBeRemovedFromNM !\u003d null) {\n      addContainersToBeRemovedFromNMToProto();\n    }\n    if (this.containerTokenMasterKey !\u003d null) {\n      builder.setContainerTokenMasterKey(\n          convertToProtoFormat(this.containerTokenMasterKey));\n    }\n    if (this.nmTokenMasterKey !\u003d null) {\n      builder.setNmTokenMasterKey(\n          convertToProtoFormat(this.nmTokenMasterKey));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "0a641496c706fc175e7bf66d69ebf71c7d078e84": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1372. Ensure all completed containers are reported to the AMs across RM restart. Contributed by Anubhav Dhoot\n",
      "commitDate": "22/09/14 10:30 AM",
      "commitName": "0a641496c706fc175e7bf66d69ebf71c7d078e84",
      "commitAuthor": "Jian He",
      "commitDateOld": "13/06/13 5:06 PM",
      "commitNameOld": "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 465.73,
      "commitsBetweenForRepo": 3298,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,19 @@\n   private void mergeLocalToBuilder() {\n     if (this.containersToCleanup !\u003d null) {\n       addContainersToCleanupToProto();\n     }\n     if (this.applicationsToCleanup !\u003d null) {\n       addApplicationsToCleanupToProto();\n     }\n+    if (this.finishedContainersPulledByAM !\u003d null) {\n+      addFinishedContainersPulledByAMToProto();\n+    }\n     if (this.containerTokenMasterKey !\u003d null) {\n       builder.setContainerTokenMasterKey(\n           convertToProtoFormat(this.containerTokenMasterKey));\n     }\n     if (this.nmTokenMasterKey !\u003d null) {\n       builder.setNmTokenMasterKey(\n           convertToProtoFormat(this.nmTokenMasterKey));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containersToCleanup !\u003d null) {\n      addContainersToCleanupToProto();\n    }\n    if (this.applicationsToCleanup !\u003d null) {\n      addApplicationsToCleanupToProto();\n    }\n    if (this.finishedContainersPulledByAM !\u003d null) {\n      addFinishedContainersPulledByAMToProto();\n    }\n    if (this.containerTokenMasterKey !\u003d null) {\n      builder.setContainerTokenMasterKey(\n          convertToProtoFormat(this.containerTokenMasterKey));\n    }\n    if (this.nmTokenMasterKey !\u003d null) {\n      builder.setNmTokenMasterKey(\n          convertToProtoFormat(this.nmTokenMasterKey));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-692. Creating NMToken master key on RM and sharing it with NM as a part of RM-NM heartbeat. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492907 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 5:06 PM",
      "commitName": "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/06/13 3:43 PM",
      "commitNameOld": "66de4ccf60107b83dd172b118b5a49969e61083e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 9.06,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,16 @@\n   private void mergeLocalToBuilder() {\n     if (this.containersToCleanup !\u003d null) {\n       addContainersToCleanupToProto();\n     }\n     if (this.applicationsToCleanup !\u003d null) {\n       addApplicationsToCleanupToProto();\n     }\n-    if (this.masterKey !\u003d null) {\n-      builder.setMasterKey(convertToProtoFormat(this.masterKey));\n+    if (this.containerTokenMasterKey !\u003d null) {\n+      builder.setContainerTokenMasterKey(\n+          convertToProtoFormat(this.containerTokenMasterKey));\n+    }\n+    if (this.nmTokenMasterKey !\u003d null) {\n+      builder.setNmTokenMasterKey(\n+          convertToProtoFormat(this.nmTokenMasterKey));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containersToCleanup !\u003d null) {\n      addContainersToCleanupToProto();\n    }\n    if (this.applicationsToCleanup !\u003d null) {\n      addApplicationsToCleanupToProto();\n    }\n    if (this.containerTokenMasterKey !\u003d null) {\n      builder.setContainerTokenMasterKey(\n          convertToProtoFormat(this.containerTokenMasterKey));\n    }\n    if (this.nmTokenMasterKey !\u003d null) {\n      builder.setNmTokenMasterKey(\n          convertToProtoFormat(this.nmTokenMasterKey));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "18e08a8f511652ed9f4ba386bb4f0cf8339e2729": {
      "type": "Ybodychange",
      "commitMessage": "YARN-439. Flatten NodeHeartbeatResponse. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1460811 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/03/13 11:28 AM",
      "commitName": "18e08a8f511652ed9f4ba386bb4f0cf8339e2729",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 229.55,
      "commitsBetweenForRepo": 1173,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,11 @@\n   private void mergeLocalToBuilder() {\n-    if (this.heartbeatResponse !\u003d null) {\n-      builder.setHeartbeatResponse(convertToProtoFormat(this.heartbeatResponse));\n+    if (this.containersToCleanup !\u003d null) {\n+      addContainersToCleanupToProto();\n+    }\n+    if (this.applicationsToCleanup !\u003d null) {\n+      addApplicationsToCleanupToProto();\n+    }\n+    if (this.masterKey !\u003d null) {\n+      builder.setMasterKey(convertToProtoFormat(this.masterKey));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containersToCleanup !\u003d null) {\n      addContainersToCleanupToProto();\n    }\n    if (this.applicationsToCleanup !\u003d null) {\n      addApplicationsToCleanupToProto();\n    }\n    if (this.masterKey !\u003d null) {\n      builder.setMasterKey(convertToProtoFormat(this.masterKey));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.heartbeatResponse !\u003d null) {\n      builder.setHeartbeatResponse(convertToProtoFormat(this.heartbeatResponse));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.heartbeatResponse !\u003d null) {\n      builder.setHeartbeatResponse(convertToProtoFormat(this.heartbeatResponse));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,5 @@\n+  private void mergeLocalToBuilder() {\n+    if (this.heartbeatResponse !\u003d null) {\n+      builder.setHeartbeatResponse(convertToProtoFormat(this.heartbeatResponse));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.heartbeatResponse !\u003d null) {\n      builder.setHeartbeatResponse(convertToProtoFormat(this.heartbeatResponse));\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java"
    }
  }
}