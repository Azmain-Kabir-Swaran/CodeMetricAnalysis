{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSEditLog.java",
  "functionName": "logEdit",
  "functionId": "logEdit___op-FSEditLogOp(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
  "functionStartLine": 456,
  "functionEndLine": 476,
  "numCommitsSeen": 151,
  "timeTaken": 7459,
  "changeHistory": [
    "2151716832ad14932dd65b1a4e47e64d8d6cd767",
    "5fddc5177ddad07a735d49c15a63cfc5f74d0891",
    "9e81be01144d5cf520313608e85cdc1d8063aa15",
    "2481474bd9c50a23e4fd2eea67ac2dea11ca1f58",
    "f87a4b40bc99e76602a75906df31747cfdbff78a",
    "1ae5b5e338ef383c5642e2f04b927871c7b184f6",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
    "438c32aaf9fb0c63f55044cf5ef1b2e0adcf7fea",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "2151716832ad14932dd65b1a4e47e64d8d6cd767": "Ybodychange",
    "5fddc5177ddad07a735d49c15a63cfc5f74d0891": "Ybodychange",
    "9e81be01144d5cf520313608e85cdc1d8063aa15": "Ybodychange",
    "2481474bd9c50a23e4fd2eea67ac2dea11ca1f58": "Ybodychange",
    "f87a4b40bc99e76602a75906df31747cfdbff78a": "Ybodychange",
    "1ae5b5e338ef383c5642e2f04b927871c7b184f6": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": "Ymultichange(Ybodychange,Yparametermetachange)",
    "438c32aaf9fb0c63f55044cf5ef1b2e0adcf7fea": "Ymultichange(Yparameterchange,Ybodychange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2151716832ad14932dd65b1a4e47e64d8d6cd767": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7964. Add support for async edit logging. Contributed by Daryn Sharp.\n",
      "commitDate": "29/02/16 3:34 PM",
      "commitName": "2151716832ad14932dd65b1a4e47e64d8d6cd767",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "27/01/16 4:34 PM",
      "commitNameOld": "ec25c7f9c7e60c077d8c4143253c20445fcdaecf",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 32.96,
      "commitsBetweenForRepo": 229,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,21 @@\n   void logEdit(final FSEditLogOp op) {\n     boolean needsSync \u003d false;\n     synchronized (this) {\n       assert isOpenForWrite() :\n         \"bad state: \" + state;\n       \n       // wait if an automatic sync is scheduled\n       waitIfAutoSyncScheduled();\n-      \n-      long start \u003d beginTransaction();\n-      op.setTransactionId(txid);\n \n-      try {\n-        editLogStream.write(op);\n-      } catch (IOException ex) {\n-        // All journals failed, it is handled in logSync.\n-      } finally {\n-        op.reset();\n-      }\n-\n-      endTransaction(start);\n-      \n       // check if it is time to schedule an automatic sync\n-      needsSync \u003d shouldForceSync();\n+      needsSync \u003d doEditTransaction(op);\n       if (needsSync) {\n         isAutoSyncScheduled \u003d true;\n       }\n     }\n-    \n+\n     // Sync the log if an automatic sync is required.\n     if (needsSync) {\n       logSync();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void logEdit(final FSEditLogOp op) {\n    boolean needsSync \u003d false;\n    synchronized (this) {\n      assert isOpenForWrite() :\n        \"bad state: \" + state;\n      \n      // wait if an automatic sync is scheduled\n      waitIfAutoSyncScheduled();\n\n      // check if it is time to schedule an automatic sync\n      needsSync \u003d doEditTransaction(op);\n      if (needsSync) {\n        isAutoSyncScheduled \u003d true;\n      }\n    }\n\n    // Sync the log if an automatic sync is required.\n    if (needsSync) {\n      logSync();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "5fddc5177ddad07a735d49c15a63cfc5f74d0891": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8709. Clarify automatic sync in FSEditLog#logEdit.\n",
      "commitDate": "02/07/15 10:26 AM",
      "commitName": "5fddc5177ddad07a735d49c15a63cfc5f74d0891",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "06/06/15 9:43 AM",
      "commitNameOld": "71de367c5e80ea76d1e8d21f0216cd6b879dcee5",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 26.03,
      "commitsBetweenForRepo": 178,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,34 @@\n   void logEdit(final FSEditLogOp op) {\n+    boolean needsSync \u003d false;\n     synchronized (this) {\n       assert isOpenForWrite() :\n         \"bad state: \" + state;\n       \n       // wait if an automatic sync is scheduled\n       waitIfAutoSyncScheduled();\n       \n       long start \u003d beginTransaction();\n       op.setTransactionId(txid);\n \n       try {\n         editLogStream.write(op);\n       } catch (IOException ex) {\n         // All journals failed, it is handled in logSync.\n       } finally {\n         op.reset();\n       }\n \n       endTransaction(start);\n       \n       // check if it is time to schedule an automatic sync\n-      if (!shouldForceSync()) {\n-        return;\n+      needsSync \u003d shouldForceSync();\n+      if (needsSync) {\n+        isAutoSyncScheduled \u003d true;\n       }\n-      isAutoSyncScheduled \u003d true;\n     }\n     \n-    // sync buffered edit log entries to persistent store\n-    logSync();\n+    // Sync the log if an automatic sync is required.\n+    if (needsSync) {\n+      logSync();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void logEdit(final FSEditLogOp op) {\n    boolean needsSync \u003d false;\n    synchronized (this) {\n      assert isOpenForWrite() :\n        \"bad state: \" + state;\n      \n      // wait if an automatic sync is scheduled\n      waitIfAutoSyncScheduled();\n      \n      long start \u003d beginTransaction();\n      op.setTransactionId(txid);\n\n      try {\n        editLogStream.write(op);\n      } catch (IOException ex) {\n        // All journals failed, it is handled in logSync.\n      } finally {\n        op.reset();\n      }\n\n      endTransaction(start);\n      \n      // check if it is time to schedule an automatic sync\n      needsSync \u003d shouldForceSync();\n      if (needsSync) {\n        isAutoSyncScheduled \u003d true;\n      }\n    }\n    \n    // Sync the log if an automatic sync is required.\n    if (needsSync) {\n      logSync();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "9e81be01144d5cf520313608e85cdc1d8063aa15": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7398. Reset cached thread-local FSEditLogOp\u0027s on every FSEditLog#logEdit. Contributed by Gera Shegalov.\n",
      "commitDate": "18/11/14 4:56 PM",
      "commitName": "9e81be01144d5cf520313608e85cdc1d8063aa15",
      "commitAuthor": "cnauroth",
      "commitDateOld": "13/11/14 12:34 PM",
      "commitNameOld": "b0a41de68c5b08f534ca231293de053c0b0cbd5d",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 5.18,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,31 @@\n   void logEdit(final FSEditLogOp op) {\n     synchronized (this) {\n       assert isOpenForWrite() :\n         \"bad state: \" + state;\n       \n       // wait if an automatic sync is scheduled\n       waitIfAutoSyncScheduled();\n       \n       long start \u003d beginTransaction();\n       op.setTransactionId(txid);\n \n       try {\n         editLogStream.write(op);\n       } catch (IOException ex) {\n         // All journals failed, it is handled in logSync.\n+      } finally {\n+        op.reset();\n       }\n \n       endTransaction(start);\n       \n       // check if it is time to schedule an automatic sync\n       if (!shouldForceSync()) {\n         return;\n       }\n       isAutoSyncScheduled \u003d true;\n     }\n     \n     // sync buffered edit log entries to persistent store\n     logSync();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void logEdit(final FSEditLogOp op) {\n    synchronized (this) {\n      assert isOpenForWrite() :\n        \"bad state: \" + state;\n      \n      // wait if an automatic sync is scheduled\n      waitIfAutoSyncScheduled();\n      \n      long start \u003d beginTransaction();\n      op.setTransactionId(txid);\n\n      try {\n        editLogStream.write(op);\n      } catch (IOException ex) {\n        // All journals failed, it is handled in logSync.\n      } finally {\n        op.reset();\n      }\n\n      endTransaction(start);\n      \n      // check if it is time to schedule an automatic sync\n      if (!shouldForceSync()) {\n        return;\n      }\n      isAutoSyncScheduled \u003d true;\n    }\n    \n    // sync buffered edit log entries to persistent store\n    logSync();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "2481474bd9c50a23e4fd2eea67ac2dea11ca1f58": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2634. Standby needs to ingest latest edit logs before transitioning to active. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1212187 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/12/11 3:55 PM",
      "commitName": "2481474bd9c50a23e4fd2eea67ac2dea11ca1f58",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "07/12/11 6:57 PM",
      "commitNameOld": "d9ea5bb48940c6ee2b6688a527ad74bccce6ed18",
      "commitAuthorOld": "",
      "daysBetweenCommits": 0.87,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   void logEdit(final FSEditLogOp op) {\n     synchronized (this) {\n-      assert state !\u003d State.CLOSED \u0026\u0026 state !\u003d State.OPEN_FOR_READING :\n+      assert isOpenForWrite() :\n         \"bad state: \" + state;\n       \n       // wait if an automatic sync is scheduled\n       waitIfAutoSyncScheduled();\n       \n       long start \u003d beginTransaction();\n       op.setTransactionId(txid);\n \n       try {\n         editLogStream.write(op);\n       } catch (IOException ex) {\n         // All journals failed, it is handled in logSync.\n       }\n \n       endTransaction(start);\n       \n       // check if it is time to schedule an automatic sync\n       if (!shouldForceSync()) {\n         return;\n       }\n       isAutoSyncScheduled \u003d true;\n     }\n     \n     // sync buffered edit log entries to persistent store\n     logSync();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void logEdit(final FSEditLogOp op) {\n    synchronized (this) {\n      assert isOpenForWrite() :\n        \"bad state: \" + state;\n      \n      // wait if an automatic sync is scheduled\n      waitIfAutoSyncScheduled();\n      \n      long start \u003d beginTransaction();\n      op.setTransactionId(txid);\n\n      try {\n        editLogStream.write(op);\n      } catch (IOException ex) {\n        // All journals failed, it is handled in logSync.\n      }\n\n      endTransaction(start);\n      \n      // check if it is time to schedule an automatic sync\n      if (!shouldForceSync()) {\n        return;\n      }\n      isAutoSyncScheduled \u003d true;\n    }\n    \n    // sync buffered edit log entries to persistent store\n    logSync();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "f87a4b40bc99e76602a75906df31747cfdbff78a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-1975. Support for sharing the namenode state from active to standby. Contributed by Jitendra Nath Pandey, Aaron T Myers, and Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208813 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/11 1:46 PM",
      "commitName": "f87a4b40bc99e76602a75906df31747cfdbff78a",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "19/11/11 7:58 PM",
      "commitNameOld": "b2313021fd03d9803a04b120d97bfd91fcbd4d36",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 10.74,
      "commitsBetweenForRepo": 68,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,29 @@\n   void logEdit(final FSEditLogOp op) {\n     synchronized (this) {\n-      assert state !\u003d State.CLOSED;\n+      assert state !\u003d State.CLOSED \u0026\u0026 state !\u003d State.OPEN_FOR_READING :\n+        \"bad state: \" + state;\n       \n       // wait if an automatic sync is scheduled\n       waitIfAutoSyncScheduled();\n       \n       long start \u003d beginTransaction();\n       op.setTransactionId(txid);\n \n       try {\n         editLogStream.write(op);\n       } catch (IOException ex) {\n         // All journals failed, it is handled in logSync.\n       }\n \n       endTransaction(start);\n       \n       // check if it is time to schedule an automatic sync\n       if (!shouldForceSync()) {\n         return;\n       }\n       isAutoSyncScheduled \u003d true;\n     }\n     \n     // sync buffered edit log entries to persistent store\n     logSync();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void logEdit(final FSEditLogOp op) {\n    synchronized (this) {\n      assert state !\u003d State.CLOSED \u0026\u0026 state !\u003d State.OPEN_FOR_READING :\n        \"bad state: \" + state;\n      \n      // wait if an automatic sync is scheduled\n      waitIfAutoSyncScheduled();\n      \n      long start \u003d beginTransaction();\n      op.setTransactionId(txid);\n\n      try {\n        editLogStream.write(op);\n      } catch (IOException ex) {\n        // All journals failed, it is handled in logSync.\n      }\n\n      endTransaction(start);\n      \n      // check if it is time to schedule an automatic sync\n      if (!shouldForceSync()) {\n        return;\n      }\n      isAutoSyncScheduled \u003d true;\n    }\n    \n    // sync buffered edit log entries to persistent store\n    logSync();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "1ae5b5e338ef383c5642e2f04b927871c7b184f6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2158. Add JournalSet to manage the set of journals.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177473 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/11 6:14 PM",
      "commitName": "1ae5b5e338ef383c5642e2f04b927871c7b184f6",
      "commitAuthor": "Jitendra Nath Pandey",
      "commitDateOld": "06/09/11 1:27 PM",
      "commitNameOld": "bdc3720d5b67a1c8fc2dfb29be16e4155c0e7f15",
      "commitAuthorOld": "Jitendra Nath Pandey",
      "daysBetweenCommits": 23.2,
      "commitsBetweenForRepo": 169,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,28 @@\n   void logEdit(final FSEditLogOp op) {\n     synchronized (this) {\n       assert state !\u003d State.CLOSED;\n       \n       // wait if an automatic sync is scheduled\n       waitIfAutoSyncScheduled();\n       \n-      if (journals.isEmpty()) {\n-        throw new java.lang.IllegalStateException(NO_JOURNAL_STREAMS_WARNING);\n-      }\n-      \n       long start \u003d beginTransaction();\n       op.setTransactionId(txid);\n \n-      mapJournalsAndReportErrors(new JournalClosure() {\n-        @Override \n-        public void apply(JournalAndStream jas) throws IOException {\n-          if (!jas.isActive()) return;\n-          jas.stream.write(op);\n-        }\n-      }, \"logging edit\");\n+      try {\n+        editLogStream.write(op);\n+      } catch (IOException ex) {\n+        // All journals failed, it is handled in logSync.\n+      }\n \n       endTransaction(start);\n       \n       // check if it is time to schedule an automatic sync\n       if (!shouldForceSync()) {\n         return;\n       }\n       isAutoSyncScheduled \u003d true;\n     }\n     \n     // sync buffered edit log entries to persistent store\n     logSync();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void logEdit(final FSEditLogOp op) {\n    synchronized (this) {\n      assert state !\u003d State.CLOSED;\n      \n      // wait if an automatic sync is scheduled\n      waitIfAutoSyncScheduled();\n      \n      long start \u003d beginTransaction();\n      op.setTransactionId(txid);\n\n      try {\n        editLogStream.write(op);\n      } catch (IOException ex) {\n        // All journals failed, it is handled in logSync.\n      }\n\n      endTransaction(start);\n      \n      // check if it is time to schedule an automatic sync\n      if (!shouldForceSync()) {\n        return;\n      }\n      isAutoSyncScheduled \u003d true;\n    }\n    \n    // sync buffered edit log entries to persistent store\n    logSync();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void logEdit(final FSEditLogOp op) {\n    synchronized (this) {\n      assert state !\u003d State.CLOSED;\n      \n      // wait if an automatic sync is scheduled\n      waitIfAutoSyncScheduled();\n      \n      if (journals.isEmpty()) {\n        throw new java.lang.IllegalStateException(NO_JOURNAL_STREAMS_WARNING);\n      }\n      \n      long start \u003d beginTransaction();\n      op.setTransactionId(txid);\n\n      mapJournalsAndReportErrors(new JournalClosure() {\n        @Override \n        public void apply(JournalAndStream jas) throws IOException {\n          if (!jas.isActive()) return;\n          jas.stream.write(op);\n        }\n      }, \"logging edit\");\n\n      endTransaction(start);\n      \n      // check if it is time to schedule an automatic sync\n      if (!shouldForceSync()) {\n        return;\n      }\n      isAutoSyncScheduled \u003d true;\n    }\n    \n    // sync buffered edit log entries to persistent store\n    logSync();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void logEdit(final FSEditLogOp op) {\n    synchronized (this) {\n      assert state !\u003d State.CLOSED;\n      \n      // wait if an automatic sync is scheduled\n      waitIfAutoSyncScheduled();\n      \n      if (journals.isEmpty()) {\n        throw new java.lang.IllegalStateException(NO_JOURNAL_STREAMS_WARNING);\n      }\n      \n      long start \u003d beginTransaction();\n      op.setTransactionId(txid);\n\n      mapJournalsAndReportErrors(new JournalClosure() {\n        @Override \n        public void apply(JournalAndStream jas) throws IOException {\n          if (!jas.isActive()) return;\n          jas.stream.write(op);\n        }\n      }, \"logging edit\");\n\n      endTransaction(start);\n      \n      // check if it is time to schedule an automatic sync\n      if (!shouldForceSync()) {\n        return;\n      }\n      isAutoSyncScheduled \u003d true;\n    }\n    \n    // sync buffered edit log entries to persistent store\n    logSync();\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java"
      }
    },
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 9:28 AM",
      "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/11 9:28 AM",
          "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "26/07/11 1:46 PM",
          "commitNameOld": "438c32aaf9fb0c63f55044cf5ef1b2e0adcf7fea",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 2.82,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,34 @@\n-  void logEdit(FSEditLogOp op) {\n+  void logEdit(final FSEditLogOp op) {\n     synchronized (this) {\n+      assert state !\u003d State.CLOSED;\n+      \n       // wait if an automatic sync is scheduled\n       waitIfAutoSyncScheduled();\n       \n-      if(getNumEditStreams() \u003d\u003d 0)\n+      if (journals.isEmpty()) {\n         throw new java.lang.IllegalStateException(NO_JOURNAL_STREAMS_WARNING);\n-      ArrayList\u003cEditLogOutputStream\u003e errorStreams \u003d null;\n-      long start \u003d now();\n-      for(EditLogOutputStream eStream : editStreams) {\n-        if(!eStream.isOperationSupported(op.opCode.getOpCode()))\n-          continue;\n-        try {\n-          eStream.write(op);\n-        } catch (IOException ie) {\n-          LOG.error(\"logEdit: removing \"+ eStream.getName(), ie);\n-          if(errorStreams \u003d\u003d null)\n-            errorStreams \u003d new ArrayList\u003cEditLogOutputStream\u003e(1);\n-          errorStreams.add(eStream);\n-        }\n       }\n-      disableAndReportErrorOnStreams(errorStreams);\n-      recordTransaction(start);\n+      \n+      long start \u003d beginTransaction();\n+      op.setTransactionId(txid);\n+\n+      mapJournalsAndReportErrors(new JournalClosure() {\n+        @Override \n+        public void apply(JournalAndStream jas) throws IOException {\n+          if (!jas.isActive()) return;\n+          jas.stream.write(op);\n+        }\n+      }, \"logging edit\");\n+\n+      endTransaction(start);\n       \n       // check if it is time to schedule an automatic sync\n       if (!shouldForceSync()) {\n         return;\n       }\n       isAutoSyncScheduled \u003d true;\n     }\n     \n     // sync buffered edit log entries to persistent store\n     logSync();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void logEdit(final FSEditLogOp op) {\n    synchronized (this) {\n      assert state !\u003d State.CLOSED;\n      \n      // wait if an automatic sync is scheduled\n      waitIfAutoSyncScheduled();\n      \n      if (journals.isEmpty()) {\n        throw new java.lang.IllegalStateException(NO_JOURNAL_STREAMS_WARNING);\n      }\n      \n      long start \u003d beginTransaction();\n      op.setTransactionId(txid);\n\n      mapJournalsAndReportErrors(new JournalClosure() {\n        @Override \n        public void apply(JournalAndStream jas) throws IOException {\n          if (!jas.isActive()) return;\n          jas.stream.write(op);\n        }\n      }, \"logging edit\");\n\n      endTransaction(start);\n      \n      // check if it is time to schedule an automatic sync\n      if (!shouldForceSync()) {\n        return;\n      }\n      isAutoSyncScheduled \u003d true;\n    }\n    \n    // sync buffered edit log entries to persistent store\n    logSync();\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/11 9:28 AM",
          "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "26/07/11 1:46 PM",
          "commitNameOld": "438c32aaf9fb0c63f55044cf5ef1b2e0adcf7fea",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 2.82,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,34 @@\n-  void logEdit(FSEditLogOp op) {\n+  void logEdit(final FSEditLogOp op) {\n     synchronized (this) {\n+      assert state !\u003d State.CLOSED;\n+      \n       // wait if an automatic sync is scheduled\n       waitIfAutoSyncScheduled();\n       \n-      if(getNumEditStreams() \u003d\u003d 0)\n+      if (journals.isEmpty()) {\n         throw new java.lang.IllegalStateException(NO_JOURNAL_STREAMS_WARNING);\n-      ArrayList\u003cEditLogOutputStream\u003e errorStreams \u003d null;\n-      long start \u003d now();\n-      for(EditLogOutputStream eStream : editStreams) {\n-        if(!eStream.isOperationSupported(op.opCode.getOpCode()))\n-          continue;\n-        try {\n-          eStream.write(op);\n-        } catch (IOException ie) {\n-          LOG.error(\"logEdit: removing \"+ eStream.getName(), ie);\n-          if(errorStreams \u003d\u003d null)\n-            errorStreams \u003d new ArrayList\u003cEditLogOutputStream\u003e(1);\n-          errorStreams.add(eStream);\n-        }\n       }\n-      disableAndReportErrorOnStreams(errorStreams);\n-      recordTransaction(start);\n+      \n+      long start \u003d beginTransaction();\n+      op.setTransactionId(txid);\n+\n+      mapJournalsAndReportErrors(new JournalClosure() {\n+        @Override \n+        public void apply(JournalAndStream jas) throws IOException {\n+          if (!jas.isActive()) return;\n+          jas.stream.write(op);\n+        }\n+      }, \"logging edit\");\n+\n+      endTransaction(start);\n       \n       // check if it is time to schedule an automatic sync\n       if (!shouldForceSync()) {\n         return;\n       }\n       isAutoSyncScheduled \u003d true;\n     }\n     \n     // sync buffered edit log entries to persistent store\n     logSync();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void logEdit(final FSEditLogOp op) {\n    synchronized (this) {\n      assert state !\u003d State.CLOSED;\n      \n      // wait if an automatic sync is scheduled\n      waitIfAutoSyncScheduled();\n      \n      if (journals.isEmpty()) {\n        throw new java.lang.IllegalStateException(NO_JOURNAL_STREAMS_WARNING);\n      }\n      \n      long start \u003d beginTransaction();\n      op.setTransactionId(txid);\n\n      mapJournalsAndReportErrors(new JournalClosure() {\n        @Override \n        public void apply(JournalAndStream jas) throws IOException {\n          if (!jas.isActive()) return;\n          jas.stream.write(op);\n        }\n      }, \"logging edit\");\n\n      endTransaction(start);\n      \n      // check if it is time to schedule an automatic sync\n      if (!shouldForceSync()) {\n        return;\n      }\n      isAutoSyncScheduled \u003d true;\n    }\n    \n    // sync buffered edit log entries to persistent store\n    logSync();\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
          "extendedDetails": {
            "oldValue": "[op-FSEditLogOp]",
            "newValue": "[op-FSEditLogOp(modifiers-final)]"
          }
        }
      ]
    },
    "438c32aaf9fb0c63f55044cf5ef1b2e0adcf7fea": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-2149. Move EditLogOp serialization formats into FsEditLogOp implementations. Contributed by Ivan Kelly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1151238 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/07/11 1:46 PM",
      "commitName": "438c32aaf9fb0c63f55044cf5ef1b2e0adcf7fea",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-2149. Move EditLogOp serialization formats into FsEditLogOp implementations. Contributed by Ivan Kelly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1151238 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "26/07/11 1:46 PM",
          "commitName": "438c32aaf9fb0c63f55044cf5ef1b2e0adcf7fea",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "30/06/11 11:38 AM",
          "commitNameOld": "5147e283ad9757ac2cabaf282ae5cbba76826ede",
          "commitAuthorOld": "Matthew Foley",
          "daysBetweenCommits": 26.09,
          "commitsBetweenForRepo": 87,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,34 @@\n-  void logEdit(FSEditLogOpCodes opCode, Writable ... writables) {\n+  void logEdit(FSEditLogOp op) {\n     synchronized (this) {\n       // wait if an automatic sync is scheduled\n       waitIfAutoSyncScheduled();\n       \n       if(getNumEditStreams() \u003d\u003d 0)\n         throw new java.lang.IllegalStateException(NO_JOURNAL_STREAMS_WARNING);\n       ArrayList\u003cEditLogOutputStream\u003e errorStreams \u003d null;\n       long start \u003d now();\n       for(EditLogOutputStream eStream : editStreams) {\n-        if(!eStream.isOperationSupported(opCode.getOpCode()))\n+        if(!eStream.isOperationSupported(op.opCode.getOpCode()))\n           continue;\n         try {\n-          eStream.write(opCode.getOpCode(), writables);\n+          eStream.write(op);\n         } catch (IOException ie) {\n           LOG.error(\"logEdit: removing \"+ eStream.getName(), ie);\n           if(errorStreams \u003d\u003d null)\n             errorStreams \u003d new ArrayList\u003cEditLogOutputStream\u003e(1);\n           errorStreams.add(eStream);\n         }\n       }\n       disableAndReportErrorOnStreams(errorStreams);\n       recordTransaction(start);\n       \n       // check if it is time to schedule an automatic sync\n       if (!shouldForceSync()) {\n         return;\n       }\n       isAutoSyncScheduled \u003d true;\n     }\n     \n     // sync buffered edit log entries to persistent store\n     logSync();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void logEdit(FSEditLogOp op) {\n    synchronized (this) {\n      // wait if an automatic sync is scheduled\n      waitIfAutoSyncScheduled();\n      \n      if(getNumEditStreams() \u003d\u003d 0)\n        throw new java.lang.IllegalStateException(NO_JOURNAL_STREAMS_WARNING);\n      ArrayList\u003cEditLogOutputStream\u003e errorStreams \u003d null;\n      long start \u003d now();\n      for(EditLogOutputStream eStream : editStreams) {\n        if(!eStream.isOperationSupported(op.opCode.getOpCode()))\n          continue;\n        try {\n          eStream.write(op);\n        } catch (IOException ie) {\n          LOG.error(\"logEdit: removing \"+ eStream.getName(), ie);\n          if(errorStreams \u003d\u003d null)\n            errorStreams \u003d new ArrayList\u003cEditLogOutputStream\u003e(1);\n          errorStreams.add(eStream);\n        }\n      }\n      disableAndReportErrorOnStreams(errorStreams);\n      recordTransaction(start);\n      \n      // check if it is time to schedule an automatic sync\n      if (!shouldForceSync()) {\n        return;\n      }\n      isAutoSyncScheduled \u003d true;\n    }\n    \n    // sync buffered edit log entries to persistent store\n    logSync();\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
          "extendedDetails": {
            "oldValue": "[opCode-FSEditLogOpCodes, writables-Writable]",
            "newValue": "[op-FSEditLogOp]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2149. Move EditLogOp serialization formats into FsEditLogOp implementations. Contributed by Ivan Kelly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1151238 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "26/07/11 1:46 PM",
          "commitName": "438c32aaf9fb0c63f55044cf5ef1b2e0adcf7fea",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "30/06/11 11:38 AM",
          "commitNameOld": "5147e283ad9757ac2cabaf282ae5cbba76826ede",
          "commitAuthorOld": "Matthew Foley",
          "daysBetweenCommits": 26.09,
          "commitsBetweenForRepo": 87,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,34 @@\n-  void logEdit(FSEditLogOpCodes opCode, Writable ... writables) {\n+  void logEdit(FSEditLogOp op) {\n     synchronized (this) {\n       // wait if an automatic sync is scheduled\n       waitIfAutoSyncScheduled();\n       \n       if(getNumEditStreams() \u003d\u003d 0)\n         throw new java.lang.IllegalStateException(NO_JOURNAL_STREAMS_WARNING);\n       ArrayList\u003cEditLogOutputStream\u003e errorStreams \u003d null;\n       long start \u003d now();\n       for(EditLogOutputStream eStream : editStreams) {\n-        if(!eStream.isOperationSupported(opCode.getOpCode()))\n+        if(!eStream.isOperationSupported(op.opCode.getOpCode()))\n           continue;\n         try {\n-          eStream.write(opCode.getOpCode(), writables);\n+          eStream.write(op);\n         } catch (IOException ie) {\n           LOG.error(\"logEdit: removing \"+ eStream.getName(), ie);\n           if(errorStreams \u003d\u003d null)\n             errorStreams \u003d new ArrayList\u003cEditLogOutputStream\u003e(1);\n           errorStreams.add(eStream);\n         }\n       }\n       disableAndReportErrorOnStreams(errorStreams);\n       recordTransaction(start);\n       \n       // check if it is time to schedule an automatic sync\n       if (!shouldForceSync()) {\n         return;\n       }\n       isAutoSyncScheduled \u003d true;\n     }\n     \n     // sync buffered edit log entries to persistent store\n     logSync();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void logEdit(FSEditLogOp op) {\n    synchronized (this) {\n      // wait if an automatic sync is scheduled\n      waitIfAutoSyncScheduled();\n      \n      if(getNumEditStreams() \u003d\u003d 0)\n        throw new java.lang.IllegalStateException(NO_JOURNAL_STREAMS_WARNING);\n      ArrayList\u003cEditLogOutputStream\u003e errorStreams \u003d null;\n      long start \u003d now();\n      for(EditLogOutputStream eStream : editStreams) {\n        if(!eStream.isOperationSupported(op.opCode.getOpCode()))\n          continue;\n        try {\n          eStream.write(op);\n        } catch (IOException ie) {\n          LOG.error(\"logEdit: removing \"+ eStream.getName(), ie);\n          if(errorStreams \u003d\u003d null)\n            errorStreams \u003d new ArrayList\u003cEditLogOutputStream\u003e(1);\n          errorStreams.add(eStream);\n        }\n      }\n      disableAndReportErrorOnStreams(errorStreams);\n      recordTransaction(start);\n      \n      // check if it is time to schedule an automatic sync\n      if (!shouldForceSync()) {\n        return;\n      }\n      isAutoSyncScheduled \u003d true;\n    }\n    \n    // sync buffered edit log entries to persistent store\n    logSync();\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
          "extendedDetails": {}
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,34 @@\n+  void logEdit(FSEditLogOpCodes opCode, Writable ... writables) {\n+    synchronized (this) {\n+      // wait if an automatic sync is scheduled\n+      waitIfAutoSyncScheduled();\n+      \n+      if(getNumEditStreams() \u003d\u003d 0)\n+        throw new java.lang.IllegalStateException(NO_JOURNAL_STREAMS_WARNING);\n+      ArrayList\u003cEditLogOutputStream\u003e errorStreams \u003d null;\n+      long start \u003d now();\n+      for(EditLogOutputStream eStream : editStreams) {\n+        if(!eStream.isOperationSupported(opCode.getOpCode()))\n+          continue;\n+        try {\n+          eStream.write(opCode.getOpCode(), writables);\n+        } catch (IOException ie) {\n+          LOG.error(\"logEdit: removing \"+ eStream.getName(), ie);\n+          if(errorStreams \u003d\u003d null)\n+            errorStreams \u003d new ArrayList\u003cEditLogOutputStream\u003e(1);\n+          errorStreams.add(eStream);\n+        }\n+      }\n+      disableAndReportErrorOnStreams(errorStreams);\n+      recordTransaction(start);\n+      \n+      // check if it is time to schedule an automatic sync\n+      if (!shouldForceSync()) {\n+        return;\n+      }\n+      isAutoSyncScheduled \u003d true;\n+    }\n+    \n+    // sync buffered edit log entries to persistent store\n+    logSync();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void logEdit(FSEditLogOpCodes opCode, Writable ... writables) {\n    synchronized (this) {\n      // wait if an automatic sync is scheduled\n      waitIfAutoSyncScheduled();\n      \n      if(getNumEditStreams() \u003d\u003d 0)\n        throw new java.lang.IllegalStateException(NO_JOURNAL_STREAMS_WARNING);\n      ArrayList\u003cEditLogOutputStream\u003e errorStreams \u003d null;\n      long start \u003d now();\n      for(EditLogOutputStream eStream : editStreams) {\n        if(!eStream.isOperationSupported(opCode.getOpCode()))\n          continue;\n        try {\n          eStream.write(opCode.getOpCode(), writables);\n        } catch (IOException ie) {\n          LOG.error(\"logEdit: removing \"+ eStream.getName(), ie);\n          if(errorStreams \u003d\u003d null)\n            errorStreams \u003d new ArrayList\u003cEditLogOutputStream\u003e(1);\n          errorStreams.add(eStream);\n        }\n      }\n      disableAndReportErrorOnStreams(errorStreams);\n      recordTransaction(start);\n      \n      // check if it is time to schedule an automatic sync\n      if (!shouldForceSync()) {\n        return;\n      }\n      isAutoSyncScheduled \u003d true;\n    }\n    \n    // sync buffered edit log entries to persistent store\n    logSync();\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java"
    }
  }
}