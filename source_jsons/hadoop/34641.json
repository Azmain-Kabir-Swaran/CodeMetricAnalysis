{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerManagerImpl.java",
  "functionName": "createAMRMProxyService",
  "functionId": "createAMRMProxyService___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
  "functionStartLine": 331,
  "functionEndLine": 347,
  "numCommitsSeen": 139,
  "timeTaken": 2915,
  "changeHistory": [
    "2273a74c1f3895163046cca09ff5e983df301d22",
    "55ae1439233e8585d624b2872e1e4753ef63eebb"
  ],
  "changeHistoryShort": {
    "2273a74c1f3895163046cca09ff5e983df301d22": "Ybodychange",
    "55ae1439233e8585d624b2872e1e4753ef63eebb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2273a74c1f3895163046cca09ff5e983df301d22": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5646. Add documentation and update config parameter names for scheduling of OPPORTUNISTIC containers. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "16/12/16 8:14 AM",
      "commitName": "2273a74c1f3895163046cca09ff5e983df301d22",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "07/12/16 3:07 PM",
      "commitNameOld": "72fe54684198b7df5c5fb2114616dff6d17a4402",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 8.71,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,17 @@\n   protected void createAMRMProxyService(Configuration conf) {\n     this.amrmProxyEnabled \u003d\n         conf.getBoolean(YarnConfiguration.AMRM_PROXY_ENABLED,\n-            YarnConfiguration.DEFAULT_AMRM_PROXY_ENABLED);\n+            YarnConfiguration.DEFAULT_AMRM_PROXY_ENABLED) ||\n+            conf.getBoolean(YarnConfiguration.DIST_SCHEDULING_ENABLED,\n+                YarnConfiguration.DEFAULT_DIST_SCHEDULING_ENABLED);\n \n     if (amrmProxyEnabled) {\n       LOG.info(\"AMRMProxyService is enabled. \"\n           + \"All the AM-\u003eRM requests will be intercepted by the proxy\");\n       this.setAMRMProxyService(\n           new AMRMProxyService(this.context, this.dispatcher));\n       addService(this.getAMRMProxyService());\n     } else {\n       LOG.info(\"AMRMProxyService is disabled\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void createAMRMProxyService(Configuration conf) {\n    this.amrmProxyEnabled \u003d\n        conf.getBoolean(YarnConfiguration.AMRM_PROXY_ENABLED,\n            YarnConfiguration.DEFAULT_AMRM_PROXY_ENABLED) ||\n            conf.getBoolean(YarnConfiguration.DIST_SCHEDULING_ENABLED,\n                YarnConfiguration.DEFAULT_DIST_SCHEDULING_ENABLED);\n\n    if (amrmProxyEnabled) {\n      LOG.info(\"AMRMProxyService is enabled. \"\n          + \"All the AM-\u003eRM requests will be intercepted by the proxy\");\n      this.setAMRMProxyService(\n          new AMRMProxyService(this.context, this.dispatcher));\n      addService(this.getAMRMProxyService());\n    } else {\n      LOG.info(\"AMRMProxyService is disabled\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "55ae1439233e8585d624b2872e1e4753ef63eebb": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4117. End to end unit test with mini YARN cluster for AMRMProxy Service. Contributed by Giovanni Matteo Fumarola\n",
      "commitDate": "27/03/16 8:22 PM",
      "commitName": "55ae1439233e8585d624b2872e1e4753ef63eebb",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,15 @@\n+  protected void createAMRMProxyService(Configuration conf) {\n+    this.amrmProxyEnabled \u003d\n+        conf.getBoolean(YarnConfiguration.AMRM_PROXY_ENABLED,\n+            YarnConfiguration.DEFAULT_AMRM_PROXY_ENABLED);\n+\n+    if (amrmProxyEnabled) {\n+      LOG.info(\"AMRMProxyService is enabled. \"\n+          + \"All the AM-\u003eRM requests will be intercepted by the proxy\");\n+      this.setAMRMProxyService(\n+          new AMRMProxyService(this.context, this.dispatcher));\n+      addService(this.getAMRMProxyService());\n+    } else {\n+      LOG.info(\"AMRMProxyService is disabled\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void createAMRMProxyService(Configuration conf) {\n    this.amrmProxyEnabled \u003d\n        conf.getBoolean(YarnConfiguration.AMRM_PROXY_ENABLED,\n            YarnConfiguration.DEFAULT_AMRM_PROXY_ENABLED);\n\n    if (amrmProxyEnabled) {\n      LOG.info(\"AMRMProxyService is enabled. \"\n          + \"All the AM-\u003eRM requests will be intercepted by the proxy\");\n      this.setAMRMProxyService(\n          new AMRMProxyService(this.context, this.dispatcher));\n      addService(this.getAMRMProxyService());\n    } else {\n      LOG.info(\"AMRMProxyService is disabled\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java"
    }
  }
}