{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Job.java",
  "functionName": "setPriority",
  "functionId": "setPriority___jobPriority-JobPriority",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java",
  "functionStartLine": 651,
  "functionEndLine": 672,
  "numCommitsSeen": 70,
  "timeTaken": 6375,
  "changeHistory": [
    "f634505d48d97e4d461980d68a0cbdf87223646d",
    "102541b12b075bf190bdeb43e077f179a2a413fa",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "f634505d48d97e4d461980d68a0cbdf87223646d": "Ymultichange(Yparameterchange,Ybodychange)",
    "102541b12b075bf190bdeb43e077f179a2a413fa": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f634505d48d97e4d461980d68a0cbdf87223646d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-5870. Support for passing Job priority through Application Submission Context in Mapreduce Side. Contributed by Sunil G\n",
      "commitDate": "24/11/15 2:07 PM",
      "commitName": "f634505d48d97e4d461980d68a0cbdf87223646d",
      "commitAuthor": "Jason Lowe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-5870. Support for passing Job priority through Application Submission Context in Mapreduce Side. Contributed by Sunil G\n",
          "commitDate": "24/11/15 2:07 PM",
          "commitName": "f634505d48d97e4d461980d68a0cbdf87223646d",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "04/03/15 2:42 PM",
          "commitNameOld": "c66c3ac6bf9f63177279feec3f2917e4b882e2bc",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 264.98,
          "commitsBetweenForRepo": 2228,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,22 @@\n-  public void setPriority(JobPriority priority) \n-      throws IOException, InterruptedException {\n+  public void setPriority(JobPriority jobPriority) throws IOException,\n+      InterruptedException {\n     if (state \u003d\u003d JobState.DEFINE) {\n-      conf.setJobPriority(\n-        org.apache.hadoop.mapred.JobPriority.valueOf(priority.name()));\n+      if (jobPriority \u003d\u003d JobPriority.UNDEFINED_PRIORITY) {\n+        conf.setJobPriorityAsInteger(convertPriorityToInteger(jobPriority));\n+      } else {\n+        conf.setJobPriority(org.apache.hadoop.mapred.JobPriority\n+            .valueOf(jobPriority.name()));\n+      }\n     } else {\n       ensureState(JobState.RUNNING);\n-      final JobPriority tmpPriority \u003d priority;\n+      final int tmpPriority \u003d convertPriorityToInteger(jobPriority);\n       ugi.doAs(new PrivilegedExceptionAction\u003cObject\u003e() {\n         @Override\n         public Object run() throws IOException, InterruptedException {\n-          cluster.getClient().setJobPriority(getJobID(), tmpPriority.toString());\n+          cluster.getClient()\n+              .setJobPriority(getJobID(), Integer.toString(tmpPriority));\n           return null;\n         }\n       });\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void setPriority(JobPriority jobPriority) throws IOException,\n      InterruptedException {\n    if (state \u003d\u003d JobState.DEFINE) {\n      if (jobPriority \u003d\u003d JobPriority.UNDEFINED_PRIORITY) {\n        conf.setJobPriorityAsInteger(convertPriorityToInteger(jobPriority));\n      } else {\n        conf.setJobPriority(org.apache.hadoop.mapred.JobPriority\n            .valueOf(jobPriority.name()));\n      }\n    } else {\n      ensureState(JobState.RUNNING);\n      final int tmpPriority \u003d convertPriorityToInteger(jobPriority);\n      ugi.doAs(new PrivilegedExceptionAction\u003cObject\u003e() {\n        @Override\n        public Object run() throws IOException, InterruptedException {\n          cluster.getClient()\n              .setJobPriority(getJobID(), Integer.toString(tmpPriority));\n          return null;\n        }\n      });\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java",
          "extendedDetails": {
            "oldValue": "[priority-JobPriority]",
            "newValue": "[jobPriority-JobPriority]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-5870. Support for passing Job priority through Application Submission Context in Mapreduce Side. Contributed by Sunil G\n",
          "commitDate": "24/11/15 2:07 PM",
          "commitName": "f634505d48d97e4d461980d68a0cbdf87223646d",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "04/03/15 2:42 PM",
          "commitNameOld": "c66c3ac6bf9f63177279feec3f2917e4b882e2bc",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 264.98,
          "commitsBetweenForRepo": 2228,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,22 @@\n-  public void setPriority(JobPriority priority) \n-      throws IOException, InterruptedException {\n+  public void setPriority(JobPriority jobPriority) throws IOException,\n+      InterruptedException {\n     if (state \u003d\u003d JobState.DEFINE) {\n-      conf.setJobPriority(\n-        org.apache.hadoop.mapred.JobPriority.valueOf(priority.name()));\n+      if (jobPriority \u003d\u003d JobPriority.UNDEFINED_PRIORITY) {\n+        conf.setJobPriorityAsInteger(convertPriorityToInteger(jobPriority));\n+      } else {\n+        conf.setJobPriority(org.apache.hadoop.mapred.JobPriority\n+            .valueOf(jobPriority.name()));\n+      }\n     } else {\n       ensureState(JobState.RUNNING);\n-      final JobPriority tmpPriority \u003d priority;\n+      final int tmpPriority \u003d convertPriorityToInteger(jobPriority);\n       ugi.doAs(new PrivilegedExceptionAction\u003cObject\u003e() {\n         @Override\n         public Object run() throws IOException, InterruptedException {\n-          cluster.getClient().setJobPriority(getJobID(), tmpPriority.toString());\n+          cluster.getClient()\n+              .setJobPriority(getJobID(), Integer.toString(tmpPriority));\n           return null;\n         }\n       });\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void setPriority(JobPriority jobPriority) throws IOException,\n      InterruptedException {\n    if (state \u003d\u003d JobState.DEFINE) {\n      if (jobPriority \u003d\u003d JobPriority.UNDEFINED_PRIORITY) {\n        conf.setJobPriorityAsInteger(convertPriorityToInteger(jobPriority));\n      } else {\n        conf.setJobPriority(org.apache.hadoop.mapred.JobPriority\n            .valueOf(jobPriority.name()));\n      }\n    } else {\n      ensureState(JobState.RUNNING);\n      final int tmpPriority \u003d convertPriorityToInteger(jobPriority);\n      ugi.doAs(new PrivilegedExceptionAction\u003cObject\u003e() {\n        @Override\n        public Object run() throws IOException, InterruptedException {\n          cluster.getClient()\n              .setJobPriority(getJobID(), Integer.toString(tmpPriority));\n          return null;\n        }\n      });\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java",
          "extendedDetails": {}
        }
      ]
    },
    "102541b12b075bf190bdeb43e077f179a2a413fa": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3443. JobClient and Job should function in the context of the UGI which created them. (Contributed by Mahadev Konar)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1209231 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/12/11 12:39 PM",
      "commitName": "102541b12b075bf190bdeb43e077f179a2a413fa",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "29/09/11 8:08 PM",
      "commitNameOld": "0b3c654d83c5e73fe946de194f3aea0a9fe06f5a",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 62.73,
      "commitsBetweenForRepo": 449,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,17 @@\n   public void setPriority(JobPriority priority) \n       throws IOException, InterruptedException {\n     if (state \u003d\u003d JobState.DEFINE) {\n       conf.setJobPriority(\n         org.apache.hadoop.mapred.JobPriority.valueOf(priority.name()));\n     } else {\n       ensureState(JobState.RUNNING);\n-      cluster.getClient().setJobPriority(getJobID(), priority.toString());\n+      final JobPriority tmpPriority \u003d priority;\n+      ugi.doAs(new PrivilegedExceptionAction\u003cObject\u003e() {\n+        @Override\n+        public Object run() throws IOException, InterruptedException {\n+          cluster.getClient().setJobPriority(getJobID(), tmpPriority.toString());\n+          return null;\n+        }\n+      });\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setPriority(JobPriority priority) \n      throws IOException, InterruptedException {\n    if (state \u003d\u003d JobState.DEFINE) {\n      conf.setJobPriority(\n        org.apache.hadoop.mapred.JobPriority.valueOf(priority.name()));\n    } else {\n      ensureState(JobState.RUNNING);\n      final JobPriority tmpPriority \u003d priority;\n      ugi.doAs(new PrivilegedExceptionAction\u003cObject\u003e() {\n        @Override\n        public Object run() throws IOException, InterruptedException {\n          cluster.getClient().setJobPriority(getJobID(), tmpPriority.toString());\n          return null;\n        }\n      });\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void setPriority(JobPriority priority) \n      throws IOException, InterruptedException {\n    if (state \u003d\u003d JobState.DEFINE) {\n      conf.setJobPriority(\n        org.apache.hadoop.mapred.JobPriority.valueOf(priority.name()));\n    } else {\n      ensureState(JobState.RUNNING);\n      cluster.getClient().setJobPriority(getJobID(), priority.toString());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void setPriority(JobPriority priority) \n      throws IOException, InterruptedException {\n    if (state \u003d\u003d JobState.DEFINE) {\n      conf.setJobPriority(\n        org.apache.hadoop.mapred.JobPriority.valueOf(priority.name()));\n    } else {\n      ensureState(JobState.RUNNING);\n      cluster.getClient().setJobPriority(getJobID(), priority.toString());\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/Job.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,10 @@\n+  public void setPriority(JobPriority priority) \n+      throws IOException, InterruptedException {\n+    if (state \u003d\u003d JobState.DEFINE) {\n+      conf.setJobPriority(\n+        org.apache.hadoop.mapred.JobPriority.valueOf(priority.name()));\n+    } else {\n+      ensureState(JobState.RUNNING);\n+      cluster.getClient().setJobPriority(getJobID(), priority.toString());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setPriority(JobPriority priority) \n      throws IOException, InterruptedException {\n    if (state \u003d\u003d JobState.DEFINE) {\n      conf.setJobPriority(\n        org.apache.hadoop.mapred.JobPriority.valueOf(priority.name()));\n    } else {\n      ensureState(JobState.RUNNING);\n      cluster.getClient().setJobPriority(getJobID(), priority.toString());\n    }\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/Job.java"
    }
  }
}