{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientRMProxy.java",
  "functionName": "getRMDelegationTokenService",
  "functionId": "getRMDelegationTokenService___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/ClientRMProxy.java",
  "functionStartLine": 131,
  "functionEndLine": 135,
  "numCommitsSeen": 7,
  "timeTaken": 1374,
  "changeHistory": [
    "a3d9934f916471a845dc679449d08f94dead550d",
    "88245b6a41171f939b22186c533ea2bc7994f9b3"
  ],
  "changeHistoryShort": {
    "a3d9934f916471a845dc679449d08f94dead550d": "Ybodychange",
    "88245b6a41171f939b22186c533ea2bc7994f9b3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a3d9934f916471a845dc679449d08f94dead550d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1779. Fixed AMRMClient to handle AMRMTokens correctly across ResourceManager work-preserving-restart or failover. Contributed by Jian He.\n",
      "commitDate": "18/09/14 10:16 AM",
      "commitName": "a3d9934f916471a845dc679449d08f94dead550d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/03/14 12:39 PM",
      "commitNameOld": "88245b6a41171f939b22186c533ea2bc7994f9b3",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 197.86,
      "commitsBetweenForRepo": 1460,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,5 @@\n   public static Text getRMDelegationTokenService(Configuration conf) {\n-    if (HAUtil.isHAEnabled(conf)) {\n-      // Build a list of service addresses to form the service name\n-      ArrayList\u003cString\u003e services \u003d new ArrayList\u003cString\u003e();\n-      YarnConfiguration yarnConf \u003d new YarnConfiguration(conf);\n-      for (String rmId : HAUtil.getRMHAIds(conf)) {\n-        // Set RM_ID to get the corresponding RM_ADDRESS\n-        yarnConf.set(YarnConfiguration.RM_HA_ID, rmId);\n-        services.add(SecurityUtil.buildTokenService(\n-            yarnConf.getSocketAddr(YarnConfiguration.RM_ADDRESS,\n-                YarnConfiguration.DEFAULT_RM_ADDRESS,\n-                YarnConfiguration.DEFAULT_RM_PORT)).toString());\n-      }\n-      return new Text(Joiner.on(\u0027,\u0027).join(services));\n-    }\n-\n-    // Non-HA case - no need to set RM_ID\n-    return SecurityUtil.buildTokenService(\n-        conf.getSocketAddr(YarnConfiguration.RM_ADDRESS,\n+    return getTokenService(conf, YarnConfiguration.RM_ADDRESS,\n             YarnConfiguration.DEFAULT_RM_ADDRESS,\n-            YarnConfiguration.DEFAULT_RM_PORT));\n+            YarnConfiguration.DEFAULT_RM_PORT);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Text getRMDelegationTokenService(Configuration conf) {\n    return getTokenService(conf, YarnConfiguration.RM_ADDRESS,\n            YarnConfiguration.DEFAULT_RM_ADDRESS,\n            YarnConfiguration.DEFAULT_RM_PORT);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/ClientRMProxy.java",
      "extendedDetails": {}
    },
    "88245b6a41171f939b22186c533ea2bc7994f9b3": {
      "type": "Yintroduced",
      "commitMessage": "YARN-986. Changed client side to be able to figure out the right RM Delegation token for the right ResourceManager when HA is enabled. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1574190 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/03/14 12:39 PM",
      "commitName": "88245b6a41171f939b22186c533ea2bc7994f9b3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,22 @@\n+  public static Text getRMDelegationTokenService(Configuration conf) {\n+    if (HAUtil.isHAEnabled(conf)) {\n+      // Build a list of service addresses to form the service name\n+      ArrayList\u003cString\u003e services \u003d new ArrayList\u003cString\u003e();\n+      YarnConfiguration yarnConf \u003d new YarnConfiguration(conf);\n+      for (String rmId : HAUtil.getRMHAIds(conf)) {\n+        // Set RM_ID to get the corresponding RM_ADDRESS\n+        yarnConf.set(YarnConfiguration.RM_HA_ID, rmId);\n+        services.add(SecurityUtil.buildTokenService(\n+            yarnConf.getSocketAddr(YarnConfiguration.RM_ADDRESS,\n+                YarnConfiguration.DEFAULT_RM_ADDRESS,\n+                YarnConfiguration.DEFAULT_RM_PORT)).toString());\n+      }\n+      return new Text(Joiner.on(\u0027,\u0027).join(services));\n+    }\n+\n+    // Non-HA case - no need to set RM_ID\n+    return SecurityUtil.buildTokenService(\n+        conf.getSocketAddr(YarnConfiguration.RM_ADDRESS,\n+            YarnConfiguration.DEFAULT_RM_ADDRESS,\n+            YarnConfiguration.DEFAULT_RM_PORT));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Text getRMDelegationTokenService(Configuration conf) {\n    if (HAUtil.isHAEnabled(conf)) {\n      // Build a list of service addresses to form the service name\n      ArrayList\u003cString\u003e services \u003d new ArrayList\u003cString\u003e();\n      YarnConfiguration yarnConf \u003d new YarnConfiguration(conf);\n      for (String rmId : HAUtil.getRMHAIds(conf)) {\n        // Set RM_ID to get the corresponding RM_ADDRESS\n        yarnConf.set(YarnConfiguration.RM_HA_ID, rmId);\n        services.add(SecurityUtil.buildTokenService(\n            yarnConf.getSocketAddr(YarnConfiguration.RM_ADDRESS,\n                YarnConfiguration.DEFAULT_RM_ADDRESS,\n                YarnConfiguration.DEFAULT_RM_PORT)).toString());\n      }\n      return new Text(Joiner.on(\u0027,\u0027).join(services));\n    }\n\n    // Non-HA case - no need to set RM_ID\n    return SecurityUtil.buildTokenService(\n        conf.getSocketAddr(YarnConfiguration.RM_ADDRESS,\n            YarnConfiguration.DEFAULT_RM_ADDRESS,\n            YarnConfiguration.DEFAULT_RM_PORT));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/ClientRMProxy.java"
    }
  }
}