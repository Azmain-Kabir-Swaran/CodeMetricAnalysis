{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FoldedTreeSet.java",
  "functionName": "get",
  "functionId": "get___obj-Object__cmp-Comparator__?__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/FoldedTreeSet.java",
  "functionStartLine": 410,
  "functionEndLine": 451,
  "numCommitsSeen": 1,
  "timeTaken": 1313,
  "changeHistory": [
    "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a"
  ],
  "changeHistoryShort": {
    "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9260. Improve the performance and GC friendliness of NameNode startup and full block reports (Staffan Friberg via cmccabe)\n",
      "commitDate": "02/02/16 11:23 AM",
      "commitName": "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,42 @@\n+  public E get(Object obj, Comparator\u003c?\u003e cmp) {\n+    Objects.requireNonNull(obj);\n+\n+    Node\u003cE\u003e node \u003d root;\n+    while (node !\u003d null) {\n+      E[] entries \u003d node.entries;\n+\n+      int leftIndex \u003d node.leftIndex;\n+      int result \u003d compare(obj, entries[leftIndex], cmp);\n+      if (result \u003c 0) {\n+        node \u003d node.left;\n+      } else if (result \u003d\u003d 0) {\n+        return entries[leftIndex];\n+      } else {\n+        int rightIndex \u003d node.rightIndex;\n+        if (leftIndex !\u003d rightIndex) {\n+          result \u003d compare(obj, entries[rightIndex], cmp);\n+        }\n+        if (result \u003d\u003d 0) {\n+          return entries[rightIndex];\n+        } else if (result \u003e 0) {\n+          node \u003d node.right;\n+        } else {\n+          int low \u003d leftIndex + 1;\n+          int high \u003d rightIndex - 1;\n+          while (low \u003c\u003d high) {\n+            int mid \u003d (low + high) \u003e\u003e\u003e 1;\n+            result \u003d compare(obj, entries[mid], cmp);\n+            if (result \u003e 0) {\n+              low \u003d mid + 1;\n+            } else if (result \u003c 0) {\n+              high \u003d mid - 1;\n+            } else {\n+              return entries[mid];\n+            }\n+          }\n+          return null;\n+        }\n+      }\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public E get(Object obj, Comparator\u003c?\u003e cmp) {\n    Objects.requireNonNull(obj);\n\n    Node\u003cE\u003e node \u003d root;\n    while (node !\u003d null) {\n      E[] entries \u003d node.entries;\n\n      int leftIndex \u003d node.leftIndex;\n      int result \u003d compare(obj, entries[leftIndex], cmp);\n      if (result \u003c 0) {\n        node \u003d node.left;\n      } else if (result \u003d\u003d 0) {\n        return entries[leftIndex];\n      } else {\n        int rightIndex \u003d node.rightIndex;\n        if (leftIndex !\u003d rightIndex) {\n          result \u003d compare(obj, entries[rightIndex], cmp);\n        }\n        if (result \u003d\u003d 0) {\n          return entries[rightIndex];\n        } else if (result \u003e 0) {\n          node \u003d node.right;\n        } else {\n          int low \u003d leftIndex + 1;\n          int high \u003d rightIndex - 1;\n          while (low \u003c\u003d high) {\n            int mid \u003d (low + high) \u003e\u003e\u003e 1;\n            result \u003d compare(obj, entries[mid], cmp);\n            if (result \u003e 0) {\n              low \u003d mid + 1;\n            } else if (result \u003c 0) {\n              high \u003d mid - 1;\n            } else {\n              return entries[mid];\n            }\n          }\n          return null;\n        }\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/FoldedTreeSet.java"
    }
  }
}