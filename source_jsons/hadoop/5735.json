{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirMkdirOp.java",
  "functionName": "mkdirForEditLog",
  "functionId": "mkdirForEditLog___fsd-FSDirectory__inodeId-long__src-String__permissions-PermissionStatus__aclEntries-List__AclEntry____timestamp-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
  "functionStartLine": 151,
  "functionEndLine": 163,
  "numCommitsSeen": 18,
  "timeTaken": 2092,
  "changeHistory": [
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
    "5caebbae8c2fc9ba2e32384657aee21641a1a6d0"
  ],
  "changeHistoryShort": {
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": "Ymultichange(Yexceptionschange,Ybodychange)",
    "5caebbae8c2fc9ba2e32384657aee21641a1a6d0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
      "commitDate": "24/10/16 3:14 PM",
      "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
          "commitDate": "24/10/16 3:14 PM",
          "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "07/10/16 3:20 PM",
          "commitNameOld": "e57fa81d9559a93d77fd724f7792326c31a490be",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 17.0,
          "commitsBetweenForRepo": 108,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n   static void mkdirForEditLog(FSDirectory fsd, long inodeId, String src,\n       PermissionStatus permissions, List\u003cAclEntry\u003e aclEntries, long timestamp)\n       throws QuotaExceededException, UnresolvedLinkException, AclException,\n-      FileAlreadyExistsException {\n+      FileAlreadyExistsException, ParentNotDirectoryException,\n+      AccessControlException {\n     assert fsd.hasWriteLock();\n-    INodesInPath iip \u003d fsd.getINodesInPath(src, false);\n+    INodesInPath iip \u003d fsd.getINodesInPath(src, DirOp.WRITE_LINK);\n     final byte[] localName \u003d iip.getLastLocalName();\n     final INodesInPath existing \u003d iip.getParentINodesInPath();\n     Preconditions.checkState(existing.getLastINode() !\u003d null);\n     unprotectedMkdir(fsd, inodeId, existing, localName, permissions, aclEntries,\n         timestamp);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void mkdirForEditLog(FSDirectory fsd, long inodeId, String src,\n      PermissionStatus permissions, List\u003cAclEntry\u003e aclEntries, long timestamp)\n      throws QuotaExceededException, UnresolvedLinkException, AclException,\n      FileAlreadyExistsException, ParentNotDirectoryException,\n      AccessControlException {\n    assert fsd.hasWriteLock();\n    INodesInPath iip \u003d fsd.getINodesInPath(src, DirOp.WRITE_LINK);\n    final byte[] localName \u003d iip.getLastLocalName();\n    final INodesInPath existing \u003d iip.getParentINodesInPath();\n    Preconditions.checkState(existing.getLastINode() !\u003d null);\n    unprotectedMkdir(fsd, inodeId, existing, localName, permissions, aclEntries,\n        timestamp);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
          "extendedDetails": {
            "oldValue": "[QuotaExceededException, UnresolvedLinkException, AclException, FileAlreadyExistsException]",
            "newValue": "[QuotaExceededException, UnresolvedLinkException, AclException, FileAlreadyExistsException, ParentNotDirectoryException, AccessControlException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
          "commitDate": "24/10/16 3:14 PM",
          "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "07/10/16 3:20 PM",
          "commitNameOld": "e57fa81d9559a93d77fd724f7792326c31a490be",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 17.0,
          "commitsBetweenForRepo": 108,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n   static void mkdirForEditLog(FSDirectory fsd, long inodeId, String src,\n       PermissionStatus permissions, List\u003cAclEntry\u003e aclEntries, long timestamp)\n       throws QuotaExceededException, UnresolvedLinkException, AclException,\n-      FileAlreadyExistsException {\n+      FileAlreadyExistsException, ParentNotDirectoryException,\n+      AccessControlException {\n     assert fsd.hasWriteLock();\n-    INodesInPath iip \u003d fsd.getINodesInPath(src, false);\n+    INodesInPath iip \u003d fsd.getINodesInPath(src, DirOp.WRITE_LINK);\n     final byte[] localName \u003d iip.getLastLocalName();\n     final INodesInPath existing \u003d iip.getParentINodesInPath();\n     Preconditions.checkState(existing.getLastINode() !\u003d null);\n     unprotectedMkdir(fsd, inodeId, existing, localName, permissions, aclEntries,\n         timestamp);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void mkdirForEditLog(FSDirectory fsd, long inodeId, String src,\n      PermissionStatus permissions, List\u003cAclEntry\u003e aclEntries, long timestamp)\n      throws QuotaExceededException, UnresolvedLinkException, AclException,\n      FileAlreadyExistsException, ParentNotDirectoryException,\n      AccessControlException {\n    assert fsd.hasWriteLock();\n    INodesInPath iip \u003d fsd.getINodesInPath(src, DirOp.WRITE_LINK);\n    final byte[] localName \u003d iip.getLastLocalName();\n    final INodesInPath existing \u003d iip.getParentINodesInPath();\n    Preconditions.checkState(existing.getLastINode() !\u003d null);\n    unprotectedMkdir(fsd, inodeId, existing, localName, permissions, aclEntries,\n        timestamp);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "5caebbae8c2fc9ba2e32384657aee21641a1a6d0": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7484. Make FSDirectory#addINode take existing INodes as its parameter. Contributed by Jing Zhao.\n",
      "commitDate": "22/12/14 11:19 PM",
      "commitName": "5caebbae8c2fc9ba2e32384657aee21641a1a6d0",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,12 @@\n+  static void mkdirForEditLog(FSDirectory fsd, long inodeId, String src,\n+      PermissionStatus permissions, List\u003cAclEntry\u003e aclEntries, long timestamp)\n+      throws QuotaExceededException, UnresolvedLinkException, AclException,\n+      FileAlreadyExistsException {\n+    assert fsd.hasWriteLock();\n+    INodesInPath iip \u003d fsd.getINodesInPath(src, false);\n+    final byte[] localName \u003d iip.getLastLocalName();\n+    final INodesInPath existing \u003d iip.getParentINodesInPath();\n+    Preconditions.checkState(existing.getLastINode() !\u003d null);\n+    unprotectedMkdir(fsd, inodeId, existing, localName, permissions, aclEntries,\n+        timestamp);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static void mkdirForEditLog(FSDirectory fsd, long inodeId, String src,\n      PermissionStatus permissions, List\u003cAclEntry\u003e aclEntries, long timestamp)\n      throws QuotaExceededException, UnresolvedLinkException, AclException,\n      FileAlreadyExistsException {\n    assert fsd.hasWriteLock();\n    INodesInPath iip \u003d fsd.getINodesInPath(src, false);\n    final byte[] localName \u003d iip.getLastLocalName();\n    final INodesInPath existing \u003d iip.getParentINodesInPath();\n    Preconditions.checkState(existing.getLastINode() !\u003d null);\n    unprotectedMkdir(fsd, inodeId, existing, localName, permissions, aclEntries,\n        timestamp);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java"
    }
  }
}