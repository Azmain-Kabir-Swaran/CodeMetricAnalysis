{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AFileSystem.java",
  "functionName": "abortMultipartUpload",
  "functionId": "abortMultipartUpload___upload-MultipartUpload",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
  "functionStartLine": 4430,
  "functionEndLine": 4445,
  "numCommitsSeen": 211,
  "timeTaken": 5878,
  "changeHistory": [
    "6574f27fa348542411bff888b184cd7ce34e5d9e",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
    "dab00da19f25619ccc71c7f803a235b21766bf1e",
    "6c348c56918973fd988b110e79231324a8befe12"
  ],
  "changeHistoryShort": {
    "6574f27fa348542411bff888b184cd7ce34e5d9e": "Ybodychange",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "dab00da19f25619ccc71c7f803a235b21766bf1e": "Ybodychange",
    "6c348c56918973fd988b110e79231324a8befe12": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6574f27fa348542411bff888b184cd7ce34e5d9e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16570. S3A committers encounter scale issues.\n\nContributed by Steve Loughran.\n\nThis addresses two scale issues which has surfaced in large scale benchmarks\nof the S3A Committers.\n\n* Thread pools are not cleaned up.\n  This now happens, with tests.\n\n* OOM on job commit for jobs with many thousands of tasks,\n  each generating tens of (very large) files.\n\nInstead of loading all pending commits into memory as a single list, the list\nof files to load is the sole list which is passed around; .pendingset files are\nloaded and processed in isolation -and reloaded if necessary for any\nabort/rollback operation.\n\nThe parallel commit/abort/revert operations now work at the .pendingset level,\nrather than that of individual pending commit files. The existing parallelized\nTasks API is still used to commit those files, but with a null thread pool, so\nas to serialize the operations.\n\nChange-Id: I5c8240cd31800eaa83d112358770ca0eb2bca797\n",
      "commitDate": "04/10/19 10:54 AM",
      "commitName": "6574f27fa348542411bff888b184cd7ce34e5d9e",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "02/10/19 4:03 PM",
      "commitNameOld": "559ee277f50716a9a8c736ba3b655aad9f616e96",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 1.79,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   void abortMultipartUpload(MultipartUpload upload) {\n     String destKey;\n     String uploadId;\n     destKey \u003d upload.getKey();\n     uploadId \u003d upload.getUploadId();\n     if (LOG.isInfoEnabled()) {\n       DateFormat df \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n-      LOG.info(\"Aborting multipart upload {} to {} initiated by {} on {}\",\n+      LOG.debug(\"Aborting multipart upload {} to {} initiated by {} on {}\",\n           uploadId, destKey, upload.getInitiator(),\n           df.format(upload.getInitiated()));\n     }\n     getAmazonS3Client().abortMultipartUpload(\n         new AbortMultipartUploadRequest(getBucket(),\n             destKey,\n             uploadId));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void abortMultipartUpload(MultipartUpload upload) {\n    String destKey;\n    String uploadId;\n    destKey \u003d upload.getKey();\n    uploadId \u003d upload.getUploadId();\n    if (LOG.isInfoEnabled()) {\n      DateFormat df \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n      LOG.debug(\"Aborting multipart upload {} to {} initiated by {} on {}\",\n          uploadId, destKey, upload.getInitiator(),\n          df.format(upload.getInitiated()));\n    }\n    getAmazonS3Client().abortMultipartUpload(\n        new AbortMultipartUploadRequest(getBucket(),\n            destKey,\n            uploadId));\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
      "commitDate": "22/11/17 7:28 AM",
      "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
          "commitDate": "22/11/17 7:28 AM",
          "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "25/09/17 3:59 PM",
          "commitNameOld": "47011d7dd300b0c74bb6cfe25b918c479d718f4f",
          "commitAuthorOld": "Aaron Fabbri",
          "daysBetweenCommits": 57.69,
          "commitsBetweenForRepo": 477,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,16 @@\n-    void abortMultipartUpload(String uploadId) throws AmazonClientException {\n-      LOG.debug(\"Aborting multipart upload {}\", uploadId);\n-      s3.abortMultipartUpload(\n-          new AbortMultipartUploadRequest(bucket, key, uploadId));\n-    }\n\\ No newline at end of file\n+  void abortMultipartUpload(MultipartUpload upload) {\n+    String destKey;\n+    String uploadId;\n+    destKey \u003d upload.getKey();\n+    uploadId \u003d upload.getUploadId();\n+    if (LOG.isInfoEnabled()) {\n+      DateFormat df \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n+      LOG.info(\"Aborting multipart upload {} to {} initiated by {} on {}\",\n+          uploadId, destKey, upload.getInitiator(),\n+          df.format(upload.getInitiated()));\n+    }\n+    getAmazonS3Client().abortMultipartUpload(\n+        new AbortMultipartUploadRequest(getBucket(),\n+            destKey,\n+            uploadId));\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  void abortMultipartUpload(MultipartUpload upload) {\n    String destKey;\n    String uploadId;\n    destKey \u003d upload.getKey();\n    uploadId \u003d upload.getUploadId();\n    if (LOG.isInfoEnabled()) {\n      DateFormat df \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n      LOG.info(\"Aborting multipart upload {} to {} initiated by {} on {}\",\n          uploadId, destKey, upload.getInitiator(),\n          df.format(upload.getInitiated()));\n    }\n    getAmazonS3Client().abortMultipartUpload(\n        new AbortMultipartUploadRequest(getBucket(),\n            destKey,\n            uploadId));\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {
            "oldValue": "[uploadId-String]",
            "newValue": "[upload-MultipartUpload]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
          "commitDate": "22/11/17 7:28 AM",
          "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "25/09/17 3:59 PM",
          "commitNameOld": "47011d7dd300b0c74bb6cfe25b918c479d718f4f",
          "commitAuthorOld": "Aaron Fabbri",
          "daysBetweenCommits": 57.69,
          "commitsBetweenForRepo": 477,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,16 @@\n-    void abortMultipartUpload(String uploadId) throws AmazonClientException {\n-      LOG.debug(\"Aborting multipart upload {}\", uploadId);\n-      s3.abortMultipartUpload(\n-          new AbortMultipartUploadRequest(bucket, key, uploadId));\n-    }\n\\ No newline at end of file\n+  void abortMultipartUpload(MultipartUpload upload) {\n+    String destKey;\n+    String uploadId;\n+    destKey \u003d upload.getKey();\n+    uploadId \u003d upload.getUploadId();\n+    if (LOG.isInfoEnabled()) {\n+      DateFormat df \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n+      LOG.info(\"Aborting multipart upload {} to {} initiated by {} on {}\",\n+          uploadId, destKey, upload.getInitiator(),\n+          df.format(upload.getInitiated()));\n+    }\n+    getAmazonS3Client().abortMultipartUpload(\n+        new AbortMultipartUploadRequest(getBucket(),\n+            destKey,\n+            uploadId));\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  void abortMultipartUpload(MultipartUpload upload) {\n    String destKey;\n    String uploadId;\n    destKey \u003d upload.getKey();\n    uploadId \u003d upload.getUploadId();\n    if (LOG.isInfoEnabled()) {\n      DateFormat df \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n      LOG.info(\"Aborting multipart upload {} to {} initiated by {} on {}\",\n          uploadId, destKey, upload.getInitiator(),\n          df.format(upload.getInitiated()));\n    }\n    getAmazonS3Client().abortMultipartUpload(\n        new AbortMultipartUploadRequest(getBucket(),\n            destKey,\n            uploadId));\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {
            "oldValue": "[AmazonClientException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
          "commitDate": "22/11/17 7:28 AM",
          "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "25/09/17 3:59 PM",
          "commitNameOld": "47011d7dd300b0c74bb6cfe25b918c479d718f4f",
          "commitAuthorOld": "Aaron Fabbri",
          "daysBetweenCommits": 57.69,
          "commitsBetweenForRepo": 477,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,16 @@\n-    void abortMultipartUpload(String uploadId) throws AmazonClientException {\n-      LOG.debug(\"Aborting multipart upload {}\", uploadId);\n-      s3.abortMultipartUpload(\n-          new AbortMultipartUploadRequest(bucket, key, uploadId));\n-    }\n\\ No newline at end of file\n+  void abortMultipartUpload(MultipartUpload upload) {\n+    String destKey;\n+    String uploadId;\n+    destKey \u003d upload.getKey();\n+    uploadId \u003d upload.getUploadId();\n+    if (LOG.isInfoEnabled()) {\n+      DateFormat df \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n+      LOG.info(\"Aborting multipart upload {} to {} initiated by {} on {}\",\n+          uploadId, destKey, upload.getInitiator(),\n+          df.format(upload.getInitiated()));\n+    }\n+    getAmazonS3Client().abortMultipartUpload(\n+        new AbortMultipartUploadRequest(getBucket(),\n+            destKey,\n+            uploadId));\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  void abortMultipartUpload(MultipartUpload upload) {\n    String destKey;\n    String uploadId;\n    destKey \u003d upload.getKey();\n    uploadId \u003d upload.getUploadId();\n    if (LOG.isInfoEnabled()) {\n      DateFormat df \u003d new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n      LOG.info(\"Aborting multipart upload {} to {} initiated by {} on {}\",\n          uploadId, destKey, upload.getInitiator(),\n          df.format(upload.getInitiated()));\n    }\n    getAmazonS3Client().abortMultipartUpload(\n        new AbortMultipartUploadRequest(getBucket(),\n            destKey,\n            uploadId));\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "dab00da19f25619ccc71c7f803a235b21766bf1e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14028. S3A BlockOutputStreams doesn\u0027t delete temporary files in multipart uploads or handle part upload failures.\nContributed by Steve Loughran.\n\n(cherry picked from commit 29fe5af017b945d8750c074ca39031b5b777eddd)\n",
      "commitDate": "25/02/17 7:35 AM",
      "commitName": "dab00da19f25619ccc71c7f803a235b21766bf1e",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "23/02/17 12:55 PM",
      "commitNameOld": "a4d4a23785356e6a19d0db3a2dec8ae8cf861273",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 1.78,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,5 @@\n     void abortMultipartUpload(String uploadId) throws AmazonClientException {\n+      LOG.debug(\"Aborting multipart upload {}\", uploadId);\n       s3.abortMultipartUpload(\n           new AbortMultipartUploadRequest(bucket, key, uploadId));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    void abortMultipartUpload(String uploadId) throws AmazonClientException {\n      LOG.debug(\"Aborting multipart upload {}\", uploadId);\n      s3.abortMultipartUpload(\n          new AbortMultipartUploadRequest(bucket, key, uploadId));\n    }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "6c348c56918973fd988b110e79231324a8befe12": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13560. S3ABlockOutputStream to support huge (many GB) file writes. Contributed by Steve Loughran\n",
      "commitDate": "18/10/16 1:16 PM",
      "commitName": "6c348c56918973fd988b110e79231324a8befe12",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,4 @@\n+    void abortMultipartUpload(String uploadId) throws AmazonClientException {\n+      s3.abortMultipartUpload(\n+          new AbortMultipartUploadRequest(bucket, key, uploadId));\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    void abortMultipartUpload(String uploadId) throws AmazonClientException {\n      s3.abortMultipartUpload(\n          new AbortMultipartUploadRequest(bucket, key, uploadId));\n    }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java"
    }
  }
}