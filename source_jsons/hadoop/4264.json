{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HAUtil.java",
  "functionName": "getNameNodeIdOfOtherNodes",
  "functionId": "getNameNodeIdOfOtherNodes___conf-Configuration__nsId-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HAUtil.java",
  "functionStartLine": 162,
  "functionEndLine": 190,
  "numCommitsSeen": 68,
  "timeTaken": 2531,
  "changeHistory": [
    "49dfad942970459297f72632ed8dfd353e0c86de",
    "6f8003dc7bc9e8be7b0512c514d370c303faf003",
    "fb95fce24056c0b0aa5b77683c684fe1b68c4f76"
  ],
  "changeHistoryShort": {
    "49dfad942970459297f72632ed8dfd353e0c86de": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
    "6f8003dc7bc9e8be7b0512c514d370c303faf003": "Ybodychange",
    "fb95fce24056c0b0aa5b77683c684fe1b68c4f76": "Yintroduced"
  },
  "changeHistoryDetails": {
    "49dfad942970459297f72632ed8dfd353e0c86de": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-6440. Support more than 2 NameNodes. Contributed by Jesse Yates.\n",
      "commitDate": "23/06/15 5:26 PM",
      "commitName": "49dfad942970459297f72632ed8dfd353e0c86de",
      "commitAuthor": "Aaron T. Myers",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-6440. Support more than 2 NameNodes. Contributed by Jesse Yates.\n",
          "commitDate": "23/06/15 5:26 PM",
          "commitName": "49dfad942970459297f72632ed8dfd353e0c86de",
          "commitAuthor": "Aaron T. Myers",
          "commitDateOld": "21/04/15 9:59 PM",
          "commitNameOld": "6f8003dc7bc9e8be7b0512c514d370c303faf003",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 62.81,
          "commitsBetweenForRepo": 570,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,29 @@\n-  public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) {\n+  public static List\u003cString\u003e getNameNodeIdOfOtherNodes(Configuration conf, String nsId) {\n     Preconditions.checkArgument(nsId !\u003d null,\n         \"Could not determine namespace id. Please ensure that this \" +\n         \"machine is one of the machines listed as a NN RPC address, \" +\n         \"or configure \" + DFSConfigKeys.DFS_NAMESERVICE_ID);\n     \n     Collection\u003cString\u003e nnIds \u003d DFSUtilClient.getNameNodeIds(conf, nsId);\n     String myNNId \u003d conf.get(DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY);\n     Preconditions.checkArgument(nnIds !\u003d null,\n         \"Could not determine namenode ids in namespace \u0027%s\u0027. \" +\n         \"Please configure \" +\n         DFSUtil.addKeySuffixes(DFSConfigKeys.DFS_HA_NAMENODES_KEY_PREFIX,\n             nsId),\n         nsId);\n-    Preconditions.checkArgument(nnIds.size() \u003d\u003d 2,\n-        \"Expected exactly 2 NameNodes in namespace \u0027%s\u0027. \" +\n-        \"Instead, got only %s (NN ids were \u0027%s\u0027\",\n-        nsId, nnIds.size(), Joiner.on(\"\u0027,\u0027\").join(nnIds));\n+    Preconditions.checkArgument(nnIds.size() \u003e\u003d 2,\n+        \"Expected at least 2 NameNodes in namespace \u0027%s\u0027. \" +\n+          \"Instead, got only %s (NN ids were \u0027%s\u0027)\",\n+          nsId, nnIds.size(), Joiner.on(\"\u0027,\u0027\").join(nnIds));\n     Preconditions.checkState(myNNId !\u003d null \u0026\u0026 !myNNId.isEmpty(),\n         \"Could not determine own NN ID in namespace \u0027%s\u0027. Please \" +\n         \"ensure that this node is one of the machines listed as an \" +\n         \"NN RPC address, or configure \" + DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY,\n         nsId);\n \n-    ArrayList\u003cString\u003e nnSet \u003d Lists.newArrayList(nnIds);\n-    nnSet.remove(myNNId);\n-    assert nnSet.size() \u003d\u003d 1;\n-    return nnSet.get(0);\n+    ArrayList\u003cString\u003e namenodes \u003d Lists.newArrayList(nnIds);\n+    namenodes.remove(myNNId);\n+    assert namenodes.size() \u003e\u003d 1;\n+    return namenodes;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cString\u003e getNameNodeIdOfOtherNodes(Configuration conf, String nsId) {\n    Preconditions.checkArgument(nsId !\u003d null,\n        \"Could not determine namespace id. Please ensure that this \" +\n        \"machine is one of the machines listed as a NN RPC address, \" +\n        \"or configure \" + DFSConfigKeys.DFS_NAMESERVICE_ID);\n    \n    Collection\u003cString\u003e nnIds \u003d DFSUtilClient.getNameNodeIds(conf, nsId);\n    String myNNId \u003d conf.get(DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY);\n    Preconditions.checkArgument(nnIds !\u003d null,\n        \"Could not determine namenode ids in namespace \u0027%s\u0027. \" +\n        \"Please configure \" +\n        DFSUtil.addKeySuffixes(DFSConfigKeys.DFS_HA_NAMENODES_KEY_PREFIX,\n            nsId),\n        nsId);\n    Preconditions.checkArgument(nnIds.size() \u003e\u003d 2,\n        \"Expected at least 2 NameNodes in namespace \u0027%s\u0027. \" +\n          \"Instead, got only %s (NN ids were \u0027%s\u0027)\",\n          nsId, nnIds.size(), Joiner.on(\"\u0027,\u0027\").join(nnIds));\n    Preconditions.checkState(myNNId !\u003d null \u0026\u0026 !myNNId.isEmpty(),\n        \"Could not determine own NN ID in namespace \u0027%s\u0027. Please \" +\n        \"ensure that this node is one of the machines listed as an \" +\n        \"NN RPC address, or configure \" + DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY,\n        nsId);\n\n    ArrayList\u003cString\u003e namenodes \u003d Lists.newArrayList(nnIds);\n    namenodes.remove(myNNId);\n    assert namenodes.size() \u003e\u003d 1;\n    return namenodes;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HAUtil.java",
          "extendedDetails": {
            "oldValue": "getNameNodeIdOfOtherNode",
            "newValue": "getNameNodeIdOfOtherNodes"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-6440. Support more than 2 NameNodes. Contributed by Jesse Yates.\n",
          "commitDate": "23/06/15 5:26 PM",
          "commitName": "49dfad942970459297f72632ed8dfd353e0c86de",
          "commitAuthor": "Aaron T. Myers",
          "commitDateOld": "21/04/15 9:59 PM",
          "commitNameOld": "6f8003dc7bc9e8be7b0512c514d370c303faf003",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 62.81,
          "commitsBetweenForRepo": 570,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,29 @@\n-  public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) {\n+  public static List\u003cString\u003e getNameNodeIdOfOtherNodes(Configuration conf, String nsId) {\n     Preconditions.checkArgument(nsId !\u003d null,\n         \"Could not determine namespace id. Please ensure that this \" +\n         \"machine is one of the machines listed as a NN RPC address, \" +\n         \"or configure \" + DFSConfigKeys.DFS_NAMESERVICE_ID);\n     \n     Collection\u003cString\u003e nnIds \u003d DFSUtilClient.getNameNodeIds(conf, nsId);\n     String myNNId \u003d conf.get(DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY);\n     Preconditions.checkArgument(nnIds !\u003d null,\n         \"Could not determine namenode ids in namespace \u0027%s\u0027. \" +\n         \"Please configure \" +\n         DFSUtil.addKeySuffixes(DFSConfigKeys.DFS_HA_NAMENODES_KEY_PREFIX,\n             nsId),\n         nsId);\n-    Preconditions.checkArgument(nnIds.size() \u003d\u003d 2,\n-        \"Expected exactly 2 NameNodes in namespace \u0027%s\u0027. \" +\n-        \"Instead, got only %s (NN ids were \u0027%s\u0027\",\n-        nsId, nnIds.size(), Joiner.on(\"\u0027,\u0027\").join(nnIds));\n+    Preconditions.checkArgument(nnIds.size() \u003e\u003d 2,\n+        \"Expected at least 2 NameNodes in namespace \u0027%s\u0027. \" +\n+          \"Instead, got only %s (NN ids were \u0027%s\u0027)\",\n+          nsId, nnIds.size(), Joiner.on(\"\u0027,\u0027\").join(nnIds));\n     Preconditions.checkState(myNNId !\u003d null \u0026\u0026 !myNNId.isEmpty(),\n         \"Could not determine own NN ID in namespace \u0027%s\u0027. Please \" +\n         \"ensure that this node is one of the machines listed as an \" +\n         \"NN RPC address, or configure \" + DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY,\n         nsId);\n \n-    ArrayList\u003cString\u003e nnSet \u003d Lists.newArrayList(nnIds);\n-    nnSet.remove(myNNId);\n-    assert nnSet.size() \u003d\u003d 1;\n-    return nnSet.get(0);\n+    ArrayList\u003cString\u003e namenodes \u003d Lists.newArrayList(nnIds);\n+    namenodes.remove(myNNId);\n+    assert namenodes.size() \u003e\u003d 1;\n+    return namenodes;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cString\u003e getNameNodeIdOfOtherNodes(Configuration conf, String nsId) {\n    Preconditions.checkArgument(nsId !\u003d null,\n        \"Could not determine namespace id. Please ensure that this \" +\n        \"machine is one of the machines listed as a NN RPC address, \" +\n        \"or configure \" + DFSConfigKeys.DFS_NAMESERVICE_ID);\n    \n    Collection\u003cString\u003e nnIds \u003d DFSUtilClient.getNameNodeIds(conf, nsId);\n    String myNNId \u003d conf.get(DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY);\n    Preconditions.checkArgument(nnIds !\u003d null,\n        \"Could not determine namenode ids in namespace \u0027%s\u0027. \" +\n        \"Please configure \" +\n        DFSUtil.addKeySuffixes(DFSConfigKeys.DFS_HA_NAMENODES_KEY_PREFIX,\n            nsId),\n        nsId);\n    Preconditions.checkArgument(nnIds.size() \u003e\u003d 2,\n        \"Expected at least 2 NameNodes in namespace \u0027%s\u0027. \" +\n          \"Instead, got only %s (NN ids were \u0027%s\u0027)\",\n          nsId, nnIds.size(), Joiner.on(\"\u0027,\u0027\").join(nnIds));\n    Preconditions.checkState(myNNId !\u003d null \u0026\u0026 !myNNId.isEmpty(),\n        \"Could not determine own NN ID in namespace \u0027%s\u0027. Please \" +\n        \"ensure that this node is one of the machines listed as an \" +\n        \"NN RPC address, or configure \" + DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY,\n        nsId);\n\n    ArrayList\u003cString\u003e namenodes \u003d Lists.newArrayList(nnIds);\n    namenodes.remove(myNNId);\n    assert namenodes.size() \u003e\u003d 1;\n    return namenodes;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HAUtil.java",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "List\u003cString\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6440. Support more than 2 NameNodes. Contributed by Jesse Yates.\n",
          "commitDate": "23/06/15 5:26 PM",
          "commitName": "49dfad942970459297f72632ed8dfd353e0c86de",
          "commitAuthor": "Aaron T. Myers",
          "commitDateOld": "21/04/15 9:59 PM",
          "commitNameOld": "6f8003dc7bc9e8be7b0512c514d370c303faf003",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 62.81,
          "commitsBetweenForRepo": 570,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,29 @@\n-  public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) {\n+  public static List\u003cString\u003e getNameNodeIdOfOtherNodes(Configuration conf, String nsId) {\n     Preconditions.checkArgument(nsId !\u003d null,\n         \"Could not determine namespace id. Please ensure that this \" +\n         \"machine is one of the machines listed as a NN RPC address, \" +\n         \"or configure \" + DFSConfigKeys.DFS_NAMESERVICE_ID);\n     \n     Collection\u003cString\u003e nnIds \u003d DFSUtilClient.getNameNodeIds(conf, nsId);\n     String myNNId \u003d conf.get(DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY);\n     Preconditions.checkArgument(nnIds !\u003d null,\n         \"Could not determine namenode ids in namespace \u0027%s\u0027. \" +\n         \"Please configure \" +\n         DFSUtil.addKeySuffixes(DFSConfigKeys.DFS_HA_NAMENODES_KEY_PREFIX,\n             nsId),\n         nsId);\n-    Preconditions.checkArgument(nnIds.size() \u003d\u003d 2,\n-        \"Expected exactly 2 NameNodes in namespace \u0027%s\u0027. \" +\n-        \"Instead, got only %s (NN ids were \u0027%s\u0027\",\n-        nsId, nnIds.size(), Joiner.on(\"\u0027,\u0027\").join(nnIds));\n+    Preconditions.checkArgument(nnIds.size() \u003e\u003d 2,\n+        \"Expected at least 2 NameNodes in namespace \u0027%s\u0027. \" +\n+          \"Instead, got only %s (NN ids were \u0027%s\u0027)\",\n+          nsId, nnIds.size(), Joiner.on(\"\u0027,\u0027\").join(nnIds));\n     Preconditions.checkState(myNNId !\u003d null \u0026\u0026 !myNNId.isEmpty(),\n         \"Could not determine own NN ID in namespace \u0027%s\u0027. Please \" +\n         \"ensure that this node is one of the machines listed as an \" +\n         \"NN RPC address, or configure \" + DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY,\n         nsId);\n \n-    ArrayList\u003cString\u003e nnSet \u003d Lists.newArrayList(nnIds);\n-    nnSet.remove(myNNId);\n-    assert nnSet.size() \u003d\u003d 1;\n-    return nnSet.get(0);\n+    ArrayList\u003cString\u003e namenodes \u003d Lists.newArrayList(nnIds);\n+    namenodes.remove(myNNId);\n+    assert namenodes.size() \u003e\u003d 1;\n+    return namenodes;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cString\u003e getNameNodeIdOfOtherNodes(Configuration conf, String nsId) {\n    Preconditions.checkArgument(nsId !\u003d null,\n        \"Could not determine namespace id. Please ensure that this \" +\n        \"machine is one of the machines listed as a NN RPC address, \" +\n        \"or configure \" + DFSConfigKeys.DFS_NAMESERVICE_ID);\n    \n    Collection\u003cString\u003e nnIds \u003d DFSUtilClient.getNameNodeIds(conf, nsId);\n    String myNNId \u003d conf.get(DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY);\n    Preconditions.checkArgument(nnIds !\u003d null,\n        \"Could not determine namenode ids in namespace \u0027%s\u0027. \" +\n        \"Please configure \" +\n        DFSUtil.addKeySuffixes(DFSConfigKeys.DFS_HA_NAMENODES_KEY_PREFIX,\n            nsId),\n        nsId);\n    Preconditions.checkArgument(nnIds.size() \u003e\u003d 2,\n        \"Expected at least 2 NameNodes in namespace \u0027%s\u0027. \" +\n          \"Instead, got only %s (NN ids were \u0027%s\u0027)\",\n          nsId, nnIds.size(), Joiner.on(\"\u0027,\u0027\").join(nnIds));\n    Preconditions.checkState(myNNId !\u003d null \u0026\u0026 !myNNId.isEmpty(),\n        \"Could not determine own NN ID in namespace \u0027%s\u0027. Please \" +\n        \"ensure that this node is one of the machines listed as an \" +\n        \"NN RPC address, or configure \" + DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY,\n        nsId);\n\n    ArrayList\u003cString\u003e namenodes \u003d Lists.newArrayList(nnIds);\n    namenodes.remove(myNNId);\n    assert namenodes.size() \u003e\u003d 1;\n    return namenodes;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HAUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "6f8003dc7bc9e8be7b0512c514d370c303faf003": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8185. Separate client related routines in HAUtil into a new class. Contributed by Haohui Mai.\n",
      "commitDate": "21/04/15 9:59 PM",
      "commitName": "6f8003dc7bc9e8be7b0512c514d370c303faf003",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "10/04/15 7:38 PM",
      "commitNameOld": "60da0e49e7316892d63e9c7cdc3214057e68009a",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 11.1,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) {\n     Preconditions.checkArgument(nsId !\u003d null,\n         \"Could not determine namespace id. Please ensure that this \" +\n         \"machine is one of the machines listed as a NN RPC address, \" +\n         \"or configure \" + DFSConfigKeys.DFS_NAMESERVICE_ID);\n     \n-    Collection\u003cString\u003e nnIds \u003d DFSUtil.getNameNodeIds(conf, nsId);\n+    Collection\u003cString\u003e nnIds \u003d DFSUtilClient.getNameNodeIds(conf, nsId);\n     String myNNId \u003d conf.get(DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY);\n     Preconditions.checkArgument(nnIds !\u003d null,\n         \"Could not determine namenode ids in namespace \u0027%s\u0027. \" +\n         \"Please configure \" +\n         DFSUtil.addKeySuffixes(DFSConfigKeys.DFS_HA_NAMENODES_KEY_PREFIX,\n             nsId),\n         nsId);\n     Preconditions.checkArgument(nnIds.size() \u003d\u003d 2,\n         \"Expected exactly 2 NameNodes in namespace \u0027%s\u0027. \" +\n         \"Instead, got only %s (NN ids were \u0027%s\u0027\",\n         nsId, nnIds.size(), Joiner.on(\"\u0027,\u0027\").join(nnIds));\n     Preconditions.checkState(myNNId !\u003d null \u0026\u0026 !myNNId.isEmpty(),\n         \"Could not determine own NN ID in namespace \u0027%s\u0027. Please \" +\n         \"ensure that this node is one of the machines listed as an \" +\n         \"NN RPC address, or configure \" + DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY,\n         nsId);\n \n     ArrayList\u003cString\u003e nnSet \u003d Lists.newArrayList(nnIds);\n     nnSet.remove(myNNId);\n     assert nnSet.size() \u003d\u003d 1;\n     return nnSet.get(0);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) {\n    Preconditions.checkArgument(nsId !\u003d null,\n        \"Could not determine namespace id. Please ensure that this \" +\n        \"machine is one of the machines listed as a NN RPC address, \" +\n        \"or configure \" + DFSConfigKeys.DFS_NAMESERVICE_ID);\n    \n    Collection\u003cString\u003e nnIds \u003d DFSUtilClient.getNameNodeIds(conf, nsId);\n    String myNNId \u003d conf.get(DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY);\n    Preconditions.checkArgument(nnIds !\u003d null,\n        \"Could not determine namenode ids in namespace \u0027%s\u0027. \" +\n        \"Please configure \" +\n        DFSUtil.addKeySuffixes(DFSConfigKeys.DFS_HA_NAMENODES_KEY_PREFIX,\n            nsId),\n        nsId);\n    Preconditions.checkArgument(nnIds.size() \u003d\u003d 2,\n        \"Expected exactly 2 NameNodes in namespace \u0027%s\u0027. \" +\n        \"Instead, got only %s (NN ids were \u0027%s\u0027\",\n        nsId, nnIds.size(), Joiner.on(\"\u0027,\u0027\").join(nnIds));\n    Preconditions.checkState(myNNId !\u003d null \u0026\u0026 !myNNId.isEmpty(),\n        \"Could not determine own NN ID in namespace \u0027%s\u0027. Please \" +\n        \"ensure that this node is one of the machines listed as an \" +\n        \"NN RPC address, or configure \" + DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY,\n        nsId);\n\n    ArrayList\u003cString\u003e nnSet \u003d Lists.newArrayList(nnIds);\n    nnSet.remove(myNNId);\n    assert nnSet.size() \u003d\u003d 1;\n    return nnSet.get(0);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HAUtil.java",
      "extendedDetails": {}
    },
    "fb95fce24056c0b0aa5b77683c684fe1b68c4f76": {
      "type": "Yintroduced",
      "commitMessage": "Fix issue with NN/DN re-registration.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1358347 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/07/12 11:59 AM",
      "commitName": "fb95fce24056c0b0aa5b77683c684fe1b68c4f76",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,29 @@\n+  public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) {\n+    Preconditions.checkArgument(nsId !\u003d null,\n+        \"Could not determine namespace id. Please ensure that this \" +\n+        \"machine is one of the machines listed as a NN RPC address, \" +\n+        \"or configure \" + DFSConfigKeys.DFS_NAMESERVICE_ID);\n+    \n+    Collection\u003cString\u003e nnIds \u003d DFSUtil.getNameNodeIds(conf, nsId);\n+    String myNNId \u003d conf.get(DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY);\n+    Preconditions.checkArgument(nnIds !\u003d null,\n+        \"Could not determine namenode ids in namespace \u0027%s\u0027. \" +\n+        \"Please configure \" +\n+        DFSUtil.addKeySuffixes(DFSConfigKeys.DFS_HA_NAMENODES_KEY_PREFIX,\n+            nsId),\n+        nsId);\n+    Preconditions.checkArgument(nnIds.size() \u003d\u003d 2,\n+        \"Expected exactly 2 NameNodes in namespace \u0027%s\u0027. \" +\n+        \"Instead, got only %s (NN ids were \u0027%s\u0027\",\n+        nsId, nnIds.size(), Joiner.on(\"\u0027,\u0027\").join(nnIds));\n+    Preconditions.checkState(myNNId !\u003d null \u0026\u0026 !myNNId.isEmpty(),\n+        \"Could not determine own NN ID in namespace \u0027%s\u0027. Please \" +\n+        \"ensure that this node is one of the machines listed as an \" +\n+        \"NN RPC address, or configure \" + DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY,\n+        nsId);\n+\n+    ArrayList\u003cString\u003e nnSet \u003d Lists.newArrayList(nnIds);\n+    nnSet.remove(myNNId);\n+    assert nnSet.size() \u003d\u003d 1;\n+    return nnSet.get(0);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) {\n    Preconditions.checkArgument(nsId !\u003d null,\n        \"Could not determine namespace id. Please ensure that this \" +\n        \"machine is one of the machines listed as a NN RPC address, \" +\n        \"or configure \" + DFSConfigKeys.DFS_NAMESERVICE_ID);\n    \n    Collection\u003cString\u003e nnIds \u003d DFSUtil.getNameNodeIds(conf, nsId);\n    String myNNId \u003d conf.get(DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY);\n    Preconditions.checkArgument(nnIds !\u003d null,\n        \"Could not determine namenode ids in namespace \u0027%s\u0027. \" +\n        \"Please configure \" +\n        DFSUtil.addKeySuffixes(DFSConfigKeys.DFS_HA_NAMENODES_KEY_PREFIX,\n            nsId),\n        nsId);\n    Preconditions.checkArgument(nnIds.size() \u003d\u003d 2,\n        \"Expected exactly 2 NameNodes in namespace \u0027%s\u0027. \" +\n        \"Instead, got only %s (NN ids were \u0027%s\u0027\",\n        nsId, nnIds.size(), Joiner.on(\"\u0027,\u0027\").join(nnIds));\n    Preconditions.checkState(myNNId !\u003d null \u0026\u0026 !myNNId.isEmpty(),\n        \"Could not determine own NN ID in namespace \u0027%s\u0027. Please \" +\n        \"ensure that this node is one of the machines listed as an \" +\n        \"NN RPC address, or configure \" + DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY,\n        nsId);\n\n    ArrayList\u003cString\u003e nnSet \u003d Lists.newArrayList(nnIds);\n    nnSet.remove(myNNId);\n    assert nnSet.size() \u003d\u003d 1;\n    return nnSet.get(0);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HAUtil.java"
    }
  }
}