{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalResolver.java",
  "functionName": "chooseFirstNamespace",
  "functionId": "chooseFirstNamespace___path-String__loc-PathLocation",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/order/LocalResolver.java",
  "functionStartLine": 99,
  "functionEndLine": 115,
  "numCommitsSeen": 7,
  "timeTaken": 3353,
  "changeHistory": [
    "cfc3a1c8f06fba4f4bd5ffe8bb2a6944d066948e",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "e71bc00a471422ddb26dd54e706f09f0fe09925c"
  ],
  "changeHistoryShort": {
    "cfc3a1c8f06fba4f4bd5ffe8bb2a6944d066948e": "Ymultichange(Yrename,Ymodifierchange,Ybodychange,Yparametermetachange)",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "e71bc00a471422ddb26dd54e706f09f0fe09925c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cfc3a1c8f06fba4f4bd5ffe8bb2a6944d066948e": {
      "type": "Ymultichange(Yrename,Ymodifierchange,Ybodychange,Yparametermetachange)",
      "commitMessage": "HDFS-13291. RBF: Implement available space based OrderResolver. Contributed by Yiqun Lin.\n",
      "commitDate": "26/03/18 3:33 AM",
      "commitName": "cfc3a1c8f06fba4f4bd5ffe8bb2a6944d066948e",
      "commitAuthor": "Yiqun Lin",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-13291. RBF: Implement available space based OrderResolver. Contributed by Yiqun Lin.\n",
          "commitDate": "26/03/18 3:33 AM",
          "commitName": "cfc3a1c8f06fba4f4bd5ffe8bb2a6944d066948e",
          "commitAuthor": "Yiqun Lin",
          "commitDateOld": "19/03/18 10:13 PM",
          "commitNameOld": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
          "commitAuthorOld": "weiy",
          "daysBetweenCommits": 6.22,
          "commitsBetweenForRepo": 169,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public String getFirstNamespace(final String path, final PathLocation loc) {\n+  protected String chooseFirstNamespace(String path, PathLocation loc) {\n     String localSubcluster \u003d null;\n     String clientAddr \u003d getClientAddr();\n-    Map\u003cString, String\u003e nodeToSubcluster \u003d getSubclusterMappings();\n-    if (nodeToSubcluster !\u003d null) {\n-      localSubcluster \u003d nodeToSubcluster.get(clientAddr);\n+    Map\u003cString, String\u003e subclusterInfo \u003d getSubclusterMapping();\n+    if (subclusterInfo !\u003d null) {\n+      localSubcluster \u003d subclusterInfo.get(clientAddr);\n       if (localSubcluster !\u003d null) {\n         LOG.debug(\"Local namespace for {} is {}\", clientAddr, localSubcluster);\n       } else {\n         LOG.error(\"Cannot get local namespace for {}\", clientAddr);\n       }\n     } else {\n       LOG.error(\"Cannot get node mapping when resolving {} at {} from {}\",\n           path, loc, clientAddr);\n     }\n     return localSubcluster;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected String chooseFirstNamespace(String path, PathLocation loc) {\n    String localSubcluster \u003d null;\n    String clientAddr \u003d getClientAddr();\n    Map\u003cString, String\u003e subclusterInfo \u003d getSubclusterMapping();\n    if (subclusterInfo !\u003d null) {\n      localSubcluster \u003d subclusterInfo.get(clientAddr);\n      if (localSubcluster !\u003d null) {\n        LOG.debug(\"Local namespace for {} is {}\", clientAddr, localSubcluster);\n      } else {\n        LOG.error(\"Cannot get local namespace for {}\", clientAddr);\n      }\n    } else {\n      LOG.error(\"Cannot get node mapping when resolving {} at {} from {}\",\n          path, loc, clientAddr);\n    }\n    return localSubcluster;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/order/LocalResolver.java",
          "extendedDetails": {
            "oldValue": "getFirstNamespace",
            "newValue": "chooseFirstNamespace"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-13291. RBF: Implement available space based OrderResolver. Contributed by Yiqun Lin.\n",
          "commitDate": "26/03/18 3:33 AM",
          "commitName": "cfc3a1c8f06fba4f4bd5ffe8bb2a6944d066948e",
          "commitAuthor": "Yiqun Lin",
          "commitDateOld": "19/03/18 10:13 PM",
          "commitNameOld": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
          "commitAuthorOld": "weiy",
          "daysBetweenCommits": 6.22,
          "commitsBetweenForRepo": 169,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public String getFirstNamespace(final String path, final PathLocation loc) {\n+  protected String chooseFirstNamespace(String path, PathLocation loc) {\n     String localSubcluster \u003d null;\n     String clientAddr \u003d getClientAddr();\n-    Map\u003cString, String\u003e nodeToSubcluster \u003d getSubclusterMappings();\n-    if (nodeToSubcluster !\u003d null) {\n-      localSubcluster \u003d nodeToSubcluster.get(clientAddr);\n+    Map\u003cString, String\u003e subclusterInfo \u003d getSubclusterMapping();\n+    if (subclusterInfo !\u003d null) {\n+      localSubcluster \u003d subclusterInfo.get(clientAddr);\n       if (localSubcluster !\u003d null) {\n         LOG.debug(\"Local namespace for {} is {}\", clientAddr, localSubcluster);\n       } else {\n         LOG.error(\"Cannot get local namespace for {}\", clientAddr);\n       }\n     } else {\n       LOG.error(\"Cannot get node mapping when resolving {} at {} from {}\",\n           path, loc, clientAddr);\n     }\n     return localSubcluster;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected String chooseFirstNamespace(String path, PathLocation loc) {\n    String localSubcluster \u003d null;\n    String clientAddr \u003d getClientAddr();\n    Map\u003cString, String\u003e subclusterInfo \u003d getSubclusterMapping();\n    if (subclusterInfo !\u003d null) {\n      localSubcluster \u003d subclusterInfo.get(clientAddr);\n      if (localSubcluster !\u003d null) {\n        LOG.debug(\"Local namespace for {} is {}\", clientAddr, localSubcluster);\n      } else {\n        LOG.error(\"Cannot get local namespace for {}\", clientAddr);\n      }\n    } else {\n      LOG.error(\"Cannot get node mapping when resolving {} at {} from {}\",\n          path, loc, clientAddr);\n    }\n    return localSubcluster;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/order/LocalResolver.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13291. RBF: Implement available space based OrderResolver. Contributed by Yiqun Lin.\n",
          "commitDate": "26/03/18 3:33 AM",
          "commitName": "cfc3a1c8f06fba4f4bd5ffe8bb2a6944d066948e",
          "commitAuthor": "Yiqun Lin",
          "commitDateOld": "19/03/18 10:13 PM",
          "commitNameOld": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
          "commitAuthorOld": "weiy",
          "daysBetweenCommits": 6.22,
          "commitsBetweenForRepo": 169,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public String getFirstNamespace(final String path, final PathLocation loc) {\n+  protected String chooseFirstNamespace(String path, PathLocation loc) {\n     String localSubcluster \u003d null;\n     String clientAddr \u003d getClientAddr();\n-    Map\u003cString, String\u003e nodeToSubcluster \u003d getSubclusterMappings();\n-    if (nodeToSubcluster !\u003d null) {\n-      localSubcluster \u003d nodeToSubcluster.get(clientAddr);\n+    Map\u003cString, String\u003e subclusterInfo \u003d getSubclusterMapping();\n+    if (subclusterInfo !\u003d null) {\n+      localSubcluster \u003d subclusterInfo.get(clientAddr);\n       if (localSubcluster !\u003d null) {\n         LOG.debug(\"Local namespace for {} is {}\", clientAddr, localSubcluster);\n       } else {\n         LOG.error(\"Cannot get local namespace for {}\", clientAddr);\n       }\n     } else {\n       LOG.error(\"Cannot get node mapping when resolving {} at {} from {}\",\n           path, loc, clientAddr);\n     }\n     return localSubcluster;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected String chooseFirstNamespace(String path, PathLocation loc) {\n    String localSubcluster \u003d null;\n    String clientAddr \u003d getClientAddr();\n    Map\u003cString, String\u003e subclusterInfo \u003d getSubclusterMapping();\n    if (subclusterInfo !\u003d null) {\n      localSubcluster \u003d subclusterInfo.get(clientAddr);\n      if (localSubcluster !\u003d null) {\n        LOG.debug(\"Local namespace for {} is {}\", clientAddr, localSubcluster);\n      } else {\n        LOG.error(\"Cannot get local namespace for {}\", clientAddr);\n      }\n    } else {\n      LOG.error(\"Cannot get node mapping when resolving {} at {} from {}\",\n          path, loc, clientAddr);\n    }\n    return localSubcluster;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/order/LocalResolver.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HDFS-13291. RBF: Implement available space based OrderResolver. Contributed by Yiqun Lin.\n",
          "commitDate": "26/03/18 3:33 AM",
          "commitName": "cfc3a1c8f06fba4f4bd5ffe8bb2a6944d066948e",
          "commitAuthor": "Yiqun Lin",
          "commitDateOld": "19/03/18 10:13 PM",
          "commitNameOld": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
          "commitAuthorOld": "weiy",
          "daysBetweenCommits": 6.22,
          "commitsBetweenForRepo": 169,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public String getFirstNamespace(final String path, final PathLocation loc) {\n+  protected String chooseFirstNamespace(String path, PathLocation loc) {\n     String localSubcluster \u003d null;\n     String clientAddr \u003d getClientAddr();\n-    Map\u003cString, String\u003e nodeToSubcluster \u003d getSubclusterMappings();\n-    if (nodeToSubcluster !\u003d null) {\n-      localSubcluster \u003d nodeToSubcluster.get(clientAddr);\n+    Map\u003cString, String\u003e subclusterInfo \u003d getSubclusterMapping();\n+    if (subclusterInfo !\u003d null) {\n+      localSubcluster \u003d subclusterInfo.get(clientAddr);\n       if (localSubcluster !\u003d null) {\n         LOG.debug(\"Local namespace for {} is {}\", clientAddr, localSubcluster);\n       } else {\n         LOG.error(\"Cannot get local namespace for {}\", clientAddr);\n       }\n     } else {\n       LOG.error(\"Cannot get node mapping when resolving {} at {} from {}\",\n           path, loc, clientAddr);\n     }\n     return localSubcluster;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected String chooseFirstNamespace(String path, PathLocation loc) {\n    String localSubcluster \u003d null;\n    String clientAddr \u003d getClientAddr();\n    Map\u003cString, String\u003e subclusterInfo \u003d getSubclusterMapping();\n    if (subclusterInfo !\u003d null) {\n      localSubcluster \u003d subclusterInfo.get(clientAddr);\n      if (localSubcluster !\u003d null) {\n        LOG.debug(\"Local namespace for {} is {}\", clientAddr, localSubcluster);\n      } else {\n        LOG.error(\"Cannot get local namespace for {}\", clientAddr);\n      }\n    } else {\n      LOG.error(\"Cannot get node mapping when resolving {} at {} from {}\",\n          path, loc, clientAddr);\n    }\n    return localSubcluster;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/order/LocalResolver.java",
          "extendedDetails": {
            "oldValue": "[path-String(modifiers-final), loc-PathLocation(modifiers-final)]",
            "newValue": "[path-String, loc-PathLocation]"
          }
        }
      ]
    },
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String getFirstNamespace(final String path, final PathLocation loc) {\n    String localSubcluster \u003d null;\n    String clientAddr \u003d getClientAddr();\n    Map\u003cString, String\u003e nodeToSubcluster \u003d getSubclusterMappings();\n    if (nodeToSubcluster !\u003d null) {\n      localSubcluster \u003d nodeToSubcluster.get(clientAddr);\n      if (localSubcluster !\u003d null) {\n        LOG.debug(\"Local namespace for {} is {}\", clientAddr, localSubcluster);\n      } else {\n        LOG.error(\"Cannot get local namespace for {}\", clientAddr);\n      }\n    } else {\n      LOG.error(\"Cannot get node mapping when resolving {} at {} from {}\",\n          path, loc, clientAddr);\n    }\n    return localSubcluster;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/order/LocalResolver.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/order/LocalResolver.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/order/LocalResolver.java"
      }
    },
    "e71bc00a471422ddb26dd54e706f09f0fe09925c": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13224. RBF: Resolvers to support mount points across multiple subclusters. Contributed by Inigo Goiri.\n",
      "commitDate": "15/03/18 10:32 AM",
      "commitName": "e71bc00a471422ddb26dd54e706f09f0fe09925c",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,17 @@\n+  public String getFirstNamespace(final String path, final PathLocation loc) {\n+    String localSubcluster \u003d null;\n+    String clientAddr \u003d getClientAddr();\n+    Map\u003cString, String\u003e nodeToSubcluster \u003d getSubclusterMappings();\n+    if (nodeToSubcluster !\u003d null) {\n+      localSubcluster \u003d nodeToSubcluster.get(clientAddr);\n+      if (localSubcluster !\u003d null) {\n+        LOG.debug(\"Local namespace for {} is {}\", clientAddr, localSubcluster);\n+      } else {\n+        LOG.error(\"Cannot get local namespace for {}\", clientAddr);\n+      }\n+    } else {\n+      LOG.error(\"Cannot get node mapping when resolving {} at {} from {}\",\n+          path, loc, clientAddr);\n+    }\n+    return localSubcluster;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getFirstNamespace(final String path, final PathLocation loc) {\n    String localSubcluster \u003d null;\n    String clientAddr \u003d getClientAddr();\n    Map\u003cString, String\u003e nodeToSubcluster \u003d getSubclusterMappings();\n    if (nodeToSubcluster !\u003d null) {\n      localSubcluster \u003d nodeToSubcluster.get(clientAddr);\n      if (localSubcluster !\u003d null) {\n        LOG.debug(\"Local namespace for {} is {}\", clientAddr, localSubcluster);\n      } else {\n        LOG.error(\"Cannot get local namespace for {}\", clientAddr);\n      }\n    } else {\n      LOG.error(\"Cannot get node mapping when resolving {} at {} from {}\",\n          path, loc, clientAddr);\n    }\n    return localSubcluster;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/resolver/order/LocalResolver.java"
    }
  }
}