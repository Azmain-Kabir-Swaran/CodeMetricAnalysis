{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeveldbTimelineStateStore.java",
  "functionName": "loadTokens",
  "functionId": "loadTokens___state-TimelineServiceState",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/recovery/LeveldbTimelineStateStore.java",
  "functionStartLine": 298,
  "functionEndLine": 320,
  "numCommitsSeen": 4,
  "timeTaken": 1824,
  "changeHistory": [
    "839e077faf4019d6efdcd89d95930023cd0b0a08",
    "a4aa1cb40504299d3401008fdabc795eafb28713",
    "1a78c0ff016097930edf68e8278f826b637e918c",
    "149512a83743715bb100feb6747b7e88301018ab"
  ],
  "changeHistoryShort": {
    "839e077faf4019d6efdcd89d95930023cd0b0a08": "Ybodychange",
    "a4aa1cb40504299d3401008fdabc795eafb28713": "Ybodychange",
    "1a78c0ff016097930edf68e8278f826b637e918c": "Ybodychange",
    "149512a83743715bb100feb6747b7e88301018ab": "Yintroduced"
  },
  "changeHistoryDetails": {
    "839e077faf4019d6efdcd89d95930023cd0b0a08": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6873. Moving logging APIs over to slf4j in hadoop-yarn-server-applicationhistoryservice. Contributed by Yeliang Cang.\n",
      "commitDate": "07/08/17 2:56 AM",
      "commitName": "839e077faf4019d6efdcd89d95930023cd0b0a08",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "31/07/17 8:15 PM",
      "commitNameOld": "a4aa1cb40504299d3401008fdabc795eafb28713",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 6.28,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private int loadTokens(TimelineServiceState state) throws IOException {\n     byte[] base \u003d KeyBuilder.newInstance().add(TOKEN_ENTRY_PREFIX)\n         .getBytesForLookup();\n     int numTokens \u003d 0;\n     LeveldbIterator iterator \u003d null;\n     try {\n       for (iterator \u003d new LeveldbIterator(db), iterator.seek(base);\n           iterator.hasNext(); iterator.next()) {\n         byte[] k \u003d iterator.peekNext().getKey();\n         if (!prefixMatches(base, base.length, k)) {\n           break;\n         }\n         byte[] v \u003d iterator.peekNext().getValue();\n         loadTokenData(state, v);\n         ++numTokens;\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     } finally {\n-      IOUtils.cleanup(LOG, iterator);\n+      IOUtils.cleanupWithLogger(LOG, iterator);\n     }\n     return numTokens;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int loadTokens(TimelineServiceState state) throws IOException {\n    byte[] base \u003d KeyBuilder.newInstance().add(TOKEN_ENTRY_PREFIX)\n        .getBytesForLookup();\n    int numTokens \u003d 0;\n    LeveldbIterator iterator \u003d null;\n    try {\n      for (iterator \u003d new LeveldbIterator(db), iterator.seek(base);\n          iterator.hasNext(); iterator.next()) {\n        byte[] k \u003d iterator.peekNext().getKey();\n        if (!prefixMatches(base, base.length, k)) {\n          break;\n        }\n        byte[] v \u003d iterator.peekNext().getValue();\n        loadTokenData(state, v);\n        ++numTokens;\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    } finally {\n      IOUtils.cleanupWithLogger(LOG, iterator);\n    }\n    return numTokens;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/recovery/LeveldbTimelineStateStore.java",
      "extendedDetails": {}
    },
    "a4aa1cb40504299d3401008fdabc795eafb28713": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-6873. Moving logging APIs over to slf4j in hadoop-yarn-server-applicationhistoryservice. Contributed by Yeliang Cang.\"\n\nThis reverts commit 1a78c0ff016097930edf68e8278f826b637e918c.\n",
      "commitDate": "31/07/17 8:15 PM",
      "commitName": "a4aa1cb40504299d3401008fdabc795eafb28713",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "31/07/17 6:53 PM",
      "commitNameOld": "1a78c0ff016097930edf68e8278f826b637e918c",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private int loadTokens(TimelineServiceState state) throws IOException {\n     byte[] base \u003d KeyBuilder.newInstance().add(TOKEN_ENTRY_PREFIX)\n         .getBytesForLookup();\n     int numTokens \u003d 0;\n     LeveldbIterator iterator \u003d null;\n     try {\n       for (iterator \u003d new LeveldbIterator(db), iterator.seek(base);\n           iterator.hasNext(); iterator.next()) {\n         byte[] k \u003d iterator.peekNext().getKey();\n         if (!prefixMatches(base, base.length, k)) {\n           break;\n         }\n         byte[] v \u003d iterator.peekNext().getValue();\n         loadTokenData(state, v);\n         ++numTokens;\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     } finally {\n-      IOUtils.cleanupWithLogger(LOG, iterator);\n+      IOUtils.cleanup(LOG, iterator);\n     }\n     return numTokens;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int loadTokens(TimelineServiceState state) throws IOException {\n    byte[] base \u003d KeyBuilder.newInstance().add(TOKEN_ENTRY_PREFIX)\n        .getBytesForLookup();\n    int numTokens \u003d 0;\n    LeveldbIterator iterator \u003d null;\n    try {\n      for (iterator \u003d new LeveldbIterator(db), iterator.seek(base);\n          iterator.hasNext(); iterator.next()) {\n        byte[] k \u003d iterator.peekNext().getKey();\n        if (!prefixMatches(base, base.length, k)) {\n          break;\n        }\n        byte[] v \u003d iterator.peekNext().getValue();\n        loadTokenData(state, v);\n        ++numTokens;\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    } finally {\n      IOUtils.cleanup(LOG, iterator);\n    }\n    return numTokens;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/recovery/LeveldbTimelineStateStore.java",
      "extendedDetails": {}
    },
    "1a78c0ff016097930edf68e8278f826b637e918c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6873. Moving logging APIs over to slf4j in hadoop-yarn-server-applicationhistoryservice. Contributed by Yeliang Cang.\n",
      "commitDate": "31/07/17 6:53 PM",
      "commitName": "1a78c0ff016097930edf68e8278f826b637e918c",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "23/12/14 6:25 PM",
      "commitNameOld": "149512a83743715bb100feb6747b7e88301018ab",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 950.98,
      "commitsBetweenForRepo": 6637,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private int loadTokens(TimelineServiceState state) throws IOException {\n     byte[] base \u003d KeyBuilder.newInstance().add(TOKEN_ENTRY_PREFIX)\n         .getBytesForLookup();\n     int numTokens \u003d 0;\n     LeveldbIterator iterator \u003d null;\n     try {\n       for (iterator \u003d new LeveldbIterator(db), iterator.seek(base);\n           iterator.hasNext(); iterator.next()) {\n         byte[] k \u003d iterator.peekNext().getKey();\n         if (!prefixMatches(base, base.length, k)) {\n           break;\n         }\n         byte[] v \u003d iterator.peekNext().getValue();\n         loadTokenData(state, v);\n         ++numTokens;\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     } finally {\n-      IOUtils.cleanup(LOG, iterator);\n+      IOUtils.cleanupWithLogger(LOG, iterator);\n     }\n     return numTokens;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int loadTokens(TimelineServiceState state) throws IOException {\n    byte[] base \u003d KeyBuilder.newInstance().add(TOKEN_ENTRY_PREFIX)\n        .getBytesForLookup();\n    int numTokens \u003d 0;\n    LeveldbIterator iterator \u003d null;\n    try {\n      for (iterator \u003d new LeveldbIterator(db), iterator.seek(base);\n          iterator.hasNext(); iterator.next()) {\n        byte[] k \u003d iterator.peekNext().getKey();\n        if (!prefixMatches(base, base.length, k)) {\n          break;\n        }\n        byte[] v \u003d iterator.peekNext().getValue();\n        loadTokenData(state, v);\n        ++numTokens;\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    } finally {\n      IOUtils.cleanupWithLogger(LOG, iterator);\n    }\n    return numTokens;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/recovery/LeveldbTimelineStateStore.java",
      "extendedDetails": {}
    },
    "149512a83743715bb100feb6747b7e88301018ab": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2837. Support TimeLine server to recover delegation token when restarting. Contributed by Zhijie Shen\n",
      "commitDate": "23/12/14 6:25 PM",
      "commitName": "149512a83743715bb100feb6747b7e88301018ab",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,23 @@\n+  private int loadTokens(TimelineServiceState state) throws IOException {\n+    byte[] base \u003d KeyBuilder.newInstance().add(TOKEN_ENTRY_PREFIX)\n+        .getBytesForLookup();\n+    int numTokens \u003d 0;\n+    LeveldbIterator iterator \u003d null;\n+    try {\n+      for (iterator \u003d new LeveldbIterator(db), iterator.seek(base);\n+          iterator.hasNext(); iterator.next()) {\n+        byte[] k \u003d iterator.peekNext().getKey();\n+        if (!prefixMatches(base, base.length, k)) {\n+          break;\n+        }\n+        byte[] v \u003d iterator.peekNext().getValue();\n+        loadTokenData(state, v);\n+        ++numTokens;\n+      }\n+    } catch (DBException e) {\n+      throw new IOException(e);\n+    } finally {\n+      IOUtils.cleanup(LOG, iterator);\n+    }\n+    return numTokens;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int loadTokens(TimelineServiceState state) throws IOException {\n    byte[] base \u003d KeyBuilder.newInstance().add(TOKEN_ENTRY_PREFIX)\n        .getBytesForLookup();\n    int numTokens \u003d 0;\n    LeveldbIterator iterator \u003d null;\n    try {\n      for (iterator \u003d new LeveldbIterator(db), iterator.seek(base);\n          iterator.hasNext(); iterator.next()) {\n        byte[] k \u003d iterator.peekNext().getKey();\n        if (!prefixMatches(base, base.length, k)) {\n          break;\n        }\n        byte[] v \u003d iterator.peekNext().getValue();\n        loadTokenData(state, v);\n        ++numTokens;\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    } finally {\n      IOUtils.cleanup(LOG, iterator);\n    }\n    return numTokens;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/recovery/LeveldbTimelineStateStore.java"
    }
  }
}