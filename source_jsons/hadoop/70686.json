{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AzureNativeFileSystemStore.java",
  "functionName": "openInputStream",
  "functionId": "openInputStream___blob-CloudBlobWrapper",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
  "functionStartLine": 1580,
  "functionEndLine": 1600,
  "numCommitsSeen": 53,
  "timeTaken": 3273,
  "changeHistory": [
    "d670c3a4da7dd80dccf6c6308603bb3bb013b3b0",
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40"
  ],
  "changeHistoryShort": {
    "d670c3a4da7dd80dccf6c6308603bb3bb013b3b0": "Ybodychange",
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d670c3a4da7dd80dccf6c6308603bb3bb013b3b0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14535 wasb: implement high-performance random access and seek of block blobs.\nContributed by Thomas Marquardt\n",
      "commitDate": "11/07/17 1:34 PM",
      "commitName": "d670c3a4da7dd80dccf6c6308603bb3bb013b3b0",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "28/06/17 2:18 PM",
      "commitNameOld": "990aa34de23c625163745ebc338483065d955bbe",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 12.97,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,21 @@\n   private InputStream openInputStream(CloudBlobWrapper blob)\n       throws StorageException, IOException {\n     if (blob instanceof CloudBlockBlobWrapper) {\n-      return blob.openInputStream(getDownloadOptions(),\n-          getInstrumentedContext(isConcurrentOOBAppendAllowed()));\n+      LOG.debug(\"Using stream seek algorithm {}\", inputStreamVersion);\n+      switch(inputStreamVersion) {\n+      case 1:\n+        return blob.openInputStream(getDownloadOptions(),\n+            getInstrumentedContext(isConcurrentOOBAppendAllowed()));\n+      case 2:\n+        return new BlockBlobInputStream((CloudBlockBlobWrapper) blob,\n+            getDownloadOptions(),\n+            getInstrumentedContext(isConcurrentOOBAppendAllowed()));\n+      default:\n+        throw new IOException(\"Unknown seek algorithm: \" + inputStreamVersion);\n+      }\n     } else {\n       return new PageBlobInputStream(\n           (CloudPageBlobWrapper) blob, getInstrumentedContext(\n               isConcurrentOOBAppendAllowed()));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private InputStream openInputStream(CloudBlobWrapper blob)\n      throws StorageException, IOException {\n    if (blob instanceof CloudBlockBlobWrapper) {\n      LOG.debug(\"Using stream seek algorithm {}\", inputStreamVersion);\n      switch(inputStreamVersion) {\n      case 1:\n        return blob.openInputStream(getDownloadOptions(),\n            getInstrumentedContext(isConcurrentOOBAppendAllowed()));\n      case 2:\n        return new BlockBlobInputStream((CloudBlockBlobWrapper) blob,\n            getDownloadOptions(),\n            getInstrumentedContext(isConcurrentOOBAppendAllowed()));\n      default:\n        throw new IOException(\"Unknown seek algorithm: \" + inputStreamVersion);\n      }\n    } else {\n      return new PageBlobInputStream(\n          (CloudPageBlobWrapper) blob, getInstrumentedContext(\n              isConcurrentOOBAppendAllowed()));\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
      "extendedDetails": {}
    },
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10809. hadoop-azure: page blob support. Contributed by Dexter Bradshaw, Mostafa Elhemali, Eric Hanson, and Mike Liddell.\n",
      "commitDate": "08/10/14 2:20 PM",
      "commitName": "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
      "commitAuthor": "cnauroth",
      "diff": "@@ -0,0 +1,11 @@\n+  private InputStream openInputStream(CloudBlobWrapper blob)\n+      throws StorageException, IOException {\n+    if (blob instanceof CloudBlockBlobWrapper) {\n+      return blob.openInputStream(getDownloadOptions(),\n+          getInstrumentedContext(isConcurrentOOBAppendAllowed()));\n+    } else {\n+      return new PageBlobInputStream(\n+          (CloudPageBlobWrapper) blob, getInstrumentedContext(\n+              isConcurrentOOBAppendAllowed()));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private InputStream openInputStream(CloudBlobWrapper blob)\n      throws StorageException, IOException {\n    if (blob instanceof CloudBlockBlobWrapper) {\n      return blob.openInputStream(getDownloadOptions(),\n          getInstrumentedContext(isConcurrentOOBAppendAllowed()));\n    } else {\n      return new PageBlobInputStream(\n          (CloudPageBlobWrapper) blob, getInstrumentedContext(\n              isConcurrentOOBAppendAllowed()));\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java"
    }
  }
}