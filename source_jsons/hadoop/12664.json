{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Mover.java",
  "functionName": "processNamespace",
  "functionId": "processNamespace",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
  "functionStartLine": 289,
  "functionEndLine": 317,
  "numCommitsSeen": 54,
  "timeTaken": 3893,
  "changeHistory": [
    "e24a923db50879f7dbe5d2afac0e6757089fb07d",
    "9ef03a4c5bb5573eadc7d04e371c4af2dc6bae37",
    "321940cf19375febe9660e96d905360cfcc15f5f",
    "cdec12d1b84d444e13bf997c817643ec24aaa832",
    "cdf1af0e5a21361924f3f7c6cea5170767d2b6bc",
    "2b5c528a7331a00cfc67e64cd10342650948d686",
    "a26aa6bd0716da89853566961390d711511084e3",
    "603cbe5eead655a56cbb6bdbfa1414c9b05e2bbc",
    "5d5aae0694bc27df5b9fa50819854cd3050a8658"
  ],
  "changeHistoryShort": {
    "e24a923db50879f7dbe5d2afac0e6757089fb07d": "Ybodychange",
    "9ef03a4c5bb5573eadc7d04e371c4af2dc6bae37": "Ybodychange",
    "321940cf19375febe9660e96d905360cfcc15f5f": "Ymultichange(Yreturntypechange,Ybodychange)",
    "cdec12d1b84d444e13bf997c817643ec24aaa832": "Ymultichange(Yexceptionschange,Ybodychange)",
    "cdf1af0e5a21361924f3f7c6cea5170767d2b6bc": "Ybodychange",
    "2b5c528a7331a00cfc67e64cd10342650948d686": "Ybodychange",
    "a26aa6bd0716da89853566961390d711511084e3": "Ymultichange(Yreturntypechange,Ybodychange)",
    "603cbe5eead655a56cbb6bdbfa1414c9b05e2bbc": "Ybodychange",
    "5d5aae0694bc27df5b9fa50819854cd3050a8658": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e24a923db50879f7dbe5d2afac0e6757089fb07d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11164: Mover should avoid unnecessary retries if the block is pinned. Contributed by Rakesh R\n",
      "commitDate": "13/12/16 5:09 PM",
      "commitName": "e24a923db50879f7dbe5d2afac0e6757089fb07d",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "23/11/16 4:42 PM",
      "commitNameOld": "de4894936a5b581572f35fa5b8979d9f23da0891",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 20.02,
      "commitsBetweenForRepo": 123,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,29 @@\n     private Result processNamespace() throws IOException {\n       getSnapshottableDirs();\n       Result result \u003d new Result();\n       for (Path target : targetPaths) {\n         processPath(target.toUri().getPath(), result);\n       }\n       // wait for pending move to finish and retry the failed migration\n       boolean hasFailed \u003d Dispatcher.waitForMoveCompletion(storages.targets\n           .values());\n+      Dispatcher.checkForBlockPinningFailures(excludedPinnedBlocks,\n+          storages.targets.values());\n       boolean hasSuccess \u003d Dispatcher.checkForSuccess(storages.targets\n           .values());\n       if (hasFailed \u0026\u0026 !hasSuccess) {\n         if (retryCount.get() \u003d\u003d retryMaxAttempts) {\n           result.setRetryFailed();\n           LOG.error(\"Failed to move some block\u0027s after \"\n               + retryMaxAttempts + \" retries.\");\n           return result;\n         } else {\n           retryCount.incrementAndGet();\n         }\n       } else {\n         // Reset retry count if no failure.\n         retryCount.set(0);\n       }\n       result.updateHasRemaining(hasFailed);\n       return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Result processNamespace() throws IOException {\n      getSnapshottableDirs();\n      Result result \u003d new Result();\n      for (Path target : targetPaths) {\n        processPath(target.toUri().getPath(), result);\n      }\n      // wait for pending move to finish and retry the failed migration\n      boolean hasFailed \u003d Dispatcher.waitForMoveCompletion(storages.targets\n          .values());\n      Dispatcher.checkForBlockPinningFailures(excludedPinnedBlocks,\n          storages.targets.values());\n      boolean hasSuccess \u003d Dispatcher.checkForSuccess(storages.targets\n          .values());\n      if (hasFailed \u0026\u0026 !hasSuccess) {\n        if (retryCount.get() \u003d\u003d retryMaxAttempts) {\n          result.setRetryFailed();\n          LOG.error(\"Failed to move some block\u0027s after \"\n              + retryMaxAttempts + \" retries.\");\n          return result;\n        } else {\n          retryCount.incrementAndGet();\n        }\n      } else {\n        // Reset retry count if no failure.\n        retryCount.set(0);\n      }\n      result.updateHasRemaining(hasFailed);\n      return result;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
      "extendedDetails": {}
    },
    "9ef03a4c5bb5573eadc7d04e371c4af2dc6bae37": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8541. Mover should exit with NO_MOVE_PROGRESS if there is no move progress.  Contributed by Surendra Singh Lilhore\n",
      "commitDate": "13/07/15 3:12 PM",
      "commitName": "9ef03a4c5bb5573eadc7d04e371c4af2dc6bae37",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "15/06/15 4:26 PM",
      "commitNameOld": "321940cf19375febe9660e96d905360cfcc15f5f",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 27.95,
      "commitsBetweenForRepo": 188,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,27 @@\n     private Result processNamespace() throws IOException {\n       getSnapshottableDirs();\n       Result result \u003d new Result();\n       for (Path target : targetPaths) {\n         processPath(target.toUri().getPath(), result);\n       }\n       // wait for pending move to finish and retry the failed migration\n       boolean hasFailed \u003d Dispatcher.waitForMoveCompletion(storages.targets\n           .values());\n-      if (hasFailed) {\n+      boolean hasSuccess \u003d Dispatcher.checkForSuccess(storages.targets\n+          .values());\n+      if (hasFailed \u0026\u0026 !hasSuccess) {\n         if (retryCount.get() \u003d\u003d retryMaxAttempts) {\n-          throw new IOException(\"Failed to move some block\u0027s after \"\n+          result.setRetryFailed();\n+          LOG.error(\"Failed to move some block\u0027s after \"\n               + retryMaxAttempts + \" retries.\");\n+          return result;\n         } else {\n           retryCount.incrementAndGet();\n         }\n       } else {\n         // Reset retry count if no failure.\n         retryCount.set(0);\n       }\n       result.updateHasRemaining(hasFailed);\n       return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Result processNamespace() throws IOException {\n      getSnapshottableDirs();\n      Result result \u003d new Result();\n      for (Path target : targetPaths) {\n        processPath(target.toUri().getPath(), result);\n      }\n      // wait for pending move to finish and retry the failed migration\n      boolean hasFailed \u003d Dispatcher.waitForMoveCompletion(storages.targets\n          .values());\n      boolean hasSuccess \u003d Dispatcher.checkForSuccess(storages.targets\n          .values());\n      if (hasFailed \u0026\u0026 !hasSuccess) {\n        if (retryCount.get() \u003d\u003d retryMaxAttempts) {\n          result.setRetryFailed();\n          LOG.error(\"Failed to move some block\u0027s after \"\n              + retryMaxAttempts + \" retries.\");\n          return result;\n        } else {\n          retryCount.incrementAndGet();\n        }\n      } else {\n        // Reset retry count if no failure.\n        retryCount.set(0);\n      }\n      result.updateHasRemaining(hasFailed);\n      return result;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
      "extendedDetails": {}
    },
    "321940cf19375febe9660e96d905360cfcc15f5f": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-8540.  Mover should exit with NO_MOVE_BLOCK if no block can be moved.  Contributed by surendra singh lilhore\n",
      "commitDate": "15/06/15 4:26 PM",
      "commitName": "321940cf19375febe9660e96d905360cfcc15f5f",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-8540.  Mover should exit with NO_MOVE_BLOCK if no block can be moved.  Contributed by surendra singh lilhore\n",
          "commitDate": "15/06/15 4:26 PM",
          "commitName": "321940cf19375febe9660e96d905360cfcc15f5f",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "18/05/15 11:36 AM",
          "commitNameOld": "a2190bf15d25e01fb4b220ba6401ce2f787a5c61",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 28.2,
          "commitsBetweenForRepo": 199,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n-    private boolean processNamespace() throws IOException {\n+    private Result processNamespace() throws IOException {\n       getSnapshottableDirs();\n-      boolean hasRemaining \u003d false;\n+      Result result \u003d new Result();\n       for (Path target : targetPaths) {\n-        hasRemaining |\u003d processPath(target.toUri().getPath());\n+        processPath(target.toUri().getPath(), result);\n       }\n       // wait for pending move to finish and retry the failed migration\n       boolean hasFailed \u003d Dispatcher.waitForMoveCompletion(storages.targets\n           .values());\n       if (hasFailed) {\n         if (retryCount.get() \u003d\u003d retryMaxAttempts) {\n           throw new IOException(\"Failed to move some block\u0027s after \"\n               + retryMaxAttempts + \" retries.\");\n         } else {\n           retryCount.incrementAndGet();\n         }\n       } else {\n         // Reset retry count if no failure.\n         retryCount.set(0);\n       }\n-      hasRemaining |\u003d hasFailed;\n-      return hasRemaining;\n+      result.updateHasRemaining(hasFailed);\n+      return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Result processNamespace() throws IOException {\n      getSnapshottableDirs();\n      Result result \u003d new Result();\n      for (Path target : targetPaths) {\n        processPath(target.toUri().getPath(), result);\n      }\n      // wait for pending move to finish and retry the failed migration\n      boolean hasFailed \u003d Dispatcher.waitForMoveCompletion(storages.targets\n          .values());\n      if (hasFailed) {\n        if (retryCount.get() \u003d\u003d retryMaxAttempts) {\n          throw new IOException(\"Failed to move some block\u0027s after \"\n              + retryMaxAttempts + \" retries.\");\n        } else {\n          retryCount.incrementAndGet();\n        }\n      } else {\n        // Reset retry count if no failure.\n        retryCount.set(0);\n      }\n      result.updateHasRemaining(hasFailed);\n      return result;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
          "extendedDetails": {
            "oldValue": "boolean",
            "newValue": "Result"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8540.  Mover should exit with NO_MOVE_BLOCK if no block can be moved.  Contributed by surendra singh lilhore\n",
          "commitDate": "15/06/15 4:26 PM",
          "commitName": "321940cf19375febe9660e96d905360cfcc15f5f",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "18/05/15 11:36 AM",
          "commitNameOld": "a2190bf15d25e01fb4b220ba6401ce2f787a5c61",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 28.2,
          "commitsBetweenForRepo": 199,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n-    private boolean processNamespace() throws IOException {\n+    private Result processNamespace() throws IOException {\n       getSnapshottableDirs();\n-      boolean hasRemaining \u003d false;\n+      Result result \u003d new Result();\n       for (Path target : targetPaths) {\n-        hasRemaining |\u003d processPath(target.toUri().getPath());\n+        processPath(target.toUri().getPath(), result);\n       }\n       // wait for pending move to finish and retry the failed migration\n       boolean hasFailed \u003d Dispatcher.waitForMoveCompletion(storages.targets\n           .values());\n       if (hasFailed) {\n         if (retryCount.get() \u003d\u003d retryMaxAttempts) {\n           throw new IOException(\"Failed to move some block\u0027s after \"\n               + retryMaxAttempts + \" retries.\");\n         } else {\n           retryCount.incrementAndGet();\n         }\n       } else {\n         // Reset retry count if no failure.\n         retryCount.set(0);\n       }\n-      hasRemaining |\u003d hasFailed;\n-      return hasRemaining;\n+      result.updateHasRemaining(hasFailed);\n+      return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Result processNamespace() throws IOException {\n      getSnapshottableDirs();\n      Result result \u003d new Result();\n      for (Path target : targetPaths) {\n        processPath(target.toUri().getPath(), result);\n      }\n      // wait for pending move to finish and retry the failed migration\n      boolean hasFailed \u003d Dispatcher.waitForMoveCompletion(storages.targets\n          .values());\n      if (hasFailed) {\n        if (retryCount.get() \u003d\u003d retryMaxAttempts) {\n          throw new IOException(\"Failed to move some block\u0027s after \"\n              + retryMaxAttempts + \" retries.\");\n        } else {\n          retryCount.incrementAndGet();\n        }\n      } else {\n        // Reset retry count if no failure.\n        retryCount.set(0);\n      }\n      result.updateHasRemaining(hasFailed);\n      return result;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
          "extendedDetails": {}
        }
      ]
    },
    "cdec12d1b84d444e13bf997c817643ec24aaa832": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-8143. Mover should exit after some retry when failed to move blocks.  Contributed by surendra singh lilhore\n",
      "commitDate": "13/05/15 11:57 AM",
      "commitName": "cdec12d1b84d444e13bf997c817643ec24aaa832",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-8143. Mover should exit after some retry when failed to move blocks.  Contributed by surendra singh lilhore\n",
          "commitDate": "13/05/15 11:57 AM",
          "commitName": "cdec12d1b84d444e13bf997c817643ec24aaa832",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "02/05/15 10:03 AM",
          "commitNameOld": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 11.08,
          "commitsBetweenForRepo": 166,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,23 @@\n-    private boolean processNamespace() {\n+    private boolean processNamespace() throws IOException {\n       getSnapshottableDirs();\n       boolean hasRemaining \u003d false;\n       for (Path target : targetPaths) {\n         hasRemaining |\u003d processPath(target.toUri().getPath());\n       }\n       // wait for pending move to finish and retry the failed migration\n-      hasRemaining |\u003d Dispatcher.waitForMoveCompletion(storages.targets.values());\n+      boolean hasFailed \u003d Dispatcher.waitForMoveCompletion(storages.targets\n+          .values());\n+      if (hasFailed) {\n+        if (retryCount.get() \u003d\u003d retryMaxAttempts) {\n+          throw new IOException(\"Failed to move some block\u0027s after \"\n+              + retryMaxAttempts + \" retries.\");\n+        } else {\n+          retryCount.incrementAndGet();\n+        }\n+      } else {\n+        // Reset retry count if no failure.\n+        retryCount.set(0);\n+      }\n+      hasRemaining |\u003d hasFailed;\n       return hasRemaining;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean processNamespace() throws IOException {\n      getSnapshottableDirs();\n      boolean hasRemaining \u003d false;\n      for (Path target : targetPaths) {\n        hasRemaining |\u003d processPath(target.toUri().getPath());\n      }\n      // wait for pending move to finish and retry the failed migration\n      boolean hasFailed \u003d Dispatcher.waitForMoveCompletion(storages.targets\n          .values());\n      if (hasFailed) {\n        if (retryCount.get() \u003d\u003d retryMaxAttempts) {\n          throw new IOException(\"Failed to move some block\u0027s after \"\n              + retryMaxAttempts + \" retries.\");\n        } else {\n          retryCount.incrementAndGet();\n        }\n      } else {\n        // Reset retry count if no failure.\n        retryCount.set(0);\n      }\n      hasRemaining |\u003d hasFailed;\n      return hasRemaining;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8143. Mover should exit after some retry when failed to move blocks.  Contributed by surendra singh lilhore\n",
          "commitDate": "13/05/15 11:57 AM",
          "commitName": "cdec12d1b84d444e13bf997c817643ec24aaa832",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "02/05/15 10:03 AM",
          "commitNameOld": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 11.08,
          "commitsBetweenForRepo": 166,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,23 @@\n-    private boolean processNamespace() {\n+    private boolean processNamespace() throws IOException {\n       getSnapshottableDirs();\n       boolean hasRemaining \u003d false;\n       for (Path target : targetPaths) {\n         hasRemaining |\u003d processPath(target.toUri().getPath());\n       }\n       // wait for pending move to finish and retry the failed migration\n-      hasRemaining |\u003d Dispatcher.waitForMoveCompletion(storages.targets.values());\n+      boolean hasFailed \u003d Dispatcher.waitForMoveCompletion(storages.targets\n+          .values());\n+      if (hasFailed) {\n+        if (retryCount.get() \u003d\u003d retryMaxAttempts) {\n+          throw new IOException(\"Failed to move some block\u0027s after \"\n+              + retryMaxAttempts + \" retries.\");\n+        } else {\n+          retryCount.incrementAndGet();\n+        }\n+      } else {\n+        // Reset retry count if no failure.\n+        retryCount.set(0);\n+      }\n+      hasRemaining |\u003d hasFailed;\n       return hasRemaining;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean processNamespace() throws IOException {\n      getSnapshottableDirs();\n      boolean hasRemaining \u003d false;\n      for (Path target : targetPaths) {\n        hasRemaining |\u003d processPath(target.toUri().getPath());\n      }\n      // wait for pending move to finish and retry the failed migration\n      boolean hasFailed \u003d Dispatcher.waitForMoveCompletion(storages.targets\n          .values());\n      if (hasFailed) {\n        if (retryCount.get() \u003d\u003d retryMaxAttempts) {\n          throw new IOException(\"Failed to move some block\u0027s after \"\n              + retryMaxAttempts + \" retries.\");\n        } else {\n          retryCount.incrementAndGet();\n        }\n      } else {\n        // Reset retry count if no failure.\n        retryCount.set(0);\n      }\n      hasRemaining |\u003d hasFailed;\n      return hasRemaining;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
          "extendedDetails": {}
        }
      ]
    },
    "cdf1af0e5a21361924f3f7c6cea5170767d2b6bc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7167. NPE while running Mover if the given path is for a file. Contributed by Jing Zhao.\n",
      "commitDate": "30/09/14 11:13 AM",
      "commitName": "cdf1af0e5a21361924f3f7c6cea5170767d2b6bc",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "24/09/14 7:11 PM",
      "commitNameOld": "428a76663a0de5d0d74cc9525273ddc470760e44",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 5.67,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,10 @@\n     private boolean processNamespace() {\n       getSnapshottableDirs();\n-      boolean hasRemaining \u003d true;\n-      try {\n-        for (Path target : targetPaths) {\n-          hasRemaining \u003d processDirRecursively(\"\", dfs.getFileInfo(target\n-              .toUri().getPath()));\n-        }\n-      } catch (IOException e) {\n-        LOG.warn(\"Failed to get root directory status. Ignore and continue.\", e);\n+      boolean hasRemaining \u003d false;\n+      for (Path target : targetPaths) {\n+        hasRemaining |\u003d processPath(target.toUri().getPath());\n       }\n       // wait for pending move to finish and retry the failed migration\n       hasRemaining |\u003d Dispatcher.waitForMoveCompletion(storages.targets.values());\n       return hasRemaining;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean processNamespace() {\n      getSnapshottableDirs();\n      boolean hasRemaining \u003d false;\n      for (Path target : targetPaths) {\n        hasRemaining |\u003d processPath(target.toUri().getPath());\n      }\n      // wait for pending move to finish and retry the failed migration\n      hasRemaining |\u003d Dispatcher.waitForMoveCompletion(storages.targets.values());\n      return hasRemaining;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
      "extendedDetails": {}
    },
    "2b5c528a7331a00cfc67e64cd10342650948d686": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6875. Archival Storage: support migration for a list of specified paths. Contributed by Jing Zhao.\n",
      "commitDate": "08/09/14 2:10 PM",
      "commitName": "2b5c528a7331a00cfc67e64cd10342650948d686",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "06/09/14 4:44 PM",
      "commitNameOld": "22a41dce4af4d5b533ba875b322551db1c152878",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 1.89,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,15 @@\n     private boolean processNamespace() {\n       getSnapshottableDirs();\n       boolean hasRemaining \u003d true;\n       try {\n-        hasRemaining \u003d processDirRecursively(\"\", dfs.getFileInfo(\"/\"));\n+        for (Path target : targetPaths) {\n+          hasRemaining \u003d processDirRecursively(\"\", dfs.getFileInfo(target\n+              .toUri().getPath()));\n+        }\n       } catch (IOException e) {\n         LOG.warn(\"Failed to get root directory status. Ignore and continue.\", e);\n       }\n       // wait for pending move to finish and retry the failed migration\n       hasRemaining |\u003d Dispatcher.waitForMoveCompletion(storages.targets.values());\n       return hasRemaining;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean processNamespace() {\n      getSnapshottableDirs();\n      boolean hasRemaining \u003d true;\n      try {\n        for (Path target : targetPaths) {\n          hasRemaining \u003d processDirRecursively(\"\", dfs.getFileInfo(target\n              .toUri().getPath()));\n        }\n      } catch (IOException e) {\n        LOG.warn(\"Failed to get root directory status. Ignore and continue.\", e);\n      }\n      // wait for pending move to finish and retry the failed migration\n      hasRemaining |\u003d Dispatcher.waitForMoveCompletion(storages.targets.values());\n      return hasRemaining;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
      "extendedDetails": {}
    },
    "a26aa6bd0716da89853566961390d711511084e3": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-6944. Archival Storage: add retry and termination logic for Mover. Contributed by Jing Zhao.\n",
      "commitDate": "27/08/14 2:20 PM",
      "commitName": "a26aa6bd0716da89853566961390d711511084e3",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-6944. Archival Storage: add retry and termination logic for Mover. Contributed by Jing Zhao.\n",
          "commitDate": "27/08/14 2:20 PM",
          "commitName": "a26aa6bd0716da89853566961390d711511084e3",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "27/08/14 10:38 AM",
          "commitNameOld": "8ea20b53a861a2771c206afaacf8e7783568c4b1",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,12 @@\n-    private void processNamespace() {\n+    private boolean processNamespace() {\n       getSnapshottableDirs();\n+      boolean hasRemaining \u003d true;\n       try {\n-        processDirRecursively(\"\", dfs.getFileInfo(\"/\"));\n+        hasRemaining \u003d processDirRecursively(\"\", dfs.getFileInfo(\"/\"));\n       } catch (IOException e) {\n         LOG.warn(\"Failed to get root directory status. Ignore and continue.\", e);\n       }\n+      // wait for pending move to finish and retry the failed migration\n+      hasRemaining |\u003d Dispatcher.waitForMoveCompletion(storages.targets.values());\n+      return hasRemaining;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean processNamespace() {\n      getSnapshottableDirs();\n      boolean hasRemaining \u003d true;\n      try {\n        hasRemaining \u003d processDirRecursively(\"\", dfs.getFileInfo(\"/\"));\n      } catch (IOException e) {\n        LOG.warn(\"Failed to get root directory status. Ignore and continue.\", e);\n      }\n      // wait for pending move to finish and retry the failed migration\n      hasRemaining |\u003d Dispatcher.waitForMoveCompletion(storages.targets.values());\n      return hasRemaining;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "boolean"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6944. Archival Storage: add retry and termination logic for Mover. Contributed by Jing Zhao.\n",
          "commitDate": "27/08/14 2:20 PM",
          "commitName": "a26aa6bd0716da89853566961390d711511084e3",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "27/08/14 10:38 AM",
          "commitNameOld": "8ea20b53a861a2771c206afaacf8e7783568c4b1",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,12 @@\n-    private void processNamespace() {\n+    private boolean processNamespace() {\n       getSnapshottableDirs();\n+      boolean hasRemaining \u003d true;\n       try {\n-        processDirRecursively(\"\", dfs.getFileInfo(\"/\"));\n+        hasRemaining \u003d processDirRecursively(\"\", dfs.getFileInfo(\"/\"));\n       } catch (IOException e) {\n         LOG.warn(\"Failed to get root directory status. Ignore and continue.\", e);\n       }\n+      // wait for pending move to finish and retry the failed migration\n+      hasRemaining |\u003d Dispatcher.waitForMoveCompletion(storages.targets.values());\n+      return hasRemaining;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean processNamespace() {\n      getSnapshottableDirs();\n      boolean hasRemaining \u003d true;\n      try {\n        hasRemaining \u003d processDirRecursively(\"\", dfs.getFileInfo(\"/\"));\n      } catch (IOException e) {\n        LOG.warn(\"Failed to get root directory status. Ignore and continue.\", e);\n      }\n      // wait for pending move to finish and retry the failed migration\n      hasRemaining |\u003d Dispatcher.waitForMoveCompletion(storages.targets.values());\n      return hasRemaining;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
          "extendedDetails": {}
        }
      ]
    },
    "603cbe5eead655a56cbb6bdbfa1414c9b05e2bbc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6863. Archival Storage: Support migration for snapshot paths. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-6584@1619627 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/08/14 4:41 PM",
      "commitName": "603cbe5eead655a56cbb6bdbfa1414c9b05e2bbc",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "18/08/14 10:51 AM",
      "commitNameOld": "5d5aae0694bc27df5b9fa50819854cd3050a8658",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 3.24,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,8 @@\n     private void processNamespace() {\n+      getSnapshottableDirs();\n       try {\n         processDirRecursively(\"\", dfs.getFileInfo(\"/\"));\n       } catch (IOException e) {\n         LOG.warn(\"Failed to get root directory status. Ignore and continue.\", e);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processNamespace() {\n      getSnapshottableDirs();\n      try {\n        processDirRecursively(\"\", dfs.getFileInfo(\"/\"));\n      } catch (IOException e) {\n        LOG.warn(\"Failed to get root directory status. Ignore and continue.\", e);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java",
      "extendedDetails": {}
    },
    "5d5aae0694bc27df5b9fa50819854cd3050a8658": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6801. Archival Storage: Add a new data migration tool. Contributed by Tsz Wo Nicholas Sze.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-6584@1618675 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/14 10:51 AM",
      "commitName": "5d5aae0694bc27df5b9fa50819854cd3050a8658",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,7 @@\n+    private void processNamespace() {\n+      try {\n+        processDirRecursively(\"\", dfs.getFileInfo(\"/\"));\n+      } catch (IOException e) {\n+        LOG.warn(\"Failed to get root directory status. Ignore and continue.\", e);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void processNamespace() {\n      try {\n        processDirRecursively(\"\", dfs.getFileInfo(\"/\"));\n      } catch (IOException e) {\n        LOG.warn(\"Failed to get root directory status. Ignore and continue.\", e);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/mover/Mover.java"
    }
  }
}