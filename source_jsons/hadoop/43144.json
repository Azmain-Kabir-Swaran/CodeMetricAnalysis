{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApiServer.java",
  "functionName": "getContainers",
  "functionId": "getContainers___ugi-UserGroupInformation__serviceName-String__componentNames-List__String____version-String__containerStates-List__ContainerState__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
  "functionStartLine": 887,
  "functionEndLine": 904,
  "numCommitsSeen": 9,
  "timeTaken": 2600,
  "changeHistory": [
    "efc4d91cbeab8a13f6d61cb0e56443adb2d77559",
    "292c9e017fb3fdf972f2b7a11de5223bfe07603b",
    "121865c3f96166e2190ed54b433ebcf8d053b91c"
  ],
  "changeHistoryShort": {
    "efc4d91cbeab8a13f6d61cb0e56443adb2d77559": "Ybodychange",
    "292c9e017fb3fdf972f2b7a11de5223bfe07603b": "Ymultichange(Yreturntypechange,Ybodychange)",
    "121865c3f96166e2190ed54b433ebcf8d053b91c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "efc4d91cbeab8a13f6d61cb0e56443adb2d77559": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9067. YARN Resource Manager is running OOM because of leak of Configuration Object. Contributed by Eric Yang.\n",
      "commitDate": "28/11/18 5:34 PM",
      "commitName": "efc4d91cbeab8a13f6d61cb0e56443adb2d77559",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "12/11/18 4:53 PM",
      "commitNameOld": "4c465f5535054dad2ef0b18128fb115129f6939e",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 16.03,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,18 @@\n   private ComponentContainers[] getContainers(UserGroupInformation ugi,\n       String serviceName, List\u003cString\u003e componentNames, String version,\n       List\u003cContainerState\u003e containerStates) throws IOException,\n       InterruptedException {\n     return ugi.doAs((PrivilegedExceptionAction\u003cComponentContainers[]\u003e) () -\u003e {\n       ComponentContainers[] result;\n       ServiceClient sc \u003d getServiceClient();\n-      sc.init(YARN_CONFIG);\n-      sc.start();\n-      result \u003d sc.getContainers(serviceName, componentNames, version,\n-          containerStates);\n-      sc.close();\n-      return result;\n+      try {\n+        sc.init(YARN_CONFIG);\n+        sc.start();\n+        result \u003d sc.getContainers(serviceName, componentNames, version,\n+            containerStates);\n+        return result;\n+      } finally {\n+        sc.close();\n+      }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ComponentContainers[] getContainers(UserGroupInformation ugi,\n      String serviceName, List\u003cString\u003e componentNames, String version,\n      List\u003cContainerState\u003e containerStates) throws IOException,\n      InterruptedException {\n    return ugi.doAs((PrivilegedExceptionAction\u003cComponentContainers[]\u003e) () -\u003e {\n      ComponentContainers[] result;\n      ServiceClient sc \u003d getServiceClient();\n      try {\n        sc.init(YARN_CONFIG);\n        sc.start();\n        result \u003d sc.getContainers(serviceName, componentNames, version,\n            containerStates);\n        return result;\n      } finally {\n        sc.close();\n      }\n    });\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
      "extendedDetails": {}
    },
    "292c9e017fb3fdf972f2b7a11de5223bfe07603b": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-8542. Added YARN service REST API to list containers.\n           Contributed by Chandni Singh\n",
      "commitDate": "22/10/18 12:59 PM",
      "commitName": "292c9e017fb3fdf972f2b7a11de5223bfe07603b",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-8542. Added YARN service REST API to list containers.\n           Contributed by Chandni Singh\n",
          "commitDate": "22/10/18 12:59 PM",
          "commitName": "292c9e017fb3fdf972f2b7a11de5223bfe07603b",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "26/09/18 11:51 AM",
          "commitNameOld": "913f87dada27776c539dfb352400ecf8d40e7943",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 26.05,
          "commitsBetweenForRepo": 266,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  private Container[] getContainers(UserGroupInformation ugi,\n+  private ComponentContainers[] getContainers(UserGroupInformation ugi,\n       String serviceName, List\u003cString\u003e componentNames, String version,\n       List\u003cContainerState\u003e containerStates) throws IOException,\n       InterruptedException {\n-    return ugi.doAs((PrivilegedExceptionAction\u003cContainer[]\u003e) () -\u003e {\n-      Container[] result;\n+    return ugi.doAs((PrivilegedExceptionAction\u003cComponentContainers[]\u003e) () -\u003e {\n+      ComponentContainers[] result;\n       ServiceClient sc \u003d getServiceClient();\n       sc.init(YARN_CONFIG);\n       sc.start();\n       result \u003d sc.getContainers(serviceName, componentNames, version,\n           containerStates);\n       sc.close();\n       return result;\n     });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ComponentContainers[] getContainers(UserGroupInformation ugi,\n      String serviceName, List\u003cString\u003e componentNames, String version,\n      List\u003cContainerState\u003e containerStates) throws IOException,\n      InterruptedException {\n    return ugi.doAs((PrivilegedExceptionAction\u003cComponentContainers[]\u003e) () -\u003e {\n      ComponentContainers[] result;\n      ServiceClient sc \u003d getServiceClient();\n      sc.init(YARN_CONFIG);\n      sc.start();\n      result \u003d sc.getContainers(serviceName, componentNames, version,\n          containerStates);\n      sc.close();\n      return result;\n    });\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
          "extendedDetails": {
            "oldValue": "Container[]",
            "newValue": "ComponentContainers[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8542. Added YARN service REST API to list containers.\n           Contributed by Chandni Singh\n",
          "commitDate": "22/10/18 12:59 PM",
          "commitName": "292c9e017fb3fdf972f2b7a11de5223bfe07603b",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "26/09/18 11:51 AM",
          "commitNameOld": "913f87dada27776c539dfb352400ecf8d40e7943",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 26.05,
          "commitsBetweenForRepo": 266,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  private Container[] getContainers(UserGroupInformation ugi,\n+  private ComponentContainers[] getContainers(UserGroupInformation ugi,\n       String serviceName, List\u003cString\u003e componentNames, String version,\n       List\u003cContainerState\u003e containerStates) throws IOException,\n       InterruptedException {\n-    return ugi.doAs((PrivilegedExceptionAction\u003cContainer[]\u003e) () -\u003e {\n-      Container[] result;\n+    return ugi.doAs((PrivilegedExceptionAction\u003cComponentContainers[]\u003e) () -\u003e {\n+      ComponentContainers[] result;\n       ServiceClient sc \u003d getServiceClient();\n       sc.init(YARN_CONFIG);\n       sc.start();\n       result \u003d sc.getContainers(serviceName, componentNames, version,\n           containerStates);\n       sc.close();\n       return result;\n     });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ComponentContainers[] getContainers(UserGroupInformation ugi,\n      String serviceName, List\u003cString\u003e componentNames, String version,\n      List\u003cContainerState\u003e containerStates) throws IOException,\n      InterruptedException {\n    return ugi.doAs((PrivilegedExceptionAction\u003cComponentContainers[]\u003e) () -\u003e {\n      ComponentContainers[] result;\n      ServiceClient sc \u003d getServiceClient();\n      sc.init(YARN_CONFIG);\n      sc.start();\n      result \u003d sc.getContainers(serviceName, componentNames, version,\n          containerStates);\n      sc.close();\n      return result;\n    });\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
          "extendedDetails": {}
        }
      ]
    },
    "121865c3f96166e2190ed54b433ebcf8d053b91c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8299.  Added CLI and REST API for query container status.\n            Contributed by Chandni Singh\n",
      "commitDate": "16/07/18 2:41 PM",
      "commitName": "121865c3f96166e2190ed54b433ebcf8d053b91c",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,15 @@\n+  private Container[] getContainers(UserGroupInformation ugi,\n+      String serviceName, List\u003cString\u003e componentNames, String version,\n+      List\u003cContainerState\u003e containerStates) throws IOException,\n+      InterruptedException {\n+    return ugi.doAs((PrivilegedExceptionAction\u003cContainer[]\u003e) () -\u003e {\n+      Container[] result;\n+      ServiceClient sc \u003d getServiceClient();\n+      sc.init(YARN_CONFIG);\n+      sc.start();\n+      result \u003d sc.getContainers(serviceName, componentNames, version,\n+          containerStates);\n+      sc.close();\n+      return result;\n+    });\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Container[] getContainers(UserGroupInformation ugi,\n      String serviceName, List\u003cString\u003e componentNames, String version,\n      List\u003cContainerState\u003e containerStates) throws IOException,\n      InterruptedException {\n    return ugi.doAs((PrivilegedExceptionAction\u003cContainer[]\u003e) () -\u003e {\n      Container[] result;\n      ServiceClient sc \u003d getServiceClient();\n      sc.init(YARN_CONFIG);\n      sc.start();\n      result \u003d sc.getContainers(serviceName, componentNames, version,\n          containerStates);\n      sc.close();\n      return result;\n    });\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java"
    }
  }
}