{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceManager.java",
  "functionName": "main",
  "functionId": "main___argv-String[]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
  "functionStartLine": 1560,
  "functionEndLine": 1591,
  "numCommitsSeen": 231,
  "timeTaken": 14928,
  "changeHistory": [
    "8c9018d5c7830ae8ec85f446985cafbc8a14d688",
    "3990ffa0834e6b24314a565a92e92d6e8fa37a1e",
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d",
    "e40e2d6ad5cbe782c3a067229270738b501ed27e",
    "e71d0d87d9b388f211a8eb3d2cd9af347abf9bda",
    "8ca0d957c4b1076e801e1cdce5b44aa805de889c",
    "266a4ff6a502ebb27d1ec7468c539e304b4bcf47",
    "8fbca62a9008306249779367af1d3c329f875552",
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
    "21181b65531449e5fda321c11f0672c3067641aa",
    "6cd0736cc57849e4f7c5d38a3986432a9717fe39",
    "1943fdbec613715f3cdc3ca60cbd273115f28299",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "11782dd3a5ee5a2f6ad42b335f0386d00baa9ae1",
    "0fca4fbaf35ad6b48c57125a9389aaf45a2c88a5",
    "4ba2acf3363bdfd7fcdd9de496cd57f8af6f03ad",
    "d51078eb7edf4d28069163bad30d28e35c5e166e",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "8c9018d5c7830ae8ec85f446985cafbc8a14d688": "Ybodychange",
    "3990ffa0834e6b24314a565a92e92d6e8fa37a1e": "Ybodychange",
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d": "Ybodychange",
    "e40e2d6ad5cbe782c3a067229270738b501ed27e": "Ybodychange",
    "e71d0d87d9b388f211a8eb3d2cd9af347abf9bda": "Ybodychange",
    "8ca0d957c4b1076e801e1cdce5b44aa805de889c": "Ybodychange",
    "266a4ff6a502ebb27d1ec7468c539e304b4bcf47": "Ybodychange",
    "8fbca62a9008306249779367af1d3c329f875552": "Ybodychange",
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d": "Ybodychange",
    "21181b65531449e5fda321c11f0672c3067641aa": "Ybodychange",
    "6cd0736cc57849e4f7c5d38a3986432a9717fe39": "Ybodychange",
    "1943fdbec613715f3cdc3ca60cbd273115f28299": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "11782dd3a5ee5a2f6ad42b335f0386d00baa9ae1": "Ybodychange",
    "0fca4fbaf35ad6b48c57125a9389aaf45a2c88a5": "Ybodychange",
    "4ba2acf3363bdfd7fcdd9de496cd57f8af6f03ad": "Ybodychange",
    "d51078eb7edf4d28069163bad30d28e35c5e166e": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8c9018d5c7830ae8ec85f446985cafbc8a14d688": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9899. Migration tool that help to generate CS config based on FS config [Phase 2]. Contributed by Peter Bacsko\n",
      "commitDate": "26/11/19 12:22 PM",
      "commitName": "8c9018d5c7830ae8ec85f446985cafbc8a14d688",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "29/10/19 3:24 AM",
      "commitNameOld": "ed45c13f67da06befcd4a70acb16fcf6d844ef2b",
      "commitAuthorOld": "Abhishek Modi",
      "daysBetweenCommits": 28.42,
      "commitsBetweenForRepo": 114,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,32 @@\n   public static void main(String argv[]) {\n     Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n     try {\n       Configuration conf \u003d new YarnConfiguration();\n       GenericOptionsParser hParser \u003d new GenericOptionsParser(conf, argv);\n       argv \u003d hParser.getRemainingArgs();\n       // If -format-state-store, then delete RMStateStore; else startup normally\n       if (argv.length \u003e\u003d 1) {\n         if (argv[0].equals(\"-format-state-store\")) {\n           deleteRMStateStore(conf);\n         } else if (argv[0].equals(\"-format-conf-store\")) {\n           deleteRMConfStore(conf);\n         } else if (argv[0].equals(\"-remove-application-from-state-store\")\n             \u0026\u0026 argv.length \u003d\u003d 2) {\n           removeApplication(conf, argv[1]);\n-        } else if (argv[0].equals(\"-convert-fs-configuration\")) {\n-          String[] args \u003d Arrays.copyOfRange(argv, 1, argv.length);\n-          try {\n-            int exitCode \u003d\n-                fsConfigConversionArgumentHandler.parseAndConvert(args);\n-            if (exitCode !\u003d 0) {\n-              LOG.error(FATAL,\n-                  \"Error while starting FS configuration conversion, \" +\n-                      \"see previous error messages for details!\");\n-              System.exit(exitCode);\n-            }\n-          } catch (Throwable t) {\n-            LOG.error(FATAL,\n-                \"Error while starting FS configuration conversion!\", t);\n-            System.exit(-1);\n-          }\n         } else {\n           printUsage(System.err);\n         }\n       } else {\n         ResourceManager resourceManager \u003d new ResourceManager();\n         ShutdownHookManager.get().addShutdownHook(\n           new CompositeServiceShutdownHook(resourceManager),\n           SHUTDOWN_HOOK_PRIORITY);\n         resourceManager.init(conf);\n         resourceManager.start();\n       }\n     } catch (Throwable t) {\n       LOG.error(FATAL, \"Error starting ResourceManager\", t);\n       System.exit(-1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]) {\n    Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      GenericOptionsParser hParser \u003d new GenericOptionsParser(conf, argv);\n      argv \u003d hParser.getRemainingArgs();\n      // If -format-state-store, then delete RMStateStore; else startup normally\n      if (argv.length \u003e\u003d 1) {\n        if (argv[0].equals(\"-format-state-store\")) {\n          deleteRMStateStore(conf);\n        } else if (argv[0].equals(\"-format-conf-store\")) {\n          deleteRMConfStore(conf);\n        } else if (argv[0].equals(\"-remove-application-from-state-store\")\n            \u0026\u0026 argv.length \u003d\u003d 2) {\n          removeApplication(conf, argv[1]);\n        } else {\n          printUsage(System.err);\n        }\n      } else {\n        ResourceManager resourceManager \u003d new ResourceManager();\n        ShutdownHookManager.get().addShutdownHook(\n          new CompositeServiceShutdownHook(resourceManager),\n          SHUTDOWN_HOOK_PRIORITY);\n        resourceManager.init(conf);\n        resourceManager.start();\n      }\n    } catch (Throwable t) {\n      LOG.error(FATAL, \"Error starting ResourceManager\", t);\n      System.exit(-1);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "3990ffa0834e6b24314a565a92e92d6e8fa37a1e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9909. Offline format of YarnConfigurationStore. Contributed by Prabhu Joseph.\n",
      "commitDate": "16/10/19 6:13 PM",
      "commitName": "3990ffa0834e6b24314a565a92e92d6e8fa37a1e",
      "commitAuthor": "Sunil G",
      "commitDateOld": "14/10/19 8:19 AM",
      "commitNameOld": "5cc7873a4723a6c8e8e001d008fcd522eec0433d",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 2.41,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,48 @@\n   public static void main(String argv[]) {\n     Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n     try {\n       Configuration conf \u003d new YarnConfiguration();\n       GenericOptionsParser hParser \u003d new GenericOptionsParser(conf, argv);\n       argv \u003d hParser.getRemainingArgs();\n       // If -format-state-store, then delete RMStateStore; else startup normally\n       if (argv.length \u003e\u003d 1) {\n         if (argv[0].equals(\"-format-state-store\")) {\n           deleteRMStateStore(conf);\n+        } else if (argv[0].equals(\"-format-conf-store\")) {\n+          deleteRMConfStore(conf);\n         } else if (argv[0].equals(\"-remove-application-from-state-store\")\n             \u0026\u0026 argv.length \u003d\u003d 2) {\n           removeApplication(conf, argv[1]);\n         } else if (argv[0].equals(\"-convert-fs-configuration\")) {\n           String[] args \u003d Arrays.copyOfRange(argv, 1, argv.length);\n           try {\n             int exitCode \u003d\n                 fsConfigConversionArgumentHandler.parseAndConvert(args);\n             if (exitCode !\u003d 0) {\n               LOG.error(FATAL,\n                   \"Error while starting FS configuration conversion, \" +\n                       \"see previous error messages for details!\");\n               System.exit(exitCode);\n             }\n           } catch (Throwable t) {\n             LOG.error(FATAL,\n                 \"Error while starting FS configuration conversion!\", t);\n             System.exit(-1);\n           }\n         } else {\n           printUsage(System.err);\n         }\n       } else {\n         ResourceManager resourceManager \u003d new ResourceManager();\n         ShutdownHookManager.get().addShutdownHook(\n           new CompositeServiceShutdownHook(resourceManager),\n           SHUTDOWN_HOOK_PRIORITY);\n         resourceManager.init(conf);\n         resourceManager.start();\n       }\n     } catch (Throwable t) {\n       LOG.error(FATAL, \"Error starting ResourceManager\", t);\n       System.exit(-1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]) {\n    Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      GenericOptionsParser hParser \u003d new GenericOptionsParser(conf, argv);\n      argv \u003d hParser.getRemainingArgs();\n      // If -format-state-store, then delete RMStateStore; else startup normally\n      if (argv.length \u003e\u003d 1) {\n        if (argv[0].equals(\"-format-state-store\")) {\n          deleteRMStateStore(conf);\n        } else if (argv[0].equals(\"-format-conf-store\")) {\n          deleteRMConfStore(conf);\n        } else if (argv[0].equals(\"-remove-application-from-state-store\")\n            \u0026\u0026 argv.length \u003d\u003d 2) {\n          removeApplication(conf, argv[1]);\n        } else if (argv[0].equals(\"-convert-fs-configuration\")) {\n          String[] args \u003d Arrays.copyOfRange(argv, 1, argv.length);\n          try {\n            int exitCode \u003d\n                fsConfigConversionArgumentHandler.parseAndConvert(args);\n            if (exitCode !\u003d 0) {\n              LOG.error(FATAL,\n                  \"Error while starting FS configuration conversion, \" +\n                      \"see previous error messages for details!\");\n              System.exit(exitCode);\n            }\n          } catch (Throwable t) {\n            LOG.error(FATAL,\n                \"Error while starting FS configuration conversion!\", t);\n            System.exit(-1);\n          }\n        } else {\n          printUsage(System.err);\n        }\n      } else {\n        ResourceManager resourceManager \u003d new ResourceManager();\n        ShutdownHookManager.get().addShutdownHook(\n          new CompositeServiceShutdownHook(resourceManager),\n          SHUTDOWN_HOOK_PRIORITY);\n        resourceManager.init(conf);\n        resourceManager.start();\n      }\n    } catch (Throwable t) {\n      LOG.error(FATAL, \"Error starting ResourceManager\", t);\n      System.exit(-1);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9699. Migration tool that help to generate CS config based on FS config [Phase 1]. Contributed by Peter Bacsko\n",
      "commitDate": "14/10/19 8:19 AM",
      "commitName": "5cc7873a4723a6c8e8e001d008fcd522eec0433d",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "06/09/19 7:18 PM",
      "commitNameOld": "34b82e6da0a471010cdae613ba39487889d79369",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 37.54,
      "commitsBetweenForRepo": 294,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,46 @@\n   public static void main(String argv[]) {\n     Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n     try {\n       Configuration conf \u003d new YarnConfiguration();\n       GenericOptionsParser hParser \u003d new GenericOptionsParser(conf, argv);\n       argv \u003d hParser.getRemainingArgs();\n       // If -format-state-store, then delete RMStateStore; else startup normally\n       if (argv.length \u003e\u003d 1) {\n         if (argv[0].equals(\"-format-state-store\")) {\n           deleteRMStateStore(conf);\n         } else if (argv[0].equals(\"-remove-application-from-state-store\")\n             \u0026\u0026 argv.length \u003d\u003d 2) {\n           removeApplication(conf, argv[1]);\n+        } else if (argv[0].equals(\"-convert-fs-configuration\")) {\n+          String[] args \u003d Arrays.copyOfRange(argv, 1, argv.length);\n+          try {\n+            int exitCode \u003d\n+                fsConfigConversionArgumentHandler.parseAndConvert(args);\n+            if (exitCode !\u003d 0) {\n+              LOG.error(FATAL,\n+                  \"Error while starting FS configuration conversion, \" +\n+                      \"see previous error messages for details!\");\n+              System.exit(exitCode);\n+            }\n+          } catch (Throwable t) {\n+            LOG.error(FATAL,\n+                \"Error while starting FS configuration conversion!\", t);\n+            System.exit(-1);\n+          }\n         } else {\n           printUsage(System.err);\n         }\n       } else {\n         ResourceManager resourceManager \u003d new ResourceManager();\n         ShutdownHookManager.get().addShutdownHook(\n           new CompositeServiceShutdownHook(resourceManager),\n           SHUTDOWN_HOOK_PRIORITY);\n         resourceManager.init(conf);\n         resourceManager.start();\n       }\n     } catch (Throwable t) {\n       LOG.error(FATAL, \"Error starting ResourceManager\", t);\n       System.exit(-1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]) {\n    Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      GenericOptionsParser hParser \u003d new GenericOptionsParser(conf, argv);\n      argv \u003d hParser.getRemainingArgs();\n      // If -format-state-store, then delete RMStateStore; else startup normally\n      if (argv.length \u003e\u003d 1) {\n        if (argv[0].equals(\"-format-state-store\")) {\n          deleteRMStateStore(conf);\n        } else if (argv[0].equals(\"-remove-application-from-state-store\")\n            \u0026\u0026 argv.length \u003d\u003d 2) {\n          removeApplication(conf, argv[1]);\n        } else if (argv[0].equals(\"-convert-fs-configuration\")) {\n          String[] args \u003d Arrays.copyOfRange(argv, 1, argv.length);\n          try {\n            int exitCode \u003d\n                fsConfigConversionArgumentHandler.parseAndConvert(args);\n            if (exitCode !\u003d 0) {\n              LOG.error(FATAL,\n                  \"Error while starting FS configuration conversion, \" +\n                      \"see previous error messages for details!\");\n              System.exit(exitCode);\n            }\n          } catch (Throwable t) {\n            LOG.error(FATAL,\n                \"Error while starting FS configuration conversion!\", t);\n            System.exit(-1);\n          }\n        } else {\n          printUsage(System.err);\n        }\n      } else {\n        ResourceManager resourceManager \u003d new ResourceManager();\n        ShutdownHookManager.get().addShutdownHook(\n          new CompositeServiceShutdownHook(resourceManager),\n          SHUTDOWN_HOOK_PRIORITY);\n        resourceManager.init(conf);\n        resourceManager.start();\n      }\n    } catch (Throwable t) {\n      LOG.error(FATAL, \"Error starting ResourceManager\", t);\n      System.exit(-1);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "e40e2d6ad5cbe782c3a067229270738b501ed27e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7243. Moving logging APIs over to slf4j in hadoop-yarn-server-resourcemanager.\n\nSigned-off-by: Akira Ajisaka \u003caajisaka@apache.org\u003e\n",
      "commitDate": "04/03/19 9:10 PM",
      "commitName": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthor": "Prabhu Joseph",
      "commitDateOld": "11/11/18 10:27 PM",
      "commitNameOld": "4e7284443e6cf8dac3cd5d2581730c87ae6ffb55",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 112.95,
      "commitsBetweenForRepo": 806,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public static void main(String argv[]) {\n     Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n     try {\n       Configuration conf \u003d new YarnConfiguration();\n       GenericOptionsParser hParser \u003d new GenericOptionsParser(conf, argv);\n       argv \u003d hParser.getRemainingArgs();\n       // If -format-state-store, then delete RMStateStore; else startup normally\n       if (argv.length \u003e\u003d 1) {\n         if (argv[0].equals(\"-format-state-store\")) {\n           deleteRMStateStore(conf);\n         } else if (argv[0].equals(\"-remove-application-from-state-store\")\n             \u0026\u0026 argv.length \u003d\u003d 2) {\n           removeApplication(conf, argv[1]);\n         } else {\n           printUsage(System.err);\n         }\n       } else {\n         ResourceManager resourceManager \u003d new ResourceManager();\n         ShutdownHookManager.get().addShutdownHook(\n           new CompositeServiceShutdownHook(resourceManager),\n           SHUTDOWN_HOOK_PRIORITY);\n         resourceManager.init(conf);\n         resourceManager.start();\n       }\n     } catch (Throwable t) {\n-      LOG.fatal(\"Error starting ResourceManager\", t);\n+      LOG.error(FATAL, \"Error starting ResourceManager\", t);\n       System.exit(-1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]) {\n    Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      GenericOptionsParser hParser \u003d new GenericOptionsParser(conf, argv);\n      argv \u003d hParser.getRemainingArgs();\n      // If -format-state-store, then delete RMStateStore; else startup normally\n      if (argv.length \u003e\u003d 1) {\n        if (argv[0].equals(\"-format-state-store\")) {\n          deleteRMStateStore(conf);\n        } else if (argv[0].equals(\"-remove-application-from-state-store\")\n            \u0026\u0026 argv.length \u003d\u003d 2) {\n          removeApplication(conf, argv[1]);\n        } else {\n          printUsage(System.err);\n        }\n      } else {\n        ResourceManager resourceManager \u003d new ResourceManager();\n        ShutdownHookManager.get().addShutdownHook(\n          new CompositeServiceShutdownHook(resourceManager),\n          SHUTDOWN_HOOK_PRIORITY);\n        resourceManager.init(conf);\n        resourceManager.start();\n      }\n    } catch (Throwable t) {\n      LOG.error(FATAL, \"Error starting ResourceManager\", t);\n      System.exit(-1);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "e71d0d87d9b388f211a8eb3d2cd9af347abf9bda": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3410. YARN admin should be able to remove individual application records from RMStateStore. (Rohith Sharmaks via wangda)\n",
      "commitDate": "21/04/15 5:51 PM",
      "commitName": "e71d0d87d9b388f211a8eb3d2cd9af347abf9bda",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "26/02/15 5:12 PM",
      "commitNameOld": "8ca0d957c4b1076e801e1cdce5b44aa805de889c",
      "commitAuthorOld": "Konstantin V Shvachko",
      "daysBetweenCommits": 53.99,
      "commitsBetweenForRepo": 454,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,30 @@\n   public static void main(String argv[]) {\n     Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n     try {\n       Configuration conf \u003d new YarnConfiguration();\n       GenericOptionsParser hParser \u003d new GenericOptionsParser(conf, argv);\n       argv \u003d hParser.getRemainingArgs();\n       // If -format-state-store, then delete RMStateStore; else startup normally\n-      if (argv.length \u003d\u003d 1 \u0026\u0026 argv[0].equals(\"-format-state-store\")) {\n-        deleteRMStateStore(conf);\n+      if (argv.length \u003e\u003d 1) {\n+        if (argv[0].equals(\"-format-state-store\")) {\n+          deleteRMStateStore(conf);\n+        } else if (argv[0].equals(\"-remove-application-from-state-store\")\n+            \u0026\u0026 argv.length \u003d\u003d 2) {\n+          removeApplication(conf, argv[1]);\n+        } else {\n+          printUsage(System.err);\n+        }\n       } else {\n         ResourceManager resourceManager \u003d new ResourceManager();\n         ShutdownHookManager.get().addShutdownHook(\n           new CompositeServiceShutdownHook(resourceManager),\n           SHUTDOWN_HOOK_PRIORITY);\n         resourceManager.init(conf);\n         resourceManager.start();\n       }\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting ResourceManager\", t);\n       System.exit(-1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]) {\n    Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      GenericOptionsParser hParser \u003d new GenericOptionsParser(conf, argv);\n      argv \u003d hParser.getRemainingArgs();\n      // If -format-state-store, then delete RMStateStore; else startup normally\n      if (argv.length \u003e\u003d 1) {\n        if (argv[0].equals(\"-format-state-store\")) {\n          deleteRMStateStore(conf);\n        } else if (argv[0].equals(\"-remove-application-from-state-store\")\n            \u0026\u0026 argv.length \u003d\u003d 2) {\n          removeApplication(conf, argv[1]);\n        } else {\n          printUsage(System.err);\n        }\n      } else {\n        ResourceManager resourceManager \u003d new ResourceManager();\n        ShutdownHookManager.get().addShutdownHook(\n          new CompositeServiceShutdownHook(resourceManager),\n          SHUTDOWN_HOOK_PRIORITY);\n        resourceManager.init(conf);\n        resourceManager.start();\n      }\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting ResourceManager\", t);\n      System.exit(-1);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "8ca0d957c4b1076e801e1cdce5b44aa805de889c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3255. RM, NM, JobHistoryServer, and WebAppProxyServer\u0027s main() should support generic options. Contributed by Konstantin Shvachko.",
      "commitDate": "26/02/15 5:12 PM",
      "commitName": "8ca0d957c4b1076e801e1cdce5b44aa805de889c",
      "commitAuthor": "Konstantin V Shvachko",
      "commitDateOld": "09/02/15 1:47 PM",
      "commitNameOld": "0af6a99a3fcfa4b47d3bcba5e5cc5fe7b312a152",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 17.14,
      "commitsBetweenForRepo": 189,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,23 @@\n   public static void main(String argv[]) {\n     Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n     try {\n       Configuration conf \u003d new YarnConfiguration();\n+      GenericOptionsParser hParser \u003d new GenericOptionsParser(conf, argv);\n+      argv \u003d hParser.getRemainingArgs();\n       // If -format-state-store, then delete RMStateStore; else startup normally\n       if (argv.length \u003d\u003d 1 \u0026\u0026 argv[0].equals(\"-format-state-store\")) {\n         deleteRMStateStore(conf);\n       } else {\n         ResourceManager resourceManager \u003d new ResourceManager();\n         ShutdownHookManager.get().addShutdownHook(\n           new CompositeServiceShutdownHook(resourceManager),\n           SHUTDOWN_HOOK_PRIORITY);\n         resourceManager.init(conf);\n         resourceManager.start();\n       }\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting ResourceManager\", t);\n       System.exit(-1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]) {\n    Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      GenericOptionsParser hParser \u003d new GenericOptionsParser(conf, argv);\n      argv \u003d hParser.getRemainingArgs();\n      // If -format-state-store, then delete RMStateStore; else startup normally\n      if (argv.length \u003d\u003d 1 \u0026\u0026 argv[0].equals(\"-format-state-store\")) {\n        deleteRMStateStore(conf);\n      } else {\n        ResourceManager resourceManager \u003d new ResourceManager();\n        ShutdownHookManager.get().addShutdownHook(\n          new CompositeServiceShutdownHook(resourceManager),\n          SHUTDOWN_HOOK_PRIORITY);\n        resourceManager.init(conf);\n        resourceManager.start();\n      }\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting ResourceManager\", t);\n      System.exit(-1);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "266a4ff6a502ebb27d1ec7468c539e304b4bcf47": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2131. Addendum. Add a way to format the RMStateStore. (Robert Kanter via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612443 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/07/14 6:30 PM",
      "commitName": "266a4ff6a502ebb27d1ec7468c539e304b4bcf47",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "09/07/14 12:58 PM",
      "commitNameOld": "8fbca62a9008306249779367af1d3c329f875552",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 12.23,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public static void main(String argv[]) {\n     Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n     try {\n       Configuration conf \u003d new YarnConfiguration();\n-      // If -format, then delete RMStateStore; else startup normally\n-      if (argv.length \u003d\u003d 1 \u0026\u0026 argv[0].equals(\"-format\")) {\n+      // If -format-state-store, then delete RMStateStore; else startup normally\n+      if (argv.length \u003d\u003d 1 \u0026\u0026 argv[0].equals(\"-format-state-store\")) {\n         deleteRMStateStore(conf);\n       } else {\n         ResourceManager resourceManager \u003d new ResourceManager();\n         ShutdownHookManager.get().addShutdownHook(\n           new CompositeServiceShutdownHook(resourceManager),\n           SHUTDOWN_HOOK_PRIORITY);\n         resourceManager.init(conf);\n         resourceManager.start();\n       }\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting ResourceManager\", t);\n       System.exit(-1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]) {\n    Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      // If -format-state-store, then delete RMStateStore; else startup normally\n      if (argv.length \u003d\u003d 1 \u0026\u0026 argv[0].equals(\"-format-state-store\")) {\n        deleteRMStateStore(conf);\n      } else {\n        ResourceManager resourceManager \u003d new ResourceManager();\n        ShutdownHookManager.get().addShutdownHook(\n          new CompositeServiceShutdownHook(resourceManager),\n          SHUTDOWN_HOOK_PRIORITY);\n        resourceManager.init(conf);\n        resourceManager.start();\n      }\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting ResourceManager\", t);\n      System.exit(-1);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "8fbca62a9008306249779367af1d3c329f875552": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2131. Add a way to format the RMStateStore. (Robert Kanter via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1609278 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/07/14 12:58 PM",
      "commitName": "8fbca62a9008306249779367af1d3c329f875552",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "29/06/14 11:24 AM",
      "commitNameOld": "b0c51504c494847a5d0e98d212660297ed43ba56",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 10.07,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,21 @@\n   public static void main(String argv[]) {\n     Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n     try {\n       Configuration conf \u003d new YarnConfiguration();\n-      ResourceManager resourceManager \u003d new ResourceManager();\n-      ShutdownHookManager.get().addShutdownHook(\n-        new CompositeServiceShutdownHook(resourceManager),\n-        SHUTDOWN_HOOK_PRIORITY);\n-      resourceManager.init(conf);\n-      resourceManager.start();\n+      // If -format, then delete RMStateStore; else startup normally\n+      if (argv.length \u003d\u003d 1 \u0026\u0026 argv[0].equals(\"-format\")) {\n+        deleteRMStateStore(conf);\n+      } else {\n+        ResourceManager resourceManager \u003d new ResourceManager();\n+        ShutdownHookManager.get().addShutdownHook(\n+          new CompositeServiceShutdownHook(resourceManager),\n+          SHUTDOWN_HOOK_PRIORITY);\n+        resourceManager.init(conf);\n+        resourceManager.start();\n+      }\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting ResourceManager\", t);\n       System.exit(-1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]) {\n    Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      // If -format, then delete RMStateStore; else startup normally\n      if (argv.length \u003d\u003d 1 \u0026\u0026 argv[0].equals(\"-format\")) {\n        deleteRMStateStore(conf);\n      } else {\n        ResourceManager resourceManager \u003d new ResourceManager();\n        ShutdownHookManager.get().addShutdownHook(\n          new CompositeServiceShutdownHook(resourceManager),\n          SHUTDOWN_HOOK_PRIORITY);\n        resourceManager.init(conf);\n        resourceManager.start();\n      }\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting ResourceManager\", t);\n      System.exit(-1);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1553. Modified YARN and MR to stop using HttpConfig.isSecure() and\ninstead rely on the http policy framework. And also fix some bugs related\nto https handling in YARN web-apps. Contributed by Haohui Mai.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1568501 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/02/14 12:01 PM",
      "commitName": "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/02/14 1:23 PM",
      "commitNameOld": "2b916db60b94ceffbb17dc2778287c88b966bc04",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.94,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,16 @@\n   public static void main(String argv[]) {\n     Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n     try {\n       Configuration conf \u003d new YarnConfiguration();\n       ResourceManager resourceManager \u003d new ResourceManager();\n       ShutdownHookManager.get().addShutdownHook(\n         new CompositeServiceShutdownHook(resourceManager),\n         SHUTDOWN_HOOK_PRIORITY);\n-      setHttpPolicy(conf);\n       resourceManager.init(conf);\n       resourceManager.start();\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting ResourceManager\", t);\n       System.exit(-1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]) {\n    Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      ResourceManager resourceManager \u003d new ResourceManager();\n      ShutdownHookManager.get().addShutdownHook(\n        new CompositeServiceShutdownHook(resourceManager),\n        SHUTDOWN_HOOK_PRIORITY);\n      resourceManager.init(conf);\n      resourceManager.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting ResourceManager\", t);\n      System.exit(-1);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "21181b65531449e5fda321c11f0672c3067641aa": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1277. Added a policy based configuration for http/https in common HttpServer and using the same in YARN - related\nto per project https config support via HADOOP-10022. Contributed by Suresh Srinivas and Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1529662 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/10/13 11:43 AM",
      "commitName": "21181b65531449e5fda321c11f0672c3067641aa",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/10/13 11:40 AM",
      "commitNameOld": "cbab04727bf24ec77f34677d0060cfa54263faf5",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 2.0,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   public static void main(String argv[]) {\n     Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n     try {\n       Configuration conf \u003d new YarnConfiguration();\n       ResourceManager resourceManager \u003d new ResourceManager();\n       ShutdownHookManager.get().addShutdownHook(\n         new CompositeServiceShutdownHook(resourceManager),\n         SHUTDOWN_HOOK_PRIORITY);\n+      setHttpPolicy(conf);\n       resourceManager.init(conf);\n       resourceManager.start();\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting ResourceManager\", t);\n       System.exit(-1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]) {\n    Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      ResourceManager resourceManager \u003d new ResourceManager();\n      ShutdownHookManager.get().addShutdownHook(\n        new CompositeServiceShutdownHook(resourceManager),\n        SHUTDOWN_HOOK_PRIORITY);\n      setHttpPolicy(conf);\n      resourceManager.init(conf);\n      resourceManager.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting ResourceManager\", t);\n      System.exit(-1);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "6cd0736cc57849e4f7c5d38a3986432a9717fe39": {
      "type": "Ybodychange",
      "commitMessage": "YARN-230. RM Restart phase 1 - includes support for saving/restarting all applications on an RM bounce. Contributed by Bikas Saha.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1423758 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/12 8:21 PM",
      "commitName": "6cd0736cc57849e4f7c5d38a3986432a9717fe39",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "28/11/12 5:56 PM",
      "commitNameOld": "1943fdbec613715f3cdc3ca60cbd273115f28299",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 20.1,
      "commitsBetweenForRepo": 77,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,16 @@\n   public static void main(String argv[]) {\n     Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n     try {\n       Configuration conf \u003d new YarnConfiguration();\n-      RMStateStore store \u003d  StoreFactory.getStore(conf);\n-      ResourceManager resourceManager \u003d new ResourceManager(store);\n+      ResourceManager resourceManager \u003d new ResourceManager();\n       ShutdownHookManager.get().addShutdownHook(\n         new CompositeServiceShutdownHook(resourceManager),\n         SHUTDOWN_HOOK_PRIORITY);\n       resourceManager.init(conf);\n-      //resourceManager.recover(store.restore());\n       resourceManager.start();\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting ResourceManager\", t);\n       System.exit(-1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]) {\n    Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      ResourceManager resourceManager \u003d new ResourceManager();\n      ShutdownHookManager.get().addShutdownHook(\n        new CompositeServiceShutdownHook(resourceManager),\n        SHUTDOWN_HOOK_PRIORITY);\n      resourceManager.init(conf);\n      resourceManager.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting ResourceManager\", t);\n      System.exit(-1);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "1943fdbec613715f3cdc3ca60cbd273115f28299": {
      "type": "Ybodychange",
      "commitMessage": "YARN-229. Remove old unused RM recovery code. Contributed by Bikas Saha.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1415029 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/11/12 5:56 PM",
      "commitName": "1943fdbec613715f3cdc3ca60cbd273115f28299",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "19/10/12 1:37 PM",
      "commitNameOld": "f79ae9141422dc4b2211ad3ca60bb79c3d266cb3",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 40.22,
      "commitsBetweenForRepo": 201,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n   public static void main(String argv[]) {\n     Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n     try {\n       Configuration conf \u003d new YarnConfiguration();\n-      Store store \u003d  StoreFactory.getStore(conf);\n+      RMStateStore store \u003d  StoreFactory.getStore(conf);\n       ResourceManager resourceManager \u003d new ResourceManager(store);\n       ShutdownHookManager.get().addShutdownHook(\n         new CompositeServiceShutdownHook(resourceManager),\n         SHUTDOWN_HOOK_PRIORITY);\n       resourceManager.init(conf);\n       //resourceManager.recover(store.restore());\n-      //store.doneWithRecovery();\n       resourceManager.start();\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting ResourceManager\", t);\n       System.exit(-1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]) {\n    Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      RMStateStore store \u003d  StoreFactory.getStore(conf);\n      ResourceManager resourceManager \u003d new ResourceManager(store);\n      ShutdownHookManager.get().addShutdownHook(\n        new CompositeServiceShutdownHook(resourceManager),\n        SHUTDOWN_HOOK_PRIORITY);\n      resourceManager.init(conf);\n      //resourceManager.recover(store.restore());\n      resourceManager.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting ResourceManager\", t);\n      System.exit(-1);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void main(String argv[]) {\n    Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      Store store \u003d  StoreFactory.getStore(conf);\n      ResourceManager resourceManager \u003d new ResourceManager(store);\n      ShutdownHookManager.get().addShutdownHook(\n        new CompositeServiceShutdownHook(resourceManager),\n        SHUTDOWN_HOOK_PRIORITY);\n      resourceManager.init(conf);\n      //resourceManager.recover(store.restore());\n      //store.doneWithRecovery();\n      resourceManager.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting ResourceManager\", t);\n      System.exit(-1);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java"
      }
    },
    "11782dd3a5ee5a2f6ad42b335f0386d00baa9ae1": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4300. OOM in AM can turn it into a zombie. (Robert Evans via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1359399 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/07/12 2:08 PM",
      "commitName": "11782dd3a5ee5a2f6ad42b335f0386d00baa9ae1",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "06/07/12 6:38 AM",
      "commitNameOld": "072292219ee522bd799fea54d150b6a601c94b97",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 3.31,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   public static void main(String argv[]) {\n+    Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n     try {\n       Configuration conf \u003d new YarnConfiguration();\n       Store store \u003d  StoreFactory.getStore(conf);\n       ResourceManager resourceManager \u003d new ResourceManager(store);\n       ShutdownHookManager.get().addShutdownHook(\n         new CompositeServiceShutdownHook(resourceManager),\n         SHUTDOWN_HOOK_PRIORITY);\n       resourceManager.init(conf);\n       //resourceManager.recover(store.restore());\n       //store.doneWithRecovery();\n       resourceManager.start();\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting ResourceManager\", t);\n       System.exit(-1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]) {\n    Thread.setDefaultUncaughtExceptionHandler(new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      Store store \u003d  StoreFactory.getStore(conf);\n      ResourceManager resourceManager \u003d new ResourceManager(store);\n      ShutdownHookManager.get().addShutdownHook(\n        new CompositeServiceShutdownHook(resourceManager),\n        SHUTDOWN_HOOK_PRIORITY);\n      resourceManager.init(conf);\n      //resourceManager.recover(store.restore());\n      //store.doneWithRecovery();\n      resourceManager.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting ResourceManager\", t);\n      System.exit(-1);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "0fca4fbaf35ad6b48c57125a9389aaf45a2c88a5": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4205. retrofit all JVM shutdown hooks to use ShutdownHookManager (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1333748 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/05/12 8:20 PM",
      "commitName": "0fca4fbaf35ad6b48c57125a9389aaf45a2c88a5",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "19/04/12 1:33 PM",
      "commitNameOld": "df654cca49c12ab3fa8ec1e626da1bb562bbb6c1",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 14.28,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   public static void main(String argv[]) {\n     StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n     try {\n       Configuration conf \u003d new YarnConfiguration();\n       Store store \u003d  StoreFactory.getStore(conf);\n       ResourceManager resourceManager \u003d new ResourceManager(store);\n-      Runtime.getRuntime().addShutdownHook(\n-          new CompositeServiceShutdownHook(resourceManager));\n+      ShutdownHookManager.get().addShutdownHook(\n+        new CompositeServiceShutdownHook(resourceManager),\n+        SHUTDOWN_HOOK_PRIORITY);\n       resourceManager.init(conf);\n       //resourceManager.recover(store.restore());\n       //store.doneWithRecovery();\n       resourceManager.start();\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting ResourceManager\", t);\n       System.exit(-1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]) {\n    StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      Store store \u003d  StoreFactory.getStore(conf);\n      ResourceManager resourceManager \u003d new ResourceManager(store);\n      ShutdownHookManager.get().addShutdownHook(\n        new CompositeServiceShutdownHook(resourceManager),\n        SHUTDOWN_HOOK_PRIORITY);\n      resourceManager.init(conf);\n      //resourceManager.recover(store.restore());\n      //store.doneWithRecovery();\n      resourceManager.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting ResourceManager\", t);\n      System.exit(-1);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "4ba2acf3363bdfd7fcdd9de496cd57f8af6f03ad": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2966. Added ShutDown hooks for MRV2 processes so that they can gracefully exit. Contributed by Abhijit Suresh Shingate.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1170746 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/09/11 10:57 AM",
      "commitName": "4ba2acf3363bdfd7fcdd9de496cd57f8af6f03ad",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/09/11 7:19 PM",
      "commitNameOld": "ca853445e9a31e05278e9dceea9dbed734103f49",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 5.65,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   public static void main(String argv[]) {\n     StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n-    ResourceManager resourceManager \u003d null;\n     try {\n       Configuration conf \u003d new YarnConfiguration();\n       Store store \u003d  StoreFactory.getStore(conf);\n-      resourceManager \u003d new ResourceManager(store);\n+      ResourceManager resourceManager \u003d new ResourceManager(store);\n+      Runtime.getRuntime().addShutdownHook(\n+          new CompositeServiceShutdownHook(resourceManager));\n       resourceManager.init(conf);\n       //resourceManager.recover(store.restore());\n       //store.doneWithRecovery();\n       resourceManager.start();\n-    } catch (Throwable e) {\n-      LOG.error(\"Error starting RM\", e);\n-      if (resourceManager !\u003d null) {\n-        resourceManager.stop();\n-      }\n+    } catch (Throwable t) {\n+      LOG.fatal(\"Error starting ResourceManager\", t);\n+      System.exit(-1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]) {\n    StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      Store store \u003d  StoreFactory.getStore(conf);\n      ResourceManager resourceManager \u003d new ResourceManager(store);\n      Runtime.getRuntime().addShutdownHook(\n          new CompositeServiceShutdownHook(resourceManager));\n      resourceManager.init(conf);\n      //resourceManager.recover(store.restore());\n      //store.doneWithRecovery();\n      resourceManager.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting ResourceManager\", t);\n      System.exit(-1);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "d51078eb7edf4d28069163bad30d28e35c5e166e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2774. Add startup message to ResourceManager \u0026 NodeManager on startup. Contributed by Venu Gopala Rao. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165933 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/09/11 4:40 PM",
      "commitName": "d51078eb7edf4d28069163bad30d28e35c5e166e",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "29/08/11 4:27 PM",
      "commitNameOld": "fb6ecb9b27798a923ca290ba5d23368e3a820a6c",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 8.01,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   public static void main(String argv[]) {\n+    StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n     ResourceManager resourceManager \u003d null;\n     try {\n       Configuration conf \u003d new YarnConfiguration();\n       Store store \u003d  StoreFactory.getStore(conf);\n       resourceManager \u003d new ResourceManager(store);\n       resourceManager.init(conf);\n       //resourceManager.recover(store.restore());\n       //store.doneWithRecovery();\n       resourceManager.start();\n     } catch (Throwable e) {\n       LOG.error(\"Error starting RM\", e);\n       if (resourceManager !\u003d null) {\n         resourceManager.stop();\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]) {\n    StringUtils.startupShutdownMessage(ResourceManager.class, argv, LOG);\n    ResourceManager resourceManager \u003d null;\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      Store store \u003d  StoreFactory.getStore(conf);\n      resourceManager \u003d new ResourceManager(store);\n      resourceManager.init(conf);\n      //resourceManager.recover(store.restore());\n      //store.doneWithRecovery();\n      resourceManager.start();\n    } catch (Throwable e) {\n      LOG.error(\"Error starting RM\", e);\n      if (resourceManager !\u003d null) {\n        resourceManager.stop();\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void main(String argv[]) {\n    ResourceManager resourceManager \u003d null;\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      Store store \u003d  StoreFactory.getStore(conf);\n      resourceManager \u003d new ResourceManager(store);\n      resourceManager.init(conf);\n      //resourceManager.recover(store.restore());\n      //store.doneWithRecovery();\n      resourceManager.start();\n    } catch (Throwable e) {\n      LOG.error(\"Error starting RM\", e);\n      if (resourceManager !\u003d null) {\n        resourceManager.stop();\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange)",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n-  public static void main(String argv[]) throws Exception {\n-    StringUtils.startupShutdownMessage(TaskTracker.class, argv, LOG);\n-    if (argv.length !\u003d 0) {\n-      System.out.println(\"usage: TaskTracker\");\n-      System.exit(-1);\n-    }\n+  public static void main(String argv[]) {\n+    ResourceManager resourceManager \u003d null;\n     try {\n-      JobConf conf\u003dnew JobConf();\n-      // enable the server to track time spent waiting on locks\n-      ReflectionUtils.setContentionTracing\n-        (conf.getBoolean(TT_CONTENTION_TRACKING, false));\n-      new TaskTracker(conf).run();\n+      Configuration conf \u003d new YarnConfiguration();\n+      Store store \u003d  StoreFactory.getStore(conf);\n+      resourceManager \u003d new ResourceManager(store);\n+      resourceManager.init(conf);\n+      //resourceManager.recover(store.restore());\n+      //store.doneWithRecovery();\n+      resourceManager.start();\n     } catch (Throwable e) {\n-      LOG.error(\"Can not start task tracker because \"+\n-                StringUtils.stringifyException(e));\n-      System.exit(-1);\n+      LOG.error(\"Error starting RM\", e);\n+      if (resourceManager !\u003d null) {\n+        resourceManager.stop();\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void main(String argv[]) {\n    ResourceManager resourceManager \u003d null;\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      Store store \u003d  StoreFactory.getStore(conf);\n      resourceManager \u003d new ResourceManager(store);\n      resourceManager.init(conf);\n      //resourceManager.recover(store.restore());\n      //store.doneWithRecovery();\n      resourceManager.start();\n    } catch (Throwable e) {\n      LOG.error(\"Error starting RM\", e);\n      if (resourceManager !\u003d null) {\n        resourceManager.stop();\n      }\n    }\n  }",
          "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
          "extendedDetails": {
            "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/TaskTracker.java",
            "newPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
            "oldMethodName": "main",
            "newMethodName": "main"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n-  public static void main(String argv[]) throws Exception {\n-    StringUtils.startupShutdownMessage(TaskTracker.class, argv, LOG);\n-    if (argv.length !\u003d 0) {\n-      System.out.println(\"usage: TaskTracker\");\n-      System.exit(-1);\n-    }\n+  public static void main(String argv[]) {\n+    ResourceManager resourceManager \u003d null;\n     try {\n-      JobConf conf\u003dnew JobConf();\n-      // enable the server to track time spent waiting on locks\n-      ReflectionUtils.setContentionTracing\n-        (conf.getBoolean(TT_CONTENTION_TRACKING, false));\n-      new TaskTracker(conf).run();\n+      Configuration conf \u003d new YarnConfiguration();\n+      Store store \u003d  StoreFactory.getStore(conf);\n+      resourceManager \u003d new ResourceManager(store);\n+      resourceManager.init(conf);\n+      //resourceManager.recover(store.restore());\n+      //store.doneWithRecovery();\n+      resourceManager.start();\n     } catch (Throwable e) {\n-      LOG.error(\"Can not start task tracker because \"+\n-                StringUtils.stringifyException(e));\n-      System.exit(-1);\n+      LOG.error(\"Error starting RM\", e);\n+      if (resourceManager !\u003d null) {\n+        resourceManager.stop();\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void main(String argv[]) {\n    ResourceManager resourceManager \u003d null;\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      Store store \u003d  StoreFactory.getStore(conf);\n      resourceManager \u003d new ResourceManager(store);\n      resourceManager.init(conf);\n      //resourceManager.recover(store.restore());\n      //store.doneWithRecovery();\n      resourceManager.start();\n    } catch (Throwable e) {\n      LOG.error(\"Error starting RM\", e);\n      if (resourceManager !\u003d null) {\n        resourceManager.stop();\n      }\n    }\n  }",
          "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
          "extendedDetails": {
            "oldValue": "[Exception]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n-  public static void main(String argv[]) throws Exception {\n-    StringUtils.startupShutdownMessage(TaskTracker.class, argv, LOG);\n-    if (argv.length !\u003d 0) {\n-      System.out.println(\"usage: TaskTracker\");\n-      System.exit(-1);\n-    }\n+  public static void main(String argv[]) {\n+    ResourceManager resourceManager \u003d null;\n     try {\n-      JobConf conf\u003dnew JobConf();\n-      // enable the server to track time spent waiting on locks\n-      ReflectionUtils.setContentionTracing\n-        (conf.getBoolean(TT_CONTENTION_TRACKING, false));\n-      new TaskTracker(conf).run();\n+      Configuration conf \u003d new YarnConfiguration();\n+      Store store \u003d  StoreFactory.getStore(conf);\n+      resourceManager \u003d new ResourceManager(store);\n+      resourceManager.init(conf);\n+      //resourceManager.recover(store.restore());\n+      //store.doneWithRecovery();\n+      resourceManager.start();\n     } catch (Throwable e) {\n-      LOG.error(\"Can not start task tracker because \"+\n-                StringUtils.stringifyException(e));\n-      System.exit(-1);\n+      LOG.error(\"Error starting RM\", e);\n+      if (resourceManager !\u003d null) {\n+        resourceManager.stop();\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void main(String argv[]) {\n    ResourceManager resourceManager \u003d null;\n    try {\n      Configuration conf \u003d new YarnConfiguration();\n      Store store \u003d  StoreFactory.getStore(conf);\n      resourceManager \u003d new ResourceManager(store);\n      resourceManager.init(conf);\n      //resourceManager.recover(store.restore());\n      //store.doneWithRecovery();\n      resourceManager.start();\n    } catch (Throwable e) {\n      LOG.error(\"Error starting RM\", e);\n      if (resourceManager !\u003d null) {\n        resourceManager.stop();\n      }\n    }\n  }",
          "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,18 @@\n+  public static void main(String argv[]) throws Exception {\n+    StringUtils.startupShutdownMessage(TaskTracker.class, argv, LOG);\n+    if (argv.length !\u003d 0) {\n+      System.out.println(\"usage: TaskTracker\");\n+      System.exit(-1);\n+    }\n+    try {\n+      JobConf conf\u003dnew JobConf();\n+      // enable the server to track time spent waiting on locks\n+      ReflectionUtils.setContentionTracing\n+        (conf.getBoolean(TT_CONTENTION_TRACKING, false));\n+      new TaskTracker(conf).run();\n+    } catch (Throwable e) {\n+      LOG.error(\"Can not start task tracker because \"+\n+                StringUtils.stringifyException(e));\n+      System.exit(-1);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String argv[]) throws Exception {\n    StringUtils.startupShutdownMessage(TaskTracker.class, argv, LOG);\n    if (argv.length !\u003d 0) {\n      System.out.println(\"usage: TaskTracker\");\n      System.exit(-1);\n    }\n    try {\n      JobConf conf\u003dnew JobConf();\n      // enable the server to track time spent waiting on locks\n      ReflectionUtils.setContentionTracing\n        (conf.getBoolean(TT_CONTENTION_TRACKING, false));\n      new TaskTracker(conf).run();\n    } catch (Throwable e) {\n      LOG.error(\"Can not start task tracker because \"+\n                StringUtils.stringifyException(e));\n      System.exit(-1);\n    }\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/TaskTracker.java"
    }
  }
}