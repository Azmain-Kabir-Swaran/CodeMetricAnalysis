{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobResourceUploader.java",
  "functionName": "addFile",
  "functionId": "addFile___p-Path__fileSizeBytes-long",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobResourceUploader.java",
  "functionStartLine": 588,
  "functionEndLine": 611,
  "numCommitsSeen": 17,
  "timeTaken": 982,
  "changeHistory": [
    "f80a7298325a4626638ee24467e2012442e480d4"
  ],
  "changeHistoryShort": {
    "f80a7298325a4626638ee24467e2012442e480d4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f80a7298325a4626638ee24467e2012442e480d4": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6690. Limit the number of resources a single map reduce job can submit for localization. Contributed by Chris Trezzo\n",
      "commitDate": "17/08/16 9:22 AM",
      "commitName": "f80a7298325a4626638ee24467e2012442e480d4",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,24 @@\n+    private void addFile(Path p, long fileSizeBytes) throws IOException {\n+      totalNumberOfResources++;\n+      totalSizeBytes +\u003d fileSizeBytes;\n+      if (fileSizeBytes \u003e currentMaxSizeOfFileBytes) {\n+        currentMaxSizeOfFileBytes \u003d fileSizeBytes;\n+      }\n+\n+      if (totalConfigSizeBytes \u003e 0 \u0026\u0026 totalSizeBytes \u003e totalConfigSizeBytes) {\n+        throw new IOException(MAX_TOTAL_RESOURCE_MB_ERR_MSG + \" (Max: \"\n+            + maxSizeMB + \"MB).\");\n+      }\n+\n+      if (maxNumOfResources \u003e 0 \u0026\u0026\n+          totalNumberOfResources \u003e maxNumOfResources) {\n+        throw new IOException(MAX_RESOURCE_ERR_MSG + \" (Max: \"\n+            + maxNumOfResources + \").\");\n+      }\n+\n+      if (totalConfigSizeOfResourceBytes \u003e 0\n+          \u0026\u0026 currentMaxSizeOfFileBytes \u003e totalConfigSizeOfResourceBytes) {\n+        throw new IOException(MAX_SINGLE_RESOURCE_MB_ERR_MSG + \" (Max: \"\n+            + maxSizeOfResourceMB + \"MB, Violating resource: \" + p + \").\");\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void addFile(Path p, long fileSizeBytes) throws IOException {\n      totalNumberOfResources++;\n      totalSizeBytes +\u003d fileSizeBytes;\n      if (fileSizeBytes \u003e currentMaxSizeOfFileBytes) {\n        currentMaxSizeOfFileBytes \u003d fileSizeBytes;\n      }\n\n      if (totalConfigSizeBytes \u003e 0 \u0026\u0026 totalSizeBytes \u003e totalConfigSizeBytes) {\n        throw new IOException(MAX_TOTAL_RESOURCE_MB_ERR_MSG + \" (Max: \"\n            + maxSizeMB + \"MB).\");\n      }\n\n      if (maxNumOfResources \u003e 0 \u0026\u0026\n          totalNumberOfResources \u003e maxNumOfResources) {\n        throw new IOException(MAX_RESOURCE_ERR_MSG + \" (Max: \"\n            + maxNumOfResources + \").\");\n      }\n\n      if (totalConfigSizeOfResourceBytes \u003e 0\n          \u0026\u0026 currentMaxSizeOfFileBytes \u003e totalConfigSizeOfResourceBytes) {\n        throw new IOException(MAX_SINGLE_RESOURCE_MB_ERR_MSG + \" (Max: \"\n            + maxSizeOfResourceMB + \"MB, Violating resource: \" + p + \").\");\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobResourceUploader.java"
    }
  }
}