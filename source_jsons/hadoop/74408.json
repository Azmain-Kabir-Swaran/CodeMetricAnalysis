{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SSLHostnameVerifier.java",
  "functionName": "getDNSSubjectAlts",
  "functionId": "getDNSSubjectAlts___cert-X509Certificate",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLHostnameVerifier.java",
  "functionStartLine": 578,
  "functionEndLine": 607,
  "numCommitsSeen": 10,
  "timeTaken": 898,
  "changeHistory": [
    "640a72efbee17f6c7056650dae04f8b3f59ddaab",
    "9d16c9354b0c05edb30d23003dcdec4cc44ed925"
  ],
  "changeHistoryShort": {
    "640a72efbee17f6c7056650dae04f8b3f59ddaab": "Ybodychange",
    "9d16c9354b0c05edb30d23003dcdec4cc44ed925": "Yintroduced"
  },
  "changeHistoryDetails": {
    "640a72efbee17f6c7056650dae04f8b3f59ddaab": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10449. Fix the javac warnings in the security package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1582851 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/03/14 11:15 AM",
      "commitName": "640a72efbee17f6c7056650dae04f8b3f59ddaab",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "24/08/12 6:03 PM",
      "commitNameOld": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 580.72,
      "commitsBetweenForRepo": 3631,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n       public static String[] getDNSSubjectAlts(X509Certificate cert) {\n-          LinkedList subjectAltList \u003d new LinkedList();\n-          Collection c \u003d null;\n+          final List\u003cString\u003e subjectAltList \u003d new LinkedList\u003cString\u003e();\n+          Collection\u003cList\u003c?\u003e\u003e c \u003d null;\n           try {\n               c \u003d cert.getSubjectAlternativeNames();\n           }\n           catch (CertificateParsingException cpe) {\n               // Should probably log.debug() this?\n               cpe.printStackTrace();\n           }\n           if (c !\u003d null) {\n-              Iterator it \u003d c.iterator();\n+              Iterator\u003cList\u003c?\u003e\u003e it \u003d c.iterator();\n               while (it.hasNext()) {\n-                  List list \u003d (List) it.next();\n+                  List\u003c?\u003e list \u003d it.next();\n                   int type \u003d ((Integer) list.get(0)).intValue();\n                   // If type is 2, then we\u0027ve got a dNSName\n                   if (type \u003d\u003d 2) {\n                       String s \u003d (String) list.get(1);\n                       subjectAltList.add(s);\n                   }\n               }\n           }\n           if (!subjectAltList.isEmpty()) {\n               String[] subjectAlts \u003d new String[subjectAltList.size()];\n               subjectAltList.toArray(subjectAlts);\n               return subjectAlts;\n           } else {\n               return null;\n           }\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public static String[] getDNSSubjectAlts(X509Certificate cert) {\n          final List\u003cString\u003e subjectAltList \u003d new LinkedList\u003cString\u003e();\n          Collection\u003cList\u003c?\u003e\u003e c \u003d null;\n          try {\n              c \u003d cert.getSubjectAlternativeNames();\n          }\n          catch (CertificateParsingException cpe) {\n              // Should probably log.debug() this?\n              cpe.printStackTrace();\n          }\n          if (c !\u003d null) {\n              Iterator\u003cList\u003c?\u003e\u003e it \u003d c.iterator();\n              while (it.hasNext()) {\n                  List\u003c?\u003e list \u003d it.next();\n                  int type \u003d ((Integer) list.get(0)).intValue();\n                  // If type is 2, then we\u0027ve got a dNSName\n                  if (type \u003d\u003d 2) {\n                      String s \u003d (String) list.get(1);\n                      subjectAltList.add(s);\n                  }\n              }\n          }\n          if (!subjectAltList.isEmpty()) {\n              String[] subjectAlts \u003d new String[subjectAltList.size()];\n              subjectAltList.toArray(subjectAlts);\n              return subjectAlts;\n          } else {\n              return null;\n          }\n      }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLHostnameVerifier.java",
      "extendedDetails": {}
    },
    "9d16c9354b0c05edb30d23003dcdec4cc44ed925": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-4417. add support for encrypted shuffle (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1365979 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/07/12 6:23 AM",
      "commitName": "9d16c9354b0c05edb30d23003dcdec4cc44ed925",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,30 @@\n+      public static String[] getDNSSubjectAlts(X509Certificate cert) {\n+          LinkedList subjectAltList \u003d new LinkedList();\n+          Collection c \u003d null;\n+          try {\n+              c \u003d cert.getSubjectAlternativeNames();\n+          }\n+          catch (CertificateParsingException cpe) {\n+              // Should probably log.debug() this?\n+              cpe.printStackTrace();\n+          }\n+          if (c !\u003d null) {\n+              Iterator it \u003d c.iterator();\n+              while (it.hasNext()) {\n+                  List list \u003d (List) it.next();\n+                  int type \u003d ((Integer) list.get(0)).intValue();\n+                  // If type is 2, then we\u0027ve got a dNSName\n+                  if (type \u003d\u003d 2) {\n+                      String s \u003d (String) list.get(1);\n+                      subjectAltList.add(s);\n+                  }\n+              }\n+          }\n+          if (!subjectAltList.isEmpty()) {\n+              String[] subjectAlts \u003d new String[subjectAltList.size()];\n+              subjectAltList.toArray(subjectAlts);\n+              return subjectAlts;\n+          } else {\n+              return null;\n+          }\n+      }\n\\ No newline at end of file\n",
      "actualSource": "      public static String[] getDNSSubjectAlts(X509Certificate cert) {\n          LinkedList subjectAltList \u003d new LinkedList();\n          Collection c \u003d null;\n          try {\n              c \u003d cert.getSubjectAlternativeNames();\n          }\n          catch (CertificateParsingException cpe) {\n              // Should probably log.debug() this?\n              cpe.printStackTrace();\n          }\n          if (c !\u003d null) {\n              Iterator it \u003d c.iterator();\n              while (it.hasNext()) {\n                  List list \u003d (List) it.next();\n                  int type \u003d ((Integer) list.get(0)).intValue();\n                  // If type is 2, then we\u0027ve got a dNSName\n                  if (type \u003d\u003d 2) {\n                      String s \u003d (String) list.get(1);\n                      subjectAltList.add(s);\n                  }\n              }\n          }\n          if (!subjectAltList.isEmpty()) {\n              String[] subjectAlts \u003d new String[subjectAltList.size()];\n              subjectAltList.toArray(subjectAlts);\n              return subjectAlts;\n          } else {\n              return null;\n          }\n      }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLHostnameVerifier.java"
    }
  }
}