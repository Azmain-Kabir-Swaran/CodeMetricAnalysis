{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogAggregationReport.java",
  "functionName": "newInstance",
  "functionId": "newInstance___appId-ApplicationId__status-LogAggregationStatus__diagnosticMessage-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/LogAggregationReport.java",
  "functionStartLine": 45,
  "functionEndLine": 52,
  "numCommitsSeen": 5,
  "timeTaken": 1681,
  "changeHistory": [
    "15ccd967ee3e7046a50522089f67ba01f36ec76a",
    "92431c961741747b5d6442f4025016d48d9a6863"
  ],
  "changeHistoryShort": {
    "15ccd967ee3e7046a50522089f67ba01f36ec76a": "Yparameterchange",
    "92431c961741747b5d6442f4025016d48d9a6863": "Yintroduced"
  },
  "changeHistoryDetails": {
    "15ccd967ee3e7046a50522089f67ba01f36ec76a": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-3505. Node\u0027s Log Aggregation Report with SUCCEED should not cached in RMApps. Contributed by Xuan Gong.\n",
      "commitDate": "14/05/15 10:58 AM",
      "commitName": "15ccd967ee3e7046a50522089f67ba01f36ec76a",
      "commitAuthor": "Junping Du",
      "commitDateOld": "17/04/15 1:18 PM",
      "commitNameOld": "1db355a875c3ecc40a244045c6812e00c8d36ef1",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 26.9,
      "commitsBetweenForRepo": 319,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   public static LogAggregationReport newInstance(ApplicationId appId,\n-      NodeId nodeId, LogAggregationStatus status, String diagnosticMessage) {\n+      LogAggregationStatus status, String diagnosticMessage) {\n     LogAggregationReport report \u003d Records.newRecord(LogAggregationReport.class);\n     report.setApplicationId(appId);\n     report.setLogAggregationStatus(status);\n     report.setDiagnosticMessage(diagnosticMessage);\n     return report;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static LogAggregationReport newInstance(ApplicationId appId,\n      LogAggregationStatus status, String diagnosticMessage) {\n    LogAggregationReport report \u003d Records.newRecord(LogAggregationReport.class);\n    report.setApplicationId(appId);\n    report.setLogAggregationStatus(status);\n    report.setDiagnosticMessage(diagnosticMessage);\n    return report;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/LogAggregationReport.java",
      "extendedDetails": {
        "oldValue": "[appId-ApplicationId, nodeId-NodeId, status-LogAggregationStatus, diagnosticMessage-String]",
        "newValue": "[appId-ApplicationId, status-LogAggregationStatus, diagnosticMessage-String]"
      }
    },
    "92431c961741747b5d6442f4025016d48d9a6863": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1376. NM need to notify the log aggregation status to RM through Node heartbeat. Contributed by Xuan Gong.\n",
      "commitDate": "10/04/15 8:56 AM",
      "commitName": "92431c961741747b5d6442f4025016d48d9a6863",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,8 @@\n+  public static LogAggregationReport newInstance(ApplicationId appId,\n+      NodeId nodeId, LogAggregationStatus status, String diagnosticMessage) {\n+    LogAggregationReport report \u003d Records.newRecord(LogAggregationReport.class);\n+    report.setApplicationId(appId);\n+    report.setLogAggregationStatus(status);\n+    report.setDiagnosticMessage(diagnosticMessage);\n+    return report;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static LogAggregationReport newInstance(ApplicationId appId,\n      NodeId nodeId, LogAggregationStatus status, String diagnosticMessage) {\n    LogAggregationReport report \u003d Records.newRecord(LogAggregationReport.class);\n    report.setApplicationId(appId);\n    report.setLogAggregationStatus(status);\n    report.setDiagnosticMessage(diagnosticMessage);\n    return report;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/LogAggregationReport.java"
    }
  }
}