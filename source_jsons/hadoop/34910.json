{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMProxyTokenSecretManager.java",
  "functionName": "recover",
  "functionId": "recover___state-RecoveredAMRMProxyState",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyTokenSecretManager.java",
  "functionStartLine": 325,
  "functionEndLine": 345,
  "numCommitsSeen": 4,
  "timeTaken": 2232,
  "changeHistory": [
    "49aa60e50d20f8c18ed6f00fa8966244536fe7da"
  ],
  "changeHistoryShort": {
    "49aa60e50d20f8c18ed6f00fa8966244536fe7da": "Yintroduced"
  },
  "changeHistoryDetails": {
    "49aa60e50d20f8c18ed6f00fa8966244536fe7da": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6127. Add support for work preserving NM restart when AMRMProxy is enabled. (Botong Huang via asuresh).\n",
      "commitDate": "22/06/17 11:27 AM",
      "commitName": "49aa60e50d20f8c18ed6f00fa8966244536fe7da",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,21 @@\n+  public void recover(RecoveredAMRMProxyState state) {\n+    if (state !\u003d null) {\n+      // recover the current master key\n+      MasterKey currentKey \u003d state.getCurrentMasterKey();\n+      if (currentKey !\u003d null) {\n+        this.currentMasterKey \u003d new MasterKeyData(currentKey,\n+            createSecretKey(currentKey.getBytes().array()));\n+      } else {\n+        LOG.warn(\"No current master key recovered from NM StateStore\"\n+            + \" for AMRMProxyTokenSecretManager\");\n+      }\n+\n+      // recover the next master key if not null\n+      MasterKey nextKey \u003d state.getNextMasterKey();\n+      if (nextKey !\u003d null) {\n+        this.nextMasterKey \u003d new MasterKeyData(nextKey,\n+            createSecretKey(nextKey.getBytes().array()));\n+        this.timer.schedule(new NextKeyActivator(), this.activationDelay);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RecoveredAMRMProxyState state) {\n    if (state !\u003d null) {\n      // recover the current master key\n      MasterKey currentKey \u003d state.getCurrentMasterKey();\n      if (currentKey !\u003d null) {\n        this.currentMasterKey \u003d new MasterKeyData(currentKey,\n            createSecretKey(currentKey.getBytes().array()));\n      } else {\n        LOG.warn(\"No current master key recovered from NM StateStore\"\n            + \" for AMRMProxyTokenSecretManager\");\n      }\n\n      // recover the next master key if not null\n      MasterKey nextKey \u003d state.getNextMasterKey();\n      if (nextKey !\u003d null) {\n        this.nextMasterKey \u003d new MasterKeyData(nextKey,\n            createSecretKey(nextKey.getBytes().array()));\n        this.timer.schedule(new NextKeyActivator(), this.activationDelay);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyTokenSecretManager.java"
    }
  }
}