{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMContainerTokenSecretManager.java",
  "functionName": "isValidStartContainerRequest",
  "functionId": "isValidStartContainerRequest___containerTokenIdentifier-ContainerTokenIdentifier",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/security/NMContainerTokenSecretManager.java",
  "functionStartLine": 247,
  "functionEndLine": 261,
  "numCommitsSeen": 16,
  "timeTaken": 3419,
  "changeHistory": [
    "8b9c1e68ab33b8d7720dbca9d9de9e92f9b6b447",
    "ca8024673178fa1c80224b390dfba932921693d9",
    "ffd2e01604be814fa3db1dded7cd7cff26a79b1e"
  ],
  "changeHistoryShort": {
    "8b9c1e68ab33b8d7720dbca9d9de9e92f9b6b447": "Ymultichange(Yparameterchange,Ybodychange)",
    "ca8024673178fa1c80224b390dfba932921693d9": "Ymultichange(Yparameterchange,Ybodychange)",
    "ffd2e01604be814fa3db1dded7cd7cff26a79b1e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8b9c1e68ab33b8d7720dbca9d9de9e92f9b6b447": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-62. Modified NodeManagers to avoid AMs from abusing container tokens for repetitive container launches. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1503986 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/13 9:24 PM",
      "commitName": "8b9c1e68ab33b8d7720dbca9d9de9e92f9b6b447",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-62. Modified NodeManagers to avoid AMs from abusing container tokens for repetitive container launches. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1503986 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/07/13 9:24 PM",
          "commitName": "8b9c1e68ab33b8d7720dbca9d9de9e92f9b6b447",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "18/06/13 4:19 PM",
          "commitNameOld": "243bcd367ff3130d74676280233041f88aca62a5",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 28.21,
          "commitsBetweenForRepo": 140,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,15 @@\n   public synchronized boolean isValidStartContainerRequest(\n-      ContainerId containerID) {\n-    ApplicationId applicationId \u003d\n-        containerID.getApplicationAttemptId().getApplicationId();\n-    return !this.oldMasterKeys.containsKey(applicationId)\n-        || !this.oldMasterKeys.get(applicationId).containsKey(containerID);\n+      ContainerTokenIdentifier containerTokenIdentifier) {\n+\n+    removeAnyContainerTokenIfExpired();\n+\n+    Long expTime \u003d containerTokenIdentifier.getExpiryTimeStamp();\n+    List\u003cContainerId\u003e containers \u003d\n+        this.recentlyStartedContainerTracker.get(expTime);\n+    if (containers \u003d\u003d null\n+        || !containers.contains(containerTokenIdentifier.getContainerID())) {\n+      return true;\n+    } else {\n+      return false;\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized boolean isValidStartContainerRequest(\n      ContainerTokenIdentifier containerTokenIdentifier) {\n\n    removeAnyContainerTokenIfExpired();\n\n    Long expTime \u003d containerTokenIdentifier.getExpiryTimeStamp();\n    List\u003cContainerId\u003e containers \u003d\n        this.recentlyStartedContainerTracker.get(expTime);\n    if (containers \u003d\u003d null\n        || !containers.contains(containerTokenIdentifier.getContainerID())) {\n      return true;\n    } else {\n      return false;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/security/NMContainerTokenSecretManager.java",
          "extendedDetails": {
            "oldValue": "[containerID-ContainerId]",
            "newValue": "[containerTokenIdentifier-ContainerTokenIdentifier]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-62. Modified NodeManagers to avoid AMs from abusing container tokens for repetitive container launches. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1503986 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/07/13 9:24 PM",
          "commitName": "8b9c1e68ab33b8d7720dbca9d9de9e92f9b6b447",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "18/06/13 4:19 PM",
          "commitNameOld": "243bcd367ff3130d74676280233041f88aca62a5",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 28.21,
          "commitsBetweenForRepo": 140,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,15 @@\n   public synchronized boolean isValidStartContainerRequest(\n-      ContainerId containerID) {\n-    ApplicationId applicationId \u003d\n-        containerID.getApplicationAttemptId().getApplicationId();\n-    return !this.oldMasterKeys.containsKey(applicationId)\n-        || !this.oldMasterKeys.get(applicationId).containsKey(containerID);\n+      ContainerTokenIdentifier containerTokenIdentifier) {\n+\n+    removeAnyContainerTokenIfExpired();\n+\n+    Long expTime \u003d containerTokenIdentifier.getExpiryTimeStamp();\n+    List\u003cContainerId\u003e containers \u003d\n+        this.recentlyStartedContainerTracker.get(expTime);\n+    if (containers \u003d\u003d null\n+        || !containers.contains(containerTokenIdentifier.getContainerID())) {\n+      return true;\n+    } else {\n+      return false;\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized boolean isValidStartContainerRequest(\n      ContainerTokenIdentifier containerTokenIdentifier) {\n\n    removeAnyContainerTokenIfExpired();\n\n    Long expTime \u003d containerTokenIdentifier.getExpiryTimeStamp();\n    List\u003cContainerId\u003e containers \u003d\n        this.recentlyStartedContainerTracker.get(expTime);\n    if (containers \u003d\u003d null\n        || !containers.contains(containerTokenIdentifier.getContainerID())) {\n      return true;\n    } else {\n      return false;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/security/NMContainerTokenSecretManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "ca8024673178fa1c80224b390dfba932921693d9": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-617. Made ContainerTokens to be used for validation at NodeManager also in unsecure mode to prevent AMs from faking resource requirements in unsecure mode. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1483667 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/05/13 11:36 PM",
      "commitName": "ca8024673178fa1c80224b390dfba932921693d9",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-617. Made ContainerTokens to be used for validation at NodeManager also in unsecure mode to prevent AMs from faking resource requirements in unsecure mode. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1483667 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/05/13 11:36 PM",
          "commitName": "ca8024673178fa1c80224b390dfba932921693d9",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "31/08/12 12:11 PM",
          "commitNameOld": "45a8e8c5a46535287de97fd6609c0743eef888ee",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 258.48,
          "commitsBetweenForRepo": 1468,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,7 @@\n   public synchronized boolean isValidStartContainerRequest(\n-      ContainerTokenIdentifier tokenId) {\n-    ContainerId containerID \u003d tokenId.getContainerID();\n+      ContainerId containerID) {\n     ApplicationId applicationId \u003d\n         containerID.getApplicationAttemptId().getApplicationId();\n     return !this.oldMasterKeys.containsKey(applicationId)\n         || !this.oldMasterKeys.get(applicationId).containsKey(containerID);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized boolean isValidStartContainerRequest(\n      ContainerId containerID) {\n    ApplicationId applicationId \u003d\n        containerID.getApplicationAttemptId().getApplicationId();\n    return !this.oldMasterKeys.containsKey(applicationId)\n        || !this.oldMasterKeys.get(applicationId).containsKey(containerID);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/security/NMContainerTokenSecretManager.java",
          "extendedDetails": {
            "oldValue": "[tokenId-ContainerTokenIdentifier]",
            "newValue": "[containerID-ContainerId]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-617. Made ContainerTokens to be used for validation at NodeManager also in unsecure mode to prevent AMs from faking resource requirements in unsecure mode. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1483667 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/05/13 11:36 PM",
          "commitName": "ca8024673178fa1c80224b390dfba932921693d9",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "31/08/12 12:11 PM",
          "commitNameOld": "45a8e8c5a46535287de97fd6609c0743eef888ee",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 258.48,
          "commitsBetweenForRepo": 1468,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,7 @@\n   public synchronized boolean isValidStartContainerRequest(\n-      ContainerTokenIdentifier tokenId) {\n-    ContainerId containerID \u003d tokenId.getContainerID();\n+      ContainerId containerID) {\n     ApplicationId applicationId \u003d\n         containerID.getApplicationAttemptId().getApplicationId();\n     return !this.oldMasterKeys.containsKey(applicationId)\n         || !this.oldMasterKeys.get(applicationId).containsKey(containerID);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized boolean isValidStartContainerRequest(\n      ContainerId containerID) {\n    ApplicationId applicationId \u003d\n        containerID.getApplicationAttemptId().getApplicationId();\n    return !this.oldMasterKeys.containsKey(applicationId)\n        || !this.oldMasterKeys.get(applicationId).containsKey(containerID);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/security/NMContainerTokenSecretManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "ffd2e01604be814fa3db1dded7cd7cff26a79b1e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-39. RM-NM secret-keys should be randomly generated and rolled every so often. (Contributed by Vinod Kumar Vavilapalli and Siddharth Seth)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1377180 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/12 7:18 PM",
      "commitName": "ffd2e01604be814fa3db1dded7cd7cff26a79b1e",
      "commitAuthor": "Siddharth Seth",
      "diff": "@@ -0,0 +1,8 @@\n+  public synchronized boolean isValidStartContainerRequest(\n+      ContainerTokenIdentifier tokenId) {\n+    ContainerId containerID \u003d tokenId.getContainerID();\n+    ApplicationId applicationId \u003d\n+        containerID.getApplicationAttemptId().getApplicationId();\n+    return !this.oldMasterKeys.containsKey(applicationId)\n+        || !this.oldMasterKeys.get(applicationId).containsKey(containerID);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized boolean isValidStartContainerRequest(\n      ContainerTokenIdentifier tokenId) {\n    ContainerId containerID \u003d tokenId.getContainerID();\n    ApplicationId applicationId \u003d\n        containerID.getApplicationAttemptId().getApplicationId();\n    return !this.oldMasterKeys.containsKey(applicationId)\n        || !this.oldMasterKeys.get(applicationId).containsKey(containerID);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/security/NMContainerTokenSecretManager.java"
    }
  }
}