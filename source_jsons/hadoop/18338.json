{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Grep.java",
  "functionName": "run",
  "functionId": "run___args-String[]",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/Grep.java",
  "functionStartLine": 43,
  "functionEndLine": 100,
  "numCommitsSeen": 6,
  "timeTaken": 4747,
  "changeHistory": [
    "bd69fb2d44403e930d1fc0868ed1dd2a49dd9659",
    "fe2188a0420f501ccfcba92e91d4b564ba86103e",
    "26447229ba2c3d43db978c1b3ce95613669182ee",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "bd69fb2d44403e930d1fc0868ed1dd2a49dd9659": "Ybodychange",
    "fe2188a0420f501ccfcba92e91d4b564ba86103e": "Ybodychange",
    "26447229ba2c3d43db978c1b3ce95613669182ee": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bd69fb2d44403e930d1fc0868ed1dd2a49dd9659": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5800. Use Job#getInstance instead of deprecated constructors. (aajisaka)\n",
      "commitDate": "03/02/15 2:30 PM",
      "commitName": "bd69fb2d44403e930d1fc0868ed1dd2a49dd9659",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "29/01/15 8:10 AM",
      "commitNameOld": "fe2188a0420f501ccfcba92e91d4b564ba86103e",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 5.26,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,58 @@\n   public int run(String[] args) throws Exception {\n     if (args.length \u003c 3) {\n       System.out.println(\"Grep \u003cinDir\u003e \u003coutDir\u003e \u003cregex\u003e [\u003cgroup\u003e]\");\n       ToolRunner.printGenericCommandUsage(System.out);\n       return 2;\n     }\n \n     Path tempDir \u003d\n       new Path(\"grep-temp-\"+\n           Integer.toString(new Random().nextInt(Integer.MAX_VALUE)));\n \n     Configuration conf \u003d getConf();\n     conf.set(RegexMapper.PATTERN, args[2]);\n     if (args.length \u003d\u003d 4)\n       conf.set(RegexMapper.GROUP, args[3]);\n \n-    Job grepJob \u003d new Job(conf);\n+    Job grepJob \u003d Job.getInstance(conf);\n     \n     try {\n       \n       grepJob.setJobName(\"grep-search\");\n       grepJob.setJarByClass(Grep.class);\n \n       FileInputFormat.setInputPaths(grepJob, args[0]);\n \n       grepJob.setMapperClass(RegexMapper.class);\n \n       grepJob.setCombinerClass(LongSumReducer.class);\n       grepJob.setReducerClass(LongSumReducer.class);\n \n       FileOutputFormat.setOutputPath(grepJob, tempDir);\n       grepJob.setOutputFormatClass(SequenceFileOutputFormat.class);\n       grepJob.setOutputKeyClass(Text.class);\n       grepJob.setOutputValueClass(LongWritable.class);\n \n       grepJob.waitForCompletion(true);\n \n-      Job sortJob \u003d new Job(conf);\n+      Job sortJob \u003d Job.getInstance(conf);\n       sortJob.setJobName(\"grep-sort\");\n       sortJob.setJarByClass(Grep.class);\n \n       FileInputFormat.setInputPaths(sortJob, tempDir);\n       sortJob.setInputFormatClass(SequenceFileInputFormat.class);\n \n       sortJob.setMapperClass(InverseMapper.class);\n \n       sortJob.setNumReduceTasks(1);                 // write a single file\n       FileOutputFormat.setOutputPath(sortJob, new Path(args[1]));\n       sortJob.setSortComparatorClass(          // sort by decreasing freq\n         LongWritable.DecreasingComparator.class);\n \n       sortJob.waitForCompletion(true);\n     }\n     finally {\n       FileSystem.get(conf).delete(tempDir, true);\n     }\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    if (args.length \u003c 3) {\n      System.out.println(\"Grep \u003cinDir\u003e \u003coutDir\u003e \u003cregex\u003e [\u003cgroup\u003e]\");\n      ToolRunner.printGenericCommandUsage(System.out);\n      return 2;\n    }\n\n    Path tempDir \u003d\n      new Path(\"grep-temp-\"+\n          Integer.toString(new Random().nextInt(Integer.MAX_VALUE)));\n\n    Configuration conf \u003d getConf();\n    conf.set(RegexMapper.PATTERN, args[2]);\n    if (args.length \u003d\u003d 4)\n      conf.set(RegexMapper.GROUP, args[3]);\n\n    Job grepJob \u003d Job.getInstance(conf);\n    \n    try {\n      \n      grepJob.setJobName(\"grep-search\");\n      grepJob.setJarByClass(Grep.class);\n\n      FileInputFormat.setInputPaths(grepJob, args[0]);\n\n      grepJob.setMapperClass(RegexMapper.class);\n\n      grepJob.setCombinerClass(LongSumReducer.class);\n      grepJob.setReducerClass(LongSumReducer.class);\n\n      FileOutputFormat.setOutputPath(grepJob, tempDir);\n      grepJob.setOutputFormatClass(SequenceFileOutputFormat.class);\n      grepJob.setOutputKeyClass(Text.class);\n      grepJob.setOutputValueClass(LongWritable.class);\n\n      grepJob.waitForCompletion(true);\n\n      Job sortJob \u003d Job.getInstance(conf);\n      sortJob.setJobName(\"grep-sort\");\n      sortJob.setJarByClass(Grep.class);\n\n      FileInputFormat.setInputPaths(sortJob, tempDir);\n      sortJob.setInputFormatClass(SequenceFileInputFormat.class);\n\n      sortJob.setMapperClass(InverseMapper.class);\n\n      sortJob.setNumReduceTasks(1);                 // write a single file\n      FileOutputFormat.setOutputPath(sortJob, new Path(args[1]));\n      sortJob.setSortComparatorClass(          // sort by decreasing freq\n        LongWritable.DecreasingComparator.class);\n\n      sortJob.waitForCompletion(true);\n    }\n    finally {\n      FileSystem.get(conf).delete(tempDir, true);\n    }\n    return 0;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/Grep.java",
      "extendedDetails": {}
    },
    "fe2188a0420f501ccfcba92e91d4b564ba86103e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6231. Grep example job is not working on a fully-distributed cluster. (aajisaka)\n",
      "commitDate": "29/01/15 8:10 AM",
      "commitName": "fe2188a0420f501ccfcba92e91d4b564ba86103e",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "18/11/11 5:24 PM",
      "commitNameOld": "26447229ba2c3d43db978c1b3ce95613669182ee",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 1167.61,
      "commitsBetweenForRepo": 7833,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,58 @@\n   public int run(String[] args) throws Exception {\n     if (args.length \u003c 3) {\n       System.out.println(\"Grep \u003cinDir\u003e \u003coutDir\u003e \u003cregex\u003e [\u003cgroup\u003e]\");\n       ToolRunner.printGenericCommandUsage(System.out);\n       return 2;\n     }\n \n     Path tempDir \u003d\n       new Path(\"grep-temp-\"+\n           Integer.toString(new Random().nextInt(Integer.MAX_VALUE)));\n \n     Configuration conf \u003d getConf();\n     conf.set(RegexMapper.PATTERN, args[2]);\n     if (args.length \u003d\u003d 4)\n       conf.set(RegexMapper.GROUP, args[3]);\n \n     Job grepJob \u003d new Job(conf);\n     \n     try {\n       \n       grepJob.setJobName(\"grep-search\");\n+      grepJob.setJarByClass(Grep.class);\n \n       FileInputFormat.setInputPaths(grepJob, args[0]);\n \n       grepJob.setMapperClass(RegexMapper.class);\n \n       grepJob.setCombinerClass(LongSumReducer.class);\n       grepJob.setReducerClass(LongSumReducer.class);\n \n       FileOutputFormat.setOutputPath(grepJob, tempDir);\n       grepJob.setOutputFormatClass(SequenceFileOutputFormat.class);\n       grepJob.setOutputKeyClass(Text.class);\n       grepJob.setOutputValueClass(LongWritable.class);\n \n       grepJob.waitForCompletion(true);\n \n       Job sortJob \u003d new Job(conf);\n       sortJob.setJobName(\"grep-sort\");\n+      sortJob.setJarByClass(Grep.class);\n \n       FileInputFormat.setInputPaths(sortJob, tempDir);\n       sortJob.setInputFormatClass(SequenceFileInputFormat.class);\n \n       sortJob.setMapperClass(InverseMapper.class);\n \n       sortJob.setNumReduceTasks(1);                 // write a single file\n       FileOutputFormat.setOutputPath(sortJob, new Path(args[1]));\n       sortJob.setSortComparatorClass(          // sort by decreasing freq\n         LongWritable.DecreasingComparator.class);\n \n       sortJob.waitForCompletion(true);\n     }\n     finally {\n       FileSystem.get(conf).delete(tempDir, true);\n     }\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    if (args.length \u003c 3) {\n      System.out.println(\"Grep \u003cinDir\u003e \u003coutDir\u003e \u003cregex\u003e [\u003cgroup\u003e]\");\n      ToolRunner.printGenericCommandUsage(System.out);\n      return 2;\n    }\n\n    Path tempDir \u003d\n      new Path(\"grep-temp-\"+\n          Integer.toString(new Random().nextInt(Integer.MAX_VALUE)));\n\n    Configuration conf \u003d getConf();\n    conf.set(RegexMapper.PATTERN, args[2]);\n    if (args.length \u003d\u003d 4)\n      conf.set(RegexMapper.GROUP, args[3]);\n\n    Job grepJob \u003d new Job(conf);\n    \n    try {\n      \n      grepJob.setJobName(\"grep-search\");\n      grepJob.setJarByClass(Grep.class);\n\n      FileInputFormat.setInputPaths(grepJob, args[0]);\n\n      grepJob.setMapperClass(RegexMapper.class);\n\n      grepJob.setCombinerClass(LongSumReducer.class);\n      grepJob.setReducerClass(LongSumReducer.class);\n\n      FileOutputFormat.setOutputPath(grepJob, tempDir);\n      grepJob.setOutputFormatClass(SequenceFileOutputFormat.class);\n      grepJob.setOutputKeyClass(Text.class);\n      grepJob.setOutputValueClass(LongWritable.class);\n\n      grepJob.waitForCompletion(true);\n\n      Job sortJob \u003d new Job(conf);\n      sortJob.setJobName(\"grep-sort\");\n      sortJob.setJarByClass(Grep.class);\n\n      FileInputFormat.setInputPaths(sortJob, tempDir);\n      sortJob.setInputFormatClass(SequenceFileInputFormat.class);\n\n      sortJob.setMapperClass(InverseMapper.class);\n\n      sortJob.setNumReduceTasks(1);                 // write a single file\n      FileOutputFormat.setOutputPath(sortJob, new Path(args[1]));\n      sortJob.setSortComparatorClass(          // sort by decreasing freq\n        LongWritable.DecreasingComparator.class);\n\n      sortJob.waitForCompletion(true);\n    }\n    finally {\n      FileSystem.get(conf).delete(tempDir, true);\n    }\n    return 0;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/Grep.java",
      "extendedDetails": {}
    },
    "26447229ba2c3d43db978c1b3ce95613669182ee": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7590. Mavenize streaming and MR examples. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1203941 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/11/11 5:24 PM",
      "commitName": "26447229ba2c3d43db978c1b3ce95613669182ee",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/11/11 1:04 AM",
      "commitNameOld": "905a127850d5e0cba85c2e075f989fa0f5cf129a",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int run(String[] args) throws Exception {\n    if (args.length \u003c 3) {\n      System.out.println(\"Grep \u003cinDir\u003e \u003coutDir\u003e \u003cregex\u003e [\u003cgroup\u003e]\");\n      ToolRunner.printGenericCommandUsage(System.out);\n      return 2;\n    }\n\n    Path tempDir \u003d\n      new Path(\"grep-temp-\"+\n          Integer.toString(new Random().nextInt(Integer.MAX_VALUE)));\n\n    Configuration conf \u003d getConf();\n    conf.set(RegexMapper.PATTERN, args[2]);\n    if (args.length \u003d\u003d 4)\n      conf.set(RegexMapper.GROUP, args[3]);\n\n    Job grepJob \u003d new Job(conf);\n    \n    try {\n      \n      grepJob.setJobName(\"grep-search\");\n\n      FileInputFormat.setInputPaths(grepJob, args[0]);\n\n      grepJob.setMapperClass(RegexMapper.class);\n\n      grepJob.setCombinerClass(LongSumReducer.class);\n      grepJob.setReducerClass(LongSumReducer.class);\n\n      FileOutputFormat.setOutputPath(grepJob, tempDir);\n      grepJob.setOutputFormatClass(SequenceFileOutputFormat.class);\n      grepJob.setOutputKeyClass(Text.class);\n      grepJob.setOutputValueClass(LongWritable.class);\n\n      grepJob.waitForCompletion(true);\n\n      Job sortJob \u003d new Job(conf);\n      sortJob.setJobName(\"grep-sort\");\n\n      FileInputFormat.setInputPaths(sortJob, tempDir);\n      sortJob.setInputFormatClass(SequenceFileInputFormat.class);\n\n      sortJob.setMapperClass(InverseMapper.class);\n\n      sortJob.setNumReduceTasks(1);                 // write a single file\n      FileOutputFormat.setOutputPath(sortJob, new Path(args[1]));\n      sortJob.setSortComparatorClass(          // sort by decreasing freq\n        LongWritable.DecreasingComparator.class);\n\n      sortJob.waitForCompletion(true);\n    }\n    finally {\n      FileSystem.get(conf).delete(tempDir, true);\n    }\n    return 0;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/Grep.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/Grep.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/Grep.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int run(String[] args) throws Exception {\n    if (args.length \u003c 3) {\n      System.out.println(\"Grep \u003cinDir\u003e \u003coutDir\u003e \u003cregex\u003e [\u003cgroup\u003e]\");\n      ToolRunner.printGenericCommandUsage(System.out);\n      return 2;\n    }\n\n    Path tempDir \u003d\n      new Path(\"grep-temp-\"+\n          Integer.toString(new Random().nextInt(Integer.MAX_VALUE)));\n\n    Configuration conf \u003d getConf();\n    conf.set(RegexMapper.PATTERN, args[2]);\n    if (args.length \u003d\u003d 4)\n      conf.set(RegexMapper.GROUP, args[3]);\n\n    Job grepJob \u003d new Job(conf);\n    \n    try {\n      \n      grepJob.setJobName(\"grep-search\");\n\n      FileInputFormat.setInputPaths(grepJob, args[0]);\n\n      grepJob.setMapperClass(RegexMapper.class);\n\n      grepJob.setCombinerClass(LongSumReducer.class);\n      grepJob.setReducerClass(LongSumReducer.class);\n\n      FileOutputFormat.setOutputPath(grepJob, tempDir);\n      grepJob.setOutputFormatClass(SequenceFileOutputFormat.class);\n      grepJob.setOutputKeyClass(Text.class);\n      grepJob.setOutputValueClass(LongWritable.class);\n\n      grepJob.waitForCompletion(true);\n\n      Job sortJob \u003d new Job(conf);\n      sortJob.setJobName(\"grep-sort\");\n\n      FileInputFormat.setInputPaths(sortJob, tempDir);\n      sortJob.setInputFormatClass(SequenceFileInputFormat.class);\n\n      sortJob.setMapperClass(InverseMapper.class);\n\n      sortJob.setNumReduceTasks(1);                 // write a single file\n      FileOutputFormat.setOutputPath(sortJob, new Path(args[1]));\n      sortJob.setSortComparatorClass(          // sort by decreasing freq\n        LongWritable.DecreasingComparator.class);\n\n      sortJob.waitForCompletion(true);\n    }\n    finally {\n      FileSystem.get(conf).delete(tempDir, true);\n    }\n    return 0;\n  }",
      "path": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/Grep.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/Grep.java",
        "newPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/Grep.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int run(String[] args) throws Exception {\n    if (args.length \u003c 3) {\n      System.out.println(\"Grep \u003cinDir\u003e \u003coutDir\u003e \u003cregex\u003e [\u003cgroup\u003e]\");\n      ToolRunner.printGenericCommandUsage(System.out);\n      return 2;\n    }\n\n    Path tempDir \u003d\n      new Path(\"grep-temp-\"+\n          Integer.toString(new Random().nextInt(Integer.MAX_VALUE)));\n\n    Configuration conf \u003d getConf();\n    conf.set(RegexMapper.PATTERN, args[2]);\n    if (args.length \u003d\u003d 4)\n      conf.set(RegexMapper.GROUP, args[3]);\n\n    Job grepJob \u003d new Job(conf);\n    \n    try {\n      \n      grepJob.setJobName(\"grep-search\");\n\n      FileInputFormat.setInputPaths(grepJob, args[0]);\n\n      grepJob.setMapperClass(RegexMapper.class);\n\n      grepJob.setCombinerClass(LongSumReducer.class);\n      grepJob.setReducerClass(LongSumReducer.class);\n\n      FileOutputFormat.setOutputPath(grepJob, tempDir);\n      grepJob.setOutputFormatClass(SequenceFileOutputFormat.class);\n      grepJob.setOutputKeyClass(Text.class);\n      grepJob.setOutputValueClass(LongWritable.class);\n\n      grepJob.waitForCompletion(true);\n\n      Job sortJob \u003d new Job(conf);\n      sortJob.setJobName(\"grep-sort\");\n\n      FileInputFormat.setInputPaths(sortJob, tempDir);\n      sortJob.setInputFormatClass(SequenceFileInputFormat.class);\n\n      sortJob.setMapperClass(InverseMapper.class);\n\n      sortJob.setNumReduceTasks(1);                 // write a single file\n      FileOutputFormat.setOutputPath(sortJob, new Path(args[1]));\n      sortJob.setSortComparatorClass(          // sort by decreasing freq\n        LongWritable.DecreasingComparator.class);\n\n      sortJob.waitForCompletion(true);\n    }\n    finally {\n      FileSystem.get(conf).delete(tempDir, true);\n    }\n    return 0;\n  }",
      "path": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/Grep.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/examples/org/apache/hadoop/examples/Grep.java",
        "newPath": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/Grep.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,56 @@\n+  public int run(String[] args) throws Exception {\n+    if (args.length \u003c 3) {\n+      System.out.println(\"Grep \u003cinDir\u003e \u003coutDir\u003e \u003cregex\u003e [\u003cgroup\u003e]\");\n+      ToolRunner.printGenericCommandUsage(System.out);\n+      return 2;\n+    }\n+\n+    Path tempDir \u003d\n+      new Path(\"grep-temp-\"+\n+          Integer.toString(new Random().nextInt(Integer.MAX_VALUE)));\n+\n+    Configuration conf \u003d getConf();\n+    conf.set(RegexMapper.PATTERN, args[2]);\n+    if (args.length \u003d\u003d 4)\n+      conf.set(RegexMapper.GROUP, args[3]);\n+\n+    Job grepJob \u003d new Job(conf);\n+    \n+    try {\n+      \n+      grepJob.setJobName(\"grep-search\");\n+\n+      FileInputFormat.setInputPaths(grepJob, args[0]);\n+\n+      grepJob.setMapperClass(RegexMapper.class);\n+\n+      grepJob.setCombinerClass(LongSumReducer.class);\n+      grepJob.setReducerClass(LongSumReducer.class);\n+\n+      FileOutputFormat.setOutputPath(grepJob, tempDir);\n+      grepJob.setOutputFormatClass(SequenceFileOutputFormat.class);\n+      grepJob.setOutputKeyClass(Text.class);\n+      grepJob.setOutputValueClass(LongWritable.class);\n+\n+      grepJob.waitForCompletion(true);\n+\n+      Job sortJob \u003d new Job(conf);\n+      sortJob.setJobName(\"grep-sort\");\n+\n+      FileInputFormat.setInputPaths(sortJob, tempDir);\n+      sortJob.setInputFormatClass(SequenceFileInputFormat.class);\n+\n+      sortJob.setMapperClass(InverseMapper.class);\n+\n+      sortJob.setNumReduceTasks(1);                 // write a single file\n+      FileOutputFormat.setOutputPath(sortJob, new Path(args[1]));\n+      sortJob.setSortComparatorClass(          // sort by decreasing freq\n+        LongWritable.DecreasingComparator.class);\n+\n+      sortJob.waitForCompletion(true);\n+    }\n+    finally {\n+      FileSystem.get(conf).delete(tempDir, true);\n+    }\n+    return 0;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    if (args.length \u003c 3) {\n      System.out.println(\"Grep \u003cinDir\u003e \u003coutDir\u003e \u003cregex\u003e [\u003cgroup\u003e]\");\n      ToolRunner.printGenericCommandUsage(System.out);\n      return 2;\n    }\n\n    Path tempDir \u003d\n      new Path(\"grep-temp-\"+\n          Integer.toString(new Random().nextInt(Integer.MAX_VALUE)));\n\n    Configuration conf \u003d getConf();\n    conf.set(RegexMapper.PATTERN, args[2]);\n    if (args.length \u003d\u003d 4)\n      conf.set(RegexMapper.GROUP, args[3]);\n\n    Job grepJob \u003d new Job(conf);\n    \n    try {\n      \n      grepJob.setJobName(\"grep-search\");\n\n      FileInputFormat.setInputPaths(grepJob, args[0]);\n\n      grepJob.setMapperClass(RegexMapper.class);\n\n      grepJob.setCombinerClass(LongSumReducer.class);\n      grepJob.setReducerClass(LongSumReducer.class);\n\n      FileOutputFormat.setOutputPath(grepJob, tempDir);\n      grepJob.setOutputFormatClass(SequenceFileOutputFormat.class);\n      grepJob.setOutputKeyClass(Text.class);\n      grepJob.setOutputValueClass(LongWritable.class);\n\n      grepJob.waitForCompletion(true);\n\n      Job sortJob \u003d new Job(conf);\n      sortJob.setJobName(\"grep-sort\");\n\n      FileInputFormat.setInputPaths(sortJob, tempDir);\n      sortJob.setInputFormatClass(SequenceFileInputFormat.class);\n\n      sortJob.setMapperClass(InverseMapper.class);\n\n      sortJob.setNumReduceTasks(1);                 // write a single file\n      FileOutputFormat.setOutputPath(sortJob, new Path(args[1]));\n      sortJob.setSortComparatorClass(          // sort by decreasing freq\n        LongWritable.DecreasingComparator.class);\n\n      sortJob.waitForCompletion(true);\n    }\n    finally {\n      FileSystem.get(conf).delete(tempDir, true);\n    }\n    return 0;\n  }",
      "path": "mapreduce/src/examples/org/apache/hadoop/examples/Grep.java"
    }
  }
}