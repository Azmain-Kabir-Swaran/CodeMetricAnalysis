{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RegistryDNS.java",
  "functionName": "serviceInit",
  "functionId": "serviceInit___conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
  "functionStartLine": 280,
  "functionEndLine": 295,
  "numCommitsSeen": 15,
  "timeTaken": 2052,
  "changeHistory": [
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
    "501be9b4be7d549b23cc501b26fdfdce0a7aa911",
    "92734800844b93bb19f3c0fca6be88d2801f7b1b",
    "f934f62fc71b4776e88f86d4254de0ea12147511"
  ],
  "changeHistoryShort": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": "Yfilerename",
    "501be9b4be7d549b23cc501b26fdfdce0a7aa911": "Ybodychange",
    "92734800844b93bb19f3c0fca6be88d2801f7b1b": "Ybodychange",
    "f934f62fc71b4776e88f86d4254de0ea12147511": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-15821. Move YARN Registry to Hadoop Registry.\n              Contributed by Íñigo Goiri\n",
      "commitDate": "19/10/18 4:46 PM",
      "commitName": "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "19/10/18 1:57 PM",
      "commitNameOld": "00254d7b8c714ae2000d0934d260b23458033529",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n\n    // create the zone.  for now create a \"dummy\" SOA record\n    try {\n      updateDNSServer(conf);\n      setDomainName(conf);\n\n      initializeZones(conf);\n\n      initializeChannels(conf);\n    } catch (IOException e) {\n      LOG.error(\"Error initializing Registry DNS Server\", e);\n      throw e;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
        "newPath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java"
      }
    },
    "501be9b4be7d549b23cc501b26fdfdce0a7aa911": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7326. Add recursion support and configure RegistryDNS to lookup upstream. Contributed by Eric Yang\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "501be9b4be7d549b23cc501b26fdfdce0a7aa911",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "92734800844b93bb19f3c0fca6be88d2801f7b1b",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     super.serviceInit(conf);\n \n     // create the zone.  for now create a \"dummy\" SOA record\n     try {\n+      updateDNSServer(conf);\n       setDomainName(conf);\n \n       initializeZones(conf);\n \n       initializeChannels(conf);\n     } catch (IOException e) {\n       LOG.error(\"Error initializing Registry DNS Server\", e);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n\n    // create the zone.  for now create a \"dummy\" SOA record\n    try {\n      updateDNSServer(conf);\n      setDomainName(conf);\n\n      initializeZones(conf);\n\n      initializeChannels(conf);\n    } catch (IOException e) {\n      LOG.error(\"Error initializing Registry DNS Server\", e);\n      throw e;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
      "extendedDetails": {}
    },
    "92734800844b93bb19f3c0fca6be88d2801f7b1b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7198. Add jsvc support for RegistryDNS. Contributed by Billie Rinaldi\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "92734800844b93bb19f3c0fca6be88d2801f7b1b",
      "commitAuthor": "Jian He",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "c70e5df100ba800f7170f44f63d388ae056cb74d",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,15 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     super.serviceInit(conf);\n \n     // create the zone.  for now create a \"dummy\" SOA record\n     try {\n       setDomainName(conf);\n \n-      int port \u003d initializeZones(conf);\n+      initializeZones(conf);\n \n-      InetAddress addr \u003d InetAddress.getLocalHost();\n-\n-      String bindAddress \u003d conf.get(KEY_DNS_BIND_ADDRESS);\n-      if (bindAddress !\u003d null) {\n-        addr \u003d InetAddress.getByName(bindAddress);\n-      }\n-      addNIOUDP(addr, port);\n-      addNIOTCP(addr, port);\n-\n+      initializeChannels(conf);\n     } catch (IOException e) {\n       LOG.error(\"Error initializing Registry DNS Server\", e);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n\n    // create the zone.  for now create a \"dummy\" SOA record\n    try {\n      setDomainName(conf);\n\n      initializeZones(conf);\n\n      initializeChannels(conf);\n    } catch (IOException e) {\n      LOG.error(\"Error initializing Registry DNS Server\", e);\n      throw e;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java",
      "extendedDetails": {}
    },
    "f934f62fc71b4776e88f86d4254de0ea12147511": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5218. Initial core change for DNS for YARN. Contributed by Jonathan Maron\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "f934f62fc71b4776e88f86d4254de0ea12147511",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,23 @@\n+  protected void serviceInit(Configuration conf) throws Exception {\n+    super.serviceInit(conf);\n+\n+    // create the zone.  for now create a \"dummy\" SOA record\n+    try {\n+      setDomainName(conf);\n+\n+      int port \u003d initializeZones(conf);\n+\n+      InetAddress addr \u003d InetAddress.getLocalHost();\n+\n+      String bindAddress \u003d conf.get(KEY_DNS_BIND_ADDRESS);\n+      if (bindAddress !\u003d null) {\n+        addr \u003d InetAddress.getByName(bindAddress);\n+      }\n+      addNIOUDP(addr, port);\n+      addNIOTCP(addr, port);\n+\n+    } catch (IOException e) {\n+      LOG.error(\"Error initializing Registry DNS Server\", e);\n+      throw e;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n\n    // create the zone.  for now create a \"dummy\" SOA record\n    try {\n      setDomainName(conf);\n\n      int port \u003d initializeZones(conf);\n\n      InetAddress addr \u003d InetAddress.getLocalHost();\n\n      String bindAddress \u003d conf.get(KEY_DNS_BIND_ADDRESS);\n      if (bindAddress !\u003d null) {\n        addr \u003d InetAddress.getByName(bindAddress);\n      }\n      addNIOUDP(addr, port);\n      addNIOTCP(addr, port);\n\n    } catch (IOException e) {\n      LOG.error(\"Error initializing Registry DNS Server\", e);\n      throw e;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/server/dns/RegistryDNS.java"
    }
  }
}