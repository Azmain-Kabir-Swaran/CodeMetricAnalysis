{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClassUtil.java",
  "functionName": "findContainingJar",
  "functionId": "findContainingJar___clazz-Class__?__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ClassUtil.java",
  "functionStartLine": 38,
  "functionEndLine": 58,
  "numCommitsSeen": 4,
  "timeTaken": 1164,
  "changeHistory": [
    "a126a01fa197beebe955837c8f2efbd3257f7aa5",
    "892e088773c67dabb535f9c0591661fc7c990887"
  ],
  "changeHistoryShort": {
    "a126a01fa197beebe955837c8f2efbd3257f7aa5": "Ymultichange(Yparameterchange,Ybodychange)",
    "892e088773c67dabb535f9c0591661fc7c990887": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a126a01fa197beebe955837c8f2efbd3257f7aa5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-10437. Fix the javac warnings in the conf and the util package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1582015 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/14 12:03 PM",
      "commitName": "a126a01fa197beebe955837c8f2efbd3257f7aa5",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-10437. Fix the javac warnings in the conf and the util package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1582015 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "26/03/14 12:03 PM",
          "commitName": "a126a01fa197beebe955837c8f2efbd3257f7aa5",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/02/13 5:20 PM",
          "commitNameOld": "892e088773c67dabb535f9c0591661fc7c990887",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 390.74,
          "commitsBetweenForRepo": 2599,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public static String findContainingJar(Class clazz) {\n+  public static String findContainingJar(Class\u003c?\u003e clazz) {\n     ClassLoader loader \u003d clazz.getClassLoader();\n     String classFile \u003d clazz.getName().replaceAll(\"\\\\.\", \"/\") + \".class\";\n     try {\n-      for (Enumeration itr \u003d loader.getResources(classFile);\n+      for(final Enumeration\u003cURL\u003e itr \u003d loader.getResources(classFile);\n           itr.hasMoreElements();) {\n-        URL url \u003d (URL) itr.nextElement();\n+        final URL url \u003d itr.nextElement();\n         if (\"jar\".equals(url.getProtocol())) {\n           String toReturn \u003d url.getPath();\n           if (toReturn.startsWith(\"file:\")) {\n             toReturn \u003d toReturn.substring(\"file:\".length());\n           }\n           toReturn \u003d URLDecoder.decode(toReturn, \"UTF-8\");\n           return toReturn.replaceAll(\"!.*$\", \"\");\n         }\n       }\n     } catch (IOException e) {\n       throw new RuntimeException(e);\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String findContainingJar(Class\u003c?\u003e clazz) {\n    ClassLoader loader \u003d clazz.getClassLoader();\n    String classFile \u003d clazz.getName().replaceAll(\"\\\\.\", \"/\") + \".class\";\n    try {\n      for(final Enumeration\u003cURL\u003e itr \u003d loader.getResources(classFile);\n          itr.hasMoreElements();) {\n        final URL url \u003d itr.nextElement();\n        if (\"jar\".equals(url.getProtocol())) {\n          String toReturn \u003d url.getPath();\n          if (toReturn.startsWith(\"file:\")) {\n            toReturn \u003d toReturn.substring(\"file:\".length());\n          }\n          toReturn \u003d URLDecoder.decode(toReturn, \"UTF-8\");\n          return toReturn.replaceAll(\"!.*$\", \"\");\n        }\n      }\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    return null;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ClassUtil.java",
          "extendedDetails": {
            "oldValue": "[clazz-Class]",
            "newValue": "[clazz-Class\u003c?\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10437. Fix the javac warnings in the conf and the util package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1582015 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "26/03/14 12:03 PM",
          "commitName": "a126a01fa197beebe955837c8f2efbd3257f7aa5",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/02/13 5:20 PM",
          "commitNameOld": "892e088773c67dabb535f9c0591661fc7c990887",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 390.74,
          "commitsBetweenForRepo": 2599,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public static String findContainingJar(Class clazz) {\n+  public static String findContainingJar(Class\u003c?\u003e clazz) {\n     ClassLoader loader \u003d clazz.getClassLoader();\n     String classFile \u003d clazz.getName().replaceAll(\"\\\\.\", \"/\") + \".class\";\n     try {\n-      for (Enumeration itr \u003d loader.getResources(classFile);\n+      for(final Enumeration\u003cURL\u003e itr \u003d loader.getResources(classFile);\n           itr.hasMoreElements();) {\n-        URL url \u003d (URL) itr.nextElement();\n+        final URL url \u003d itr.nextElement();\n         if (\"jar\".equals(url.getProtocol())) {\n           String toReturn \u003d url.getPath();\n           if (toReturn.startsWith(\"file:\")) {\n             toReturn \u003d toReturn.substring(\"file:\".length());\n           }\n           toReturn \u003d URLDecoder.decode(toReturn, \"UTF-8\");\n           return toReturn.replaceAll(\"!.*$\", \"\");\n         }\n       }\n     } catch (IOException e) {\n       throw new RuntimeException(e);\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String findContainingJar(Class\u003c?\u003e clazz) {\n    ClassLoader loader \u003d clazz.getClassLoader();\n    String classFile \u003d clazz.getName().replaceAll(\"\\\\.\", \"/\") + \".class\";\n    try {\n      for(final Enumeration\u003cURL\u003e itr \u003d loader.getResources(classFile);\n          itr.hasMoreElements();) {\n        final URL url \u003d itr.nextElement();\n        if (\"jar\".equals(url.getProtocol())) {\n          String toReturn \u003d url.getPath();\n          if (toReturn.startsWith(\"file:\")) {\n            toReturn \u003d toReturn.substring(\"file:\".length());\n          }\n          toReturn \u003d URLDecoder.decode(toReturn, \"UTF-8\");\n          return toReturn.replaceAll(\"!.*$\", \"\");\n        }\n      }\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    return null;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ClassUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "892e088773c67dabb535f9c0591661fc7c990887": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9349. Confusing output when running hadoop version from one hadoop installation when HADOOP_HOME points to another. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1451448 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/02/13 5:20 PM",
      "commitName": "892e088773c67dabb535f9c0591661fc7c990887",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,21 @@\n+  public static String findContainingJar(Class clazz) {\n+    ClassLoader loader \u003d clazz.getClassLoader();\n+    String classFile \u003d clazz.getName().replaceAll(\"\\\\.\", \"/\") + \".class\";\n+    try {\n+      for (Enumeration itr \u003d loader.getResources(classFile);\n+          itr.hasMoreElements();) {\n+        URL url \u003d (URL) itr.nextElement();\n+        if (\"jar\".equals(url.getProtocol())) {\n+          String toReturn \u003d url.getPath();\n+          if (toReturn.startsWith(\"file:\")) {\n+            toReturn \u003d toReturn.substring(\"file:\".length());\n+          }\n+          toReturn \u003d URLDecoder.decode(toReturn, \"UTF-8\");\n+          return toReturn.replaceAll(\"!.*$\", \"\");\n+        }\n+      }\n+    } catch (IOException e) {\n+      throw new RuntimeException(e);\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String findContainingJar(Class clazz) {\n    ClassLoader loader \u003d clazz.getClassLoader();\n    String classFile \u003d clazz.getName().replaceAll(\"\\\\.\", \"/\") + \".class\";\n    try {\n      for (Enumeration itr \u003d loader.getResources(classFile);\n          itr.hasMoreElements();) {\n        URL url \u003d (URL) itr.nextElement();\n        if (\"jar\".equals(url.getProtocol())) {\n          String toReturn \u003d url.getPath();\n          if (toReturn.startsWith(\"file:\")) {\n            toReturn \u003d toReturn.substring(\"file:\".length());\n          }\n          toReturn \u003d URLDecoder.decode(toReturn, \"UTF-8\");\n          return toReturn.replaceAll(\"!.*$\", \"\");\n        }\n      }\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n    return null;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ClassUtil.java"
    }
  }
}