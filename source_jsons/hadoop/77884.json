{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PathData.java",
  "functionName": "getDirectoryContentsIterator",
  "functionId": "getDirectoryContentsIterator",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/PathData.java",
  "functionStartLine": 286,
  "functionEndLine": 304,
  "numCommitsSeen": 18,
  "timeTaken": 1065,
  "changeHistory": [
    "0d898b7bb8d8d616133236da979a4316be4c1a6f"
  ],
  "changeHistoryShort": {
    "0d898b7bb8d8d616133236da979a4316be4c1a6f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0d898b7bb8d8d616133236da979a4316be4c1a6f": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12502 SetReplication OutOfMemoryError. Contributed by Vinayakumar B.\n",
      "commitDate": "11/04/18 5:19 PM",
      "commitName": "0d898b7bb8d8d616133236da979a4316be4c1a6f",
      "commitAuthor": "Aaron Fabbri",
      "diff": "@@ -0,0 +1,19 @@\n+  public RemoteIterator\u003cPathData\u003e getDirectoryContentsIterator()\n+      throws IOException {\n+    checkIfExists(FileTypeRequirement.SHOULD_BE_DIRECTORY);\n+    final RemoteIterator\u003cFileStatus\u003e stats \u003d this.fs.listStatusIterator(path);\n+    return new RemoteIterator\u003cPathData\u003e() {\n+\n+      @Override\n+      public boolean hasNext() throws IOException {\n+        return stats.hasNext();\n+      }\n+\n+      @Override\n+      public PathData next() throws IOException {\n+        FileStatus file \u003d stats.next();\n+        String child \u003d getStringForChildPath(file.getPath());\n+        return new PathData(fs, child, file);\n+      }\n+    };\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public RemoteIterator\u003cPathData\u003e getDirectoryContentsIterator()\n      throws IOException {\n    checkIfExists(FileTypeRequirement.SHOULD_BE_DIRECTORY);\n    final RemoteIterator\u003cFileStatus\u003e stats \u003d this.fs.listStatusIterator(path);\n    return new RemoteIterator\u003cPathData\u003e() {\n\n      @Override\n      public boolean hasNext() throws IOException {\n        return stats.hasNext();\n      }\n\n      @Override\n      public PathData next() throws IOException {\n        FileStatus file \u003d stats.next();\n        String child \u003d getStringForChildPath(file.getPath());\n        return new PathData(fs, child, file);\n      }\n    };\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/PathData.java"
    }
  }
}