{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StringUtils.java",
  "functionName": "popOptionWithArgument",
  "functionId": "popOptionWithArgument___name-String__args-List__String__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java",
  "functionStartLine": 1076,
  "functionEndLine": 1096,
  "numCommitsSeen": 44,
  "timeTaken": 1520,
  "changeHistory": [
    "b4eb963c3c3e0b123003d7b32cdf7c9202cfb441",
    "3a9cd79e9ddd5a9499e28633ccccdc9eef22b813"
  ],
  "changeHistoryShort": {
    "b4eb963c3c3e0b123003d7b32cdf7c9202cfb441": "Ymultichange(Yexceptionschange,Ybodychange)",
    "3a9cd79e9ddd5a9499e28633ccccdc9eef22b813": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b4eb963c3c3e0b123003d7b32cdf7c9202cfb441": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-5659. dfsadmin -report doesn\u0027t output cache information properly. Contributed by Andrew Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554893 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/01/14 12:11 PM",
      "commitName": "b4eb963c3c3e0b123003d7b32cdf7c9202cfb441",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-5659. dfsadmin -report doesn\u0027t output cache information properly. Contributed by Andrew Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554893 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/01/14 12:11 PM",
          "commitName": "b4eb963c3c3e0b123003d7b32cdf7c9202cfb441",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "06/12/13 4:11 PM",
          "commitNameOld": "7f059104d293614f3250bd1408874e97f659c92b",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 26.83,
          "commitsBetweenForRepo": 116,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n-  public static String popOptionWithArgument(String name, List\u003cString\u003e args) {\n+  public static String popOptionWithArgument(String name, List\u003cString\u003e args)\n+      throws IllegalArgumentException {\n     String val \u003d null;\n     for (Iterator\u003cString\u003e iter \u003d args.iterator(); iter.hasNext(); ) {\n       String cur \u003d iter.next();\n       if (cur.equals(\"--\")) {\n         // stop parsing arguments when you see --\n         break;\n       } else if (cur.equals(name)) {\n         iter.remove();\n         if (!iter.hasNext()) {\n-          throw new RuntimeException(\"option \" + name + \" requires 1 \" +\n+          throw new IllegalArgumentException(\"option \" + name + \" requires 1 \" +\n               \"argument.\");\n         }\n         val \u003d iter.next();\n         iter.remove();\n         break;\n       }\n     }\n     return val;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String popOptionWithArgument(String name, List\u003cString\u003e args)\n      throws IllegalArgumentException {\n    String val \u003d null;\n    for (Iterator\u003cString\u003e iter \u003d args.iterator(); iter.hasNext(); ) {\n      String cur \u003d iter.next();\n      if (cur.equals(\"--\")) {\n        // stop parsing arguments when you see --\n        break;\n      } else if (cur.equals(name)) {\n        iter.remove();\n        if (!iter.hasNext()) {\n          throw new IllegalArgumentException(\"option \" + name + \" requires 1 \" +\n              \"argument.\");\n        }\n        val \u003d iter.next();\n        iter.remove();\n        break;\n      }\n    }\n    return val;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IllegalArgumentException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5659. dfsadmin -report doesn\u0027t output cache information properly. Contributed by Andrew Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554893 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/01/14 12:11 PM",
          "commitName": "b4eb963c3c3e0b123003d7b32cdf7c9202cfb441",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "06/12/13 4:11 PM",
          "commitNameOld": "7f059104d293614f3250bd1408874e97f659c92b",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 26.83,
          "commitsBetweenForRepo": 116,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n-  public static String popOptionWithArgument(String name, List\u003cString\u003e args) {\n+  public static String popOptionWithArgument(String name, List\u003cString\u003e args)\n+      throws IllegalArgumentException {\n     String val \u003d null;\n     for (Iterator\u003cString\u003e iter \u003d args.iterator(); iter.hasNext(); ) {\n       String cur \u003d iter.next();\n       if (cur.equals(\"--\")) {\n         // stop parsing arguments when you see --\n         break;\n       } else if (cur.equals(name)) {\n         iter.remove();\n         if (!iter.hasNext()) {\n-          throw new RuntimeException(\"option \" + name + \" requires 1 \" +\n+          throw new IllegalArgumentException(\"option \" + name + \" requires 1 \" +\n               \"argument.\");\n         }\n         val \u003d iter.next();\n         iter.remove();\n         break;\n       }\n     }\n     return val;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String popOptionWithArgument(String name, List\u003cString\u003e args)\n      throws IllegalArgumentException {\n    String val \u003d null;\n    for (Iterator\u003cString\u003e iter \u003d args.iterator(); iter.hasNext(); ) {\n      String cur \u003d iter.next();\n      if (cur.equals(\"--\")) {\n        // stop parsing arguments when you see --\n        break;\n      } else if (cur.equals(name)) {\n        iter.remove();\n        if (!iter.hasNext()) {\n          throw new IllegalArgumentException(\"option \" + name + \" requires 1 \" +\n              \"argument.\");\n        }\n        val \u003d iter.next();\n        iter.remove();\n        break;\n      }\n    }\n    return val;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "3a9cd79e9ddd5a9499e28633ccccdc9eef22b813": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5120. Add command-line support for manipulating cache pools.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1521240 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/09/13 11:53 AM",
      "commitName": "3a9cd79e9ddd5a9499e28633ccccdc9eef22b813",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,20 @@\n+  public static String popOptionWithArgument(String name, List\u003cString\u003e args) {\n+    String val \u003d null;\n+    for (Iterator\u003cString\u003e iter \u003d args.iterator(); iter.hasNext(); ) {\n+      String cur \u003d iter.next();\n+      if (cur.equals(\"--\")) {\n+        // stop parsing arguments when you see --\n+        break;\n+      } else if (cur.equals(name)) {\n+        iter.remove();\n+        if (!iter.hasNext()) {\n+          throw new RuntimeException(\"option \" + name + \" requires 1 \" +\n+              \"argument.\");\n+        }\n+        val \u003d iter.next();\n+        iter.remove();\n+        break;\n+      }\n+    }\n+    return val;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String popOptionWithArgument(String name, List\u003cString\u003e args) {\n    String val \u003d null;\n    for (Iterator\u003cString\u003e iter \u003d args.iterator(); iter.hasNext(); ) {\n      String cur \u003d iter.next();\n      if (cur.equals(\"--\")) {\n        // stop parsing arguments when you see --\n        break;\n      } else if (cur.equals(name)) {\n        iter.remove();\n        if (!iter.hasNext()) {\n          throw new RuntimeException(\"option \" + name + \" requires 1 \" +\n              \"argument.\");\n        }\n        val \u003d iter.next();\n        iter.remove();\n        break;\n      }\n    }\n    return val;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java"
    }
  }
}