{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SQLFederationStateStore.java",
  "functionName": "getApplicationsHomeSubCluster",
  "functionId": "getApplicationsHomeSubCluster___request-GetApplicationsHomeSubClusterRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/impl/SQLFederationStateStore.java",
  "functionStartLine": 724,
  "functionEndLine": 765,
  "numCommitsSeen": 6,
  "timeTaken": 1293,
  "changeHistory": [
    "75abc9a8e2cf1c7d2c574ede720df59421512be3",
    "5272af8c7eab76d779c621eb0208bf29ffa25613"
  ],
  "changeHistoryShort": {
    "75abc9a8e2cf1c7d2c574ede720df59421512be3": "Ybodychange",
    "5272af8c7eab76d779c621eb0208bf29ffa25613": "Yintroduced"
  },
  "changeHistoryDetails": {
    "75abc9a8e2cf1c7d2c574ede720df59421512be3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5603. Metrics for Federation StateStore. (Ellen Hui via asuresh)\n",
      "commitDate": "21/08/17 10:43 PM",
      "commitName": "75abc9a8e2cf1c7d2c574ede720df59421512be3",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "825108d08a9b49d7c19915624f9167101528cb95",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 20.22,
      "commitsBetweenForRepo": 132,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,42 @@\n   public GetApplicationsHomeSubClusterResponse getApplicationsHomeSubCluster(\n       GetApplicationsHomeSubClusterRequest request) throws YarnException {\n     CallableStatement cstmt \u003d null;\n     Connection conn \u003d null;\n     ResultSet rs \u003d null;\n     List\u003cApplicationHomeSubCluster\u003e appsHomeSubClusters \u003d\n         new ArrayList\u003cApplicationHomeSubCluster\u003e();\n \n     try {\n       conn \u003d getConnection();\n       cstmt \u003d conn.prepareCall(CALL_SP_GET_APPLICATIONS_HOME_SUBCLUSTER);\n \n       // Execute the query\n+      long startTime \u003d clock.getTime();\n       rs \u003d cstmt.executeQuery();\n+      long stopTime \u003d clock.getTime();\n \n       while (rs.next()) {\n \n         // Extract the output for each tuple\n         String applicationId \u003d rs.getString(1);\n         String homeSubCluster \u003d rs.getString(2);\n \n         appsHomeSubClusters.add(ApplicationHomeSubCluster.newInstance(\n             ApplicationId.fromString(applicationId),\n             SubClusterId.newInstance(homeSubCluster)));\n       }\n \n+      FederationStateStoreClientMetrics\n+          .succeededStateStoreCall(stopTime - startTime);\n+\n     } catch (SQLException e) {\n+      FederationStateStoreClientMetrics.failedStateStoreCall();\n       FederationStateStoreUtils.logAndThrowRetriableException(LOG,\n           \"Unable to obtain the information for all the applications \", e);\n     } finally {\n       // Return to the pool the CallableStatement and the Connection\n       FederationStateStoreUtils.returnToPool(LOG, cstmt, conn, rs);\n     }\n     return GetApplicationsHomeSubClusterResponse\n         .newInstance(appsHomeSubClusters);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetApplicationsHomeSubClusterResponse getApplicationsHomeSubCluster(\n      GetApplicationsHomeSubClusterRequest request) throws YarnException {\n    CallableStatement cstmt \u003d null;\n    Connection conn \u003d null;\n    ResultSet rs \u003d null;\n    List\u003cApplicationHomeSubCluster\u003e appsHomeSubClusters \u003d\n        new ArrayList\u003cApplicationHomeSubCluster\u003e();\n\n    try {\n      conn \u003d getConnection();\n      cstmt \u003d conn.prepareCall(CALL_SP_GET_APPLICATIONS_HOME_SUBCLUSTER);\n\n      // Execute the query\n      long startTime \u003d clock.getTime();\n      rs \u003d cstmt.executeQuery();\n      long stopTime \u003d clock.getTime();\n\n      while (rs.next()) {\n\n        // Extract the output for each tuple\n        String applicationId \u003d rs.getString(1);\n        String homeSubCluster \u003d rs.getString(2);\n\n        appsHomeSubClusters.add(ApplicationHomeSubCluster.newInstance(\n            ApplicationId.fromString(applicationId),\n            SubClusterId.newInstance(homeSubCluster)));\n      }\n\n      FederationStateStoreClientMetrics\n          .succeededStateStoreCall(stopTime - startTime);\n\n    } catch (SQLException e) {\n      FederationStateStoreClientMetrics.failedStateStoreCall();\n      FederationStateStoreUtils.logAndThrowRetriableException(LOG,\n          \"Unable to obtain the information for all the applications \", e);\n    } finally {\n      // Return to the pool the CallableStatement and the Connection\n      FederationStateStoreUtils.returnToPool(LOG, cstmt, conn, rs);\n    }\n    return GetApplicationsHomeSubClusterResponse\n        .newInstance(appsHomeSubClusters);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/impl/SQLFederationStateStore.java",
      "extendedDetails": {}
    },
    "5272af8c7eab76d779c621eb0208bf29ffa25613": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3663. Federation State and Policy Store (DBMS implementation). (Giovanni Matteo Fumarola via curino).\n\n(cherry picked from commit be99c1fe2eb150fabd69902118d65941f82971f6)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "5272af8c7eab76d779c621eb0208bf29ffa25613",
      "commitAuthor": "Carlo Curino",
      "diff": "@@ -0,0 +1,36 @@\n+  public GetApplicationsHomeSubClusterResponse getApplicationsHomeSubCluster(\n+      GetApplicationsHomeSubClusterRequest request) throws YarnException {\n+    CallableStatement cstmt \u003d null;\n+    Connection conn \u003d null;\n+    ResultSet rs \u003d null;\n+    List\u003cApplicationHomeSubCluster\u003e appsHomeSubClusters \u003d\n+        new ArrayList\u003cApplicationHomeSubCluster\u003e();\n+\n+    try {\n+      conn \u003d getConnection();\n+      cstmt \u003d conn.prepareCall(CALL_SP_GET_APPLICATIONS_HOME_SUBCLUSTER);\n+\n+      // Execute the query\n+      rs \u003d cstmt.executeQuery();\n+\n+      while (rs.next()) {\n+\n+        // Extract the output for each tuple\n+        String applicationId \u003d rs.getString(1);\n+        String homeSubCluster \u003d rs.getString(2);\n+\n+        appsHomeSubClusters.add(ApplicationHomeSubCluster.newInstance(\n+            ApplicationId.fromString(applicationId),\n+            SubClusterId.newInstance(homeSubCluster)));\n+      }\n+\n+    } catch (SQLException e) {\n+      FederationStateStoreUtils.logAndThrowRetriableException(LOG,\n+          \"Unable to obtain the information for all the applications \", e);\n+    } finally {\n+      // Return to the pool the CallableStatement and the Connection\n+      FederationStateStoreUtils.returnToPool(LOG, cstmt, conn, rs);\n+    }\n+    return GetApplicationsHomeSubClusterResponse\n+        .newInstance(appsHomeSubClusters);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public GetApplicationsHomeSubClusterResponse getApplicationsHomeSubCluster(\n      GetApplicationsHomeSubClusterRequest request) throws YarnException {\n    CallableStatement cstmt \u003d null;\n    Connection conn \u003d null;\n    ResultSet rs \u003d null;\n    List\u003cApplicationHomeSubCluster\u003e appsHomeSubClusters \u003d\n        new ArrayList\u003cApplicationHomeSubCluster\u003e();\n\n    try {\n      conn \u003d getConnection();\n      cstmt \u003d conn.prepareCall(CALL_SP_GET_APPLICATIONS_HOME_SUBCLUSTER);\n\n      // Execute the query\n      rs \u003d cstmt.executeQuery();\n\n      while (rs.next()) {\n\n        // Extract the output for each tuple\n        String applicationId \u003d rs.getString(1);\n        String homeSubCluster \u003d rs.getString(2);\n\n        appsHomeSubClusters.add(ApplicationHomeSubCluster.newInstance(\n            ApplicationId.fromString(applicationId),\n            SubClusterId.newInstance(homeSubCluster)));\n      }\n\n    } catch (SQLException e) {\n      FederationStateStoreUtils.logAndThrowRetriableException(LOG,\n          \"Unable to obtain the information for all the applications \", e);\n    } finally {\n      // Return to the pool the CallableStatement and the Connection\n      FederationStateStoreUtils.returnToPool(LOG, cstmt, conn, rs);\n    }\n    return GetApplicationsHomeSubClusterResponse\n        .newInstance(appsHomeSubClusters);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/impl/SQLFederationStateStore.java"
    }
  }
}