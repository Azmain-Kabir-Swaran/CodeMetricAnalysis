{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMContainerTokenSecretManager.java",
  "functionName": "removeAnyContainerTokenIfExpired",
  "functionId": "removeAnyContainerTokenIfExpired",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/security/NMContainerTokenSecretManager.java",
  "functionStartLine": 219,
  "functionEndLine": 239,
  "numCommitsSeen": 9,
  "timeTaken": 1088,
  "changeHistory": [
    "2050e0dad661bade3e140d7a5692cfe1999badc3",
    "8b9c1e68ab33b8d7720dbca9d9de9e92f9b6b447"
  ],
  "changeHistoryShort": {
    "2050e0dad661bade3e140d7a5692cfe1999badc3": "Ybodychange",
    "8b9c1e68ab33b8d7720dbca9d9de9e92f9b6b447": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2050e0dad661bade3e140d7a5692cfe1999badc3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1342. Recover container tokens upon nodemanager restart. Contributed by Jason Lowe.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612995 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/07/14 10:02 PM",
      "commitName": "2050e0dad661bade3e140d7a5692cfe1999badc3",
      "commitAuthor": "Devarajulu K",
      "commitDateOld": "16/07/13 9:24 PM",
      "commitNameOld": "8b9c1e68ab33b8d7720dbca9d9de9e92f9b6b447",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 372.03,
      "commitsBetweenForRepo": 2491,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,21 @@\n   protected synchronized void removeAnyContainerTokenIfExpired() {\n     // Trying to remove any container if its container token has expired.\n     Iterator\u003cEntry\u003cLong, List\u003cContainerId\u003e\u003e\u003e containersI \u003d\n         this.recentlyStartedContainerTracker.entrySet().iterator();\n     Long currTime \u003d System.currentTimeMillis();\n     while (containersI.hasNext()) {\n       Entry\u003cLong, List\u003cContainerId\u003e\u003e containerEntry \u003d containersI.next();\n       if (containerEntry.getKey() \u003c currTime) {\n+        for (ContainerId container : containerEntry.getValue()) {\n+          try {\n+            stateStore.removeContainerToken(container);\n+          } catch (IOException e) {\n+            LOG.error(\"Unable to remove token for container \" + container, e);\n+          }\n+        }\n         containersI.remove();\n       } else {\n         break;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void removeAnyContainerTokenIfExpired() {\n    // Trying to remove any container if its container token has expired.\n    Iterator\u003cEntry\u003cLong, List\u003cContainerId\u003e\u003e\u003e containersI \u003d\n        this.recentlyStartedContainerTracker.entrySet().iterator();\n    Long currTime \u003d System.currentTimeMillis();\n    while (containersI.hasNext()) {\n      Entry\u003cLong, List\u003cContainerId\u003e\u003e containerEntry \u003d containersI.next();\n      if (containerEntry.getKey() \u003c currTime) {\n        for (ContainerId container : containerEntry.getValue()) {\n          try {\n            stateStore.removeContainerToken(container);\n          } catch (IOException e) {\n            LOG.error(\"Unable to remove token for container \" + container, e);\n          }\n        }\n        containersI.remove();\n      } else {\n        break;\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/security/NMContainerTokenSecretManager.java",
      "extendedDetails": {}
    },
    "8b9c1e68ab33b8d7720dbca9d9de9e92f9b6b447": {
      "type": "Yintroduced",
      "commitMessage": "YARN-62. Modified NodeManagers to avoid AMs from abusing container tokens for repetitive container launches. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1503986 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/13 9:24 PM",
      "commitName": "8b9c1e68ab33b8d7720dbca9d9de9e92f9b6b447",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,14 @@\n+  protected synchronized void removeAnyContainerTokenIfExpired() {\n+    // Trying to remove any container if its container token has expired.\n+    Iterator\u003cEntry\u003cLong, List\u003cContainerId\u003e\u003e\u003e containersI \u003d\n+        this.recentlyStartedContainerTracker.entrySet().iterator();\n+    Long currTime \u003d System.currentTimeMillis();\n+    while (containersI.hasNext()) {\n+      Entry\u003cLong, List\u003cContainerId\u003e\u003e containerEntry \u003d containersI.next();\n+      if (containerEntry.getKey() \u003c currTime) {\n+        containersI.remove();\n+      } else {\n+        break;\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void removeAnyContainerTokenIfExpired() {\n    // Trying to remove any container if its container token has expired.\n    Iterator\u003cEntry\u003cLong, List\u003cContainerId\u003e\u003e\u003e containersI \u003d\n        this.recentlyStartedContainerTracker.entrySet().iterator();\n    Long currTime \u003d System.currentTimeMillis();\n    while (containersI.hasNext()) {\n      Entry\u003cLong, List\u003cContainerId\u003e\u003e containerEntry \u003d containersI.next();\n      if (containerEntry.getKey() \u003c currTime) {\n        containersI.remove();\n      } else {\n        break;\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/security/NMContainerTokenSecretManager.java"
    }
  }
}