{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DatanodeManager.java",
  "functionName": "countSoftwareVersions",
  "functionId": "countSoftwareVersions",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
  "functionStartLine": 876,
  "functionEndLine": 887,
  "numCommitsSeen": 172,
  "timeTaken": 4160,
  "changeHistory": [
    "f3ac1f41b8fa82a0ac87a207d7afa2061d90a9bd",
    "8602692338d6f493647205e0241e4116211fab75",
    "2ffd84273ac490724fe7e7825664bb6d09ef0e99"
  ],
  "changeHistoryShort": {
    "f3ac1f41b8fa82a0ac87a207d7afa2061d90a9bd": "Ybodychange",
    "8602692338d6f493647205e0241e4116211fab75": "Ybodychange",
    "2ffd84273ac490724fe7e7825664bb6d09ef0e99": "Ybodychange"
  },
  "changeHistoryDetails": {
    "f3ac1f41b8fa82a0ac87a207d7afa2061d90a9bd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9500. Fix software version counts for DataNodes during rolling upgrade. Contributed by Erik Krogen.",
      "commitDate": "27/10/16 3:58 PM",
      "commitName": "f3ac1f41b8fa82a0ac87a207d7afa2061d90a9bd",
      "commitAuthor": "Erik Krogen",
      "commitDateOld": "17/10/16 5:45 PM",
      "commitNameOld": "b61fb267b92b2736920b4bd0c673d31e7632ebb9",
      "commitAuthorOld": "Ming Ma",
      "daysBetweenCommits": 9.93,
      "commitsBetweenForRepo": 112,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,12 @@\n   private void countSoftwareVersions() {\n     synchronized(this) {\n       datanodesSoftwareVersions.clear();\n       for(DatanodeDescriptor dn: datanodeMap.values()) {\n-        // Check isAlive too because right after removeDatanode(),\n-        // isDatanodeDead() is still true \n         if (shouldCountVersion(dn)) {\n           Integer num \u003d datanodesSoftwareVersions.get(dn.getSoftwareVersion());\n           num \u003d num \u003d\u003d null ? 1 : num+1;\n           datanodesSoftwareVersions.put(dn.getSoftwareVersion(), num);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void countSoftwareVersions() {\n    synchronized(this) {\n      datanodesSoftwareVersions.clear();\n      for(DatanodeDescriptor dn: datanodeMap.values()) {\n        if (shouldCountVersion(dn)) {\n          Integer num \u003d datanodesSoftwareVersions.get(dn.getSoftwareVersion());\n          num \u003d num \u003d\u003d null ? 1 : num+1;\n          datanodesSoftwareVersions.put(dn.getSoftwareVersion(), num);\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "extendedDetails": {}
    },
    "8602692338d6f493647205e0241e4116211fab75": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9371. Code cleanup for DatanodeManager. Contributed by Jing Zhao.\n",
      "commitDate": "15/12/15 10:47 AM",
      "commitName": "8602692338d6f493647205e0241e4116211fab75",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "01/12/15 4:09 PM",
      "commitNameOld": "a49cc74b4c72195dee1dfb6f9548e5e411dff553",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 13.78,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,14 @@\n   private void countSoftwareVersions() {\n-    synchronized(datanodeMap) {\n-      HashMap\u003cString, Integer\u003e versionCount \u003d new HashMap\u003c\u003e();\n+    synchronized(this) {\n+      datanodesSoftwareVersions.clear();\n       for(DatanodeDescriptor dn: datanodeMap.values()) {\n         // Check isAlive too because right after removeDatanode(),\n         // isDatanodeDead() is still true \n-        if(shouldCountVersion(dn))\n-        {\n-          Integer num \u003d versionCount.get(dn.getSoftwareVersion());\n+        if (shouldCountVersion(dn)) {\n+          Integer num \u003d datanodesSoftwareVersions.get(dn.getSoftwareVersion());\n           num \u003d num \u003d\u003d null ? 1 : num+1;\n-          versionCount.put(dn.getSoftwareVersion(), num);\n+          datanodesSoftwareVersions.put(dn.getSoftwareVersion(), num);\n         }\n       }\n-      this.datanodesSoftwareVersions \u003d versionCount;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void countSoftwareVersions() {\n    synchronized(this) {\n      datanodesSoftwareVersions.clear();\n      for(DatanodeDescriptor dn: datanodeMap.values()) {\n        // Check isAlive too because right after removeDatanode(),\n        // isDatanodeDead() is still true \n        if (shouldCountVersion(dn)) {\n          Integer num \u003d datanodesSoftwareVersions.get(dn.getSoftwareVersion());\n          num \u003d num \u003d\u003d null ? 1 : num+1;\n          datanodesSoftwareVersions.put(dn.getSoftwareVersion(), num);\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "extendedDetails": {}
    },
    "2ffd84273ac490724fe7e7825664bb6d09ef0e99": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8653. Code cleanup for DatanodeManager, DatanodeDescriptor and DatanodeStorageInfo. Contributed by Zhe Zhang.\n",
      "commitDate": "29/06/15 12:12 PM",
      "commitName": "2ffd84273ac490724fe7e7825664bb6d09ef0e99",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "12/06/15 11:38 AM",
      "commitNameOld": "c17439c2ddd921b63b1635e6f1cba634b8da8557",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 17.02,
      "commitsBetweenForRepo": 104,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private void countSoftwareVersions() {\n     synchronized(datanodeMap) {\n-      HashMap\u003cString, Integer\u003e versionCount \u003d new HashMap\u003cString, Integer\u003e();\n+      HashMap\u003cString, Integer\u003e versionCount \u003d new HashMap\u003c\u003e();\n       for(DatanodeDescriptor dn: datanodeMap.values()) {\n         // Check isAlive too because right after removeDatanode(),\n         // isDatanodeDead() is still true \n         if(shouldCountVersion(dn))\n         {\n           Integer num \u003d versionCount.get(dn.getSoftwareVersion());\n           num \u003d num \u003d\u003d null ? 1 : num+1;\n           versionCount.put(dn.getSoftwareVersion(), num);\n         }\n       }\n       this.datanodesSoftwareVersions \u003d versionCount;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void countSoftwareVersions() {\n    synchronized(datanodeMap) {\n      HashMap\u003cString, Integer\u003e versionCount \u003d new HashMap\u003c\u003e();\n      for(DatanodeDescriptor dn: datanodeMap.values()) {\n        // Check isAlive too because right after removeDatanode(),\n        // isDatanodeDead() is still true \n        if(shouldCountVersion(dn))\n        {\n          Integer num \u003d versionCount.get(dn.getSoftwareVersion());\n          num \u003d num \u003d\u003d null ? 1 : num+1;\n          versionCount.put(dn.getSoftwareVersion(), num);\n        }\n      }\n      this.datanodesSoftwareVersions \u003d versionCount;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "extendedDetails": {}
    }
  }
}