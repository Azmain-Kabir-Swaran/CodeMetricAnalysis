{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Gridmix.java",
  "functionName": "start",
  "functionId": "start___conf-Configuration__traceIn-String__ioPath-Path__genbytes-long__userResolver-UserResolver",
  "sourceFilePath": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/Gridmix.java",
  "functionStartLine": 484,
  "functionEndLine": 565,
  "numCommitsSeen": 19,
  "timeTaken": 5371,
  "changeHistory": [
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
    "dcf84707ab50662add112bd6b01c0bfd63374853",
    "7d609320608482de9c191bafb36498b29c1fe676",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "787dcfb8cd6e1f30a2a508b052e9d31f314b2169",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": "Ybodychange",
    "dcf84707ab50662add112bd6b01c0bfd63374853": "Yfilerename",
    "7d609320608482de9c191bafb36498b29c1fe676": "Ymultichange(Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "787dcfb8cd6e1f30a2a508b052e9d31f314b2169": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10571. Use Log.*(Object, Throwable) overload to log exceptions.\nContributed by Andras Bokor.\n",
      "commitDate": "14/02/18 8:20 AM",
      "commitName": "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "11/08/17 9:25 AM",
      "commitNameOld": "4222c971080f2b150713727092c7197df58c88e5",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 187.0,
      "commitsBetweenForRepo": 1378,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,84 +1,82 @@\n   int start(Configuration conf, String traceIn, Path ioPath, long genbytes,\n       UserResolver userResolver)\n       throws IOException, InterruptedException {\n     DataStatistics stats \u003d null;\n     InputStream trace \u003d null;\n     int exitCode \u003d 0;\n \n     try {\n       Path scratchDir \u003d new Path(ioPath, conf.get(GRIDMIX_OUT_DIR, \"gridmix\"));\n \n       // add shutdown hook for SIGINT, etc.\n       Runtime.getRuntime().addShutdownHook(sdh);\n       CountDownLatch startFlag \u003d new CountDownLatch(1);\n       try {\n         // Create, start job submission threads\n         startThreads(conf, traceIn, ioPath, scratchDir, startFlag,\n                      userResolver);\n         \n         Path inputDir \u003d getGridmixInputDataPath(ioPath);\n         \n         // Write input data if specified\n         exitCode \u003d writeInputData(genbytes, inputDir);\n         if (exitCode !\u003d 0) {\n           return exitCode;\n         }\n \n         // publish the data statistics\n         stats \u003d GenerateData.publishDataStatistics(inputDir, genbytes, conf);\n         \n         // scan input dir contents\n         submitter.refreshFilePool();\n \n         boolean shouldGenerate \u003d (genbytes \u003e 0);\n         // set up the needed things for emulation of various loads\n         exitCode \u003d setupEmulation(conf, traceIn, scratchDir, ioPath,\n                                   shouldGenerate);\n         if (exitCode !\u003d 0) {\n           return exitCode;\n         }\n \n         // start the summarizer\n         summarizer.start(conf);\n         \n         factory.start();\n         statistics.start();\n       } catch (Throwable e) {\n         LOG.error(\"Startup failed. \" + e.toString() + \"\\n\");\n-        if (LOG.isDebugEnabled()) {\n-          e.printStackTrace();\n-        }\n+        LOG.debug(\"Startup failed\", e);\n         if (factory !\u003d null) factory.abort(); // abort pipeline\n         exitCode \u003d STARTUP_FAILED_ERROR;\n       } finally {\n         // signal for factory to start; sets start time\n         startFlag.countDown();\n       }\n       if (factory !\u003d null) {\n         // wait for input exhaustion\n         factory.join(Long.MAX_VALUE);\n         final Throwable badTraceException \u003d factory.error();\n         if (null !\u003d badTraceException) {\n           LOG.error(\"Error in trace\", badTraceException);\n           throw new IOException(\"Error in trace\", badTraceException);\n         }\n         // wait for pending tasks to be submitted\n         submitter.shutdown();\n         submitter.join(Long.MAX_VALUE);\n         // wait for running tasks to complete\n         monitor.shutdown();\n         monitor.join(Long.MAX_VALUE);\n \n         statistics.shutdown();\n         statistics.join(Long.MAX_VALUE);\n \n       }\n     } finally {\n       if (factory !\u003d null) {\n         summarizer.finalize(factory, traceIn, genbytes, userResolver, stats, \n                             conf);\n       }\n-      IOUtils.cleanup(LOG, trace);\n+      IOUtils.cleanupWithLogger(LOG, trace);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  int start(Configuration conf, String traceIn, Path ioPath, long genbytes,\n      UserResolver userResolver)\n      throws IOException, InterruptedException {\n    DataStatistics stats \u003d null;\n    InputStream trace \u003d null;\n    int exitCode \u003d 0;\n\n    try {\n      Path scratchDir \u003d new Path(ioPath, conf.get(GRIDMIX_OUT_DIR, \"gridmix\"));\n\n      // add shutdown hook for SIGINT, etc.\n      Runtime.getRuntime().addShutdownHook(sdh);\n      CountDownLatch startFlag \u003d new CountDownLatch(1);\n      try {\n        // Create, start job submission threads\n        startThreads(conf, traceIn, ioPath, scratchDir, startFlag,\n                     userResolver);\n        \n        Path inputDir \u003d getGridmixInputDataPath(ioPath);\n        \n        // Write input data if specified\n        exitCode \u003d writeInputData(genbytes, inputDir);\n        if (exitCode !\u003d 0) {\n          return exitCode;\n        }\n\n        // publish the data statistics\n        stats \u003d GenerateData.publishDataStatistics(inputDir, genbytes, conf);\n        \n        // scan input dir contents\n        submitter.refreshFilePool();\n\n        boolean shouldGenerate \u003d (genbytes \u003e 0);\n        // set up the needed things for emulation of various loads\n        exitCode \u003d setupEmulation(conf, traceIn, scratchDir, ioPath,\n                                  shouldGenerate);\n        if (exitCode !\u003d 0) {\n          return exitCode;\n        }\n\n        // start the summarizer\n        summarizer.start(conf);\n        \n        factory.start();\n        statistics.start();\n      } catch (Throwable e) {\n        LOG.error(\"Startup failed. \" + e.toString() + \"\\n\");\n        LOG.debug(\"Startup failed\", e);\n        if (factory !\u003d null) factory.abort(); // abort pipeline\n        exitCode \u003d STARTUP_FAILED_ERROR;\n      } finally {\n        // signal for factory to start; sets start time\n        startFlag.countDown();\n      }\n      if (factory !\u003d null) {\n        // wait for input exhaustion\n        factory.join(Long.MAX_VALUE);\n        final Throwable badTraceException \u003d factory.error();\n        if (null !\u003d badTraceException) {\n          LOG.error(\"Error in trace\", badTraceException);\n          throw new IOException(\"Error in trace\", badTraceException);\n        }\n        // wait for pending tasks to be submitted\n        submitter.shutdown();\n        submitter.join(Long.MAX_VALUE);\n        // wait for running tasks to complete\n        monitor.shutdown();\n        monitor.join(Long.MAX_VALUE);\n\n        statistics.shutdown();\n        statistics.join(Long.MAX_VALUE);\n\n      }\n    } finally {\n      if (factory !\u003d null) {\n        summarizer.finalize(factory, traceIn, genbytes, userResolver, stats, \n                            conf);\n      }\n      IOUtils.cleanupWithLogger(LOG, trace);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/Gridmix.java",
      "extendedDetails": {}
    },
    "dcf84707ab50662add112bd6b01c0bfd63374853": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3543. Mavenize Gridmix. (tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1339629 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/05/12 8:06 AM",
      "commitName": "dcf84707ab50662add112bd6b01c0bfd63374853",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "17/05/12 7:20 AM",
      "commitNameOld": "e1f09365ca0bee093f849fcf2e546dd6e2c0a965",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  int start(Configuration conf, String traceIn, Path ioPath, long genbytes,\n      UserResolver userResolver)\n      throws IOException, InterruptedException {\n    DataStatistics stats \u003d null;\n    InputStream trace \u003d null;\n    int exitCode \u003d 0;\n\n    try {\n      Path scratchDir \u003d new Path(ioPath, conf.get(GRIDMIX_OUT_DIR, \"gridmix\"));\n\n      // add shutdown hook for SIGINT, etc.\n      Runtime.getRuntime().addShutdownHook(sdh);\n      CountDownLatch startFlag \u003d new CountDownLatch(1);\n      try {\n        // Create, start job submission threads\n        startThreads(conf, traceIn, ioPath, scratchDir, startFlag,\n                     userResolver);\n        \n        Path inputDir \u003d getGridmixInputDataPath(ioPath);\n        \n        // Write input data if specified\n        exitCode \u003d writeInputData(genbytes, inputDir);\n        if (exitCode !\u003d 0) {\n          return exitCode;\n        }\n\n        // publish the data statistics\n        stats \u003d GenerateData.publishDataStatistics(inputDir, genbytes, conf);\n        \n        // scan input dir contents\n        submitter.refreshFilePool();\n\n        boolean shouldGenerate \u003d (genbytes \u003e 0);\n        // set up the needed things for emulation of various loads\n        exitCode \u003d setupEmulation(conf, traceIn, scratchDir, ioPath,\n                                  shouldGenerate);\n        if (exitCode !\u003d 0) {\n          return exitCode;\n        }\n\n        // start the summarizer\n        summarizer.start(conf);\n        \n        factory.start();\n        statistics.start();\n      } catch (Throwable e) {\n        LOG.error(\"Startup failed. \" + e.toString() + \"\\n\");\n        if (LOG.isDebugEnabled()) {\n          e.printStackTrace();\n        }\n        if (factory !\u003d null) factory.abort(); // abort pipeline\n        exitCode \u003d STARTUP_FAILED_ERROR;\n      } finally {\n        // signal for factory to start; sets start time\n        startFlag.countDown();\n      }\n      if (factory !\u003d null) {\n        // wait for input exhaustion\n        factory.join(Long.MAX_VALUE);\n        final Throwable badTraceException \u003d factory.error();\n        if (null !\u003d badTraceException) {\n          LOG.error(\"Error in trace\", badTraceException);\n          throw new IOException(\"Error in trace\", badTraceException);\n        }\n        // wait for pending tasks to be submitted\n        submitter.shutdown();\n        submitter.join(Long.MAX_VALUE);\n        // wait for running tasks to complete\n        monitor.shutdown();\n        monitor.join(Long.MAX_VALUE);\n\n        statistics.shutdown();\n        statistics.join(Long.MAX_VALUE);\n\n      }\n    } finally {\n      if (factory !\u003d null) {\n        summarizer.finalize(factory, traceIn, genbytes, userResolver, stats, \n                            conf);\n      }\n      IOUtils.cleanup(LOG, trace);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/Gridmix.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/Gridmix.java",
        "newPath": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/Gridmix.java"
      }
    },
    "7d609320608482de9c191bafb36498b29c1fe676": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-3829. [Gridmix] Gridmix should give better error message when input data directory already exists and -generate option is given.(ravigummadi)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1299625 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/03/12 4:08 AM",
      "commitName": "7d609320608482de9c191bafb36498b29c1fe676",
      "commitAuthor": "Ravi Gummadi",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-3829. [Gridmix] Gridmix should give better error message when input data directory already exists and -generate option is given.(ravigummadi)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1299625 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/03/12 4:08 AM",
          "commitName": "7d609320608482de9c191bafb36498b29c1fe676",
          "commitAuthor": "Ravi Gummadi",
          "commitDateOld": "23/02/12 2:41 AM",
          "commitNameOld": "8a2073cc61699f5692fcf638f4bae4d1c544870a",
          "commitAuthorOld": "Amar Kamat",
          "daysBetweenCommits": 18.02,
          "commitsBetweenForRepo": 132,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,78 +1,84 @@\n   int start(Configuration conf, String traceIn, Path ioPath, long genbytes,\n-      UserResolver userResolver, boolean generate)\n+      UserResolver userResolver)\n       throws IOException, InterruptedException {\n     DataStatistics stats \u003d null;\n     InputStream trace \u003d null;\n-    ioPath \u003d ioPath.makeQualified(ioPath.getFileSystem(conf));\n+    int exitCode \u003d 0;\n \n     try {\n       Path scratchDir \u003d new Path(ioPath, conf.get(GRIDMIX_OUT_DIR, \"gridmix\"));\n \n       // add shutdown hook for SIGINT, etc.\n       Runtime.getRuntime().addShutdownHook(sdh);\n       CountDownLatch startFlag \u003d new CountDownLatch(1);\n       try {\n         // Create, start job submission threads\n         startThreads(conf, traceIn, ioPath, scratchDir, startFlag,\n                      userResolver);\n         \n         Path inputDir \u003d getGridmixInputDataPath(ioPath);\n         \n         // Write input data if specified\n-        if (genbytes \u003e 0) {\n-          writeInputData(genbytes, inputDir);\n+        exitCode \u003d writeInputData(genbytes, inputDir);\n+        if (exitCode !\u003d 0) {\n+          return exitCode;\n         }\n-        \n+\n         // publish the data statistics\n         stats \u003d GenerateData.publishDataStatistics(inputDir, genbytes, conf);\n         \n         // scan input dir contents\n         submitter.refreshFilePool();\n \n+        boolean shouldGenerate \u003d (genbytes \u003e 0);\n         // set up the needed things for emulation of various loads\n-        int exitCode \u003d setupEmulation(conf, traceIn, scratchDir, ioPath,\n-                                      generate);\n+        exitCode \u003d setupEmulation(conf, traceIn, scratchDir, ioPath,\n+                                  shouldGenerate);\n         if (exitCode !\u003d 0) {\n           return exitCode;\n         }\n \n         // start the summarizer\n         summarizer.start(conf);\n         \n         factory.start();\n         statistics.start();\n       } catch (Throwable e) {\n-        LOG.error(\"Startup failed\", e);\n+        LOG.error(\"Startup failed. \" + e.toString() + \"\\n\");\n+        if (LOG.isDebugEnabled()) {\n+          e.printStackTrace();\n+        }\n         if (factory !\u003d null) factory.abort(); // abort pipeline\n+        exitCode \u003d STARTUP_FAILED_ERROR;\n       } finally {\n         // signal for factory to start; sets start time\n         startFlag.countDown();\n       }\n       if (factory !\u003d null) {\n         // wait for input exhaustion\n         factory.join(Long.MAX_VALUE);\n         final Throwable badTraceException \u003d factory.error();\n         if (null !\u003d badTraceException) {\n           LOG.error(\"Error in trace\", badTraceException);\n           throw new IOException(\"Error in trace\", badTraceException);\n         }\n         // wait for pending tasks to be submitted\n         submitter.shutdown();\n         submitter.join(Long.MAX_VALUE);\n         // wait for running tasks to complete\n         monitor.shutdown();\n         monitor.join(Long.MAX_VALUE);\n \n         statistics.shutdown();\n         statistics.join(Long.MAX_VALUE);\n \n       }\n     } finally {\n       if (factory !\u003d null) {\n         summarizer.finalize(factory, traceIn, genbytes, userResolver, stats, \n                             conf);\n       }\n       IOUtils.cleanup(LOG, trace);\n     }\n-    return 0;\n+    return exitCode;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  int start(Configuration conf, String traceIn, Path ioPath, long genbytes,\n      UserResolver userResolver)\n      throws IOException, InterruptedException {\n    DataStatistics stats \u003d null;\n    InputStream trace \u003d null;\n    int exitCode \u003d 0;\n\n    try {\n      Path scratchDir \u003d new Path(ioPath, conf.get(GRIDMIX_OUT_DIR, \"gridmix\"));\n\n      // add shutdown hook for SIGINT, etc.\n      Runtime.getRuntime().addShutdownHook(sdh);\n      CountDownLatch startFlag \u003d new CountDownLatch(1);\n      try {\n        // Create, start job submission threads\n        startThreads(conf, traceIn, ioPath, scratchDir, startFlag,\n                     userResolver);\n        \n        Path inputDir \u003d getGridmixInputDataPath(ioPath);\n        \n        // Write input data if specified\n        exitCode \u003d writeInputData(genbytes, inputDir);\n        if (exitCode !\u003d 0) {\n          return exitCode;\n        }\n\n        // publish the data statistics\n        stats \u003d GenerateData.publishDataStatistics(inputDir, genbytes, conf);\n        \n        // scan input dir contents\n        submitter.refreshFilePool();\n\n        boolean shouldGenerate \u003d (genbytes \u003e 0);\n        // set up the needed things for emulation of various loads\n        exitCode \u003d setupEmulation(conf, traceIn, scratchDir, ioPath,\n                                  shouldGenerate);\n        if (exitCode !\u003d 0) {\n          return exitCode;\n        }\n\n        // start the summarizer\n        summarizer.start(conf);\n        \n        factory.start();\n        statistics.start();\n      } catch (Throwable e) {\n        LOG.error(\"Startup failed. \" + e.toString() + \"\\n\");\n        if (LOG.isDebugEnabled()) {\n          e.printStackTrace();\n        }\n        if (factory !\u003d null) factory.abort(); // abort pipeline\n        exitCode \u003d STARTUP_FAILED_ERROR;\n      } finally {\n        // signal for factory to start; sets start time\n        startFlag.countDown();\n      }\n      if (factory !\u003d null) {\n        // wait for input exhaustion\n        factory.join(Long.MAX_VALUE);\n        final Throwable badTraceException \u003d factory.error();\n        if (null !\u003d badTraceException) {\n          LOG.error(\"Error in trace\", badTraceException);\n          throw new IOException(\"Error in trace\", badTraceException);\n        }\n        // wait for pending tasks to be submitted\n        submitter.shutdown();\n        submitter.join(Long.MAX_VALUE);\n        // wait for running tasks to complete\n        monitor.shutdown();\n        monitor.join(Long.MAX_VALUE);\n\n        statistics.shutdown();\n        statistics.join(Long.MAX_VALUE);\n\n      }\n    } finally {\n      if (factory !\u003d null) {\n        summarizer.finalize(factory, traceIn, genbytes, userResolver, stats, \n                            conf);\n      }\n      IOUtils.cleanup(LOG, trace);\n    }\n    return exitCode;\n  }",
          "path": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/Gridmix.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, traceIn-String, ioPath-Path, genbytes-long, userResolver-UserResolver, generate-boolean]",
            "newValue": "[conf-Configuration, traceIn-String, ioPath-Path, genbytes-long, userResolver-UserResolver]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3829. [Gridmix] Gridmix should give better error message when input data directory already exists and -generate option is given.(ravigummadi)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1299625 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/03/12 4:08 AM",
          "commitName": "7d609320608482de9c191bafb36498b29c1fe676",
          "commitAuthor": "Ravi Gummadi",
          "commitDateOld": "23/02/12 2:41 AM",
          "commitNameOld": "8a2073cc61699f5692fcf638f4bae4d1c544870a",
          "commitAuthorOld": "Amar Kamat",
          "daysBetweenCommits": 18.02,
          "commitsBetweenForRepo": 132,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,78 +1,84 @@\n   int start(Configuration conf, String traceIn, Path ioPath, long genbytes,\n-      UserResolver userResolver, boolean generate)\n+      UserResolver userResolver)\n       throws IOException, InterruptedException {\n     DataStatistics stats \u003d null;\n     InputStream trace \u003d null;\n-    ioPath \u003d ioPath.makeQualified(ioPath.getFileSystem(conf));\n+    int exitCode \u003d 0;\n \n     try {\n       Path scratchDir \u003d new Path(ioPath, conf.get(GRIDMIX_OUT_DIR, \"gridmix\"));\n \n       // add shutdown hook for SIGINT, etc.\n       Runtime.getRuntime().addShutdownHook(sdh);\n       CountDownLatch startFlag \u003d new CountDownLatch(1);\n       try {\n         // Create, start job submission threads\n         startThreads(conf, traceIn, ioPath, scratchDir, startFlag,\n                      userResolver);\n         \n         Path inputDir \u003d getGridmixInputDataPath(ioPath);\n         \n         // Write input data if specified\n-        if (genbytes \u003e 0) {\n-          writeInputData(genbytes, inputDir);\n+        exitCode \u003d writeInputData(genbytes, inputDir);\n+        if (exitCode !\u003d 0) {\n+          return exitCode;\n         }\n-        \n+\n         // publish the data statistics\n         stats \u003d GenerateData.publishDataStatistics(inputDir, genbytes, conf);\n         \n         // scan input dir contents\n         submitter.refreshFilePool();\n \n+        boolean shouldGenerate \u003d (genbytes \u003e 0);\n         // set up the needed things for emulation of various loads\n-        int exitCode \u003d setupEmulation(conf, traceIn, scratchDir, ioPath,\n-                                      generate);\n+        exitCode \u003d setupEmulation(conf, traceIn, scratchDir, ioPath,\n+                                  shouldGenerate);\n         if (exitCode !\u003d 0) {\n           return exitCode;\n         }\n \n         // start the summarizer\n         summarizer.start(conf);\n         \n         factory.start();\n         statistics.start();\n       } catch (Throwable e) {\n-        LOG.error(\"Startup failed\", e);\n+        LOG.error(\"Startup failed. \" + e.toString() + \"\\n\");\n+        if (LOG.isDebugEnabled()) {\n+          e.printStackTrace();\n+        }\n         if (factory !\u003d null) factory.abort(); // abort pipeline\n+        exitCode \u003d STARTUP_FAILED_ERROR;\n       } finally {\n         // signal for factory to start; sets start time\n         startFlag.countDown();\n       }\n       if (factory !\u003d null) {\n         // wait for input exhaustion\n         factory.join(Long.MAX_VALUE);\n         final Throwable badTraceException \u003d factory.error();\n         if (null !\u003d badTraceException) {\n           LOG.error(\"Error in trace\", badTraceException);\n           throw new IOException(\"Error in trace\", badTraceException);\n         }\n         // wait for pending tasks to be submitted\n         submitter.shutdown();\n         submitter.join(Long.MAX_VALUE);\n         // wait for running tasks to complete\n         monitor.shutdown();\n         monitor.join(Long.MAX_VALUE);\n \n         statistics.shutdown();\n         statistics.join(Long.MAX_VALUE);\n \n       }\n     } finally {\n       if (factory !\u003d null) {\n         summarizer.finalize(factory, traceIn, genbytes, userResolver, stats, \n                             conf);\n       }\n       IOUtils.cleanup(LOG, trace);\n     }\n-    return 0;\n+    return exitCode;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  int start(Configuration conf, String traceIn, Path ioPath, long genbytes,\n      UserResolver userResolver)\n      throws IOException, InterruptedException {\n    DataStatistics stats \u003d null;\n    InputStream trace \u003d null;\n    int exitCode \u003d 0;\n\n    try {\n      Path scratchDir \u003d new Path(ioPath, conf.get(GRIDMIX_OUT_DIR, \"gridmix\"));\n\n      // add shutdown hook for SIGINT, etc.\n      Runtime.getRuntime().addShutdownHook(sdh);\n      CountDownLatch startFlag \u003d new CountDownLatch(1);\n      try {\n        // Create, start job submission threads\n        startThreads(conf, traceIn, ioPath, scratchDir, startFlag,\n                     userResolver);\n        \n        Path inputDir \u003d getGridmixInputDataPath(ioPath);\n        \n        // Write input data if specified\n        exitCode \u003d writeInputData(genbytes, inputDir);\n        if (exitCode !\u003d 0) {\n          return exitCode;\n        }\n\n        // publish the data statistics\n        stats \u003d GenerateData.publishDataStatistics(inputDir, genbytes, conf);\n        \n        // scan input dir contents\n        submitter.refreshFilePool();\n\n        boolean shouldGenerate \u003d (genbytes \u003e 0);\n        // set up the needed things for emulation of various loads\n        exitCode \u003d setupEmulation(conf, traceIn, scratchDir, ioPath,\n                                  shouldGenerate);\n        if (exitCode !\u003d 0) {\n          return exitCode;\n        }\n\n        // start the summarizer\n        summarizer.start(conf);\n        \n        factory.start();\n        statistics.start();\n      } catch (Throwable e) {\n        LOG.error(\"Startup failed. \" + e.toString() + \"\\n\");\n        if (LOG.isDebugEnabled()) {\n          e.printStackTrace();\n        }\n        if (factory !\u003d null) factory.abort(); // abort pipeline\n        exitCode \u003d STARTUP_FAILED_ERROR;\n      } finally {\n        // signal for factory to start; sets start time\n        startFlag.countDown();\n      }\n      if (factory !\u003d null) {\n        // wait for input exhaustion\n        factory.join(Long.MAX_VALUE);\n        final Throwable badTraceException \u003d factory.error();\n        if (null !\u003d badTraceException) {\n          LOG.error(\"Error in trace\", badTraceException);\n          throw new IOException(\"Error in trace\", badTraceException);\n        }\n        // wait for pending tasks to be submitted\n        submitter.shutdown();\n        submitter.join(Long.MAX_VALUE);\n        // wait for running tasks to complete\n        monitor.shutdown();\n        monitor.join(Long.MAX_VALUE);\n\n        statistics.shutdown();\n        statistics.join(Long.MAX_VALUE);\n\n      }\n    } finally {\n      if (factory !\u003d null) {\n        summarizer.finalize(factory, traceIn, genbytes, userResolver, stats, \n                            conf);\n      }\n      IOUtils.cleanup(LOG, trace);\n    }\n    return exitCode;\n  }",
          "path": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/Gridmix.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  int start(Configuration conf, String traceIn, Path ioPath, long genbytes,\n      UserResolver userResolver, boolean generate)\n      throws IOException, InterruptedException {\n    DataStatistics stats \u003d null;\n    InputStream trace \u003d null;\n    ioPath \u003d ioPath.makeQualified(ioPath.getFileSystem(conf));\n\n    try {\n      Path scratchDir \u003d new Path(ioPath, conf.get(GRIDMIX_OUT_DIR, \"gridmix\"));\n\n      // add shutdown hook for SIGINT, etc.\n      Runtime.getRuntime().addShutdownHook(sdh);\n      CountDownLatch startFlag \u003d new CountDownLatch(1);\n      try {\n        // Create, start job submission threads\n        startThreads(conf, traceIn, ioPath, scratchDir, startFlag,\n                     userResolver);\n        \n        Path inputDir \u003d getGridmixInputDataPath(ioPath);\n        \n        // Write input data if specified\n        if (genbytes \u003e 0) {\n          writeInputData(genbytes, inputDir);\n        }\n        \n        // publish the data statistics\n        stats \u003d GenerateData.publishDataStatistics(inputDir, genbytes, conf);\n        \n        // scan input dir contents\n        submitter.refreshFilePool();\n\n        // set up the needed things for emulation of various loads\n        int exitCode \u003d setupEmulation(conf, traceIn, scratchDir, ioPath,\n                                      generate);\n        if (exitCode !\u003d 0) {\n          return exitCode;\n        }\n\n        // start the summarizer\n        summarizer.start(conf);\n        \n        factory.start();\n        statistics.start();\n      } catch (Throwable e) {\n        LOG.error(\"Startup failed\", e);\n        if (factory !\u003d null) factory.abort(); // abort pipeline\n      } finally {\n        // signal for factory to start; sets start time\n        startFlag.countDown();\n      }\n      if (factory !\u003d null) {\n        // wait for input exhaustion\n        factory.join(Long.MAX_VALUE);\n        final Throwable badTraceException \u003d factory.error();\n        if (null !\u003d badTraceException) {\n          LOG.error(\"Error in trace\", badTraceException);\n          throw new IOException(\"Error in trace\", badTraceException);\n        }\n        // wait for pending tasks to be submitted\n        submitter.shutdown();\n        submitter.join(Long.MAX_VALUE);\n        // wait for running tasks to complete\n        monitor.shutdown();\n        monitor.join(Long.MAX_VALUE);\n\n        statistics.shutdown();\n        statistics.join(Long.MAX_VALUE);\n\n      }\n    } finally {\n      if (factory !\u003d null) {\n        summarizer.finalize(factory, traceIn, genbytes, userResolver, stats, \n                            conf);\n      }\n      IOUtils.cleanup(LOG, trace);\n    }\n    return 0;\n  }",
      "path": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/Gridmix.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/Gridmix.java",
        "newPath": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/Gridmix.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  int start(Configuration conf, String traceIn, Path ioPath, long genbytes,\n      UserResolver userResolver, boolean generate)\n      throws IOException, InterruptedException {\n    DataStatistics stats \u003d null;\n    InputStream trace \u003d null;\n    ioPath \u003d ioPath.makeQualified(ioPath.getFileSystem(conf));\n\n    try {\n      Path scratchDir \u003d new Path(ioPath, conf.get(GRIDMIX_OUT_DIR, \"gridmix\"));\n\n      // add shutdown hook for SIGINT, etc.\n      Runtime.getRuntime().addShutdownHook(sdh);\n      CountDownLatch startFlag \u003d new CountDownLatch(1);\n      try {\n        // Create, start job submission threads\n        startThreads(conf, traceIn, ioPath, scratchDir, startFlag,\n                     userResolver);\n        \n        Path inputDir \u003d getGridmixInputDataPath(ioPath);\n        \n        // Write input data if specified\n        if (genbytes \u003e 0) {\n          writeInputData(genbytes, inputDir);\n        }\n        \n        // publish the data statistics\n        stats \u003d GenerateData.publishDataStatistics(inputDir, genbytes, conf);\n        \n        // scan input dir contents\n        submitter.refreshFilePool();\n\n        // set up the needed things for emulation of various loads\n        int exitCode \u003d setupEmulation(conf, traceIn, scratchDir, ioPath,\n                                      generate);\n        if (exitCode !\u003d 0) {\n          return exitCode;\n        }\n\n        // start the summarizer\n        summarizer.start(conf);\n        \n        factory.start();\n        statistics.start();\n      } catch (Throwable e) {\n        LOG.error(\"Startup failed\", e);\n        if (factory !\u003d null) factory.abort(); // abort pipeline\n      } finally {\n        // signal for factory to start; sets start time\n        startFlag.countDown();\n      }\n      if (factory !\u003d null) {\n        // wait for input exhaustion\n        factory.join(Long.MAX_VALUE);\n        final Throwable badTraceException \u003d factory.error();\n        if (null !\u003d badTraceException) {\n          LOG.error(\"Error in trace\", badTraceException);\n          throw new IOException(\"Error in trace\", badTraceException);\n        }\n        // wait for pending tasks to be submitted\n        submitter.shutdown();\n        submitter.join(Long.MAX_VALUE);\n        // wait for running tasks to complete\n        monitor.shutdown();\n        monitor.join(Long.MAX_VALUE);\n\n        statistics.shutdown();\n        statistics.join(Long.MAX_VALUE);\n\n      }\n    } finally {\n      if (factory !\u003d null) {\n        summarizer.finalize(factory, traceIn, genbytes, userResolver, stats, \n                            conf);\n      }\n      IOUtils.cleanup(LOG, trace);\n    }\n    return 0;\n  }",
      "path": "hadoop-mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/Gridmix.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/Gridmix.java",
        "newPath": "hadoop-mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/Gridmix.java"
      }
    },
    "787dcfb8cd6e1f30a2a508b052e9d31f314b2169": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2596. [Gridmix] Summarize Gridmix runs. (amarrk)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1144403 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/07/11 10:53 AM",
      "commitName": "787dcfb8cd6e1f30a2a508b052e9d31f314b2169",
      "commitAuthor": "Amar Kamat",
      "commitDateOld": "12/06/11 3:00 PM",
      "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 25.83,
      "commitsBetweenForRepo": 81,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,70 +1,78 @@\n   int start(Configuration conf, String traceIn, Path ioPath, long genbytes,\n       UserResolver userResolver, boolean generate)\n       throws IOException, InterruptedException {\n+    DataStatistics stats \u003d null;\n     InputStream trace \u003d null;\n     ioPath \u003d ioPath.makeQualified(ioPath.getFileSystem(conf));\n \n     try {\n       Path scratchDir \u003d new Path(ioPath, conf.get(GRIDMIX_OUT_DIR, \"gridmix\"));\n \n       // add shutdown hook for SIGINT, etc.\n       Runtime.getRuntime().addShutdownHook(sdh);\n       CountDownLatch startFlag \u003d new CountDownLatch(1);\n       try {\n         // Create, start job submission threads\n         startThreads(conf, traceIn, ioPath, scratchDir, startFlag,\n                      userResolver);\n         \n         Path inputDir \u003d getGridmixInputDataPath(ioPath);\n         \n         // Write input data if specified\n         if (genbytes \u003e 0) {\n           writeInputData(genbytes, inputDir);\n         }\n         \n         // publish the data statistics\n-        GenerateData.publishDataStatistics(inputDir, genbytes, conf);\n+        stats \u003d GenerateData.publishDataStatistics(inputDir, genbytes, conf);\n         \n         // scan input dir contents\n         submitter.refreshFilePool();\n \n         // set up the needed things for emulation of various loads\n         int exitCode \u003d setupEmulation(conf, traceIn, scratchDir, ioPath,\n                                       generate);\n         if (exitCode !\u003d 0) {\n           return exitCode;\n         }\n \n+        // start the summarizer\n+        summarizer.start(conf);\n+        \n         factory.start();\n         statistics.start();\n       } catch (Throwable e) {\n         LOG.error(\"Startup failed\", e);\n         if (factory !\u003d null) factory.abort(); // abort pipeline\n       } finally {\n         // signal for factory to start; sets start time\n         startFlag.countDown();\n       }\n       if (factory !\u003d null) {\n         // wait for input exhaustion\n         factory.join(Long.MAX_VALUE);\n         final Throwable badTraceException \u003d factory.error();\n         if (null !\u003d badTraceException) {\n           LOG.error(\"Error in trace\", badTraceException);\n           throw new IOException(\"Error in trace\", badTraceException);\n         }\n         // wait for pending tasks to be submitted\n         submitter.shutdown();\n         submitter.join(Long.MAX_VALUE);\n         // wait for running tasks to complete\n         monitor.shutdown();\n         monitor.join(Long.MAX_VALUE);\n \n         statistics.shutdown();\n         statistics.join(Long.MAX_VALUE);\n \n       }\n     } finally {\n+      if (factory !\u003d null) {\n+        summarizer.finalize(factory, traceIn, genbytes, userResolver, stats, \n+                            conf);\n+      }\n       IOUtils.cleanup(LOG, trace);\n     }\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  int start(Configuration conf, String traceIn, Path ioPath, long genbytes,\n      UserResolver userResolver, boolean generate)\n      throws IOException, InterruptedException {\n    DataStatistics stats \u003d null;\n    InputStream trace \u003d null;\n    ioPath \u003d ioPath.makeQualified(ioPath.getFileSystem(conf));\n\n    try {\n      Path scratchDir \u003d new Path(ioPath, conf.get(GRIDMIX_OUT_DIR, \"gridmix\"));\n\n      // add shutdown hook for SIGINT, etc.\n      Runtime.getRuntime().addShutdownHook(sdh);\n      CountDownLatch startFlag \u003d new CountDownLatch(1);\n      try {\n        // Create, start job submission threads\n        startThreads(conf, traceIn, ioPath, scratchDir, startFlag,\n                     userResolver);\n        \n        Path inputDir \u003d getGridmixInputDataPath(ioPath);\n        \n        // Write input data if specified\n        if (genbytes \u003e 0) {\n          writeInputData(genbytes, inputDir);\n        }\n        \n        // publish the data statistics\n        stats \u003d GenerateData.publishDataStatistics(inputDir, genbytes, conf);\n        \n        // scan input dir contents\n        submitter.refreshFilePool();\n\n        // set up the needed things for emulation of various loads\n        int exitCode \u003d setupEmulation(conf, traceIn, scratchDir, ioPath,\n                                      generate);\n        if (exitCode !\u003d 0) {\n          return exitCode;\n        }\n\n        // start the summarizer\n        summarizer.start(conf);\n        \n        factory.start();\n        statistics.start();\n      } catch (Throwable e) {\n        LOG.error(\"Startup failed\", e);\n        if (factory !\u003d null) factory.abort(); // abort pipeline\n      } finally {\n        // signal for factory to start; sets start time\n        startFlag.countDown();\n      }\n      if (factory !\u003d null) {\n        // wait for input exhaustion\n        factory.join(Long.MAX_VALUE);\n        final Throwable badTraceException \u003d factory.error();\n        if (null !\u003d badTraceException) {\n          LOG.error(\"Error in trace\", badTraceException);\n          throw new IOException(\"Error in trace\", badTraceException);\n        }\n        // wait for pending tasks to be submitted\n        submitter.shutdown();\n        submitter.join(Long.MAX_VALUE);\n        // wait for running tasks to complete\n        monitor.shutdown();\n        monitor.join(Long.MAX_VALUE);\n\n        statistics.shutdown();\n        statistics.join(Long.MAX_VALUE);\n\n      }\n    } finally {\n      if (factory !\u003d null) {\n        summarizer.finalize(factory, traceIn, genbytes, userResolver, stats, \n                            conf);\n      }\n      IOUtils.cleanup(LOG, trace);\n    }\n    return 0;\n  }",
      "path": "mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/Gridmix.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,70 @@\n+  int start(Configuration conf, String traceIn, Path ioPath, long genbytes,\n+      UserResolver userResolver, boolean generate)\n+      throws IOException, InterruptedException {\n+    InputStream trace \u003d null;\n+    ioPath \u003d ioPath.makeQualified(ioPath.getFileSystem(conf));\n+\n+    try {\n+      Path scratchDir \u003d new Path(ioPath, conf.get(GRIDMIX_OUT_DIR, \"gridmix\"));\n+\n+      // add shutdown hook for SIGINT, etc.\n+      Runtime.getRuntime().addShutdownHook(sdh);\n+      CountDownLatch startFlag \u003d new CountDownLatch(1);\n+      try {\n+        // Create, start job submission threads\n+        startThreads(conf, traceIn, ioPath, scratchDir, startFlag,\n+                     userResolver);\n+        \n+        Path inputDir \u003d getGridmixInputDataPath(ioPath);\n+        \n+        // Write input data if specified\n+        if (genbytes \u003e 0) {\n+          writeInputData(genbytes, inputDir);\n+        }\n+        \n+        // publish the data statistics\n+        GenerateData.publishDataStatistics(inputDir, genbytes, conf);\n+        \n+        // scan input dir contents\n+        submitter.refreshFilePool();\n+\n+        // set up the needed things for emulation of various loads\n+        int exitCode \u003d setupEmulation(conf, traceIn, scratchDir, ioPath,\n+                                      generate);\n+        if (exitCode !\u003d 0) {\n+          return exitCode;\n+        }\n+\n+        factory.start();\n+        statistics.start();\n+      } catch (Throwable e) {\n+        LOG.error(\"Startup failed\", e);\n+        if (factory !\u003d null) factory.abort(); // abort pipeline\n+      } finally {\n+        // signal for factory to start; sets start time\n+        startFlag.countDown();\n+      }\n+      if (factory !\u003d null) {\n+        // wait for input exhaustion\n+        factory.join(Long.MAX_VALUE);\n+        final Throwable badTraceException \u003d factory.error();\n+        if (null !\u003d badTraceException) {\n+          LOG.error(\"Error in trace\", badTraceException);\n+          throw new IOException(\"Error in trace\", badTraceException);\n+        }\n+        // wait for pending tasks to be submitted\n+        submitter.shutdown();\n+        submitter.join(Long.MAX_VALUE);\n+        // wait for running tasks to complete\n+        monitor.shutdown();\n+        monitor.join(Long.MAX_VALUE);\n+\n+        statistics.shutdown();\n+        statistics.join(Long.MAX_VALUE);\n+\n+      }\n+    } finally {\n+      IOUtils.cleanup(LOG, trace);\n+    }\n+    return 0;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  int start(Configuration conf, String traceIn, Path ioPath, long genbytes,\n      UserResolver userResolver, boolean generate)\n      throws IOException, InterruptedException {\n    InputStream trace \u003d null;\n    ioPath \u003d ioPath.makeQualified(ioPath.getFileSystem(conf));\n\n    try {\n      Path scratchDir \u003d new Path(ioPath, conf.get(GRIDMIX_OUT_DIR, \"gridmix\"));\n\n      // add shutdown hook for SIGINT, etc.\n      Runtime.getRuntime().addShutdownHook(sdh);\n      CountDownLatch startFlag \u003d new CountDownLatch(1);\n      try {\n        // Create, start job submission threads\n        startThreads(conf, traceIn, ioPath, scratchDir, startFlag,\n                     userResolver);\n        \n        Path inputDir \u003d getGridmixInputDataPath(ioPath);\n        \n        // Write input data if specified\n        if (genbytes \u003e 0) {\n          writeInputData(genbytes, inputDir);\n        }\n        \n        // publish the data statistics\n        GenerateData.publishDataStatistics(inputDir, genbytes, conf);\n        \n        // scan input dir contents\n        submitter.refreshFilePool();\n\n        // set up the needed things for emulation of various loads\n        int exitCode \u003d setupEmulation(conf, traceIn, scratchDir, ioPath,\n                                      generate);\n        if (exitCode !\u003d 0) {\n          return exitCode;\n        }\n\n        factory.start();\n        statistics.start();\n      } catch (Throwable e) {\n        LOG.error(\"Startup failed\", e);\n        if (factory !\u003d null) factory.abort(); // abort pipeline\n      } finally {\n        // signal for factory to start; sets start time\n        startFlag.countDown();\n      }\n      if (factory !\u003d null) {\n        // wait for input exhaustion\n        factory.join(Long.MAX_VALUE);\n        final Throwable badTraceException \u003d factory.error();\n        if (null !\u003d badTraceException) {\n          LOG.error(\"Error in trace\", badTraceException);\n          throw new IOException(\"Error in trace\", badTraceException);\n        }\n        // wait for pending tasks to be submitted\n        submitter.shutdown();\n        submitter.join(Long.MAX_VALUE);\n        // wait for running tasks to complete\n        monitor.shutdown();\n        monitor.join(Long.MAX_VALUE);\n\n        statistics.shutdown();\n        statistics.join(Long.MAX_VALUE);\n\n      }\n    } finally {\n      IOUtils.cleanup(LOG, trace);\n    }\n    return 0;\n  }",
      "path": "mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/Gridmix.java"
    }
  }
}