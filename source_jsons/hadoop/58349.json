{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StateMachineFactory.java",
  "functionName": "doTransition",
  "functionId": "doTransition___operand-OPERAND__oldState-STATE__eventType-EVENTTYPE__event-EVENT",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/StateMachineFactory.java",
  "functionStartLine": 290,
  "functionEndLine": 306,
  "numCommitsSeen": 9,
  "timeTaken": 7547,
  "changeHistory": [
    "19295b36d90e26616accee73b1f7743aab5df692",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "19295b36d90e26616accee73b1f7743aab5df692": "Ymultichange(Yexceptionschange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "19295b36d90e26616accee73b1f7743aab5df692": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-3381. Fix typo InvalidStateTransitonException. Contributed by Brahma Reddy Battula.\n",
      "commitDate": "13/07/15 1:52 AM",
      "commitName": "19295b36d90e26616accee73b1f7743aab5df692",
      "commitAuthor": "Akira Ajisaka",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-3381. Fix typo InvalidStateTransitonException. Contributed by Brahma Reddy Battula.\n",
          "commitDate": "13/07/15 1:52 AM",
          "commitName": "19295b36d90e26616accee73b1f7743aab5df692",
          "commitAuthor": "Akira Ajisaka",
          "commitDateOld": "16/06/13 11:51 PM",
          "commitNameOld": "4662b8b44313dc2a7ddcd9fcb0c8423b93345ce9",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 756.08,
          "commitsBetweenForRepo": 5743,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n   private STATE doTransition\n            (OPERAND operand, STATE oldState, EVENTTYPE eventType, EVENT event)\n-      throws InvalidStateTransitonException {\n+      throws InvalidStateTransitionException {\n     // We can assume that stateMachineTable is non-null because we call\n     //  maybeMakeStateMachineTable() when we build an InnerStateMachine ,\n     //  and this code only gets called from inside a working InnerStateMachine .\n     Map\u003cEVENTTYPE, Transition\u003cOPERAND, STATE, EVENTTYPE, EVENT\u003e\u003e transitionMap\n       \u003d stateMachineTable.get(oldState);\n     if (transitionMap !\u003d null) {\n       Transition\u003cOPERAND, STATE, EVENTTYPE, EVENT\u003e transition\n           \u003d transitionMap.get(eventType);\n       if (transition !\u003d null) {\n         return transition.doTransition(operand, oldState, event, eventType);\n       }\n     }\n-    throw new InvalidStateTransitonException(oldState, eventType);\n+    throw new InvalidStateTransitionException(oldState, eventType);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private STATE doTransition\n           (OPERAND operand, STATE oldState, EVENTTYPE eventType, EVENT event)\n      throws InvalidStateTransitionException {\n    // We can assume that stateMachineTable is non-null because we call\n    //  maybeMakeStateMachineTable() when we build an InnerStateMachine ,\n    //  and this code only gets called from inside a working InnerStateMachine .\n    Map\u003cEVENTTYPE, Transition\u003cOPERAND, STATE, EVENTTYPE, EVENT\u003e\u003e transitionMap\n      \u003d stateMachineTable.get(oldState);\n    if (transitionMap !\u003d null) {\n      Transition\u003cOPERAND, STATE, EVENTTYPE, EVENT\u003e transition\n          \u003d transitionMap.get(eventType);\n      if (transition !\u003d null) {\n        return transition.doTransition(operand, oldState, event, eventType);\n      }\n    }\n    throw new InvalidStateTransitionException(oldState, eventType);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/StateMachineFactory.java",
          "extendedDetails": {
            "oldValue": "[InvalidStateTransitonException]",
            "newValue": "[InvalidStateTransitionException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3381. Fix typo InvalidStateTransitonException. Contributed by Brahma Reddy Battula.\n",
          "commitDate": "13/07/15 1:52 AM",
          "commitName": "19295b36d90e26616accee73b1f7743aab5df692",
          "commitAuthor": "Akira Ajisaka",
          "commitDateOld": "16/06/13 11:51 PM",
          "commitNameOld": "4662b8b44313dc2a7ddcd9fcb0c8423b93345ce9",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 756.08,
          "commitsBetweenForRepo": 5743,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n   private STATE doTransition\n            (OPERAND operand, STATE oldState, EVENTTYPE eventType, EVENT event)\n-      throws InvalidStateTransitonException {\n+      throws InvalidStateTransitionException {\n     // We can assume that stateMachineTable is non-null because we call\n     //  maybeMakeStateMachineTable() when we build an InnerStateMachine ,\n     //  and this code only gets called from inside a working InnerStateMachine .\n     Map\u003cEVENTTYPE, Transition\u003cOPERAND, STATE, EVENTTYPE, EVENT\u003e\u003e transitionMap\n       \u003d stateMachineTable.get(oldState);\n     if (transitionMap !\u003d null) {\n       Transition\u003cOPERAND, STATE, EVENTTYPE, EVENT\u003e transition\n           \u003d transitionMap.get(eventType);\n       if (transition !\u003d null) {\n         return transition.doTransition(operand, oldState, event, eventType);\n       }\n     }\n-    throw new InvalidStateTransitonException(oldState, eventType);\n+    throw new InvalidStateTransitionException(oldState, eventType);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private STATE doTransition\n           (OPERAND operand, STATE oldState, EVENTTYPE eventType, EVENT event)\n      throws InvalidStateTransitionException {\n    // We can assume that stateMachineTable is non-null because we call\n    //  maybeMakeStateMachineTable() when we build an InnerStateMachine ,\n    //  and this code only gets called from inside a working InnerStateMachine .\n    Map\u003cEVENTTYPE, Transition\u003cOPERAND, STATE, EVENTTYPE, EVENT\u003e\u003e transitionMap\n      \u003d stateMachineTable.get(oldState);\n    if (transitionMap !\u003d null) {\n      Transition\u003cOPERAND, STATE, EVENTTYPE, EVENT\u003e transition\n          \u003d transitionMap.get(eventType);\n      if (transition !\u003d null) {\n        return transition.doTransition(operand, oldState, event, eventType);\n      }\n    }\n    throw new InvalidStateTransitionException(oldState, eventType);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/StateMachineFactory.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private STATE doTransition\n           (OPERAND operand, STATE oldState, EVENTTYPE eventType, EVENT event)\n      throws InvalidStateTransitonException {\n    // We can assume that stateMachineTable is non-null because we call\n    //  maybeMakeStateMachineTable() when we build an InnerStateMachine ,\n    //  and this code only gets called from inside a working InnerStateMachine .\n    Map\u003cEVENTTYPE, Transition\u003cOPERAND, STATE, EVENTTYPE, EVENT\u003e\u003e transitionMap\n      \u003d stateMachineTable.get(oldState);\n    if (transitionMap !\u003d null) {\n      Transition\u003cOPERAND, STATE, EVENTTYPE, EVENT\u003e transition\n          \u003d transitionMap.get(eventType);\n      if (transition !\u003d null) {\n        return transition.doTransition(operand, oldState, event, eventType);\n      }\n    }\n    throw new InvalidStateTransitonException(oldState, eventType);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/StateMachineFactory.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/StateMachineFactory.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/StateMachineFactory.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private STATE doTransition\n           (OPERAND operand, STATE oldState, EVENTTYPE eventType, EVENT event)\n      throws InvalidStateTransitonException {\n    // We can assume that stateMachineTable is non-null because we call\n    //  maybeMakeStateMachineTable() when we build an InnerStateMachine ,\n    //  and this code only gets called from inside a working InnerStateMachine .\n    Map\u003cEVENTTYPE, Transition\u003cOPERAND, STATE, EVENTTYPE, EVENT\u003e\u003e transitionMap\n      \u003d stateMachineTable.get(oldState);\n    if (transitionMap !\u003d null) {\n      Transition\u003cOPERAND, STATE, EVENTTYPE, EVENT\u003e transition\n          \u003d transitionMap.get(eventType);\n      if (transition !\u003d null) {\n        return transition.doTransition(operand, oldState, event, eventType);\n      }\n    }\n    throw new InvalidStateTransitonException(oldState, eventType);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/StateMachineFactory.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/StateMachineFactory.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/StateMachineFactory.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,17 @@\n+  private STATE doTransition\n+           (OPERAND operand, STATE oldState, EVENTTYPE eventType, EVENT event)\n+      throws InvalidStateTransitonException {\n+    // We can assume that stateMachineTable is non-null because we call\n+    //  maybeMakeStateMachineTable() when we build an InnerStateMachine ,\n+    //  and this code only gets called from inside a working InnerStateMachine .\n+    Map\u003cEVENTTYPE, Transition\u003cOPERAND, STATE, EVENTTYPE, EVENT\u003e\u003e transitionMap\n+      \u003d stateMachineTable.get(oldState);\n+    if (transitionMap !\u003d null) {\n+      Transition\u003cOPERAND, STATE, EVENTTYPE, EVENT\u003e transition\n+          \u003d transitionMap.get(eventType);\n+      if (transition !\u003d null) {\n+        return transition.doTransition(operand, oldState, event, eventType);\n+      }\n+    }\n+    throw new InvalidStateTransitonException(oldState, eventType);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private STATE doTransition\n           (OPERAND operand, STATE oldState, EVENTTYPE eventType, EVENT event)\n      throws InvalidStateTransitonException {\n    // We can assume that stateMachineTable is non-null because we call\n    //  maybeMakeStateMachineTable() when we build an InnerStateMachine ,\n    //  and this code only gets called from inside a working InnerStateMachine .\n    Map\u003cEVENTTYPE, Transition\u003cOPERAND, STATE, EVENTTYPE, EVENT\u003e\u003e transitionMap\n      \u003d stateMachineTable.get(oldState);\n    if (transitionMap !\u003d null) {\n      Transition\u003cOPERAND, STATE, EVENTTYPE, EVENT\u003e transition\n          \u003d transitionMap.get(eventType);\n      if (transition !\u003d null) {\n        return transition.doTransition(operand, oldState, event, eventType);\n      }\n    }\n    throw new InvalidStateTransitonException(oldState, eventType);\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/StateMachineFactory.java"
    }
  }
}