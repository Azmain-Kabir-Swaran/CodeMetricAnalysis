{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ECBlockGroupStats.java",
  "functionName": "merge",
  "functionId": "merge___stats-Collection__ECBlockGroupStats__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/ECBlockGroupStats.java",
  "functionStartLine": 148,
  "functionEndLine": 176,
  "numCommitsSeen": 4,
  "timeTaken": 1178,
  "changeHistory": [
    "50aee18a84fcbca38be4272cfa0d33aadafe076d"
  ],
  "changeHistoryShort": {
    "50aee18a84fcbca38be4272cfa0d33aadafe076d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "50aee18a84fcbca38be4272cfa0d33aadafe076d": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14268. RBF: Fix the location of the DNs in getDatanodeReport(). Contributed by Inigo Goiri.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "50aee18a84fcbca38be4272cfa0d33aadafe076d",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "diff": "@@ -0,0 +1,29 @@\n+  public static ECBlockGroupStats merge(Collection\u003cECBlockGroupStats\u003e stats) {\n+    long lowRedundancyBlockGroups \u003d 0;\n+    long corruptBlockGroups \u003d 0;\n+    long missingBlockGroups \u003d 0;\n+    long bytesInFutureBlockGroups \u003d 0;\n+    long pendingDeletionBlocks \u003d 0;\n+    long highestPriorityLowRedundancyBlocks \u003d 0;\n+    boolean hasHighestPriorityLowRedundancyBlocks \u003d false;\n+\n+    for (ECBlockGroupStats stat : stats) {\n+      lowRedundancyBlockGroups +\u003d stat.getLowRedundancyBlockGroups();\n+      corruptBlockGroups +\u003d stat.getCorruptBlockGroups();\n+      missingBlockGroups +\u003d stat.getMissingBlockGroups();\n+      bytesInFutureBlockGroups +\u003d stat.getBytesInFutureBlockGroups();\n+      pendingDeletionBlocks +\u003d stat.getPendingDeletionBlocks();\n+      if (stat.hasHighestPriorityLowRedundancyBlocks()) {\n+        hasHighestPriorityLowRedundancyBlocks \u003d true;\n+        highestPriorityLowRedundancyBlocks +\u003d\n+            stat.getHighestPriorityLowRedundancyBlocks();\n+      }\n+    }\n+    if (hasHighestPriorityLowRedundancyBlocks) {\n+      return new ECBlockGroupStats(lowRedundancyBlockGroups, corruptBlockGroups,\n+          missingBlockGroups, bytesInFutureBlockGroups, pendingDeletionBlocks,\n+          highestPriorityLowRedundancyBlocks);\n+    }\n+    return new ECBlockGroupStats(lowRedundancyBlockGroups, corruptBlockGroups,\n+        missingBlockGroups, bytesInFutureBlockGroups, pendingDeletionBlocks);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static ECBlockGroupStats merge(Collection\u003cECBlockGroupStats\u003e stats) {\n    long lowRedundancyBlockGroups \u003d 0;\n    long corruptBlockGroups \u003d 0;\n    long missingBlockGroups \u003d 0;\n    long bytesInFutureBlockGroups \u003d 0;\n    long pendingDeletionBlocks \u003d 0;\n    long highestPriorityLowRedundancyBlocks \u003d 0;\n    boolean hasHighestPriorityLowRedundancyBlocks \u003d false;\n\n    for (ECBlockGroupStats stat : stats) {\n      lowRedundancyBlockGroups +\u003d stat.getLowRedundancyBlockGroups();\n      corruptBlockGroups +\u003d stat.getCorruptBlockGroups();\n      missingBlockGroups +\u003d stat.getMissingBlockGroups();\n      bytesInFutureBlockGroups +\u003d stat.getBytesInFutureBlockGroups();\n      pendingDeletionBlocks +\u003d stat.getPendingDeletionBlocks();\n      if (stat.hasHighestPriorityLowRedundancyBlocks()) {\n        hasHighestPriorityLowRedundancyBlocks \u003d true;\n        highestPriorityLowRedundancyBlocks +\u003d\n            stat.getHighestPriorityLowRedundancyBlocks();\n      }\n    }\n    if (hasHighestPriorityLowRedundancyBlocks) {\n      return new ECBlockGroupStats(lowRedundancyBlockGroups, corruptBlockGroups,\n          missingBlockGroups, bytesInFutureBlockGroups, pendingDeletionBlocks,\n          highestPriorityLowRedundancyBlocks);\n    }\n    return new ECBlockGroupStats(lowRedundancyBlockGroups, corruptBlockGroups,\n        missingBlockGroups, bytesInFutureBlockGroups, pendingDeletionBlocks);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/ECBlockGroupStats.java"
    }
  }
}