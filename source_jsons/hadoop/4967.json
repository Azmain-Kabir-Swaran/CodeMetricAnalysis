{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SnapshotFSImageFormat.java",
  "functionName": "loadDeletedList",
  "functionId": "loadDeletedList___parent-INodeDirectory__createdList-List__INode____in-DataInput__loader-FSImageFormat.Loader",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
  "functionStartLine": 192,
  "functionEndLine": 209,
  "numCommitsSeen": 67,
  "timeTaken": 2768,
  "changeHistory": [
    "44a6560b5da3f79d2299579a36e7a2a60a91f823",
    "a6250a4943d90c10bcfe9a2a46d6558c6d1a2d50",
    "01f27f5c23fb6286c0e97156d1f09f5f5350aae5",
    "1096917649fd951be633e5619518764f23cca645",
    "14eaab677821a5d2686b293c4806305e0a331a1e",
    "d9e2514d21c2ae356ee7fe8d4a857748b5defa4c",
    "02e6b72ae148fc8c2ba02ef624536b9e48997b31",
    "afe77ce53d3cf203690aa419e377f26cbd45a96e",
    "5988208b7d2fa3c0378f17fe67ada99a25342829",
    "fe3584aadfc7839abcd03239e4d07afd12b8b90f"
  ],
  "changeHistoryShort": {
    "44a6560b5da3f79d2299579a36e7a2a60a91f823": "Yparameterchange",
    "a6250a4943d90c10bcfe9a2a46d6558c6d1a2d50": "Ybodychange",
    "01f27f5c23fb6286c0e97156d1f09f5f5350aae5": "Ybodychange",
    "1096917649fd951be633e5619518764f23cca645": "Yparameterchange",
    "14eaab677821a5d2686b293c4806305e0a331a1e": "Ybodychange",
    "d9e2514d21c2ae356ee7fe8d4a857748b5defa4c": "Ybodychange",
    "02e6b72ae148fc8c2ba02ef624536b9e48997b31": "Ybodychange",
    "afe77ce53d3cf203690aa419e377f26cbd45a96e": "Ybodychange",
    "5988208b7d2fa3c0378f17fe67ada99a25342829": "Ybodychange",
    "fe3584aadfc7839abcd03239e4d07afd12b8b90f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "44a6560b5da3f79d2299579a36e7a2a60a91f823": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-5632. Flatten INodeDirectory hierarchy: Replace INodeDirectoryWithSnapshot with DirectoryWithSnapshotFeature.  Contributed by jing9 \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550917 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/12/13 2:13 AM",
      "commitName": "44a6560b5da3f79d2299579a36e7a2a60a91f823",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "06/12/13 10:17 PM",
      "commitNameOld": "4c87a27ad851ffaa3cc3e2074a9ef7073b5a164a",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 7.16,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n-  private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n+  private static List\u003cINode\u003e loadDeletedList(INodeDirectory parent,\n       List\u003cINode\u003e createdList, DataInput in, FSImageFormat.Loader loader)\n       throws IOException {\n     int deletedSize \u003d in.readInt();\n     List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n     for (int i \u003d 0; i \u003c deletedSize; i++) {\n       final INode deleted \u003d loader.loadINodeWithLocalName(true, in, true);\n       deletedList.add(deleted);\n       // set parent: the parent field of an INode in the deleted list is not \n       // useful, but set the parent here to be consistent with the original \n       // fsdir tree.\n       deleted.setParent(parent);\n       if (deleted.isFile()) {\n         loader.updateBlocksMap(deleted.asFile());\n       }\n     }\n     return deletedList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cINode\u003e loadDeletedList(INodeDirectory parent,\n      List\u003cINode\u003e createdList, DataInput in, FSImageFormat.Loader loader)\n      throws IOException {\n    int deletedSize \u003d in.readInt();\n    List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n    for (int i \u003d 0; i \u003c deletedSize; i++) {\n      final INode deleted \u003d loader.loadINodeWithLocalName(true, in, true);\n      deletedList.add(deleted);\n      // set parent: the parent field of an INode in the deleted list is not \n      // useful, but set the parent here to be consistent with the original \n      // fsdir tree.\n      deleted.setParent(parent);\n      if (deleted.isFile()) {\n        loader.updateBlocksMap(deleted.asFile());\n      }\n    }\n    return deletedList;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
      "extendedDetails": {
        "oldValue": "[parent-INodeDirectoryWithSnapshot, createdList-List\u003cINode\u003e, in-DataInput, loader-FSImageFormat.Loader]",
        "newValue": "[parent-INodeDirectory, createdList-List\u003cINode\u003e, in-DataInput, loader-FSImageFormat.Loader]"
      }
    },
    "a6250a4943d90c10bcfe9a2a46d6558c6d1a2d50": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5427. Not able to read deleted files from snapshot directly under snapshottable dir after checkpoint and NN restart. Contributed by Vinay.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1538875 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/11/13 10:38 PM",
      "commitName": "a6250a4943d90c10bcfe9a2a46d6558c6d1a2d50",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "19/06/13 10:10 PM",
      "commitNameOld": "c02953dbc344b39e0eb0d13fe2d899cdcdc46380",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 138.06,
      "commitsBetweenForRepo": 822,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,18 @@\n   private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n       List\u003cINode\u003e createdList, DataInput in, FSImageFormat.Loader loader)\n       throws IOException {\n     int deletedSize \u003d in.readInt();\n     List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n     for (int i \u003d 0; i \u003c deletedSize; i++) {\n       final INode deleted \u003d loader.loadINodeWithLocalName(true, in, true);\n       deletedList.add(deleted);\n       // set parent: the parent field of an INode in the deleted list is not \n       // useful, but set the parent here to be consistent with the original \n       // fsdir tree.\n       deleted.setParent(parent);\n+      if (deleted.isFile()) {\n+        loader.updateBlocksMap(deleted.asFile());\n+      }\n     }\n     return deletedList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n      List\u003cINode\u003e createdList, DataInput in, FSImageFormat.Loader loader)\n      throws IOException {\n    int deletedSize \u003d in.readInt();\n    List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n    for (int i \u003d 0; i \u003c deletedSize; i++) {\n      final INode deleted \u003d loader.loadINodeWithLocalName(true, in, true);\n      deletedList.add(deleted);\n      // set parent: the parent field of an INode in the deleted list is not \n      // useful, but set the parent here to be consistent with the original \n      // fsdir tree.\n      deleted.setParent(parent);\n      if (deleted.isFile()) {\n        loader.updateBlocksMap(deleted.asFile());\n      }\n    }\n    return deletedList;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
      "extendedDetails": {}
    },
    "01f27f5c23fb6286c0e97156d1f09f5f5350aae5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4857. Snapshot.Root and AbstractINodeDiff#snapshotINode should not be put into INodeMap when loading FSImage. Contributed by Jing Zhao\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1487655 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/05/13 3:22 PM",
      "commitName": "01f27f5c23fb6286c0e97156d1f09f5f5350aae5",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "24/04/13 1:31 PM",
      "commitNameOld": "0fa5cad0b27780c27a284c23101b1099d4886506",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 35.08,
      "commitsBetweenForRepo": 196,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n       List\u003cINode\u003e createdList, DataInput in, FSImageFormat.Loader loader)\n       throws IOException {\n     int deletedSize \u003d in.readInt();\n     List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n     for (int i \u003d 0; i \u003c deletedSize; i++) {\n-      final INode deleted \u003d loader.loadINodeWithLocalName(true, in);\n+      final INode deleted \u003d loader.loadINodeWithLocalName(true, in, true);\n       deletedList.add(deleted);\n       // set parent: the parent field of an INode in the deleted list is not \n       // useful, but set the parent here to be consistent with the original \n       // fsdir tree.\n       deleted.setParent(parent);\n     }\n     return deletedList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n      List\u003cINode\u003e createdList, DataInput in, FSImageFormat.Loader loader)\n      throws IOException {\n    int deletedSize \u003d in.readInt();\n    List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n    for (int i \u003d 0; i \u003c deletedSize; i++) {\n      final INode deleted \u003d loader.loadINodeWithLocalName(true, in, true);\n      deletedList.add(deleted);\n      // set parent: the parent field of an INode in the deleted list is not \n      // useful, but set the parent here to be consistent with the original \n      // fsdir tree.\n      deleted.setParent(parent);\n    }\n    return deletedList;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
      "extendedDetails": {}
    },
    "1096917649fd951be633e5619518764f23cca645": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-4611. Update FSImage for INodeReference.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1463332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/04/13 4:24 PM",
      "commitName": "1096917649fd951be633e5619518764f23cca645",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "18/03/13 11:27 PM",
      "commitNameOld": "9701555899315c94584b24d8717c1d7540a4a491",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 13.71,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n-      List\u003cINode\u003e createdList, DataInputStream in, FSImageFormat.Loader loader)\n+      List\u003cINode\u003e createdList, DataInput in, FSImageFormat.Loader loader)\n       throws IOException {\n     int deletedSize \u003d in.readInt();\n     List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n     for (int i \u003d 0; i \u003c deletedSize; i++) {\n       final INode deleted \u003d loader.loadINodeWithLocalName(true, in);\n       deletedList.add(deleted);\n       // set parent: the parent field of an INode in the deleted list is not \n       // useful, but set the parent here to be consistent with the original \n       // fsdir tree.\n       deleted.setParent(parent);\n     }\n     return deletedList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n      List\u003cINode\u003e createdList, DataInput in, FSImageFormat.Loader loader)\n      throws IOException {\n    int deletedSize \u003d in.readInt();\n    List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n    for (int i \u003d 0; i \u003c deletedSize; i++) {\n      final INode deleted \u003d loader.loadINodeWithLocalName(true, in);\n      deletedList.add(deleted);\n      // set parent: the parent field of an INode in the deleted list is not \n      // useful, but set the parent here to be consistent with the original \n      // fsdir tree.\n      deleted.setParent(parent);\n    }\n    return deletedList;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
      "extendedDetails": {
        "oldValue": "[parent-INodeDirectoryWithSnapshot, createdList-List\u003cINode\u003e, in-DataInputStream, loader-FSImageFormat.Loader]",
        "newValue": "[parent-INodeDirectoryWithSnapshot, createdList-List\u003cINode\u003e, in-DataInput, loader-FSImageFormat.Loader]"
      }
    },
    "14eaab677821a5d2686b293c4806305e0a331a1e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4431. Support snapshot in OfflineImageViewer.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1446993 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/02/13 6:58 PM",
      "commitName": "14eaab677821a5d2686b293c4806305e0a331a1e",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "14/02/13 3:07 PM",
      "commitNameOld": "d9e2514d21c2ae356ee7fe8d4a857748b5defa4c",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 2.16,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,15 @@\n   private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n       List\u003cINode\u003e createdList, DataInputStream in, FSImageFormat.Loader loader)\n       throws IOException {\n     int deletedSize \u003d in.readInt();\n     List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n     for (int i \u003d 0; i \u003c deletedSize; i++) {\n       final INode deleted \u003d loader.loadINodeWithLocalName(true, in);\n       deletedList.add(deleted);\n       // set parent: the parent field of an INode in the deleted list is not \n       // useful, but set the parent here to be consistent with the original \n       // fsdir tree.\n       deleted.setParent(parent);\n-      if (deleted instanceof INodeFile\n-          \u0026\u0026 ((INodeFile) deleted).getBlocks() \u003d\u003d null) {\n-        // if deleted is an INodeFile, and its blocks is null, then deleted\n-        // must be an INodeFileWithLink, and we need to rebuild its next link\n-        int c \u003d Collections.binarySearch(createdList, deleted.getLocalNameBytes());\n-        if (c \u003c 0) {\n-          throw new IOException(\n-              \"Cannot find the INode linked with the INode \"\n-                  + deleted.getLocalName()\n-                  + \" in deleted list while loading FSImage.\");\n-        }\n-        // deleted must be an FileWithSnapshot (INodeFileSnapshot or \n-        // INodeFileUnderConstructionSnapshot)\n-        INodeFile cNode \u003d (INodeFile) createdList.get(c);\n-        ((INodeFile) deleted).setBlocks(cNode.getBlocks());\n-      }\n     }\n     return deletedList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n      List\u003cINode\u003e createdList, DataInputStream in, FSImageFormat.Loader loader)\n      throws IOException {\n    int deletedSize \u003d in.readInt();\n    List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n    for (int i \u003d 0; i \u003c deletedSize; i++) {\n      final INode deleted \u003d loader.loadINodeWithLocalName(true, in);\n      deletedList.add(deleted);\n      // set parent: the parent field of an INode in the deleted list is not \n      // useful, but set the parent here to be consistent with the original \n      // fsdir tree.\n      deleted.setParent(parent);\n    }\n    return deletedList;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
      "extendedDetails": {}
    },
    "d9e2514d21c2ae356ee7fe8d4a857748b5defa4c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4487. Fix snapshot diff report for HDFS-4446.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1446385 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/02/13 3:07 PM",
      "commitName": "d9e2514d21c2ae356ee7fe8d4a857748b5defa4c",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "13/02/13 4:43 PM",
      "commitNameOld": "02e6b72ae148fc8c2ba02ef624536b9e48997b31",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.93,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n       List\u003cINode\u003e createdList, DataInputStream in, FSImageFormat.Loader loader)\n       throws IOException {\n     int deletedSize \u003d in.readInt();\n     List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n     for (int i \u003d 0; i \u003c deletedSize; i++) {\n-      final INode deleted \u003d loader.loadINodeWithLocalName(false, in);\n+      final INode deleted \u003d loader.loadINodeWithLocalName(true, in);\n       deletedList.add(deleted);\n       // set parent: the parent field of an INode in the deleted list is not \n       // useful, but set the parent here to be consistent with the original \n       // fsdir tree.\n       deleted.setParent(parent);\n       if (deleted instanceof INodeFile\n           \u0026\u0026 ((INodeFile) deleted).getBlocks() \u003d\u003d null) {\n         // if deleted is an INodeFile, and its blocks is null, then deleted\n         // must be an INodeFileWithLink, and we need to rebuild its next link\n         int c \u003d Collections.binarySearch(createdList, deleted.getLocalNameBytes());\n         if (c \u003c 0) {\n           throw new IOException(\n               \"Cannot find the INode linked with the INode \"\n                   + deleted.getLocalName()\n                   + \" in deleted list while loading FSImage.\");\n         }\n         // deleted must be an FileWithSnapshot (INodeFileSnapshot or \n         // INodeFileUnderConstructionSnapshot)\n         INodeFile cNode \u003d (INodeFile) createdList.get(c);\n         ((INodeFile) deleted).setBlocks(cNode.getBlocks());\n       }\n     }\n     return deletedList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n      List\u003cINode\u003e createdList, DataInputStream in, FSImageFormat.Loader loader)\n      throws IOException {\n    int deletedSize \u003d in.readInt();\n    List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n    for (int i \u003d 0; i \u003c deletedSize; i++) {\n      final INode deleted \u003d loader.loadINodeWithLocalName(true, in);\n      deletedList.add(deleted);\n      // set parent: the parent field of an INode in the deleted list is not \n      // useful, but set the parent here to be consistent with the original \n      // fsdir tree.\n      deleted.setParent(parent);\n      if (deleted instanceof INodeFile\n          \u0026\u0026 ((INodeFile) deleted).getBlocks() \u003d\u003d null) {\n        // if deleted is an INodeFile, and its blocks is null, then deleted\n        // must be an INodeFileWithLink, and we need to rebuild its next link\n        int c \u003d Collections.binarySearch(createdList, deleted.getLocalNameBytes());\n        if (c \u003c 0) {\n          throw new IOException(\n              \"Cannot find the INode linked with the INode \"\n                  + deleted.getLocalName()\n                  + \" in deleted list while loading FSImage.\");\n        }\n        // deleted must be an FileWithSnapshot (INodeFileSnapshot or \n        // INodeFileUnderConstructionSnapshot)\n        INodeFile cNode \u003d (INodeFile) createdList.get(c);\n        ((INodeFile) deleted).setBlocks(cNode.getBlocks());\n      }\n    }\n    return deletedList;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
      "extendedDetails": {}
    },
    "02e6b72ae148fc8c2ba02ef624536b9e48997b31": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4481. Change fsimage to support snapshot file diffs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1446000 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/02/13 4:43 PM",
      "commitName": "02e6b72ae148fc8c2ba02ef624536b9e48997b31",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "08/02/13 3:19 PM",
      "commitNameOld": "afe77ce53d3cf203690aa419e377f26cbd45a96e",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 5.06,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,31 @@\n   private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n       List\u003cINode\u003e createdList, DataInputStream in, FSImageFormat.Loader loader)\n       throws IOException {\n     int deletedSize \u003d in.readInt();\n     List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n     for (int i \u003d 0; i \u003c deletedSize; i++) {\n-      byte[] deletedNodeName \u003d new byte[in.readShort()];\n-      in.readFully(deletedNodeName);\n-      INode deleted \u003d loader.loadINode(in);\n-      deleted.setLocalName(deletedNodeName);\n+      final INode deleted \u003d loader.loadINodeWithLocalName(false, in);\n       deletedList.add(deleted);\n       // set parent: the parent field of an INode in the deleted list is not \n       // useful, but set the parent here to be consistent with the original \n       // fsdir tree.\n       deleted.setParent(parent);\n       if (deleted instanceof INodeFile\n           \u0026\u0026 ((INodeFile) deleted).getBlocks() \u003d\u003d null) {\n         // if deleted is an INodeFile, and its blocks is null, then deleted\n         // must be an INodeFileWithLink, and we need to rebuild its next link\n-        int c \u003d Collections.binarySearch(createdList, deletedNodeName);\n+        int c \u003d Collections.binarySearch(createdList, deleted.getLocalNameBytes());\n         if (c \u003c 0) {\n           throw new IOException(\n               \"Cannot find the INode linked with the INode \"\n-                  + DFSUtil.bytes2String(deletedNodeName)\n+                  + deleted.getLocalName()\n                   + \" in deleted list while loading FSImage.\");\n         }\n         // deleted must be an FileWithSnapshot (INodeFileSnapshot or \n         // INodeFileUnderConstructionSnapshot)\n         INodeFile cNode \u003d (INodeFile) createdList.get(c);\n         ((INodeFile) deleted).setBlocks(cNode.getBlocks());\n       }\n     }\n     return deletedList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n      List\u003cINode\u003e createdList, DataInputStream in, FSImageFormat.Loader loader)\n      throws IOException {\n    int deletedSize \u003d in.readInt();\n    List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n    for (int i \u003d 0; i \u003c deletedSize; i++) {\n      final INode deleted \u003d loader.loadINodeWithLocalName(false, in);\n      deletedList.add(deleted);\n      // set parent: the parent field of an INode in the deleted list is not \n      // useful, but set the parent here to be consistent with the original \n      // fsdir tree.\n      deleted.setParent(parent);\n      if (deleted instanceof INodeFile\n          \u0026\u0026 ((INodeFile) deleted).getBlocks() \u003d\u003d null) {\n        // if deleted is an INodeFile, and its blocks is null, then deleted\n        // must be an INodeFileWithLink, and we need to rebuild its next link\n        int c \u003d Collections.binarySearch(createdList, deleted.getLocalNameBytes());\n        if (c \u003c 0) {\n          throw new IOException(\n              \"Cannot find the INode linked with the INode \"\n                  + deleted.getLocalName()\n                  + \" in deleted list while loading FSImage.\");\n        }\n        // deleted must be an FileWithSnapshot (INodeFileSnapshot or \n        // INodeFileUnderConstructionSnapshot)\n        INodeFile cNode \u003d (INodeFile) createdList.get(c);\n        ((INodeFile) deleted).setBlocks(cNode.getBlocks());\n      }\n    }\n    return deletedList;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
      "extendedDetails": {}
    },
    "afe77ce53d3cf203690aa419e377f26cbd45a96e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4480. Eliminate the file snapshot circular linked list.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1444280 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/02/13 3:19 PM",
      "commitName": "afe77ce53d3cf203690aa419e377f26cbd45a96e",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "07/02/13 6:18 PM",
      "commitNameOld": "4f7d921324c7fa9623c34688e3f2aa57fbfcb8b3",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.88,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,34 @@\n   private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n       List\u003cINode\u003e createdList, DataInputStream in, FSImageFormat.Loader loader)\n       throws IOException {\n     int deletedSize \u003d in.readInt();\n     List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n     for (int i \u003d 0; i \u003c deletedSize; i++) {\n       byte[] deletedNodeName \u003d new byte[in.readShort()];\n       in.readFully(deletedNodeName);\n       INode deleted \u003d loader.loadINode(in);\n       deleted.setLocalName(deletedNodeName);\n       deletedList.add(deleted);\n       // set parent: the parent field of an INode in the deleted list is not \n       // useful, but set the parent here to be consistent with the original \n       // fsdir tree.\n       deleted.setParent(parent);\n       if (deleted instanceof INodeFile\n           \u0026\u0026 ((INodeFile) deleted).getBlocks() \u003d\u003d null) {\n         // if deleted is an INodeFile, and its blocks is null, then deleted\n         // must be an INodeFileWithLink, and we need to rebuild its next link\n         int c \u003d Collections.binarySearch(createdList, deletedNodeName);\n         if (c \u003c 0) {\n           throw new IOException(\n               \"Cannot find the INode linked with the INode \"\n                   + DFSUtil.bytes2String(deletedNodeName)\n                   + \" in deleted list while loading FSImage.\");\n         }\n         // deleted must be an FileWithSnapshot (INodeFileSnapshot or \n         // INodeFileUnderConstructionSnapshot)\n-        FileWithSnapshot deletedWithLink \u003d (FileWithSnapshot) deleted;\n         INodeFile cNode \u003d (INodeFile) createdList.get(c);\n-        INodeFileWithSnapshot cNodeWithLink \u003d (INodeFileWithSnapshot) cNode;\n         ((INodeFile) deleted).setBlocks(cNode.getBlocks());\n-        // insert deleted into the circular list\n-        cNodeWithLink.insertBefore(deletedWithLink);\n       }\n     }\n     return deletedList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n      List\u003cINode\u003e createdList, DataInputStream in, FSImageFormat.Loader loader)\n      throws IOException {\n    int deletedSize \u003d in.readInt();\n    List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n    for (int i \u003d 0; i \u003c deletedSize; i++) {\n      byte[] deletedNodeName \u003d new byte[in.readShort()];\n      in.readFully(deletedNodeName);\n      INode deleted \u003d loader.loadINode(in);\n      deleted.setLocalName(deletedNodeName);\n      deletedList.add(deleted);\n      // set parent: the parent field of an INode in the deleted list is not \n      // useful, but set the parent here to be consistent with the original \n      // fsdir tree.\n      deleted.setParent(parent);\n      if (deleted instanceof INodeFile\n          \u0026\u0026 ((INodeFile) deleted).getBlocks() \u003d\u003d null) {\n        // if deleted is an INodeFile, and its blocks is null, then deleted\n        // must be an INodeFileWithLink, and we need to rebuild its next link\n        int c \u003d Collections.binarySearch(createdList, deletedNodeName);\n        if (c \u003c 0) {\n          throw new IOException(\n              \"Cannot find the INode linked with the INode \"\n                  + DFSUtil.bytes2String(deletedNodeName)\n                  + \" in deleted list while loading FSImage.\");\n        }\n        // deleted must be an FileWithSnapshot (INodeFileSnapshot or \n        // INodeFileUnderConstructionSnapshot)\n        INodeFile cNode \u003d (INodeFile) createdList.get(c);\n        ((INodeFile) deleted).setBlocks(cNode.getBlocks());\n      }\n    }\n    return deletedList;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
      "extendedDetails": {}
    },
    "5988208b7d2fa3c0378f17fe67ada99a25342829": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4432. Support INodeFileUnderConstructionWithSnapshot in FSImage saving/loading. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1439682 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/01/13 2:48 PM",
      "commitName": "5988208b7d2fa3c0378f17fe67ada99a25342829",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "25/01/13 4:01 PM",
      "commitNameOld": "a3bf2083867db5d848ea14f145d120f02b820af2",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 2.95,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,38 @@\n   private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n       List\u003cINode\u003e createdList, DataInputStream in, FSImageFormat.Loader loader)\n       throws IOException {\n     int deletedSize \u003d in.readInt();\n     List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n     for (int i \u003d 0; i \u003c deletedSize; i++) {\n       byte[] deletedNodeName \u003d new byte[in.readShort()];\n       in.readFully(deletedNodeName);\n       INode deleted \u003d loader.loadINode(in);\n       deleted.setLocalName(deletedNodeName);\n       deletedList.add(deleted);\n       // set parent: the parent field of an INode in the deleted list is not \n       // useful, but set the parent here to be consistent with the original \n       // fsdir tree.\n       deleted.setParent(parent);\n       if (deleted instanceof INodeFile\n           \u0026\u0026 ((INodeFile) deleted).getBlocks() \u003d\u003d null) {\n         // if deleted is an INodeFile, and its blocks is null, then deleted\n         // must be an INodeFileWithLink, and we need to rebuild its next link\n         int c \u003d Collections.binarySearch(createdList, deletedNodeName);\n         if (c \u003c 0) {\n           throw new IOException(\n               \"Cannot find the INode linked with the INode \"\n                   + DFSUtil.bytes2String(deletedNodeName)\n                   + \" in deleted list while loading FSImage.\");\n         }\n-        // deleted must be an INodeFileSnapshot\n-        INodeFileSnapshot deletedWithLink \u003d (INodeFileSnapshot) deleted;\n+        // deleted must be an FileWithSnapshot (INodeFileSnapshot or \n+        // INodeFileUnderConstructionSnapshot)\n+        FileWithSnapshot deletedWithLink \u003d (FileWithSnapshot) deleted;\n         INodeFile cNode \u003d (INodeFile) createdList.get(c);\n         INodeFileWithSnapshot cNodeWithLink \u003d (INodeFileWithSnapshot) cNode;\n-        deletedWithLink.setBlocks(cNode.getBlocks());\n+        ((INodeFile) deleted).setBlocks(cNode.getBlocks());\n         // insert deleted into the circular list\n         cNodeWithLink.insertBefore(deletedWithLink);\n       }\n     }\n     return deletedList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n      List\u003cINode\u003e createdList, DataInputStream in, FSImageFormat.Loader loader)\n      throws IOException {\n    int deletedSize \u003d in.readInt();\n    List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n    for (int i \u003d 0; i \u003c deletedSize; i++) {\n      byte[] deletedNodeName \u003d new byte[in.readShort()];\n      in.readFully(deletedNodeName);\n      INode deleted \u003d loader.loadINode(in);\n      deleted.setLocalName(deletedNodeName);\n      deletedList.add(deleted);\n      // set parent: the parent field of an INode in the deleted list is not \n      // useful, but set the parent here to be consistent with the original \n      // fsdir tree.\n      deleted.setParent(parent);\n      if (deleted instanceof INodeFile\n          \u0026\u0026 ((INodeFile) deleted).getBlocks() \u003d\u003d null) {\n        // if deleted is an INodeFile, and its blocks is null, then deleted\n        // must be an INodeFileWithLink, and we need to rebuild its next link\n        int c \u003d Collections.binarySearch(createdList, deletedNodeName);\n        if (c \u003c 0) {\n          throw new IOException(\n              \"Cannot find the INode linked with the INode \"\n                  + DFSUtil.bytes2String(deletedNodeName)\n                  + \" in deleted list while loading FSImage.\");\n        }\n        // deleted must be an FileWithSnapshot (INodeFileSnapshot or \n        // INodeFileUnderConstructionSnapshot)\n        FileWithSnapshot deletedWithLink \u003d (FileWithSnapshot) deleted;\n        INodeFile cNode \u003d (INodeFile) createdList.get(c);\n        INodeFileWithSnapshot cNodeWithLink \u003d (INodeFileWithSnapshot) cNode;\n        ((INodeFile) deleted).setBlocks(cNode.getBlocks());\n        // insert deleted into the circular list\n        cNodeWithLink.insertBefore(deletedWithLink);\n      }\n    }\n    return deletedList;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java",
      "extendedDetails": {}
    },
    "fe3584aadfc7839abcd03239e4d07afd12b8b90f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4126. Add reading/writing snapshot information to FSImage. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1437256 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/01/13 6:48 PM",
      "commitName": "fe3584aadfc7839abcd03239e4d07afd12b8b90f",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,37 @@\n+  private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n+      List\u003cINode\u003e createdList, DataInputStream in, FSImageFormat.Loader loader)\n+      throws IOException {\n+    int deletedSize \u003d in.readInt();\n+    List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n+    for (int i \u003d 0; i \u003c deletedSize; i++) {\n+      byte[] deletedNodeName \u003d new byte[in.readShort()];\n+      in.readFully(deletedNodeName);\n+      INode deleted \u003d loader.loadINode(in);\n+      deleted.setLocalName(deletedNodeName);\n+      deletedList.add(deleted);\n+      // set parent: the parent field of an INode in the deleted list is not \n+      // useful, but set the parent here to be consistent with the original \n+      // fsdir tree.\n+      deleted.setParent(parent);\n+      if (deleted instanceof INodeFile\n+          \u0026\u0026 ((INodeFile) deleted).getBlocks() \u003d\u003d null) {\n+        // if deleted is an INodeFile, and its blocks is null, then deleted\n+        // must be an INodeFileWithLink, and we need to rebuild its next link\n+        int c \u003d Collections.binarySearch(createdList, deletedNodeName);\n+        if (c \u003c 0) {\n+          throw new IOException(\n+              \"Cannot find the INode linked with the INode \"\n+                  + DFSUtil.bytes2String(deletedNodeName)\n+                  + \" in deleted list while loading FSImage.\");\n+        }\n+        // deleted must be an INodeFileSnapshot\n+        INodeFileSnapshot deletedWithLink \u003d (INodeFileSnapshot) deleted;\n+        INodeFile cNode \u003d (INodeFile) createdList.get(c);\n+        INodeFileWithSnapshot cNodeWithLink \u003d (INodeFileWithSnapshot) cNode;\n+        deletedWithLink.setBlocks(cNode.getBlocks());\n+        // insert deleted into the circular list\n+        cNodeWithLink.insertBefore(deletedWithLink);\n+      }\n+    }\n+    return deletedList;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cINode\u003e loadDeletedList(INodeDirectoryWithSnapshot parent,\n      List\u003cINode\u003e createdList, DataInputStream in, FSImageFormat.Loader loader)\n      throws IOException {\n    int deletedSize \u003d in.readInt();\n    List\u003cINode\u003e deletedList \u003d new ArrayList\u003cINode\u003e(deletedSize);\n    for (int i \u003d 0; i \u003c deletedSize; i++) {\n      byte[] deletedNodeName \u003d new byte[in.readShort()];\n      in.readFully(deletedNodeName);\n      INode deleted \u003d loader.loadINode(in);\n      deleted.setLocalName(deletedNodeName);\n      deletedList.add(deleted);\n      // set parent: the parent field of an INode in the deleted list is not \n      // useful, but set the parent here to be consistent with the original \n      // fsdir tree.\n      deleted.setParent(parent);\n      if (deleted instanceof INodeFile\n          \u0026\u0026 ((INodeFile) deleted).getBlocks() \u003d\u003d null) {\n        // if deleted is an INodeFile, and its blocks is null, then deleted\n        // must be an INodeFileWithLink, and we need to rebuild its next link\n        int c \u003d Collections.binarySearch(createdList, deletedNodeName);\n        if (c \u003c 0) {\n          throw new IOException(\n              \"Cannot find the INode linked with the INode \"\n                  + DFSUtil.bytes2String(deletedNodeName)\n                  + \" in deleted list while loading FSImage.\");\n        }\n        // deleted must be an INodeFileSnapshot\n        INodeFileSnapshot deletedWithLink \u003d (INodeFileSnapshot) deleted;\n        INodeFile cNode \u003d (INodeFile) createdList.get(c);\n        INodeFileWithSnapshot cNodeWithLink \u003d (INodeFileWithSnapshot) cNode;\n        deletedWithLink.setBlocks(cNode.getBlocks());\n        // insert deleted into the circular list\n        cNodeWithLink.insertBefore(deletedWithLink);\n      }\n    }\n    return deletedList;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotFSImageFormat.java"
    }
  }
}