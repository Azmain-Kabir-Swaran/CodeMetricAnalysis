{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RpcProgram.java",
  "functionName": "doPortMonitoring",
  "functionId": "doPortMonitoring___remoteAddress-SocketAddress",
  "sourceFilePath": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/RpcProgram.java",
  "functionStartLine": 191,
  "functionEndLine": 212,
  "numCommitsSeen": 15,
  "timeTaken": 821,
  "changeHistory": [
    "2ecab65e3e290a1ee192b39ec70868863853543a"
  ],
  "changeHistoryShort": {
    "2ecab65e3e290a1ee192b39ec70868863853543a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2ecab65e3e290a1ee192b39ec70868863853543a": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6439. NFS should not reject NFS requests to the NULL procedure whether port monitoring is enabled or not. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603622 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/14 1:45 PM",
      "commitName": "2ecab65e3e290a1ee192b39ec70868863853543a",
      "commitAuthor": "Brandon Li",
      "diff": "@@ -0,0 +1,22 @@\n+  public boolean doPortMonitoring(SocketAddress remoteAddress) {\n+    if (!allowInsecurePorts) {\n+      if (LOG.isTraceEnabled()) {\n+        LOG.trace(\"Will not allow connections from unprivileged ports. \"\n+            + \"Checking for valid client port...\");\n+      }\n+\n+      if (remoteAddress instanceof InetSocketAddress) {\n+        InetSocketAddress inetRemoteAddress \u003d (InetSocketAddress) remoteAddress;\n+        if (inetRemoteAddress.getPort() \u003e 1023) {\n+          LOG.warn(\"Connection attempted from \u0027\" + inetRemoteAddress + \"\u0027 \"\n+              + \"which is an unprivileged port. Rejecting connection.\");\n+          return false;\n+        }\n+      } else {\n+        LOG.warn(\"Could not determine remote port of socket address \u0027\"\n+            + remoteAddress + \"\u0027. Rejecting connection.\");\n+        return false;\n+      }\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean doPortMonitoring(SocketAddress remoteAddress) {\n    if (!allowInsecurePorts) {\n      if (LOG.isTraceEnabled()) {\n        LOG.trace(\"Will not allow connections from unprivileged ports. \"\n            + \"Checking for valid client port...\");\n      }\n\n      if (remoteAddress instanceof InetSocketAddress) {\n        InetSocketAddress inetRemoteAddress \u003d (InetSocketAddress) remoteAddress;\n        if (inetRemoteAddress.getPort() \u003e 1023) {\n          LOG.warn(\"Connection attempted from \u0027\" + inetRemoteAddress + \"\u0027 \"\n              + \"which is an unprivileged port. Rejecting connection.\");\n          return false;\n        }\n      } else {\n        LOG.warn(\"Could not determine remote port of socket address \u0027\"\n            + remoteAddress + \"\u0027. Rejecting connection.\");\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/RpcProgram.java"
    }
  }
}