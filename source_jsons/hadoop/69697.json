{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbfsPerfTracker.java",
  "functionName": "trackInfo",
  "functionId": "trackInfo___perfInfo-AbfsPerfInfo",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsPerfTracker.java",
  "functionStartLine": 203,
  "functionEndLine": 227,
  "numCommitsSeen": 1,
  "timeTaken": 683,
  "changeHistory": [
    "b033c681e4fc3ee1a38caa807e130aee481d99d5"
  ],
  "changeHistoryShort": {
    "b033c681e4fc3ee1a38caa807e130aee481d99d5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b033c681e4fc3ee1a38caa807e130aee481d99d5": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16612. Track Azure Blob File System client-perceived latency\n\nContributed by Jeetesh Mangwani.\n\nThis add the ability to track the end-to-end performance of ADLS Gen 2 REST APIs by measuring latency in the Hadoop ABFS driver.\nThe latency information is sent back to the ADLS Gen 2 REST API endpoints in the subsequent requests.\n",
      "commitDate": "19/11/19 9:00 AM",
      "commitName": "b033c681e4fc3ee1a38caa807e130aee481d99d5",
      "commitAuthor": "Jeetesh Mangwani",
      "diff": "@@ -0,0 +1,25 @@\n+  public void trackInfo(AbfsPerfInfo perfInfo) {\n+    if (!enabled) {\n+      return;\n+    }\n+\n+    if (isValidInstant(perfInfo.getAggregateStart()) \u0026\u0026 perfInfo.getAggregateCount() \u003e 0) {\n+      recordClientLatency(\n+              perfInfo.getTrackingStart(),\n+              perfInfo.getTrackingEnd(),\n+              perfInfo.getCallerName(),\n+              perfInfo.getCalleeName(),\n+              perfInfo.getSuccess(),\n+              perfInfo.getAggregateStart(),\n+              perfInfo.getAggregateCount(),\n+              perfInfo.getResult());\n+    } else {\n+      recordClientLatency(\n+              perfInfo.getTrackingStart(),\n+              perfInfo.getTrackingEnd(),\n+              perfInfo.getCallerName(),\n+              perfInfo.getCalleeName(),\n+              perfInfo.getSuccess(),\n+              perfInfo.getResult());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void trackInfo(AbfsPerfInfo perfInfo) {\n    if (!enabled) {\n      return;\n    }\n\n    if (isValidInstant(perfInfo.getAggregateStart()) \u0026\u0026 perfInfo.getAggregateCount() \u003e 0) {\n      recordClientLatency(\n              perfInfo.getTrackingStart(),\n              perfInfo.getTrackingEnd(),\n              perfInfo.getCallerName(),\n              perfInfo.getCalleeName(),\n              perfInfo.getSuccess(),\n              perfInfo.getAggregateStart(),\n              perfInfo.getAggregateCount(),\n              perfInfo.getResult());\n    } else {\n      recordClientLatency(\n              perfInfo.getTrackingStart(),\n              perfInfo.getTrackingEnd(),\n              perfInfo.getCallerName(),\n              perfInfo.getCalleeName(),\n              perfInfo.getSuccess(),\n              perfInfo.getResult());\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsPerfTracker.java"
    }
  }
}