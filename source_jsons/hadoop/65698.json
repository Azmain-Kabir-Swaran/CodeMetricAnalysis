{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DumpS3GuardDynamoTable.java",
  "functionName": "dumpStore",
  "functionId": "dumpStore___fs-S3AFileSystem(annotations-@Nullable__modifiers-final)__store-DynamoDBMetadataStore(annotations-@Nullable)__conf-Configuration(annotations-@Nullable)__destFile-File(modifiers-final)__uri-URI(annotations-@Nullable)",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DumpS3GuardDynamoTable.java",
  "functionStartLine": 542,
  "functionEndLine": 589,
  "numCommitsSeen": 2,
  "timeTaken": 1106,
  "changeHistory": [
    "b15ef7dc3d91c6d50fa515158104fba29f43e6b0"
  ],
  "changeHistoryShort": {
    "b15ef7dc3d91c6d50fa515158104fba29f43e6b0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b15ef7dc3d91c6d50fa515158104fba29f43e6b0": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16384: S3A: Avoid inconsistencies between DDB and S3.\n\nContributed by Steve Loughran\n\nContains\n\n- HADOOP-16397. Hadoop S3Guard Prune command to support a -tombstone option.\n- HADOOP-16406. ITestDynamoDBMetadataStore.testProvisionTable times out intermittently\n\nThis patch doesn\u0027t fix the underlying problem but it\n\n* changes some tests to clean up better\n* does a lot more in logging operations in against DDB, if enabled\n* adds an entry point to dump the state of the metastore and s3 tables (precursor to fsck)\n* adds a purge entry point to help clean up after a test run has got a store into a mess\n* s3guard prune command adds -tombstone option to only clear tombstones\n\nThe outcome is that tests should pass consistently and if problems occur we have better diagnostics.\n\nChange-Id: I3eca3f5529d7f6fec398c0ff0472919f08f054eb\n",
      "commitDate": "12/07/19 5:02 AM",
      "commitName": "b15ef7dc3d91c6d50fa515158104fba29f43e6b0",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,48 @@\n+  public static DumpS3GuardDynamoTable dumpStore(\n+      @Nullable final S3AFileSystem fs,\n+      @Nullable DynamoDBMetadataStore store,\n+      @Nullable Configuration conf,\n+      final File destFile,\n+      @Nullable URI uri) throws ExitUtil.ExitException {\n+    ServiceLauncher\u003cService\u003e serviceLauncher \u003d\n+        new ServiceLauncher\u003c\u003e(NAME);\n+\n+    if (conf \u003d\u003d null) {\n+      conf \u003d checkNotNull(fs, \"No filesystem\").getConf();\n+    }\n+    if (store \u003d\u003d null) {\n+      store \u003d (DynamoDBMetadataStore) checkNotNull(fs, \"No filesystem\")\n+          .getMetadataStore();\n+    }\n+    DumpS3GuardDynamoTable dump \u003d new DumpS3GuardDynamoTable(fs,\n+        store,\n+        destFile,\n+        uri);\n+    ExitUtil.ExitException ex \u003d serviceLauncher.launchService(\n+        conf,\n+        dump,\n+        Collections.emptyList(),\n+        false,\n+        true);\n+    if (ex !\u003d null \u0026\u0026 ex.getExitCode() !\u003d 0) {\n+      throw ex;\n+    }\n+    LOG.info(\"Results:\");\n+    Pair\u003cLong, Long\u003e r \u003d dump.getScanEntryResult();\n+    LOG.info(\"Metastore entries: {}\", r);\n+    LOG.info(\"Metastore scan total {}, entries {}, tombstones {}\",\n+        r.getLeft() + r.getRight(),\n+        r.getLeft(),\n+        r.getRight());\n+    LOG.info(\"S3 count {}\", dump.getRawObjectStoreCount());\n+    LOG.info(\"Treewalk Count {}\", dump.getTreewalkCount());\n+    LOG.info(\"List Status Count {}\", dump.getListStatusCount());\n+    r \u003d dump.getSecondScanResult();\n+    if (r !\u003d null) {\n+      LOG.info(\"Second metastore scan total {}, entries {}, tombstones {}\",\n+          r.getLeft() + r.getRight(),\n+          r.getLeft(),\n+          r.getRight());\n+    }\n+    return dump;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static DumpS3GuardDynamoTable dumpStore(\n      @Nullable final S3AFileSystem fs,\n      @Nullable DynamoDBMetadataStore store,\n      @Nullable Configuration conf,\n      final File destFile,\n      @Nullable URI uri) throws ExitUtil.ExitException {\n    ServiceLauncher\u003cService\u003e serviceLauncher \u003d\n        new ServiceLauncher\u003c\u003e(NAME);\n\n    if (conf \u003d\u003d null) {\n      conf \u003d checkNotNull(fs, \"No filesystem\").getConf();\n    }\n    if (store \u003d\u003d null) {\n      store \u003d (DynamoDBMetadataStore) checkNotNull(fs, \"No filesystem\")\n          .getMetadataStore();\n    }\n    DumpS3GuardDynamoTable dump \u003d new DumpS3GuardDynamoTable(fs,\n        store,\n        destFile,\n        uri);\n    ExitUtil.ExitException ex \u003d serviceLauncher.launchService(\n        conf,\n        dump,\n        Collections.emptyList(),\n        false,\n        true);\n    if (ex !\u003d null \u0026\u0026 ex.getExitCode() !\u003d 0) {\n      throw ex;\n    }\n    LOG.info(\"Results:\");\n    Pair\u003cLong, Long\u003e r \u003d dump.getScanEntryResult();\n    LOG.info(\"Metastore entries: {}\", r);\n    LOG.info(\"Metastore scan total {}, entries {}, tombstones {}\",\n        r.getLeft() + r.getRight(),\n        r.getLeft(),\n        r.getRight());\n    LOG.info(\"S3 count {}\", dump.getRawObjectStoreCount());\n    LOG.info(\"Treewalk Count {}\", dump.getTreewalkCount());\n    LOG.info(\"List Status Count {}\", dump.getListStatusCount());\n    r \u003d dump.getSecondScanResult();\n    if (r !\u003d null) {\n      LOG.info(\"Second metastore scan total {}, entries {}, tombstones {}\",\n          r.getLeft() + r.getRight(),\n          r.getLeft(),\n          r.getRight());\n    }\n    return dump;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DumpS3GuardDynamoTable.java"
    }
  }
}