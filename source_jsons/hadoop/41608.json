{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSQueue.java",
  "functionName": "setSteadyFairShare",
  "functionId": "setSteadyFairShare___steadyFairShare-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
  "functionStartLine": 312,
  "functionEndLine": 315,
  "numCommitsSeen": 60,
  "timeTaken": 1852,
  "changeHistory": [
    "10468529a9b858bd945e7ecb063c9c1438efa474",
    "0097b15e2150f95745f64179a0ef4644e96128f5"
  ],
  "changeHistoryShort": {
    "10468529a9b858bd945e7ecb063c9c1438efa474": "Ymodifierchange",
    "0097b15e2150f95745f64179a0ef4644e96128f5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10468529a9b858bd945e7ecb063c9c1438efa474": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
      "commitDate": "23/11/16 9:48 PM",
      "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "02/09/16 2:56 PM",
      "commitNameOld": "f6ea9be5473ab66798b0536317d2f32c5348eb57",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 82.33,
      "commitsBetweenForRepo": 620,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n-  public void setSteadyFairShare(Resource steadyFairShare) {\n+  void setSteadyFairShare(Resource steadyFairShare) {\n     this.steadyFairShare \u003d steadyFairShare;\n     metrics.setSteadyFairShare(steadyFairShare);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void setSteadyFairShare(Resource steadyFairShare) {\n    this.steadyFairShare \u003d steadyFairShare;\n    metrics.setSteadyFairShare(steadyFairShare);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[]"
      }
    },
    "0097b15e2150f95745f64179a0ef4644e96128f5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2393. FairScheduler: Add the notion of steady fair share. (Wei Yan via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1619845 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/08/14 8:44 AM",
      "commitName": "0097b15e2150f95745f64179a0ef4644e96128f5",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,4 @@\n+  public void setSteadyFairShare(Resource steadyFairShare) {\n+    this.steadyFairShare \u003d steadyFairShare;\n+    metrics.setSteadyFairShare(steadyFairShare);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setSteadyFairShare(Resource steadyFairShare) {\n    this.steadyFairShare \u003d steadyFairShare;\n    metrics.setSteadyFairShare(steadyFairShare);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java"
    }
  }
}