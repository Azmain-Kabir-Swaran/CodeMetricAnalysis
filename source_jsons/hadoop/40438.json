{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalityAppPlacementAllocator.java",
  "functionName": "allocateRackLocal",
  "functionId": "allocateRackLocal___schedulerKey-SchedulerRequestKey__node-SchedulerNode__rackLocalRequest-ResourceRequest__resourceRequests-List__ResourceRequest__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
  "functionStartLine": 295,
  "functionEndLine": 308,
  "numCommitsSeen": 171,
  "timeTaken": 14044,
  "changeHistory": [
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
    "0a55bd841ec0f2eb89a0383f4c589526e8b138d4",
    "9ca54f4810de182195263bd594afb56dab564105",
    "1831be8e737fd423a9f3d590767b944147e85641",
    "7558dbbb481eab055e794beb3603bbe5671a4b4c",
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
    "4e4b3a8465a8433e78e015cb1ce7e0dc1ebeb523",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434",
    "edcecedc1c39d54db0f86a1325b4db26c38d2d4d",
    "43589a8df70d4dbaf86609961e27cc4e23dda993",
    "1cac66ce68d5f8d5f73920133eb91fa43e9bdb1c",
    "520033b1cd81c76b38fcdcfcfeed16158db4bbba",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "5262b7ba4d018562d4e7d60772af4ddc3d770a23",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949": "Yfilerename",
    "0a55bd841ec0f2eb89a0383f4c589526e8b138d4": "Ymultichange(Yparameterchange,Ybodychange)",
    "9ca54f4810de182195263bd594afb56dab564105": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "1831be8e737fd423a9f3d590767b944147e85641": "Ymodifierchange",
    "7558dbbb481eab055e794beb3603bbe5671a4b4c": "Ybodychange",
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828": "Ymultichange(Yparameterchange,Ybodychange)",
    "4e4b3a8465a8433e78e015cb1ce7e0dc1ebeb523": "Yparameterchange",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": "Ybodychange",
    "edcecedc1c39d54db0f86a1325b4db26c38d2d4d": "Ybodychange",
    "43589a8df70d4dbaf86609961e27cc4e23dda993": "Ymultichange(Yparameterchange,Ybodychange)",
    "1cac66ce68d5f8d5f73920133eb91fa43e9bdb1c": "Ybodychange",
    "520033b1cd81c76b38fcdcfcfeed16158db4bbba": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "5262b7ba4d018562d4e7d60772af4ddc3d770a23": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7437. Rename PlacementSet and SchedulingPlacementSet. (Wangda Tan via kkaranasos)\n",
      "commitDate": "09/11/17 1:01 PM",
      "commitName": "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
      "commitAuthor": "Konstantinos Karanasos",
      "commitDateOld": "09/11/17 12:12 PM",
      "commitNameOld": "a2c150a7369cc629bbfaa2dfa3a8495b6f9c42e2",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void allocateRackLocal(SchedulerRequestKey schedulerKey,\n      SchedulerNode node, ResourceRequest rackLocalRequest,\n      List\u003cResourceRequest\u003e resourceRequests) {\n    // Update future requirements\n    decResourceRequest(node.getRackName(), rackLocalRequest);\n\n    ResourceRequest offRackRequest \u003d resourceRequestMap.get(\n        ResourceRequest.ANY);\n    decrementOutstanding(schedulerKey, offRackRequest);\n\n    // Update cloned RackLocal and OffRack requests for recovery\n    resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n    resourceRequests.add(cloneResourceRequest(offRackRequest));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalitySchedulingPlacementSet.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java"
      }
    },
    "0a55bd841ec0f2eb89a0383f4c589526e8b138d4": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5959. RM changes to support change of container ExecutionType. (Arun Suresh via wangda)\n",
      "commitDate": "05/01/17 10:31 AM",
      "commitName": "0a55bd841ec0f2eb89a0383f4c589526e8b138d4",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5959. RM changes to support change of container ExecutionType. (Arun Suresh via wangda)\n",
          "commitDate": "05/01/17 10:31 AM",
          "commitName": "0a55bd841ec0f2eb89a0383f4c589526e8b138d4",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "28/12/16 9:18 AM",
          "commitNameOld": "9ca54f4810de182195263bd594afb56dab564105",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 8.05,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  private void allocateRackLocal(SchedulerNode node,\n-      ResourceRequest rackLocalRequest,\n+  private void allocateRackLocal(SchedulerRequestKey schedulerKey,\n+      SchedulerNode node, ResourceRequest rackLocalRequest,\n       List\u003cResourceRequest\u003e resourceRequests) {\n     // Update future requirements\n     decResourceRequest(node.getRackName(), rackLocalRequest);\n \n     ResourceRequest offRackRequest \u003d resourceRequestMap.get(\n         ResourceRequest.ANY);\n-    decrementOutstanding(offRackRequest);\n+    decrementOutstanding(schedulerKey, offRackRequest);\n \n     // Update cloned RackLocal and OffRack requests for recovery\n     resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n     resourceRequests.add(cloneResourceRequest(offRackRequest));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void allocateRackLocal(SchedulerRequestKey schedulerKey,\n      SchedulerNode node, ResourceRequest rackLocalRequest,\n      List\u003cResourceRequest\u003e resourceRequests) {\n    // Update future requirements\n    decResourceRequest(node.getRackName(), rackLocalRequest);\n\n    ResourceRequest offRackRequest \u003d resourceRequestMap.get(\n        ResourceRequest.ANY);\n    decrementOutstanding(schedulerKey, offRackRequest);\n\n    // Update cloned RackLocal and OffRack requests for recovery\n    resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n    resourceRequests.add(cloneResourceRequest(offRackRequest));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalitySchedulingPlacementSet.java",
          "extendedDetails": {
            "oldValue": "[node-SchedulerNode, rackLocalRequest-ResourceRequest, resourceRequests-List\u003cResourceRequest\u003e]",
            "newValue": "[schedulerKey-SchedulerRequestKey, node-SchedulerNode, rackLocalRequest-ResourceRequest, resourceRequests-List\u003cResourceRequest\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5959. RM changes to support change of container ExecutionType. (Arun Suresh via wangda)\n",
          "commitDate": "05/01/17 10:31 AM",
          "commitName": "0a55bd841ec0f2eb89a0383f4c589526e8b138d4",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "28/12/16 9:18 AM",
          "commitNameOld": "9ca54f4810de182195263bd594afb56dab564105",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 8.05,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  private void allocateRackLocal(SchedulerNode node,\n-      ResourceRequest rackLocalRequest,\n+  private void allocateRackLocal(SchedulerRequestKey schedulerKey,\n+      SchedulerNode node, ResourceRequest rackLocalRequest,\n       List\u003cResourceRequest\u003e resourceRequests) {\n     // Update future requirements\n     decResourceRequest(node.getRackName(), rackLocalRequest);\n \n     ResourceRequest offRackRequest \u003d resourceRequestMap.get(\n         ResourceRequest.ANY);\n-    decrementOutstanding(offRackRequest);\n+    decrementOutstanding(schedulerKey, offRackRequest);\n \n     // Update cloned RackLocal and OffRack requests for recovery\n     resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n     resourceRequests.add(cloneResourceRequest(offRackRequest));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void allocateRackLocal(SchedulerRequestKey schedulerKey,\n      SchedulerNode node, ResourceRequest rackLocalRequest,\n      List\u003cResourceRequest\u003e resourceRequests) {\n    // Update future requirements\n    decResourceRequest(node.getRackName(), rackLocalRequest);\n\n    ResourceRequest offRackRequest \u003d resourceRequestMap.get(\n        ResourceRequest.ANY);\n    decrementOutstanding(schedulerKey, offRackRequest);\n\n    // Update cloned RackLocal and OffRack requests for recovery\n    resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n    resourceRequests.add(cloneResourceRequest(offRackRequest));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalitySchedulingPlacementSet.java",
          "extendedDetails": {}
        }
      ]
    },
    "9ca54f4810de182195263bd594afb56dab564105": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-5906. Update AppSchedulingInfo to use SchedulingPlacementSet. Contributed by Wangda Tan.\n",
      "commitDate": "28/12/16 9:18 AM",
      "commitName": "9ca54f4810de182195263bd594afb56dab564105",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-5906. Update AppSchedulingInfo to use SchedulingPlacementSet. Contributed by Wangda Tan.\n",
          "commitDate": "28/12/16 9:18 AM",
          "commitName": "9ca54f4810de182195263bd594afb56dab564105",
          "commitAuthor": "Sunil G",
          "commitDateOld": "28/12/16 1:29 AM",
          "commitNameOld": "972da46cb48725ad49d3e0a033742bd1a8228f51",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 0.33,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   private void allocateRackLocal(SchedulerNode node,\n-      SchedulerRequestKey schedulerKey, ResourceRequest rackLocalRequest,\n+      ResourceRequest rackLocalRequest,\n       List\u003cResourceRequest\u003e resourceRequests) {\n     // Update future requirements\n-    decResourceRequest(node.getRackName(), schedulerKey, rackLocalRequest);\n-    \n-    ResourceRequest offRackRequest \u003d resourceRequestMap.get(schedulerKey).get(\n+    decResourceRequest(node.getRackName(), rackLocalRequest);\n+\n+    ResourceRequest offRackRequest \u003d resourceRequestMap.get(\n         ResourceRequest.ANY);\n-    decrementOutstanding(offRackRequest, schedulerKey);\n+    decrementOutstanding(offRackRequest);\n \n     // Update cloned RackLocal and OffRack requests for recovery\n     resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n     resourceRequests.add(cloneResourceRequest(offRackRequest));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void allocateRackLocal(SchedulerNode node,\n      ResourceRequest rackLocalRequest,\n      List\u003cResourceRequest\u003e resourceRequests) {\n    // Update future requirements\n    decResourceRequest(node.getRackName(), rackLocalRequest);\n\n    ResourceRequest offRackRequest \u003d resourceRequestMap.get(\n        ResourceRequest.ANY);\n    decrementOutstanding(offRackRequest);\n\n    // Update cloned RackLocal and OffRack requests for recovery\n    resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n    resourceRequests.add(cloneResourceRequest(offRackRequest));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalitySchedulingPlacementSet.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalitySchedulingPlacementSet.java",
            "oldMethodName": "allocateRackLocal",
            "newMethodName": "allocateRackLocal"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5906. Update AppSchedulingInfo to use SchedulingPlacementSet. Contributed by Wangda Tan.\n",
          "commitDate": "28/12/16 9:18 AM",
          "commitName": "9ca54f4810de182195263bd594afb56dab564105",
          "commitAuthor": "Sunil G",
          "commitDateOld": "28/12/16 1:29 AM",
          "commitNameOld": "972da46cb48725ad49d3e0a033742bd1a8228f51",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 0.33,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   private void allocateRackLocal(SchedulerNode node,\n-      SchedulerRequestKey schedulerKey, ResourceRequest rackLocalRequest,\n+      ResourceRequest rackLocalRequest,\n       List\u003cResourceRequest\u003e resourceRequests) {\n     // Update future requirements\n-    decResourceRequest(node.getRackName(), schedulerKey, rackLocalRequest);\n-    \n-    ResourceRequest offRackRequest \u003d resourceRequestMap.get(schedulerKey).get(\n+    decResourceRequest(node.getRackName(), rackLocalRequest);\n+\n+    ResourceRequest offRackRequest \u003d resourceRequestMap.get(\n         ResourceRequest.ANY);\n-    decrementOutstanding(offRackRequest, schedulerKey);\n+    decrementOutstanding(offRackRequest);\n \n     // Update cloned RackLocal and OffRack requests for recovery\n     resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n     resourceRequests.add(cloneResourceRequest(offRackRequest));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void allocateRackLocal(SchedulerNode node,\n      ResourceRequest rackLocalRequest,\n      List\u003cResourceRequest\u003e resourceRequests) {\n    // Update future requirements\n    decResourceRequest(node.getRackName(), rackLocalRequest);\n\n    ResourceRequest offRackRequest \u003d resourceRequestMap.get(\n        ResourceRequest.ANY);\n    decrementOutstanding(offRackRequest);\n\n    // Update cloned RackLocal and OffRack requests for recovery\n    resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n    resourceRequests.add(cloneResourceRequest(offRackRequest));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalitySchedulingPlacementSet.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5906. Update AppSchedulingInfo to use SchedulingPlacementSet. Contributed by Wangda Tan.\n",
          "commitDate": "28/12/16 9:18 AM",
          "commitName": "9ca54f4810de182195263bd594afb56dab564105",
          "commitAuthor": "Sunil G",
          "commitDateOld": "28/12/16 1:29 AM",
          "commitNameOld": "972da46cb48725ad49d3e0a033742bd1a8228f51",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 0.33,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   private void allocateRackLocal(SchedulerNode node,\n-      SchedulerRequestKey schedulerKey, ResourceRequest rackLocalRequest,\n+      ResourceRequest rackLocalRequest,\n       List\u003cResourceRequest\u003e resourceRequests) {\n     // Update future requirements\n-    decResourceRequest(node.getRackName(), schedulerKey, rackLocalRequest);\n-    \n-    ResourceRequest offRackRequest \u003d resourceRequestMap.get(schedulerKey).get(\n+    decResourceRequest(node.getRackName(), rackLocalRequest);\n+\n+    ResourceRequest offRackRequest \u003d resourceRequestMap.get(\n         ResourceRequest.ANY);\n-    decrementOutstanding(offRackRequest, schedulerKey);\n+    decrementOutstanding(offRackRequest);\n \n     // Update cloned RackLocal and OffRack requests for recovery\n     resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n     resourceRequests.add(cloneResourceRequest(offRackRequest));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void allocateRackLocal(SchedulerNode node,\n      ResourceRequest rackLocalRequest,\n      List\u003cResourceRequest\u003e resourceRequests) {\n    // Update future requirements\n    decResourceRequest(node.getRackName(), rackLocalRequest);\n\n    ResourceRequest offRackRequest \u003d resourceRequestMap.get(\n        ResourceRequest.ANY);\n    decrementOutstanding(offRackRequest);\n\n    // Update cloned RackLocal and OffRack requests for recovery\n    resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n    resourceRequests.add(cloneResourceRequest(offRackRequest));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalitySchedulingPlacementSet.java",
          "extendedDetails": {
            "oldValue": "[node-SchedulerNode, schedulerKey-SchedulerRequestKey, rackLocalRequest-ResourceRequest, resourceRequests-List\u003cResourceRequest\u003e]",
            "newValue": "[node-SchedulerNode, rackLocalRequest-ResourceRequest, resourceRequests-List\u003cResourceRequest\u003e]"
          }
        }
      ]
    },
    "1831be8e737fd423a9f3d590767b944147e85641": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-3142. Improve locks in AppSchedulingInfo. (Varun Saxena via wangda)\n",
      "commitDate": "27/09/16 11:54 AM",
      "commitName": "1831be8e737fd423a9f3d590767b944147e85641",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "19/09/16 1:31 PM",
      "commitNameOld": "7558dbbb481eab055e794beb3603bbe5671a4b4c",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 7.93,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-  private synchronized void allocateRackLocal(SchedulerNode node,\n+  private void allocateRackLocal(SchedulerNode node,\n       SchedulerRequestKey schedulerKey, ResourceRequest rackLocalRequest,\n       List\u003cResourceRequest\u003e resourceRequests) {\n     // Update future requirements\n     decResourceRequest(node.getRackName(), schedulerKey, rackLocalRequest);\n     \n     ResourceRequest offRackRequest \u003d resourceRequestMap.get(schedulerKey).get(\n         ResourceRequest.ANY);\n     decrementOutstanding(offRackRequest, schedulerKey);\n \n     // Update cloned RackLocal and OffRack requests for recovery\n     resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n     resourceRequests.add(cloneResourceRequest(offRackRequest));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void allocateRackLocal(SchedulerNode node,\n      SchedulerRequestKey schedulerKey, ResourceRequest rackLocalRequest,\n      List\u003cResourceRequest\u003e resourceRequests) {\n    // Update future requirements\n    decResourceRequest(node.getRackName(), schedulerKey, rackLocalRequest);\n    \n    ResourceRequest offRackRequest \u003d resourceRequestMap.get(schedulerKey).get(\n        ResourceRequest.ANY);\n    decrementOutstanding(offRackRequest, schedulerKey);\n\n    // Update cloned RackLocal and OffRack requests for recovery\n    resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n    resourceRequests.add(cloneResourceRequest(offRackRequest));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {
        "oldValue": "[private, synchronized]",
        "newValue": "[private]"
      }
    },
    "7558dbbb481eab055e794beb3603bbe5671a4b4c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5540. Scheduler spends too much time looking at empty priorities. Contributed by Jason Lowe\n",
      "commitDate": "19/09/16 1:31 PM",
      "commitName": "7558dbbb481eab055e794beb3603bbe5671a4b4c",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "31/07/16 11:48 AM",
      "commitNameOld": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 50.07,
      "commitsBetweenForRepo": 315,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private synchronized void allocateRackLocal(SchedulerNode node,\n       SchedulerRequestKey schedulerKey, ResourceRequest rackLocalRequest,\n       List\u003cResourceRequest\u003e resourceRequests) {\n     // Update future requirements\n     decResourceRequest(node.getRackName(), schedulerKey, rackLocalRequest);\n     \n     ResourceRequest offRackRequest \u003d resourceRequestMap.get(schedulerKey).get(\n         ResourceRequest.ANY);\n-    decrementOutstanding(offRackRequest);\n+    decrementOutstanding(offRackRequest, schedulerKey);\n \n     // Update cloned RackLocal and OffRack requests for recovery\n     resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n     resourceRequests.add(cloneResourceRequest(offRackRequest));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void allocateRackLocal(SchedulerNode node,\n      SchedulerRequestKey schedulerKey, ResourceRequest rackLocalRequest,\n      List\u003cResourceRequest\u003e resourceRequests) {\n    // Update future requirements\n    decResourceRequest(node.getRackName(), schedulerKey, rackLocalRequest);\n    \n    ResourceRequest offRackRequest \u003d resourceRequestMap.get(schedulerKey).get(\n        ResourceRequest.ANY);\n    decrementOutstanding(offRackRequest, schedulerKey);\n\n    // Update cloned RackLocal and OffRack requests for recovery\n    resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n    resourceRequests.add(cloneResourceRequest(offRackRequest));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {}
    },
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
      "commitDate": "26/07/16 2:54 PM",
      "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
          "commitDate": "26/07/16 2:54 PM",
          "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "07/06/16 3:06 PM",
          "commitNameOld": "620325e81696fca140195b74929ed9eda2d5eb16",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 48.99,
          "commitsBetweenForRepo": 441,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   private synchronized void allocateRackLocal(SchedulerNode node,\n-      Priority priority, ResourceRequest rackLocalRequest,\n+      SchedulerRequestKey schedulerKey, ResourceRequest rackLocalRequest,\n       List\u003cResourceRequest\u003e resourceRequests) {\n     // Update future requirements\n-    decResourceRequest(node.getRackName(), priority, rackLocalRequest);\n+    decResourceRequest(node.getRackName(), schedulerKey, rackLocalRequest);\n     \n-    ResourceRequest offRackRequest \u003d resourceRequestMap.get(priority).get(\n+    ResourceRequest offRackRequest \u003d resourceRequestMap.get(schedulerKey).get(\n         ResourceRequest.ANY);\n     decrementOutstanding(offRackRequest);\n \n     // Update cloned RackLocal and OffRack requests for recovery\n     resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n     resourceRequests.add(cloneResourceRequest(offRackRequest));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized void allocateRackLocal(SchedulerNode node,\n      SchedulerRequestKey schedulerKey, ResourceRequest rackLocalRequest,\n      List\u003cResourceRequest\u003e resourceRequests) {\n    // Update future requirements\n    decResourceRequest(node.getRackName(), schedulerKey, rackLocalRequest);\n    \n    ResourceRequest offRackRequest \u003d resourceRequestMap.get(schedulerKey).get(\n        ResourceRequest.ANY);\n    decrementOutstanding(offRackRequest);\n\n    // Update cloned RackLocal and OffRack requests for recovery\n    resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n    resourceRequests.add(cloneResourceRequest(offRackRequest));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
          "extendedDetails": {
            "oldValue": "[node-SchedulerNode, priority-Priority, rackLocalRequest-ResourceRequest, resourceRequests-List\u003cResourceRequest\u003e]",
            "newValue": "[node-SchedulerNode, schedulerKey-SchedulerRequestKey, rackLocalRequest-ResourceRequest, resourceRequests-List\u003cResourceRequest\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
          "commitDate": "26/07/16 2:54 PM",
          "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "07/06/16 3:06 PM",
          "commitNameOld": "620325e81696fca140195b74929ed9eda2d5eb16",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 48.99,
          "commitsBetweenForRepo": 441,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   private synchronized void allocateRackLocal(SchedulerNode node,\n-      Priority priority, ResourceRequest rackLocalRequest,\n+      SchedulerRequestKey schedulerKey, ResourceRequest rackLocalRequest,\n       List\u003cResourceRequest\u003e resourceRequests) {\n     // Update future requirements\n-    decResourceRequest(node.getRackName(), priority, rackLocalRequest);\n+    decResourceRequest(node.getRackName(), schedulerKey, rackLocalRequest);\n     \n-    ResourceRequest offRackRequest \u003d resourceRequestMap.get(priority).get(\n+    ResourceRequest offRackRequest \u003d resourceRequestMap.get(schedulerKey).get(\n         ResourceRequest.ANY);\n     decrementOutstanding(offRackRequest);\n \n     // Update cloned RackLocal and OffRack requests for recovery\n     resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n     resourceRequests.add(cloneResourceRequest(offRackRequest));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized void allocateRackLocal(SchedulerNode node,\n      SchedulerRequestKey schedulerKey, ResourceRequest rackLocalRequest,\n      List\u003cResourceRequest\u003e resourceRequests) {\n    // Update future requirements\n    decResourceRequest(node.getRackName(), schedulerKey, rackLocalRequest);\n    \n    ResourceRequest offRackRequest \u003d resourceRequestMap.get(schedulerKey).get(\n        ResourceRequest.ANY);\n    decrementOutstanding(offRackRequest);\n\n    // Update cloned RackLocal and OffRack requests for recovery\n    resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n    resourceRequests.add(cloneResourceRequest(offRackRequest));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
          "extendedDetails": {}
        }
      ]
    },
    "4e4b3a8465a8433e78e015cb1ce7e0dc1ebeb523": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-4524. Cleanup AppSchedulingInfo. (Karthik Kambatla via wangda)\n\n(cherry picked from commit 05fa852d7567b7590d6b53bbf925f8f424736514)\n",
      "commitDate": "30/12/15 3:39 PM",
      "commitName": "4e4b3a8465a8433e78e015cb1ce7e0dc1ebeb523",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "12/11/15 11:09 AM",
      "commitNameOld": "796638d9bc86235b9f3e5d1a3a9a25bbf5c04d1c",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 48.19,
      "commitsBetweenForRepo": 287,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-  synchronized private void allocateRackLocal(SchedulerNode node,\n-      Priority priority, ResourceRequest rackLocalRequest, Container container,\n+  private synchronized void allocateRackLocal(SchedulerNode node,\n+      Priority priority, ResourceRequest rackLocalRequest,\n       List\u003cResourceRequest\u003e resourceRequests) {\n     // Update future requirements\n     decResourceRequest(node.getRackName(), priority, rackLocalRequest);\n     \n     ResourceRequest offRackRequest \u003d resourceRequestMap.get(priority).get(\n         ResourceRequest.ANY);\n     decrementOutstanding(offRackRequest);\n \n     // Update cloned RackLocal and OffRack requests for recovery\n     resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n     resourceRequests.add(cloneResourceRequest(offRackRequest));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void allocateRackLocal(SchedulerNode node,\n      Priority priority, ResourceRequest rackLocalRequest,\n      List\u003cResourceRequest\u003e resourceRequests) {\n    // Update future requirements\n    decResourceRequest(node.getRackName(), priority, rackLocalRequest);\n    \n    ResourceRequest offRackRequest \u003d resourceRequestMap.get(priority).get(\n        ResourceRequest.ANY);\n    decrementOutstanding(offRackRequest);\n\n    // Update cloned RackLocal and OffRack requests for recovery\n    resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n    resourceRequests.add(cloneResourceRequest(offRackRequest));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {
        "oldValue": "[node-SchedulerNode, priority-Priority, rackLocalRequest-ResourceRequest, container-Container, resourceRequests-List\u003cResourceRequest\u003e]",
        "newValue": "[node-SchedulerNode, priority-Priority, rackLocalRequest-ResourceRequest, resourceRequests-List\u003cResourceRequest\u003e]"
      }
    },
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1651. CapacityScheduler side changes to support container resize. Contributed by Wangda Tan\n",
      "commitDate": "23/09/15 1:29 PM",
      "commitName": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
      "commitAuthor": "Jian He",
      "commitDateOld": "13/09/15 5:03 PM",
      "commitNameOld": "81df7b586a16f8226c7b01c139c1c70c060399c3",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 9.85,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   synchronized private void allocateRackLocal(SchedulerNode node,\n       Priority priority, ResourceRequest rackLocalRequest, Container container,\n       List\u003cResourceRequest\u003e resourceRequests) {\n     // Update future requirements\n     decResourceRequest(node.getRackName(), priority, rackLocalRequest);\n     \n-    ResourceRequest offRackRequest \u003d requests.get(priority).get(\n+    ResourceRequest offRackRequest \u003d resourceRequestMap.get(priority).get(\n         ResourceRequest.ANY);\n     decrementOutstanding(offRackRequest);\n \n     // Update cloned RackLocal and OffRack requests for recovery\n     resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n     resourceRequests.add(cloneResourceRequest(offRackRequest));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized private void allocateRackLocal(SchedulerNode node,\n      Priority priority, ResourceRequest rackLocalRequest, Container container,\n      List\u003cResourceRequest\u003e resourceRequests) {\n    // Update future requirements\n    decResourceRequest(node.getRackName(), priority, rackLocalRequest);\n    \n    ResourceRequest offRackRequest \u003d resourceRequestMap.get(priority).get(\n        ResourceRequest.ANY);\n    decrementOutstanding(offRackRequest);\n\n    // Update cloned RackLocal and OffRack requests for recovery\n    resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n    resourceRequests.add(cloneResourceRequest(offRackRequest));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {}
    },
    "edcecedc1c39d54db0f86a1325b4db26c38d2d4d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3262. Surface application outstanding resource requests table in RM web UI. (Jian He via wangda)\n",
      "commitDate": "27/02/15 4:13 PM",
      "commitName": "edcecedc1c39d54db0f86a1325b4db26c38d2d4d",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/02/15 8:53 AM",
      "commitNameOld": "556386a07084b70a5d2ae0c2bd4445a348306db8",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 11.31,
      "commitsBetweenForRepo": 104,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,14 @@\n   synchronized private void allocateRackLocal(SchedulerNode node,\n       Priority priority, ResourceRequest rackLocalRequest, Container container,\n       List\u003cResourceRequest\u003e resourceRequests) {\n     // Update future requirements\n-    rackLocalRequest.setNumContainers(rackLocalRequest.getNumContainers() - 1);\n-    if (rackLocalRequest.getNumContainers() \u003d\u003d 0) {\n-      this.requests.get(priority).remove(node.getRackName());\n-    }\n-\n+    decResourceRequest(node.getRackName(), priority, rackLocalRequest);\n+    \n     ResourceRequest offRackRequest \u003d requests.get(priority).get(\n         ResourceRequest.ANY);\n     decrementOutstanding(offRackRequest);\n \n     // Update cloned RackLocal and OffRack requests for recovery\n     resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n     resourceRequests.add(cloneResourceRequest(offRackRequest));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized private void allocateRackLocal(SchedulerNode node,\n      Priority priority, ResourceRequest rackLocalRequest, Container container,\n      List\u003cResourceRequest\u003e resourceRequests) {\n    // Update future requirements\n    decResourceRequest(node.getRackName(), priority, rackLocalRequest);\n    \n    ResourceRequest offRackRequest \u003d requests.get(priority).get(\n        ResourceRequest.ANY);\n    decrementOutstanding(offRackRequest);\n\n    // Update cloned RackLocal and OffRack requests for recovery\n    resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n    resourceRequests.add(cloneResourceRequest(offRackRequest));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {}
    },
    "43589a8df70d4dbaf86609961e27cc4e23dda993": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1408 Preemption caused Invalid State Event: ACQUIRED at KILLED and caused a task timeout for 30mins. (Sunil G via mayank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1610860 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/07/14 2:48 PM",
      "commitName": "43589a8df70d4dbaf86609961e27cc4e23dda993",
      "commitAuthor": "Mayank Bansal",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1408 Preemption caused Invalid State Event: ACQUIRED at KILLED and caused a task timeout for 30mins. (Sunil G via mayank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1610860 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/07/14 2:48 PM",
          "commitName": "43589a8df70d4dbaf86609961e27cc4e23dda993",
          "commitAuthor": "Mayank Bansal",
          "commitDateOld": "29/06/14 11:24 AM",
          "commitNameOld": "b0c51504c494847a5d0e98d212660297ed43ba56",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 16.14,
          "commitsBetweenForRepo": 96,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,17 @@\n-  synchronized private void allocateRackLocal(\n-      SchedulerNode node, Priority priority,\n-      ResourceRequest rackLocalRequest, Container container) {\n+  synchronized private void allocateRackLocal(SchedulerNode node,\n+      Priority priority, ResourceRequest rackLocalRequest, Container container,\n+      List\u003cResourceRequest\u003e resourceRequests) {\n     // Update future requirements\n     rackLocalRequest.setNumContainers(rackLocalRequest.getNumContainers() - 1);\n     if (rackLocalRequest.getNumContainers() \u003d\u003d 0) {\n       this.requests.get(priority).remove(node.getRackName());\n     }\n \n-    decrementOutstanding(requests.get(priority).get(ResourceRequest.ANY));\n+    ResourceRequest offRackRequest \u003d requests.get(priority).get(\n+        ResourceRequest.ANY);\n+    decrementOutstanding(offRackRequest);\n+\n+    // Update cloned RackLocal and OffRack requests for recovery\n+    resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n+    resourceRequests.add(cloneResourceRequest(offRackRequest));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized private void allocateRackLocal(SchedulerNode node,\n      Priority priority, ResourceRequest rackLocalRequest, Container container,\n      List\u003cResourceRequest\u003e resourceRequests) {\n    // Update future requirements\n    rackLocalRequest.setNumContainers(rackLocalRequest.getNumContainers() - 1);\n    if (rackLocalRequest.getNumContainers() \u003d\u003d 0) {\n      this.requests.get(priority).remove(node.getRackName());\n    }\n\n    ResourceRequest offRackRequest \u003d requests.get(priority).get(\n        ResourceRequest.ANY);\n    decrementOutstanding(offRackRequest);\n\n    // Update cloned RackLocal and OffRack requests for recovery\n    resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n    resourceRequests.add(cloneResourceRequest(offRackRequest));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
          "extendedDetails": {
            "oldValue": "[node-SchedulerNode, priority-Priority, rackLocalRequest-ResourceRequest, container-Container]",
            "newValue": "[node-SchedulerNode, priority-Priority, rackLocalRequest-ResourceRequest, container-Container, resourceRequests-List\u003cResourceRequest\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1408 Preemption caused Invalid State Event: ACQUIRED at KILLED and caused a task timeout for 30mins. (Sunil G via mayank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1610860 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/07/14 2:48 PM",
          "commitName": "43589a8df70d4dbaf86609961e27cc4e23dda993",
          "commitAuthor": "Mayank Bansal",
          "commitDateOld": "29/06/14 11:24 AM",
          "commitNameOld": "b0c51504c494847a5d0e98d212660297ed43ba56",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 16.14,
          "commitsBetweenForRepo": 96,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,17 @@\n-  synchronized private void allocateRackLocal(\n-      SchedulerNode node, Priority priority,\n-      ResourceRequest rackLocalRequest, Container container) {\n+  synchronized private void allocateRackLocal(SchedulerNode node,\n+      Priority priority, ResourceRequest rackLocalRequest, Container container,\n+      List\u003cResourceRequest\u003e resourceRequests) {\n     // Update future requirements\n     rackLocalRequest.setNumContainers(rackLocalRequest.getNumContainers() - 1);\n     if (rackLocalRequest.getNumContainers() \u003d\u003d 0) {\n       this.requests.get(priority).remove(node.getRackName());\n     }\n \n-    decrementOutstanding(requests.get(priority).get(ResourceRequest.ANY));\n+    ResourceRequest offRackRequest \u003d requests.get(priority).get(\n+        ResourceRequest.ANY);\n+    decrementOutstanding(offRackRequest);\n+\n+    // Update cloned RackLocal and OffRack requests for recovery\n+    resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n+    resourceRequests.add(cloneResourceRequest(offRackRequest));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized private void allocateRackLocal(SchedulerNode node,\n      Priority priority, ResourceRequest rackLocalRequest, Container container,\n      List\u003cResourceRequest\u003e resourceRequests) {\n    // Update future requirements\n    rackLocalRequest.setNumContainers(rackLocalRequest.getNumContainers() - 1);\n    if (rackLocalRequest.getNumContainers() \u003d\u003d 0) {\n      this.requests.get(priority).remove(node.getRackName());\n    }\n\n    ResourceRequest offRackRequest \u003d requests.get(priority).get(\n        ResourceRequest.ANY);\n    decrementOutstanding(offRackRequest);\n\n    // Update cloned RackLocal and OffRack requests for recovery\n    resourceRequests.add(cloneResourceRequest(rackLocalRequest));\n    resourceRequests.add(cloneResourceRequest(offRackRequest));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
          "extendedDetails": {}
        }
      ]
    },
    "1cac66ce68d5f8d5f73920133eb91fa43e9bdb1c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1617. Remove ancient comment and surround LOG.debug in AppSchedulingInfo.allocate (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1563004 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/01/14 2:40 PM",
      "commitName": "1cac66ce68d5f8d5f73920133eb91fa43e9bdb1c",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "10/01/14 5:15 PM",
      "commitNameOld": "f677175f35f68bde9df72e648dffacbd31cfd620",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 19.89,
      "commitsBetweenForRepo": 118,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,11 @@\n   synchronized private void allocateRackLocal(\n       SchedulerNode node, Priority priority,\n       ResourceRequest rackLocalRequest, Container container) {\n-\n-    // Update consumption and track allocations\n-    allocate(container);\n-\n     // Update future requirements\n     rackLocalRequest.setNumContainers(rackLocalRequest.getNumContainers() - 1);\n     if (rackLocalRequest.getNumContainers() \u003d\u003d 0) {\n       this.requests.get(priority).remove(node.getRackName());\n     }\n \n     decrementOutstanding(requests.get(priority).get(ResourceRequest.ANY));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized private void allocateRackLocal(\n      SchedulerNode node, Priority priority,\n      ResourceRequest rackLocalRequest, Container container) {\n    // Update future requirements\n    rackLocalRequest.setNumContainers(rackLocalRequest.getNumContainers() - 1);\n    if (rackLocalRequest.getNumContainers() \u003d\u003d 0) {\n      this.requests.get(priority).remove(node.getRackName());\n    }\n\n    decrementOutstanding(requests.get(priority).get(ResourceRequest.ANY));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {}
    },
    "520033b1cd81c76b38fcdcfcfeed16158db4bbba": {
      "type": "Ybodychange",
      "commitMessage": "YARN-450. Define value for * in the scheduling protocol (Zhijie Shen via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1462271 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/03/13 12:44 PM",
      "commitName": "520033b1cd81c76b38fcdcfcfeed16158db4bbba",
      "commitAuthor": "Bikas Saha",
      "commitDateOld": "28/11/12 5:56 PM",
      "commitNameOld": "1943fdbec613715f3cdc3ca60cbd273115f28299",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 119.74,
      "commitsBetweenForRepo": 537,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   synchronized private void allocateRackLocal(\n       SchedulerNode node, Priority priority,\n       ResourceRequest rackLocalRequest, Container container) {\n \n     // Update consumption and track allocations\n     allocate(container);\n \n     // Update future requirements\n     rackLocalRequest.setNumContainers(rackLocalRequest.getNumContainers() - 1);\n     if (rackLocalRequest.getNumContainers() \u003d\u003d 0) {\n       this.requests.get(priority).remove(node.getRackName());\n     }\n \n-    decrementOutstanding(requests.get(priority).get(RMNode.ANY));\n+    decrementOutstanding(requests.get(priority).get(ResourceRequest.ANY));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized private void allocateRackLocal(\n      SchedulerNode node, Priority priority,\n      ResourceRequest rackLocalRequest, Container container) {\n\n    // Update consumption and track allocations\n    allocate(container);\n\n    // Update future requirements\n    rackLocalRequest.setNumContainers(rackLocalRequest.getNumContainers() - 1);\n    if (rackLocalRequest.getNumContainers() \u003d\u003d 0) {\n      this.requests.get(priority).remove(node.getRackName());\n    }\n\n    decrementOutstanding(requests.get(priority).get(ResourceRequest.ANY));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized private void allocateRackLocal(\n      SchedulerNode node, Priority priority,\n      ResourceRequest rackLocalRequest, Container container) {\n\n    // Update consumption and track allocations\n    allocate(container);\n\n    // Update future requirements\n    rackLocalRequest.setNumContainers(rackLocalRequest.getNumContainers() - 1);\n    if (rackLocalRequest.getNumContainers() \u003d\u003d 0) {\n      this.requests.get(priority).remove(node.getRackName());\n    }\n\n    decrementOutstanding(requests.get(priority).get(RMNode.ANY));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java"
      }
    },
    "5262b7ba4d018562d4e7d60772af4ddc3d770a23": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3732. Modified CapacityScheduler to use only users with pending requests for computing user-limits. Contributed by Arun C Murthy.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236953 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/01/12 5:32 PM",
      "commitName": "5262b7ba4d018562d4e7d60772af4ddc3d770a23",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 156.05,
      "commitsBetweenForRepo": 968,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,14 @@\n   synchronized private void allocateRackLocal(SchedulerNode node, Priority priority,\n       ResourceRequest rackLocalRequest, Container container) {\n \n     // Update consumption and track allocations\n     allocate(container);\n \n     // Update future requirements\n     rackLocalRequest.setNumContainers(rackLocalRequest.getNumContainers() - 1);\n     if (rackLocalRequest.getNumContainers() \u003d\u003d 0) {\n       this.requests.get(priority).remove(node.getRackName());\n     }\n \n-    // Do not remove ANY\n-    ResourceRequest offSwitchRequest \u003d requests.get(priority).get(\n-        RMNode.ANY);\n-    offSwitchRequest.setNumContainers(offSwitchRequest.getNumContainers() - 1);\n+    decrementOutstanding(requests.get(priority).get(RMNode.ANY));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized private void allocateRackLocal(SchedulerNode node, Priority priority,\n      ResourceRequest rackLocalRequest, Container container) {\n\n    // Update consumption and track allocations\n    allocate(container);\n\n    // Update future requirements\n    rackLocalRequest.setNumContainers(rackLocalRequest.getNumContainers() - 1);\n    if (rackLocalRequest.getNumContainers() \u003d\u003d 0) {\n      this.requests.get(priority).remove(node.getRackName());\n    }\n\n    decrementOutstanding(requests.get(priority).get(RMNode.ANY));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized private void allocateRackLocal(SchedulerNode node, Priority priority,\n      ResourceRequest rackLocalRequest, Container container) {\n\n    // Update consumption and track allocations\n    allocate(container);\n\n    // Update future requirements\n    rackLocalRequest.setNumContainers(rackLocalRequest.getNumContainers() - 1);\n    if (rackLocalRequest.getNumContainers() \u003d\u003d 0) {\n      this.requests.get(priority).remove(node.getRackName());\n    }\n\n    // Do not remove ANY\n    ResourceRequest offSwitchRequest \u003d requests.get(priority).get(\n        RMNode.ANY);\n    offSwitchRequest.setNumContainers(offSwitchRequest.getNumContainers() - 1);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,17 @@\n+  synchronized private void allocateRackLocal(SchedulerNode node, Priority priority,\n+      ResourceRequest rackLocalRequest, Container container) {\n+\n+    // Update consumption and track allocations\n+    allocate(container);\n+\n+    // Update future requirements\n+    rackLocalRequest.setNumContainers(rackLocalRequest.getNumContainers() - 1);\n+    if (rackLocalRequest.getNumContainers() \u003d\u003d 0) {\n+      this.requests.get(priority).remove(node.getRackName());\n+    }\n+\n+    // Do not remove ANY\n+    ResourceRequest offSwitchRequest \u003d requests.get(priority).get(\n+        RMNode.ANY);\n+    offSwitchRequest.setNumContainers(offSwitchRequest.getNumContainers() - 1);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized private void allocateRackLocal(SchedulerNode node, Priority priority,\n      ResourceRequest rackLocalRequest, Container container) {\n\n    // Update consumption and track allocations\n    allocate(container);\n\n    // Update future requirements\n    rackLocalRequest.setNumContainers(rackLocalRequest.getNumContainers() - 1);\n    if (rackLocalRequest.getNumContainers() \u003d\u003d 0) {\n      this.requests.get(priority).remove(node.getRackName());\n    }\n\n    // Do not remove ANY\n    ResourceRequest offSwitchRequest \u003d requests.get(priority).get(\n        RMNode.ANY);\n    offSwitchRequest.setNumContainers(offSwitchRequest.getNumContainers() - 1);\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java"
    }
  }
}