{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BPServiceActor.java",
  "functionName": "connectToNNAndHandshake",
  "functionId": "connectToNNAndHandshake",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
  "functionStartLine": 284,
  "functionEndLine": 302,
  "numCommitsSeen": 148,
  "timeTaken": 4445,
  "changeHistory": [
    "3a91376707d451777b8269f81bcd48315edd9fc7",
    "ac0d402c6a3af784aa8bdceecf3293c30760346f",
    "9f8344db502b833efe0f2c554b67098e77063d20",
    "8c4680852b20ad0e65e77dd123c9ba5bb6f2fa39",
    "d324164a51a43d72c02567248bd9f0f12b244a40",
    "1e346aa829519f8a2aa830e76d9856f914861805",
    "39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd",
    "1f92266516c882e43fa453b876dd8ca09893c477"
  ],
  "changeHistoryShort": {
    "3a91376707d451777b8269f81bcd48315edd9fc7": "Ybodychange",
    "ac0d402c6a3af784aa8bdceecf3293c30760346f": "Ybodychange",
    "9f8344db502b833efe0f2c554b67098e77063d20": "Ybodychange",
    "8c4680852b20ad0e65e77dd123c9ba5bb6f2fa39": "Ybodychange",
    "d324164a51a43d72c02567248bd9f0f12b244a40": "Ybodychange",
    "1e346aa829519f8a2aa830e76d9856f914861805": "Ymultichange(Ymovefromfile,Ybodychange)",
    "39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd": "Ymovefromfile",
    "1f92266516c882e43fa453b876dd8ca09893c477": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3a91376707d451777b8269f81bcd48315edd9fc7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11558. BPServiceActor thread name is too long. Contributed by Xiaobing Zhou\n",
      "commitDate": "11/04/17 3:29 PM",
      "commitName": "3a91376707d451777b8269f81bcd48315edd9fc7",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "24/03/17 2:33 PM",
      "commitNameOld": "1168ece59640d8ad3166e355d2e82deec2fbaf14",
      "commitAuthorOld": "Xiaobing Zhou",
      "daysBetweenCommits": 18.04,
      "commitsBetweenForRepo": 114,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,19 @@\n   private void connectToNNAndHandshake() throws IOException {\n     // get NN proxy\n     bpNamenode \u003d dn.connectToNN(nnAddr);\n \n     // First phase of the handshake with NN - get the namespace\n     // info.\n     NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n \n     // Verify that this matches the other NN in this HA pair.\n     // This also initializes our block pool in the DN if we are\n     // the first NN connection for this BP.\n     bpos.verifyAndSetNamespaceInfo(this, nsInfo);\n-    \n+\n+    /* set thread name again to include NamespaceInfo when it\u0027s available. */\n+    this.bpThread.setName(formatThreadName(\"heartbeating\", nnAddr));\n+\n     // Second phase of the handshake with the NN.\n     register(nsInfo);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void connectToNNAndHandshake() throws IOException {\n    // get NN proxy\n    bpNamenode \u003d dn.connectToNN(nnAddr);\n\n    // First phase of the handshake with NN - get the namespace\n    // info.\n    NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n\n    // Verify that this matches the other NN in this HA pair.\n    // This also initializes our block pool in the DN if we are\n    // the first NN connection for this BP.\n    bpos.verifyAndSetNamespaceInfo(this, nsInfo);\n\n    /* set thread name again to include NamespaceInfo when it\u0027s available. */\n    this.bpThread.setName(formatThreadName(\"heartbeating\", nnAddr));\n\n    // Second phase of the handshake with the NN.\n    register(nsInfo);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
      "extendedDetails": {}
    },
    "ac0d402c6a3af784aa8bdceecf3293c30760346f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11094. Send back HAState along with NamespaceInfo during a versionRequest as an optional parameter. Contributed by Eric Badger\n",
      "commitDate": "15/12/16 2:53 PM",
      "commitName": "ac0d402c6a3af784aa8bdceecf3293c30760346f",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "09/12/16 1:23 AM",
      "commitNameOld": "d1d4aba71b21871140b162583a4b94ce118e1fb3",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 6.56,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private void connectToNNAndHandshake() throws IOException {\n     // get NN proxy\n     bpNamenode \u003d dn.connectToNN(nnAddr);\n \n     // First phase of the handshake with NN - get the namespace\n     // info.\n     NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n-    \n+\n     // Verify that this matches the other NN in this HA pair.\n     // This also initializes our block pool in the DN if we are\n     // the first NN connection for this BP.\n-    bpos.verifyAndSetNamespaceInfo(nsInfo);\n+    bpos.verifyAndSetNamespaceInfo(this, nsInfo);\n     \n     // Second phase of the handshake with the NN.\n     register(nsInfo);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void connectToNNAndHandshake() throws IOException {\n    // get NN proxy\n    bpNamenode \u003d dn.connectToNN(nnAddr);\n\n    // First phase of the handshake with NN - get the namespace\n    // info.\n    NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n\n    // Verify that this matches the other NN in this HA pair.\n    // This also initializes our block pool in the DN if we are\n    // the first NN connection for this BP.\n    bpos.verifyAndSetNamespaceInfo(this, nsInfo);\n    \n    // Second phase of the handshake with the NN.\n    register(nsInfo);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
      "extendedDetails": {}
    },
    "9f8344db502b833efe0f2c554b67098e77063d20": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-11094. Send back HAState along with NamespaceInfo during a versionRequest as an optional parameter. Contributed by Eric Badger\"\n\nThis reverts commit 8c4680852b20ad0e65e77dd123c9ba5bb6f2fa39.\n",
      "commitDate": "08/12/16 1:36 PM",
      "commitName": "9f8344db502b833efe0f2c554b67098e77063d20",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "05/12/16 11:48 AM",
      "commitNameOld": "8c4680852b20ad0e65e77dd123c9ba5bb6f2fa39",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 3.07,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private void connectToNNAndHandshake() throws IOException {\n     // get NN proxy\n     bpNamenode \u003d dn.connectToNN(nnAddr);\n \n     // First phase of the handshake with NN - get the namespace\n     // info.\n     NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n-\n+    \n     // Verify that this matches the other NN in this HA pair.\n     // This also initializes our block pool in the DN if we are\n     // the first NN connection for this BP.\n-    bpos.verifyAndSetNamespaceInfo(this, nsInfo);\n+    bpos.verifyAndSetNamespaceInfo(nsInfo);\n     \n     // Second phase of the handshake with the NN.\n     register(nsInfo);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void connectToNNAndHandshake() throws IOException {\n    // get NN proxy\n    bpNamenode \u003d dn.connectToNN(nnAddr);\n\n    // First phase of the handshake with NN - get the namespace\n    // info.\n    NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n    \n    // Verify that this matches the other NN in this HA pair.\n    // This also initializes our block pool in the DN if we are\n    // the first NN connection for this BP.\n    bpos.verifyAndSetNamespaceInfo(nsInfo);\n    \n    // Second phase of the handshake with the NN.\n    register(nsInfo);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
      "extendedDetails": {}
    },
    "8c4680852b20ad0e65e77dd123c9ba5bb6f2fa39": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11094. Send back HAState along with NamespaceInfo during a versionRequest as an optional parameter. Contributed by Eric Badger\n",
      "commitDate": "05/12/16 11:48 AM",
      "commitName": "8c4680852b20ad0e65e77dd123c9ba5bb6f2fa39",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "12/09/16 10:50 PM",
      "commitNameOld": "f0876b8b60c19aa25e0417ac0f419a3a82bf210b",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 83.58,
      "commitsBetweenForRepo": 632,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private void connectToNNAndHandshake() throws IOException {\n     // get NN proxy\n     bpNamenode \u003d dn.connectToNN(nnAddr);\n \n     // First phase of the handshake with NN - get the namespace\n     // info.\n     NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n-    \n+\n     // Verify that this matches the other NN in this HA pair.\n     // This also initializes our block pool in the DN if we are\n     // the first NN connection for this BP.\n-    bpos.verifyAndSetNamespaceInfo(nsInfo);\n+    bpos.verifyAndSetNamespaceInfo(this, nsInfo);\n     \n     // Second phase of the handshake with the NN.\n     register(nsInfo);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void connectToNNAndHandshake() throws IOException {\n    // get NN proxy\n    bpNamenode \u003d dn.connectToNN(nnAddr);\n\n    // First phase of the handshake with NN - get the namespace\n    // info.\n    NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n\n    // Verify that this matches the other NN in this HA pair.\n    // This also initializes our block pool in the DN if we are\n    // the first NN connection for this BP.\n    bpos.verifyAndSetNamespaceInfo(this, nsInfo);\n    \n    // Second phase of the handshake with the NN.\n    register(nsInfo);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
      "extendedDetails": {}
    },
    "d324164a51a43d72c02567248bd9f0f12b244a40": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7435. PB encoding of block reports is very inefficient. Contributed by Daryn Sharp.\n",
      "commitDate": "13/03/15 12:23 PM",
      "commitName": "d324164a51a43d72c02567248bd9f0f12b244a40",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "11/03/15 2:11 PM",
      "commitNameOld": "fb34f45727e63ea55377fe90241328025307d818",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 1.93,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private void connectToNNAndHandshake() throws IOException {\n     // get NN proxy\n     bpNamenode \u003d dn.connectToNN(nnAddr);\n \n     // First phase of the handshake with NN - get the namespace\n     // info.\n     NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n     \n     // Verify that this matches the other NN in this HA pair.\n     // This also initializes our block pool in the DN if we are\n     // the first NN connection for this BP.\n     bpos.verifyAndSetNamespaceInfo(nsInfo);\n     \n     // Second phase of the handshake with the NN.\n-    register();\n+    register(nsInfo);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void connectToNNAndHandshake() throws IOException {\n    // get NN proxy\n    bpNamenode \u003d dn.connectToNN(nnAddr);\n\n    // First phase of the handshake with NN - get the namespace\n    // info.\n    NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n    \n    // Verify that this matches the other NN in this HA pair.\n    // This also initializes our block pool in the DN if we are\n    // the first NN connection for this BP.\n    bpos.verifyAndSetNamespaceInfo(nsInfo);\n    \n    // Second phase of the handshake with the NN.\n    register(nsInfo);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
      "extendedDetails": {}
    },
    "1e346aa829519f8a2aa830e76d9856f914861805": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208925 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/11 5:10 PM",
      "commitName": "1e346aa829519f8a2aa830e76d9856f914861805",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208925 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/11/11 5:10 PM",
          "commitName": "1e346aa829519f8a2aa830e76d9856f914861805",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "30/11/11 1:46 PM",
          "commitNameOld": "f87a4b40bc99e76602a75906df31747cfdbff78a",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,16 @@\n   private void connectToNNAndHandshake() throws IOException {\n     // get NN proxy\n-    bpNamenode \u003d (DatanodeProtocol)RPC.waitForProxy(DatanodeProtocol.class,\n-          DatanodeProtocol.versionID, nnAddr, dn.getConf());\n+    bpNamenode \u003d bpos.connectToNN(nnAddr);\n \n     // First phase of the handshake with NN - get the namespace\n     // info.\n-    bpNSInfo \u003d retrieveNamespaceInfo();\n+    NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n     \n-    // Now that we know the namespace ID, etc, we can pass this to the DN.\n-    // The DN can now initialize its local storage if we are the\n-    // first BP to handshake, etc.\n-    dn.initBlockPool(this);\n+    // Verify that this matches the other NN in this HA pair.\n+    // This also initializes our block pool in the DN if we are\n+    // the first NN connection for this BP.\n+    bpos.verifyAndSetNamespaceInfo(nsInfo);\n     \n     // Second phase of the handshake with the NN.\n     register();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void connectToNNAndHandshake() throws IOException {\n    // get NN proxy\n    bpNamenode \u003d bpos.connectToNN(nnAddr);\n\n    // First phase of the handshake with NN - get the namespace\n    // info.\n    NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n    \n    // Verify that this matches the other NN in this HA pair.\n    // This also initializes our block pool in the DN if we are\n    // the first NN connection for this BP.\n    bpos.verifyAndSetNamespaceInfo(nsInfo);\n    \n    // Second phase of the handshake with the NN.\n    register();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
            "oldMethodName": "connectToNNAndHandshake",
            "newMethodName": "connectToNNAndHandshake"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208925 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/11/11 5:10 PM",
          "commitName": "1e346aa829519f8a2aa830e76d9856f914861805",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "30/11/11 1:46 PM",
          "commitNameOld": "f87a4b40bc99e76602a75906df31747cfdbff78a",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,16 @@\n   private void connectToNNAndHandshake() throws IOException {\n     // get NN proxy\n-    bpNamenode \u003d (DatanodeProtocol)RPC.waitForProxy(DatanodeProtocol.class,\n-          DatanodeProtocol.versionID, nnAddr, dn.getConf());\n+    bpNamenode \u003d bpos.connectToNN(nnAddr);\n \n     // First phase of the handshake with NN - get the namespace\n     // info.\n-    bpNSInfo \u003d retrieveNamespaceInfo();\n+    NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n     \n-    // Now that we know the namespace ID, etc, we can pass this to the DN.\n-    // The DN can now initialize its local storage if we are the\n-    // first BP to handshake, etc.\n-    dn.initBlockPool(this);\n+    // Verify that this matches the other NN in this HA pair.\n+    // This also initializes our block pool in the DN if we are\n+    // the first NN connection for this BP.\n+    bpos.verifyAndSetNamespaceInfo(nsInfo);\n     \n     // Second phase of the handshake with the NN.\n     register();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void connectToNNAndHandshake() throws IOException {\n    // get NN proxy\n    bpNamenode \u003d bpos.connectToNN(nnAddr);\n\n    // First phase of the handshake with NN - get the namespace\n    // info.\n    NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n    \n    // Verify that this matches the other NN in this HA pair.\n    // This also initializes our block pool in the DN if we are\n    // the first NN connection for this BP.\n    bpos.verifyAndSetNamespaceInfo(nsInfo);\n    \n    // Second phase of the handshake with the NN.\n    register();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
          "extendedDetails": {}
        }
      ]
    },
    "39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-2566. Move BPOfferService to be a non-inner class. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1204659 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/11/11 11:27 AM",
      "commitName": "39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "21/11/11 11:03 AM",
      "commitNameOld": "68173af69d2fbda3292404c90a5077483e14d6f4",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n-    private void connectToNNAndHandshake() throws IOException {\n-      // get NN proxy\n-      bpNamenode \u003d (DatanodeProtocol)RPC.waitForProxy(DatanodeProtocol.class,\n-            DatanodeProtocol.versionID, nnAddr, dn.getConf());\n+  private void connectToNNAndHandshake() throws IOException {\n+    // get NN proxy\n+    bpNamenode \u003d (DatanodeProtocol)RPC.waitForProxy(DatanodeProtocol.class,\n+          DatanodeProtocol.versionID, nnAddr, dn.getConf());\n \n-      // First phase of the handshake with NN - get the namespace\n-      // info.\n-      bpNSInfo \u003d retrieveNamespaceInfo();\n-      \n-      // Now that we know the namespace ID, etc, we can pass this to the DN.\n-      // The DN can now initialize its local storage if we are the\n-      // first BP to handshake, etc.\n-      dn.initBlockPool(this);\n-      \n-      // Second phase of the handshake with the NN.\n-      register();\n-    }\n\\ No newline at end of file\n+    // First phase of the handshake with NN - get the namespace\n+    // info.\n+    bpNSInfo \u003d retrieveNamespaceInfo();\n+    \n+    // Now that we know the namespace ID, etc, we can pass this to the DN.\n+    // The DN can now initialize its local storage if we are the\n+    // first BP to handshake, etc.\n+    dn.initBlockPool(this);\n+    \n+    // Second phase of the handshake with the NN.\n+    register();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void connectToNNAndHandshake() throws IOException {\n    // get NN proxy\n    bpNamenode \u003d (DatanodeProtocol)RPC.waitForProxy(DatanodeProtocol.class,\n          DatanodeProtocol.versionID, nnAddr, dn.getConf());\n\n    // First phase of the handshake with NN - get the namespace\n    // info.\n    bpNSInfo \u003d retrieveNamespaceInfo();\n    \n    // Now that we know the namespace ID, etc, we can pass this to the DN.\n    // The DN can now initialize its local storage if we are the\n    // first BP to handshake, etc.\n    dn.initBlockPool(this);\n    \n    // Second phase of the handshake with the NN.\n    register();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
        "oldMethodName": "connectToNNAndHandshake",
        "newMethodName": "connectToNNAndHandshake"
      }
    },
    "1f92266516c882e43fa453b876dd8ca09893c477": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2563. Some cleanup in BPOfferService. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1203943 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/11/11 5:31 PM",
      "commitName": "1f92266516c882e43fa453b876dd8ca09893c477",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,18 @@\n+    private void connectToNNAndHandshake() throws IOException {\n+      // get NN proxy\n+      bpNamenode \u003d \n+        (DatanodeProtocol)RPC.waitForProxy(DatanodeProtocol.class,\n+            DatanodeProtocol.versionID, nnAddr, dn.getConf());\n+\n+      // First phase of the handshake with NN - get the namespace\n+      // info.\n+      bpNSInfo \u003d retrieveNamespaceInfo();\n+      \n+      // Now that we know the namespace ID, etc, we can pass this to the DN.\n+      // The DN can now initialize its local storage if we are the\n+      // first BP to handshake, etc.\n+      dn.initBlockPool(this);\n+      \n+      // Second phase of the handshake with the NN.\n+      register();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void connectToNNAndHandshake() throws IOException {\n      // get NN proxy\n      bpNamenode \u003d \n        (DatanodeProtocol)RPC.waitForProxy(DatanodeProtocol.class,\n            DatanodeProtocol.versionID, nnAddr, dn.getConf());\n\n      // First phase of the handshake with NN - get the namespace\n      // info.\n      bpNSInfo \u003d retrieveNamespaceInfo();\n      \n      // Now that we know the namespace ID, etc, we can pass this to the DN.\n      // The DN can now initialize its local storage if we are the\n      // first BP to handshake, etc.\n      dn.initBlockPool(this);\n      \n      // Second phase of the handshake with the NN.\n      register();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java"
    }
  }
}