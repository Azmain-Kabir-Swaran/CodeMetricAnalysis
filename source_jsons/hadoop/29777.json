{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SharedCacheUploaderService.java",
  "functionName": "serviceStart",
  "functionId": "serviceStart",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-sharedcachemanager/src/main/java/org/apache/hadoop/yarn/server/sharedcachemanager/SharedCacheUploaderService.java",
  "functionStartLine": 73,
  "functionEndLine": 92,
  "numCommitsSeen": 2,
  "timeTaken": 799,
  "changeHistory": [
    "e597249d361bbe8383fb9b564eacda7c990b781d",
    "256697acd5ec16bca022ae86e22f9882b3309d8b"
  ],
  "changeHistoryShort": {
    "e597249d361bbe8383fb9b564eacda7c990b781d": "Ybodychange",
    "256697acd5ec16bca022ae86e22f9882b3309d8b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e597249d361bbe8383fb9b564eacda7c990b781d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2914. [YARN-1492] Potential race condition in Singleton implementation of SharedCacheUploaderMetrics, CleanerMetrics, ClientSCMMetrics. (Varun Saxena via kasha)\n",
      "commitDate": "15/12/14 12:00 PM",
      "commitName": "e597249d361bbe8383fb9b564eacda7c990b781d",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "31/10/14 1:00 PM",
      "commitNameOld": "256697acd5ec16bca022ae86e22f9882b3309d8b",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 45.0,
      "commitsBetweenForRepo": 348,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   protected void serviceStart() throws Exception {\n     Configuration conf \u003d getConfig();\n-    this.metrics \u003d SharedCacheUploaderMetrics.initSingleton(conf);\n+    this.metrics \u003d SharedCacheUploaderMetrics.getInstance();\n \n     YarnRPC rpc \u003d YarnRPC.create(conf);\n     this.server \u003d\n         rpc.getServer(SCMUploaderProtocol.class, this, bindAddress,\n             conf, null, // Secret manager null for now (security not supported)\n             conf.getInt(YarnConfiguration.SCM_UPLOADER_SERVER_THREAD_COUNT,\n                 YarnConfiguration.DEFAULT_SCM_UPLOADER_SERVER_THREAD_COUNT));\n \n     // TODO (YARN-2774): Enable service authorization\n \n     this.server.start();\n     bindAddress \u003d\n         conf.updateConnectAddr(YarnConfiguration.SCM_UPLOADER_SERVER_ADDRESS,\n             server.getListenerAddress());\n \n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    this.metrics \u003d SharedCacheUploaderMetrics.getInstance();\n\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    this.server \u003d\n        rpc.getServer(SCMUploaderProtocol.class, this, bindAddress,\n            conf, null, // Secret manager null for now (security not supported)\n            conf.getInt(YarnConfiguration.SCM_UPLOADER_SERVER_THREAD_COUNT,\n                YarnConfiguration.DEFAULT_SCM_UPLOADER_SERVER_THREAD_COUNT));\n\n    // TODO (YARN-2774): Enable service authorization\n\n    this.server.start();\n    bindAddress \u003d\n        conf.updateConnectAddr(YarnConfiguration.SCM_UPLOADER_SERVER_ADDRESS,\n            server.getListenerAddress());\n\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-sharedcachemanager/src/main/java/org/apache/hadoop/yarn/server/sharedcachemanager/SharedCacheUploaderService.java",
      "extendedDetails": {}
    },
    "256697acd5ec16bca022ae86e22f9882b3309d8b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2186. [YARN-1492] Node Manager uploader service for cache manager. (Chris Trezzo and Sangjin Lee via kasha)\n",
      "commitDate": "31/10/14 1:00 PM",
      "commitName": "256697acd5ec16bca022ae86e22f9882b3309d8b",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,20 @@\n+  protected void serviceStart() throws Exception {\n+    Configuration conf \u003d getConfig();\n+    this.metrics \u003d SharedCacheUploaderMetrics.initSingleton(conf);\n+\n+    YarnRPC rpc \u003d YarnRPC.create(conf);\n+    this.server \u003d\n+        rpc.getServer(SCMUploaderProtocol.class, this, bindAddress,\n+            conf, null, // Secret manager null for now (security not supported)\n+            conf.getInt(YarnConfiguration.SCM_UPLOADER_SERVER_THREAD_COUNT,\n+                YarnConfiguration.DEFAULT_SCM_UPLOADER_SERVER_THREAD_COUNT));\n+\n+    // TODO (YARN-2774): Enable service authorization\n+\n+    this.server.start();\n+    bindAddress \u003d\n+        conf.updateConnectAddr(YarnConfiguration.SCM_UPLOADER_SERVER_ADDRESS,\n+            server.getListenerAddress());\n+\n+    super.serviceStart();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    Configuration conf \u003d getConfig();\n    this.metrics \u003d SharedCacheUploaderMetrics.initSingleton(conf);\n\n    YarnRPC rpc \u003d YarnRPC.create(conf);\n    this.server \u003d\n        rpc.getServer(SCMUploaderProtocol.class, this, bindAddress,\n            conf, null, // Secret manager null for now (security not supported)\n            conf.getInt(YarnConfiguration.SCM_UPLOADER_SERVER_THREAD_COUNT,\n                YarnConfiguration.DEFAULT_SCM_UPLOADER_SERVER_THREAD_COUNT));\n\n    // TODO (YARN-2774): Enable service authorization\n\n    this.server.start();\n    bindAddress \u003d\n        conf.updateConnectAddr(YarnConfiguration.SCM_UPLOADER_SERVER_ADDRESS,\n            server.getListenerAddress());\n\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-sharedcachemanager/src/main/java/org/apache/hadoop/yarn/server/sharedcachemanager/SharedCacheUploaderService.java"
    }
  }
}