{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "loadFromDisk",
  "functionId": "loadFromDisk___conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 766,
  "functionEndLine": 794,
  "numCommitsSeen": 873,
  "timeTaken": 48522,
  "changeHistory": [
    "3dadf369d550c2ae393b751cb5a184dbfe2814df",
    "75ead273bea8a7dad61c4f99c3a16cab2697c498",
    "c780454413caffbc37a02c4252eb5ec7abe57f97",
    "7186000367df5a994e0270690a95ca49fa7b23a0",
    "8c7a7e619699386f9e6991842558d78aa0c8053d",
    "969e84decbc976bd98f1050aead695d15a024ab6",
    "ba688e11c195327d3832610789fdd0cf81a3d0a1",
    "11df1c256171564b0578477c226723358be812c4",
    "f87a4b40bc99e76602a75906df31747cfdbff78a",
    "0e5c1a45bf486f9b4be6afcdb24892d1d20684dc",
    "06e84a1bca19bd01568a3095e33944d4d6387fd3"
  ],
  "changeHistoryShort": {
    "3dadf369d550c2ae393b751cb5a184dbfe2814df": "Ybodychange",
    "75ead273bea8a7dad61c4f99c3a16cab2697c498": "Ybodychange",
    "c780454413caffbc37a02c4252eb5ec7abe57f97": "Ymultichange(Ymodifierchange,Ybodychange)",
    "7186000367df5a994e0270690a95ca49fa7b23a0": "Ybodychange",
    "8c7a7e619699386f9e6991842558d78aa0c8053d": "Ybodychange",
    "969e84decbc976bd98f1050aead695d15a024ab6": "Ybodychange",
    "ba688e11c195327d3832610789fdd0cf81a3d0a1": "Ybodychange",
    "11df1c256171564b0578477c226723358be812c4": "Ybodychange",
    "f87a4b40bc99e76602a75906df31747cfdbff78a": "Ybodychange",
    "0e5c1a45bf486f9b4be6afcdb24892d1d20684dc": "Ybodychange",
    "06e84a1bca19bd01568a3095e33944d4d6387fd3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3dadf369d550c2ae393b751cb5a184dbfe2814df": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7087. Ability to list /.reserved. Contributed by Xiao Chen.\n",
      "commitDate": "21/10/15 4:58 PM",
      "commitName": "3dadf369d550c2ae393b751cb5a184dbfe2814df",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "13/10/15 1:24 PM",
      "commitNameOld": "d1e1925bf6c3cf7fd23ed8df5a5e18677fc299d8",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 8.15,
      "commitsBetweenForRepo": 75,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,29 @@\n   static FSNamesystem loadFromDisk(Configuration conf) throws IOException {\n \n     checkConfiguration(conf);\n     FSImage fsImage \u003d new FSImage(conf,\n         FSNamesystem.getNamespaceDirs(conf),\n         FSNamesystem.getNamespaceEditsDirs(conf));\n     FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage, false);\n     StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n     if (startOpt \u003d\u003d StartupOption.RECOVER) {\n       namesystem.setSafeMode(SafeModeAction.SAFEMODE_ENTER);\n     }\n \n     long loadStart \u003d monotonicNow();\n     try {\n       namesystem.loadFSImage(startOpt);\n     } catch (IOException ioe) {\n       LOG.warn(\"Encountered exception loading fsimage\", ioe);\n       fsImage.close();\n       throw ioe;\n     }\n     long timeTakenToLoadFSImage \u003d monotonicNow() - loadStart;\n     LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n     NameNodeMetrics nnMetrics \u003d NameNode.getNameNodeMetrics();\n     if (nnMetrics !\u003d null) {\n       nnMetrics.setFsImageLoadTime((int) timeTakenToLoadFSImage);\n     }\n+    namesystem.getFSDirectory().createReservedStatuses(namesystem.getCTime());\n     return namesystem;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static FSNamesystem loadFromDisk(Configuration conf) throws IOException {\n\n    checkConfiguration(conf);\n    FSImage fsImage \u003d new FSImage(conf,\n        FSNamesystem.getNamespaceDirs(conf),\n        FSNamesystem.getNamespaceEditsDirs(conf));\n    FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage, false);\n    StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n    if (startOpt \u003d\u003d StartupOption.RECOVER) {\n      namesystem.setSafeMode(SafeModeAction.SAFEMODE_ENTER);\n    }\n\n    long loadStart \u003d monotonicNow();\n    try {\n      namesystem.loadFSImage(startOpt);\n    } catch (IOException ioe) {\n      LOG.warn(\"Encountered exception loading fsimage\", ioe);\n      fsImage.close();\n      throw ioe;\n    }\n    long timeTakenToLoadFSImage \u003d monotonicNow() - loadStart;\n    LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n    NameNodeMetrics nnMetrics \u003d NameNode.getNameNodeMetrics();\n    if (nnMetrics !\u003d null) {\n      nnMetrics.setFsImageLoadTime((int) timeTakenToLoadFSImage);\n    }\n    namesystem.getFSDirectory().createReservedStatuses(namesystem.getCTime());\n    return namesystem;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "75ead273bea8a7dad61c4f99c3a16cab2697c498": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6841. Use Time.monotonicNow() wherever applicable instead of Time.now(). Contributed by Vinayakumar B\n",
      "commitDate": "20/03/15 12:02 PM",
      "commitName": "75ead273bea8a7dad61c4f99c3a16cab2697c498",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "20/03/15 11:50 AM",
      "commitNameOld": "d368d3647a858644b9fcd3be33d9fea2a6962f69",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   static FSNamesystem loadFromDisk(Configuration conf) throws IOException {\n \n     checkConfiguration(conf);\n     FSImage fsImage \u003d new FSImage(conf,\n         FSNamesystem.getNamespaceDirs(conf),\n         FSNamesystem.getNamespaceEditsDirs(conf));\n     FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage, false);\n     StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n     if (startOpt \u003d\u003d StartupOption.RECOVER) {\n       namesystem.setSafeMode(SafeModeAction.SAFEMODE_ENTER);\n     }\n \n-    long loadStart \u003d now();\n+    long loadStart \u003d monotonicNow();\n     try {\n       namesystem.loadFSImage(startOpt);\n     } catch (IOException ioe) {\n       LOG.warn(\"Encountered exception loading fsimage\", ioe);\n       fsImage.close();\n       throw ioe;\n     }\n-    long timeTakenToLoadFSImage \u003d now() - loadStart;\n+    long timeTakenToLoadFSImage \u003d monotonicNow() - loadStart;\n     LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n     NameNodeMetrics nnMetrics \u003d NameNode.getNameNodeMetrics();\n     if (nnMetrics !\u003d null) {\n       nnMetrics.setFsImageLoadTime((int) timeTakenToLoadFSImage);\n     }\n     return namesystem;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static FSNamesystem loadFromDisk(Configuration conf) throws IOException {\n\n    checkConfiguration(conf);\n    FSImage fsImage \u003d new FSImage(conf,\n        FSNamesystem.getNamespaceDirs(conf),\n        FSNamesystem.getNamespaceEditsDirs(conf));\n    FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage, false);\n    StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n    if (startOpt \u003d\u003d StartupOption.RECOVER) {\n      namesystem.setSafeMode(SafeModeAction.SAFEMODE_ENTER);\n    }\n\n    long loadStart \u003d monotonicNow();\n    try {\n      namesystem.loadFSImage(startOpt);\n    } catch (IOException ioe) {\n      LOG.warn(\"Encountered exception loading fsimage\", ioe);\n      fsImage.close();\n      throw ioe;\n    }\n    long timeTakenToLoadFSImage \u003d monotonicNow() - loadStart;\n    LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n    NameNodeMetrics nnMetrics \u003d NameNode.getNameNodeMetrics();\n    if (nnMetrics !\u003d null) {\n      nnMetrics.setFsImageLoadTime((int) timeTakenToLoadFSImage);\n    }\n    return namesystem;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "c780454413caffbc37a02c4252eb5ec7abe57f97": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-5869. When starting rolling upgrade or NN restarts, NN should create a checkpoint right before the upgrade marker.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1565516 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/02/14 6:08 PM",
      "commitName": "c780454413caffbc37a02c4252eb5ec7abe57f97",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-5869. When starting rolling upgrade or NN restarts, NN should create a checkpoint right before the upgrade marker.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1565516 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/02/14 6:08 PM",
          "commitName": "c780454413caffbc37a02c4252eb5ec7abe57f97",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "01/02/14 12:58 AM",
          "commitNameOld": "4f92eb2f613e4de59c2d31a563e16aba4846c61a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 5.71,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,28 @@\n-  public static FSNamesystem loadFromDisk(Configuration conf)\n-      throws IOException {\n+  static FSNamesystem loadFromDisk(Configuration conf) throws IOException {\n \n     checkConfiguration(conf);\n     FSImage fsImage \u003d new FSImage(conf,\n         FSNamesystem.getNamespaceDirs(conf),\n         FSNamesystem.getNamespaceEditsDirs(conf));\n     FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage, false);\n     StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n     if (startOpt \u003d\u003d StartupOption.RECOVER) {\n       namesystem.setSafeMode(SafeModeAction.SAFEMODE_ENTER);\n     }\n \n     long loadStart \u003d now();\n-    String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n     try {\n-      namesystem.loadFSImage(startOpt, fsImage,\n-        HAUtil.isHAEnabled(conf, nameserviceId));\n+      namesystem.loadFSImage(startOpt);\n     } catch (IOException ioe) {\n       LOG.warn(\"Encountered exception loading fsimage\", ioe);\n       fsImage.close();\n       throw ioe;\n     }\n     long timeTakenToLoadFSImage \u003d now() - loadStart;\n     LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n     NameNodeMetrics nnMetrics \u003d NameNode.getNameNodeMetrics();\n     if (nnMetrics !\u003d null) {\n       nnMetrics.setFsImageLoadTime((int) timeTakenToLoadFSImage);\n     }\n     return namesystem;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static FSNamesystem loadFromDisk(Configuration conf) throws IOException {\n\n    checkConfiguration(conf);\n    FSImage fsImage \u003d new FSImage(conf,\n        FSNamesystem.getNamespaceDirs(conf),\n        FSNamesystem.getNamespaceEditsDirs(conf));\n    FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage, false);\n    StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n    if (startOpt \u003d\u003d StartupOption.RECOVER) {\n      namesystem.setSafeMode(SafeModeAction.SAFEMODE_ENTER);\n    }\n\n    long loadStart \u003d now();\n    try {\n      namesystem.loadFSImage(startOpt);\n    } catch (IOException ioe) {\n      LOG.warn(\"Encountered exception loading fsimage\", ioe);\n      fsImage.close();\n      throw ioe;\n    }\n    long timeTakenToLoadFSImage \u003d now() - loadStart;\n    LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n    NameNodeMetrics nnMetrics \u003d NameNode.getNameNodeMetrics();\n    if (nnMetrics !\u003d null) {\n      nnMetrics.setFsImageLoadTime((int) timeTakenToLoadFSImage);\n    }\n    return namesystem;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5869. When starting rolling upgrade or NN restarts, NN should create a checkpoint right before the upgrade marker.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1565516 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/02/14 6:08 PM",
          "commitName": "c780454413caffbc37a02c4252eb5ec7abe57f97",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "01/02/14 12:58 AM",
          "commitNameOld": "4f92eb2f613e4de59c2d31a563e16aba4846c61a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 5.71,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,28 @@\n-  public static FSNamesystem loadFromDisk(Configuration conf)\n-      throws IOException {\n+  static FSNamesystem loadFromDisk(Configuration conf) throws IOException {\n \n     checkConfiguration(conf);\n     FSImage fsImage \u003d new FSImage(conf,\n         FSNamesystem.getNamespaceDirs(conf),\n         FSNamesystem.getNamespaceEditsDirs(conf));\n     FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage, false);\n     StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n     if (startOpt \u003d\u003d StartupOption.RECOVER) {\n       namesystem.setSafeMode(SafeModeAction.SAFEMODE_ENTER);\n     }\n \n     long loadStart \u003d now();\n-    String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n     try {\n-      namesystem.loadFSImage(startOpt, fsImage,\n-        HAUtil.isHAEnabled(conf, nameserviceId));\n+      namesystem.loadFSImage(startOpt);\n     } catch (IOException ioe) {\n       LOG.warn(\"Encountered exception loading fsimage\", ioe);\n       fsImage.close();\n       throw ioe;\n     }\n     long timeTakenToLoadFSImage \u003d now() - loadStart;\n     LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n     NameNodeMetrics nnMetrics \u003d NameNode.getNameNodeMetrics();\n     if (nnMetrics !\u003d null) {\n       nnMetrics.setFsImageLoadTime((int) timeTakenToLoadFSImage);\n     }\n     return namesystem;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static FSNamesystem loadFromDisk(Configuration conf) throws IOException {\n\n    checkConfiguration(conf);\n    FSImage fsImage \u003d new FSImage(conf,\n        FSNamesystem.getNamespaceDirs(conf),\n        FSNamesystem.getNamespaceEditsDirs(conf));\n    FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage, false);\n    StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n    if (startOpt \u003d\u003d StartupOption.RECOVER) {\n      namesystem.setSafeMode(SafeModeAction.SAFEMODE_ENTER);\n    }\n\n    long loadStart \u003d now();\n    try {\n      namesystem.loadFSImage(startOpt);\n    } catch (IOException ioe) {\n      LOG.warn(\"Encountered exception loading fsimage\", ioe);\n      fsImage.close();\n      throw ioe;\n    }\n    long timeTakenToLoadFSImage \u003d now() - loadStart;\n    LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n    NameNodeMetrics nnMetrics \u003d NameNode.getNameNodeMetrics();\n    if (nnMetrics !\u003d null) {\n      nnMetrics.setFsImageLoadTime((int) timeTakenToLoadFSImage);\n    }\n    return namesystem;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "7186000367df5a994e0270690a95ca49fa7b23a0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5721. sharedEditsImage in Namenode#initializeSharedEdits() should be closed before method returns. (Ted Yu via junping_du)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556803 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/01/14 5:33 AM",
      "commitName": "7186000367df5a994e0270690a95ca49fa7b23a0",
      "commitAuthor": "Junping Du",
      "commitDateOld": "07/01/14 2:27 PM",
      "commitNameOld": "53b27fc60b1f46239effb2bf234053f54ba5cdc1",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 1.63,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,31 @@\n   public static FSNamesystem loadFromDisk(Configuration conf)\n       throws IOException {\n \n     checkConfiguration(conf);\n     FSImage fsImage \u003d new FSImage(conf,\n         FSNamesystem.getNamespaceDirs(conf),\n         FSNamesystem.getNamespaceEditsDirs(conf));\n     FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage, false);\n     StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n     if (startOpt \u003d\u003d StartupOption.RECOVER) {\n       namesystem.setSafeMode(SafeModeAction.SAFEMODE_ENTER);\n     }\n \n     long loadStart \u003d now();\n     String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n-    namesystem.loadFSImage(startOpt, fsImage,\n-      HAUtil.isHAEnabled(conf, nameserviceId));\n+    try {\n+      namesystem.loadFSImage(startOpt, fsImage,\n+        HAUtil.isHAEnabled(conf, nameserviceId));\n+    } catch (IOException ioe) {\n+      LOG.warn(\"Encountered exception loading fsimage\", ioe);\n+      fsImage.close();\n+      throw ioe;\n+    }\n     long timeTakenToLoadFSImage \u003d now() - loadStart;\n     LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n     NameNodeMetrics nnMetrics \u003d NameNode.getNameNodeMetrics();\n     if (nnMetrics !\u003d null) {\n       nnMetrics.setFsImageLoadTime((int) timeTakenToLoadFSImage);\n     }\n     return namesystem;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FSNamesystem loadFromDisk(Configuration conf)\n      throws IOException {\n\n    checkConfiguration(conf);\n    FSImage fsImage \u003d new FSImage(conf,\n        FSNamesystem.getNamespaceDirs(conf),\n        FSNamesystem.getNamespaceEditsDirs(conf));\n    FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage, false);\n    StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n    if (startOpt \u003d\u003d StartupOption.RECOVER) {\n      namesystem.setSafeMode(SafeModeAction.SAFEMODE_ENTER);\n    }\n\n    long loadStart \u003d now();\n    String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n    try {\n      namesystem.loadFSImage(startOpt, fsImage,\n        HAUtil.isHAEnabled(conf, nameserviceId));\n    } catch (IOException ioe) {\n      LOG.warn(\"Encountered exception loading fsimage\", ioe);\n      fsImage.close();\n      throw ioe;\n    }\n    long timeTakenToLoadFSImage \u003d now() - loadStart;\n    LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n    NameNodeMetrics nnMetrics \u003d NameNode.getNameNodeMetrics();\n    if (nnMetrics !\u003d null) {\n      nnMetrics.setFsImageLoadTime((int) timeTakenToLoadFSImage);\n    }\n    return namesystem;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "8c7a7e619699386f9e6991842558d78aa0c8053d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5025. Record ClientId and CallId in EditLog to enable rebuilding retry cache in case of HA failover. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/07/13 12:51 AM",
      "commitName": "8c7a7e619699386f9e6991842558d78aa0c8053d",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "26/07/13 4:59 PM",
      "commitNameOld": "dc17bda4b677e30c02c2a9a053895a43e41f7a12",
      "commitAuthorOld": "Konstantin Boudnik",
      "daysBetweenCommits": 3.33,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public static FSNamesystem loadFromDisk(Configuration conf)\n       throws IOException {\n \n     checkConfiguration(conf);\n     FSImage fsImage \u003d new FSImage(conf,\n         FSNamesystem.getNamespaceDirs(conf),\n         FSNamesystem.getNamespaceEditsDirs(conf));\n-    FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage);\n+    FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage, false);\n     StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n     if (startOpt \u003d\u003d StartupOption.RECOVER) {\n       namesystem.setSafeMode(SafeModeAction.SAFEMODE_ENTER);\n     }\n \n     long loadStart \u003d now();\n     String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n     namesystem.loadFSImage(startOpt, fsImage,\n       HAUtil.isHAEnabled(conf, nameserviceId));\n     long timeTakenToLoadFSImage \u003d now() - loadStart;\n     LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n     NameNodeMetrics nnMetrics \u003d NameNode.getNameNodeMetrics();\n     if (nnMetrics !\u003d null) {\n       nnMetrics.setFsImageLoadTime((int) timeTakenToLoadFSImage);\n     }\n     return namesystem;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FSNamesystem loadFromDisk(Configuration conf)\n      throws IOException {\n\n    checkConfiguration(conf);\n    FSImage fsImage \u003d new FSImage(conf,\n        FSNamesystem.getNamespaceDirs(conf),\n        FSNamesystem.getNamespaceEditsDirs(conf));\n    FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage, false);\n    StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n    if (startOpt \u003d\u003d StartupOption.RECOVER) {\n      namesystem.setSafeMode(SafeModeAction.SAFEMODE_ENTER);\n    }\n\n    long loadStart \u003d now();\n    String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n    namesystem.loadFSImage(startOpt, fsImage,\n      HAUtil.isHAEnabled(conf, nameserviceId));\n    long timeTakenToLoadFSImage \u003d now() - loadStart;\n    LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n    NameNodeMetrics nnMetrics \u003d NameNode.getNameNodeMetrics();\n    if (nnMetrics !\u003d null) {\n      nnMetrics.setFsImageLoadTime((int) timeTakenToLoadFSImage);\n    }\n    return namesystem;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "969e84decbc976bd98f1050aead695d15a024ab6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4342. Directories configured in dfs.namenode.edits.dir.required but not in dfs.namenode.edits.dir are silently ignored.  Contributed by Arpit Agarwal\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1445006 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/02/13 4:50 PM",
      "commitName": "969e84decbc976bd98f1050aead695d15a024ab6",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "06/02/13 11:52 AM",
      "commitNameOld": "4525c4a25ba90163c9543116e2bd54239e0dd097",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 5.21,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,25 @@\n   public static FSNamesystem loadFromDisk(Configuration conf)\n       throws IOException {\n-    Collection\u003cURI\u003e namespaceDirs \u003d FSNamesystem.getNamespaceDirs(conf);\n-    List\u003cURI\u003e namespaceEditsDirs \u003d \n-      FSNamesystem.getNamespaceEditsDirs(conf);\n-    return loadFromDisk(conf, namespaceDirs, namespaceEditsDirs);\n+\n+    checkConfiguration(conf);\n+    FSImage fsImage \u003d new FSImage(conf,\n+        FSNamesystem.getNamespaceDirs(conf),\n+        FSNamesystem.getNamespaceEditsDirs(conf));\n+    FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage);\n+    StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n+    if (startOpt \u003d\u003d StartupOption.RECOVER) {\n+      namesystem.setSafeMode(SafeModeAction.SAFEMODE_ENTER);\n+    }\n+\n+    long loadStart \u003d now();\n+    String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n+    namesystem.loadFSImage(startOpt, fsImage,\n+      HAUtil.isHAEnabled(conf, nameserviceId));\n+    long timeTakenToLoadFSImage \u003d now() - loadStart;\n+    LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n+    NameNodeMetrics nnMetrics \u003d NameNode.getNameNodeMetrics();\n+    if (nnMetrics !\u003d null) {\n+      nnMetrics.setFsImageLoadTime((int) timeTakenToLoadFSImage);\n+    }\n+    return namesystem;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FSNamesystem loadFromDisk(Configuration conf)\n      throws IOException {\n\n    checkConfiguration(conf);\n    FSImage fsImage \u003d new FSImage(conf,\n        FSNamesystem.getNamespaceDirs(conf),\n        FSNamesystem.getNamespaceEditsDirs(conf));\n    FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage);\n    StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n    if (startOpt \u003d\u003d StartupOption.RECOVER) {\n      namesystem.setSafeMode(SafeModeAction.SAFEMODE_ENTER);\n    }\n\n    long loadStart \u003d now();\n    String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n    namesystem.loadFSImage(startOpt, fsImage,\n      HAUtil.isHAEnabled(conf, nameserviceId));\n    long timeTakenToLoadFSImage \u003d now() - loadStart;\n    LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n    NameNodeMetrics nnMetrics \u003d NameNode.getNameNodeMetrics();\n    if (nnMetrics !\u003d null) {\n      nnMetrics.setFsImageLoadTime((int) timeTakenToLoadFSImage);\n    }\n    return namesystem;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "ba688e11c195327d3832610789fdd0cf81a3d0a1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3102. Add CLI tool to initialize the shared-edits dir. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1309580 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/04/12 1:15 PM",
      "commitName": "ba688e11c195327d3832610789fdd0cf81a3d0a1",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "03/04/12 7:51 PM",
      "commitNameOld": "8c0366bf103ca638b5ef9e962671f7728db4fd10",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.72,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,7 @@\n   public static FSNamesystem loadFromDisk(Configuration conf)\n-    throws IOException {\n+      throws IOException {\n     Collection\u003cURI\u003e namespaceDirs \u003d FSNamesystem.getNamespaceDirs(conf);\n     List\u003cURI\u003e namespaceEditsDirs \u003d \n       FSNamesystem.getNamespaceEditsDirs(conf);\n-\n-    if (namespaceDirs.size() \u003d\u003d 1) {\n-      LOG.warn(\"Only one \" + DFS_NAMENODE_NAME_DIR_KEY\n-          + \" directory configured , beware data loss!\");\n-    }\n-    if (namespaceEditsDirs.size() \u003d\u003d 1) {\n-      LOG.warn(\"Only one \" + DFS_NAMENODE_EDITS_DIR_KEY\n-          + \" directory configured , beware data loss!\");\n-    }\n-\n-    FSImage fsImage \u003d new FSImage(conf, namespaceDirs, namespaceEditsDirs);\n-    FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage);\n-\n-    long loadStart \u003d now();\n-    StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n-    String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n-    namesystem.loadFSImage(startOpt, fsImage,\n-      HAUtil.isHAEnabled(conf, nameserviceId));\n-    long timeTakenToLoadFSImage \u003d now() - loadStart;\n-    LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n-    NameNode.getNameNodeMetrics().setFsImageLoadTime(\n-                              (int) timeTakenToLoadFSImage);\n-    return namesystem;\n+    return loadFromDisk(conf, namespaceDirs, namespaceEditsDirs);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FSNamesystem loadFromDisk(Configuration conf)\n      throws IOException {\n    Collection\u003cURI\u003e namespaceDirs \u003d FSNamesystem.getNamespaceDirs(conf);\n    List\u003cURI\u003e namespaceEditsDirs \u003d \n      FSNamesystem.getNamespaceEditsDirs(conf);\n    return loadFromDisk(conf, namespaceDirs, namespaceEditsDirs);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "11df1c256171564b0578477c226723358be812c4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2874. Edit log should log to shared dirs before local dirs. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1240445 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/02/12 6:52 PM",
      "commitName": "11df1c256171564b0578477c226723358be812c4",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "03/02/12 10:04 AM",
      "commitNameOld": "969318cfc2397110a686a0a728b56b6a0cab9f4d",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.37,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   public static FSNamesystem loadFromDisk(Configuration conf)\n     throws IOException {\n     Collection\u003cURI\u003e namespaceDirs \u003d FSNamesystem.getNamespaceDirs(conf);\n-    Collection\u003cURI\u003e namespaceEditsDirs \u003d \n+    List\u003cURI\u003e namespaceEditsDirs \u003d \n       FSNamesystem.getNamespaceEditsDirs(conf);\n \n     if (namespaceDirs.size() \u003d\u003d 1) {\n       LOG.warn(\"Only one \" + DFS_NAMENODE_NAME_DIR_KEY\n           + \" directory configured , beware data loss!\");\n     }\n     if (namespaceEditsDirs.size() \u003d\u003d 1) {\n       LOG.warn(\"Only one \" + DFS_NAMENODE_EDITS_DIR_KEY\n           + \" directory configured , beware data loss!\");\n     }\n \n     FSImage fsImage \u003d new FSImage(conf, namespaceDirs, namespaceEditsDirs);\n     FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage);\n \n     long loadStart \u003d now();\n     StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n     String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n     namesystem.loadFSImage(startOpt, fsImage,\n       HAUtil.isHAEnabled(conf, nameserviceId));\n     long timeTakenToLoadFSImage \u003d now() - loadStart;\n     LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n     NameNode.getNameNodeMetrics().setFsImageLoadTime(\n                               (int) timeTakenToLoadFSImage);\n     return namesystem;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FSNamesystem loadFromDisk(Configuration conf)\n    throws IOException {\n    Collection\u003cURI\u003e namespaceDirs \u003d FSNamesystem.getNamespaceDirs(conf);\n    List\u003cURI\u003e namespaceEditsDirs \u003d \n      FSNamesystem.getNamespaceEditsDirs(conf);\n\n    if (namespaceDirs.size() \u003d\u003d 1) {\n      LOG.warn(\"Only one \" + DFS_NAMENODE_NAME_DIR_KEY\n          + \" directory configured , beware data loss!\");\n    }\n    if (namespaceEditsDirs.size() \u003d\u003d 1) {\n      LOG.warn(\"Only one \" + DFS_NAMENODE_EDITS_DIR_KEY\n          + \" directory configured , beware data loss!\");\n    }\n\n    FSImage fsImage \u003d new FSImage(conf, namespaceDirs, namespaceEditsDirs);\n    FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage);\n\n    long loadStart \u003d now();\n    StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n    String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n    namesystem.loadFSImage(startOpt, fsImage,\n      HAUtil.isHAEnabled(conf, nameserviceId));\n    long timeTakenToLoadFSImage \u003d now() - loadStart;\n    LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n    NameNode.getNameNodeMetrics().setFsImageLoadTime(\n                              (int) timeTakenToLoadFSImage);\n    return namesystem;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "f87a4b40bc99e76602a75906df31747cfdbff78a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-1975. Support for sharing the namenode state from active to standby. Contributed by Jitendra Nath Pandey, Aaron T Myers, and Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208813 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/11 1:46 PM",
      "commitName": "f87a4b40bc99e76602a75906df31747cfdbff78a",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "23/11/11 4:55 PM",
      "commitNameOld": "5f5b3bbdcd091fc6d14401eebc9c41204bad2325",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 6.87,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,29 @@\n-  public static FSNamesystem loadFromDisk(Configuration conf) throws IOException {\n+  public static FSNamesystem loadFromDisk(Configuration conf)\n+    throws IOException {\n     Collection\u003cURI\u003e namespaceDirs \u003d FSNamesystem.getNamespaceDirs(conf);\n     Collection\u003cURI\u003e namespaceEditsDirs \u003d \n       FSNamesystem.getNamespaceEditsDirs(conf);\n \n     if (namespaceDirs.size() \u003d\u003d 1) {\n       LOG.warn(\"Only one \" + DFS_NAMENODE_NAME_DIR_KEY\n           + \" directory configured , beware data loss!\");\n     }\n     if (namespaceEditsDirs.size() \u003d\u003d 1) {\n       LOG.warn(\"Only one \" + DFS_NAMENODE_EDITS_DIR_KEY\n           + \" directory configured , beware data loss!\");\n     }\n \n     FSImage fsImage \u003d new FSImage(conf, namespaceDirs, namespaceEditsDirs);\n     FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage);\n \n     long loadStart \u003d now();\n     StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n-    namesystem.loadFSImage(startOpt, fsImage);\n+    String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n+    namesystem.loadFSImage(startOpt, fsImage,\n+      HAUtil.isHAEnabled(conf, nameserviceId));\n     long timeTakenToLoadFSImage \u003d now() - loadStart;\n     LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n     NameNode.getNameNodeMetrics().setFsImageLoadTime(\n                               (int) timeTakenToLoadFSImage);\n     return namesystem;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FSNamesystem loadFromDisk(Configuration conf)\n    throws IOException {\n    Collection\u003cURI\u003e namespaceDirs \u003d FSNamesystem.getNamespaceDirs(conf);\n    Collection\u003cURI\u003e namespaceEditsDirs \u003d \n      FSNamesystem.getNamespaceEditsDirs(conf);\n\n    if (namespaceDirs.size() \u003d\u003d 1) {\n      LOG.warn(\"Only one \" + DFS_NAMENODE_NAME_DIR_KEY\n          + \" directory configured , beware data loss!\");\n    }\n    if (namespaceEditsDirs.size() \u003d\u003d 1) {\n      LOG.warn(\"Only one \" + DFS_NAMENODE_EDITS_DIR_KEY\n          + \" directory configured , beware data loss!\");\n    }\n\n    FSImage fsImage \u003d new FSImage(conf, namespaceDirs, namespaceEditsDirs);\n    FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage);\n\n    long loadStart \u003d now();\n    StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n    String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n    namesystem.loadFSImage(startOpt, fsImage,\n      HAUtil.isHAEnabled(conf, nameserviceId));\n    long timeTakenToLoadFSImage \u003d now() - loadStart;\n    LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n    NameNode.getNameNodeMetrics().setFsImageLoadTime(\n                              (int) timeTakenToLoadFSImage);\n    return namesystem;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "0e5c1a45bf486f9b4be6afcdb24892d1d20684dc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-208. name node should warn if only one dir is listed in dfs.name.dir. Contributed by Uma Maheswara Rao G\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1204119 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/11/11 7:38 PM",
      "commitName": "0e5c1a45bf486f9b4be6afcdb24892d1d20684dc",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "18/11/11 6:34 PM",
      "commitNameOld": "b7cd8c0f865e88e40eee75fd2690b1fdc4155071",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 1.04,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,26 @@\n   public static FSNamesystem loadFromDisk(Configuration conf) throws IOException {\n-    FSImage fsImage \u003d new FSImage(conf);\n+    Collection\u003cURI\u003e namespaceDirs \u003d FSNamesystem.getNamespaceDirs(conf);\n+    Collection\u003cURI\u003e namespaceEditsDirs \u003d \n+      FSNamesystem.getNamespaceEditsDirs(conf);\n+\n+    if (namespaceDirs.size() \u003d\u003d 1) {\n+      LOG.warn(\"Only one \" + DFS_NAMENODE_NAME_DIR_KEY\n+          + \" directory configured , beware data loss!\");\n+    }\n+    if (namespaceEditsDirs.size() \u003d\u003d 1) {\n+      LOG.warn(\"Only one \" + DFS_NAMENODE_EDITS_DIR_KEY\n+          + \" directory configured , beware data loss!\");\n+    }\n+\n+    FSImage fsImage \u003d new FSImage(conf, namespaceDirs, namespaceEditsDirs);\n     FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage);\n \n     long loadStart \u003d now();\n     StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n     namesystem.loadFSImage(startOpt, fsImage);\n     long timeTakenToLoadFSImage \u003d now() - loadStart;\n     LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n     NameNode.getNameNodeMetrics().setFsImageLoadTime(\n                               (int) timeTakenToLoadFSImage);\n     return namesystem;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FSNamesystem loadFromDisk(Configuration conf) throws IOException {\n    Collection\u003cURI\u003e namespaceDirs \u003d FSNamesystem.getNamespaceDirs(conf);\n    Collection\u003cURI\u003e namespaceEditsDirs \u003d \n      FSNamesystem.getNamespaceEditsDirs(conf);\n\n    if (namespaceDirs.size() \u003d\u003d 1) {\n      LOG.warn(\"Only one \" + DFS_NAMENODE_NAME_DIR_KEY\n          + \" directory configured , beware data loss!\");\n    }\n    if (namespaceEditsDirs.size() \u003d\u003d 1) {\n      LOG.warn(\"Only one \" + DFS_NAMENODE_EDITS_DIR_KEY\n          + \" directory configured , beware data loss!\");\n    }\n\n    FSImage fsImage \u003d new FSImage(conf, namespaceDirs, namespaceEditsDirs);\n    FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage);\n\n    long loadStart \u003d now();\n    StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n    namesystem.loadFSImage(startOpt, fsImage);\n    long timeTakenToLoadFSImage \u003d now() - loadStart;\n    LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n    NameNode.getNameNodeMetrics().setFsImageLoadTime(\n                              (int) timeTakenToLoadFSImage);\n    return namesystem;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "06e84a1bca19bd01568a3095e33944d4d6387fd3": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2223. Untangle depencencies between NN components. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166466 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/09/11 4:23 PM",
      "commitName": "06e84a1bca19bd01568a3095e33944d4d6387fd3",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,13 @@\n+  public static FSNamesystem loadFromDisk(Configuration conf) throws IOException {\n+    FSImage fsImage \u003d new FSImage(conf);\n+    FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage);\n+\n+    long loadStart \u003d now();\n+    StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n+    namesystem.loadFSImage(startOpt, fsImage);\n+    long timeTakenToLoadFSImage \u003d now() - loadStart;\n+    LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n+    NameNode.getNameNodeMetrics().setFsImageLoadTime(\n+                              (int) timeTakenToLoadFSImage);\n+    return namesystem;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static FSNamesystem loadFromDisk(Configuration conf) throws IOException {\n    FSImage fsImage \u003d new FSImage(conf);\n    FSNamesystem namesystem \u003d new FSNamesystem(conf, fsImage);\n\n    long loadStart \u003d now();\n    StartupOption startOpt \u003d NameNode.getStartupOption(conf);\n    namesystem.loadFSImage(startOpt, fsImage);\n    long timeTakenToLoadFSImage \u003d now() - loadStart;\n    LOG.info(\"Finished loading FSImage in \" + timeTakenToLoadFSImage + \" msecs\");\n    NameNode.getNameNodeMetrics().setFsImageLoadTime(\n                              (int) timeTakenToLoadFSImage);\n    return namesystem;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}