{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirXAttrOp.java",
  "functionName": "listXAttrs",
  "functionId": "listXAttrs___fsd-FSDirectory__pc-FSPermissionChecker__src-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
  "functionStartLine": 139,
  "functionEndLine": 150,
  "numCommitsSeen": 49,
  "timeTaken": 4247,
  "changeHistory": [
    "84a1321f6aa0af6895564a7c47f8f264656f0294",
    "da59acd8ca9ab5b49b988ffca64e8cce91c5f741",
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
    "869393643de23dcb010cc33091c8eb398de0fd6c",
    "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
    "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9"
  ],
  "changeHistoryShort": {
    "84a1321f6aa0af6895564a7c47f8f264656f0294": "Ymultichange(Yparameterchange,Ybodychange)",
    "da59acd8ca9ab5b49b988ffca64e8cce91c5f741": "Ybodychange",
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": "Ybodychange",
    "869393643de23dcb010cc33091c8eb398de0fd6c": "Ybodychange",
    "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2": "Ybodychange",
    "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "84a1321f6aa0af6895564a7c47f8f264656f0294": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
      "commitDate": "22/02/18 11:32 AM",
      "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
      "commitAuthor": "Xiaoyu Yao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
          "commitDate": "22/02/18 11:32 AM",
          "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
          "commitAuthor": "Xiaoyu Yao",
          "commitDateOld": "15/02/18 9:11 AM",
          "commitNameOld": "da59acd8ca9ab5b49b988ffca64e8cce91c5f741",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 7.1,
          "commitsBetweenForRepo": 38,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,12 @@\n   static List\u003cXAttr\u003e listXAttrs(\n-      FSDirectory fsd, String src) throws IOException {\n+      FSDirectory fsd, FSPermissionChecker pc, String src) throws IOException {\n     FSDirXAttrOp.checkXAttrsConfigFlag(fsd);\n-    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n     final INodesInPath iip \u003d fsd.resolvePath(pc, src, DirOp.READ);\n     if (fsd.isPermissionEnabled()) {\n       fsd.checkPathAccess(pc, iip, FsAction.READ);\n     }\n     final List\u003cXAttr\u003e all \u003d FSDirXAttrOp.getXAttrs(fsd, iip);\n     return XAttrPermissionFilter.\n         filterXAttrsForApi(pc, all, isRawPath);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cXAttr\u003e listXAttrs(\n      FSDirectory fsd, FSPermissionChecker pc, String src) throws IOException {\n    FSDirXAttrOp.checkXAttrsConfigFlag(fsd);\n    final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n    final INodesInPath iip \u003d fsd.resolvePath(pc, src, DirOp.READ);\n    if (fsd.isPermissionEnabled()) {\n      fsd.checkPathAccess(pc, iip, FsAction.READ);\n    }\n    final List\u003cXAttr\u003e all \u003d FSDirXAttrOp.getXAttrs(fsd, iip);\n    return XAttrPermissionFilter.\n        filterXAttrsForApi(pc, all, isRawPath);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
          "extendedDetails": {
            "oldValue": "[fsd-FSDirectory, src-String]",
            "newValue": "[fsd-FSDirectory, pc-FSPermissionChecker, src-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
          "commitDate": "22/02/18 11:32 AM",
          "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
          "commitAuthor": "Xiaoyu Yao",
          "commitDateOld": "15/02/18 9:11 AM",
          "commitNameOld": "da59acd8ca9ab5b49b988ffca64e8cce91c5f741",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 7.1,
          "commitsBetweenForRepo": 38,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,12 @@\n   static List\u003cXAttr\u003e listXAttrs(\n-      FSDirectory fsd, String src) throws IOException {\n+      FSDirectory fsd, FSPermissionChecker pc, String src) throws IOException {\n     FSDirXAttrOp.checkXAttrsConfigFlag(fsd);\n-    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n     final INodesInPath iip \u003d fsd.resolvePath(pc, src, DirOp.READ);\n     if (fsd.isPermissionEnabled()) {\n       fsd.checkPathAccess(pc, iip, FsAction.READ);\n     }\n     final List\u003cXAttr\u003e all \u003d FSDirXAttrOp.getXAttrs(fsd, iip);\n     return XAttrPermissionFilter.\n         filterXAttrsForApi(pc, all, isRawPath);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cXAttr\u003e listXAttrs(\n      FSDirectory fsd, FSPermissionChecker pc, String src) throws IOException {\n    FSDirXAttrOp.checkXAttrsConfigFlag(fsd);\n    final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n    final INodesInPath iip \u003d fsd.resolvePath(pc, src, DirOp.READ);\n    if (fsd.isPermissionEnabled()) {\n      fsd.checkPathAccess(pc, iip, FsAction.READ);\n    }\n    final List\u003cXAttr\u003e all \u003d FSDirXAttrOp.getXAttrs(fsd, iip);\n    return XAttrPermissionFilter.\n        filterXAttrsForApi(pc, all, isRawPath);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "da59acd8ca9ab5b49b988ffca64e8cce91c5f741": {
      "type": "Ybodychange",
      "commitMessage": "xattr api cleanup\n",
      "commitDate": "15/02/18 9:11 AM",
      "commitName": "da59acd8ca9ab5b49b988ffca64e8cce91c5f741",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "02/10/17 3:35 PM",
      "commitNameOld": "27ffd43b6419c9ebe697536bcb6abb858ce791d2",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 135.78,
      "commitsBetweenForRepo": 929,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,13 @@\n   static List\u003cXAttr\u003e listXAttrs(\n       FSDirectory fsd, String src) throws IOException {\n     FSDirXAttrOp.checkXAttrsConfigFlag(fsd);\n     final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n     final INodesInPath iip \u003d fsd.resolvePath(pc, src, DirOp.READ);\n     if (fsd.isPermissionEnabled()) {\n-      /* To access xattr names, you need EXECUTE in the owning directory. */\n-      fsd.checkParentAccess(pc, iip, FsAction.EXECUTE);\n+      fsd.checkPathAccess(pc, iip, FsAction.READ);\n     }\n     final List\u003cXAttr\u003e all \u003d FSDirXAttrOp.getXAttrs(fsd, iip);\n     return XAttrPermissionFilter.\n         filterXAttrsForApi(pc, all, isRawPath);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cXAttr\u003e listXAttrs(\n      FSDirectory fsd, String src) throws IOException {\n    FSDirXAttrOp.checkXAttrsConfigFlag(fsd);\n    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n    final INodesInPath iip \u003d fsd.resolvePath(pc, src, DirOp.READ);\n    if (fsd.isPermissionEnabled()) {\n      fsd.checkPathAccess(pc, iip, FsAction.READ);\n    }\n    final List\u003cXAttr\u003e all \u003d FSDirXAttrOp.getXAttrs(fsd, iip);\n    return XAttrPermissionFilter.\n        filterXAttrsForApi(pc, all, isRawPath);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
      "extendedDetails": {}
    },
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
      "commitDate": "24/10/16 3:14 PM",
      "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "06/10/16 1:11 PM",
      "commitNameOld": "f32e9fc8f7150f0e889c0774b3ad712af26fbd65",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 18.09,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   static List\u003cXAttr\u003e listXAttrs(\n       FSDirectory fsd, String src) throws IOException {\n     FSDirXAttrOp.checkXAttrsConfigFlag(fsd);\n     final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n-    final INodesInPath iip \u003d fsd.resolvePath(pc, src);\n+    final INodesInPath iip \u003d fsd.resolvePath(pc, src, DirOp.READ);\n     if (fsd.isPermissionEnabled()) {\n       /* To access xattr names, you need EXECUTE in the owning directory. */\n       fsd.checkParentAccess(pc, iip, FsAction.EXECUTE);\n     }\n     final List\u003cXAttr\u003e all \u003d FSDirXAttrOp.getXAttrs(fsd, iip);\n     return XAttrPermissionFilter.\n         filterXAttrsForApi(pc, all, isRawPath);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cXAttr\u003e listXAttrs(\n      FSDirectory fsd, String src) throws IOException {\n    FSDirXAttrOp.checkXAttrsConfigFlag(fsd);\n    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n    final INodesInPath iip \u003d fsd.resolvePath(pc, src, DirOp.READ);\n    if (fsd.isPermissionEnabled()) {\n      /* To access xattr names, you need EXECUTE in the owning directory. */\n      fsd.checkParentAccess(pc, iip, FsAction.EXECUTE);\n    }\n    final List\u003cXAttr\u003e all \u003d FSDirXAttrOp.getXAttrs(fsd, iip);\n    return XAttrPermissionFilter.\n        filterXAttrsForApi(pc, all, isRawPath);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
      "extendedDetails": {}
    },
    "869393643de23dcb010cc33091c8eb398de0fd6c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10745. Directly resolve paths into INodesInPath. Contributed by Daryn Sharp.\n",
      "commitDate": "17/08/16 1:53 PM",
      "commitName": "869393643de23dcb010cc33091c8eb398de0fd6c",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "15/08/16 2:45 PM",
      "commitNameOld": "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 1.96,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,14 @@\n   static List\u003cXAttr\u003e listXAttrs(\n       FSDirectory fsd, String src) throws IOException {\n     FSDirXAttrOp.checkXAttrsConfigFlag(fsd);\n     final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n-    src \u003d fsd.resolvePath(pc, src);\n-    final INodesInPath iip \u003d fsd.getINodesInPath(src, true);\n+    final INodesInPath iip \u003d fsd.resolvePath(pc, src);\n     if (fsd.isPermissionEnabled()) {\n       /* To access xattr names, you need EXECUTE in the owning directory. */\n       fsd.checkParentAccess(pc, iip, FsAction.EXECUTE);\n     }\n-    final List\u003cXAttr\u003e all \u003d FSDirXAttrOp.getXAttrs(fsd, src);\n+    final List\u003cXAttr\u003e all \u003d FSDirXAttrOp.getXAttrs(fsd, iip);\n     return XAttrPermissionFilter.\n         filterXAttrsForApi(pc, all, isRawPath);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cXAttr\u003e listXAttrs(\n      FSDirectory fsd, String src) throws IOException {\n    FSDirXAttrOp.checkXAttrsConfigFlag(fsd);\n    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n    final INodesInPath iip \u003d fsd.resolvePath(pc, src);\n    if (fsd.isPermissionEnabled()) {\n      /* To access xattr names, you need EXECUTE in the owning directory. */\n      fsd.checkParentAccess(pc, iip, FsAction.EXECUTE);\n    }\n    final List\u003cXAttr\u003e all \u003d FSDirXAttrOp.getXAttrs(fsd, iip);\n    return XAttrPermissionFilter.\n        filterXAttrsForApi(pc, all, isRawPath);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
      "extendedDetails": {}
    },
    "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10744. Internally optimize path component resolution. Contributed by Daryn Sharp.\n",
      "commitDate": "15/08/16 2:45 PM",
      "commitName": "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "04/08/16 7:07 AM",
      "commitNameOld": "6ae39199dac6ac7be6802b31452552c76da16e24",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 11.32,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,15 @@\n   static List\u003cXAttr\u003e listXAttrs(\n       FSDirectory fsd, String src) throws IOException {\n     FSDirXAttrOp.checkXAttrsConfigFlag(fsd);\n     final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n-    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n-    src \u003d fsd.resolvePath(pc, src, pathComponents);\n+    src \u003d fsd.resolvePath(pc, src);\n     final INodesInPath iip \u003d fsd.getINodesInPath(src, true);\n     if (fsd.isPermissionEnabled()) {\n       /* To access xattr names, you need EXECUTE in the owning directory. */\n       fsd.checkParentAccess(pc, iip, FsAction.EXECUTE);\n     }\n     final List\u003cXAttr\u003e all \u003d FSDirXAttrOp.getXAttrs(fsd, src);\n     return XAttrPermissionFilter.\n         filterXAttrsForApi(pc, all, isRawPath);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cXAttr\u003e listXAttrs(\n      FSDirectory fsd, String src) throws IOException {\n    FSDirXAttrOp.checkXAttrsConfigFlag(fsd);\n    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n    src \u003d fsd.resolvePath(pc, src);\n    final INodesInPath iip \u003d fsd.getINodesInPath(src, true);\n    if (fsd.isPermissionEnabled()) {\n      /* To access xattr names, you need EXECUTE in the owning directory. */\n      fsd.checkParentAccess(pc, iip, FsAction.EXECUTE);\n    }\n    final List\u003cXAttr\u003e all \u003d FSDirXAttrOp.getXAttrs(fsd, src);\n    return XAttrPermissionFilter.\n        filterXAttrsForApi(pc, all, isRawPath);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
      "extendedDetails": {}
    },
    "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7486. Consolidate XAttr-related implementation into a single class. Contributed by Haohui Mai.\n",
      "commitDate": "08/12/14 11:52 AM",
      "commitName": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,16 @@\n+  static List\u003cXAttr\u003e listXAttrs(\n+      FSDirectory fsd, String src) throws IOException {\n+    FSDirXAttrOp.checkXAttrsConfigFlag(fsd);\n+    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n+    final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n+    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n+    src \u003d fsd.resolvePath(pc, src, pathComponents);\n+    final INodesInPath iip \u003d fsd.getINodesInPath(src, true);\n+    if (fsd.isPermissionEnabled()) {\n+      /* To access xattr names, you need EXECUTE in the owning directory. */\n+      fsd.checkParentAccess(pc, iip, FsAction.EXECUTE);\n+    }\n+    final List\u003cXAttr\u003e all \u003d FSDirXAttrOp.getXAttrs(fsd, src);\n+    return XAttrPermissionFilter.\n+        filterXAttrsForApi(pc, all, isRawPath);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cXAttr\u003e listXAttrs(\n      FSDirectory fsd, String src) throws IOException {\n    FSDirXAttrOp.checkXAttrsConfigFlag(fsd);\n    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    src \u003d fsd.resolvePath(pc, src, pathComponents);\n    final INodesInPath iip \u003d fsd.getINodesInPath(src, true);\n    if (fsd.isPermissionEnabled()) {\n      /* To access xattr names, you need EXECUTE in the owning directory. */\n      fsd.checkParentAccess(pc, iip, FsAction.EXECUTE);\n    }\n    final List\u003cXAttr\u003e all \u003d FSDirXAttrOp.getXAttrs(fsd, src);\n    return XAttrPermissionFilter.\n        filterXAttrsForApi(pc, all, isRawPath);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java"
    }
  }
}