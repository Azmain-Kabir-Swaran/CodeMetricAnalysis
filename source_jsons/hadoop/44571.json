{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogsCLI.java",
  "functionName": "getAMContainerInfoFromRM",
  "functionId": "getAMContainerInfoFromRM___webAppAddress-String__appId-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
  "functionStartLine": 416,
  "functionEndLine": 439,
  "numCommitsSeen": 98,
  "timeTaken": 6927,
  "changeHistory": [
    "b65815d6914996fed25bd9fef4d37d00828bc664",
    "7836bc4c3533e93e7adc0c7da0659bc04bdf2494",
    "cb9bc6e64c590622ae04aea2c81962be59037f7a",
    "1a84c24b0cf6674fa755403971fa57d8e412b320",
    "7705812c7e3a9f3f774130e25443fda249c08c9c",
    "e14ee0d3b55816bed1d27a8caf78001985119e3c",
    "5a43583c0bbb9650ea6a9f48d9544ec3ec24b580",
    "7be53b65f95dae89c760cde354b42f15f5ee3b5f",
    "a77d628339afaf2f5a085c73fd81a805b18348c9"
  ],
  "changeHistoryShort": {
    "b65815d6914996fed25bd9fef4d37d00828bc664": "Ybodychange",
    "7836bc4c3533e93e7adc0c7da0659bc04bdf2494": "Ybodychange",
    "cb9bc6e64c590622ae04aea2c81962be59037f7a": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
    "1a84c24b0cf6674fa755403971fa57d8e412b320": "Ybodychange",
    "7705812c7e3a9f3f774130e25443fda249c08c9c": "Ybodychange",
    "e14ee0d3b55816bed1d27a8caf78001985119e3c": "Ymodifierchange",
    "5a43583c0bbb9650ea6a9f48d9544ec3ec24b580": "Ybodychange",
    "7be53b65f95dae89c760cde354b42f15f5ee3b5f": "Ybodychange",
    "a77d628339afaf2f5a085c73fd81a805b18348c9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b65815d6914996fed25bd9fef4d37d00828bc664": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-9606. Set sslfactory for AuthenticatedURL() while creating LogsCLI#webServiceClient.\"\n\nThis reverts commit 7836bc4c3533e93e7adc0c7da0659bc04bdf2494.\n",
      "commitDate": "18/05/20 12:29 AM",
      "commitName": "b65815d6914996fed25bd9fef4d37d00828bc664",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "14/05/20 7:10 AM",
      "commitNameOld": "7836bc4c3533e93e7adc0c7da0659bc04bdf2494",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 3.72,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   private List\u003cJSONObject\u003e getAMContainerInfoFromRM(\n       String webAppAddress, String appId) throws ClientHandlerException,\n       UniformInterfaceException, JSONException {\n     List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n     ClientResponse response \u003d null;\n     try {\n-      Builder builder \u003d client.resource(webAppAddress)\n+      Builder builder \u003d webServiceClient.resource(webAppAddress)\n           .path(\"ws\").path(\"v1\").path(\"cluster\")\n           .path(\"apps\").path(appId).path(\"appattempts\")\n           .accept(MediaType.APPLICATION_JSON);\n       response \u003d builder.get(ClientResponse.class);\n       JSONObject json \u003d response.getEntity(JSONObject.class)\n           .getJSONObject(\"appAttempts\");\n       JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n       for (int j \u003d 0; j \u003c requests.length(); j++) {\n         amContainersList.add(requests.getJSONObject(j));\n       }\n       return amContainersList;\n     } finally {\n       if (response !\u003d null) {\n         response.close();\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cJSONObject\u003e getAMContainerInfoFromRM(\n      String webAppAddress, String appId) throws ClientHandlerException,\n      UniformInterfaceException, JSONException {\n    List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n    ClientResponse response \u003d null;\n    try {\n      Builder builder \u003d webServiceClient.resource(webAppAddress)\n          .path(\"ws\").path(\"v1\").path(\"cluster\")\n          .path(\"apps\").path(appId).path(\"appattempts\")\n          .accept(MediaType.APPLICATION_JSON);\n      response \u003d builder.get(ClientResponse.class);\n      JSONObject json \u003d response.getEntity(JSONObject.class)\n          .getJSONObject(\"appAttempts\");\n      JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n      for (int j \u003d 0; j \u003c requests.length(); j++) {\n        amContainersList.add(requests.getJSONObject(j));\n      }\n      return amContainersList;\n    } finally {\n      if (response !\u003d null) {\n        response.close();\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "7836bc4c3533e93e7adc0c7da0659bc04bdf2494": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9606. Set sslfactory for AuthenticatedURL() while creating LogsCLI#webServiceClient.\n\nContributed by Bilwa S T. Reviewed by Brahma Reddy Battula.\n",
      "commitDate": "14/05/20 7:10 AM",
      "commitName": "7836bc4c3533e93e7adc0c7da0659bc04bdf2494",
      "commitAuthor": "Prabhu Joseph",
      "commitDateOld": "06/02/20 3:25 AM",
      "commitNameOld": "71b2c2ffe962ff4f5799e1f55961db687cb55842",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 98.11,
      "commitsBetweenForRepo": 336,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   private List\u003cJSONObject\u003e getAMContainerInfoFromRM(\n       String webAppAddress, String appId) throws ClientHandlerException,\n       UniformInterfaceException, JSONException {\n     List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n     ClientResponse response \u003d null;\n     try {\n-      Builder builder \u003d webServiceClient.resource(webAppAddress)\n+      Builder builder \u003d client.resource(webAppAddress)\n           .path(\"ws\").path(\"v1\").path(\"cluster\")\n           .path(\"apps\").path(appId).path(\"appattempts\")\n           .accept(MediaType.APPLICATION_JSON);\n       response \u003d builder.get(ClientResponse.class);\n       JSONObject json \u003d response.getEntity(JSONObject.class)\n           .getJSONObject(\"appAttempts\");\n       JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n       for (int j \u003d 0; j \u003c requests.length(); j++) {\n         amContainersList.add(requests.getJSONObject(j));\n       }\n       return amContainersList;\n     } finally {\n       if (response !\u003d null) {\n         response.close();\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cJSONObject\u003e getAMContainerInfoFromRM(\n      String webAppAddress, String appId) throws ClientHandlerException,\n      UniformInterfaceException, JSONException {\n    List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n    ClientResponse response \u003d null;\n    try {\n      Builder builder \u003d client.resource(webAppAddress)\n          .path(\"ws\").path(\"v1\").path(\"cluster\")\n          .path(\"apps\").path(appId).path(\"appattempts\")\n          .accept(MediaType.APPLICATION_JSON);\n      response \u003d builder.get(ClientResponse.class);\n      JSONObject json \u003d response.getEntity(JSONObject.class)\n          .getJSONObject(\"appAttempts\");\n      JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n      for (int j \u003d 0; j \u003c requests.length(); j++) {\n        amContainersList.add(requests.getJSONObject(j));\n      }\n      return amContainersList;\n    } finally {\n      if (response !\u003d null) {\n        response.close();\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "cb9bc6e64c590622ae04aea2c81962be59037f7a": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-9581.  Fixed yarn logs cli to access RM2.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "06/06/19 1:41 PM",
      "commitName": "cb9bc6e64c590622ae04aea2c81962be59037f7a",
      "commitAuthor": "Eric Yang",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-9581.  Fixed yarn logs cli to access RM2.\n            Contributed by Prabhu Joseph\n",
          "commitDate": "06/06/19 1:41 PM",
          "commitName": "cb9bc6e64c590622ae04aea2c81962be59037f7a",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "28/11/18 12:46 AM",
          "commitNameOld": "b3a052d199ff71da042029f27979a5323d3a6981",
          "commitAuthorOld": "Suma Shivaprasad",
          "daysBetweenCommits": 190.5,
          "commitsBetweenForRepo": 1321,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,24 @@\n-  protected List\u003cJSONObject\u003e getAMContainerInfoForRMWebService(\n-      Configuration conf, String appId) throws ClientHandlerException,\n+  private List\u003cJSONObject\u003e getAMContainerInfoFromRM(\n+      String webAppAddress, String appId) throws ClientHandlerException,\n       UniformInterfaceException, JSONException {\n-    String webAppAddress \u003d WebAppUtils.getRMWebAppURLWithScheme(conf);\n-\n-    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n-\n-    ClientResponse response \u003d\n-        webResource.path(\"ws\").path(\"v1\").path(\"cluster\").path(\"apps\")\n-          .path(appId).path(\"appattempts\").accept(MediaType.APPLICATION_JSON)\n-          .get(ClientResponse.class);\n-    JSONObject json \u003d\n-        response.getEntity(JSONObject.class).getJSONObject(\"appAttempts\");\n-    JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n     List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n-    for (int i \u003d 0; i \u003c requests.length(); i++) {\n-      amContainersList.add(requests.getJSONObject(i));\n+    ClientResponse response \u003d null;\n+    try {\n+      Builder builder \u003d webServiceClient.resource(webAppAddress)\n+          .path(\"ws\").path(\"v1\").path(\"cluster\")\n+          .path(\"apps\").path(appId).path(\"appattempts\")\n+          .accept(MediaType.APPLICATION_JSON);\n+      response \u003d builder.get(ClientResponse.class);\n+      JSONObject json \u003d response.getEntity(JSONObject.class)\n+          .getJSONObject(\"appAttempts\");\n+      JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n+      for (int j \u003d 0; j \u003c requests.length(); j++) {\n+        amContainersList.add(requests.getJSONObject(j));\n+      }\n+      return amContainersList;\n+    } finally {\n+      if (response !\u003d null) {\n+        response.close();\n+      }\n     }\n-    return amContainersList;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private List\u003cJSONObject\u003e getAMContainerInfoFromRM(\n      String webAppAddress, String appId) throws ClientHandlerException,\n      UniformInterfaceException, JSONException {\n    List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n    ClientResponse response \u003d null;\n    try {\n      Builder builder \u003d webServiceClient.resource(webAppAddress)\n          .path(\"ws\").path(\"v1\").path(\"cluster\")\n          .path(\"apps\").path(appId).path(\"appattempts\")\n          .accept(MediaType.APPLICATION_JSON);\n      response \u003d builder.get(ClientResponse.class);\n      JSONObject json \u003d response.getEntity(JSONObject.class)\n          .getJSONObject(\"appAttempts\");\n      JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n      for (int j \u003d 0; j \u003c requests.length(); j++) {\n        amContainersList.add(requests.getJSONObject(j));\n      }\n      return amContainersList;\n    } finally {\n      if (response !\u003d null) {\n        response.close();\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
          "extendedDetails": {
            "oldValue": "getAMContainerInfoForRMWebService",
            "newValue": "getAMContainerInfoFromRM"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9581.  Fixed yarn logs cli to access RM2.\n            Contributed by Prabhu Joseph\n",
          "commitDate": "06/06/19 1:41 PM",
          "commitName": "cb9bc6e64c590622ae04aea2c81962be59037f7a",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "28/11/18 12:46 AM",
          "commitNameOld": "b3a052d199ff71da042029f27979a5323d3a6981",
          "commitAuthorOld": "Suma Shivaprasad",
          "daysBetweenCommits": 190.5,
          "commitsBetweenForRepo": 1321,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,24 @@\n-  protected List\u003cJSONObject\u003e getAMContainerInfoForRMWebService(\n-      Configuration conf, String appId) throws ClientHandlerException,\n+  private List\u003cJSONObject\u003e getAMContainerInfoFromRM(\n+      String webAppAddress, String appId) throws ClientHandlerException,\n       UniformInterfaceException, JSONException {\n-    String webAppAddress \u003d WebAppUtils.getRMWebAppURLWithScheme(conf);\n-\n-    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n-\n-    ClientResponse response \u003d\n-        webResource.path(\"ws\").path(\"v1\").path(\"cluster\").path(\"apps\")\n-          .path(appId).path(\"appattempts\").accept(MediaType.APPLICATION_JSON)\n-          .get(ClientResponse.class);\n-    JSONObject json \u003d\n-        response.getEntity(JSONObject.class).getJSONObject(\"appAttempts\");\n-    JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n     List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n-    for (int i \u003d 0; i \u003c requests.length(); i++) {\n-      amContainersList.add(requests.getJSONObject(i));\n+    ClientResponse response \u003d null;\n+    try {\n+      Builder builder \u003d webServiceClient.resource(webAppAddress)\n+          .path(\"ws\").path(\"v1\").path(\"cluster\")\n+          .path(\"apps\").path(appId).path(\"appattempts\")\n+          .accept(MediaType.APPLICATION_JSON);\n+      response \u003d builder.get(ClientResponse.class);\n+      JSONObject json \u003d response.getEntity(JSONObject.class)\n+          .getJSONObject(\"appAttempts\");\n+      JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n+      for (int j \u003d 0; j \u003c requests.length(); j++) {\n+        amContainersList.add(requests.getJSONObject(j));\n+      }\n+      return amContainersList;\n+    } finally {\n+      if (response !\u003d null) {\n+        response.close();\n+      }\n     }\n-    return amContainersList;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private List\u003cJSONObject\u003e getAMContainerInfoFromRM(\n      String webAppAddress, String appId) throws ClientHandlerException,\n      UniformInterfaceException, JSONException {\n    List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n    ClientResponse response \u003d null;\n    try {\n      Builder builder \u003d webServiceClient.resource(webAppAddress)\n          .path(\"ws\").path(\"v1\").path(\"cluster\")\n          .path(\"apps\").path(appId).path(\"appattempts\")\n          .accept(MediaType.APPLICATION_JSON);\n      response \u003d builder.get(ClientResponse.class);\n      JSONObject json \u003d response.getEntity(JSONObject.class)\n          .getJSONObject(\"appAttempts\");\n      JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n      for (int j \u003d 0; j \u003c requests.length(); j++) {\n        amContainersList.add(requests.getJSONObject(j));\n      }\n      return amContainersList;\n    } finally {\n      if (response !\u003d null) {\n        response.close();\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, appId-String]",
            "newValue": "[webAppAddress-String, appId-String]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-9581.  Fixed yarn logs cli to access RM2.\n            Contributed by Prabhu Joseph\n",
          "commitDate": "06/06/19 1:41 PM",
          "commitName": "cb9bc6e64c590622ae04aea2c81962be59037f7a",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "28/11/18 12:46 AM",
          "commitNameOld": "b3a052d199ff71da042029f27979a5323d3a6981",
          "commitAuthorOld": "Suma Shivaprasad",
          "daysBetweenCommits": 190.5,
          "commitsBetweenForRepo": 1321,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,24 @@\n-  protected List\u003cJSONObject\u003e getAMContainerInfoForRMWebService(\n-      Configuration conf, String appId) throws ClientHandlerException,\n+  private List\u003cJSONObject\u003e getAMContainerInfoFromRM(\n+      String webAppAddress, String appId) throws ClientHandlerException,\n       UniformInterfaceException, JSONException {\n-    String webAppAddress \u003d WebAppUtils.getRMWebAppURLWithScheme(conf);\n-\n-    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n-\n-    ClientResponse response \u003d\n-        webResource.path(\"ws\").path(\"v1\").path(\"cluster\").path(\"apps\")\n-          .path(appId).path(\"appattempts\").accept(MediaType.APPLICATION_JSON)\n-          .get(ClientResponse.class);\n-    JSONObject json \u003d\n-        response.getEntity(JSONObject.class).getJSONObject(\"appAttempts\");\n-    JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n     List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n-    for (int i \u003d 0; i \u003c requests.length(); i++) {\n-      amContainersList.add(requests.getJSONObject(i));\n+    ClientResponse response \u003d null;\n+    try {\n+      Builder builder \u003d webServiceClient.resource(webAppAddress)\n+          .path(\"ws\").path(\"v1\").path(\"cluster\")\n+          .path(\"apps\").path(appId).path(\"appattempts\")\n+          .accept(MediaType.APPLICATION_JSON);\n+      response \u003d builder.get(ClientResponse.class);\n+      JSONObject json \u003d response.getEntity(JSONObject.class)\n+          .getJSONObject(\"appAttempts\");\n+      JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n+      for (int j \u003d 0; j \u003c requests.length(); j++) {\n+        amContainersList.add(requests.getJSONObject(j));\n+      }\n+      return amContainersList;\n+    } finally {\n+      if (response !\u003d null) {\n+        response.close();\n+      }\n     }\n-    return amContainersList;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private List\u003cJSONObject\u003e getAMContainerInfoFromRM(\n      String webAppAddress, String appId) throws ClientHandlerException,\n      UniformInterfaceException, JSONException {\n    List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n    ClientResponse response \u003d null;\n    try {\n      Builder builder \u003d webServiceClient.resource(webAppAddress)\n          .path(\"ws\").path(\"v1\").path(\"cluster\")\n          .path(\"apps\").path(appId).path(\"appattempts\")\n          .accept(MediaType.APPLICATION_JSON);\n      response \u003d builder.get(ClientResponse.class);\n      JSONObject json \u003d response.getEntity(JSONObject.class)\n          .getJSONObject(\"appAttempts\");\n      JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n      for (int j \u003d 0; j \u003c requests.length(); j++) {\n        amContainersList.add(requests.getJSONObject(j));\n      }\n      return amContainersList;\n    } finally {\n      if (response !\u003d null) {\n        response.close();\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9581.  Fixed yarn logs cli to access RM2.\n            Contributed by Prabhu Joseph\n",
          "commitDate": "06/06/19 1:41 PM",
          "commitName": "cb9bc6e64c590622ae04aea2c81962be59037f7a",
          "commitAuthor": "Eric Yang",
          "commitDateOld": "28/11/18 12:46 AM",
          "commitNameOld": "b3a052d199ff71da042029f27979a5323d3a6981",
          "commitAuthorOld": "Suma Shivaprasad",
          "daysBetweenCommits": 190.5,
          "commitsBetweenForRepo": 1321,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,24 @@\n-  protected List\u003cJSONObject\u003e getAMContainerInfoForRMWebService(\n-      Configuration conf, String appId) throws ClientHandlerException,\n+  private List\u003cJSONObject\u003e getAMContainerInfoFromRM(\n+      String webAppAddress, String appId) throws ClientHandlerException,\n       UniformInterfaceException, JSONException {\n-    String webAppAddress \u003d WebAppUtils.getRMWebAppURLWithScheme(conf);\n-\n-    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n-\n-    ClientResponse response \u003d\n-        webResource.path(\"ws\").path(\"v1\").path(\"cluster\").path(\"apps\")\n-          .path(appId).path(\"appattempts\").accept(MediaType.APPLICATION_JSON)\n-          .get(ClientResponse.class);\n-    JSONObject json \u003d\n-        response.getEntity(JSONObject.class).getJSONObject(\"appAttempts\");\n-    JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n     List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n-    for (int i \u003d 0; i \u003c requests.length(); i++) {\n-      amContainersList.add(requests.getJSONObject(i));\n+    ClientResponse response \u003d null;\n+    try {\n+      Builder builder \u003d webServiceClient.resource(webAppAddress)\n+          .path(\"ws\").path(\"v1\").path(\"cluster\")\n+          .path(\"apps\").path(appId).path(\"appattempts\")\n+          .accept(MediaType.APPLICATION_JSON);\n+      response \u003d builder.get(ClientResponse.class);\n+      JSONObject json \u003d response.getEntity(JSONObject.class)\n+          .getJSONObject(\"appAttempts\");\n+      JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n+      for (int j \u003d 0; j \u003c requests.length(); j++) {\n+        amContainersList.add(requests.getJSONObject(j));\n+      }\n+      return amContainersList;\n+    } finally {\n+      if (response !\u003d null) {\n+        response.close();\n+      }\n     }\n-    return amContainersList;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private List\u003cJSONObject\u003e getAMContainerInfoFromRM(\n      String webAppAddress, String appId) throws ClientHandlerException,\n      UniformInterfaceException, JSONException {\n    List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n    ClientResponse response \u003d null;\n    try {\n      Builder builder \u003d webServiceClient.resource(webAppAddress)\n          .path(\"ws\").path(\"v1\").path(\"cluster\")\n          .path(\"apps\").path(appId).path(\"appattempts\")\n          .accept(MediaType.APPLICATION_JSON);\n      response \u003d builder.get(ClientResponse.class);\n      JSONObject json \u003d response.getEntity(JSONObject.class)\n          .getJSONObject(\"appAttempts\");\n      JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n      for (int j \u003d 0; j \u003c requests.length(); j++) {\n        amContainersList.add(requests.getJSONObject(j));\n      }\n      return amContainersList;\n    } finally {\n      if (response !\u003d null) {\n        response.close();\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
          "extendedDetails": {}
        }
      ]
    },
    "1a84c24b0cf6674fa755403971fa57d8e412b320": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7174. Add retry logic in LogsCLI when fetch running application logs. Contributed by Xuan Gong.\n",
      "commitDate": "15/09/17 3:33 PM",
      "commitName": "1a84c24b0cf6674fa755403971fa57d8e412b320",
      "commitAuthor": "Junping Du",
      "commitDateOld": "08/09/17 3:16 PM",
      "commitNameOld": "3fddabc2fe4fbdb8ef3f9ce7558955c4f0794dcc",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 7.01,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n   protected List\u003cJSONObject\u003e getAMContainerInfoForRMWebService(\n       Configuration conf, String appId) throws ClientHandlerException,\n       UniformInterfaceException, JSONException {\n-    Client webServiceClient \u003d Client.create();\n     String webAppAddress \u003d WebAppUtils.getRMWebAppURLWithScheme(conf);\n \n     WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n \n     ClientResponse response \u003d\n         webResource.path(\"ws\").path(\"v1\").path(\"cluster\").path(\"apps\")\n           .path(appId).path(\"appattempts\").accept(MediaType.APPLICATION_JSON)\n           .get(ClientResponse.class);\n     JSONObject json \u003d\n         response.getEntity(JSONObject.class).getJSONObject(\"appAttempts\");\n     JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n     List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n     for (int i \u003d 0; i \u003c requests.length(); i++) {\n       amContainersList.add(requests.getJSONObject(i));\n     }\n     return amContainersList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected List\u003cJSONObject\u003e getAMContainerInfoForRMWebService(\n      Configuration conf, String appId) throws ClientHandlerException,\n      UniformInterfaceException, JSONException {\n    String webAppAddress \u003d WebAppUtils.getRMWebAppURLWithScheme(conf);\n\n    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n\n    ClientResponse response \u003d\n        webResource.path(\"ws\").path(\"v1\").path(\"cluster\").path(\"apps\")\n          .path(appId).path(\"appattempts\").accept(MediaType.APPLICATION_JSON)\n          .get(ClientResponse.class);\n    JSONObject json \u003d\n        response.getEntity(JSONObject.class).getJSONObject(\"appAttempts\");\n    JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n    List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n    for (int i \u003d 0; i \u003c requests.length(); i++) {\n      amContainersList.add(requests.getJSONObject(i));\n    }\n    return amContainersList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "7705812c7e3a9f3f774130e25443fda249c08c9c": {
      "type": "Ybodychange",
      "commitMessage": "New addendum to YARN-5080. Cannot obtain logs using YARN CLI -am for either KILLED or RUNNING AM.\n",
      "commitDate": "12/07/16 8:29 AM",
      "commitName": "7705812c7e3a9f3f774130e25443fda249c08c9c",
      "commitAuthor": "Junping Du",
      "commitDateOld": "06/07/16 2:10 PM",
      "commitNameOld": "4c9e1aeb94247a6e97215e902bdc71a325244243",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 5.76,
      "commitsBetweenForRepo": 151,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n   protected List\u003cJSONObject\u003e getAMContainerInfoForRMWebService(\n       Configuration conf, String appId) throws ClientHandlerException,\n       UniformInterfaceException, JSONException {\n     Client webServiceClient \u003d Client.create();\n-    String webAppAddress \u003d WebAppUtils.getHttpSchemePrefix(conf) +\n-        WebAppUtils.getWebAppBindURL(conf, YarnConfiguration.RM_BIND_HOST,\n-        WebAppUtils.getRMWebAppURLWithoutScheme(conf));\n+    String webAppAddress \u003d WebAppUtils.getRMWebAppURLWithScheme(conf);\n+\n     WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n \n     ClientResponse response \u003d\n         webResource.path(\"ws\").path(\"v1\").path(\"cluster\").path(\"apps\")\n           .path(appId).path(\"appattempts\").accept(MediaType.APPLICATION_JSON)\n           .get(ClientResponse.class);\n     JSONObject json \u003d\n         response.getEntity(JSONObject.class).getJSONObject(\"appAttempts\");\n     JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n     List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n     for (int i \u003d 0; i \u003c requests.length(); i++) {\n       amContainersList.add(requests.getJSONObject(i));\n     }\n     return amContainersList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected List\u003cJSONObject\u003e getAMContainerInfoForRMWebService(\n      Configuration conf, String appId) throws ClientHandlerException,\n      UniformInterfaceException, JSONException {\n    Client webServiceClient \u003d Client.create();\n    String webAppAddress \u003d WebAppUtils.getRMWebAppURLWithScheme(conf);\n\n    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n\n    ClientResponse response \u003d\n        webResource.path(\"ws\").path(\"v1\").path(\"cluster\").path(\"apps\")\n          .path(appId).path(\"appattempts\").accept(MediaType.APPLICATION_JSON)\n          .get(ClientResponse.class);\n    JSONObject json \u003d\n        response.getEntity(JSONObject.class).getJSONObject(\"appAttempts\");\n    JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n    List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n    for (int i \u003d 0; i \u003c requests.length(); i++) {\n      amContainersList.add(requests.getJSONObject(i));\n    }\n    return amContainersList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "e14ee0d3b55816bed1d27a8caf78001985119e3c": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-5083. YARN CLI for AM logs does not give any error message if entered invalid am value. Contributed by Jian He.\n",
      "commitDate": "16/06/16 8:55 AM",
      "commitName": "e14ee0d3b55816bed1d27a8caf78001985119e3c",
      "commitAuthor": "Junping Du",
      "commitDateOld": "15/06/16 12:12 AM",
      "commitNameOld": "25064fb2fb79751cedbb8019900d811e07549ecf",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 1.36,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n-  private List\u003cJSONObject\u003e getAMContainerInfoForRMWebService(\n+  protected List\u003cJSONObject\u003e getAMContainerInfoForRMWebService(\n       Configuration conf, String appId) throws ClientHandlerException,\n       UniformInterfaceException, JSONException {\n     Client webServiceClient \u003d Client.create();\n     String webAppAddress \u003d WebAppUtils.getHttpSchemePrefix(conf) +\n         WebAppUtils.getWebAppBindURL(conf, YarnConfiguration.RM_BIND_HOST,\n         WebAppUtils.getRMWebAppURLWithoutScheme(conf));\n     WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n \n     ClientResponse response \u003d\n         webResource.path(\"ws\").path(\"v1\").path(\"cluster\").path(\"apps\")\n           .path(appId).path(\"appattempts\").accept(MediaType.APPLICATION_JSON)\n           .get(ClientResponse.class);\n     JSONObject json \u003d\n         response.getEntity(JSONObject.class).getJSONObject(\"appAttempts\");\n     JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n     List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n     for (int i \u003d 0; i \u003c requests.length(); i++) {\n       amContainersList.add(requests.getJSONObject(i));\n     }\n     return amContainersList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected List\u003cJSONObject\u003e getAMContainerInfoForRMWebService(\n      Configuration conf, String appId) throws ClientHandlerException,\n      UniformInterfaceException, JSONException {\n    Client webServiceClient \u003d Client.create();\n    String webAppAddress \u003d WebAppUtils.getHttpSchemePrefix(conf) +\n        WebAppUtils.getWebAppBindURL(conf, YarnConfiguration.RM_BIND_HOST,\n        WebAppUtils.getRMWebAppURLWithoutScheme(conf));\n    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n\n    ClientResponse response \u003d\n        webResource.path(\"ws\").path(\"v1\").path(\"cluster\").path(\"apps\")\n          .path(appId).path(\"appattempts\").accept(MediaType.APPLICATION_JSON)\n          .get(ClientResponse.class);\n    JSONObject json \u003d\n        response.getEntity(JSONObject.class).getJSONObject(\"appAttempts\");\n    JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n    List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n    for (int i \u003d 0; i \u003c requests.length(); i++) {\n      amContainersList.add(requests.getJSONObject(i));\n    }\n    return amContainersList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[protected]"
      }
    },
    "5a43583c0bbb9650ea6a9f48d9544ec3ec24b580": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5080. Addendum fix to the original patch to fix YARN logs CLI. Contributed by Xuan Gong\n",
      "commitDate": "08/06/16 9:49 AM",
      "commitName": "5a43583c0bbb9650ea6a9f48d9544ec3ec24b580",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "01/06/16 1:44 PM",
      "commitNameOld": "0bc05e40fa7e183efe8463ada459c621da3ce3bf",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 6.84,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   private List\u003cJSONObject\u003e getAMContainerInfoForRMWebService(\n       Configuration conf, String appId) throws ClientHandlerException,\n       UniformInterfaceException, JSONException {\n     Client webServiceClient \u003d Client.create();\n-    String webAppAddress \u003d WebAppUtils.getRMWebAppURLWithScheme(conf);\n+    String webAppAddress \u003d WebAppUtils.getHttpSchemePrefix(conf) +\n+        WebAppUtils.getWebAppBindURL(conf, YarnConfiguration.RM_BIND_HOST,\n+        WebAppUtils.getRMWebAppURLWithoutScheme(conf));\n     WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n \n     ClientResponse response \u003d\n         webResource.path(\"ws\").path(\"v1\").path(\"cluster\").path(\"apps\")\n           .path(appId).path(\"appattempts\").accept(MediaType.APPLICATION_JSON)\n           .get(ClientResponse.class);\n     JSONObject json \u003d\n         response.getEntity(JSONObject.class).getJSONObject(\"appAttempts\");\n     JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n     List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n     for (int i \u003d 0; i \u003c requests.length(); i++) {\n       amContainersList.add(requests.getJSONObject(i));\n     }\n     return amContainersList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cJSONObject\u003e getAMContainerInfoForRMWebService(\n      Configuration conf, String appId) throws ClientHandlerException,\n      UniformInterfaceException, JSONException {\n    Client webServiceClient \u003d Client.create();\n    String webAppAddress \u003d WebAppUtils.getHttpSchemePrefix(conf) +\n        WebAppUtils.getWebAppBindURL(conf, YarnConfiguration.RM_BIND_HOST,\n        WebAppUtils.getRMWebAppURLWithoutScheme(conf));\n    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n\n    ClientResponse response \u003d\n        webResource.path(\"ws\").path(\"v1\").path(\"cluster\").path(\"apps\")\n          .path(appId).path(\"appattempts\").accept(MediaType.APPLICATION_JSON)\n          .get(ClientResponse.class);\n    JSONObject json \u003d\n        response.getEntity(JSONObject.class).getJSONObject(\"appAttempts\");\n    JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n    List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n    for (int i \u003d 0; i \u003c requests.length(); i++) {\n      amContainersList.add(requests.getJSONObject(i));\n    }\n    return amContainersList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "7be53b65f95dae89c760cde354b42f15f5ee3b5f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5080. Cannot obtain logs using YARN CLI -am for either KILLED or\nRUNNING AM. Contributed by Xuan Gong\n",
      "commitDate": "14/05/16 12:19 PM",
      "commitName": "7be53b65f95dae89c760cde354b42f15f5ee3b5f",
      "commitAuthor": "Xuan",
      "commitDateOld": "09/05/16 10:41 PM",
      "commitNameOld": "87f5e351337a905af5215af76c72b9312616cd4f",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 4.57,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,20 @@\n   private List\u003cJSONObject\u003e getAMContainerInfoForRMWebService(\n       Configuration conf, String appId) throws ClientHandlerException,\n       UniformInterfaceException, JSONException {\n     Client webServiceClient \u003d Client.create();\n-    String webAppAddress \u003d\n-        WebAppUtils.getWebAppBindURL(conf, YarnConfiguration.RM_BIND_HOST,\n-          WebAppUtils.getRMWebAppURLWithScheme(conf));\n+    String webAppAddress \u003d WebAppUtils.getRMWebAppURLWithScheme(conf);\n     WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n \n     ClientResponse response \u003d\n         webResource.path(\"ws\").path(\"v1\").path(\"cluster\").path(\"apps\")\n           .path(appId).path(\"appattempts\").accept(MediaType.APPLICATION_JSON)\n           .get(ClientResponse.class);\n     JSONObject json \u003d\n         response.getEntity(JSONObject.class).getJSONObject(\"appAttempts\");\n     JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n     List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n     for (int i \u003d 0; i \u003c requests.length(); i++) {\n       amContainersList.add(requests.getJSONObject(i));\n     }\n     return amContainersList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cJSONObject\u003e getAMContainerInfoForRMWebService(\n      Configuration conf, String appId) throws ClientHandlerException,\n      UniformInterfaceException, JSONException {\n    Client webServiceClient \u003d Client.create();\n    String webAppAddress \u003d WebAppUtils.getRMWebAppURLWithScheme(conf);\n    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n\n    ClientResponse response \u003d\n        webResource.path(\"ws\").path(\"v1\").path(\"cluster\").path(\"apps\")\n          .path(appId).path(\"appattempts\").accept(MediaType.APPLICATION_JSON)\n          .get(ClientResponse.class);\n    JSONObject json \u003d\n        response.getEntity(JSONObject.class).getJSONObject(\"appAttempts\");\n    JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n    List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n    for (int i \u003d 0; i \u003c requests.length(); i++) {\n      amContainersList.add(requests.getJSONObject(i));\n    }\n    return amContainersList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "a77d628339afaf2f5a085c73fd81a805b18348c9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3347. Improve YARN log command to get AMContainer logs as well as running containers logs. Contributed by Xuan Gong.\n",
      "commitDate": "13/04/15 5:29 PM",
      "commitName": "a77d628339afaf2f5a085c73fd81a805b18348c9",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,22 @@\n+  private List\u003cJSONObject\u003e getAMContainerInfoForRMWebService(\n+      Configuration conf, String appId) throws ClientHandlerException,\n+      UniformInterfaceException, JSONException {\n+    Client webServiceClient \u003d Client.create();\n+    String webAppAddress \u003d\n+        WebAppUtils.getWebAppBindURL(conf, YarnConfiguration.RM_BIND_HOST,\n+          WebAppUtils.getRMWebAppURLWithScheme(conf));\n+    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n+\n+    ClientResponse response \u003d\n+        webResource.path(\"ws\").path(\"v1\").path(\"cluster\").path(\"apps\")\n+          .path(appId).path(\"appattempts\").accept(MediaType.APPLICATION_JSON)\n+          .get(ClientResponse.class);\n+    JSONObject json \u003d\n+        response.getEntity(JSONObject.class).getJSONObject(\"appAttempts\");\n+    JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n+    List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n+    for (int i \u003d 0; i \u003c requests.length(); i++) {\n+      amContainersList.add(requests.getJSONObject(i));\n+    }\n+    return amContainersList;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cJSONObject\u003e getAMContainerInfoForRMWebService(\n      Configuration conf, String appId) throws ClientHandlerException,\n      UniformInterfaceException, JSONException {\n    Client webServiceClient \u003d Client.create();\n    String webAppAddress \u003d\n        WebAppUtils.getWebAppBindURL(conf, YarnConfiguration.RM_BIND_HOST,\n          WebAppUtils.getRMWebAppURLWithScheme(conf));\n    WebResource webResource \u003d webServiceClient.resource(webAppAddress);\n\n    ClientResponse response \u003d\n        webResource.path(\"ws\").path(\"v1\").path(\"cluster\").path(\"apps\")\n          .path(appId).path(\"appattempts\").accept(MediaType.APPLICATION_JSON)\n          .get(ClientResponse.class);\n    JSONObject json \u003d\n        response.getEntity(JSONObject.class).getJSONObject(\"appAttempts\");\n    JSONArray requests \u003d json.getJSONArray(\"appAttempt\");\n    List\u003cJSONObject\u003e amContainersList \u003d new ArrayList\u003cJSONObject\u003e();\n    for (int i \u003d 0; i \u003c requests.length(); i++) {\n      amContainersList.add(requests.getJSONObject(i));\n    }\n    return amContainersList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java"
    }
  }
}