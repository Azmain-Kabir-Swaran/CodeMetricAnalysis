{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HistoryFileManager.java",
  "functionName": "scanDirectory",
  "functionId": "scanDirectory___path-Path__fc-FileContext__pathFilter-PathFilter",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java",
  "functionStartLine": 875,
  "functionEndLine": 892,
  "numCommitsSeen": 57,
  "timeTaken": 8204,
  "changeHistory": [
    "5e67c4d384193b38a85655c8f93193596821faa5",
    "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "5e67c4d384193b38a85655c8f93193596821faa5": "Ymultichange(Ymodifierchange,Ybodychange)",
    "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f": "Ymovefromfile",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5e67c4d384193b38a85655c8f93193596821faa5": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-6252. JobHistoryServer should not fail when encountering a\nmissing directory. Contributed by Craig Welch.\n",
      "commitDate": "27/04/15 2:31 AM",
      "commitName": "5e67c4d384193b38a85655c8f93193596821faa5",
      "commitAuthor": "Devaraj K",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "MAPREDUCE-6252. JobHistoryServer should not fail when encountering a\nmissing directory. Contributed by Craig Welch.\n",
          "commitDate": "27/04/15 2:31 AM",
          "commitName": "5e67c4d384193b38a85655c8f93193596821faa5",
          "commitAuthor": "Devaraj K",
          "commitDateOld": "30/03/15 2:48 PM",
          "commitNameOld": "cc0a01c50308fe599b4bdd5a80068d6244062e4f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 27.49,
          "commitsBetweenForRepo": 236,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,18 @@\n-  private static List\u003cFileStatus\u003e scanDirectory(Path path, FileContext fc,\n+  protected static List\u003cFileStatus\u003e scanDirectory(Path path, FileContext fc,\n       PathFilter pathFilter) throws IOException {\n     path \u003d fc.makeQualified(path);\n     List\u003cFileStatus\u003e jhStatusList \u003d new ArrayList\u003cFileStatus\u003e();\n-    RemoteIterator\u003cFileStatus\u003e fileStatusIter \u003d fc.listStatus(path);\n-    while (fileStatusIter.hasNext()) {\n-      FileStatus fileStatus \u003d fileStatusIter.next();\n-      Path filePath \u003d fileStatus.getPath();\n-      if (fileStatus.isFile() \u0026\u0026 pathFilter.accept(filePath)) {\n-        jhStatusList.add(fileStatus);\n+    try {\n+      RemoteIterator\u003cFileStatus\u003e fileStatusIter \u003d fc.listStatus(path);\n+      while (fileStatusIter.hasNext()) {\n+        FileStatus fileStatus \u003d fileStatusIter.next();\n+        Path filePath \u003d fileStatus.getPath();\n+        if (fileStatus.isFile() \u0026\u0026 pathFilter.accept(filePath)) {\n+          jhStatusList.add(fileStatus);\n+        }\n       }\n+    } catch (FileNotFoundException fe) {\n+      LOG.error(\"Error while scanning directory \" + path, fe);\n     }\n     return jhStatusList;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected static List\u003cFileStatus\u003e scanDirectory(Path path, FileContext fc,\n      PathFilter pathFilter) throws IOException {\n    path \u003d fc.makeQualified(path);\n    List\u003cFileStatus\u003e jhStatusList \u003d new ArrayList\u003cFileStatus\u003e();\n    try {\n      RemoteIterator\u003cFileStatus\u003e fileStatusIter \u003d fc.listStatus(path);\n      while (fileStatusIter.hasNext()) {\n        FileStatus fileStatus \u003d fileStatusIter.next();\n        Path filePath \u003d fileStatus.getPath();\n        if (fileStatus.isFile() \u0026\u0026 pathFilter.accept(filePath)) {\n          jhStatusList.add(fileStatus);\n        }\n      }\n    } catch (FileNotFoundException fe) {\n      LOG.error(\"Error while scanning directory \" + path, fe);\n    }\n    return jhStatusList;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[protected, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-6252. JobHistoryServer should not fail when encountering a\nmissing directory. Contributed by Craig Welch.\n",
          "commitDate": "27/04/15 2:31 AM",
          "commitName": "5e67c4d384193b38a85655c8f93193596821faa5",
          "commitAuthor": "Devaraj K",
          "commitDateOld": "30/03/15 2:48 PM",
          "commitNameOld": "cc0a01c50308fe599b4bdd5a80068d6244062e4f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 27.49,
          "commitsBetweenForRepo": 236,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,18 @@\n-  private static List\u003cFileStatus\u003e scanDirectory(Path path, FileContext fc,\n+  protected static List\u003cFileStatus\u003e scanDirectory(Path path, FileContext fc,\n       PathFilter pathFilter) throws IOException {\n     path \u003d fc.makeQualified(path);\n     List\u003cFileStatus\u003e jhStatusList \u003d new ArrayList\u003cFileStatus\u003e();\n-    RemoteIterator\u003cFileStatus\u003e fileStatusIter \u003d fc.listStatus(path);\n-    while (fileStatusIter.hasNext()) {\n-      FileStatus fileStatus \u003d fileStatusIter.next();\n-      Path filePath \u003d fileStatus.getPath();\n-      if (fileStatus.isFile() \u0026\u0026 pathFilter.accept(filePath)) {\n-        jhStatusList.add(fileStatus);\n+    try {\n+      RemoteIterator\u003cFileStatus\u003e fileStatusIter \u003d fc.listStatus(path);\n+      while (fileStatusIter.hasNext()) {\n+        FileStatus fileStatus \u003d fileStatusIter.next();\n+        Path filePath \u003d fileStatus.getPath();\n+        if (fileStatus.isFile() \u0026\u0026 pathFilter.accept(filePath)) {\n+          jhStatusList.add(fileStatus);\n+        }\n       }\n+    } catch (FileNotFoundException fe) {\n+      LOG.error(\"Error while scanning directory \" + path, fe);\n     }\n     return jhStatusList;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected static List\u003cFileStatus\u003e scanDirectory(Path path, FileContext fc,\n      PathFilter pathFilter) throws IOException {\n    path \u003d fc.makeQualified(path);\n    List\u003cFileStatus\u003e jhStatusList \u003d new ArrayList\u003cFileStatus\u003e();\n    try {\n      RemoteIterator\u003cFileStatus\u003e fileStatusIter \u003d fc.listStatus(path);\n      while (fileStatusIter.hasNext()) {\n        FileStatus fileStatus \u003d fileStatusIter.next();\n        Path filePath \u003d fileStatus.getPath();\n        if (fileStatus.isFile() \u0026\u0026 pathFilter.accept(filePath)) {\n          jhStatusList.add(fileStatus);\n        }\n      }\n    } catch (FileNotFoundException fe) {\n      LOG.error(\"Error while scanning directory \" + path, fe);\n    }\n    return jhStatusList;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f": {
      "type": "Ymovefromfile",
      "commitMessage": "MAPREDUCE-4059. The history server should have a separate pluggable storage/query interface. (Robert Evans via tgraves).\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1311896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/04/12 11:11 AM",
      "commitName": "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "10/04/12 9:13 AM",
      "commitNameOld": "000859a534f4cc6a57524a676805d8af6ad199de",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private static List\u003cFileStatus\u003e scanDirectory(Path path, FileContext fc,\n       PathFilter pathFilter) throws IOException {\n     path \u003d fc.makeQualified(path);\n     List\u003cFileStatus\u003e jhStatusList \u003d new ArrayList\u003cFileStatus\u003e();\n-      RemoteIterator\u003cFileStatus\u003e fileStatusIter \u003d fc.listStatus(path);\n-      while (fileStatusIter.hasNext()) {\n-        FileStatus fileStatus \u003d fileStatusIter.next();\n-        Path filePath \u003d fileStatus.getPath();\n-        if (fileStatus.isFile() \u0026\u0026 pathFilter.accept(filePath)) {\n-          jhStatusList.add(fileStatus);\n-        }\n-      }    \n+    RemoteIterator\u003cFileStatus\u003e fileStatusIter \u003d fc.listStatus(path);\n+    while (fileStatusIter.hasNext()) {\n+      FileStatus fileStatus \u003d fileStatusIter.next();\n+      Path filePath \u003d fileStatus.getPath();\n+      if (fileStatus.isFile() \u0026\u0026 pathFilter.accept(filePath)) {\n+        jhStatusList.add(fileStatus);\n+      }\n+    }\n     return jhStatusList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cFileStatus\u003e scanDirectory(Path path, FileContext fc,\n      PathFilter pathFilter) throws IOException {\n    path \u003d fc.makeQualified(path);\n    List\u003cFileStatus\u003e jhStatusList \u003d new ArrayList\u003cFileStatus\u003e();\n    RemoteIterator\u003cFileStatus\u003e fileStatusIter \u003d fc.listStatus(path);\n    while (fileStatusIter.hasNext()) {\n      FileStatus fileStatus \u003d fileStatusIter.next();\n      Path filePath \u003d fileStatus.getPath();\n      if (fileStatus.isFile() \u0026\u0026 pathFilter.accept(filePath)) {\n        jhStatusList.add(fileStatus);\n      }\n    }\n    return jhStatusList;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistory.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java",
        "oldMethodName": "scanDirectory",
        "newMethodName": "scanDirectory"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static List\u003cFileStatus\u003e scanDirectory(Path path, FileContext fc, PathFilter pathFilter) throws IOException {\n    path \u003d fc.makeQualified(path);\n    List\u003cFileStatus\u003e jhStatusList \u003d new ArrayList\u003cFileStatus\u003e();\n      RemoteIterator\u003cFileStatus\u003e fileStatusIter \u003d fc.listStatus(path);\n      while (fileStatusIter.hasNext()) {\n        FileStatus fileStatus \u003d fileStatusIter.next();\n        Path filePath \u003d fileStatus.getPath();\n        if (fileStatus.isFile() \u0026\u0026 pathFilter.accept(filePath)) {\n          jhStatusList.add(fileStatus);\n        }\n      }    \n    return jhStatusList;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistory.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistory.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistory.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,13 @@\n+  private static List\u003cFileStatus\u003e scanDirectory(Path path, FileContext fc, PathFilter pathFilter) throws IOException {\n+    path \u003d fc.makeQualified(path);\n+    List\u003cFileStatus\u003e jhStatusList \u003d new ArrayList\u003cFileStatus\u003e();\n+      RemoteIterator\u003cFileStatus\u003e fileStatusIter \u003d fc.listStatus(path);\n+      while (fileStatusIter.hasNext()) {\n+        FileStatus fileStatus \u003d fileStatusIter.next();\n+        Path filePath \u003d fileStatus.getPath();\n+        if (fileStatus.isFile() \u0026\u0026 pathFilter.accept(filePath)) {\n+          jhStatusList.add(fileStatus);\n+        }\n+      }    \n+    return jhStatusList;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cFileStatus\u003e scanDirectory(Path path, FileContext fc, PathFilter pathFilter) throws IOException {\n    path \u003d fc.makeQualified(path);\n    List\u003cFileStatus\u003e jhStatusList \u003d new ArrayList\u003cFileStatus\u003e();\n      RemoteIterator\u003cFileStatus\u003e fileStatusIter \u003d fc.listStatus(path);\n      while (fileStatusIter.hasNext()) {\n        FileStatus fileStatus \u003d fileStatusIter.next();\n        Path filePath \u003d fileStatus.getPath();\n        if (fileStatus.isFile() \u0026\u0026 pathFilter.accept(filePath)) {\n          jhStatusList.add(fileStatus);\n        }\n      }    \n    return jhStatusList;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistory.java"
    }
  }
}