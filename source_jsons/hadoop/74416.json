{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SSLFactory.java",
  "functionName": "getHostnameVerifier",
  "functionId": "getHostnameVerifier___verifier-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java",
  "functionStartLine": 197,
  "functionEndLine": 215,
  "numCommitsSeen": 25,
  "timeTaken": 1571,
  "changeHistory": [
    "9a2ec694fe6f1cf72b60d4f406b010bfa55ff04b",
    "9d16c9354b0c05edb30d23003dcdec4cc44ed925"
  ],
  "changeHistoryShort": {
    "9a2ec694fe6f1cf72b60d4f406b010bfa55ff04b": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "9d16c9354b0c05edb30d23003dcdec4cc44ed925": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9a2ec694fe6f1cf72b60d4f406b010bfa55ff04b": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-10432. Refactor SSLFactory to expose static method to determine HostnameVerifier. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1586098 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/04/14 12:40 PM",
      "commitName": "9a2ec694fe6f1cf72b60d4f406b010bfa55ff04b",
      "commitAuthor": "Alejandro Abdelnur",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-10432. Refactor SSLFactory to expose static method to determine HostnameVerifier. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1586098 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/04/14 12:40 PM",
          "commitName": "9a2ec694fe6f1cf72b60d4f406b010bfa55ff04b",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "02/05/13 8:36 PM",
          "commitNameOld": "776eb119acc9c79deb9ca2f76712a84470d2fac9",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 341.67,
          "commitsBetweenForRepo": 2269,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,19 @@\n-  private HostnameVerifier getHostnameVerifier(Configuration conf)\n+  public static HostnameVerifier getHostnameVerifier(String verifier)\n     throws GeneralSecurityException, IOException {\n     HostnameVerifier hostnameVerifier;\n-    String verifier \u003d\n-      conf.get(SSL_HOSTNAME_VERIFIER_KEY, \"DEFAULT\").trim().toUpperCase();\n     if (verifier.equals(\"DEFAULT\")) {\n       hostnameVerifier \u003d SSLHostnameVerifier.DEFAULT;\n     } else if (verifier.equals(\"DEFAULT_AND_LOCALHOST\")) {\n       hostnameVerifier \u003d SSLHostnameVerifier.DEFAULT_AND_LOCALHOST;\n     } else if (verifier.equals(\"STRICT\")) {\n       hostnameVerifier \u003d SSLHostnameVerifier.STRICT;\n     } else if (verifier.equals(\"STRICT_IE6\")) {\n       hostnameVerifier \u003d SSLHostnameVerifier.STRICT_IE6;\n     } else if (verifier.equals(\"ALLOW_ALL\")) {\n       hostnameVerifier \u003d SSLHostnameVerifier.ALLOW_ALL;\n     } else {\n       throw new GeneralSecurityException(\"Invalid hostname verifier: \" +\n                                          verifier);\n     }\n     return hostnameVerifier;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static HostnameVerifier getHostnameVerifier(String verifier)\n    throws GeneralSecurityException, IOException {\n    HostnameVerifier hostnameVerifier;\n    if (verifier.equals(\"DEFAULT\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.DEFAULT;\n    } else if (verifier.equals(\"DEFAULT_AND_LOCALHOST\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.DEFAULT_AND_LOCALHOST;\n    } else if (verifier.equals(\"STRICT\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.STRICT;\n    } else if (verifier.equals(\"STRICT_IE6\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.STRICT_IE6;\n    } else if (verifier.equals(\"ALLOW_ALL\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.ALLOW_ALL;\n    } else {\n      throw new GeneralSecurityException(\"Invalid hostname verifier: \" +\n                                         verifier);\n    }\n    return hostnameVerifier;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration]",
            "newValue": "[verifier-String]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-10432. Refactor SSLFactory to expose static method to determine HostnameVerifier. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1586098 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/04/14 12:40 PM",
          "commitName": "9a2ec694fe6f1cf72b60d4f406b010bfa55ff04b",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "02/05/13 8:36 PM",
          "commitNameOld": "776eb119acc9c79deb9ca2f76712a84470d2fac9",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 341.67,
          "commitsBetweenForRepo": 2269,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,19 @@\n-  private HostnameVerifier getHostnameVerifier(Configuration conf)\n+  public static HostnameVerifier getHostnameVerifier(String verifier)\n     throws GeneralSecurityException, IOException {\n     HostnameVerifier hostnameVerifier;\n-    String verifier \u003d\n-      conf.get(SSL_HOSTNAME_VERIFIER_KEY, \"DEFAULT\").trim().toUpperCase();\n     if (verifier.equals(\"DEFAULT\")) {\n       hostnameVerifier \u003d SSLHostnameVerifier.DEFAULT;\n     } else if (verifier.equals(\"DEFAULT_AND_LOCALHOST\")) {\n       hostnameVerifier \u003d SSLHostnameVerifier.DEFAULT_AND_LOCALHOST;\n     } else if (verifier.equals(\"STRICT\")) {\n       hostnameVerifier \u003d SSLHostnameVerifier.STRICT;\n     } else if (verifier.equals(\"STRICT_IE6\")) {\n       hostnameVerifier \u003d SSLHostnameVerifier.STRICT_IE6;\n     } else if (verifier.equals(\"ALLOW_ALL\")) {\n       hostnameVerifier \u003d SSLHostnameVerifier.ALLOW_ALL;\n     } else {\n       throw new GeneralSecurityException(\"Invalid hostname verifier: \" +\n                                          verifier);\n     }\n     return hostnameVerifier;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static HostnameVerifier getHostnameVerifier(String verifier)\n    throws GeneralSecurityException, IOException {\n    HostnameVerifier hostnameVerifier;\n    if (verifier.equals(\"DEFAULT\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.DEFAULT;\n    } else if (verifier.equals(\"DEFAULT_AND_LOCALHOST\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.DEFAULT_AND_LOCALHOST;\n    } else if (verifier.equals(\"STRICT\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.STRICT;\n    } else if (verifier.equals(\"STRICT_IE6\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.STRICT_IE6;\n    } else if (verifier.equals(\"ALLOW_ALL\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.ALLOW_ALL;\n    } else {\n      throw new GeneralSecurityException(\"Invalid hostname verifier: \" +\n                                         verifier);\n    }\n    return hostnameVerifier;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10432. Refactor SSLFactory to expose static method to determine HostnameVerifier. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1586098 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/04/14 12:40 PM",
          "commitName": "9a2ec694fe6f1cf72b60d4f406b010bfa55ff04b",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "02/05/13 8:36 PM",
          "commitNameOld": "776eb119acc9c79deb9ca2f76712a84470d2fac9",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 341.67,
          "commitsBetweenForRepo": 2269,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,19 @@\n-  private HostnameVerifier getHostnameVerifier(Configuration conf)\n+  public static HostnameVerifier getHostnameVerifier(String verifier)\n     throws GeneralSecurityException, IOException {\n     HostnameVerifier hostnameVerifier;\n-    String verifier \u003d\n-      conf.get(SSL_HOSTNAME_VERIFIER_KEY, \"DEFAULT\").trim().toUpperCase();\n     if (verifier.equals(\"DEFAULT\")) {\n       hostnameVerifier \u003d SSLHostnameVerifier.DEFAULT;\n     } else if (verifier.equals(\"DEFAULT_AND_LOCALHOST\")) {\n       hostnameVerifier \u003d SSLHostnameVerifier.DEFAULT_AND_LOCALHOST;\n     } else if (verifier.equals(\"STRICT\")) {\n       hostnameVerifier \u003d SSLHostnameVerifier.STRICT;\n     } else if (verifier.equals(\"STRICT_IE6\")) {\n       hostnameVerifier \u003d SSLHostnameVerifier.STRICT_IE6;\n     } else if (verifier.equals(\"ALLOW_ALL\")) {\n       hostnameVerifier \u003d SSLHostnameVerifier.ALLOW_ALL;\n     } else {\n       throw new GeneralSecurityException(\"Invalid hostname verifier: \" +\n                                          verifier);\n     }\n     return hostnameVerifier;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static HostnameVerifier getHostnameVerifier(String verifier)\n    throws GeneralSecurityException, IOException {\n    HostnameVerifier hostnameVerifier;\n    if (verifier.equals(\"DEFAULT\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.DEFAULT;\n    } else if (verifier.equals(\"DEFAULT_AND_LOCALHOST\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.DEFAULT_AND_LOCALHOST;\n    } else if (verifier.equals(\"STRICT\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.STRICT;\n    } else if (verifier.equals(\"STRICT_IE6\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.STRICT_IE6;\n    } else if (verifier.equals(\"ALLOW_ALL\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.ALLOW_ALL;\n    } else {\n      throw new GeneralSecurityException(\"Invalid hostname verifier: \" +\n                                         verifier);\n    }\n    return hostnameVerifier;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java",
          "extendedDetails": {}
        }
      ]
    },
    "9d16c9354b0c05edb30d23003dcdec4cc44ed925": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-4417. add support for encrypted shuffle (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1365979 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/07/12 6:23 AM",
      "commitName": "9d16c9354b0c05edb30d23003dcdec4cc44ed925",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,21 @@\n+  private HostnameVerifier getHostnameVerifier(Configuration conf)\n+    throws GeneralSecurityException, IOException {\n+    HostnameVerifier hostnameVerifier;\n+    String verifier \u003d\n+      conf.get(SSL_HOSTNAME_VERIFIER_KEY, \"DEFAULT\").trim().toUpperCase();\n+    if (verifier.equals(\"DEFAULT\")) {\n+      hostnameVerifier \u003d SSLHostnameVerifier.DEFAULT;\n+    } else if (verifier.equals(\"DEFAULT_AND_LOCALHOST\")) {\n+      hostnameVerifier \u003d SSLHostnameVerifier.DEFAULT_AND_LOCALHOST;\n+    } else if (verifier.equals(\"STRICT\")) {\n+      hostnameVerifier \u003d SSLHostnameVerifier.STRICT;\n+    } else if (verifier.equals(\"STRICT_IE6\")) {\n+      hostnameVerifier \u003d SSLHostnameVerifier.STRICT_IE6;\n+    } else if (verifier.equals(\"ALLOW_ALL\")) {\n+      hostnameVerifier \u003d SSLHostnameVerifier.ALLOW_ALL;\n+    } else {\n+      throw new GeneralSecurityException(\"Invalid hostname verifier: \" +\n+                                         verifier);\n+    }\n+    return hostnameVerifier;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private HostnameVerifier getHostnameVerifier(Configuration conf)\n    throws GeneralSecurityException, IOException {\n    HostnameVerifier hostnameVerifier;\n    String verifier \u003d\n      conf.get(SSL_HOSTNAME_VERIFIER_KEY, \"DEFAULT\").trim().toUpperCase();\n    if (verifier.equals(\"DEFAULT\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.DEFAULT;\n    } else if (verifier.equals(\"DEFAULT_AND_LOCALHOST\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.DEFAULT_AND_LOCALHOST;\n    } else if (verifier.equals(\"STRICT\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.STRICT;\n    } else if (verifier.equals(\"STRICT_IE6\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.STRICT_IE6;\n    } else if (verifier.equals(\"ALLOW_ALL\")) {\n      hostnameVerifier \u003d SSLHostnameVerifier.ALLOW_ALL;\n    } else {\n      throw new GeneralSecurityException(\"Invalid hostname verifier: \" +\n                                         verifier);\n    }\n    return hostnameVerifier;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java"
    }
  }
}