{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AliyunOSSFileSystemStore.java",
  "functionName": "deleteObjects",
  "functionId": "deleteObjects___keysToDelete-List__String__",
  "sourceFilePath": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystemStore.java",
  "functionStartLine": 191,
  "functionEndLine": 225,
  "numCommitsSeen": 19,
  "timeTaken": 1868,
  "changeHistory": [
    "3fade865ce84dcf68bcd7de5a5ed1c7d904796e9",
    "5b151290ae2916dc04d6a4338085fcefafa21982",
    "08b37603d9c0be67c4e0790c1ad266551ef21f5e",
    "d33e928fbeb1764a724c8f3c051bb0d8be82bbff"
  ],
  "changeHistoryShort": {
    "3fade865ce84dcf68bcd7de5a5ed1c7d904796e9": "Ybodychange",
    "5b151290ae2916dc04d6a4338085fcefafa21982": "Ymultichange(Yexceptionschange,Ybodychange)",
    "08b37603d9c0be67c4e0790c1ad266551ef21f5e": "Ybodychange",
    "d33e928fbeb1764a724c8f3c051bb0d8be82bbff": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3fade865ce84dcf68bcd7de5a5ed1c7d904796e9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15917. AliyunOSS: fix incorrect ReadOps and WriteOps in statistics. Contributed by Jinhu Wu.\n",
      "commitDate": "13/11/18 8:58 PM",
      "commitName": "3fade865ce84dcf68bcd7de5a5ed1c7d904796e9",
      "commitAuthor": "Sammi Chen",
      "commitDateOld": "25/09/18 4:48 AM",
      "commitNameOld": "2b635125fb059fc204ed35bc0e264c42dd3a9fe9",
      "commitAuthorOld": "Sammi Chen",
      "daysBetweenCommits": 49.72,
      "commitsBetweenForRepo": 442,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,35 @@\n   public void deleteObjects(List\u003cString\u003e keysToDelete) throws IOException {\n     if (CollectionUtils.isEmpty(keysToDelete)) {\n       LOG.warn(\"Keys to delete is empty.\");\n       return;\n     }\n \n     int retry \u003d 10;\n     int tries \u003d 0;\n     List\u003cString\u003e deleteFailed \u003d keysToDelete;\n     while(CollectionUtils.isNotEmpty(deleteFailed)) {\n       DeleteObjectsRequest deleteRequest \u003d new DeleteObjectsRequest(bucketName);\n       deleteRequest.setKeys(deleteFailed);\n       // There are two modes to do batch delete:\n       // 1. detail mode: DeleteObjectsResult.getDeletedObjects returns objects\n       // which were deleted successfully.\n       // 2. simple mode: DeleteObjectsResult.getDeletedObjects returns objects\n       // which were deleted unsuccessfully.\n       // Here, we choose the simple mode to do batch delete.\n       deleteRequest.setQuiet(true);\n       DeleteObjectsResult result \u003d ossClient.deleteObjects(deleteRequest);\n+      statistics.incrementWriteOps(1);\n       deleteFailed \u003d result.getDeletedObjects();\n       tries++;\n       if (tries \u003d\u003d retry) {\n         break;\n       }\n     }\n \n     if (tries \u003d\u003d retry \u0026\u0026 CollectionUtils.isNotEmpty(deleteFailed)) {\n       // Most of time, it is impossible to try 10 times, expect the\n       // Aliyun OSS service problems.\n       throw new IOException(\"Failed to delete Aliyun OSS objects for \" +\n           tries + \" times.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void deleteObjects(List\u003cString\u003e keysToDelete) throws IOException {\n    if (CollectionUtils.isEmpty(keysToDelete)) {\n      LOG.warn(\"Keys to delete is empty.\");\n      return;\n    }\n\n    int retry \u003d 10;\n    int tries \u003d 0;\n    List\u003cString\u003e deleteFailed \u003d keysToDelete;\n    while(CollectionUtils.isNotEmpty(deleteFailed)) {\n      DeleteObjectsRequest deleteRequest \u003d new DeleteObjectsRequest(bucketName);\n      deleteRequest.setKeys(deleteFailed);\n      // There are two modes to do batch delete:\n      // 1. detail mode: DeleteObjectsResult.getDeletedObjects returns objects\n      // which were deleted successfully.\n      // 2. simple mode: DeleteObjectsResult.getDeletedObjects returns objects\n      // which were deleted unsuccessfully.\n      // Here, we choose the simple mode to do batch delete.\n      deleteRequest.setQuiet(true);\n      DeleteObjectsResult result \u003d ossClient.deleteObjects(deleteRequest);\n      statistics.incrementWriteOps(1);\n      deleteFailed \u003d result.getDeletedObjects();\n      tries++;\n      if (tries \u003d\u003d retry) {\n        break;\n      }\n    }\n\n    if (tries \u003d\u003d retry \u0026\u0026 CollectionUtils.isNotEmpty(deleteFailed)) {\n      // Most of time, it is impossible to try 10 times, expect the\n      // Aliyun OSS service problems.\n      throw new IOException(\"Failed to delete Aliyun OSS objects for \" +\n          tries + \" times.\");\n    }\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystemStore.java",
      "extendedDetails": {}
    },
    "5b151290ae2916dc04d6a4338085fcefafa21982": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-13768. AliyunOSS: handle the failure in the batch delete operation `deleteDirs`. Contributed by Genmao Yu\n",
      "commitDate": "09/02/17 10:53 PM",
      "commitName": "5b151290ae2916dc04d6a4338085fcefafa21982",
      "commitAuthor": "Kai Zheng",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-13768. AliyunOSS: handle the failure in the batch delete operation `deleteDirs`. Contributed by Genmao Yu\n",
          "commitDate": "09/02/17 10:53 PM",
          "commitName": "5b151290ae2916dc04d6a4338085fcefafa21982",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "20/09/16 11:02 PM",
          "commitNameOld": "22af6f8db3a44cd51514b4851b99adcfad42751d",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 142.04,
          "commitsBetweenForRepo": 901,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,34 @@\n-  public void deleteObjects(List\u003cString\u003e keysToDelete) {\n-    if (CollectionUtils.isNotEmpty(keysToDelete)) {\n-      DeleteObjectsRequest deleteRequest \u003d\n-          new DeleteObjectsRequest(bucketName);\n-      deleteRequest.setKeys(keysToDelete);\n-      ossClient.deleteObjects(deleteRequest);\n-      statistics.incrementWriteOps(keysToDelete.size());\n+  public void deleteObjects(List\u003cString\u003e keysToDelete) throws IOException {\n+    if (CollectionUtils.isEmpty(keysToDelete)) {\n+      LOG.warn(\"Keys to delete is empty.\");\n+      return;\n+    }\n+\n+    int retry \u003d 10;\n+    int tries \u003d 0;\n+    List\u003cString\u003e deleteFailed \u003d keysToDelete;\n+    while(CollectionUtils.isNotEmpty(deleteFailed)) {\n+      DeleteObjectsRequest deleteRequest \u003d new DeleteObjectsRequest(bucketName);\n+      deleteRequest.setKeys(deleteFailed);\n+      // There are two modes to do batch delete:\n+      // 1. detail mode: DeleteObjectsResult.getDeletedObjects returns objects\n+      // which were deleted successfully.\n+      // 2. simple mode: DeleteObjectsResult.getDeletedObjects returns objects\n+      // which were deleted unsuccessfully.\n+      // Here, we choose the simple mode to do batch delete.\n+      deleteRequest.setQuiet(true);\n+      DeleteObjectsResult result \u003d ossClient.deleteObjects(deleteRequest);\n+      deleteFailed \u003d result.getDeletedObjects();\n+      tries++;\n+      if (tries \u003d\u003d retry) {\n+        break;\n+      }\n+    }\n+\n+    if (tries \u003d\u003d retry \u0026\u0026 CollectionUtils.isNotEmpty(deleteFailed)) {\n+      // Most of time, it is impossible to try 10 times, expect the\n+      // Aliyun OSS service problems.\n+      throw new IOException(\"Failed to delete Aliyun OSS objects for \" +\n+          tries + \" times.\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void deleteObjects(List\u003cString\u003e keysToDelete) throws IOException {\n    if (CollectionUtils.isEmpty(keysToDelete)) {\n      LOG.warn(\"Keys to delete is empty.\");\n      return;\n    }\n\n    int retry \u003d 10;\n    int tries \u003d 0;\n    List\u003cString\u003e deleteFailed \u003d keysToDelete;\n    while(CollectionUtils.isNotEmpty(deleteFailed)) {\n      DeleteObjectsRequest deleteRequest \u003d new DeleteObjectsRequest(bucketName);\n      deleteRequest.setKeys(deleteFailed);\n      // There are two modes to do batch delete:\n      // 1. detail mode: DeleteObjectsResult.getDeletedObjects returns objects\n      // which were deleted successfully.\n      // 2. simple mode: DeleteObjectsResult.getDeletedObjects returns objects\n      // which were deleted unsuccessfully.\n      // Here, we choose the simple mode to do batch delete.\n      deleteRequest.setQuiet(true);\n      DeleteObjectsResult result \u003d ossClient.deleteObjects(deleteRequest);\n      deleteFailed \u003d result.getDeletedObjects();\n      tries++;\n      if (tries \u003d\u003d retry) {\n        break;\n      }\n    }\n\n    if (tries \u003d\u003d retry \u0026\u0026 CollectionUtils.isNotEmpty(deleteFailed)) {\n      // Most of time, it is impossible to try 10 times, expect the\n      // Aliyun OSS service problems.\n      throw new IOException(\"Failed to delete Aliyun OSS objects for \" +\n          tries + \" times.\");\n    }\n  }",
          "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystemStore.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13768. AliyunOSS: handle the failure in the batch delete operation `deleteDirs`. Contributed by Genmao Yu\n",
          "commitDate": "09/02/17 10:53 PM",
          "commitName": "5b151290ae2916dc04d6a4338085fcefafa21982",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "20/09/16 11:02 PM",
          "commitNameOld": "22af6f8db3a44cd51514b4851b99adcfad42751d",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 142.04,
          "commitsBetweenForRepo": 901,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,34 @@\n-  public void deleteObjects(List\u003cString\u003e keysToDelete) {\n-    if (CollectionUtils.isNotEmpty(keysToDelete)) {\n-      DeleteObjectsRequest deleteRequest \u003d\n-          new DeleteObjectsRequest(bucketName);\n-      deleteRequest.setKeys(keysToDelete);\n-      ossClient.deleteObjects(deleteRequest);\n-      statistics.incrementWriteOps(keysToDelete.size());\n+  public void deleteObjects(List\u003cString\u003e keysToDelete) throws IOException {\n+    if (CollectionUtils.isEmpty(keysToDelete)) {\n+      LOG.warn(\"Keys to delete is empty.\");\n+      return;\n+    }\n+\n+    int retry \u003d 10;\n+    int tries \u003d 0;\n+    List\u003cString\u003e deleteFailed \u003d keysToDelete;\n+    while(CollectionUtils.isNotEmpty(deleteFailed)) {\n+      DeleteObjectsRequest deleteRequest \u003d new DeleteObjectsRequest(bucketName);\n+      deleteRequest.setKeys(deleteFailed);\n+      // There are two modes to do batch delete:\n+      // 1. detail mode: DeleteObjectsResult.getDeletedObjects returns objects\n+      // which were deleted successfully.\n+      // 2. simple mode: DeleteObjectsResult.getDeletedObjects returns objects\n+      // which were deleted unsuccessfully.\n+      // Here, we choose the simple mode to do batch delete.\n+      deleteRequest.setQuiet(true);\n+      DeleteObjectsResult result \u003d ossClient.deleteObjects(deleteRequest);\n+      deleteFailed \u003d result.getDeletedObjects();\n+      tries++;\n+      if (tries \u003d\u003d retry) {\n+        break;\n+      }\n+    }\n+\n+    if (tries \u003d\u003d retry \u0026\u0026 CollectionUtils.isNotEmpty(deleteFailed)) {\n+      // Most of time, it is impossible to try 10 times, expect the\n+      // Aliyun OSS service problems.\n+      throw new IOException(\"Failed to delete Aliyun OSS objects for \" +\n+          tries + \" times.\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void deleteObjects(List\u003cString\u003e keysToDelete) throws IOException {\n    if (CollectionUtils.isEmpty(keysToDelete)) {\n      LOG.warn(\"Keys to delete is empty.\");\n      return;\n    }\n\n    int retry \u003d 10;\n    int tries \u003d 0;\n    List\u003cString\u003e deleteFailed \u003d keysToDelete;\n    while(CollectionUtils.isNotEmpty(deleteFailed)) {\n      DeleteObjectsRequest deleteRequest \u003d new DeleteObjectsRequest(bucketName);\n      deleteRequest.setKeys(deleteFailed);\n      // There are two modes to do batch delete:\n      // 1. detail mode: DeleteObjectsResult.getDeletedObjects returns objects\n      // which were deleted successfully.\n      // 2. simple mode: DeleteObjectsResult.getDeletedObjects returns objects\n      // which were deleted unsuccessfully.\n      // Here, we choose the simple mode to do batch delete.\n      deleteRequest.setQuiet(true);\n      DeleteObjectsResult result \u003d ossClient.deleteObjects(deleteRequest);\n      deleteFailed \u003d result.getDeletedObjects();\n      tries++;\n      if (tries \u003d\u003d retry) {\n        break;\n      }\n    }\n\n    if (tries \u003d\u003d retry \u0026\u0026 CollectionUtils.isNotEmpty(deleteFailed)) {\n      // Most of time, it is impossible to try 10 times, expect the\n      // Aliyun OSS service problems.\n      throw new IOException(\"Failed to delete Aliyun OSS objects for \" +\n          tries + \" times.\");\n    }\n  }",
          "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystemStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "08b37603d9c0be67c4e0790c1ad266551ef21f5e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13591. Unit test failure in TestOSSContractGetFileStatus and TestOSSContractRootDir. Contributed by Genmao Yu\n",
      "commitDate": "20/09/16 12:12 AM",
      "commitName": "08b37603d9c0be67c4e0790c1ad266551ef21f5e",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "19/09/16 8:39 PM",
      "commitNameOld": "9cd47602576cd01a905e27642b685905a88eee72",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,9 @@\n   public void deleteObjects(List\u003cString\u003e keysToDelete) {\n-    DeleteObjectsRequest deleteRequest \u003d\n-        new DeleteObjectsRequest(bucketName);\n-    deleteRequest.setKeys(keysToDelete);\n-    ossClient.deleteObjects(deleteRequest);\n-    statistics.incrementWriteOps(keysToDelete.size());\n+    if (CollectionUtils.isNotEmpty(keysToDelete)) {\n+      DeleteObjectsRequest deleteRequest \u003d\n+          new DeleteObjectsRequest(bucketName);\n+      deleteRequest.setKeys(keysToDelete);\n+      ossClient.deleteObjects(deleteRequest);\n+      statistics.incrementWriteOps(keysToDelete.size());\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void deleteObjects(List\u003cString\u003e keysToDelete) {\n    if (CollectionUtils.isNotEmpty(keysToDelete)) {\n      DeleteObjectsRequest deleteRequest \u003d\n          new DeleteObjectsRequest(bucketName);\n      deleteRequest.setKeys(keysToDelete);\n      ossClient.deleteObjects(deleteRequest);\n      statistics.incrementWriteOps(keysToDelete.size());\n    }\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystemStore.java",
      "extendedDetails": {}
    },
    "d33e928fbeb1764a724c8f3c051bb0d8be82bbff": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13529. Do some code refactoring. Contributed by Genmao Yu.\n",
      "commitDate": "06/09/16 8:15 PM",
      "commitName": "d33e928fbeb1764a724c8f3c051bb0d8be82bbff",
      "commitAuthor": "Mingfei",
      "diff": "@@ -0,0 +1,7 @@\n+  public void deleteObjects(List\u003cString\u003e keysToDelete) {\n+    DeleteObjectsRequest deleteRequest \u003d\n+        new DeleteObjectsRequest(bucketName);\n+    deleteRequest.setKeys(keysToDelete);\n+    ossClient.deleteObjects(deleteRequest);\n+    statistics.incrementWriteOps(keysToDelete.size());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void deleteObjects(List\u003cString\u003e keysToDelete) {\n    DeleteObjectsRequest deleteRequest \u003d\n        new DeleteObjectsRequest(bucketName);\n    deleteRequest.setKeys(keysToDelete);\n    ossClient.deleteObjects(deleteRequest);\n    statistics.incrementWriteOps(keysToDelete.size());\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystemStore.java"
    }
  }
}