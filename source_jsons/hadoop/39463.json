{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractCSQueue.java",
  "functionName": "getUserWeightsFromHierarchy",
  "functionId": "getUserWeightsFromHierarchy___configuration-CapacitySchedulerConfiguration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
  "functionStartLine": 511,
  "functionEndLine": 525,
  "numCommitsSeen": 135,
  "timeTaken": 3528,
  "changeHistory": [
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35"
  ],
  "changeHistoryShort": {
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": "Ymultichange(Yparameterchange,Ybodychange)",
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
      "commitDate": "08/12/17 3:10 PM",
      "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
          "commitDate": "08/12/17 3:10 PM",
          "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "07/12/17 6:56 PM",
          "commitNameOld": "b7b8cd53242da8d47ba4a6d99d906bdb2a1a3494",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.84,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n-  private Map\u003cString, Float\u003e getUserWeightsFromHierarchy() throws IOException {\n+  private Map\u003cString, Float\u003e getUserWeightsFromHierarchy\n+      (CapacitySchedulerConfiguration configuration) throws\n+      IOException {\n     Map\u003cString, Float\u003e unionInheritedWeights \u003d new HashMap\u003cString, Float\u003e();\n     CSQueue parentQ \u003d getParent();\n     if (parentQ !\u003d null) {\n       // Inherit all of parent\u0027s user\u0027s weights\n       unionInheritedWeights.putAll(parentQ.getUserWeights());\n     }\n     // Insert this queue\u0027s user\u0027s weights, overriding parent\u0027s user\u0027s weights if\n     // there is overlap.\n-    CapacitySchedulerConfiguration csConf \u003d csContext.getConfiguration();\n     unionInheritedWeights.putAll(\n-        csConf.getAllUserWeightsForQueue(getQueuePath()));\n+        configuration.getAllUserWeightsForQueue(getQueuePath()));\n     return unionInheritedWeights;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Map\u003cString, Float\u003e getUserWeightsFromHierarchy\n      (CapacitySchedulerConfiguration configuration) throws\n      IOException {\n    Map\u003cString, Float\u003e unionInheritedWeights \u003d new HashMap\u003cString, Float\u003e();\n    CSQueue parentQ \u003d getParent();\n    if (parentQ !\u003d null) {\n      // Inherit all of parent\u0027s user\u0027s weights\n      unionInheritedWeights.putAll(parentQ.getUserWeights());\n    }\n    // Insert this queue\u0027s user\u0027s weights, overriding parent\u0027s user\u0027s weights if\n    // there is overlap.\n    unionInheritedWeights.putAll(\n        configuration.getAllUserWeightsForQueue(getQueuePath()));\n    return unionInheritedWeights;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[configuration-CapacitySchedulerConfiguration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
          "commitDate": "08/12/17 3:10 PM",
          "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "07/12/17 6:56 PM",
          "commitNameOld": "b7b8cd53242da8d47ba4a6d99d906bdb2a1a3494",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.84,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n-  private Map\u003cString, Float\u003e getUserWeightsFromHierarchy() throws IOException {\n+  private Map\u003cString, Float\u003e getUserWeightsFromHierarchy\n+      (CapacitySchedulerConfiguration configuration) throws\n+      IOException {\n     Map\u003cString, Float\u003e unionInheritedWeights \u003d new HashMap\u003cString, Float\u003e();\n     CSQueue parentQ \u003d getParent();\n     if (parentQ !\u003d null) {\n       // Inherit all of parent\u0027s user\u0027s weights\n       unionInheritedWeights.putAll(parentQ.getUserWeights());\n     }\n     // Insert this queue\u0027s user\u0027s weights, overriding parent\u0027s user\u0027s weights if\n     // there is overlap.\n-    CapacitySchedulerConfiguration csConf \u003d csContext.getConfiguration();\n     unionInheritedWeights.putAll(\n-        csConf.getAllUserWeightsForQueue(getQueuePath()));\n+        configuration.getAllUserWeightsForQueue(getQueuePath()));\n     return unionInheritedWeights;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Map\u003cString, Float\u003e getUserWeightsFromHierarchy\n      (CapacitySchedulerConfiguration configuration) throws\n      IOException {\n    Map\u003cString, Float\u003e unionInheritedWeights \u003d new HashMap\u003cString, Float\u003e();\n    CSQueue parentQ \u003d getParent();\n    if (parentQ !\u003d null) {\n      // Inherit all of parent\u0027s user\u0027s weights\n      unionInheritedWeights.putAll(parentQ.getUserWeights());\n    }\n    // Insert this queue\u0027s user\u0027s weights, overriding parent\u0027s user\u0027s weights if\n    // there is overlap.\n    unionInheritedWeights.putAll(\n        configuration.getAllUserWeightsForQueue(getQueuePath()));\n    return unionInheritedWeights;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5892. Support user-specific minimum user limit percentage in Capacity Scheduler. Contributed by Eric Payne.\n",
      "commitDate": "22/06/17 11:50 PM",
      "commitName": "ca13b224b2feb9c44de861da9cbba8dd2a12cb35",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,14 @@\n+  private Map\u003cString, Float\u003e getUserWeightsFromHierarchy() throws IOException {\n+    Map\u003cString, Float\u003e unionInheritedWeights \u003d new HashMap\u003cString, Float\u003e();\n+    CSQueue parentQ \u003d getParent();\n+    if (parentQ !\u003d null) {\n+      // Inherit all of parent\u0027s user\u0027s weights\n+      unionInheritedWeights.putAll(parentQ.getUserWeights());\n+    }\n+    // Insert this queue\u0027s user\u0027s weights, overriding parent\u0027s user\u0027s weights if\n+    // there is overlap.\n+    CapacitySchedulerConfiguration csConf \u003d csContext.getConfiguration();\n+    unionInheritedWeights.putAll(\n+        csConf.getAllUserWeightsForQueue(getQueuePath()));\n+    return unionInheritedWeights;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Map\u003cString, Float\u003e getUserWeightsFromHierarchy() throws IOException {\n    Map\u003cString, Float\u003e unionInheritedWeights \u003d new HashMap\u003cString, Float\u003e();\n    CSQueue parentQ \u003d getParent();\n    if (parentQ !\u003d null) {\n      // Inherit all of parent\u0027s user\u0027s weights\n      unionInheritedWeights.putAll(parentQ.getUserWeights());\n    }\n    // Insert this queue\u0027s user\u0027s weights, overriding parent\u0027s user\u0027s weights if\n    // there is overlap.\n    CapacitySchedulerConfiguration csConf \u003d csContext.getConfiguration();\n    unionInheritedWeights.putAll(\n        csConf.getAllUserWeightsForQueue(getQueuePath()));\n    return unionInheritedWeights;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java"
    }
  }
}