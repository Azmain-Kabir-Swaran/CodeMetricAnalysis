{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimpleKMSAuditLogger.java",
  "functionName": "logAuditEvent",
  "functionId": "logAuditEvent___status-OpStatus(modifiers-final)__event-AuditEvent(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/SimpleKMSAuditLogger.java",
  "functionStartLine": 53,
  "functionEndLine": 75,
  "numCommitsSeen": 1,
  "timeTaken": 486,
  "changeHistory": [
    "3476156807733505746951f0c9346592742bbbb2"
  ],
  "changeHistoryShort": {
    "3476156807733505746951f0c9346592742bbbb2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3476156807733505746951f0c9346592742bbbb2": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13396. Allow pluggable audit loggers in KMS. Contributed by Xiao Chen\n",
      "commitDate": "24/08/16 10:14 AM",
      "commitName": "3476156807733505746951f0c9346592742bbbb2",
      "commitAuthor": "Xiao Chen",
      "diff": "@@ -0,0 +1,23 @@\n+  public void logAuditEvent(final OpStatus status, final AuditEvent event) {\n+    if (!Strings.isNullOrEmpty(event.getUser()) \u0026\u0026 !Strings\n+        .isNullOrEmpty(event.getKeyName()) \u0026\u0026 (event.getOp() !\u003d null)\n+        \u0026\u0026 KMSAudit.AGGREGATE_OPS_WHITELIST.contains(event.getOp())) {\n+      switch (status) {\n+      case OK:\n+        auditLog.info(\n+            \"{}[op\u003d{}, key\u003d{}, user\u003d{}, accessCount\u003d{}, interval\u003d{}ms] {}\",\n+            status, event.getOp(), event.getKeyName(), event.getUser(),\n+            event.getAccessCount().get(),\n+            (event.getEndTime() - event.getStartTime()), event.getExtraMsg());\n+        break;\n+      case UNAUTHORIZED:\n+        logAuditSimpleFormat(status, event);\n+        break;\n+      default:\n+        logAuditSimpleFormat(status, event);\n+        break;\n+      }\n+    } else {\n+      logAuditSimpleFormat(status, event);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void logAuditEvent(final OpStatus status, final AuditEvent event) {\n    if (!Strings.isNullOrEmpty(event.getUser()) \u0026\u0026 !Strings\n        .isNullOrEmpty(event.getKeyName()) \u0026\u0026 (event.getOp() !\u003d null)\n        \u0026\u0026 KMSAudit.AGGREGATE_OPS_WHITELIST.contains(event.getOp())) {\n      switch (status) {\n      case OK:\n        auditLog.info(\n            \"{}[op\u003d{}, key\u003d{}, user\u003d{}, accessCount\u003d{}, interval\u003d{}ms] {}\",\n            status, event.getOp(), event.getKeyName(), event.getUser(),\n            event.getAccessCount().get(),\n            (event.getEndTime() - event.getStartTime()), event.getExtraMsg());\n        break;\n      case UNAUTHORIZED:\n        logAuditSimpleFormat(status, event);\n        break;\n      default:\n        logAuditSimpleFormat(status, event);\n        break;\n      }\n    } else {\n      logAuditSimpleFormat(status, event);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/SimpleKMSAuditLogger.java"
    }
  }
}