{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImage.java",
  "functionName": "deleteCancelledCheckpoint",
  "functionId": "deleteCancelledCheckpoint___txid-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
  "functionStartLine": 1332,
  "functionEndLine": 1343,
  "numCommitsSeen": 123,
  "timeTaken": 2864,
  "changeHistory": [
    "646e855f6ef058b636a5fc85637a3f8e17fddaba"
  ],
  "changeHistoryShort": {
    "646e855f6ef058b636a5fc85637a3f8e17fddaba": "Yintroduced"
  },
  "changeHistoryDetails": {
    "646e855f6ef058b636a5fc85637a3f8e17fddaba": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2507. Allow saveNamespace operations to be canceled. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190060 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 3:11 PM",
      "commitName": "646e855f6ef058b636a5fc85637a3f8e17fddaba",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,12 @@\n+  private void deleteCancelledCheckpoint(long txid) throws IOException {\n+    ArrayList\u003cStorageDirectory\u003e al \u003d Lists.newArrayList();\n+\n+    for (StorageDirectory sd : storage.dirIterable(NameNodeDirType.IMAGE)) {\n+      File ckpt \u003d NNStorage.getStorageFile(sd, NameNodeFile.IMAGE_NEW, txid);\n+      if (ckpt.exists() \u0026\u0026 !ckpt.delete()) {\n+        LOG.warn(\"Unable to delete cancelled checkpoint in \" + sd);\n+        al.add(sd);            \n+      }\n+    }\n+    storage.reportErrorsOnDirectories(al);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void deleteCancelledCheckpoint(long txid) throws IOException {\n    ArrayList\u003cStorageDirectory\u003e al \u003d Lists.newArrayList();\n\n    for (StorageDirectory sd : storage.dirIterable(NameNodeDirType.IMAGE)) {\n      File ckpt \u003d NNStorage.getStorageFile(sd, NameNodeFile.IMAGE_NEW, txid);\n      if (ckpt.exists() \u0026\u0026 !ckpt.delete()) {\n        LOG.warn(\"Unable to delete cancelled checkpoint in \" + sd);\n        al.add(sd);            \n      }\n    }\n    storage.reportErrorsOnDirectories(al);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java"
    }
  }
}