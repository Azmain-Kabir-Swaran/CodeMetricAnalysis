{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Configuration.java",
  "functionName": "addTags",
  "functionId": "addTags___prop-Properties",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
  "functionStartLine": 3375,
  "functionEndLine": 3406,
  "numCommitsSeen": 132,
  "timeTaken": 2512,
  "changeHistory": [
    "43541a18907d2303b708ae27a9a2cb5df891da4f",
    "57c2feb0d3ed0bb4f8642300433a35f5e28071c9",
    "28790b81ecb719ac26a01ad0c400ee5f1c29ccf8"
  ],
  "changeHistoryShort": {
    "43541a18907d2303b708ae27a9a2cb5df891da4f": "Ybodychange",
    "57c2feb0d3ed0bb4f8642300433a35f5e28071c9": "Ybodychange",
    "28790b81ecb719ac26a01ad0c400ee5f1c29ccf8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "43541a18907d2303b708ae27a9a2cb5df891da4f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15551. Avoid use of Arrays.stream in Configuration.addTags\n",
      "commitDate": "20/06/18 4:43 PM",
      "commitName": "43541a18907d2303b708ae27a9a2cb5df891da4f",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "22/05/18 1:03 AM",
      "commitNameOld": "57c2feb0d3ed0bb4f8642300433a35f5e28071c9",
      "commitAuthorOld": "Mukul Kumar Singh",
      "daysBetweenCommits": 29.65,
      "commitsBetweenForRepo": 234,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   public void addTags(Properties prop) {\n     // Get all system tags\n     try {\n       if (prop.containsKey(CommonConfigurationKeys.HADOOP_TAGS_SYSTEM)) {\n         String systemTags \u003d prop.getProperty(CommonConfigurationKeys\n             .HADOOP_TAGS_SYSTEM);\n-        Arrays.stream(systemTags.split(\",\")).forEach(tag -\u003e TAGS.add(tag));\n+        TAGS.addAll(Arrays.asList(systemTags.split(\",\")));\n       }\n       // Get all custom tags\n       if (prop.containsKey(CommonConfigurationKeys.HADOOP_TAGS_CUSTOM)) {\n         String customTags \u003d prop.getProperty(CommonConfigurationKeys\n             .HADOOP_TAGS_CUSTOM);\n-        Arrays.stream(customTags.split(\",\")).forEach(tag -\u003e TAGS.add(tag));\n+        TAGS.addAll(Arrays.asList(customTags.split(\",\")));\n       }\n \n       if (prop.containsKey(CommonConfigurationKeys.HADOOP_SYSTEM_TAGS)) {\n         String systemTags \u003d prop.getProperty(CommonConfigurationKeys\n             .HADOOP_SYSTEM_TAGS);\n-        Arrays.stream(systemTags.split(\",\")).forEach(tag -\u003e TAGS.add(tag));\n+        TAGS.addAll(Arrays.asList(systemTags.split(\",\")));\n       }\n       // Get all custom tags\n       if (prop.containsKey(CommonConfigurationKeys.HADOOP_CUSTOM_TAGS)) {\n         String customTags \u003d prop.getProperty(CommonConfigurationKeys\n             .HADOOP_CUSTOM_TAGS);\n-        Arrays.stream(customTags.split(\",\")).forEach(tag -\u003e TAGS.add(tag));\n+        TAGS.addAll(Arrays.asList(customTags.split(\",\")));\n       }\n \n     } catch (Exception ex) {\n       LOG.trace(\"Error adding tags in configuration\", ex);\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addTags(Properties prop) {\n    // Get all system tags\n    try {\n      if (prop.containsKey(CommonConfigurationKeys.HADOOP_TAGS_SYSTEM)) {\n        String systemTags \u003d prop.getProperty(CommonConfigurationKeys\n            .HADOOP_TAGS_SYSTEM);\n        TAGS.addAll(Arrays.asList(systemTags.split(\",\")));\n      }\n      // Get all custom tags\n      if (prop.containsKey(CommonConfigurationKeys.HADOOP_TAGS_CUSTOM)) {\n        String customTags \u003d prop.getProperty(CommonConfigurationKeys\n            .HADOOP_TAGS_CUSTOM);\n        TAGS.addAll(Arrays.asList(customTags.split(\",\")));\n      }\n\n      if (prop.containsKey(CommonConfigurationKeys.HADOOP_SYSTEM_TAGS)) {\n        String systemTags \u003d prop.getProperty(CommonConfigurationKeys\n            .HADOOP_SYSTEM_TAGS);\n        TAGS.addAll(Arrays.asList(systemTags.split(\",\")));\n      }\n      // Get all custom tags\n      if (prop.containsKey(CommonConfigurationKeys.HADOOP_CUSTOM_TAGS)) {\n        String customTags \u003d prop.getProperty(CommonConfigurationKeys\n            .HADOOP_CUSTOM_TAGS);\n        TAGS.addAll(Arrays.asList(customTags.split(\",\")));\n      }\n\n    } catch (Exception ex) {\n      LOG.trace(\"Error adding tags in configuration\", ex);\n    }\n\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {}
    },
    "57c2feb0d3ed0bb4f8642300433a35f5e28071c9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15474. Rename properties introduced for \u003ctags\u003e. Contributed by Zsolt Venczel.\n",
      "commitDate": "22/05/18 1:03 AM",
      "commitName": "57c2feb0d3ed0bb4f8642300433a35f5e28071c9",
      "commitAuthor": "Mukul Kumar Singh",
      "commitDateOld": "21/05/18 10:33 AM",
      "commitNameOld": "73e9120ad79c73703de21e0084591861813f3279",
      "commitAuthorOld": "Rushabh Shah",
      "daysBetweenCommits": 0.6,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,32 @@\n   public void addTags(Properties prop) {\n     // Get all system tags\n     try {\n+      if (prop.containsKey(CommonConfigurationKeys.HADOOP_TAGS_SYSTEM)) {\n+        String systemTags \u003d prop.getProperty(CommonConfigurationKeys\n+            .HADOOP_TAGS_SYSTEM);\n+        Arrays.stream(systemTags.split(\",\")).forEach(tag -\u003e TAGS.add(tag));\n+      }\n+      // Get all custom tags\n+      if (prop.containsKey(CommonConfigurationKeys.HADOOP_TAGS_CUSTOM)) {\n+        String customTags \u003d prop.getProperty(CommonConfigurationKeys\n+            .HADOOP_TAGS_CUSTOM);\n+        Arrays.stream(customTags.split(\",\")).forEach(tag -\u003e TAGS.add(tag));\n+      }\n+\n       if (prop.containsKey(CommonConfigurationKeys.HADOOP_SYSTEM_TAGS)) {\n         String systemTags \u003d prop.getProperty(CommonConfigurationKeys\n             .HADOOP_SYSTEM_TAGS);\n         Arrays.stream(systemTags.split(\",\")).forEach(tag -\u003e TAGS.add(tag));\n       }\n       // Get all custom tags\n       if (prop.containsKey(CommonConfigurationKeys.HADOOP_CUSTOM_TAGS)) {\n         String customTags \u003d prop.getProperty(CommonConfigurationKeys\n             .HADOOP_CUSTOM_TAGS);\n         Arrays.stream(customTags.split(\",\")).forEach(tag -\u003e TAGS.add(tag));\n       }\n \n     } catch (Exception ex) {\n       LOG.trace(\"Error adding tags in configuration\", ex);\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addTags(Properties prop) {\n    // Get all system tags\n    try {\n      if (prop.containsKey(CommonConfigurationKeys.HADOOP_TAGS_SYSTEM)) {\n        String systemTags \u003d prop.getProperty(CommonConfigurationKeys\n            .HADOOP_TAGS_SYSTEM);\n        Arrays.stream(systemTags.split(\",\")).forEach(tag -\u003e TAGS.add(tag));\n      }\n      // Get all custom tags\n      if (prop.containsKey(CommonConfigurationKeys.HADOOP_TAGS_CUSTOM)) {\n        String customTags \u003d prop.getProperty(CommonConfigurationKeys\n            .HADOOP_TAGS_CUSTOM);\n        Arrays.stream(customTags.split(\",\")).forEach(tag -\u003e TAGS.add(tag));\n      }\n\n      if (prop.containsKey(CommonConfigurationKeys.HADOOP_SYSTEM_TAGS)) {\n        String systemTags \u003d prop.getProperty(CommonConfigurationKeys\n            .HADOOP_SYSTEM_TAGS);\n        Arrays.stream(systemTags.split(\",\")).forEach(tag -\u003e TAGS.add(tag));\n      }\n      // Get all custom tags\n      if (prop.containsKey(CommonConfigurationKeys.HADOOP_CUSTOM_TAGS)) {\n        String customTags \u003d prop.getProperty(CommonConfigurationKeys\n            .HADOOP_CUSTOM_TAGS);\n        Arrays.stream(customTags.split(\",\")).forEach(tag -\u003e TAGS.add(tag));\n      }\n\n    } catch (Exception ex) {\n      LOG.trace(\"Error adding tags in configuration\", ex);\n    }\n\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {}
    },
    "28790b81ecb719ac26a01ad0c400ee5f1c29ccf8": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15295. Remove redundant logging related to tags from Configuration. Contributed by Ajay Kumar.\n",
      "commitDate": "23/03/18 9:17 PM",
      "commitName": "28790b81ecb719ac26a01ad0c400ee5f1c29ccf8",
      "commitAuthor": "Anu Engineer",
      "diff": "@@ -0,0 +1,20 @@\n+  public void addTags(Properties prop) {\n+    // Get all system tags\n+    try {\n+      if (prop.containsKey(CommonConfigurationKeys.HADOOP_SYSTEM_TAGS)) {\n+        String systemTags \u003d prop.getProperty(CommonConfigurationKeys\n+            .HADOOP_SYSTEM_TAGS);\n+        Arrays.stream(systemTags.split(\",\")).forEach(tag -\u003e TAGS.add(tag));\n+      }\n+      // Get all custom tags\n+      if (prop.containsKey(CommonConfigurationKeys.HADOOP_CUSTOM_TAGS)) {\n+        String customTags \u003d prop.getProperty(CommonConfigurationKeys\n+            .HADOOP_CUSTOM_TAGS);\n+        Arrays.stream(customTags.split(\",\")).forEach(tag -\u003e TAGS.add(tag));\n+      }\n+\n+    } catch (Exception ex) {\n+      LOG.trace(\"Error adding tags in configuration\", ex);\n+    }\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void addTags(Properties prop) {\n    // Get all system tags\n    try {\n      if (prop.containsKey(CommonConfigurationKeys.HADOOP_SYSTEM_TAGS)) {\n        String systemTags \u003d prop.getProperty(CommonConfigurationKeys\n            .HADOOP_SYSTEM_TAGS);\n        Arrays.stream(systemTags.split(\",\")).forEach(tag -\u003e TAGS.add(tag));\n      }\n      // Get all custom tags\n      if (prop.containsKey(CommonConfigurationKeys.HADOOP_CUSTOM_TAGS)) {\n        String customTags \u003d prop.getProperty(CommonConfigurationKeys\n            .HADOOP_CUSTOM_TAGS);\n        Arrays.stream(customTags.split(\",\")).forEach(tag -\u003e TAGS.add(tag));\n      }\n\n    } catch (Exception ex) {\n      LOG.trace(\"Error adding tags in configuration\", ex);\n    }\n\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java"
    }
  }
}