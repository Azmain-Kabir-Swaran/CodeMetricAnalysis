{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApiServer.java",
  "functionName": "updateLifetime",
  "functionId": "updateLifetime___appName-String__updateAppData-Service__ugi-UserGroupInformation(modifiers-final)",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
  "functionStartLine": 669,
  "functionEndLine": 692,
  "numCommitsSeen": 55,
  "timeTaken": 6740,
  "changeHistory": [
    "efc4d91cbeab8a13f6d61cb0e56443adb2d77559",
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0",
    "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d",
    "7dd4490a44442bd2b682a5f1a8605e6f6c053037",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64",
    "1888318c89776f0bf354c1b13e3ee169e14ff638",
    "c31cd981ebabc0747cabcc07a8c8797619ed2c53"
  ],
  "changeHistoryShort": {
    "efc4d91cbeab8a13f6d61cb0e56443adb2d77559": "Ybodychange",
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0": "Yfilerename",
    "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "7dd4490a44442bd2b682a5f1a8605e6f6c053037": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": "Ymovefromfile",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Ybodychange",
    "c31cd981ebabc0747cabcc07a8c8797619ed2c53": "Yintroduced"
  },
  "changeHistoryDetails": {
    "efc4d91cbeab8a13f6d61cb0e56443adb2d77559": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9067. YARN Resource Manager is running OOM because of leak of Configuration Object. Contributed by Eric Yang.\n",
      "commitDate": "28/11/18 5:34 PM",
      "commitName": "efc4d91cbeab8a13f6d61cb0e56443adb2d77559",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "12/11/18 4:53 PM",
      "commitNameOld": "4c465f5535054dad2ef0b18128fb115129f6939e",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 16.03,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,24 @@\n   private Response updateLifetime(String appName, Service updateAppData,\n       final UserGroupInformation ugi) throws IOException,\n       InterruptedException {\n     String newLifeTime \u003d ugi.doAs(new PrivilegedExceptionAction\u003cString\u003e() {\n       @Override\n       public String run() throws YarnException, IOException {\n         ServiceClient sc \u003d getServiceClient();\n-        sc.init(YARN_CONFIG);\n-        sc.start();\n-        String newLifeTime \u003d sc.updateLifetime(appName,\n-            updateAppData.getLifetime());\n-        sc.close();\n-        return newLifeTime;\n+        try {\n+          sc.init(YARN_CONFIG);\n+          sc.start();\n+          String newLifeTime \u003d sc.updateLifetime(appName,\n+              updateAppData.getLifetime());\n+          return newLifeTime;\n+        } finally {\n+          sc.close();\n+        }\n       }\n     });\n     ServiceStatus status \u003d new ServiceStatus();\n     status.setDiagnostics(\n         \"Service (\" + appName + \")\u0027s lifeTime is updated to \" + newLifeTime\n             + \", \" + updateAppData.getLifetime() + \" seconds remaining\");\n     return formatResponse(Status.OK, status);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Response updateLifetime(String appName, Service updateAppData,\n      final UserGroupInformation ugi) throws IOException,\n      InterruptedException {\n    String newLifeTime \u003d ugi.doAs(new PrivilegedExceptionAction\u003cString\u003e() {\n      @Override\n      public String run() throws YarnException, IOException {\n        ServiceClient sc \u003d getServiceClient();\n        try {\n          sc.init(YARN_CONFIG);\n          sc.start();\n          String newLifeTime \u003d sc.updateLifetime(appName,\n              updateAppData.getLifetime());\n          return newLifeTime;\n        } finally {\n          sc.close();\n        }\n      }\n    });\n    ServiceStatus status \u003d new ServiceStatus();\n    status.setDiagnostics(\n        \"Service (\" + appName + \")\u0027s lifeTime is updated to \" + newLifeTime\n            + \", \" + updateAppData.getLifetime() + \" seconds remaining\");\n    return formatResponse(Status.OK, status);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
      "extendedDetails": {}
    },
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7530.  Refactored YARN service API project location.\n            Contributed by Chandni Singh\n",
      "commitDate": "18/05/18 2:29 PM",
      "commitName": "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "18/05/18 11:29 AM",
      "commitNameOld": "89f59113927dd886f09d8fe2c05ff2cd5d1390c1",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Response updateLifetime(String appName, Service updateAppData,\n      final UserGroupInformation ugi) throws IOException,\n      InterruptedException {\n    String newLifeTime \u003d ugi.doAs(new PrivilegedExceptionAction\u003cString\u003e() {\n      @Override\n      public String run() throws YarnException, IOException {\n        ServiceClient sc \u003d getServiceClient();\n        sc.init(YARN_CONFIG);\n        sc.start();\n        String newLifeTime \u003d sc.updateLifetime(appName,\n            updateAppData.getLifetime());\n        sc.close();\n        return newLifeTime;\n      }\n    });\n    ServiceStatus status \u003d new ServiceStatus();\n    status.setDiagnostics(\n        \"Service (\" + appName + \")\u0027s lifeTime is updated to \" + newLifeTime\n            + \", \" + updateAppData.getLifetime() + \" seconds remaining\");\n    return formatResponse(Status.OK, status);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java"
      }
    },
    "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-7540 and YARN-7605. Convert yarn app cli to call yarn api services and implement doAs for Api Service REST API. Contributed by Eric Yang and Jian He\n",
      "commitDate": "23/01/18 5:54 PM",
      "commitName": "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7540 and YARN-7605. Convert yarn app cli to call yarn api services and implement doAs for Api Service REST API. Contributed by Eric Yang and Jian He\n",
          "commitDate": "23/01/18 5:54 PM",
          "commitName": "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "05/01/18 6:25 PM",
          "commitNameOld": "836e3c45e8232fc4c8c795c0f93d2f3d7353f392",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 17.98,
          "commitsBetweenForRepo": 84,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n-  private Response updateLifetime(String appName, Service updateAppData) {\n+  private Response updateLifetime(String appName, Service updateAppData,\n+      final UserGroupInformation ugi) throws IOException,\n+      InterruptedException {\n+    String newLifeTime \u003d ugi.doAs(new PrivilegedExceptionAction\u003cString\u003e() {\n+      @Override\n+      public String run() throws YarnException, IOException {\n+        ServiceClient sc \u003d getServiceClient();\n+        sc.init(YARN_CONFIG);\n+        sc.start();\n+        String newLifeTime \u003d sc.updateLifetime(appName,\n+            updateAppData.getLifetime());\n+        sc.close();\n+        return newLifeTime;\n+      }\n+    });\n     ServiceStatus status \u003d new ServiceStatus();\n-    try {\n-      String newLifeTime \u003d\n-          SERVICE_CLIENT.updateLifetime(appName, updateAppData.getLifetime());\n-      status.setDiagnostics(\n-          \"Service (\" + appName + \")\u0027s lifeTime is updated to \" + newLifeTime\n-              + \", \" + updateAppData.getLifetime()\n-              + \" seconds remaining\");\n-      return Response.ok(status).build();\n-    } catch (Exception e) {\n-      String message \u003d\n-          \"Failed to update service (\" + appName + \")\u0027s lifetime to \"\n-              + updateAppData.getLifetime();\n-      LOG.error(message, e);\n-      status.setDiagnostics(message + \": \" + e.getMessage());\n-      return Response.status(Status.INTERNAL_SERVER_ERROR).entity(status)\n-          .build();\n-    }\n+    status.setDiagnostics(\n+        \"Service (\" + appName + \")\u0027s lifeTime is updated to \" + newLifeTime\n+            + \", \" + updateAppData.getLifetime() + \" seconds remaining\");\n+    return formatResponse(Status.OK, status);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Response updateLifetime(String appName, Service updateAppData,\n      final UserGroupInformation ugi) throws IOException,\n      InterruptedException {\n    String newLifeTime \u003d ugi.doAs(new PrivilegedExceptionAction\u003cString\u003e() {\n      @Override\n      public String run() throws YarnException, IOException {\n        ServiceClient sc \u003d getServiceClient();\n        sc.init(YARN_CONFIG);\n        sc.start();\n        String newLifeTime \u003d sc.updateLifetime(appName,\n            updateAppData.getLifetime());\n        sc.close();\n        return newLifeTime;\n      }\n    });\n    ServiceStatus status \u003d new ServiceStatus();\n    status.setDiagnostics(\n        \"Service (\" + appName + \")\u0027s lifeTime is updated to \" + newLifeTime\n            + \", \" + updateAppData.getLifetime() + \" seconds remaining\");\n    return formatResponse(Status.OK, status);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
          "extendedDetails": {
            "oldValue": "[appName-String, updateAppData-Service]",
            "newValue": "[appName-String, updateAppData-Service, ugi-UserGroupInformation(modifiers-final)]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-7540 and YARN-7605. Convert yarn app cli to call yarn api services and implement doAs for Api Service REST API. Contributed by Eric Yang and Jian He\n",
          "commitDate": "23/01/18 5:54 PM",
          "commitName": "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "05/01/18 6:25 PM",
          "commitNameOld": "836e3c45e8232fc4c8c795c0f93d2f3d7353f392",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 17.98,
          "commitsBetweenForRepo": 84,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n-  private Response updateLifetime(String appName, Service updateAppData) {\n+  private Response updateLifetime(String appName, Service updateAppData,\n+      final UserGroupInformation ugi) throws IOException,\n+      InterruptedException {\n+    String newLifeTime \u003d ugi.doAs(new PrivilegedExceptionAction\u003cString\u003e() {\n+      @Override\n+      public String run() throws YarnException, IOException {\n+        ServiceClient sc \u003d getServiceClient();\n+        sc.init(YARN_CONFIG);\n+        sc.start();\n+        String newLifeTime \u003d sc.updateLifetime(appName,\n+            updateAppData.getLifetime());\n+        sc.close();\n+        return newLifeTime;\n+      }\n+    });\n     ServiceStatus status \u003d new ServiceStatus();\n-    try {\n-      String newLifeTime \u003d\n-          SERVICE_CLIENT.updateLifetime(appName, updateAppData.getLifetime());\n-      status.setDiagnostics(\n-          \"Service (\" + appName + \")\u0027s lifeTime is updated to \" + newLifeTime\n-              + \", \" + updateAppData.getLifetime()\n-              + \" seconds remaining\");\n-      return Response.ok(status).build();\n-    } catch (Exception e) {\n-      String message \u003d\n-          \"Failed to update service (\" + appName + \")\u0027s lifetime to \"\n-              + updateAppData.getLifetime();\n-      LOG.error(message, e);\n-      status.setDiagnostics(message + \": \" + e.getMessage());\n-      return Response.status(Status.INTERNAL_SERVER_ERROR).entity(status)\n-          .build();\n-    }\n+    status.setDiagnostics(\n+        \"Service (\" + appName + \")\u0027s lifeTime is updated to \" + newLifeTime\n+            + \", \" + updateAppData.getLifetime() + \" seconds remaining\");\n+    return formatResponse(Status.OK, status);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Response updateLifetime(String appName, Service updateAppData,\n      final UserGroupInformation ugi) throws IOException,\n      InterruptedException {\n    String newLifeTime \u003d ugi.doAs(new PrivilegedExceptionAction\u003cString\u003e() {\n      @Override\n      public String run() throws YarnException, IOException {\n        ServiceClient sc \u003d getServiceClient();\n        sc.init(YARN_CONFIG);\n        sc.start();\n        String newLifeTime \u003d sc.updateLifetime(appName,\n            updateAppData.getLifetime());\n        sc.close();\n        return newLifeTime;\n      }\n    });\n    ServiceStatus status \u003d new ServiceStatus();\n    status.setDiagnostics(\n        \"Service (\" + appName + \")\u0027s lifeTime is updated to \" + newLifeTime\n            + \", \" + updateAppData.getLifetime() + \" seconds remaining\");\n    return formatResponse(Status.OK, status);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException, InterruptedException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7540 and YARN-7605. Convert yarn app cli to call yarn api services and implement doAs for Api Service REST API. Contributed by Eric Yang and Jian He\n",
          "commitDate": "23/01/18 5:54 PM",
          "commitName": "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "05/01/18 6:25 PM",
          "commitNameOld": "836e3c45e8232fc4c8c795c0f93d2f3d7353f392",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 17.98,
          "commitsBetweenForRepo": 84,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,21 @@\n-  private Response updateLifetime(String appName, Service updateAppData) {\n+  private Response updateLifetime(String appName, Service updateAppData,\n+      final UserGroupInformation ugi) throws IOException,\n+      InterruptedException {\n+    String newLifeTime \u003d ugi.doAs(new PrivilegedExceptionAction\u003cString\u003e() {\n+      @Override\n+      public String run() throws YarnException, IOException {\n+        ServiceClient sc \u003d getServiceClient();\n+        sc.init(YARN_CONFIG);\n+        sc.start();\n+        String newLifeTime \u003d sc.updateLifetime(appName,\n+            updateAppData.getLifetime());\n+        sc.close();\n+        return newLifeTime;\n+      }\n+    });\n     ServiceStatus status \u003d new ServiceStatus();\n-    try {\n-      String newLifeTime \u003d\n-          SERVICE_CLIENT.updateLifetime(appName, updateAppData.getLifetime());\n-      status.setDiagnostics(\n-          \"Service (\" + appName + \")\u0027s lifeTime is updated to \" + newLifeTime\n-              + \", \" + updateAppData.getLifetime()\n-              + \" seconds remaining\");\n-      return Response.ok(status).build();\n-    } catch (Exception e) {\n-      String message \u003d\n-          \"Failed to update service (\" + appName + \")\u0027s lifetime to \"\n-              + updateAppData.getLifetime();\n-      LOG.error(message, e);\n-      status.setDiagnostics(message + \": \" + e.getMessage());\n-      return Response.status(Status.INTERNAL_SERVER_ERROR).entity(status)\n-          .build();\n-    }\n+    status.setDiagnostics(\n+        \"Service (\" + appName + \")\u0027s lifeTime is updated to \" + newLifeTime\n+            + \", \" + updateAppData.getLifetime() + \" seconds remaining\");\n+    return formatResponse(Status.OK, status);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Response updateLifetime(String appName, Service updateAppData,\n      final UserGroupInformation ugi) throws IOException,\n      InterruptedException {\n    String newLifeTime \u003d ugi.doAs(new PrivilegedExceptionAction\u003cString\u003e() {\n      @Override\n      public String run() throws YarnException, IOException {\n        ServiceClient sc \u003d getServiceClient();\n        sc.init(YARN_CONFIG);\n        sc.start();\n        String newLifeTime \u003d sc.updateLifetime(appName,\n            updateAppData.getLifetime());\n        sc.close();\n        return newLifeTime;\n      }\n    });\n    ServiceStatus status \u003d new ServiceStatus();\n    status.setDiagnostics(\n        \"Service (\" + appName + \")\u0027s lifeTime is updated to \" + newLifeTime\n            + \", \" + updateAppData.getLifetime() + \" seconds remaining\");\n    return formatResponse(Status.OK, status);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
          "extendedDetails": {}
        }
      ]
    },
    "7dd4490a44442bd2b682a5f1a8605e6f6c053037": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7073. Yarn native services rest API documentation. Contributed by Gour Saha\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "7dd4490a44442bd2b682a5f1a8605e6f6c053037",
      "commitAuthor": "Jian He",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,20 @@\n   private Response updateLifetime(String appName, Service updateAppData) {\n+    ServiceStatus status \u003d new ServiceStatus();\n     try {\n       String newLifeTime \u003d\n           SERVICE_CLIENT.updateLifetime(appName, updateAppData.getLifetime());\n-      return Response.ok(\"Service \" + appName + \" lifeTime is successfully updated to \"\n-          + updateAppData.getLifetime() + \" seconds from now: \" + newLifeTime).build();\n+      status.setDiagnostics(\n+          \"Service (\" + appName + \")\u0027s lifeTime is updated to \" + newLifeTime\n+              + \", \" + updateAppData.getLifetime()\n+              + \" seconds remaining\");\n+      return Response.ok(status).build();\n     } catch (Exception e) {\n       String message \u003d\n-          \"Failed to update service (\" + appName + \") lifetime (\"\n-              + updateAppData.getLifetime() + \")\";\n+          \"Failed to update service (\" + appName + \")\u0027s lifetime to \"\n+              + updateAppData.getLifetime();\n       LOG.error(message, e);\n-      return Response.status(Status.INTERNAL_SERVER_ERROR)\n-          .entity(message + \" : \" + e.getMessage()).build();\n+      status.setDiagnostics(message + \": \" + e.getMessage());\n+      return Response.status(Status.INTERNAL_SERVER_ERROR).entity(status)\n+          .build();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Response updateLifetime(String appName, Service updateAppData) {\n    ServiceStatus status \u003d new ServiceStatus();\n    try {\n      String newLifeTime \u003d\n          SERVICE_CLIENT.updateLifetime(appName, updateAppData.getLifetime());\n      status.setDiagnostics(\n          \"Service (\" + appName + \")\u0027s lifeTime is updated to \" + newLifeTime\n              + \", \" + updateAppData.getLifetime()\n              + \" seconds remaining\");\n      return Response.ok(status).build();\n    } catch (Exception e) {\n      String message \u003d\n          \"Failed to update service (\" + appName + \")\u0027s lifetime to \"\n              + updateAppData.getLifetime();\n      LOG.error(message, e);\n      status.setDiagnostics(message + \": \" + e.getMessage());\n      return Response.status(Status.INTERNAL_SERVER_ERROR).entity(status)\n          .build();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  private Response updateLifetime(String appName, Application updateAppData) {\n+  private Response updateLifetime(String appName, Service updateAppData) {\n     try {\n       String newLifeTime \u003d\n           SERVICE_CLIENT.updateLifetime(appName, updateAppData.getLifetime());\n-      return Response.ok(\"Application \" + appName + \" lifeTime is successfully updated to \"\n+      return Response.ok(\"Service \" + appName + \" lifeTime is successfully updated to \"\n           + updateAppData.getLifetime() + \" seconds from now: \" + newLifeTime).build();\n     } catch (Exception e) {\n       String message \u003d\n-          \"Failed to update application (\" + appName + \") lifetime (\"\n+          \"Failed to update service (\" + appName + \") lifetime (\"\n               + updateAppData.getLifetime() + \")\";\n       LOG.error(message, e);\n       return Response.status(Status.INTERNAL_SERVER_ERROR)\n           .entity(message + \" : \" + e.getMessage()).build();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Response updateLifetime(String appName, Service updateAppData) {\n    try {\n      String newLifeTime \u003d\n          SERVICE_CLIENT.updateLifetime(appName, updateAppData.getLifetime());\n      return Response.ok(\"Service \" + appName + \" lifeTime is successfully updated to \"\n          + updateAppData.getLifetime() + \" seconds from now: \" + newLifeTime).build();\n    } catch (Exception e) {\n      String message \u003d\n          \"Failed to update service (\" + appName + \") lifetime (\"\n              + updateAppData.getLifetime() + \")\";\n      LOG.error(message, e);\n      return Response.status(Status.INTERNAL_SERVER_ERROR)\n          .entity(message + \" : \" + e.getMessage()).build();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApplicationApiService.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  private Response updateLifetime(String appName, Application updateAppData) {\n+  private Response updateLifetime(String appName, Service updateAppData) {\n     try {\n       String newLifeTime \u003d\n           SERVICE_CLIENT.updateLifetime(appName, updateAppData.getLifetime());\n-      return Response.ok(\"Application \" + appName + \" lifeTime is successfully updated to \"\n+      return Response.ok(\"Service \" + appName + \" lifeTime is successfully updated to \"\n           + updateAppData.getLifetime() + \" seconds from now: \" + newLifeTime).build();\n     } catch (Exception e) {\n       String message \u003d\n-          \"Failed to update application (\" + appName + \") lifetime (\"\n+          \"Failed to update service (\" + appName + \") lifetime (\"\n               + updateAppData.getLifetime() + \")\";\n       LOG.error(message, e);\n       return Response.status(Status.INTERNAL_SERVER_ERROR)\n           .entity(message + \" : \" + e.getMessage()).build();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Response updateLifetime(String appName, Service updateAppData) {\n    try {\n      String newLifeTime \u003d\n          SERVICE_CLIENT.updateLifetime(appName, updateAppData.getLifetime());\n      return Response.ok(\"Service \" + appName + \" lifeTime is successfully updated to \"\n          + updateAppData.getLifetime() + \" seconds from now: \" + newLifeTime).build();\n    } catch (Exception e) {\n      String message \u003d\n          \"Failed to update service (\" + appName + \") lifetime (\"\n              + updateAppData.getLifetime() + \")\";\n      LOG.error(message, e);\n      return Response.status(Status.INTERNAL_SERVER_ERROR)\n          .entity(message + \" : \" + e.getMessage()).build();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  private Response updateLifetime(String appName, Application updateAppData) {\n+  private Response updateLifetime(String appName, Service updateAppData) {\n     try {\n       String newLifeTime \u003d\n           SERVICE_CLIENT.updateLifetime(appName, updateAppData.getLifetime());\n-      return Response.ok(\"Application \" + appName + \" lifeTime is successfully updated to \"\n+      return Response.ok(\"Service \" + appName + \" lifeTime is successfully updated to \"\n           + updateAppData.getLifetime() + \" seconds from now: \" + newLifeTime).build();\n     } catch (Exception e) {\n       String message \u003d\n-          \"Failed to update application (\" + appName + \") lifetime (\"\n+          \"Failed to update service (\" + appName + \") lifetime (\"\n               + updateAppData.getLifetime() + \")\";\n       LOG.error(message, e);\n       return Response.status(Status.INTERNAL_SERVER_ERROR)\n           .entity(message + \" : \" + e.getMessage()).build();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Response updateLifetime(String appName, Service updateAppData) {\n    try {\n      String newLifeTime \u003d\n          SERVICE_CLIENT.updateLifetime(appName, updateAppData.getLifetime());\n      return Response.ok(\"Service \" + appName + \" lifeTime is successfully updated to \"\n          + updateAppData.getLifetime() + \" seconds from now: \" + newLifeTime).build();\n    } catch (Exception e) {\n      String message \u003d\n          \"Failed to update service (\" + appName + \") lifetime (\"\n              + updateAppData.getLifetime() + \")\";\n      LOG.error(message, e);\n      return Response.status(Status.INTERNAL_SERVER_ERROR)\n          .entity(message + \" : \" + e.getMessage()).build();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApiServer.java",
          "extendedDetails": {
            "oldValue": "[appName-String, updateAppData-Application]",
            "newValue": "[appName-String, updateAppData-Service]"
          }
        }
      ]
    },
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-7050. Post cleanup after YARN-6903, removal of org.apache.slider package. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "2191f5b533c6b4763f5d443d21127f1f8552ce64",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "79bf5c084d4a063f1a933cae498af23edfd46792",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Response updateLifetime(String appName, Application updateAppData) {\n    try {\n      String newLifeTime \u003d\n          SERVICE_CLIENT.updateLifetime(appName, updateAppData.getLifetime());\n      return Response.ok(\"Application \" + appName + \" lifeTime is successfully updated to \"\n          + updateAppData.getLifetime() + \" seconds from now: \" + newLifeTime).build();\n    } catch (Exception e) {\n      String message \u003d\n          \"Failed to update application (\" + appName + \") lifetime (\"\n              + updateAppData.getLifetime() + \")\";\n      LOG.error(message, e);\n      return Response.status(Status.INTERNAL_SERVER_ERROR)\n          .entity(message + \" : \" + e.getMessage()).build();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApplicationApiService.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/services/api/impl/ApplicationApiService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/webapp/ApplicationApiService.java",
        "oldMethodName": "updateLifetime",
        "newMethodName": "updateLifetime"
      }
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:28 PM",
      "commitNameOld": "384ee13eeccef6994b5f5b2ea8de4513e52c2124",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   private Response updateLifetime(String appName, Application updateAppData) {\n     try {\n       String newLifeTime \u003d\n-          SLIDER_CLIENT.updateLifetime(appName, updateAppData.getLifetime());\n+          SERVICE_CLIENT.updateLifetime(appName, updateAppData.getLifetime());\n       return Response.ok(\"Application \" + appName + \" lifeTime is successfully updated to \"\n           + updateAppData.getLifetime() + \" seconds from now: \" + newLifeTime).build();\n     } catch (Exception e) {\n       String message \u003d\n           \"Failed to update application (\" + appName + \") lifetime (\"\n               + updateAppData.getLifetime() + \")\";\n-      logger.error(message, e);\n+      LOG.error(message, e);\n       return Response.status(Status.INTERNAL_SERVER_ERROR)\n           .entity(message + \" : \" + e.getMessage()).build();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Response updateLifetime(String appName, Application updateAppData) {\n    try {\n      String newLifeTime \u003d\n          SERVICE_CLIENT.updateLifetime(appName, updateAppData.getLifetime());\n      return Response.ok(\"Application \" + appName + \" lifeTime is successfully updated to \"\n          + updateAppData.getLifetime() + \" seconds from now: \" + newLifeTime).build();\n    } catch (Exception e) {\n      String message \u003d\n          \"Failed to update application (\" + appName + \") lifetime (\"\n              + updateAppData.getLifetime() + \")\";\n      LOG.error(message, e);\n      return Response.status(Status.INTERNAL_SERVER_ERROR)\n          .entity(message + \" : \" + e.getMessage()).build();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/services/api/impl/ApplicationApiService.java",
      "extendedDetails": {}
    },
    "c31cd981ebabc0747cabcc07a8c8797619ed2c53": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6255. Refactor yarn-native-services framework. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "c31cd981ebabc0747cabcc07a8c8797619ed2c53",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,15 @@\n+  private Response updateLifetime(String appName, Application updateAppData) {\n+    try {\n+      String newLifeTime \u003d\n+          SLIDER_CLIENT.updateLifetime(appName, updateAppData.getLifetime());\n+      return Response.ok(\"Application \" + appName + \" lifeTime is successfully updated to \"\n+          + updateAppData.getLifetime() + \" seconds from now: \" + newLifeTime).build();\n+    } catch (Exception e) {\n+      String message \u003d\n+          \"Failed to update application (\" + appName + \") lifetime (\"\n+              + updateAppData.getLifetime() + \")\";\n+      logger.error(message, e);\n+      return Response.status(Status.INTERNAL_SERVER_ERROR)\n+          .entity(message + \" : \" + e.getMessage()).build();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Response updateLifetime(String appName, Application updateAppData) {\n    try {\n      String newLifeTime \u003d\n          SLIDER_CLIENT.updateLifetime(appName, updateAppData.getLifetime());\n      return Response.ok(\"Application \" + appName + \" lifeTime is successfully updated to \"\n          + updateAppData.getLifetime() + \" seconds from now: \" + newLifeTime).build();\n    } catch (Exception e) {\n      String message \u003d\n          \"Failed to update application (\" + appName + \") lifetime (\"\n              + updateAppData.getLifetime() + \")\";\n      logger.error(message, e);\n      return Response.status(Status.INTERNAL_SERVER_ERROR)\n          .entity(message + \" : \" + e.getMessage()).build();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/services/api/impl/ApplicationApiService.java"
    }
  }
}