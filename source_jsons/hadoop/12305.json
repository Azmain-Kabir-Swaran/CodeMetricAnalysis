{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "VolumeScanner.java",
  "functionName": "scanBlock",
  "functionId": "scanBlock___cblock-ExtendedBlock__bytesPerSec-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/VolumeScanner.java",
  "functionStartLine": 416,
  "functionEndLine": 458,
  "numCommitsSeen": 20,
  "timeTaken": 3258,
  "changeHistory": [
    "6bf921a5c3152a307b5c0903056d73ce07775a08",
    "aebb9127bae872835d057e1c6a6e6b3c6a8be6cd",
    "96b12662ea76e3ded4ef13944fc8df206cfb4613",
    "0d1c1152f1ce2706f92109bfbdff0d62e98e6797",
    "6e62a1a6728b1f782f64065424f92b292c3f163a"
  ],
  "changeHistoryShort": {
    "6bf921a5c3152a307b5c0903056d73ce07775a08": "Ybodychange",
    "aebb9127bae872835d057e1c6a6e6b3c6a8be6cd": "Ybodychange",
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": "Ybodychange",
    "0d1c1152f1ce2706f92109bfbdff0d62e98e6797": "Ybodychange",
    "6e62a1a6728b1f782f64065424f92b292c3f163a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6bf921a5c3152a307b5c0903056d73ce07775a08": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12371. BlockVerificationFailures and BlocksVerified show up as 0 in Datanode JMX. Contributed by Hanisha Koneru.\n",
      "commitDate": "21/09/17 6:42 AM",
      "commitName": "6bf921a5c3152a307b5c0903056d73ce07775a08",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "15/12/16 4:32 PM",
      "commitNameOld": "aebb9127bae872835d057e1c6a6e6b3c6a8be6cd",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 279.55,
      "commitsBetweenForRepo": 1682,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,43 @@\n   private long scanBlock(ExtendedBlock cblock, long bytesPerSec) {\n     // \u0027cblock\u0027 has a valid blockId and block pool id, but we don\u0027t yet know the\n     // genstamp the block is supposed to have.  Ask the FsDatasetImpl for this\n     // information.\n     ExtendedBlock block \u003d null;\n     try {\n       Block b \u003d volume.getDataset().getStoredBlock(\n           cblock.getBlockPoolId(), cblock.getBlockId());\n       if (b \u003d\u003d null) {\n         LOG.info(\"Replica {} was not found in the VolumeMap for volume {}\",\n             cblock, volume);\n       } else {\n         block \u003d new ExtendedBlock(cblock.getBlockPoolId(), b);\n       }\n     } catch (FileNotFoundException e) {\n       LOG.info(\"FileNotFoundException while finding block {} on volume {}\",\n           cblock, volume);\n     } catch (IOException e) {\n       LOG.warn(\"I/O error while finding block {} on volume {}\",\n             cblock, volume);\n     }\n     if (block \u003d\u003d null) {\n       return -1; // block not found.\n     }\n     LOG.debug(\"start scanning block {}\", block);\n     BlockSender blockSender \u003d null;\n     try {\n       blockSender \u003d new BlockSender(block, 0, -1,\n           false, true, true, datanode, null,\n           CachingStrategy.newDropBehind());\n       throttler.setBandwidth(bytesPerSec);\n       long bytesRead \u003d blockSender.sendBlock(nullStream, null, throttler);\n       resultHandler.handle(block, null);\n+      metrics.incrBlocksVerified();\n       return bytesRead;\n     } catch (IOException e) {\n       resultHandler.handle(block, e);\n     } finally {\n       IOUtils.cleanup(null, blockSender);\n     }\n+    metrics.incrBlockVerificationFailures();\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long scanBlock(ExtendedBlock cblock, long bytesPerSec) {\n    // \u0027cblock\u0027 has a valid blockId and block pool id, but we don\u0027t yet know the\n    // genstamp the block is supposed to have.  Ask the FsDatasetImpl for this\n    // information.\n    ExtendedBlock block \u003d null;\n    try {\n      Block b \u003d volume.getDataset().getStoredBlock(\n          cblock.getBlockPoolId(), cblock.getBlockId());\n      if (b \u003d\u003d null) {\n        LOG.info(\"Replica {} was not found in the VolumeMap for volume {}\",\n            cblock, volume);\n      } else {\n        block \u003d new ExtendedBlock(cblock.getBlockPoolId(), b);\n      }\n    } catch (FileNotFoundException e) {\n      LOG.info(\"FileNotFoundException while finding block {} on volume {}\",\n          cblock, volume);\n    } catch (IOException e) {\n      LOG.warn(\"I/O error while finding block {} on volume {}\",\n            cblock, volume);\n    }\n    if (block \u003d\u003d null) {\n      return -1; // block not found.\n    }\n    LOG.debug(\"start scanning block {}\", block);\n    BlockSender blockSender \u003d null;\n    try {\n      blockSender \u003d new BlockSender(block, 0, -1,\n          false, true, true, datanode, null,\n          CachingStrategy.newDropBehind());\n      throttler.setBandwidth(bytesPerSec);\n      long bytesRead \u003d blockSender.sendBlock(nullStream, null, throttler);\n      resultHandler.handle(block, null);\n      metrics.incrBlocksVerified();\n      return bytesRead;\n    } catch (IOException e) {\n      resultHandler.handle(block, e);\n    } finally {\n      IOUtils.cleanup(null, blockSender);\n    }\n    metrics.incrBlockVerificationFailures();\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/VolumeScanner.java",
      "extendedDetails": {}
    },
    "aebb9127bae872835d057e1c6a6e6b3c6a8be6cd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11160. VolumeScanner reports write-in-progress replicas as corrupt incorrectly. Contributed by Wei-Chiu Chuang and Yongjun Zhang.\n",
      "commitDate": "15/12/16 4:32 PM",
      "commitName": "aebb9127bae872835d057e1c6a6e6b3c6a8be6cd",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "10/10/16 3:30 PM",
      "commitNameOld": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 66.09,
      "commitsBetweenForRepo": 518,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,41 @@\n   private long scanBlock(ExtendedBlock cblock, long bytesPerSec) {\n     // \u0027cblock\u0027 has a valid blockId and block pool id, but we don\u0027t yet know the\n     // genstamp the block is supposed to have.  Ask the FsDatasetImpl for this\n     // information.\n     ExtendedBlock block \u003d null;\n     try {\n       Block b \u003d volume.getDataset().getStoredBlock(\n           cblock.getBlockPoolId(), cblock.getBlockId());\n       if (b \u003d\u003d null) {\n         LOG.info(\"Replica {} was not found in the VolumeMap for volume {}\",\n             cblock, volume);\n       } else {\n         block \u003d new ExtendedBlock(cblock.getBlockPoolId(), b);\n       }\n     } catch (FileNotFoundException e) {\n       LOG.info(\"FileNotFoundException while finding block {} on volume {}\",\n           cblock, volume);\n     } catch (IOException e) {\n       LOG.warn(\"I/O error while finding block {} on volume {}\",\n             cblock, volume);\n     }\n     if (block \u003d\u003d null) {\n       return -1; // block not found.\n     }\n+    LOG.debug(\"start scanning block {}\", block);\n     BlockSender blockSender \u003d null;\n     try {\n       blockSender \u003d new BlockSender(block, 0, -1,\n           false, true, true, datanode, null,\n           CachingStrategy.newDropBehind());\n       throttler.setBandwidth(bytesPerSec);\n       long bytesRead \u003d blockSender.sendBlock(nullStream, null, throttler);\n       resultHandler.handle(block, null);\n       return bytesRead;\n     } catch (IOException e) {\n       resultHandler.handle(block, e);\n     } finally {\n       IOUtils.cleanup(null, blockSender);\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long scanBlock(ExtendedBlock cblock, long bytesPerSec) {\n    // \u0027cblock\u0027 has a valid blockId and block pool id, but we don\u0027t yet know the\n    // genstamp the block is supposed to have.  Ask the FsDatasetImpl for this\n    // information.\n    ExtendedBlock block \u003d null;\n    try {\n      Block b \u003d volume.getDataset().getStoredBlock(\n          cblock.getBlockPoolId(), cblock.getBlockId());\n      if (b \u003d\u003d null) {\n        LOG.info(\"Replica {} was not found in the VolumeMap for volume {}\",\n            cblock, volume);\n      } else {\n        block \u003d new ExtendedBlock(cblock.getBlockPoolId(), b);\n      }\n    } catch (FileNotFoundException e) {\n      LOG.info(\"FileNotFoundException while finding block {} on volume {}\",\n          cblock, volume);\n    } catch (IOException e) {\n      LOG.warn(\"I/O error while finding block {} on volume {}\",\n            cblock, volume);\n    }\n    if (block \u003d\u003d null) {\n      return -1; // block not found.\n    }\n    LOG.debug(\"start scanning block {}\", block);\n    BlockSender blockSender \u003d null;\n    try {\n      blockSender \u003d new BlockSender(block, 0, -1,\n          false, true, true, datanode, null,\n          CachingStrategy.newDropBehind());\n      throttler.setBandwidth(bytesPerSec);\n      long bytesRead \u003d blockSender.sendBlock(nullStream, null, throttler);\n      resultHandler.handle(block, null);\n      return bytesRead;\n    } catch (IOException e) {\n      resultHandler.handle(block, e);\n    } finally {\n      IOUtils.cleanup(null, blockSender);\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/VolumeScanner.java",
      "extendedDetails": {}
    },
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10637. Modifications to remove the assumption that FsVolumes are backed by java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "10/10/16 3:30 PM",
      "commitName": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "29/08/16 1:59 PM",
      "commitNameOld": "5d1609ddf275e4907bd224bf618e2aad4b262888",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 42.06,
      "commitsBetweenForRepo": 263,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n   private long scanBlock(ExtendedBlock cblock, long bytesPerSec) {\n     // \u0027cblock\u0027 has a valid blockId and block pool id, but we don\u0027t yet know the\n     // genstamp the block is supposed to have.  Ask the FsDatasetImpl for this\n     // information.\n     ExtendedBlock block \u003d null;\n     try {\n       Block b \u003d volume.getDataset().getStoredBlock(\n           cblock.getBlockPoolId(), cblock.getBlockId());\n       if (b \u003d\u003d null) {\n         LOG.info(\"Replica {} was not found in the VolumeMap for volume {}\",\n-            cblock, volume.getBasePath());\n+            cblock, volume);\n       } else {\n         block \u003d new ExtendedBlock(cblock.getBlockPoolId(), b);\n       }\n     } catch (FileNotFoundException e) {\n       LOG.info(\"FileNotFoundException while finding block {} on volume {}\",\n-          cblock, volume.getBasePath());\n+          cblock, volume);\n     } catch (IOException e) {\n       LOG.warn(\"I/O error while finding block {} on volume {}\",\n-            cblock, volume.getBasePath());\n+            cblock, volume);\n     }\n     if (block \u003d\u003d null) {\n       return -1; // block not found.\n     }\n     BlockSender blockSender \u003d null;\n     try {\n       blockSender \u003d new BlockSender(block, 0, -1,\n           false, true, true, datanode, null,\n           CachingStrategy.newDropBehind());\n       throttler.setBandwidth(bytesPerSec);\n       long bytesRead \u003d blockSender.sendBlock(nullStream, null, throttler);\n       resultHandler.handle(block, null);\n       return bytesRead;\n     } catch (IOException e) {\n       resultHandler.handle(block, e);\n     } finally {\n       IOUtils.cleanup(null, blockSender);\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long scanBlock(ExtendedBlock cblock, long bytesPerSec) {\n    // \u0027cblock\u0027 has a valid blockId and block pool id, but we don\u0027t yet know the\n    // genstamp the block is supposed to have.  Ask the FsDatasetImpl for this\n    // information.\n    ExtendedBlock block \u003d null;\n    try {\n      Block b \u003d volume.getDataset().getStoredBlock(\n          cblock.getBlockPoolId(), cblock.getBlockId());\n      if (b \u003d\u003d null) {\n        LOG.info(\"Replica {} was not found in the VolumeMap for volume {}\",\n            cblock, volume);\n      } else {\n        block \u003d new ExtendedBlock(cblock.getBlockPoolId(), b);\n      }\n    } catch (FileNotFoundException e) {\n      LOG.info(\"FileNotFoundException while finding block {} on volume {}\",\n          cblock, volume);\n    } catch (IOException e) {\n      LOG.warn(\"I/O error while finding block {} on volume {}\",\n            cblock, volume);\n    }\n    if (block \u003d\u003d null) {\n      return -1; // block not found.\n    }\n    BlockSender blockSender \u003d null;\n    try {\n      blockSender \u003d new BlockSender(block, 0, -1,\n          false, true, true, datanode, null,\n          CachingStrategy.newDropBehind());\n      throttler.setBandwidth(bytesPerSec);\n      long bytesRead \u003d blockSender.sendBlock(nullStream, null, throttler);\n      resultHandler.handle(block, null);\n      return bytesRead;\n    } catch (IOException e) {\n      resultHandler.handle(block, e);\n    } finally {\n      IOUtils.cleanup(null, blockSender);\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/VolumeScanner.java",
      "extendedDetails": {}
    },
    "0d1c1152f1ce2706f92109bfbdff0d62e98e6797": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10282. The VolumeScanner should warn about replica files which are misplaced. Contributed by Colin Patrick McCabe.\n",
      "commitDate": "14/04/16 5:58 AM",
      "commitName": "0d1c1152f1ce2706f92109bfbdff0d62e98e6797",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "01/02/16 11:55 AM",
      "commitNameOld": "b11008d54d8aa3eb9c7c10c3a0734d95b9ef41e9",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 72.71,
      "commitsBetweenForRepo": 470,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n   private long scanBlock(ExtendedBlock cblock, long bytesPerSec) {\n     // \u0027cblock\u0027 has a valid blockId and block pool id, but we don\u0027t yet know the\n     // genstamp the block is supposed to have.  Ask the FsDatasetImpl for this\n     // information.\n     ExtendedBlock block \u003d null;\n     try {\n       Block b \u003d volume.getDataset().getStoredBlock(\n           cblock.getBlockPoolId(), cblock.getBlockId());\n       if (b \u003d\u003d null) {\n-        LOG.info(\"FileNotFound while finding block {} on volume {}\",\n+        LOG.info(\"Replica {} was not found in the VolumeMap for volume {}\",\n             cblock, volume.getBasePath());\n       } else {\n         block \u003d new ExtendedBlock(cblock.getBlockPoolId(), b);\n       }\n     } catch (FileNotFoundException e) {\n       LOG.info(\"FileNotFoundException while finding block {} on volume {}\",\n           cblock, volume.getBasePath());\n     } catch (IOException e) {\n       LOG.warn(\"I/O error while finding block {} on volume {}\",\n             cblock, volume.getBasePath());\n     }\n     if (block \u003d\u003d null) {\n       return -1; // block not found.\n     }\n     BlockSender blockSender \u003d null;\n     try {\n       blockSender \u003d new BlockSender(block, 0, -1,\n           false, true, true, datanode, null,\n           CachingStrategy.newDropBehind());\n       throttler.setBandwidth(bytesPerSec);\n       long bytesRead \u003d blockSender.sendBlock(nullStream, null, throttler);\n       resultHandler.handle(block, null);\n       return bytesRead;\n     } catch (IOException e) {\n       resultHandler.handle(block, e);\n     } finally {\n       IOUtils.cleanup(null, blockSender);\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long scanBlock(ExtendedBlock cblock, long bytesPerSec) {\n    // \u0027cblock\u0027 has a valid blockId and block pool id, but we don\u0027t yet know the\n    // genstamp the block is supposed to have.  Ask the FsDatasetImpl for this\n    // information.\n    ExtendedBlock block \u003d null;\n    try {\n      Block b \u003d volume.getDataset().getStoredBlock(\n          cblock.getBlockPoolId(), cblock.getBlockId());\n      if (b \u003d\u003d null) {\n        LOG.info(\"Replica {} was not found in the VolumeMap for volume {}\",\n            cblock, volume.getBasePath());\n      } else {\n        block \u003d new ExtendedBlock(cblock.getBlockPoolId(), b);\n      }\n    } catch (FileNotFoundException e) {\n      LOG.info(\"FileNotFoundException while finding block {} on volume {}\",\n          cblock, volume.getBasePath());\n    } catch (IOException e) {\n      LOG.warn(\"I/O error while finding block {} on volume {}\",\n            cblock, volume.getBasePath());\n    }\n    if (block \u003d\u003d null) {\n      return -1; // block not found.\n    }\n    BlockSender blockSender \u003d null;\n    try {\n      blockSender \u003d new BlockSender(block, 0, -1,\n          false, true, true, datanode, null,\n          CachingStrategy.newDropBehind());\n      throttler.setBandwidth(bytesPerSec);\n      long bytesRead \u003d blockSender.sendBlock(nullStream, null, throttler);\n      resultHandler.handle(block, null);\n      return bytesRead;\n    } catch (IOException e) {\n      resultHandler.handle(block, e);\n    } finally {\n      IOUtils.cleanup(null, blockSender);\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/VolumeScanner.java",
      "extendedDetails": {}
    },
    "6e62a1a6728b1f782f64065424f92b292c3f163a": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7430. Refactor the BlockScanner to use O(1) memory and use multiple threads (cmccabe)\n",
      "commitDate": "21/01/15 7:00 PM",
      "commitName": "6e62a1a6728b1f782f64065424f92b292c3f163a",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,40 @@\n+  private long scanBlock(ExtendedBlock cblock, long bytesPerSec) {\n+    // \u0027cblock\u0027 has a valid blockId and block pool id, but we don\u0027t yet know the\n+    // genstamp the block is supposed to have.  Ask the FsDatasetImpl for this\n+    // information.\n+    ExtendedBlock block \u003d null;\n+    try {\n+      Block b \u003d volume.getDataset().getStoredBlock(\n+          cblock.getBlockPoolId(), cblock.getBlockId());\n+      if (b \u003d\u003d null) {\n+        LOG.info(\"FileNotFound while finding block {} on volume {}\",\n+            cblock, volume.getBasePath());\n+      } else {\n+        block \u003d new ExtendedBlock(cblock.getBlockPoolId(), b);\n+      }\n+    } catch (FileNotFoundException e) {\n+      LOG.info(\"FileNotFoundException while finding block {} on volume {}\",\n+          cblock, volume.getBasePath());\n+    } catch (IOException e) {\n+      LOG.warn(\"I/O error while finding block {} on volume {}\",\n+            cblock, volume.getBasePath());\n+    }\n+    if (block \u003d\u003d null) {\n+      return -1; // block not found.\n+    }\n+    BlockSender blockSender \u003d null;\n+    try {\n+      blockSender \u003d new BlockSender(block, 0, -1,\n+          false, true, true, datanode, null,\n+          CachingStrategy.newDropBehind());\n+      throttler.setBandwidth(bytesPerSec);\n+      long bytesRead \u003d blockSender.sendBlock(nullStream, null, throttler);\n+      resultHandler.handle(block, null);\n+      return bytesRead;\n+    } catch (IOException e) {\n+      resultHandler.handle(block, e);\n+    } finally {\n+      IOUtils.cleanup(null, blockSender);\n+    }\n+    return -1;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private long scanBlock(ExtendedBlock cblock, long bytesPerSec) {\n    // \u0027cblock\u0027 has a valid blockId and block pool id, but we don\u0027t yet know the\n    // genstamp the block is supposed to have.  Ask the FsDatasetImpl for this\n    // information.\n    ExtendedBlock block \u003d null;\n    try {\n      Block b \u003d volume.getDataset().getStoredBlock(\n          cblock.getBlockPoolId(), cblock.getBlockId());\n      if (b \u003d\u003d null) {\n        LOG.info(\"FileNotFound while finding block {} on volume {}\",\n            cblock, volume.getBasePath());\n      } else {\n        block \u003d new ExtendedBlock(cblock.getBlockPoolId(), b);\n      }\n    } catch (FileNotFoundException e) {\n      LOG.info(\"FileNotFoundException while finding block {} on volume {}\",\n          cblock, volume.getBasePath());\n    } catch (IOException e) {\n      LOG.warn(\"I/O error while finding block {} on volume {}\",\n            cblock, volume.getBasePath());\n    }\n    if (block \u003d\u003d null) {\n      return -1; // block not found.\n    }\n    BlockSender blockSender \u003d null;\n    try {\n      blockSender \u003d new BlockSender(block, 0, -1,\n          false, true, true, datanode, null,\n          CachingStrategy.newDropBehind());\n      throttler.setBandwidth(bytesPerSec);\n      long bytesRead \u003d blockSender.sendBlock(nullStream, null, throttler);\n      resultHandler.handle(block, null);\n      return bytesRead;\n    } catch (IOException e) {\n      resultHandler.handle(block, e);\n    } finally {\n      IOUtils.cleanup(null, blockSender);\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/VolumeScanner.java"
    }
  }
}