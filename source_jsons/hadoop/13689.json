{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockPlacementPolicyDefault.java",
  "functionName": "chooseRandom",
  "functionId": "chooseRandom___scope-String__excludedNodes-Set__Node____blocksize-long__maxNodesPerRack-int__results-List__DatanodeStorageInfo____avoidStaleNodes-boolean__storageTypes-EnumMap__StorageType,Integer__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
  "functionStartLine": 774,
  "functionEndLine": 784,
  "numCommitsSeen": 141,
  "timeTaken": 2404,
  "changeHistory": [
    "e08701ec71f7c10d8f15122d90c35f9f22e40837"
  ],
  "changeHistoryShort": {
    "e08701ec71f7c10d8f15122d90c35f9f22e40837": "Ymultichange(Yparameterchange,Ybodychange)"
  },
  "changeHistoryDetails": {
    "e08701ec71f7c10d8f15122d90c35f9f22e40837": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6961. Archival Storage: BlockPlacementPolicy#chooseTarget should check each valid storage type in each choosing round.\n",
      "commitDate": "04/09/14 2:19 PM",
      "commitName": "e08701ec71f7c10d8f15122d90c35f9f22e40837",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6961. Archival Storage: BlockPlacementPolicy#chooseTarget should check each valid storage type in each choosing round.\n",
          "commitDate": "04/09/14 2:19 PM",
          "commitName": "e08701ec71f7c10d8f15122d90c35f9f22e40837",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "27/08/14 2:08 PM",
          "commitNameOld": "b7ded466b00db0fe273058b844d56d810e0f8cc2",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 8.01,
          "commitsBetweenForRepo": 50,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n   protected DatanodeStorageInfo chooseRandom(String scope,\n       Set\u003cNode\u003e excludedNodes,\n       long blocksize,\n       int maxNodesPerRack,\n       List\u003cDatanodeStorageInfo\u003e results,\n       boolean avoidStaleNodes,\n-      StorageType storageType)\n+      EnumMap\u003cStorageType, Integer\u003e storageTypes)\n           throws NotEnoughReplicasException {\n     return chooseRandom(1, scope, excludedNodes, blocksize, maxNodesPerRack,\n-        results, avoidStaleNodes, storageType);\n+        results, avoidStaleNodes, storageTypes);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected DatanodeStorageInfo chooseRandom(String scope,\n      Set\u003cNode\u003e excludedNodes,\n      long blocksize,\n      int maxNodesPerRack,\n      List\u003cDatanodeStorageInfo\u003e results,\n      boolean avoidStaleNodes,\n      EnumMap\u003cStorageType, Integer\u003e storageTypes)\n          throws NotEnoughReplicasException {\n    return chooseRandom(1, scope, excludedNodes, blocksize, maxNodesPerRack,\n        results, avoidStaleNodes, storageTypes);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
          "extendedDetails": {
            "oldValue": "[scope-String, excludedNodes-Set\u003cNode\u003e, blocksize-long, maxNodesPerRack-int, results-List\u003cDatanodeStorageInfo\u003e, avoidStaleNodes-boolean, storageType-StorageType]",
            "newValue": "[scope-String, excludedNodes-Set\u003cNode\u003e, blocksize-long, maxNodesPerRack-int, results-List\u003cDatanodeStorageInfo\u003e, avoidStaleNodes-boolean, storageTypes-EnumMap\u003cStorageType,Integer\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6961. Archival Storage: BlockPlacementPolicy#chooseTarget should check each valid storage type in each choosing round.\n",
          "commitDate": "04/09/14 2:19 PM",
          "commitName": "e08701ec71f7c10d8f15122d90c35f9f22e40837",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "27/08/14 2:08 PM",
          "commitNameOld": "b7ded466b00db0fe273058b844d56d810e0f8cc2",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 8.01,
          "commitsBetweenForRepo": 50,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n   protected DatanodeStorageInfo chooseRandom(String scope,\n       Set\u003cNode\u003e excludedNodes,\n       long blocksize,\n       int maxNodesPerRack,\n       List\u003cDatanodeStorageInfo\u003e results,\n       boolean avoidStaleNodes,\n-      StorageType storageType)\n+      EnumMap\u003cStorageType, Integer\u003e storageTypes)\n           throws NotEnoughReplicasException {\n     return chooseRandom(1, scope, excludedNodes, blocksize, maxNodesPerRack,\n-        results, avoidStaleNodes, storageType);\n+        results, avoidStaleNodes, storageTypes);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected DatanodeStorageInfo chooseRandom(String scope,\n      Set\u003cNode\u003e excludedNodes,\n      long blocksize,\n      int maxNodesPerRack,\n      List\u003cDatanodeStorageInfo\u003e results,\n      boolean avoidStaleNodes,\n      EnumMap\u003cStorageType, Integer\u003e storageTypes)\n          throws NotEnoughReplicasException {\n    return chooseRandom(1, scope, excludedNodes, blocksize, maxNodesPerRack,\n        results, avoidStaleNodes, storageTypes);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
          "extendedDetails": {}
        }
      ]
    }
  }
}