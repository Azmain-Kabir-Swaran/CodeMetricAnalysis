{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodePage.java",
  "functionName": "render",
  "functionId": "render___html-Block",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NodePage.java",
  "functionStartLine": 65,
  "functionEndLine": 93,
  "numCommitsSeen": 14,
  "timeTaken": 8186,
  "changeHistory": [
    "81f6e46b2fb54659a08864677ad14f80fe4e452d",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "469cfcd695da979e56c83d9303f9bc1f898c08ce",
    "1ad2d7b405e340c6cb2aa1eef58d11472c10ba28",
    "1f9a0fd927ab7bef13db42dd80368fd781b3d2d1",
    "b15b44e722fa69191816bebf319be1396fe68f09",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "0ea8570be578be60e2f32849900a1c50506d78d3",
    "066cddb44e1f8dac3fdef36ee04d593f44078292",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "81f6e46b2fb54659a08864677ad14f80fe4e452d": "Ybodychange",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "469cfcd695da979e56c83d9303f9bc1f898c08ce": "Ybodychange",
    "1ad2d7b405e340c6cb2aa1eef58d11472c10ba28": "Ybodychange",
    "1f9a0fd927ab7bef13db42dd80368fd781b3d2d1": "Ybodychange",
    "b15b44e722fa69191816bebf319be1396fe68f09": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Ybodychange",
    "066cddb44e1f8dac3fdef36ee04d593f44078292": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "81f6e46b2fb54659a08864677ad14f80fe4e452d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6907. Node information page in the old web UI should report resource types. Contributed by Gergely Nov√°k.\n",
      "commitDate": "03/12/17 9:57 PM",
      "commitName": "81f6e46b2fb54659a08864677ad14f80fe4e452d",
      "commitAuthor": "Sunil G",
      "commitDateOld": "27/07/17 5:10 PM",
      "commitNameOld": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 129.24,
      "commitsBetweenForRepo": 1098,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,29 @@\n     protected void render(Block html) {\n       NodeInfo info \u003d new NodeInfo(this.context, this.resourceView);\n       info(\"NodeManager information\")\n           .__(\"Total Vmem allocated for Containers\",\n               StringUtils.byteDesc(info.getTotalVmemAllocated() * BYTES_IN_MB))\n           .__(\"Vmem enforcement enabled\",\n               info.isVmemCheckEnabled())\n           .__(\"Total Pmem allocated for Container\",\n               StringUtils.byteDesc(info.getTotalPmemAllocated() * BYTES_IN_MB))\n           .__(\"Pmem enforcement enabled\",\n               info.isPmemCheckEnabled())\n           .__(\"Total VCores allocated for Containers\",\n               String.valueOf(info.getTotalVCoresAllocated()))\n+          .__(\"Resource types\",\n+              info.getResourceTypes())\n           .__(\"NodeHealthyStatus\",\n               info.getHealthStatus())\n           .__(\"LastNodeHealthTime\", new Date(\n               info.getLastNodeUpdateTime()))\n           .__(\"NodeHealthReport\",\n               info.getHealthReport())\n           .__(\"NodeManager started on\", new Date(\n               info.getNMStartupTime()))\n           .__(\"NodeManager Version:\", info.getNMBuildVersion() +\n               \" on \" + info.getNMVersionBuiltOn())\n           .__(\"Hadoop Version:\", info.getHadoopBuildVersion() +\n               \" on \" + info.getHadoopVersionBuiltOn());\n       html.__(InfoBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      NodeInfo info \u003d new NodeInfo(this.context, this.resourceView);\n      info(\"NodeManager information\")\n          .__(\"Total Vmem allocated for Containers\",\n              StringUtils.byteDesc(info.getTotalVmemAllocated() * BYTES_IN_MB))\n          .__(\"Vmem enforcement enabled\",\n              info.isVmemCheckEnabled())\n          .__(\"Total Pmem allocated for Container\",\n              StringUtils.byteDesc(info.getTotalPmemAllocated() * BYTES_IN_MB))\n          .__(\"Pmem enforcement enabled\",\n              info.isPmemCheckEnabled())\n          .__(\"Total VCores allocated for Containers\",\n              String.valueOf(info.getTotalVCoresAllocated()))\n          .__(\"Resource types\",\n              info.getResourceTypes())\n          .__(\"NodeHealthyStatus\",\n              info.getHealthStatus())\n          .__(\"LastNodeHealthTime\", new Date(\n              info.getLastNodeUpdateTime()))\n          .__(\"NodeHealthReport\",\n              info.getHealthReport())\n          .__(\"NodeManager started on\", new Date(\n              info.getNMStartupTime()))\n          .__(\"NodeManager Version:\", info.getNMBuildVersion() +\n              \" on \" + info.getNMVersionBuiltOn())\n          .__(\"Hadoop Version:\", info.getHadoopBuildVersion() +\n              \" on \" + info.getHadoopVersionBuiltOn());\n      html.__(InfoBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NodePage.java",
      "extendedDetails": {}
    },
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "03/08/15 8:53 AM",
      "commitNameOld": "469cfcd695da979e56c83d9303f9bc1f898c08ce",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 724.35,
      "commitsBetweenForRepo": 4630,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     protected void render(Block html) {\n       NodeInfo info \u003d new NodeInfo(this.context, this.resourceView);\n       info(\"NodeManager information\")\n-          ._(\"Total Vmem allocated for Containers\",\n+          .__(\"Total Vmem allocated for Containers\",\n               StringUtils.byteDesc(info.getTotalVmemAllocated() * BYTES_IN_MB))\n-          ._(\"Vmem enforcement enabled\",\n+          .__(\"Vmem enforcement enabled\",\n               info.isVmemCheckEnabled())\n-          ._(\"Total Pmem allocated for Container\",\n+          .__(\"Total Pmem allocated for Container\",\n               StringUtils.byteDesc(info.getTotalPmemAllocated() * BYTES_IN_MB))\n-          ._(\"Pmem enforcement enabled\",\n+          .__(\"Pmem enforcement enabled\",\n               info.isPmemCheckEnabled())\n-          ._(\"Total VCores allocated for Containers\",\n+          .__(\"Total VCores allocated for Containers\",\n               String.valueOf(info.getTotalVCoresAllocated()))\n-          ._(\"NodeHealthyStatus\",\n+          .__(\"NodeHealthyStatus\",\n               info.getHealthStatus())\n-          ._(\"LastNodeHealthTime\", new Date(\n+          .__(\"LastNodeHealthTime\", new Date(\n               info.getLastNodeUpdateTime()))\n-          ._(\"NodeHealthReport\",\n+          .__(\"NodeHealthReport\",\n               info.getHealthReport())\n-          ._(\"NodeManager started on\", new Date(\n+          .__(\"NodeManager started on\", new Date(\n               info.getNMStartupTime()))\n-          ._(\"NodeManager Version:\", info.getNMBuildVersion() +\n+          .__(\"NodeManager Version:\", info.getNMBuildVersion() +\n               \" on \" + info.getNMVersionBuiltOn())\n-          ._(\"Hadoop Version:\", info.getHadoopBuildVersion() +\n+          .__(\"Hadoop Version:\", info.getHadoopBuildVersion() +\n               \" on \" + info.getHadoopVersionBuiltOn());\n-      html._(InfoBlock.class);\n+      html.__(InfoBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      NodeInfo info \u003d new NodeInfo(this.context, this.resourceView);\n      info(\"NodeManager information\")\n          .__(\"Total Vmem allocated for Containers\",\n              StringUtils.byteDesc(info.getTotalVmemAllocated() * BYTES_IN_MB))\n          .__(\"Vmem enforcement enabled\",\n              info.isVmemCheckEnabled())\n          .__(\"Total Pmem allocated for Container\",\n              StringUtils.byteDesc(info.getTotalPmemAllocated() * BYTES_IN_MB))\n          .__(\"Pmem enforcement enabled\",\n              info.isPmemCheckEnabled())\n          .__(\"Total VCores allocated for Containers\",\n              String.valueOf(info.getTotalVCoresAllocated()))\n          .__(\"NodeHealthyStatus\",\n              info.getHealthStatus())\n          .__(\"LastNodeHealthTime\", new Date(\n              info.getLastNodeUpdateTime()))\n          .__(\"NodeHealthReport\",\n              info.getHealthReport())\n          .__(\"NodeManager started on\", new Date(\n              info.getNMStartupTime()))\n          .__(\"NodeManager Version:\", info.getNMBuildVersion() +\n              \" on \" + info.getNMVersionBuiltOn())\n          .__(\"Hadoop Version:\", info.getHadoopBuildVersion() +\n              \" on \" + info.getHadoopVersionBuiltOn());\n      html.__(InfoBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NodePage.java",
      "extendedDetails": {}
    },
    "469cfcd695da979e56c83d9303f9bc1f898c08ce": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3965. Add startup timestamp to nodemanager UI. Contributed by Hong Zhiguo\n",
      "commitDate": "03/08/15 8:53 AM",
      "commitName": "469cfcd695da979e56c83d9303f9bc1f898c08ce",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "21/07/14 2:55 PM",
      "commitNameOld": "1ad2d7b405e340c6cb2aa1eef58d11472c10ba28",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 377.75,
      "commitsBetweenForRepo": 3202,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,27 @@\n     protected void render(Block html) {\n       NodeInfo info \u003d new NodeInfo(this.context, this.resourceView);\n       info(\"NodeManager information\")\n           ._(\"Total Vmem allocated for Containers\",\n               StringUtils.byteDesc(info.getTotalVmemAllocated() * BYTES_IN_MB))\n           ._(\"Vmem enforcement enabled\",\n               info.isVmemCheckEnabled())\n           ._(\"Total Pmem allocated for Container\",\n               StringUtils.byteDesc(info.getTotalPmemAllocated() * BYTES_IN_MB))\n           ._(\"Pmem enforcement enabled\",\n               info.isPmemCheckEnabled())\n-           ._(\"Total VCores allocated for Containers\",\n-              String.valueOf(info.getTotalVCoresAllocated())) \n+          ._(\"Total VCores allocated for Containers\",\n+              String.valueOf(info.getTotalVCoresAllocated()))\n           ._(\"NodeHealthyStatus\",\n               info.getHealthStatus())\n           ._(\"LastNodeHealthTime\", new Date(\n               info.getLastNodeUpdateTime()))\n           ._(\"NodeHealthReport\",\n               info.getHealthReport())\n-          ._(\"Node Manager Version:\", info.getNMBuildVersion() +\n+          ._(\"NodeManager started on\", new Date(\n+              info.getNMStartupTime()))\n+          ._(\"NodeManager Version:\", info.getNMBuildVersion() +\n               \" on \" + info.getNMVersionBuiltOn())\n           ._(\"Hadoop Version:\", info.getHadoopBuildVersion() +\n               \" on \" + info.getHadoopVersionBuiltOn());\n       html._(InfoBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      NodeInfo info \u003d new NodeInfo(this.context, this.resourceView);\n      info(\"NodeManager information\")\n          ._(\"Total Vmem allocated for Containers\",\n              StringUtils.byteDesc(info.getTotalVmemAllocated() * BYTES_IN_MB))\n          ._(\"Vmem enforcement enabled\",\n              info.isVmemCheckEnabled())\n          ._(\"Total Pmem allocated for Container\",\n              StringUtils.byteDesc(info.getTotalPmemAllocated() * BYTES_IN_MB))\n          ._(\"Pmem enforcement enabled\",\n              info.isPmemCheckEnabled())\n          ._(\"Total VCores allocated for Containers\",\n              String.valueOf(info.getTotalVCoresAllocated()))\n          ._(\"NodeHealthyStatus\",\n              info.getHealthStatus())\n          ._(\"LastNodeHealthTime\", new Date(\n              info.getLastNodeUpdateTime()))\n          ._(\"NodeHealthReport\",\n              info.getHealthReport())\n          ._(\"NodeManager started on\", new Date(\n              info.getNMStartupTime()))\n          ._(\"NodeManager Version:\", info.getNMBuildVersion() +\n              \" on \" + info.getNMVersionBuiltOn())\n          ._(\"Hadoop Version:\", info.getHadoopBuildVersion() +\n              \" on \" + info.getHadoopVersionBuiltOn());\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NodePage.java",
      "extendedDetails": {}
    },
    "1ad2d7b405e340c6cb2aa1eef58d11472c10ba28": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2321. NodeManager web UI can incorrectly report Pmem enforcement. Contributed by Leitao Guo\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612411 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/07/14 2:55 PM",
      "commitName": "1ad2d7b405e340c6cb2aa1eef58d11472c10ba28",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "24/06/14 12:34 PM",
      "commitNameOld": "1f9a0fd927ab7bef13db42dd80368fd781b3d2d1",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 27.1,
      "commitsBetweenForRepo": 177,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     protected void render(Block html) {\n       NodeInfo info \u003d new NodeInfo(this.context, this.resourceView);\n       info(\"NodeManager information\")\n           ._(\"Total Vmem allocated for Containers\",\n               StringUtils.byteDesc(info.getTotalVmemAllocated() * BYTES_IN_MB))\n           ._(\"Vmem enforcement enabled\",\n               info.isVmemCheckEnabled())\n           ._(\"Total Pmem allocated for Container\",\n               StringUtils.byteDesc(info.getTotalPmemAllocated() * BYTES_IN_MB))\n           ._(\"Pmem enforcement enabled\",\n-              info.isVmemCheckEnabled())\n+              info.isPmemCheckEnabled())\n            ._(\"Total VCores allocated for Containers\",\n               String.valueOf(info.getTotalVCoresAllocated())) \n           ._(\"NodeHealthyStatus\",\n               info.getHealthStatus())\n           ._(\"LastNodeHealthTime\", new Date(\n               info.getLastNodeUpdateTime()))\n           ._(\"NodeHealthReport\",\n               info.getHealthReport())\n           ._(\"Node Manager Version:\", info.getNMBuildVersion() +\n               \" on \" + info.getNMVersionBuiltOn())\n           ._(\"Hadoop Version:\", info.getHadoopBuildVersion() +\n               \" on \" + info.getHadoopVersionBuiltOn());\n       html._(InfoBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      NodeInfo info \u003d new NodeInfo(this.context, this.resourceView);\n      info(\"NodeManager information\")\n          ._(\"Total Vmem allocated for Containers\",\n              StringUtils.byteDesc(info.getTotalVmemAllocated() * BYTES_IN_MB))\n          ._(\"Vmem enforcement enabled\",\n              info.isVmemCheckEnabled())\n          ._(\"Total Pmem allocated for Container\",\n              StringUtils.byteDesc(info.getTotalPmemAllocated() * BYTES_IN_MB))\n          ._(\"Pmem enforcement enabled\",\n              info.isPmemCheckEnabled())\n           ._(\"Total VCores allocated for Containers\",\n              String.valueOf(info.getTotalVCoresAllocated())) \n          ._(\"NodeHealthyStatus\",\n              info.getHealthStatus())\n          ._(\"LastNodeHealthTime\", new Date(\n              info.getLastNodeUpdateTime()))\n          ._(\"NodeHealthReport\",\n              info.getHealthReport())\n          ._(\"Node Manager Version:\", info.getNMBuildVersion() +\n              \" on \" + info.getNMVersionBuiltOn())\n          ._(\"Hadoop Version:\", info.getHadoopBuildVersion() +\n              \" on \" + info.getHadoopVersionBuiltOn());\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NodePage.java",
      "extendedDetails": {}
    },
    "1f9a0fd927ab7bef13db42dd80368fd781b3d2d1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2072. RM/NM UIs and webservices are missing vcore information. (Nathan Roberts via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605162 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 12:34 PM",
      "commitName": "1f9a0fd927ab7bef13db42dd80368fd781b3d2d1",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "22/03/13 2:28 PM",
      "commitNameOld": "b15b44e722fa69191816bebf319be1396fe68f09",
      "commitAuthorOld": "Hitesh Shah",
      "daysBetweenCommits": 458.92,
      "commitsBetweenForRepo": 3000,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,25 @@\n     protected void render(Block html) {\n       NodeInfo info \u003d new NodeInfo(this.context, this.resourceView);\n       info(\"NodeManager information\")\n           ._(\"Total Vmem allocated for Containers\",\n               StringUtils.byteDesc(info.getTotalVmemAllocated() * BYTES_IN_MB))\n           ._(\"Vmem enforcement enabled\",\n               info.isVmemCheckEnabled())\n           ._(\"Total Pmem allocated for Container\",\n               StringUtils.byteDesc(info.getTotalPmemAllocated() * BYTES_IN_MB))\n           ._(\"Pmem enforcement enabled\",\n               info.isVmemCheckEnabled())\n+           ._(\"Total VCores allocated for Containers\",\n+              String.valueOf(info.getTotalVCoresAllocated())) \n           ._(\"NodeHealthyStatus\",\n               info.getHealthStatus())\n           ._(\"LastNodeHealthTime\", new Date(\n               info.getLastNodeUpdateTime()))\n           ._(\"NodeHealthReport\",\n               info.getHealthReport())\n           ._(\"Node Manager Version:\", info.getNMBuildVersion() +\n               \" on \" + info.getNMVersionBuiltOn())\n           ._(\"Hadoop Version:\", info.getHadoopBuildVersion() +\n               \" on \" + info.getHadoopVersionBuiltOn());\n       html._(InfoBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      NodeInfo info \u003d new NodeInfo(this.context, this.resourceView);\n      info(\"NodeManager information\")\n          ._(\"Total Vmem allocated for Containers\",\n              StringUtils.byteDesc(info.getTotalVmemAllocated() * BYTES_IN_MB))\n          ._(\"Vmem enforcement enabled\",\n              info.isVmemCheckEnabled())\n          ._(\"Total Pmem allocated for Container\",\n              StringUtils.byteDesc(info.getTotalPmemAllocated() * BYTES_IN_MB))\n          ._(\"Pmem enforcement enabled\",\n              info.isVmemCheckEnabled())\n           ._(\"Total VCores allocated for Containers\",\n              String.valueOf(info.getTotalVCoresAllocated())) \n          ._(\"NodeHealthyStatus\",\n              info.getHealthStatus())\n          ._(\"LastNodeHealthTime\", new Date(\n              info.getLastNodeUpdateTime()))\n          ._(\"NodeHealthReport\",\n              info.getHealthReport())\n          ._(\"Node Manager Version:\", info.getNMBuildVersion() +\n              \" on \" + info.getNMVersionBuiltOn())\n          ._(\"Hadoop Version:\", info.getHadoopBuildVersion() +\n              \" on \" + info.getHadoopVersionBuiltOn());\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NodePage.java",
      "extendedDetails": {}
    },
    "b15b44e722fa69191816bebf319be1396fe68f09": {
      "type": "Ybodychange",
      "commitMessage": "YARN-470. Support a way to disable resource monitoring on the NodeManager. Contributed by Siddharth Seth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1460001 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/03/13 2:28 PM",
      "commitName": "b15b44e722fa69191816bebf319be1396fe68f09",
      "commitAuthor": "Hitesh Shah",
      "commitDateOld": "12/03/13 9:24 PM",
      "commitNameOld": "44eb4c31b84e89356574c01c649a9d4545027d59",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 9.71,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,23 @@\n     protected void render(Block html) {\n       NodeInfo info \u003d new NodeInfo(this.context, this.resourceView);\n       info(\"NodeManager information\")\n           ._(\"Total Vmem allocated for Containers\",\n               StringUtils.byteDesc(info.getTotalVmemAllocated() * BYTES_IN_MB))\n+          ._(\"Vmem enforcement enabled\",\n+              info.isVmemCheckEnabled())\n           ._(\"Total Pmem allocated for Container\",\n               StringUtils.byteDesc(info.getTotalPmemAllocated() * BYTES_IN_MB))\n+          ._(\"Pmem enforcement enabled\",\n+              info.isVmemCheckEnabled())\n           ._(\"NodeHealthyStatus\",\n               info.getHealthStatus())\n           ._(\"LastNodeHealthTime\", new Date(\n               info.getLastNodeUpdateTime()))\n           ._(\"NodeHealthReport\",\n               info.getHealthReport())\n           ._(\"Node Manager Version:\", info.getNMBuildVersion() +\n               \" on \" + info.getNMVersionBuiltOn())\n           ._(\"Hadoop Version:\", info.getHadoopBuildVersion() +\n               \" on \" + info.getHadoopVersionBuiltOn());\n       html._(InfoBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      NodeInfo info \u003d new NodeInfo(this.context, this.resourceView);\n      info(\"NodeManager information\")\n          ._(\"Total Vmem allocated for Containers\",\n              StringUtils.byteDesc(info.getTotalVmemAllocated() * BYTES_IN_MB))\n          ._(\"Vmem enforcement enabled\",\n              info.isVmemCheckEnabled())\n          ._(\"Total Pmem allocated for Container\",\n              StringUtils.byteDesc(info.getTotalPmemAllocated() * BYTES_IN_MB))\n          ._(\"Pmem enforcement enabled\",\n              info.isVmemCheckEnabled())\n          ._(\"NodeHealthyStatus\",\n              info.getHealthStatus())\n          ._(\"LastNodeHealthTime\", new Date(\n              info.getLastNodeUpdateTime()))\n          ._(\"NodeHealthReport\",\n              info.getHealthReport())\n          ._(\"Node Manager Version:\", info.getNMBuildVersion() +\n              \" on \" + info.getNMVersionBuiltOn())\n          ._(\"Hadoop Version:\", info.getHadoopBuildVersion() +\n              \" on \" + info.getHadoopVersionBuiltOn());\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NodePage.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected void render(Block html) {\n      NodeInfo info \u003d new NodeInfo(this.context, this.resourceView);\n      info(\"NodeManager information\")\n          ._(\"Total Vmem allocated for Containers\",\n              StringUtils.byteDesc(info.getTotalVmemAllocated() * BYTES_IN_MB))\n          ._(\"Total Pmem allocated for Container\",\n              StringUtils.byteDesc(info.getTotalPmemAllocated() * BYTES_IN_MB))\n          ._(\"NodeHealthyStatus\",\n              info.getHealthStatus())\n          ._(\"LastNodeHealthTime\", new Date(\n              info.getLastNodeUpdateTime()))\n          ._(\"NodeHealthReport\",\n              info.getHealthReport())\n          ._(\"Node Manager Version:\", info.getNMBuildVersion() +\n              \" on \" + info.getNMVersionBuiltOn())\n          ._(\"Hadoop Version:\", info.getHadoopBuildVersion() +\n              \" on \" + info.getHadoopVersionBuiltOn());\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NodePage.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NodePage.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NodePage.java"
      }
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/12/11 5:58 PM",
      "commitNameOld": "066cddb44e1f8dac3fdef36ee04d593f44078292",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 4.88,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n     protected void render(Block html) {\n+      NodeInfo info \u003d new NodeInfo(this.context, this.resourceView);\n       info(\"NodeManager information\")\n           ._(\"Total Vmem allocated for Containers\",\n-              this.resourceView.getVmemAllocatedForContainers() + \"bytes\")\n+              StringUtils.byteDesc(info.getTotalVmemAllocated() * BYTES_IN_MB))\n           ._(\"Total Pmem allocated for Container\",\n-              this.resourceView.getPmemAllocatedForContainers() + \"bytes\")\n+              StringUtils.byteDesc(info.getTotalPmemAllocated() * BYTES_IN_MB))\n           ._(\"NodeHealthyStatus\",\n-              this.context.getNodeHealthStatus().getIsNodeHealthy())\n+              info.getHealthStatus())\n           ._(\"LastNodeHealthTime\", new Date(\n-                this.context.getNodeHealthStatus().getLastHealthReportTime()))\n+              info.getLastNodeUpdateTime()))\n           ._(\"NodeHealthReport\",\n-              this.context.getNodeHealthStatus().getHealthReport())\n-          ._(\"Node Manager Version:\", YarnVersionInfo.getBuildVersion() +\n-              \" on \" + YarnVersionInfo.getDate())\n-          ._(\"Hadoop Version:\", VersionInfo.getBuildVersion() +\n-              \" on \" + VersionInfo.getDate());\n+              info.getHealthReport())\n+          ._(\"Node Manager Version:\", info.getNMBuildVersion() +\n+              \" on \" + info.getNMVersionBuiltOn())\n+          ._(\"Hadoop Version:\", info.getHadoopBuildVersion() +\n+              \" on \" + info.getHadoopVersionBuiltOn());\n       html._(InfoBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      NodeInfo info \u003d new NodeInfo(this.context, this.resourceView);\n      info(\"NodeManager information\")\n          ._(\"Total Vmem allocated for Containers\",\n              StringUtils.byteDesc(info.getTotalVmemAllocated() * BYTES_IN_MB))\n          ._(\"Total Pmem allocated for Container\",\n              StringUtils.byteDesc(info.getTotalPmemAllocated() * BYTES_IN_MB))\n          ._(\"NodeHealthyStatus\",\n              info.getHealthStatus())\n          ._(\"LastNodeHealthTime\", new Date(\n              info.getLastNodeUpdateTime()))\n          ._(\"NodeHealthReport\",\n              info.getHealthReport())\n          ._(\"Node Manager Version:\", info.getNMBuildVersion() +\n              \" on \" + info.getNMVersionBuiltOn())\n          ._(\"Hadoop Version:\", info.getHadoopBuildVersion() +\n              \" on \" + info.getHadoopVersionBuiltOn());\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NodePage.java",
      "extendedDetails": {}
    },
    "066cddb44e1f8dac3fdef36ee04d593f44078292": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3513. Capacity Scheduler web UI has a spelling mistake for Memory. (chackaravarthy via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212215 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/12/11 5:58 PM",
      "commitName": "066cddb44e1f8dac3fdef36ee04d593f44078292",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 106.07,
      "commitsBetweenForRepo": 718,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     protected void render(Block html) {\n       info(\"NodeManager information\")\n           ._(\"Total Vmem allocated for Containers\",\n               this.resourceView.getVmemAllocatedForContainers() + \"bytes\")\n           ._(\"Total Pmem allocated for Container\",\n               this.resourceView.getPmemAllocatedForContainers() + \"bytes\")\n           ._(\"NodeHealthyStatus\",\n               this.context.getNodeHealthStatus().getIsNodeHealthy())\n           ._(\"LastNodeHealthTime\", new Date(\n                 this.context.getNodeHealthStatus().getLastHealthReportTime()))\n           ._(\"NodeHealthReport\",\n               this.context.getNodeHealthStatus().getHealthReport())\n-          ._(\"Node Manger Version:\", YarnVersionInfo.getBuildVersion() +\n+          ._(\"Node Manager Version:\", YarnVersionInfo.getBuildVersion() +\n               \" on \" + YarnVersionInfo.getDate())\n           ._(\"Hadoop Version:\", VersionInfo.getBuildVersion() +\n               \" on \" + VersionInfo.getDate());\n       html._(InfoBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      info(\"NodeManager information\")\n          ._(\"Total Vmem allocated for Containers\",\n              this.resourceView.getVmemAllocatedForContainers() + \"bytes\")\n          ._(\"Total Pmem allocated for Container\",\n              this.resourceView.getPmemAllocatedForContainers() + \"bytes\")\n          ._(\"NodeHealthyStatus\",\n              this.context.getNodeHealthStatus().getIsNodeHealthy())\n          ._(\"LastNodeHealthTime\", new Date(\n                this.context.getNodeHealthStatus().getLastHealthReportTime()))\n          ._(\"NodeHealthReport\",\n              this.context.getNodeHealthStatus().getHealthReport())\n          ._(\"Node Manager Version:\", YarnVersionInfo.getBuildVersion() +\n              \" on \" + YarnVersionInfo.getDate())\n          ._(\"Hadoop Version:\", VersionInfo.getBuildVersion() +\n              \" on \" + VersionInfo.getDate());\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NodePage.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected void render(Block html) {\n      info(\"NodeManager information\")\n          ._(\"Total Vmem allocated for Containers\",\n              this.resourceView.getVmemAllocatedForContainers() + \"bytes\")\n          ._(\"Total Pmem allocated for Container\",\n              this.resourceView.getPmemAllocatedForContainers() + \"bytes\")\n          ._(\"NodeHealthyStatus\",\n              this.context.getNodeHealthStatus().getIsNodeHealthy())\n          ._(\"LastNodeHealthTime\", new Date(\n                this.context.getNodeHealthStatus().getLastHealthReportTime()))\n          ._(\"NodeHealthReport\",\n              this.context.getNodeHealthStatus().getHealthReport())\n          ._(\"Node Manger Version:\", YarnVersionInfo.getBuildVersion() +\n              \" on \" + YarnVersionInfo.getDate())\n          ._(\"Hadoop Version:\", VersionInfo.getBuildVersion() +\n              \" on \" + VersionInfo.getDate());\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NodePage.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NodePage.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NodePage.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,18 @@\n+    protected void render(Block html) {\n+      info(\"NodeManager information\")\n+          ._(\"Total Vmem allocated for Containers\",\n+              this.resourceView.getVmemAllocatedForContainers() + \"bytes\")\n+          ._(\"Total Pmem allocated for Container\",\n+              this.resourceView.getPmemAllocatedForContainers() + \"bytes\")\n+          ._(\"NodeHealthyStatus\",\n+              this.context.getNodeHealthStatus().getIsNodeHealthy())\n+          ._(\"LastNodeHealthTime\", new Date(\n+                this.context.getNodeHealthStatus().getLastHealthReportTime()))\n+          ._(\"NodeHealthReport\",\n+              this.context.getNodeHealthStatus().getHealthReport())\n+          ._(\"Node Manger Version:\", YarnVersionInfo.getBuildVersion() +\n+              \" on \" + YarnVersionInfo.getDate())\n+          ._(\"Hadoop Version:\", VersionInfo.getBuildVersion() +\n+              \" on \" + VersionInfo.getDate());\n+      html._(InfoBlock.class);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      info(\"NodeManager information\")\n          ._(\"Total Vmem allocated for Containers\",\n              this.resourceView.getVmemAllocatedForContainers() + \"bytes\")\n          ._(\"Total Pmem allocated for Container\",\n              this.resourceView.getPmemAllocatedForContainers() + \"bytes\")\n          ._(\"NodeHealthyStatus\",\n              this.context.getNodeHealthStatus().getIsNodeHealthy())\n          ._(\"LastNodeHealthTime\", new Date(\n                this.context.getNodeHealthStatus().getLastHealthReportTime()))\n          ._(\"NodeHealthReport\",\n              this.context.getNodeHealthStatus().getHealthReport())\n          ._(\"Node Manger Version:\", YarnVersionInfo.getBuildVersion() +\n              \" on \" + YarnVersionInfo.getDate())\n          ._(\"Hadoop Version:\", VersionInfo.getBuildVersion() +\n              \" on \" + VersionInfo.getDate());\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/NodePage.java"
    }
  }
}