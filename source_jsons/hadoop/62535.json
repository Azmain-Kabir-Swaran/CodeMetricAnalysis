{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GetApplicationsRequest.java",
  "functionName": "newInstance",
  "functionId": "newInstance___scope-ApplicationsRequestScope__users-Set__String____queues-Set__String____applicationTypes-Set__String____applicationTags-Set__String____applicationStates-EnumSet__YarnApplicationState____startRange-Range__Long____finishRange-Range__Long____limit-Long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/GetApplicationsRequest.java",
  "functionStartLine": 76,
  "functionEndLine": 108,
  "numCommitsSeen": 16,
  "timeTaken": 3787,
  "changeHistory": [
    "652bcbb3e4950758e61ce123ecc1798ae2b60a7f",
    "ebe0c17a95ae37d4768f2928ea193e89db34ead5"
  ],
  "changeHistoryShort": {
    "652bcbb3e4950758e61ce123ecc1798ae2b60a7f": "Ymultichange(Yparameterchange,Ybodychange)",
    "ebe0c17a95ae37d4768f2928ea193e89db34ead5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "652bcbb3e4950758e61ce123ecc1798ae2b60a7f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8363. Upgrade commons-lang version to 3.7 in hadoop-yarn-project. Contributed by Takanobu Asanuma.\n",
      "commitDate": "12/06/18 8:35 AM",
      "commitName": "652bcbb3e4950758e61ce123ecc1798ae2b60a7f",
      "commitAuthor": "Akira Ajisaka",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8363. Upgrade commons-lang version to 3.7 in hadoop-yarn-project. Contributed by Takanobu Asanuma.\n",
          "commitDate": "12/06/18 8:35 AM",
          "commitName": "652bcbb3e4950758e61ce123ecc1798ae2b60a7f",
          "commitAuthor": "Akira Ajisaka",
          "commitDateOld": "05/08/16 3:57 AM",
          "commitNameOld": "4a26221021ec228a1726fd4905693473cd525796",
          "commitAuthorOld": "Varun Saxena",
          "daysBetweenCommits": 676.19,
          "commitsBetweenForRepo": 5100,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,33 @@\n   public static GetApplicationsRequest newInstance(\n       ApplicationsRequestScope scope,\n       Set\u003cString\u003e users,\n       Set\u003cString\u003e queues,\n       Set\u003cString\u003e applicationTypes,\n       Set\u003cString\u003e applicationTags,\n       EnumSet\u003cYarnApplicationState\u003e applicationStates,\n-      LongRange startRange,\n-      LongRange finishRange,\n+      Range\u003cLong\u003e startRange,\n+      Range\u003cLong\u003e finishRange,\n       Long limit) {\n     GetApplicationsRequest request \u003d\n         Records.newRecord(GetApplicationsRequest.class);\n     if (scope !\u003d null) {\n       request.setScope(scope);\n     }\n     request.setUsers(users);\n     request.setQueues(queues);\n     request.setApplicationTypes(applicationTypes);\n     request.setApplicationTags(applicationTags);\n     request.setApplicationStates(applicationStates);\n     if (startRange !\u003d null) {\n       request.setStartRange(\n-          startRange.getMinimumLong(), startRange.getMaximumLong());\n+          startRange.getMinimum(), startRange.getMaximum());\n     }\n     if (finishRange !\u003d null) {\n       request.setFinishRange(\n-          finishRange.getMinimumLong(), finishRange.getMaximumLong());\n+          finishRange.getMinimum(), finishRange.getMaximum());\n     }\n     if (limit !\u003d null) {\n       request.setLimit(limit);\n     }\n     return request;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static GetApplicationsRequest newInstance(\n      ApplicationsRequestScope scope,\n      Set\u003cString\u003e users,\n      Set\u003cString\u003e queues,\n      Set\u003cString\u003e applicationTypes,\n      Set\u003cString\u003e applicationTags,\n      EnumSet\u003cYarnApplicationState\u003e applicationStates,\n      Range\u003cLong\u003e startRange,\n      Range\u003cLong\u003e finishRange,\n      Long limit) {\n    GetApplicationsRequest request \u003d\n        Records.newRecord(GetApplicationsRequest.class);\n    if (scope !\u003d null) {\n      request.setScope(scope);\n    }\n    request.setUsers(users);\n    request.setQueues(queues);\n    request.setApplicationTypes(applicationTypes);\n    request.setApplicationTags(applicationTags);\n    request.setApplicationStates(applicationStates);\n    if (startRange !\u003d null) {\n      request.setStartRange(\n          startRange.getMinimum(), startRange.getMaximum());\n    }\n    if (finishRange !\u003d null) {\n      request.setFinishRange(\n          finishRange.getMinimum(), finishRange.getMaximum());\n    }\n    if (limit !\u003d null) {\n      request.setLimit(limit);\n    }\n    return request;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/GetApplicationsRequest.java",
          "extendedDetails": {
            "oldValue": "[scope-ApplicationsRequestScope, users-Set\u003cString\u003e, queues-Set\u003cString\u003e, applicationTypes-Set\u003cString\u003e, applicationTags-Set\u003cString\u003e, applicationStates-EnumSet\u003cYarnApplicationState\u003e, startRange-LongRange, finishRange-LongRange, limit-Long]",
            "newValue": "[scope-ApplicationsRequestScope, users-Set\u003cString\u003e, queues-Set\u003cString\u003e, applicationTypes-Set\u003cString\u003e, applicationTags-Set\u003cString\u003e, applicationStates-EnumSet\u003cYarnApplicationState\u003e, startRange-Range\u003cLong\u003e, finishRange-Range\u003cLong\u003e, limit-Long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8363. Upgrade commons-lang version to 3.7 in hadoop-yarn-project. Contributed by Takanobu Asanuma.\n",
          "commitDate": "12/06/18 8:35 AM",
          "commitName": "652bcbb3e4950758e61ce123ecc1798ae2b60a7f",
          "commitAuthor": "Akira Ajisaka",
          "commitDateOld": "05/08/16 3:57 AM",
          "commitNameOld": "4a26221021ec228a1726fd4905693473cd525796",
          "commitAuthorOld": "Varun Saxena",
          "daysBetweenCommits": 676.19,
          "commitsBetweenForRepo": 5100,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,33 @@\n   public static GetApplicationsRequest newInstance(\n       ApplicationsRequestScope scope,\n       Set\u003cString\u003e users,\n       Set\u003cString\u003e queues,\n       Set\u003cString\u003e applicationTypes,\n       Set\u003cString\u003e applicationTags,\n       EnumSet\u003cYarnApplicationState\u003e applicationStates,\n-      LongRange startRange,\n-      LongRange finishRange,\n+      Range\u003cLong\u003e startRange,\n+      Range\u003cLong\u003e finishRange,\n       Long limit) {\n     GetApplicationsRequest request \u003d\n         Records.newRecord(GetApplicationsRequest.class);\n     if (scope !\u003d null) {\n       request.setScope(scope);\n     }\n     request.setUsers(users);\n     request.setQueues(queues);\n     request.setApplicationTypes(applicationTypes);\n     request.setApplicationTags(applicationTags);\n     request.setApplicationStates(applicationStates);\n     if (startRange !\u003d null) {\n       request.setStartRange(\n-          startRange.getMinimumLong(), startRange.getMaximumLong());\n+          startRange.getMinimum(), startRange.getMaximum());\n     }\n     if (finishRange !\u003d null) {\n       request.setFinishRange(\n-          finishRange.getMinimumLong(), finishRange.getMaximumLong());\n+          finishRange.getMinimum(), finishRange.getMaximum());\n     }\n     if (limit !\u003d null) {\n       request.setLimit(limit);\n     }\n     return request;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static GetApplicationsRequest newInstance(\n      ApplicationsRequestScope scope,\n      Set\u003cString\u003e users,\n      Set\u003cString\u003e queues,\n      Set\u003cString\u003e applicationTypes,\n      Set\u003cString\u003e applicationTags,\n      EnumSet\u003cYarnApplicationState\u003e applicationStates,\n      Range\u003cLong\u003e startRange,\n      Range\u003cLong\u003e finishRange,\n      Long limit) {\n    GetApplicationsRequest request \u003d\n        Records.newRecord(GetApplicationsRequest.class);\n    if (scope !\u003d null) {\n      request.setScope(scope);\n    }\n    request.setUsers(users);\n    request.setQueues(queues);\n    request.setApplicationTypes(applicationTypes);\n    request.setApplicationTags(applicationTags);\n    request.setApplicationStates(applicationStates);\n    if (startRange !\u003d null) {\n      request.setStartRange(\n          startRange.getMinimum(), startRange.getMaximum());\n    }\n    if (finishRange !\u003d null) {\n      request.setFinishRange(\n          finishRange.getMinimum(), finishRange.getMaximum());\n    }\n    if (limit !\u003d null) {\n      request.setLimit(limit);\n    }\n    return request;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/GetApplicationsRequest.java",
          "extendedDetails": {}
        }
      ]
    },
    "ebe0c17a95ae37d4768f2928ea193e89db34ead5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1461. Added tags for YARN applications and changed RM to handle them. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1564633 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/02/14 8:55 PM",
      "commitName": "ebe0c17a95ae37d4768f2928ea193e89db34ead5",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,33 @@\n+  public static GetApplicationsRequest newInstance(\n+      ApplicationsRequestScope scope,\n+      Set\u003cString\u003e users,\n+      Set\u003cString\u003e queues,\n+      Set\u003cString\u003e applicationTypes,\n+      Set\u003cString\u003e applicationTags,\n+      EnumSet\u003cYarnApplicationState\u003e applicationStates,\n+      LongRange startRange,\n+      LongRange finishRange,\n+      Long limit) {\n+    GetApplicationsRequest request \u003d\n+        Records.newRecord(GetApplicationsRequest.class);\n+    if (scope !\u003d null) {\n+      request.setScope(scope);\n+    }\n+    request.setUsers(users);\n+    request.setQueues(queues);\n+    request.setApplicationTypes(applicationTypes);\n+    request.setApplicationTags(applicationTags);\n+    request.setApplicationStates(applicationStates);\n+    if (startRange !\u003d null) {\n+      request.setStartRange(\n+          startRange.getMinimumLong(), startRange.getMaximumLong());\n+    }\n+    if (finishRange !\u003d null) {\n+      request.setFinishRange(\n+          finishRange.getMinimumLong(), finishRange.getMaximumLong());\n+    }\n+    if (limit !\u003d null) {\n+      request.setLimit(limit);\n+    }\n+    return request;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static GetApplicationsRequest newInstance(\n      ApplicationsRequestScope scope,\n      Set\u003cString\u003e users,\n      Set\u003cString\u003e queues,\n      Set\u003cString\u003e applicationTypes,\n      Set\u003cString\u003e applicationTags,\n      EnumSet\u003cYarnApplicationState\u003e applicationStates,\n      LongRange startRange,\n      LongRange finishRange,\n      Long limit) {\n    GetApplicationsRequest request \u003d\n        Records.newRecord(GetApplicationsRequest.class);\n    if (scope !\u003d null) {\n      request.setScope(scope);\n    }\n    request.setUsers(users);\n    request.setQueues(queues);\n    request.setApplicationTypes(applicationTypes);\n    request.setApplicationTags(applicationTags);\n    request.setApplicationStates(applicationStates);\n    if (startRange !\u003d null) {\n      request.setStartRange(\n          startRange.getMinimumLong(), startRange.getMaximumLong());\n    }\n    if (finishRange !\u003d null) {\n      request.setFinishRange(\n          finishRange.getMinimumLong(), finishRange.getMaximumLong());\n    }\n    if (limit !\u003d null) {\n      request.setLimit(limit);\n    }\n    return request;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/GetApplicationsRequest.java"
    }
  }
}