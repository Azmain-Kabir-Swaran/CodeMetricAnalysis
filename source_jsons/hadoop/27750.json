{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationPolicyUtils.java",
  "functionName": "loadAMRMPolicy",
  "functionId": "loadAMRMPolicy___queue-String__oldPolicy-FederationAMRMProxyPolicy__conf-Configuration__federationFacade-FederationStateStoreFacade__homeSubClusterId-SubClusterId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/FederationPolicyUtils.java",
  "functionStartLine": 154,
  "functionEndLine": 177,
  "numCommitsSeen": 5,
  "timeTaken": 612,
  "changeHistory": [
    "70b1a757f13b01a9192ea5fb0820ba7babfd974e"
  ],
  "changeHistoryShort": {
    "70b1a757f13b01a9192ea5fb0820ba7babfd974e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "70b1a757f13b01a9192ea5fb0820ba7babfd974e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6511. Federation: transparently spanning application across multiple sub-clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 8c988d235eaf0972783985b1ab24680d029aea79)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "70b1a757f13b01a9192ea5fb0820ba7babfd974e",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,24 @@\n+  public static FederationAMRMProxyPolicy loadAMRMPolicy(String queue,\n+      FederationAMRMProxyPolicy oldPolicy, Configuration conf,\n+      FederationStateStoreFacade federationFacade,\n+      SubClusterId homeSubClusterId)\n+      throws FederationPolicyInitializationException {\n+\n+    // Local policy and its configuration\n+    SubClusterPolicyConfiguration configuration \u003d\n+        loadPolicyConfiguration(queue, conf, federationFacade);\n+\n+    // Instantiate the policyManager and get policy\n+    FederationPolicyInitializationContext context \u003d\n+        new FederationPolicyInitializationContext(configuration,\n+            federationFacade.getSubClusterResolver(), federationFacade,\n+            homeSubClusterId);\n+\n+    LOG.info(\"Creating policy manager of type: \" + configuration.getType());\n+    FederationPolicyManager federationPolicyManager \u003d\n+        instantiatePolicyManager(configuration.getType());\n+    // set queue, reinit policy if required (implementation lazily check\n+    // content of conf), and cache it\n+    federationPolicyManager.setQueue(configuration.getQueue());\n+    return federationPolicyManager.getAMRMPolicy(context, oldPolicy);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static FederationAMRMProxyPolicy loadAMRMPolicy(String queue,\n      FederationAMRMProxyPolicy oldPolicy, Configuration conf,\n      FederationStateStoreFacade federationFacade,\n      SubClusterId homeSubClusterId)\n      throws FederationPolicyInitializationException {\n\n    // Local policy and its configuration\n    SubClusterPolicyConfiguration configuration \u003d\n        loadPolicyConfiguration(queue, conf, federationFacade);\n\n    // Instantiate the policyManager and get policy\n    FederationPolicyInitializationContext context \u003d\n        new FederationPolicyInitializationContext(configuration,\n            federationFacade.getSubClusterResolver(), federationFacade,\n            homeSubClusterId);\n\n    LOG.info(\"Creating policy manager of type: \" + configuration.getType());\n    FederationPolicyManager federationPolicyManager \u003d\n        instantiatePolicyManager(configuration.getType());\n    // set queue, reinit policy if required (implementation lazily check\n    // content of conf), and cache it\n    federationPolicyManager.setQueue(configuration.getQueue());\n    return federationPolicyManager.getAMRMPolicy(context, oldPolicy);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/FederationPolicyUtils.java"
    }
  }
}