{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShuffleHandler.java",
  "functionName": "setResponseHeaders",
  "functionId": "setResponseHeaders___response-HttpResponse__keepAliveParam-boolean__contentLength-long",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
  "functionStartLine": 1178,
  "functionEndLine": 1195,
  "numCommitsSeen": 59,
  "timeTaken": 2132,
  "changeHistory": [
    "5877f20f9c3f6f0afa505715e9a2ee312475af17",
    "521f34317a2f94ea7e60f3d59db335cef3358e5b",
    "b3ffa870034d06608a1946e2d9ce7dbd535a2c53",
    "a5c08eed16e797d2ba9f98f7bc6a8e1bf09aaddd"
  ],
  "changeHistoryShort": {
    "5877f20f9c3f6f0afa505715e9a2ee312475af17": "Ybodychange",
    "521f34317a2f94ea7e60f3d59db335cef3358e5b": "Ybodychange",
    "b3ffa870034d06608a1946e2d9ce7dbd535a2c53": "Ybodychange",
    "a5c08eed16e797d2ba9f98f7bc6a8e1bf09aaddd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5877f20f9c3f6f0afa505715e9a2ee312475af17": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10075. Update jetty dependency to version 9 (rkanter)\n",
      "commitDate": "27/10/16 4:09 PM",
      "commitName": "5877f20f9c3f6f0afa505715e9a2ee312475af17",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "21/10/16 5:46 PM",
      "commitNameOld": "d4725bfcb2d300219d65395a78f957afbf37b201",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 5.93,
      "commitsBetweenForRepo": 75,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,18 @@\n     protected void setResponseHeaders(HttpResponse response,\n         boolean keepAliveParam, long contentLength) {\n       if (!connectionKeepAliveEnabled \u0026\u0026 !keepAliveParam) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Setting connection close header...\");\n         }\n-        response.headers().set(HttpHeaders.CONNECTION, CONNECTION_CLOSE);\n+        response.headers().set(HttpHeader.CONNECTION.asString(),\n+            CONNECTION_CLOSE);\n       } else {\n-        response.headers().set(HttpHeaders.CONTENT_LENGTH,\n+        response.headers().set(HttpHeader.CONTENT_LENGTH.asString(),\n           String.valueOf(contentLength));\n-        response.headers().set(HttpHeaders.CONNECTION, HttpHeaders.KEEP_ALIVE);\n-        response.headers().set(HttpHeaders.KEEP_ALIVE, \"timeout\u003d\"\n-            + connectionKeepAliveTimeOut);\n+        response.headers().set(HttpHeader.CONNECTION.asString(),\n+            HttpHeader.KEEP_ALIVE.asString());\n+        response.headers().set(HttpHeader.KEEP_ALIVE.asString(),\n+            \"timeout\u003d\" + connectionKeepAliveTimeOut);\n         LOG.info(\"Content Length in shuffle : \" + contentLength);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setResponseHeaders(HttpResponse response,\n        boolean keepAliveParam, long contentLength) {\n      if (!connectionKeepAliveEnabled \u0026\u0026 !keepAliveParam) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Setting connection close header...\");\n        }\n        response.headers().set(HttpHeader.CONNECTION.asString(),\n            CONNECTION_CLOSE);\n      } else {\n        response.headers().set(HttpHeader.CONTENT_LENGTH.asString(),\n          String.valueOf(contentLength));\n        response.headers().set(HttpHeader.CONNECTION.asString(),\n            HttpHeader.KEEP_ALIVE.asString());\n        response.headers().set(HttpHeader.KEEP_ALIVE.asString(),\n            \"timeout\u003d\" + connectionKeepAliveTimeOut);\n        LOG.info(\"Content Length in shuffle : \" + contentLength);\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "521f34317a2f94ea7e60f3d59db335cef3358e5b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12928. Update netty to 3.10.5.Final to sync with zookeeper. (lei)\n",
      "commitDate": "20/07/16 8:38 PM",
      "commitName": "521f34317a2f94ea7e60f3d59db335cef3358e5b",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "21/06/16 2:25 PM",
      "commitNameOld": "d8107fcd1c93c202925f2946d0cd4072fe0aef1e",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 29.26,
      "commitsBetweenForRepo": 326,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     protected void setResponseHeaders(HttpResponse response,\n         boolean keepAliveParam, long contentLength) {\n       if (!connectionKeepAliveEnabled \u0026\u0026 !keepAliveParam) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Setting connection close header...\");\n         }\n-        response.setHeader(HttpHeaders.CONNECTION, CONNECTION_CLOSE);\n+        response.headers().set(HttpHeaders.CONNECTION, CONNECTION_CLOSE);\n       } else {\n-        response.setHeader(HttpHeaders.CONTENT_LENGTH,\n+        response.headers().set(HttpHeaders.CONTENT_LENGTH,\n           String.valueOf(contentLength));\n-        response.setHeader(HttpHeaders.CONNECTION, HttpHeaders.KEEP_ALIVE);\n-        response.setHeader(HttpHeaders.KEEP_ALIVE, \"timeout\u003d\"\n+        response.headers().set(HttpHeaders.CONNECTION, HttpHeaders.KEEP_ALIVE);\n+        response.headers().set(HttpHeaders.KEEP_ALIVE, \"timeout\u003d\"\n             + connectionKeepAliveTimeOut);\n         LOG.info(\"Content Length in shuffle : \" + contentLength);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setResponseHeaders(HttpResponse response,\n        boolean keepAliveParam, long contentLength) {\n      if (!connectionKeepAliveEnabled \u0026\u0026 !keepAliveParam) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Setting connection close header...\");\n        }\n        response.headers().set(HttpHeaders.CONNECTION, CONNECTION_CLOSE);\n      } else {\n        response.headers().set(HttpHeaders.CONTENT_LENGTH,\n          String.valueOf(contentLength));\n        response.headers().set(HttpHeaders.CONNECTION, HttpHeaders.KEEP_ALIVE);\n        response.headers().set(HttpHeaders.KEEP_ALIVE, \"timeout\u003d\"\n            + connectionKeepAliveTimeOut);\n        LOG.info(\"Content Length in shuffle : \" + contentLength);\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "b3ffa870034d06608a1946e2d9ce7dbd535a2c53": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6354. ShuffleHandler should be able to log shuffle connections. Contributed by Chang Li\n",
      "commitDate": "05/06/15 3:38 PM",
      "commitName": "b3ffa870034d06608a1946e2d9ce7dbd535a2c53",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "19/12/14 4:56 PM",
      "commitNameOld": "808cba3821d5bc4267f69d14220757f01cd55715",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 167.9,
      "commitsBetweenForRepo": 1438,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n     protected void setResponseHeaders(HttpResponse response,\n         boolean keepAliveParam, long contentLength) {\n       if (!connectionKeepAliveEnabled \u0026\u0026 !keepAliveParam) {\n-        LOG.info(\"Setting connection close header...\");\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Setting connection close header...\");\n+        }\n         response.setHeader(HttpHeaders.CONNECTION, CONNECTION_CLOSE);\n       } else {\n         response.setHeader(HttpHeaders.CONTENT_LENGTH,\n           String.valueOf(contentLength));\n         response.setHeader(HttpHeaders.CONNECTION, HttpHeaders.KEEP_ALIVE);\n         response.setHeader(HttpHeaders.KEEP_ALIVE, \"timeout\u003d\"\n             + connectionKeepAliveTimeOut);\n         LOG.info(\"Content Length in shuffle : \" + contentLength);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setResponseHeaders(HttpResponse response,\n        boolean keepAliveParam, long contentLength) {\n      if (!connectionKeepAliveEnabled \u0026\u0026 !keepAliveParam) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Setting connection close header...\");\n        }\n        response.setHeader(HttpHeaders.CONNECTION, CONNECTION_CLOSE);\n      } else {\n        response.setHeader(HttpHeaders.CONTENT_LENGTH,\n          String.valueOf(contentLength));\n        response.setHeader(HttpHeaders.CONNECTION, HttpHeaders.KEEP_ALIVE);\n        response.setHeader(HttpHeaders.KEEP_ALIVE, \"timeout\u003d\"\n            + connectionKeepAliveTimeOut);\n        LOG.info(\"Content Length in shuffle : \" + contentLength);\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "a5c08eed16e797d2ba9f98f7bc6a8e1bf09aaddd": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5787. Added the ability to keep alive shuffle connections in the MapReduce shuffle-handler. Contributed by Rajesh Balamohan.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1580062 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/03/14 2:43 PM",
      "commitName": "a5c08eed16e797d2ba9f98f7bc6a8e1bf09aaddd",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,14 @@\n+    protected void setResponseHeaders(HttpResponse response,\n+        boolean keepAliveParam, long contentLength) {\n+      if (!connectionKeepAliveEnabled \u0026\u0026 !keepAliveParam) {\n+        LOG.info(\"Setting connection close header...\");\n+        response.setHeader(HttpHeaders.CONNECTION, CONNECTION_CLOSE);\n+      } else {\n+        response.setHeader(HttpHeaders.CONTENT_LENGTH,\n+          String.valueOf(contentLength));\n+        response.setHeader(HttpHeaders.CONNECTION, HttpHeaders.KEEP_ALIVE);\n+        response.setHeader(HttpHeaders.KEEP_ALIVE, \"timeout\u003d\"\n+            + connectionKeepAliveTimeOut);\n+        LOG.info(\"Content Length in shuffle : \" + contentLength);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setResponseHeaders(HttpResponse response,\n        boolean keepAliveParam, long contentLength) {\n      if (!connectionKeepAliveEnabled \u0026\u0026 !keepAliveParam) {\n        LOG.info(\"Setting connection close header...\");\n        response.setHeader(HttpHeaders.CONNECTION, CONNECTION_CLOSE);\n      } else {\n        response.setHeader(HttpHeaders.CONTENT_LENGTH,\n          String.valueOf(contentLength));\n        response.setHeader(HttpHeaders.CONNECTION, HttpHeaders.KEEP_ALIVE);\n        response.setHeader(HttpHeaders.KEEP_ALIVE, \"timeout\u003d\"\n            + connectionKeepAliveTimeOut);\n        LOG.info(\"Content Length in shuffle : \" + contentLength);\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java"
    }
  }
}