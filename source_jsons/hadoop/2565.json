{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientNamenodeProtocolTranslatorPB.java",
  "functionName": "append",
  "functionId": "append___src-String__clientName-String__flag-EnumSetWritable__CreateFlag__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
  "functionStartLine": 406,
  "functionEndLine": 422,
  "numCommitsSeen": 241,
  "timeTaken": 4938,
  "changeHistory": [
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
    "63d9f1596c92206cce3b72e3214d2fb5f6242b90",
    "06022b8fdc40e50eaac63758246353058e8cfa6d",
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
    "1556f86a31a54733d6550363aa0e027acca7823b",
    "8134b1c8702d7d6b3994c73b34afc7f8ee33ac6e",
    "d8dfcdcbc2e2df3aa1d7b309f263434739475e7e",
    "48da033901d3471ef176a94104158546152353e9"
  ],
  "changeHistoryShort": {
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": "Yexceptionschange",
    "63d9f1596c92206cce3b72e3214d2fb5f6242b90": "Yfilerename",
    "06022b8fdc40e50eaac63758246353058e8cfa6d": "Ybodychange",
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0": "Ymultichange(Yparameterchange,Ybodychange)",
    "1556f86a31a54733d6550363aa0e027acca7823b": "Ymultichange(Yreturntypechange,Ybodychange)",
    "8134b1c8702d7d6b3994c73b34afc7f8ee33ac6e": "Ybodychange",
    "d8dfcdcbc2e2df3aa1d7b309f263434739475e7e": "Ybodychange",
    "48da033901d3471ef176a94104158546152353e9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": {
      "type": "Yexceptionschange",
      "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "03/10/15 11:38 AM",
      "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/09/15 1:39 AM",
      "commitNameOld": "8fd55202468b28422b0df888641c9b08906fe4a7",
      "commitAuthorOld": "",
      "daysBetweenCommits": 4.42,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   public LastBlockWithStatus append(String src, String clientName,\n-      EnumSetWritable\u003cCreateFlag\u003e flag) throws AccessControlException,\n-      DSQuotaExceededException, FileNotFoundException, SafeModeException,\n-      UnresolvedLinkException, IOException {\n+      EnumSetWritable\u003cCreateFlag\u003e flag) throws IOException {\n     AppendRequestProto req \u003d AppendRequestProto.newBuilder().setSrc(src)\n-        .setClientName(clientName).setFlag(PBHelperClient.convertCreateFlag(flag))\n+        .setClientName(clientName).setFlag(\n+            PBHelperClient.convertCreateFlag(flag))\n         .build();\n     try {\n       AppendResponseProto res \u003d rpcProxy.append(null, req);\n       LocatedBlock lastBlock \u003d res.hasBlock() ? PBHelperClient\n           .convertLocatedBlockProto(res.getBlock()) : null;\n-      HdfsFileStatus stat \u003d (res.hasStat()) ? PBHelperClient.convert(res.getStat())\n-          : null;\n+      HdfsFileStatus stat \u003d (res.hasStat()) ?\n+          PBHelperClient.convert(res.getStat()) : null;\n       return new LastBlockWithStatus(lastBlock, stat);\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LastBlockWithStatus append(String src, String clientName,\n      EnumSetWritable\u003cCreateFlag\u003e flag) throws IOException {\n    AppendRequestProto req \u003d AppendRequestProto.newBuilder().setSrc(src)\n        .setClientName(clientName).setFlag(\n            PBHelperClient.convertCreateFlag(flag))\n        .build();\n    try {\n      AppendResponseProto res \u003d rpcProxy.append(null, req);\n      LocatedBlock lastBlock \u003d res.hasBlock() ? PBHelperClient\n          .convertLocatedBlockProto(res.getBlock()) : null;\n      HdfsFileStatus stat \u003d (res.hasStat()) ?\n          PBHelperClient.convert(res.getStat()) : null;\n      return new LastBlockWithStatus(lastBlock, stat);\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
      "extendedDetails": {
        "oldValue": "[AccessControlException, DSQuotaExceededException, FileNotFoundException, SafeModeException, UnresolvedLinkException, IOException]",
        "newValue": "[IOException]"
      }
    },
    "63d9f1596c92206cce3b72e3214d2fb5f6242b90": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-9039. Separate client and server side methods of o.a.h.hdfs.NameNodeProxies. Contributed by Mingliang Liu.\n",
      "commitDate": "22/09/15 8:52 PM",
      "commitName": "63d9f1596c92206cce3b72e3214d2fb5f6242b90",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "22/09/15 9:08 AM",
      "commitNameOld": "cc2b4739902df60254dce2ddb23ef8f6ff2a3495",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 0.49,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public LastBlockWithStatus append(String src, String clientName,\n      EnumSetWritable\u003cCreateFlag\u003e flag) throws AccessControlException,\n      DSQuotaExceededException, FileNotFoundException, SafeModeException,\n      UnresolvedLinkException, IOException {\n    AppendRequestProto req \u003d AppendRequestProto.newBuilder().setSrc(src)\n        .setClientName(clientName).setFlag(PBHelperClient.convertCreateFlag(flag))\n        .build();\n    try {\n      AppendResponseProto res \u003d rpcProxy.append(null, req);\n      LocatedBlock lastBlock \u003d res.hasBlock() ? PBHelperClient\n          .convert(res.getBlock()) : null;\n      HdfsFileStatus stat \u003d (res.hasStat()) ? PBHelperClient.convert(res.getStat())\n          : null;\n      return new LastBlockWithStatus(lastBlock, stat);\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java"
      }
    },
    "06022b8fdc40e50eaac63758246353058e8cfa6d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
      "commitDate": "21/09/15 6:53 PM",
      "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "22/08/15 1:31 PM",
      "commitNameOld": "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 30.22,
      "commitsBetweenForRepo": 176,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public LastBlockWithStatus append(String src, String clientName,\n       EnumSetWritable\u003cCreateFlag\u003e flag) throws AccessControlException,\n       DSQuotaExceededException, FileNotFoundException, SafeModeException,\n       UnresolvedLinkException, IOException {\n     AppendRequestProto req \u003d AppendRequestProto.newBuilder().setSrc(src)\n-        .setClientName(clientName).setFlag(PBHelper.convertCreateFlag(flag))\n+        .setClientName(clientName).setFlag(PBHelperClient.convertCreateFlag(flag))\n         .build();\n     try {\n       AppendResponseProto res \u003d rpcProxy.append(null, req);\n-      LocatedBlock lastBlock \u003d res.hasBlock() ? PBHelper\n+      LocatedBlock lastBlock \u003d res.hasBlock() ? PBHelperClient\n           .convert(res.getBlock()) : null;\n-      HdfsFileStatus stat \u003d (res.hasStat()) ? PBHelper.convert(res.getStat())\n+      HdfsFileStatus stat \u003d (res.hasStat()) ? PBHelperClient.convert(res.getStat())\n           : null;\n       return new LastBlockWithStatus(lastBlock, stat);\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LastBlockWithStatus append(String src, String clientName,\n      EnumSetWritable\u003cCreateFlag\u003e flag) throws AccessControlException,\n      DSQuotaExceededException, FileNotFoundException, SafeModeException,\n      UnresolvedLinkException, IOException {\n    AppendRequestProto req \u003d AppendRequestProto.newBuilder().setSrc(src)\n        .setClientName(clientName).setFlag(PBHelperClient.convertCreateFlag(flag))\n        .build();\n    try {\n      AppendResponseProto res \u003d rpcProxy.append(null, req);\n      LocatedBlock lastBlock \u003d res.hasBlock() ? PBHelperClient\n          .convert(res.getBlock()) : null;\n      HdfsFileStatus stat \u003d (res.hasStat()) ? PBHelperClient.convert(res.getStat())\n          : null;\n      return new LastBlockWithStatus(lastBlock, stat);\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
      "extendedDetails": {}
    },
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-3689. Add support for variable length block. Contributed by Jing Zhao.\n",
      "commitDate": "27/01/15 12:58 PM",
      "commitName": "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-3689. Add support for variable length block. Contributed by Jing Zhao.\n",
          "commitDate": "27/01/15 12:58 PM",
          "commitName": "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "12/01/15 10:50 PM",
          "commitNameOld": "7e9358feb326d48b8c4f00249e7af5023cebd2e2",
          "commitAuthorOld": "Plamen Jeliazkov",
          "daysBetweenCommits": 14.59,
          "commitsBetweenForRepo": 102,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,18 @@\n-  public LastBlockWithStatus append(String src, String clientName)\n-      throws AccessControlException, DSQuotaExceededException,\n-      FileNotFoundException, SafeModeException, UnresolvedLinkException,\n-      IOException {\n-    AppendRequestProto req \u003d AppendRequestProto.newBuilder()\n-        .setSrc(src)\n-        .setClientName(clientName)\n+  public LastBlockWithStatus append(String src, String clientName,\n+      EnumSetWritable\u003cCreateFlag\u003e flag) throws AccessControlException,\n+      DSQuotaExceededException, FileNotFoundException, SafeModeException,\n+      UnresolvedLinkException, IOException {\n+    AppendRequestProto req \u003d AppendRequestProto.newBuilder().setSrc(src)\n+        .setClientName(clientName).setFlag(PBHelper.convertCreateFlag(flag))\n         .build();\n     try {\n       AppendResponseProto res \u003d rpcProxy.append(null, req);\n       LocatedBlock lastBlock \u003d res.hasBlock() ? PBHelper\n           .convert(res.getBlock()) : null;\n       HdfsFileStatus stat \u003d (res.hasStat()) ? PBHelper.convert(res.getStat())\n           : null;\n       return new LastBlockWithStatus(lastBlock, stat);\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public LastBlockWithStatus append(String src, String clientName,\n      EnumSetWritable\u003cCreateFlag\u003e flag) throws AccessControlException,\n      DSQuotaExceededException, FileNotFoundException, SafeModeException,\n      UnresolvedLinkException, IOException {\n    AppendRequestProto req \u003d AppendRequestProto.newBuilder().setSrc(src)\n        .setClientName(clientName).setFlag(PBHelper.convertCreateFlag(flag))\n        .build();\n    try {\n      AppendResponseProto res \u003d rpcProxy.append(null, req);\n      LocatedBlock lastBlock \u003d res.hasBlock() ? PBHelper\n          .convert(res.getBlock()) : null;\n      HdfsFileStatus stat \u003d (res.hasStat()) ? PBHelper.convert(res.getStat())\n          : null;\n      return new LastBlockWithStatus(lastBlock, stat);\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "[src-String, clientName-String]",
            "newValue": "[src-String, clientName-String, flag-EnumSetWritable\u003cCreateFlag\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3689. Add support for variable length block. Contributed by Jing Zhao.\n",
          "commitDate": "27/01/15 12:58 PM",
          "commitName": "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "12/01/15 10:50 PM",
          "commitNameOld": "7e9358feb326d48b8c4f00249e7af5023cebd2e2",
          "commitAuthorOld": "Plamen Jeliazkov",
          "daysBetweenCommits": 14.59,
          "commitsBetweenForRepo": 102,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,18 @@\n-  public LastBlockWithStatus append(String src, String clientName)\n-      throws AccessControlException, DSQuotaExceededException,\n-      FileNotFoundException, SafeModeException, UnresolvedLinkException,\n-      IOException {\n-    AppendRequestProto req \u003d AppendRequestProto.newBuilder()\n-        .setSrc(src)\n-        .setClientName(clientName)\n+  public LastBlockWithStatus append(String src, String clientName,\n+      EnumSetWritable\u003cCreateFlag\u003e flag) throws AccessControlException,\n+      DSQuotaExceededException, FileNotFoundException, SafeModeException,\n+      UnresolvedLinkException, IOException {\n+    AppendRequestProto req \u003d AppendRequestProto.newBuilder().setSrc(src)\n+        .setClientName(clientName).setFlag(PBHelper.convertCreateFlag(flag))\n         .build();\n     try {\n       AppendResponseProto res \u003d rpcProxy.append(null, req);\n       LocatedBlock lastBlock \u003d res.hasBlock() ? PBHelper\n           .convert(res.getBlock()) : null;\n       HdfsFileStatus stat \u003d (res.hasStat()) ? PBHelper.convert(res.getStat())\n           : null;\n       return new LastBlockWithStatus(lastBlock, stat);\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public LastBlockWithStatus append(String src, String clientName,\n      EnumSetWritable\u003cCreateFlag\u003e flag) throws AccessControlException,\n      DSQuotaExceededException, FileNotFoundException, SafeModeException,\n      UnresolvedLinkException, IOException {\n    AppendRequestProto req \u003d AppendRequestProto.newBuilder().setSrc(src)\n        .setClientName(clientName).setFlag(PBHelper.convertCreateFlag(flag))\n        .build();\n    try {\n      AppendResponseProto res \u003d rpcProxy.append(null, req);\n      LocatedBlock lastBlock \u003d res.hasBlock() ? PBHelper\n          .convert(res.getBlock()) : null;\n      HdfsFileStatus stat \u003d (res.hasStat()) ? PBHelper.convert(res.getStat())\n          : null;\n      return new LastBlockWithStatus(lastBlock, stat);\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
          "extendedDetails": {}
        }
      ]
    },
    "1556f86a31a54733d6550363aa0e027acca7823b": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7210. Avoid two separate RPC\u0027s namenode.append() and namenode.getFileInfo() for an append call from DFSClient. (Vinayakumar B via umamahesh)\n",
      "commitDate": "28/11/14 7:39 AM",
      "commitName": "1556f86a31a54733d6550363aa0e027acca7823b",
      "commitAuthor": "Uma Maheswara Rao G",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7210. Avoid two separate RPC\u0027s namenode.append() and namenode.getFileInfo() for an append call from DFSClient. (Vinayakumar B via umamahesh)\n",
          "commitDate": "28/11/14 7:39 AM",
          "commitName": "1556f86a31a54733d6550363aa0e027acca7823b",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "29/09/14 2:14 PM",
          "commitNameOld": "7f0efe96f85704e39349f20ab6a11bfaa81c6a75",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 59.77,
          "commitsBetweenForRepo": 530,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,19 @@\n-  public LocatedBlock append(String src, String clientName)\n+  public LastBlockWithStatus append(String src, String clientName)\n       throws AccessControlException, DSQuotaExceededException,\n       FileNotFoundException, SafeModeException, UnresolvedLinkException,\n       IOException {\n     AppendRequestProto req \u003d AppendRequestProto.newBuilder()\n         .setSrc(src)\n         .setClientName(clientName)\n         .build();\n     try {\n       AppendResponseProto res \u003d rpcProxy.append(null, req);\n-      return res.hasBlock() ? PBHelper.convert(res.getBlock()) : null;\n+      LocatedBlock lastBlock \u003d res.hasBlock() ? PBHelper\n+          .convert(res.getBlock()) : null;\n+      HdfsFileStatus stat \u003d (res.hasStat()) ? PBHelper.convert(res.getStat())\n+          : null;\n+      return new LastBlockWithStatus(lastBlock, stat);\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public LastBlockWithStatus append(String src, String clientName)\n      throws AccessControlException, DSQuotaExceededException,\n      FileNotFoundException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AppendRequestProto req \u003d AppendRequestProto.newBuilder()\n        .setSrc(src)\n        .setClientName(clientName)\n        .build();\n    try {\n      AppendResponseProto res \u003d rpcProxy.append(null, req);\n      LocatedBlock lastBlock \u003d res.hasBlock() ? PBHelper\n          .convert(res.getBlock()) : null;\n      HdfsFileStatus stat \u003d (res.hasStat()) ? PBHelper.convert(res.getStat())\n          : null;\n      return new LastBlockWithStatus(lastBlock, stat);\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "LocatedBlock",
            "newValue": "LastBlockWithStatus"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7210. Avoid two separate RPC\u0027s namenode.append() and namenode.getFileInfo() for an append call from DFSClient. (Vinayakumar B via umamahesh)\n",
          "commitDate": "28/11/14 7:39 AM",
          "commitName": "1556f86a31a54733d6550363aa0e027acca7823b",
          "commitAuthor": "Uma Maheswara Rao G",
          "commitDateOld": "29/09/14 2:14 PM",
          "commitNameOld": "7f0efe96f85704e39349f20ab6a11bfaa81c6a75",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 59.77,
          "commitsBetweenForRepo": 530,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,19 @@\n-  public LocatedBlock append(String src, String clientName)\n+  public LastBlockWithStatus append(String src, String clientName)\n       throws AccessControlException, DSQuotaExceededException,\n       FileNotFoundException, SafeModeException, UnresolvedLinkException,\n       IOException {\n     AppendRequestProto req \u003d AppendRequestProto.newBuilder()\n         .setSrc(src)\n         .setClientName(clientName)\n         .build();\n     try {\n       AppendResponseProto res \u003d rpcProxy.append(null, req);\n-      return res.hasBlock() ? PBHelper.convert(res.getBlock()) : null;\n+      LocatedBlock lastBlock \u003d res.hasBlock() ? PBHelper\n+          .convert(res.getBlock()) : null;\n+      HdfsFileStatus stat \u003d (res.hasStat()) ? PBHelper.convert(res.getStat())\n+          : null;\n+      return new LastBlockWithStatus(lastBlock, stat);\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public LastBlockWithStatus append(String src, String clientName)\n      throws AccessControlException, DSQuotaExceededException,\n      FileNotFoundException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AppendRequestProto req \u003d AppendRequestProto.newBuilder()\n        .setSrc(src)\n        .setClientName(clientName)\n        .build();\n    try {\n      AppendResponseProto res \u003d rpcProxy.append(null, req);\n      LocatedBlock lastBlock \u003d res.hasBlock() ? PBHelper\n          .convert(res.getBlock()) : null;\n      HdfsFileStatus stat \u003d (res.hasStat()) ? PBHelper.convert(res.getStat())\n          : null;\n      return new LastBlockWithStatus(lastBlock, stat);\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
          "extendedDetails": {}
        }
      ]
    },
    "8134b1c8702d7d6b3994c73b34afc7f8ee33ac6e": {
      "type": "Ybodychange",
      "commitMessage": "Merge trunk into HA branch.\n\nSeveral conflicts around introduction of protobuf translator for DatanodeProtocol - mostly trivial resolutions.\n\nNB: this does not successfully pass any tests since the HAStatus field needs\nto be integrated into the HeartbeatResponse Protobuf implementation.\nThat will be a separate commit for clearer history.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1214518 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/12/11 2:47 PM",
      "commitName": "8134b1c8702d7d6b3994c73b34afc7f8ee33ac6e",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "12/12/11 4:21 PM",
      "commitNameOld": "13345f3a85b6b66c71a38e7c187c8ebb7cb5c35e",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 1.93,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   public LocatedBlock append(String src, String clientName)\n       throws AccessControlException, DSQuotaExceededException,\n       FileNotFoundException, SafeModeException, UnresolvedLinkException,\n       IOException {\n     AppendRequestProto req \u003d AppendRequestProto.newBuilder()\n         .setSrc(src)\n         .setClientName(clientName)\n         .build();\n     try {\n-      return PBHelper.convert(rpcProxy.append(null, req).getBlock());\n+      AppendResponseProto res \u003d rpcProxy.append(null, req);\n+      return res.hasBlock() ? PBHelper.convert(res.getBlock()) : null;\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LocatedBlock append(String src, String clientName)\n      throws AccessControlException, DSQuotaExceededException,\n      FileNotFoundException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AppendRequestProto req \u003d AppendRequestProto.newBuilder()\n        .setSrc(src)\n        .setClientName(clientName)\n        .build();\n    try {\n      AppendResponseProto res \u003d rpcProxy.append(null, req);\n      return res.hasBlock() ? PBHelper.convert(res.getBlock()) : null;\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
      "extendedDetails": {}
    },
    "d8dfcdcbc2e2df3aa1d7b309f263434739475e7e": {
      "type": "Ybodychange",
      "commitMessage": "    HDFS-2669 Enable protobuf rpc for ClientNamenodeProtocol\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1214128 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/12/11 1:27 AM",
      "commitName": "d8dfcdcbc2e2df3aa1d7b309f263434739475e7e",
      "commitAuthor": "Sanjay Radia",
      "commitDateOld": "13/12/11 3:31 PM",
      "commitNameOld": "3954a2fb1cbc7a8a0d1ad5859e7f5c9415530f4c",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 0.41,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   public LocatedBlock append(String src, String clientName)\n       throws AccessControlException, DSQuotaExceededException,\n       FileNotFoundException, SafeModeException, UnresolvedLinkException,\n       IOException {\n     AppendRequestProto req \u003d AppendRequestProto.newBuilder()\n         .setSrc(src)\n         .setClientName(clientName)\n         .build();\n     try {\n-      return PBHelper.convert(rpcProxy.append(null, req).getBlock());\n+      AppendResponseProto res \u003d rpcProxy.append(null, req);\n+      return res.hasBlock() ? PBHelper.convert(res.getBlock()) : null;\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LocatedBlock append(String src, String clientName)\n      throws AccessControlException, DSQuotaExceededException,\n      FileNotFoundException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AppendRequestProto req \u003d AppendRequestProto.newBuilder()\n        .setSrc(src)\n        .setClientName(clientName)\n        .build();\n    try {\n      AppendResponseProto res \u003d rpcProxy.append(null, req);\n      return res.hasBlock() ? PBHelper.convert(res.getBlock()) : null;\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
      "extendedDetails": {}
    },
    "48da033901d3471ef176a94104158546152353e9": {
      "type": "Yintroduced",
      "commitMessage": "    HDFS-2651 ClientNameNodeProtocol Translators for Protocol Buffers (sanjay)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213143 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/12/11 9:36 PM",
      "commitName": "48da033901d3471ef176a94104158546152353e9",
      "commitAuthor": "Sanjay Radia",
      "diff": "@@ -0,0 +1,14 @@\n+  public LocatedBlock append(String src, String clientName)\n+      throws AccessControlException, DSQuotaExceededException,\n+      FileNotFoundException, SafeModeException, UnresolvedLinkException,\n+      IOException {\n+    AppendRequestProto req \u003d AppendRequestProto.newBuilder()\n+        .setSrc(src)\n+        .setClientName(clientName)\n+        .build();\n+    try {\n+      return PBHelper.convert(rpcProxy.append(null, req).getBlock());\n+    } catch (ServiceException e) {\n+      throw ProtobufHelper.getRemoteException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public LocatedBlock append(String src, String clientName)\n      throws AccessControlException, DSQuotaExceededException,\n      FileNotFoundException, SafeModeException, UnresolvedLinkException,\n      IOException {\n    AppendRequestProto req \u003d AppendRequestProto.newBuilder()\n        .setSrc(src)\n        .setClientName(clientName)\n        .build();\n    try {\n      return PBHelper.convert(rpcProxy.append(null, req).getBlock());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java"
    }
  }
}