{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Ls.java",
  "functionName": "adjustColumnWidths",
  "functionId": "adjustColumnWidths___items-PathData[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
  "functionStartLine": 327,
  "functionEndLine": 355,
  "numCommitsSeen": 36,
  "timeTaken": 4530,
  "changeHistory": [
    "668817a6cefa6025ddfe082ed71d7d317d811381",
    "fa8cd1bf28f5b81849ba351a2d7225fbc580350d",
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
    "763e96ea2b18f584ba102b68271263be8c5d621c",
    "d9635759182b614a1dd5034c30978e7c4be8d0dd",
    "d6df0fdbbda42b4ddab3810b5ac57336c6241ba7",
    "d5639c85fb92a666abebd75390bad8b7fdd9df50",
    "21a5bc7f2c5d5973255e31ea7588712b7a3bec99",
    "32d3ed55d0a463dbe19010edcc42cae01cb315c0",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "5dbd26f2c7ac7f08b20d41b0f89ab3500649783b",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "99ebad8e757e90f6e036fc213d99f82dec7b80d7"
  ],
  "changeHistoryShort": {
    "668817a6cefa6025ddfe082ed71d7d317d811381": "Ybodychange",
    "fa8cd1bf28f5b81849ba351a2d7225fbc580350d": "Ybodychange",
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": "Ybodychange",
    "763e96ea2b18f584ba102b68271263be8c5d621c": "Ybodychange",
    "d9635759182b614a1dd5034c30978e7c4be8d0dd": "Ybodychange",
    "d6df0fdbbda42b4ddab3810b5ac57336c6241ba7": "Ymultichange(Yexceptionschange,Ybodychange)",
    "d5639c85fb92a666abebd75390bad8b7fdd9df50": "Ybodychange",
    "21a5bc7f2c5d5973255e31ea7588712b7a3bec99": "Ybodychange",
    "32d3ed55d0a463dbe19010edcc42cae01cb315c0": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "5dbd26f2c7ac7f08b20d41b0f89ab3500649783b": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "99ebad8e757e90f6e036fc213d99f82dec7b80d7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "668817a6cefa6025ddfe082ed71d7d317d811381": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-15954. ABFS: Enable owner and group conversion for MSI and login user using OAuth.\"\n\n(accidentally mixed in two patches)\n\nThis reverts commit fa8cd1bf28f5b81849ba351a2d7225fbc580350d.\n",
      "commitDate": "07/02/19 1:57 PM",
      "commitName": "668817a6cefa6025ddfe082ed71d7d317d811381",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "05/02/19 11:23 AM",
      "commitNameOld": "fa8cd1bf28f5b81849ba351a2d7225fbc580350d",
      "commitAuthorOld": "Da Zhou",
      "daysBetweenCommits": 2.11,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,29 @@\n   private void adjustColumnWidths(PathData items[]) throws IOException {\n     for (PathData item : items) {\n       FileStatus stat \u003d item.stat;\n       maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n       maxLen   \u003d maxLength(maxLen, stat.getLen());\n       maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n       maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n     }\n \n     StringBuilder fmt \u003d new StringBuilder();\n     fmt.append(\"%s%s\") // permission string\n         .append(\"%\"  + maxRepl  + \"s \")\n         .append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\")\n         .append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n     // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n     // a MissingFormatWidthException if it is used in String.format().\n     // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n     if(displayECPolicy){\n       int maxEC \u003d 0;\n       for (PathData item : items) {\n           ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n         maxEC \u003d maxLength(maxEC, contentSummary.getErasureCodingPolicy());\n       }\n       fmt.append((maxEC \u003e 0) ? \"%-\" + maxEC + \"s \" : \"%s\");\n     }\n-    int maxSpolicy \u003d 0;\n-    if (displaySPolicy) {\n-      if (items.length !\u003d 0) {\n-        for (BlockStoragePolicySpi s : items[0].fs.getAllStoragePolicies()) {\n-          maxSpolicy \u003d maxLength(maxSpolicy, s.getName());\n-        }\n-      }\n-    }\n-    fmt.append((maxSpolicy \u003e 0) ? \"%-\" + maxSpolicy + \"s \" : \"%s\");\n     fmt.append(\"%\"  + maxLen   + \"s \");\n     fmt.append(\"%s %s\"); // mod time \u0026 path\n     lineFormat \u003d fmt.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void adjustColumnWidths(PathData items[]) throws IOException {\n    for (PathData item : items) {\n      FileStatus stat \u003d item.stat;\n      maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n      maxLen   \u003d maxLength(maxLen, stat.getLen());\n      maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n      maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n    }\n\n    StringBuilder fmt \u003d new StringBuilder();\n    fmt.append(\"%s%s\") // permission string\n        .append(\"%\"  + maxRepl  + \"s \")\n        .append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\")\n        .append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n    // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n    // a MissingFormatWidthException if it is used in String.format().\n    // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n    if(displayECPolicy){\n      int maxEC \u003d 0;\n      for (PathData item : items) {\n          ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n        maxEC \u003d maxLength(maxEC, contentSummary.getErasureCodingPolicy());\n      }\n      fmt.append((maxEC \u003e 0) ? \"%-\" + maxEC + \"s \" : \"%s\");\n    }\n    fmt.append(\"%\"  + maxLen   + \"s \");\n    fmt.append(\"%s %s\"); // mod time \u0026 path\n    lineFormat \u003d fmt.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "fa8cd1bf28f5b81849ba351a2d7225fbc580350d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15954. ABFS: Enable owner and group conversion for MSI and login user using OAuth.\n\nContributed by Da Zhou and Junhua Gu.\n",
      "commitDate": "05/02/19 11:23 AM",
      "commitName": "fa8cd1bf28f5b81849ba351a2d7225fbc580350d",
      "commitAuthor": "Da Zhou",
      "commitDateOld": "11/01/19 10:54 AM",
      "commitNameOld": "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 25.02,
      "commitsBetweenForRepo": 180,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,38 @@\n   private void adjustColumnWidths(PathData items[]) throws IOException {\n     for (PathData item : items) {\n       FileStatus stat \u003d item.stat;\n       maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n       maxLen   \u003d maxLength(maxLen, stat.getLen());\n       maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n       maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n     }\n \n     StringBuilder fmt \u003d new StringBuilder();\n     fmt.append(\"%s%s\") // permission string\n         .append(\"%\"  + maxRepl  + \"s \")\n         .append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\")\n         .append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n     // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n     // a MissingFormatWidthException if it is used in String.format().\n     // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n     if(displayECPolicy){\n       int maxEC \u003d 0;\n       for (PathData item : items) {\n           ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n         maxEC \u003d maxLength(maxEC, contentSummary.getErasureCodingPolicy());\n       }\n       fmt.append((maxEC \u003e 0) ? \"%-\" + maxEC + \"s \" : \"%s\");\n     }\n+    int maxSpolicy \u003d 0;\n+    if (displaySPolicy) {\n+      if (items.length !\u003d 0) {\n+        for (BlockStoragePolicySpi s : items[0].fs.getAllStoragePolicies()) {\n+          maxSpolicy \u003d maxLength(maxSpolicy, s.getName());\n+        }\n+      }\n+    }\n+    fmt.append((maxSpolicy \u003e 0) ? \"%-\" + maxSpolicy + \"s \" : \"%s\");\n     fmt.append(\"%\"  + maxLen   + \"s \");\n     fmt.append(\"%s %s\"); // mod time \u0026 path\n     lineFormat \u003d fmt.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void adjustColumnWidths(PathData items[]) throws IOException {\n    for (PathData item : items) {\n      FileStatus stat \u003d item.stat;\n      maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n      maxLen   \u003d maxLength(maxLen, stat.getLen());\n      maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n      maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n    }\n\n    StringBuilder fmt \u003d new StringBuilder();\n    fmt.append(\"%s%s\") // permission string\n        .append(\"%\"  + maxRepl  + \"s \")\n        .append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\")\n        .append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n    // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n    // a MissingFormatWidthException if it is used in String.format().\n    // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n    if(displayECPolicy){\n      int maxEC \u003d 0;\n      for (PathData item : items) {\n          ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n        maxEC \u003d maxLength(maxEC, contentSummary.getErasureCodingPolicy());\n      }\n      fmt.append((maxEC \u003e 0) ? \"%-\" + maxEC + \"s \" : \"%s\");\n    }\n    int maxSpolicy \u003d 0;\n    if (displaySPolicy) {\n      if (items.length !\u003d 0) {\n        for (BlockStoragePolicySpi s : items[0].fs.getAllStoragePolicies()) {\n          maxSpolicy \u003d maxLength(maxSpolicy, s.getName());\n        }\n      }\n    }\n    fmt.append((maxSpolicy \u003e 0) ? \"%-\" + maxSpolicy + \"s \" : \"%s\");\n    fmt.append(\"%\"  + maxLen   + \"s \");\n    fmt.append(\"%s %s\"); // mod time \u0026 path\n    lineFormat \u003d fmt.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16029. Consecutive StringBuilder.append can be reused. Contributed by Ayush Saxena.\n",
      "commitDate": "11/01/19 10:54 AM",
      "commitName": "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "21/12/18 10:52 PM",
      "commitNameOld": "763e96ea2b18f584ba102b68271263be8c5d621c",
      "commitAuthorOld": "Surendra Singh Lilhore",
      "daysBetweenCommits": 20.5,
      "commitsBetweenForRepo": 125,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   private void adjustColumnWidths(PathData items[]) throws IOException {\n     for (PathData item : items) {\n       FileStatus stat \u003d item.stat;\n       maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n       maxLen   \u003d maxLength(maxLen, stat.getLen());\n       maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n       maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n     }\n \n     StringBuilder fmt \u003d new StringBuilder();\n-    fmt.append(\"%s%s\"); // permission string\n-    fmt.append(\"%\"  + maxRepl  + \"s \");\n-    fmt.append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\");\n-    fmt.append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n+    fmt.append(\"%s%s\") // permission string\n+        .append(\"%\"  + maxRepl  + \"s \")\n+        .append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\")\n+        .append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n     // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n     // a MissingFormatWidthException if it is used in String.format().\n     // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n     if(displayECPolicy){\n       int maxEC \u003d 0;\n       for (PathData item : items) {\n           ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n         maxEC \u003d maxLength(maxEC, contentSummary.getErasureCodingPolicy());\n       }\n       fmt.append((maxEC \u003e 0) ? \"%-\" + maxEC + \"s \" : \"%s\");\n     }\n     fmt.append(\"%\"  + maxLen   + \"s \");\n     fmt.append(\"%s %s\"); // mod time \u0026 path\n     lineFormat \u003d fmt.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void adjustColumnWidths(PathData items[]) throws IOException {\n    for (PathData item : items) {\n      FileStatus stat \u003d item.stat;\n      maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n      maxLen   \u003d maxLength(maxLen, stat.getLen());\n      maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n      maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n    }\n\n    StringBuilder fmt \u003d new StringBuilder();\n    fmt.append(\"%s%s\") // permission string\n        .append(\"%\"  + maxRepl  + \"s \")\n        .append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\")\n        .append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n    // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n    // a MissingFormatWidthException if it is used in String.format().\n    // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n    if(displayECPolicy){\n      int maxEC \u003d 0;\n      for (PathData item : items) {\n          ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n        maxEC \u003d maxLength(maxEC, contentSummary.getErasureCodingPolicy());\n      }\n      fmt.append((maxEC \u003e 0) ? \"%-\" + maxEC + \"s \" : \"%s\");\n    }\n    fmt.append(\"%\"  + maxLen   + \"s \");\n    fmt.append(\"%s %s\"); // mod time \u0026 path\n    lineFormat \u003d fmt.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "763e96ea2b18f584ba102b68271263be8c5d621c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14166. Ls with -e option not giving the result in proper format. Contributed by Shubham Dewan.\n",
      "commitDate": "21/12/18 10:52 PM",
      "commitName": "763e96ea2b18f584ba102b68271263be8c5d621c",
      "commitAuthor": "Surendra Singh Lilhore",
      "commitDateOld": "19/12/18 5:03 PM",
      "commitNameOld": "d9635759182b614a1dd5034c30978e7c4be8d0dd",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 2.24,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   private void adjustColumnWidths(PathData items[]) throws IOException {\n     for (PathData item : items) {\n       FileStatus stat \u003d item.stat;\n       maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n       maxLen   \u003d maxLength(maxLen, stat.getLen());\n       maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n       maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n     }\n \n     StringBuilder fmt \u003d new StringBuilder();\n     fmt.append(\"%s%s\"); // permission string\n     fmt.append(\"%\"  + maxRepl  + \"s \");\n     fmt.append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\");\n     fmt.append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n     // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n     // a MissingFormatWidthException if it is used in String.format().\n     // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n     if(displayECPolicy){\n       int maxEC \u003d 0;\n       for (PathData item : items) {\n           ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n-          maxEC\u003dmaxLength(maxEC,contentSummary.getErasureCodingPolicy().length());\n+        maxEC \u003d maxLength(maxEC, contentSummary.getErasureCodingPolicy());\n       }\n       fmt.append((maxEC \u003e 0) ? \"%-\" + maxEC + \"s \" : \"%s\");\n     }\n     fmt.append(\"%\"  + maxLen   + \"s \");\n     fmt.append(\"%s %s\"); // mod time \u0026 path\n     lineFormat \u003d fmt.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void adjustColumnWidths(PathData items[]) throws IOException {\n    for (PathData item : items) {\n      FileStatus stat \u003d item.stat;\n      maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n      maxLen   \u003d maxLength(maxLen, stat.getLen());\n      maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n      maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n    }\n\n    StringBuilder fmt \u003d new StringBuilder();\n    fmt.append(\"%s%s\"); // permission string\n    fmt.append(\"%\"  + maxRepl  + \"s \");\n    fmt.append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\");\n    fmt.append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n    // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n    // a MissingFormatWidthException if it is used in String.format().\n    // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n    if(displayECPolicy){\n      int maxEC \u003d 0;\n      for (PathData item : items) {\n          ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n        maxEC \u003d maxLength(maxEC, contentSummary.getErasureCodingPolicy());\n      }\n      fmt.append((maxEC \u003e 0) ? \"%-\" + maxEC + \"s \" : \"%s\");\n    }\n    fmt.append(\"%\"  + maxLen   + \"s \");\n    fmt.append(\"%s %s\"); // mod time \u0026 path\n    lineFormat \u003d fmt.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "d9635759182b614a1dd5034c30978e7c4be8d0dd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13661. Ls command with e option fails when the filesystem is not HDFS.\n",
      "commitDate": "19/12/18 5:03 PM",
      "commitName": "d9635759182b614a1dd5034c30978e7c4be8d0dd",
      "commitAuthor": "Takanobu Asanuma",
      "commitDateOld": "11/04/18 5:19 PM",
      "commitNameOld": "0d898b7bb8d8d616133236da979a4316be4c1a6f",
      "commitAuthorOld": "Aaron Fabbri",
      "daysBetweenCommits": 252.03,
      "commitsBetweenForRepo": 2477,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   private void adjustColumnWidths(PathData items[]) throws IOException {\n     for (PathData item : items) {\n       FileStatus stat \u003d item.stat;\n       maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n       maxLen   \u003d maxLength(maxLen, stat.getLen());\n       maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n       maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n     }\n \n     StringBuilder fmt \u003d new StringBuilder();\n     fmt.append(\"%s%s\"); // permission string\n     fmt.append(\"%\"  + maxRepl  + \"s \");\n+    fmt.append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\");\n+    fmt.append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n     // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n     // a MissingFormatWidthException if it is used in String.format().\n     // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n     if(displayECPolicy){\n-      int maxEC\u003d0;\n+      int maxEC \u003d 0;\n       for (PathData item : items) {\n           ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n           maxEC\u003dmaxLength(maxEC,contentSummary.getErasureCodingPolicy().length());\n       }\n-      fmt.append(\" %\"+maxEC+\"s \");\n+      fmt.append((maxEC \u003e 0) ? \"%-\" + maxEC + \"s \" : \"%s\");\n     }\n-    fmt.append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\");\n-    fmt.append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n     fmt.append(\"%\"  + maxLen   + \"s \");\n     fmt.append(\"%s %s\"); // mod time \u0026 path\n     lineFormat \u003d fmt.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void adjustColumnWidths(PathData items[]) throws IOException {\n    for (PathData item : items) {\n      FileStatus stat \u003d item.stat;\n      maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n      maxLen   \u003d maxLength(maxLen, stat.getLen());\n      maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n      maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n    }\n\n    StringBuilder fmt \u003d new StringBuilder();\n    fmt.append(\"%s%s\"); // permission string\n    fmt.append(\"%\"  + maxRepl  + \"s \");\n    fmt.append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\");\n    fmt.append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n    // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n    // a MissingFormatWidthException if it is used in String.format().\n    // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n    if(displayECPolicy){\n      int maxEC \u003d 0;\n      for (PathData item : items) {\n          ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n          maxEC\u003dmaxLength(maxEC,contentSummary.getErasureCodingPolicy().length());\n      }\n      fmt.append((maxEC \u003e 0) ? \"%-\" + maxEC + \"s \" : \"%s\");\n    }\n    fmt.append(\"%\"  + maxLen   + \"s \");\n    fmt.append(\"%s %s\"); // mod time \u0026 path\n    lineFormat \u003d fmt.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "d6df0fdbbda42b4ddab3810b5ac57336c6241ba7": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "Add -E option in \u0027ls\u0027 to list erasure coding policy of each file and directory if applicable. Contributed by luhuichun via lei.\n",
      "commitDate": "28/06/17 1:47 PM",
      "commitName": "d6df0fdbbda42b4ddab3810b5ac57336c6241ba7",
      "commitAuthor": "Lei Xu",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "Add -E option in \u0027ls\u0027 to list erasure coding policy of each file and directory if applicable. Contributed by luhuichun via lei.\n",
          "commitDate": "28/06/17 1:47 PM",
          "commitName": "d6df0fdbbda42b4ddab3810b5ac57336c6241ba7",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "13/06/16 11:43 AM",
          "commitNameOld": "0accc3306d830c3f2b16c4b8abf68729c7aba6cb",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 380.09,
          "commitsBetweenForRepo": 2444,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,29 @@\n-  private void adjustColumnWidths(PathData items[]) {\n+  private void adjustColumnWidths(PathData items[]) throws IOException {\n     for (PathData item : items) {\n       FileStatus stat \u003d item.stat;\n       maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n       maxLen   \u003d maxLength(maxLen, stat.getLen());\n       maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n       maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n     }\n \n     StringBuilder fmt \u003d new StringBuilder();\n     fmt.append(\"%s%s\"); // permission string\n     fmt.append(\"%\"  + maxRepl  + \"s \");\n     // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n     // a MissingFormatWidthException if it is used in String.format().\n     // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n+    if(displayECPolicy){\n+      int maxEC\u003d0;\n+      for (PathData item : items) {\n+          ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n+          maxEC\u003dmaxLength(maxEC,contentSummary.getErasureCodingPolicy().length());\n+      }\n+      fmt.append(\" %\"+maxEC+\"s \");\n+    }\n     fmt.append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\");\n     fmt.append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n     fmt.append(\"%\"  + maxLen   + \"s \");\n     fmt.append(\"%s %s\"); // mod time \u0026 path\n     lineFormat \u003d fmt.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void adjustColumnWidths(PathData items[]) throws IOException {\n    for (PathData item : items) {\n      FileStatus stat \u003d item.stat;\n      maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n      maxLen   \u003d maxLength(maxLen, stat.getLen());\n      maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n      maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n    }\n\n    StringBuilder fmt \u003d new StringBuilder();\n    fmt.append(\"%s%s\"); // permission string\n    fmt.append(\"%\"  + maxRepl  + \"s \");\n    // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n    // a MissingFormatWidthException if it is used in String.format().\n    // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n    if(displayECPolicy){\n      int maxEC\u003d0;\n      for (PathData item : items) {\n          ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n          maxEC\u003dmaxLength(maxEC,contentSummary.getErasureCodingPolicy().length());\n      }\n      fmt.append(\" %\"+maxEC+\"s \");\n    }\n    fmt.append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\");\n    fmt.append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n    fmt.append(\"%\"  + maxLen   + \"s \");\n    fmt.append(\"%s %s\"); // mod time \u0026 path\n    lineFormat \u003d fmt.toString();\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Add -E option in \u0027ls\u0027 to list erasure coding policy of each file and directory if applicable. Contributed by luhuichun via lei.\n",
          "commitDate": "28/06/17 1:47 PM",
          "commitName": "d6df0fdbbda42b4ddab3810b5ac57336c6241ba7",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "13/06/16 11:43 AM",
          "commitNameOld": "0accc3306d830c3f2b16c4b8abf68729c7aba6cb",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 380.09,
          "commitsBetweenForRepo": 2444,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,29 @@\n-  private void adjustColumnWidths(PathData items[]) {\n+  private void adjustColumnWidths(PathData items[]) throws IOException {\n     for (PathData item : items) {\n       FileStatus stat \u003d item.stat;\n       maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n       maxLen   \u003d maxLength(maxLen, stat.getLen());\n       maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n       maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n     }\n \n     StringBuilder fmt \u003d new StringBuilder();\n     fmt.append(\"%s%s\"); // permission string\n     fmt.append(\"%\"  + maxRepl  + \"s \");\n     // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n     // a MissingFormatWidthException if it is used in String.format().\n     // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n+    if(displayECPolicy){\n+      int maxEC\u003d0;\n+      for (PathData item : items) {\n+          ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n+          maxEC\u003dmaxLength(maxEC,contentSummary.getErasureCodingPolicy().length());\n+      }\n+      fmt.append(\" %\"+maxEC+\"s \");\n+    }\n     fmt.append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\");\n     fmt.append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n     fmt.append(\"%\"  + maxLen   + \"s \");\n     fmt.append(\"%s %s\"); // mod time \u0026 path\n     lineFormat \u003d fmt.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void adjustColumnWidths(PathData items[]) throws IOException {\n    for (PathData item : items) {\n      FileStatus stat \u003d item.stat;\n      maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n      maxLen   \u003d maxLength(maxLen, stat.getLen());\n      maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n      maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n    }\n\n    StringBuilder fmt \u003d new StringBuilder();\n    fmt.append(\"%s%s\"); // permission string\n    fmt.append(\"%\"  + maxRepl  + \"s \");\n    // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n    // a MissingFormatWidthException if it is used in String.format().\n    // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n    if(displayECPolicy){\n      int maxEC\u003d0;\n      for (PathData item : items) {\n          ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n          maxEC\u003dmaxLength(maxEC,contentSummary.getErasureCodingPolicy().length());\n      }\n      fmt.append(\" %\"+maxEC+\"s \");\n    }\n    fmt.append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\");\n    fmt.append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n    fmt.append(\"%\"  + maxLen   + \"s \");\n    fmt.append(\"%s %s\"); // mod time \u0026 path\n    lineFormat \u003d fmt.toString();\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
          "extendedDetails": {}
        }
      ]
    },
    "d5639c85fb92a666abebd75390bad8b7fdd9df50": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10361. Correct alignment in CLI output for ACLs. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1571573 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/02/14 9:54 PM",
      "commitName": "d5639c85fb92a666abebd75390bad8b7fdd9df50",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "12/02/14 9:51 PM",
      "commitNameOld": "9ee7c2a0774eb07b1d7ee40aa89659c5c0a6346e",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 12.0,
      "commitsBetweenForRepo": 90,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n   private void adjustColumnWidths(PathData items[]) {\n     for (PathData item : items) {\n       FileStatus stat \u003d item.stat;\n-      maxPerm  \u003d maxLength(maxPerm, stat.getPermission());\n       maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n       maxLen   \u003d maxLength(maxLen, stat.getLen());\n       maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n       maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n     }\n \n     StringBuilder fmt \u003d new StringBuilder();\n-    fmt.append(\"%s%-\" + maxPerm + \"s \"); // permission string\n+    fmt.append(\"%s%s\"); // permission string\n     fmt.append(\"%\"  + maxRepl  + \"s \");\n     // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n     // a MissingFormatWidthException if it is used in String.format().\n     // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n     fmt.append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\");\n     fmt.append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n     fmt.append(\"%\"  + maxLen   + \"s \");\n     fmt.append(\"%s %s\"); // mod time \u0026 path\n     lineFormat \u003d fmt.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void adjustColumnWidths(PathData items[]) {\n    for (PathData item : items) {\n      FileStatus stat \u003d item.stat;\n      maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n      maxLen   \u003d maxLength(maxLen, stat.getLen());\n      maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n      maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n    }\n\n    StringBuilder fmt \u003d new StringBuilder();\n    fmt.append(\"%s%s\"); // permission string\n    fmt.append(\"%\"  + maxRepl  + \"s \");\n    // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n    // a MissingFormatWidthException if it is used in String.format().\n    // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n    fmt.append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\");\n    fmt.append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n    fmt.append(\"%\"  + maxLen   + \"s \");\n    fmt.append(\"%s %s\"); // mod time \u0026 path\n    lineFormat \u003d fmt.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "21a5bc7f2c5d5973255e31ea7588712b7a3bec99": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10241. Clean up output of FsShell getfacl. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1560194 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/01/14 1:20 PM",
      "commitName": "21a5bc7f2c5d5973255e31ea7588712b7a3bec99",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "04/02/13 1:40 PM",
      "commitNameOld": "ef2ff99d36752d2e95236c4ab8e5290a2e41e5bf",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 350.99,
      "commitsBetweenForRepo": 2118,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   private void adjustColumnWidths(PathData items[]) {\n     for (PathData item : items) {\n       FileStatus stat \u003d item.stat;\n+      maxPerm  \u003d maxLength(maxPerm, stat.getPermission());\n       maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n       maxLen   \u003d maxLength(maxLen, stat.getLen());\n       maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n       maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n     }\n \n     StringBuilder fmt \u003d new StringBuilder();\n-    fmt.append(\"%s%s \"); // permission string\n+    fmt.append(\"%s%-\" + maxPerm + \"s \"); // permission string\n     fmt.append(\"%\"  + maxRepl  + \"s \");\n     // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n     // a MissingFormatWidthException if it is used in String.format().\n     // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n     fmt.append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\");\n     fmt.append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n     fmt.append(\"%\"  + maxLen   + \"s \");\n     fmt.append(\"%s %s\"); // mod time \u0026 path\n     lineFormat \u003d fmt.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void adjustColumnWidths(PathData items[]) {\n    for (PathData item : items) {\n      FileStatus stat \u003d item.stat;\n      maxPerm  \u003d maxLength(maxPerm, stat.getPermission());\n      maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n      maxLen   \u003d maxLength(maxLen, stat.getLen());\n      maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n      maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n    }\n\n    StringBuilder fmt \u003d new StringBuilder();\n    fmt.append(\"%s%-\" + maxPerm + \"s \"); // permission string\n    fmt.append(\"%\"  + maxRepl  + \"s \");\n    // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n    // a MissingFormatWidthException if it is used in String.format().\n    // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n    fmt.append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\");\n    fmt.append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n    fmt.append(\"%\"  + maxLen   + \"s \");\n    fmt.append(\"%s %s\"); // mod time \u0026 path\n    lineFormat \u003d fmt.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "32d3ed55d0a463dbe19010edcc42cae01cb315c0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8168. empty-string owners or groups causes {{MissingFormatWidthException}} in o.a.h.fs.shell.Ls.ProcessPath() (ekoontz via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1355085 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/12 10:42 AM",
      "commitName": "32d3ed55d0a463dbe19010edcc42cae01cb315c0",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "27/10/11 6:13 PM",
      "commitNameOld": "659ea4c540e440004d9f1a7dedefa91c0bec8b04",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 244.69,
      "commitsBetweenForRepo": 1622,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,21 @@\n   private void adjustColumnWidths(PathData items[]) {\n     for (PathData item : items) {\n       FileStatus stat \u003d item.stat;\n       maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n       maxLen   \u003d maxLength(maxLen, stat.getLen());\n       maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n       maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n     }\n \n     StringBuilder fmt \u003d new StringBuilder();\n     fmt.append(\"%s%s \"); // permission string\n     fmt.append(\"%\"  + maxRepl  + \"s \");\n-    fmt.append(\"%-\" + maxOwner + \"s \");\n-    fmt.append(\"%-\" + maxGroup + \"s \");\n+    // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n+    // a MissingFormatWidthException if it is used in String.format().\n+    // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n+    fmt.append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\");\n+    fmt.append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n     fmt.append(\"%\"  + maxLen   + \"s \");\n     fmt.append(\"%s %s\"); // mod time \u0026 path\n     lineFormat \u003d fmt.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void adjustColumnWidths(PathData items[]) {\n    for (PathData item : items) {\n      FileStatus stat \u003d item.stat;\n      maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n      maxLen   \u003d maxLength(maxLen, stat.getLen());\n      maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n      maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n    }\n\n    StringBuilder fmt \u003d new StringBuilder();\n    fmt.append(\"%s%s \"); // permission string\n    fmt.append(\"%\"  + maxRepl  + \"s \");\n    // Do not use \u0027%-0s\u0027 as a formatting conversion, since it will throw a\n    // a MissingFormatWidthException if it is used in String.format().\n    // http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Formatter.html#intFlags\n    fmt.append((maxOwner \u003e 0) ? \"%-\" + maxOwner + \"s \" : \"%s\");\n    fmt.append((maxGroup \u003e 0) ? \"%-\" + maxGroup + \"s \" : \"%s\");\n    fmt.append(\"%\"  + maxLen   + \"s \");\n    fmt.append(\"%s %s\"); // mod time \u0026 path\n    lineFormat \u003d fmt.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void adjustColumnWidths(PathData items[]) {\n    for (PathData item : items) {\n      FileStatus stat \u003d item.stat;\n      maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n      maxLen   \u003d maxLength(maxLen, stat.getLen());\n      maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n      maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n    }\n\n    StringBuilder fmt \u003d new StringBuilder();\n    fmt.append(\"%s%s \"); // permission string\n    fmt.append(\"%\"  + maxRepl  + \"s \");\n    fmt.append(\"%-\" + maxOwner + \"s \");\n    fmt.append(\"%-\" + maxGroup + \"s \");\n    fmt.append(\"%\"  + maxLen   + \"s \");\n    fmt.append(\"%s %s\"); // mod time \u0026 path\n    lineFormat \u003d fmt.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void adjustColumnWidths(PathData items[]) {\n    for (PathData item : items) {\n      FileStatus stat \u003d item.stat;\n      maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n      maxLen   \u003d maxLength(maxLen, stat.getLen());\n      maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n      maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n    }\n\n    StringBuilder fmt \u003d new StringBuilder();\n    fmt.append(\"%s%s \"); // permission string\n    fmt.append(\"%\"  + maxRepl  + \"s \");\n    fmt.append(\"%-\" + maxOwner + \"s \");\n    fmt.append(\"%-\" + maxGroup + \"s \");\n    fmt.append(\"%\"  + maxLen   + \"s \");\n    fmt.append(\"%s %s\"); // mod time \u0026 path\n    lineFormat \u003d fmt.toString();\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/shell/Ls.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java"
      }
    },
    "5dbd26f2c7ac7f08b20d41b0f89ab3500649783b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7485. Add -h option to ls to list file sizes in human readable format. Contributed by XieXianshan.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1151505 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/07/11 8:35 AM",
      "commitName": "5dbd26f2c7ac7f08b20d41b0f89ab3500649783b",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "12/06/11 3:00 PM",
      "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 44.73,
      "commitsBetweenForRepo": 154,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private void adjustColumnWidths(PathData items[]) {\n     for (PathData item : items) {\n       FileStatus stat \u003d item.stat;\n       maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n       maxLen   \u003d maxLength(maxLen, stat.getLen());\n       maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n       maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n     }\n \n     StringBuilder fmt \u003d new StringBuilder();\n     fmt.append(\"%s%s \"); // permission string\n     fmt.append(\"%\"  + maxRepl  + \"s \");\n     fmt.append(\"%-\" + maxOwner + \"s \");\n     fmt.append(\"%-\" + maxGroup + \"s \");\n-    fmt.append(\"%\"  + maxLen   + \"d \");\n+    fmt.append(\"%\"  + maxLen   + \"s \");\n     fmt.append(\"%s %s\"); // mod time \u0026 path\n     lineFormat \u003d fmt.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void adjustColumnWidths(PathData items[]) {\n    for (PathData item : items) {\n      FileStatus stat \u003d item.stat;\n      maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n      maxLen   \u003d maxLength(maxLen, stat.getLen());\n      maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n      maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n    }\n\n    StringBuilder fmt \u003d new StringBuilder();\n    fmt.append(\"%s%s \"); // permission string\n    fmt.append(\"%\"  + maxRepl  + \"s \");\n    fmt.append(\"%-\" + maxOwner + \"s \");\n    fmt.append(\"%-\" + maxGroup + \"s \");\n    fmt.append(\"%\"  + maxLen   + \"s \");\n    fmt.append(\"%s %s\"); // mod time \u0026 path\n    lineFormat \u003d fmt.toString();\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void adjustColumnWidths(PathData items[]) {\n    for (PathData item : items) {\n      FileStatus stat \u003d item.stat;\n      maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n      maxLen   \u003d maxLength(maxLen, stat.getLen());\n      maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n      maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n    }\n\n    StringBuilder fmt \u003d new StringBuilder();\n    fmt.append(\"%s%s \"); // permission string\n    fmt.append(\"%\"  + maxRepl  + \"s \");\n    fmt.append(\"%-\" + maxOwner + \"s \");\n    fmt.append(\"%-\" + maxGroup + \"s \");\n    fmt.append(\"%\"  + maxLen   + \"d \");\n    fmt.append(\"%s %s\"); // mod time \u0026 path\n    lineFormat \u003d fmt.toString();\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/shell/Ls.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/shell/Ls.java"
      }
    },
    "99ebad8e757e90f6e036fc213d99f82dec7b80d7": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7233. Refactor ls to conform to new FsCommand class.  Contributed by Daryn Sharp\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1095761 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/04/11 9:05 AM",
      "commitName": "99ebad8e757e90f6e036fc213d99f82dec7b80d7",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,18 @@\n+  private void adjustColumnWidths(PathData items[]) {\n+    for (PathData item : items) {\n+      FileStatus stat \u003d item.stat;\n+      maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n+      maxLen   \u003d maxLength(maxLen, stat.getLen());\n+      maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n+      maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n+    }\n+\n+    StringBuilder fmt \u003d new StringBuilder();\n+    fmt.append(\"%s%s \"); // permission string\n+    fmt.append(\"%\"  + maxRepl  + \"s \");\n+    fmt.append(\"%-\" + maxOwner + \"s \");\n+    fmt.append(\"%-\" + maxGroup + \"s \");\n+    fmt.append(\"%\"  + maxLen   + \"d \");\n+    fmt.append(\"%s %s\"); // mod time \u0026 path\n+    lineFormat \u003d fmt.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void adjustColumnWidths(PathData items[]) {\n    for (PathData item : items) {\n      FileStatus stat \u003d item.stat;\n      maxRepl  \u003d maxLength(maxRepl, stat.getReplication());\n      maxLen   \u003d maxLength(maxLen, stat.getLen());\n      maxOwner \u003d maxLength(maxOwner, stat.getOwner());\n      maxGroup \u003d maxLength(maxGroup, stat.getGroup());\n    }\n\n    StringBuilder fmt \u003d new StringBuilder();\n    fmt.append(\"%s%s \"); // permission string\n    fmt.append(\"%\"  + maxRepl  + \"s \");\n    fmt.append(\"%-\" + maxOwner + \"s \");\n    fmt.append(\"%-\" + maxGroup + \"s \");\n    fmt.append(\"%\"  + maxLen   + \"d \");\n    fmt.append(\"%s %s\"); // mod time \u0026 path\n    lineFormat \u003d fmt.toString();\n  }",
      "path": "src/java/org/apache/hadoop/fs/shell/Ls.java"
    }
  }
}