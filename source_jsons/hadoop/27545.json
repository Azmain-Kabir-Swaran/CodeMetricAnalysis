{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeTimelineCollectorManager.java",
  "functionName": "getNMCollectorService",
  "functionId": "getNMCollectorService",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/NodeTimelineCollectorManager.java",
  "functionStartLine": 377,
  "functionEndLine": 398,
  "numCommitsSeen": 20,
  "timeTaken": 1595,
  "changeHistory": [
    "d275677e240cca469a4cec3dc7238e3f18b3f7e9",
    "11e8905d8daf129afb6fe2e5a0eca11bcb1719c8",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438"
  ],
  "changeHistoryShort": {
    "d275677e240cca469a4cec3dc7238e3f18b3f7e9": "Ybodychange",
    "11e8905d8daf129afb6fe2e5a0eca11bcb1719c8": "Ymovefromfile",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d275677e240cca469a4cec3dc7238e3f18b3f7e9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3634. TestMRTimelineEventHandling and TestApplication are broken. Contributed by Sangjin Lee.\n\n(cherry picked from commit b059dd4882fd759e4762cc11c019be4b68fb74c1)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "d275677e240cca469a4cec3dc7238e3f18b3f7e9",
      "commitAuthor": "Junping Du",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "11e8905d8daf129afb6fe2e5a0eca11bcb1719c8",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,22 @@\n   protected CollectorNodemanagerProtocol getNMCollectorService() {\n-    Configuration conf \u003d getConfig();\n-    final YarnRPC rpc \u003d YarnRPC.create(conf);\n+    if (nmCollectorService \u003d\u003d null) {\n+      synchronized (this) {\n+        if (nmCollectorService \u003d\u003d null) {\n+          Configuration conf \u003d getConfig();\n+          InetSocketAddress nmCollectorServiceAddress \u003d conf.getSocketAddr(\n+              YarnConfiguration.NM_BIND_HOST,\n+              YarnConfiguration.NM_COLLECTOR_SERVICE_ADDRESS,\n+              YarnConfiguration.DEFAULT_NM_COLLECTOR_SERVICE_ADDRESS,\n+              YarnConfiguration.DEFAULT_NM_COLLECTOR_SERVICE_PORT);\n+          LOG.info(\"nmCollectorServiceAddress: \" + nmCollectorServiceAddress);\n+          final YarnRPC rpc \u003d YarnRPC.create(conf);\n \n-    // TODO Security settings.\n-    return (CollectorNodemanagerProtocol) rpc.getProxy(\n-        CollectorNodemanagerProtocol.class,\n-        nmCollectorServiceAddress, conf);\n+          // TODO Security settings.\n+          nmCollectorService \u003d (CollectorNodemanagerProtocol) rpc.getProxy(\n+              CollectorNodemanagerProtocol.class,\n+              nmCollectorServiceAddress, conf);\n+        }\n+      }\n+    }\n+    return nmCollectorService;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected CollectorNodemanagerProtocol getNMCollectorService() {\n    if (nmCollectorService \u003d\u003d null) {\n      synchronized (this) {\n        if (nmCollectorService \u003d\u003d null) {\n          Configuration conf \u003d getConfig();\n          InetSocketAddress nmCollectorServiceAddress \u003d conf.getSocketAddr(\n              YarnConfiguration.NM_BIND_HOST,\n              YarnConfiguration.NM_COLLECTOR_SERVICE_ADDRESS,\n              YarnConfiguration.DEFAULT_NM_COLLECTOR_SERVICE_ADDRESS,\n              YarnConfiguration.DEFAULT_NM_COLLECTOR_SERVICE_PORT);\n          LOG.info(\"nmCollectorServiceAddress: \" + nmCollectorServiceAddress);\n          final YarnRPC rpc \u003d YarnRPC.create(conf);\n\n          // TODO Security settings.\n          nmCollectorService \u003d (CollectorNodemanagerProtocol) rpc.getProxy(\n              CollectorNodemanagerProtocol.class,\n              nmCollectorServiceAddress, conf);\n        }\n      }\n    }\n    return nmCollectorService;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/NodeTimelineCollectorManager.java",
      "extendedDetails": {}
    },
    "11e8905d8daf129afb6fe2e5a0eca11bcb1719c8": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-3390. Reuse TimelineCollectorManager for RM (Zhijie Shen via sjlee)\n\n(cherry picked from commit 58221188811e0f61d842dac89e1f4ad4fd8aa182)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "11e8905d8daf129afb6fe2e5a0eca11bcb1719c8",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "47f35a30bb4d99349593e9d6e1c9e76e71341c40",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected CollectorNodemanagerProtocol getNMCollectorService() {\n    Configuration conf \u003d getConfig();\n    final YarnRPC rpc \u003d YarnRPC.create(conf);\n\n    // TODO Security settings.\n    return (CollectorNodemanagerProtocol) rpc.getProxy(\n        CollectorNodemanagerProtocol.class,\n        nmCollectorServiceAddress, conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/NodeTimelineCollectorManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/NodeTimelineCollectorManager.java",
        "oldMethodName": "getNMCollectorService",
        "newMethodName": "getNMCollectorService"
      }
    },
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,9 @@\n+  protected CollectorNodemanagerProtocol getNMCollectorService() {\n+    Configuration conf \u003d getConfig();\n+    final YarnRPC rpc \u003d YarnRPC.create(conf);\n+\n+    // TODO Security settings.\n+    return (CollectorNodemanagerProtocol) rpc.getProxy(\n+        CollectorNodemanagerProtocol.class,\n+        nmCollectorServiceAddress, conf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected CollectorNodemanagerProtocol getNMCollectorService() {\n    Configuration conf \u003d getConfig();\n    final YarnRPC rpc \u003d YarnRPC.create(conf);\n\n    // TODO Security settings.\n    return (CollectorNodemanagerProtocol) rpc.getProxy(\n        CollectorNodemanagerProtocol.class,\n        nmCollectorServiceAddress, conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java"
    }
  }
}