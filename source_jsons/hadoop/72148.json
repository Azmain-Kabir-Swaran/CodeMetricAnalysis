{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Signer.java",
  "functionName": "checkSignatures",
  "functionId": "checkSignatures___rawValue-String__originalSignature-String",
  "sourceFilePath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/Signer.java",
  "functionStartLine": 103,
  "functionEndLine": 122,
  "numCommitsSeen": 5,
  "timeTaken": 1044,
  "changeHistory": [
    "324e5a7cf2bdb6f93e7c6fd9023817528f243dcf",
    "2d7dcff6f42020cb91c58c5dd460d030188b8a18"
  ],
  "changeHistoryShort": {
    "324e5a7cf2bdb6f93e7c6fd9023817528f243dcf": "Ybodychange",
    "2d7dcff6f42020cb91c58c5dd460d030188b8a18": "Yintroduced"
  },
  "changeHistoryDetails": {
    "324e5a7cf2bdb6f93e7c6fd9023817528f243dcf": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15235. Authentication Tokens should use HMAC instead of MAC (rkanter)\n",
      "commitDate": "20/02/18 5:24 PM",
      "commitName": "324e5a7cf2bdb6f93e7c6fd9023817528f243dcf",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "09/12/14 1:08 PM",
      "commitNameOld": "6df457a3d7661a890e84fc89567f29d0fe23c970",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 1169.18,
      "commitsBetweenForRepo": 8293,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   protected void checkSignatures(String rawValue, String originalSignature)\n       throws SignerException {\n+    byte[] orginalSignatureBytes \u003d StringUtils.getBytesUtf8(originalSignature);\n     boolean isValid \u003d false;\n     byte[][] secrets \u003d secretProvider.getAllSecrets();\n     for (int i \u003d 0; i \u003c secrets.length; i++) {\n       byte[] secret \u003d secrets[i];\n       if (secret !\u003d null) {\n         String currentSignature \u003d computeSignature(secret, rawValue);\n-        if (originalSignature.equals(currentSignature)) {\n+        if (MessageDigest.isEqual(orginalSignatureBytes,\n+            StringUtils.getBytesUtf8(currentSignature))) {\n           isValid \u003d true;\n           break;\n         }\n       }\n     }\n     if (!isValid) {\n       throw new SignerException(\"Invalid signature\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void checkSignatures(String rawValue, String originalSignature)\n      throws SignerException {\n    byte[] orginalSignatureBytes \u003d StringUtils.getBytesUtf8(originalSignature);\n    boolean isValid \u003d false;\n    byte[][] secrets \u003d secretProvider.getAllSecrets();\n    for (int i \u003d 0; i \u003c secrets.length; i++) {\n      byte[] secret \u003d secrets[i];\n      if (secret !\u003d null) {\n        String currentSignature \u003d computeSignature(secret, rawValue);\n        if (MessageDigest.isEqual(orginalSignatureBytes,\n            StringUtils.getBytesUtf8(currentSignature))) {\n          isValid \u003d true;\n          break;\n        }\n      }\n    }\n    if (!isValid) {\n      throw new SignerException(\"Invalid signature\");\n    }\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/Signer.java",
      "extendedDetails": {}
    },
    "2d7dcff6f42020cb91c58c5dd460d030188b8a18": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10791. AuthenticationFilter should support externalizing the secret for signing and provide rotation support. (rkanter via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616005 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/08/14 2:21 PM",
      "commitName": "2d7dcff6f42020cb91c58c5dd460d030188b8a18",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,18 @@\n+  protected void checkSignatures(String rawValue, String originalSignature)\n+      throws SignerException {\n+    boolean isValid \u003d false;\n+    byte[][] secrets \u003d secretProvider.getAllSecrets();\n+    for (int i \u003d 0; i \u003c secrets.length; i++) {\n+      byte[] secret \u003d secrets[i];\n+      if (secret !\u003d null) {\n+        String currentSignature \u003d computeSignature(secret, rawValue);\n+        if (originalSignature.equals(currentSignature)) {\n+          isValid \u003d true;\n+          break;\n+        }\n+      }\n+    }\n+    if (!isValid) {\n+      throw new SignerException(\"Invalid signature\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void checkSignatures(String rawValue, String originalSignature)\n      throws SignerException {\n    boolean isValid \u003d false;\n    byte[][] secrets \u003d secretProvider.getAllSecrets();\n    for (int i \u003d 0; i \u003c secrets.length; i++) {\n      byte[] secret \u003d secrets[i];\n      if (secret !\u003d null) {\n        String currentSignature \u003d computeSignature(secret, rawValue);\n        if (originalSignature.equals(currentSignature)) {\n          isValid \u003d true;\n          break;\n        }\n      }\n    }\n    if (!isValid) {\n      throw new SignerException(\"Invalid signature\");\n    }\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/Signer.java"
    }
  }
}