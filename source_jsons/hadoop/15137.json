{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OfflineImageViewerPB.java",
  "functionName": "main",
  "functionId": "main___args-String[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
  "functionStartLine": 148,
  "functionEndLine": 151,
  "numCommitsSeen": 23,
  "timeTaken": 2658,
  "changeHistory": [
    "f069d38c8d3c0bfa91b70a60e4e556ec708fc411",
    "675bca2968700d3627449700b827c3771827cef8",
    "146bf6c01ed56d0ab4d3ad06f6841622ff800b87",
    "4f8a487fcd3c5d324b0bb03157f404fb127e21e8",
    "a2edb11b68ae01a44092cb14ac2717a6aad93305"
  ],
  "changeHistoryShort": {
    "f069d38c8d3c0bfa91b70a60e4e556ec708fc411": "Ybodychange",
    "675bca2968700d3627449700b827c3771827cef8": "Yexceptionschange",
    "146bf6c01ed56d0ab4d3ad06f6841622ff800b87": "Ybodychange",
    "4f8a487fcd3c5d324b0bb03157f404fb127e21e8": "Ybodychange",
    "a2edb11b68ae01a44092cb14ac2717a6aad93305": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f069d38c8d3c0bfa91b70a60e4e556ec708fc411": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13983. TestOfflineImageViewer crashes in windows. Contributed by Vinayakumar B.\n",
      "commitDate": "19/10/18 5:16 PM",
      "commitName": "f069d38c8d3c0bfa91b70a60e4e556ec708fc411",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "06/09/18 2:48 PM",
      "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 43.1,
      "commitsBetweenForRepo": 492,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n   public static void main(String[] args) throws Exception {\n     int status \u003d run(args);\n-    System.exit(status);\n+    ExitUtil.terminate(status);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String[] args) throws Exception {\n    int status \u003d run(args);\n    ExitUtil.terminate(status);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
      "extendedDetails": {}
    },
    "675bca2968700d3627449700b827c3771827cef8": {
      "type": "Yexceptionschange",
      "commitMessage": "HDFS-7280. Use netty 4 in WebImageViewer. Contributed by Haohui Mai.\n",
      "commitDate": "28/10/14 4:53 PM",
      "commitName": "675bca2968700d3627449700b827c3771827cef8",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "08/09/14 1:15 PM",
      "commitNameOld": "d989ac04449dc33da5e2c32a7f24d59cc92de536",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 50.15,
      "commitsBetweenForRepo": 511,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n-  public static void main(String[] args) throws IOException {\n+  public static void main(String[] args) throws Exception {\n     int status \u003d run(args);\n     System.exit(status);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String[] args) throws Exception {\n    int status \u003d run(args);\n    System.exit(status);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
      "extendedDetails": {
        "oldValue": "[IOException]",
        "newValue": "[Exception]"
      }
    },
    "146bf6c01ed56d0ab4d3ad06f6841622ff800b87": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5866. \u0027-maxSize\u0027 and \u0027-step\u0027 option fail in OfflineImageViewer. Contributed by Akira Ajisaka.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1573694 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/03/14 11:40 AM",
      "commitName": "146bf6c01ed56d0ab4d3ad06f6841622ff800b87",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "20/02/14 10:39 PM",
      "commitNameOld": "4f8a487fcd3c5d324b0bb03157f404fb127e21e8",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 10.54,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,4 @@\n   public static void main(String[] args) throws IOException {\n-    Options options \u003d buildOptions();\n-    if (args.length \u003d\u003d 0) {\n-      printUsage();\n-      return;\n-    }\n-\n-    CommandLineParser parser \u003d new PosixParser();\n-    CommandLine cmd;\n-\n-    try {\n-      cmd \u003d parser.parse(options, args);\n-    } catch (ParseException e) {\n-      System.out.println(\"Error parsing command-line options: \");\n-      printUsage();\n-      return;\n-    }\n-\n-    if (cmd.hasOption(\"h\")) { // print help and exit\n-      printUsage();\n-      return;\n-    }\n-\n-    String inputFile \u003d cmd.getOptionValue(\"i\");\n-    String processor \u003d cmd.getOptionValue(\"p\", \"Ls\");\n-    String outputFile \u003d cmd.getOptionValue(\"o\");\n-\n-    PrintWriter out \u003d (outputFile \u003d\u003d null || outputFile.equals(\"-\")) ? new PrintWriter(\n-        System.out) : new PrintWriter(new File(outputFile));\n-\n-    Configuration conf \u003d new Configuration();\n-    try {\n-      if (processor.equals(\"FileDistribution\")) {\n-        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n-        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n-        new FileDistributionCalculator(conf, maxSize, step, out)\n-            .visit(new RandomAccessFile(inputFile, \"r\"));\n-      } else if (processor.equals(\"XML\")) {\n-        new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n-            \"r\"));\n-      } else {\n-        new LsrPBImage(conf, out).visit(new RandomAccessFile(inputFile, \"r\"));\n-      }\n-    } catch (EOFException e) {\n-      System.err.println(\"Input file ended unexpectedly. Exiting\");\n-    } catch (IOException e) {\n-      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n-    } finally {\n-      IOUtils.cleanup(null, out);\n-    }\n-\n+    int status \u003d run(args);\n+    System.exit(status);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String[] args) throws IOException {\n    int status \u003d run(args);\n    System.exit(status);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
      "extendedDetails": {}
    },
    "4f8a487fcd3c5d324b0bb03157f404fb127e21e8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5981. loadGenerator exit code is not reliable. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570468 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/02/14 10:39 PM",
      "commitName": "4f8a487fcd3c5d324b0bb03157f404fb127e21e8",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "09/02/14 11:18 AM",
      "commitNameOld": "a2edb11b68ae01a44092cb14ac2717a6aad93305",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 11.47,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,52 @@\n   public static void main(String[] args) throws IOException {\n     Options options \u003d buildOptions();\n     if (args.length \u003d\u003d 0) {\n       printUsage();\n       return;\n     }\n \n     CommandLineParser parser \u003d new PosixParser();\n     CommandLine cmd;\n \n     try {\n       cmd \u003d parser.parse(options, args);\n     } catch (ParseException e) {\n       System.out.println(\"Error parsing command-line options: \");\n       printUsage();\n       return;\n     }\n \n     if (cmd.hasOption(\"h\")) { // print help and exit\n       printUsage();\n       return;\n     }\n \n     String inputFile \u003d cmd.getOptionValue(\"i\");\n     String processor \u003d cmd.getOptionValue(\"p\", \"Ls\");\n     String outputFile \u003d cmd.getOptionValue(\"o\");\n \n     PrintWriter out \u003d (outputFile \u003d\u003d null || outputFile.equals(\"-\")) ? new PrintWriter(\n         System.out) : new PrintWriter(new File(outputFile));\n \n     Configuration conf \u003d new Configuration();\n     try {\n       if (processor.equals(\"FileDistribution\")) {\n         long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n         int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n         new FileDistributionCalculator(conf, maxSize, step, out)\n             .visit(new RandomAccessFile(inputFile, \"r\"));\n       } else if (processor.equals(\"XML\")) {\n         new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n             \"r\"));\n       } else {\n         new LsrPBImage(conf, out).visit(new RandomAccessFile(inputFile, \"r\"));\n       }\n     } catch (EOFException e) {\n       System.err.println(\"Input file ended unexpectedly. Exiting\");\n     } catch (IOException e) {\n       System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n     } finally {\n-      out.close();\n+      IOUtils.cleanup(null, out);\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String[] args) throws IOException {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return;\n    }\n\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return;\n    }\n\n    if (cmd.hasOption(\"h\")) { // print help and exit\n      printUsage();\n      return;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Ls\");\n    String outputFile \u003d cmd.getOptionValue(\"o\");\n\n    PrintWriter out \u003d (outputFile \u003d\u003d null || outputFile.equals(\"-\")) ? new PrintWriter(\n        System.out) : new PrintWriter(new File(outputFile));\n\n    Configuration conf \u003d new Configuration();\n    try {\n      if (processor.equals(\"FileDistribution\")) {\n        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n        new FileDistributionCalculator(conf, maxSize, step, out)\n            .visit(new RandomAccessFile(inputFile, \"r\"));\n      } else if (processor.equals(\"XML\")) {\n        new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n            \"r\"));\n      } else {\n        new LsrPBImage(conf, out).visit(new RandomAccessFile(inputFile, \"r\"));\n      }\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n    } finally {\n      IOUtils.cleanup(null, out);\n    }\n\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
      "extendedDetails": {}
    },
    "a2edb11b68ae01a44092cb14ac2717a6aad93305": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5698. Use protobuf to serialize / deserialize FSImage. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566359 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/02/14 11:18 AM",
      "commitName": "a2edb11b68ae01a44092cb14ac2717a6aad93305",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,52 @@\n+  public static void main(String[] args) throws IOException {\n+    Options options \u003d buildOptions();\n+    if (args.length \u003d\u003d 0) {\n+      printUsage();\n+      return;\n+    }\n+\n+    CommandLineParser parser \u003d new PosixParser();\n+    CommandLine cmd;\n+\n+    try {\n+      cmd \u003d parser.parse(options, args);\n+    } catch (ParseException e) {\n+      System.out.println(\"Error parsing command-line options: \");\n+      printUsage();\n+      return;\n+    }\n+\n+    if (cmd.hasOption(\"h\")) { // print help and exit\n+      printUsage();\n+      return;\n+    }\n+\n+    String inputFile \u003d cmd.getOptionValue(\"i\");\n+    String processor \u003d cmd.getOptionValue(\"p\", \"Ls\");\n+    String outputFile \u003d cmd.getOptionValue(\"o\");\n+\n+    PrintWriter out \u003d (outputFile \u003d\u003d null || outputFile.equals(\"-\")) ? new PrintWriter(\n+        System.out) : new PrintWriter(new File(outputFile));\n+\n+    Configuration conf \u003d new Configuration();\n+    try {\n+      if (processor.equals(\"FileDistribution\")) {\n+        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n+        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n+        new FileDistributionCalculator(conf, maxSize, step, out)\n+            .visit(new RandomAccessFile(inputFile, \"r\"));\n+      } else if (processor.equals(\"XML\")) {\n+        new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n+            \"r\"));\n+      } else {\n+        new LsrPBImage(conf, out).visit(new RandomAccessFile(inputFile, \"r\"));\n+      }\n+    } catch (EOFException e) {\n+      System.err.println(\"Input file ended unexpectedly. Exiting\");\n+    } catch (IOException e) {\n+      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n+    } finally {\n+      out.close();\n+    }\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String[] args) throws IOException {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return;\n    }\n\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return;\n    }\n\n    if (cmd.hasOption(\"h\")) { // print help and exit\n      printUsage();\n      return;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Ls\");\n    String outputFile \u003d cmd.getOptionValue(\"o\");\n\n    PrintWriter out \u003d (outputFile \u003d\u003d null || outputFile.equals(\"-\")) ? new PrintWriter(\n        System.out) : new PrintWriter(new File(outputFile));\n\n    Configuration conf \u003d new Configuration();\n    try {\n      if (processor.equals(\"FileDistribution\")) {\n        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n        new FileDistributionCalculator(conf, maxSize, step, out)\n            .visit(new RandomAccessFile(inputFile, \"r\"));\n      } else if (processor.equals(\"XML\")) {\n        new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n            \"r\"));\n      } else {\n        new LsrPBImage(conf, out).visit(new RandomAccessFile(inputFile, \"r\"));\n      }\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n    } finally {\n      out.close();\n    }\n\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java"
    }
  }
}