{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DNS.java",
  "functionName": "reverseDns",
  "functionId": "reverseDns___hostIp-InetAddress__ns-String(annotations-@Nullable)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/DNS.java",
  "functionStartLine": 75,
  "functionEndLine": 102,
  "numCommitsSeen": 15,
  "timeTaken": 1190,
  "changeHistory": [
    "df31c446bfa628bee9fab88addcfec5a13edda30",
    "21a1c8acbafc8364a204f23369a3adbefdff1f3e",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "df31c446bfa628bee9fab88addcfec5a13edda30": "Yparametermetachange",
    "21a1c8acbafc8364a204f23369a3adbefdff1f3e": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df31c446bfa628bee9fab88addcfec5a13edda30": {
      "type": "Yparametermetachange",
      "commitMessage": "HADOOP-12437. Allow SecurityUtil to lookup alternate hostnames. (Contributed by Arpit Agarwal)\n",
      "commitDate": "24/09/15 11:41 AM",
      "commitName": "df31c446bfa628bee9fab88addcfec5a13edda30",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "07/03/13 3:50 PM",
      "commitNameOld": "21a1c8acbafc8364a204f23369a3adbefdff1f3e",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 930.79,
      "commitsBetweenForRepo": 6823,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n-  public static String reverseDns(InetAddress hostIp, String ns)\n+  public static String reverseDns(InetAddress hostIp, @Nullable String ns)\n     throws NamingException {\n     //\n     // Builds the reverse IP lookup form\n     // This is formed by reversing the IP numbers and appending in-addr.arpa\n     //\n     String[] parts \u003d hostIp.getHostAddress().split(\"\\\\.\");\n     String reverseIP \u003d parts[3] + \".\" + parts[2] + \".\" + parts[1] + \".\"\n       + parts[0] + \".in-addr.arpa\";\n \n     DirContext ictx \u003d new InitialDirContext();\n     Attributes attribute;\n     try {\n       attribute \u003d ictx.getAttributes(\"dns://\"               // Use \"dns:///\" if the default\n                          + ((ns \u003d\u003d null) ? \"\" : ns) +\n                          // nameserver is to be used\n                          \"/\" + reverseIP, new String[] { \"PTR\" });\n     } finally {\n       ictx.close();\n     }\n \n     String hostname \u003d attribute.get(\"PTR\").get().toString();\n     int hostnameLength \u003d hostname.length();\n     if (hostname.charAt(hostnameLength - 1) \u003d\u003d \u0027.\u0027) {\n       hostname \u003d hostname.substring(0, hostnameLength - 1);\n     }\n     return hostname;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String reverseDns(InetAddress hostIp, @Nullable String ns)\n    throws NamingException {\n    //\n    // Builds the reverse IP lookup form\n    // This is formed by reversing the IP numbers and appending in-addr.arpa\n    //\n    String[] parts \u003d hostIp.getHostAddress().split(\"\\\\.\");\n    String reverseIP \u003d parts[3] + \".\" + parts[2] + \".\" + parts[1] + \".\"\n      + parts[0] + \".in-addr.arpa\";\n\n    DirContext ictx \u003d new InitialDirContext();\n    Attributes attribute;\n    try {\n      attribute \u003d ictx.getAttributes(\"dns://\"               // Use \"dns:///\" if the default\n                         + ((ns \u003d\u003d null) ? \"\" : ns) +\n                         // nameserver is to be used\n                         \"/\" + reverseIP, new String[] { \"PTR\" });\n    } finally {\n      ictx.close();\n    }\n\n    String hostname \u003d attribute.get(\"PTR\").get().toString();\n    int hostnameLength \u003d hostname.length();\n    if (hostname.charAt(hostnameLength - 1) \u003d\u003d \u0027.\u0027) {\n      hostname \u003d hostname.substring(0, hostnameLength - 1);\n    }\n    return hostname;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/DNS.java",
      "extendedDetails": {
        "oldValue": "[hostIp-InetAddress, ns-String]",
        "newValue": "[hostIp-InetAddress, ns-String(annotations-@Nullable)]"
      }
    },
    "21a1c8acbafc8364a204f23369a3adbefdff1f3e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9369. DNS#reverseDns() can return hostname with . appended at the end. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1454172 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/03/13 3:50 PM",
      "commitName": "21a1c8acbafc8364a204f23369a3adbefdff1f3e",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "24/08/12 6:03 PM",
      "commitNameOld": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 194.95,
      "commitsBetweenForRepo": 957,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,28 @@\n   public static String reverseDns(InetAddress hostIp, String ns)\n     throws NamingException {\n     //\n     // Builds the reverse IP lookup form\n     // This is formed by reversing the IP numbers and appending in-addr.arpa\n     //\n     String[] parts \u003d hostIp.getHostAddress().split(\"\\\\.\");\n     String reverseIP \u003d parts[3] + \".\" + parts[2] + \".\" + parts[1] + \".\"\n       + parts[0] + \".in-addr.arpa\";\n \n     DirContext ictx \u003d new InitialDirContext();\n     Attributes attribute;\n     try {\n       attribute \u003d ictx.getAttributes(\"dns://\"               // Use \"dns:///\" if the default\n                          + ((ns \u003d\u003d null) ? \"\" : ns) +\n                          // nameserver is to be used\n                          \"/\" + reverseIP, new String[] { \"PTR\" });\n     } finally {\n       ictx.close();\n     }\n \n-    return attribute.get(\"PTR\").get().toString();\n+    String hostname \u003d attribute.get(\"PTR\").get().toString();\n+    int hostnameLength \u003d hostname.length();\n+    if (hostname.charAt(hostnameLength - 1) \u003d\u003d \u0027.\u0027) {\n+      hostname \u003d hostname.substring(0, hostnameLength - 1);\n+    }\n+    return hostname;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String reverseDns(InetAddress hostIp, String ns)\n    throws NamingException {\n    //\n    // Builds the reverse IP lookup form\n    // This is formed by reversing the IP numbers and appending in-addr.arpa\n    //\n    String[] parts \u003d hostIp.getHostAddress().split(\"\\\\.\");\n    String reverseIP \u003d parts[3] + \".\" + parts[2] + \".\" + parts[1] + \".\"\n      + parts[0] + \".in-addr.arpa\";\n\n    DirContext ictx \u003d new InitialDirContext();\n    Attributes attribute;\n    try {\n      attribute \u003d ictx.getAttributes(\"dns://\"               // Use \"dns:///\" if the default\n                         + ((ns \u003d\u003d null) ? \"\" : ns) +\n                         // nameserver is to be used\n                         \"/\" + reverseIP, new String[] { \"PTR\" });\n    } finally {\n      ictx.close();\n    }\n\n    String hostname \u003d attribute.get(\"PTR\").get().toString();\n    int hostnameLength \u003d hostname.length();\n    if (hostname.charAt(hostnameLength - 1) \u003d\u003d \u0027.\u0027) {\n      hostname \u003d hostname.substring(0, hostnameLength - 1);\n    }\n    return hostname;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/DNS.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static String reverseDns(InetAddress hostIp, String ns)\n    throws NamingException {\n    //\n    // Builds the reverse IP lookup form\n    // This is formed by reversing the IP numbers and appending in-addr.arpa\n    //\n    String[] parts \u003d hostIp.getHostAddress().split(\"\\\\.\");\n    String reverseIP \u003d parts[3] + \".\" + parts[2] + \".\" + parts[1] + \".\"\n      + parts[0] + \".in-addr.arpa\";\n\n    DirContext ictx \u003d new InitialDirContext();\n    Attributes attribute;\n    try {\n      attribute \u003d ictx.getAttributes(\"dns://\"               // Use \"dns:///\" if the default\n                         + ((ns \u003d\u003d null) ? \"\" : ns) +\n                         // nameserver is to be used\n                         \"/\" + reverseIP, new String[] { \"PTR\" });\n    } finally {\n      ictx.close();\n    }\n\n    return attribute.get(\"PTR\").get().toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/DNS.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/net/DNS.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/DNS.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static String reverseDns(InetAddress hostIp, String ns)\n    throws NamingException {\n    //\n    // Builds the reverse IP lookup form\n    // This is formed by reversing the IP numbers and appending in-addr.arpa\n    //\n    String[] parts \u003d hostIp.getHostAddress().split(\"\\\\.\");\n    String reverseIP \u003d parts[3] + \".\" + parts[2] + \".\" + parts[1] + \".\"\n      + parts[0] + \".in-addr.arpa\";\n\n    DirContext ictx \u003d new InitialDirContext();\n    Attributes attribute;\n    try {\n      attribute \u003d ictx.getAttributes(\"dns://\"               // Use \"dns:///\" if the default\n                         + ((ns \u003d\u003d null) ? \"\" : ns) +\n                         // nameserver is to be used\n                         \"/\" + reverseIP, new String[] { \"PTR\" });\n    } finally {\n      ictx.close();\n    }\n\n    return attribute.get(\"PTR\").get().toString();\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/net/DNS.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/net/DNS.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/net/DNS.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static String reverseDns(InetAddress hostIp, String ns)\n    throws NamingException {\n    //\n    // Builds the reverse IP lookup form\n    // This is formed by reversing the IP numbers and appending in-addr.arpa\n    //\n    String[] parts \u003d hostIp.getHostAddress().split(\"\\\\.\");\n    String reverseIP \u003d parts[3] + \".\" + parts[2] + \".\" + parts[1] + \".\"\n      + parts[0] + \".in-addr.arpa\";\n\n    DirContext ictx \u003d new InitialDirContext();\n    Attributes attribute;\n    try {\n      attribute \u003d ictx.getAttributes(\"dns://\"               // Use \"dns:///\" if the default\n                         + ((ns \u003d\u003d null) ? \"\" : ns) +\n                         // nameserver is to be used\n                         \"/\" + reverseIP, new String[] { \"PTR\" });\n    } finally {\n      ictx.close();\n    }\n\n    return attribute.get(\"PTR\").get().toString();\n  }",
      "path": "common/src/java/org/apache/hadoop/net/DNS.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/net/DNS.java",
        "newPath": "common/src/java/org/apache/hadoop/net/DNS.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,23 @@\n+  public static String reverseDns(InetAddress hostIp, String ns)\n+    throws NamingException {\n+    //\n+    // Builds the reverse IP lookup form\n+    // This is formed by reversing the IP numbers and appending in-addr.arpa\n+    //\n+    String[] parts \u003d hostIp.getHostAddress().split(\"\\\\.\");\n+    String reverseIP \u003d parts[3] + \".\" + parts[2] + \".\" + parts[1] + \".\"\n+      + parts[0] + \".in-addr.arpa\";\n+\n+    DirContext ictx \u003d new InitialDirContext();\n+    Attributes attribute;\n+    try {\n+      attribute \u003d ictx.getAttributes(\"dns://\"               // Use \"dns:///\" if the default\n+                         + ((ns \u003d\u003d null) ? \"\" : ns) +\n+                         // nameserver is to be used\n+                         \"/\" + reverseIP, new String[] { \"PTR\" });\n+    } finally {\n+      ictx.close();\n+    }\n+\n+    return attribute.get(\"PTR\").get().toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String reverseDns(InetAddress hostIp, String ns)\n    throws NamingException {\n    //\n    // Builds the reverse IP lookup form\n    // This is formed by reversing the IP numbers and appending in-addr.arpa\n    //\n    String[] parts \u003d hostIp.getHostAddress().split(\"\\\\.\");\n    String reverseIP \u003d parts[3] + \".\" + parts[2] + \".\" + parts[1] + \".\"\n      + parts[0] + \".in-addr.arpa\";\n\n    DirContext ictx \u003d new InitialDirContext();\n    Attributes attribute;\n    try {\n      attribute \u003d ictx.getAttributes(\"dns://\"               // Use \"dns:///\" if the default\n                         + ((ns \u003d\u003d null) ? \"\" : ns) +\n                         // nameserver is to be used\n                         \"/\" + reverseIP, new String[] { \"PTR\" });\n    } finally {\n      ictx.close();\n    }\n\n    return attribute.get(\"PTR\").get().toString();\n  }",
      "path": "src/java/org/apache/hadoop/net/DNS.java"
    }
  }
}