{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSUtil.java",
  "functionName": "getAllNnPrincipals",
  "functionId": "getAllNnPrincipals___conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
  "functionStartLine": 403,
  "functionEndLine": 426,
  "numCommitsSeen": 154,
  "timeTaken": 3254,
  "changeHistory": [
    "9eee97508f350ed4629abb04e7781514ffa04070",
    "6f8003dc7bc9e8be7b0512c514d370c303faf003",
    "a5b37c6ed14e92f5a7f7dd76a9a82b3f859fb6dd"
  ],
  "changeHistoryShort": {
    "9eee97508f350ed4629abb04e7781514ffa04070": "Ybodychange",
    "6f8003dc7bc9e8be7b0512c514d370c303faf003": "Ybodychange",
    "a5b37c6ed14e92f5a7f7dd76a9a82b3f859fb6dd": "Ybodychange"
  },
  "changeHistoryDetails": {
    "9eee97508f350ed4629abb04e7781514ffa04070": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9022. Move NameNode.getAddress() and NameNode.getUri() to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "17/09/15 2:18 PM",
      "commitName": "9eee97508f350ed4629abb04e7781514ffa04070",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "28/08/15 2:38 PM",
      "commitNameOld": "e2c9b288b223b9fd82dc12018936e13128413492",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 19.99,
      "commitsBetweenForRepo": 119,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public static Set\u003cString\u003e getAllNnPrincipals(Configuration conf) throws IOException {\n     Set\u003cString\u003e principals \u003d new HashSet\u003cString\u003e();\n     for (String nsId : DFSUtilClient.getNameServiceIds(conf)) {\n       if (HAUtil.isHAEnabled(conf, nsId)) {\n         for (String nnId : DFSUtilClient.getNameNodeIds(conf, nsId)) {\n           Configuration confForNn \u003d new Configuration(conf);\n           NameNode.initializeGenericKeys(confForNn, nsId, nnId);\n           String principal \u003d SecurityUtil.getServerPrincipal(confForNn\n               .get(DFSConfigKeys.DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY),\n-              NameNode.getAddress(confForNn).getHostName());\n+              DFSUtilClient.getNNAddress(confForNn).getHostName());\n           principals.add(principal);\n         }\n       } else {\n         Configuration confForNn \u003d new Configuration(conf);\n         NameNode.initializeGenericKeys(confForNn, nsId, null);\n         String principal \u003d SecurityUtil.getServerPrincipal(confForNn\n             .get(DFSConfigKeys.DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY),\n-            NameNode.getAddress(confForNn).getHostName());\n+            DFSUtilClient.getNNAddress(confForNn).getHostName());\n         principals.add(principal);\n       }\n     }\n \n     return principals;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Set\u003cString\u003e getAllNnPrincipals(Configuration conf) throws IOException {\n    Set\u003cString\u003e principals \u003d new HashSet\u003cString\u003e();\n    for (String nsId : DFSUtilClient.getNameServiceIds(conf)) {\n      if (HAUtil.isHAEnabled(conf, nsId)) {\n        for (String nnId : DFSUtilClient.getNameNodeIds(conf, nsId)) {\n          Configuration confForNn \u003d new Configuration(conf);\n          NameNode.initializeGenericKeys(confForNn, nsId, nnId);\n          String principal \u003d SecurityUtil.getServerPrincipal(confForNn\n              .get(DFSConfigKeys.DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY),\n              DFSUtilClient.getNNAddress(confForNn).getHostName());\n          principals.add(principal);\n        }\n      } else {\n        Configuration confForNn \u003d new Configuration(conf);\n        NameNode.initializeGenericKeys(confForNn, nsId, null);\n        String principal \u003d SecurityUtil.getServerPrincipal(confForNn\n            .get(DFSConfigKeys.DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY),\n            DFSUtilClient.getNNAddress(confForNn).getHostName());\n        principals.add(principal);\n      }\n    }\n\n    return principals;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    },
    "6f8003dc7bc9e8be7b0512c514d370c303faf003": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8185. Separate client related routines in HAUtil into a new class. Contributed by Haohui Mai.\n",
      "commitDate": "21/04/15 9:59 PM",
      "commitName": "6f8003dc7bc9e8be7b0512c514d370c303faf003",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "20/04/15 12:36 AM",
      "commitNameOld": "5c97db07fb306842f49d73a67a90cecec19a7833",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 1.89,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public static Set\u003cString\u003e getAllNnPrincipals(Configuration conf) throws IOException {\n     Set\u003cString\u003e principals \u003d new HashSet\u003cString\u003e();\n-    for (String nsId : DFSUtil.getNameServiceIds(conf)) {\n+    for (String nsId : DFSUtilClient.getNameServiceIds(conf)) {\n       if (HAUtil.isHAEnabled(conf, nsId)) {\n-        for (String nnId : DFSUtil.getNameNodeIds(conf, nsId)) {\n+        for (String nnId : DFSUtilClient.getNameNodeIds(conf, nsId)) {\n           Configuration confForNn \u003d new Configuration(conf);\n           NameNode.initializeGenericKeys(confForNn, nsId, nnId);\n           String principal \u003d SecurityUtil.getServerPrincipal(confForNn\n               .get(DFSConfigKeys.DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY),\n               NameNode.getAddress(confForNn).getHostName());\n           principals.add(principal);\n         }\n       } else {\n         Configuration confForNn \u003d new Configuration(conf);\n         NameNode.initializeGenericKeys(confForNn, nsId, null);\n         String principal \u003d SecurityUtil.getServerPrincipal(confForNn\n             .get(DFSConfigKeys.DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY),\n             NameNode.getAddress(confForNn).getHostName());\n         principals.add(principal);\n       }\n     }\n \n     return principals;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Set\u003cString\u003e getAllNnPrincipals(Configuration conf) throws IOException {\n    Set\u003cString\u003e principals \u003d new HashSet\u003cString\u003e();\n    for (String nsId : DFSUtilClient.getNameServiceIds(conf)) {\n      if (HAUtil.isHAEnabled(conf, nsId)) {\n        for (String nnId : DFSUtilClient.getNameNodeIds(conf, nsId)) {\n          Configuration confForNn \u003d new Configuration(conf);\n          NameNode.initializeGenericKeys(confForNn, nsId, nnId);\n          String principal \u003d SecurityUtil.getServerPrincipal(confForNn\n              .get(DFSConfigKeys.DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY),\n              NameNode.getAddress(confForNn).getHostName());\n          principals.add(principal);\n        }\n      } else {\n        Configuration confForNn \u003d new Configuration(conf);\n        NameNode.initializeGenericKeys(confForNn, nsId, null);\n        String principal \u003d SecurityUtil.getServerPrincipal(confForNn\n            .get(DFSConfigKeys.DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY),\n            NameNode.getAddress(confForNn).getHostName());\n        principals.add(principal);\n      }\n    }\n\n    return principals;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    },
    "a5b37c6ed14e92f5a7f7dd76a9a82b3f859fb6dd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6181. Fix the wrong property names in NFS user guide. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1585563 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/04/14 11:55 AM",
      "commitName": "a5b37c6ed14e92f5a7f7dd76a9a82b3f859fb6dd",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "01/04/14 10:09 PM",
      "commitNameOld": "f93d99990a9a02ce693cd74466c2e5f127c1f560",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 5.57,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public static Set\u003cString\u003e getAllNnPrincipals(Configuration conf) throws IOException {\n     Set\u003cString\u003e principals \u003d new HashSet\u003cString\u003e();\n     for (String nsId : DFSUtil.getNameServiceIds(conf)) {\n       if (HAUtil.isHAEnabled(conf, nsId)) {\n         for (String nnId : DFSUtil.getNameNodeIds(conf, nsId)) {\n           Configuration confForNn \u003d new Configuration(conf);\n           NameNode.initializeGenericKeys(confForNn, nsId, nnId);\n           String principal \u003d SecurityUtil.getServerPrincipal(confForNn\n-              .get(DFSConfigKeys.DFS_NAMENODE_USER_NAME_KEY),\n+              .get(DFSConfigKeys.DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY),\n               NameNode.getAddress(confForNn).getHostName());\n           principals.add(principal);\n         }\n       } else {\n         Configuration confForNn \u003d new Configuration(conf);\n         NameNode.initializeGenericKeys(confForNn, nsId, null);\n         String principal \u003d SecurityUtil.getServerPrincipal(confForNn\n-            .get(DFSConfigKeys.DFS_NAMENODE_USER_NAME_KEY),\n+            .get(DFSConfigKeys.DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY),\n             NameNode.getAddress(confForNn).getHostName());\n         principals.add(principal);\n       }\n     }\n \n     return principals;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Set\u003cString\u003e getAllNnPrincipals(Configuration conf) throws IOException {\n    Set\u003cString\u003e principals \u003d new HashSet\u003cString\u003e();\n    for (String nsId : DFSUtil.getNameServiceIds(conf)) {\n      if (HAUtil.isHAEnabled(conf, nsId)) {\n        for (String nnId : DFSUtil.getNameNodeIds(conf, nsId)) {\n          Configuration confForNn \u003d new Configuration(conf);\n          NameNode.initializeGenericKeys(confForNn, nsId, nnId);\n          String principal \u003d SecurityUtil.getServerPrincipal(confForNn\n              .get(DFSConfigKeys.DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY),\n              NameNode.getAddress(confForNn).getHostName());\n          principals.add(principal);\n        }\n      } else {\n        Configuration confForNn \u003d new Configuration(conf);\n        NameNode.initializeGenericKeys(confForNn, nsId, null);\n        String principal \u003d SecurityUtil.getServerPrincipal(confForNn\n            .get(DFSConfigKeys.DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY),\n            NameNode.getAddress(confForNn).getHostName());\n        principals.add(principal);\n      }\n    }\n\n    return principals;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    }
  }
}