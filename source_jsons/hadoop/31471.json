{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FlowRunTableRW.java",
  "functionName": "createTable",
  "functionId": "createTable___admin-Admin__hbaseConf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunTableRW.java",
  "functionStartLine": 67,
  "functionEndLine": 101,
  "numCommitsSeen": 9,
  "timeTaken": 3301,
  "changeHistory": [
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "580d884913c200f6c6cae475d8c183a4b61ff710",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "a68e3839218523403f42acd7bdd7ce1da59a5e60"
  ],
  "changeHistoryShort": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Ymultichange(Ymovefromfile,Ybodychange)",
    "580d884913c200f6c6cae475d8c183a4b61ff710": "Ybodychange",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "a68e3839218523403f42acd7bdd7ce1da59a5e60": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
          "commitDate": "17/02/18 7:00 AM",
          "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 3:24 AM",
          "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,35 @@\n   public void createTable(Admin admin, Configuration hbaseConf)\n       throws IOException {\n \n     TableName table \u003d getTableName(hbaseConf);\n     if (admin.tableExists(table)) {\n       // do not disable / delete existing table\n       // similar to the approach taken by map-reduce jobs when\n       // output directory exists\n       throw new IOException(\"Table \" + table.getNameAsString()\n           + \" already exists.\");\n     }\n \n     HTableDescriptor flowRunTableDescp \u003d new HTableDescriptor(table);\n     HColumnDescriptor infoCF \u003d\n         new HColumnDescriptor(FlowRunColumnFamily.INFO.getBytes());\n     infoCF.setBloomFilterType(BloomType.ROWCOL);\n     flowRunTableDescp.addFamily(infoCF);\n     infoCF.setMinVersions(1);\n     infoCF.setMaxVersions(DEFAULT_METRICS_MAX_VERSIONS);\n \n     // TODO: figure the split policy\n     String coprocessorJarPathStr \u003d hbaseConf.get(\n         YarnConfiguration.FLOW_RUN_COPROCESSOR_JAR_HDFS_LOCATION,\n         YarnConfiguration.DEFAULT_HDFS_LOCATION_FLOW_RUN_COPROCESSOR_JAR);\n \n     Path coprocessorJarPath \u003d new Path(coprocessorJarPathStr);\n     LOG.info(\"CoprocessorJarPath\u003d\" + coprocessorJarPath.toString());\n     flowRunTableDescp.addCoprocessor(\n-        FlowRunCoprocessor.class.getCanonicalName(), coprocessorJarPath,\n+        \"org.apache.hadoop.yarn.server.timelineservice.storage.\" +\n+            \"flow.FlowRunCoprocessor\", coprocessorJarPath,\n         Coprocessor.PRIORITY_USER, null);\n     admin.createTable(flowRunTableDescp);\n     LOG.info(\"Status of table creation for \" + table.getNameAsString() + \"\u003d\"\n         + admin.tableExists(table));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void createTable(Admin admin, Configuration hbaseConf)\n      throws IOException {\n\n    TableName table \u003d getTableName(hbaseConf);\n    if (admin.tableExists(table)) {\n      // do not disable / delete existing table\n      // similar to the approach taken by map-reduce jobs when\n      // output directory exists\n      throw new IOException(\"Table \" + table.getNameAsString()\n          + \" already exists.\");\n    }\n\n    HTableDescriptor flowRunTableDescp \u003d new HTableDescriptor(table);\n    HColumnDescriptor infoCF \u003d\n        new HColumnDescriptor(FlowRunColumnFamily.INFO.getBytes());\n    infoCF.setBloomFilterType(BloomType.ROWCOL);\n    flowRunTableDescp.addFamily(infoCF);\n    infoCF.setMinVersions(1);\n    infoCF.setMaxVersions(DEFAULT_METRICS_MAX_VERSIONS);\n\n    // TODO: figure the split policy\n    String coprocessorJarPathStr \u003d hbaseConf.get(\n        YarnConfiguration.FLOW_RUN_COPROCESSOR_JAR_HDFS_LOCATION,\n        YarnConfiguration.DEFAULT_HDFS_LOCATION_FLOW_RUN_COPROCESSOR_JAR);\n\n    Path coprocessorJarPath \u003d new Path(coprocessorJarPathStr);\n    LOG.info(\"CoprocessorJarPath\u003d\" + coprocessorJarPath.toString());\n    flowRunTableDescp.addCoprocessor(\n        \"org.apache.hadoop.yarn.server.timelineservice.storage.\" +\n            \"flow.FlowRunCoprocessor\", coprocessorJarPath,\n        Coprocessor.PRIORITY_USER, null);\n    admin.createTable(flowRunTableDescp);\n    LOG.info(\"Status of table creation for \" + table.getNameAsString() + \"\u003d\"\n        + admin.tableExists(table));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunTableRW.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunTable.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunTableRW.java",
            "oldMethodName": "createTable",
            "newMethodName": "createTable"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
          "commitDate": "17/02/18 7:00 AM",
          "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 3:24 AM",
          "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,35 @@\n   public void createTable(Admin admin, Configuration hbaseConf)\n       throws IOException {\n \n     TableName table \u003d getTableName(hbaseConf);\n     if (admin.tableExists(table)) {\n       // do not disable / delete existing table\n       // similar to the approach taken by map-reduce jobs when\n       // output directory exists\n       throw new IOException(\"Table \" + table.getNameAsString()\n           + \" already exists.\");\n     }\n \n     HTableDescriptor flowRunTableDescp \u003d new HTableDescriptor(table);\n     HColumnDescriptor infoCF \u003d\n         new HColumnDescriptor(FlowRunColumnFamily.INFO.getBytes());\n     infoCF.setBloomFilterType(BloomType.ROWCOL);\n     flowRunTableDescp.addFamily(infoCF);\n     infoCF.setMinVersions(1);\n     infoCF.setMaxVersions(DEFAULT_METRICS_MAX_VERSIONS);\n \n     // TODO: figure the split policy\n     String coprocessorJarPathStr \u003d hbaseConf.get(\n         YarnConfiguration.FLOW_RUN_COPROCESSOR_JAR_HDFS_LOCATION,\n         YarnConfiguration.DEFAULT_HDFS_LOCATION_FLOW_RUN_COPROCESSOR_JAR);\n \n     Path coprocessorJarPath \u003d new Path(coprocessorJarPathStr);\n     LOG.info(\"CoprocessorJarPath\u003d\" + coprocessorJarPath.toString());\n     flowRunTableDescp.addCoprocessor(\n-        FlowRunCoprocessor.class.getCanonicalName(), coprocessorJarPath,\n+        \"org.apache.hadoop.yarn.server.timelineservice.storage.\" +\n+            \"flow.FlowRunCoprocessor\", coprocessorJarPath,\n         Coprocessor.PRIORITY_USER, null);\n     admin.createTable(flowRunTableDescp);\n     LOG.info(\"Status of table creation for \" + table.getNameAsString() + \"\u003d\"\n         + admin.tableExists(table));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void createTable(Admin admin, Configuration hbaseConf)\n      throws IOException {\n\n    TableName table \u003d getTableName(hbaseConf);\n    if (admin.tableExists(table)) {\n      // do not disable / delete existing table\n      // similar to the approach taken by map-reduce jobs when\n      // output directory exists\n      throw new IOException(\"Table \" + table.getNameAsString()\n          + \" already exists.\");\n    }\n\n    HTableDescriptor flowRunTableDescp \u003d new HTableDescriptor(table);\n    HColumnDescriptor infoCF \u003d\n        new HColumnDescriptor(FlowRunColumnFamily.INFO.getBytes());\n    infoCF.setBloomFilterType(BloomType.ROWCOL);\n    flowRunTableDescp.addFamily(infoCF);\n    infoCF.setMinVersions(1);\n    infoCF.setMaxVersions(DEFAULT_METRICS_MAX_VERSIONS);\n\n    // TODO: figure the split policy\n    String coprocessorJarPathStr \u003d hbaseConf.get(\n        YarnConfiguration.FLOW_RUN_COPROCESSOR_JAR_HDFS_LOCATION,\n        YarnConfiguration.DEFAULT_HDFS_LOCATION_FLOW_RUN_COPROCESSOR_JAR);\n\n    Path coprocessorJarPath \u003d new Path(coprocessorJarPathStr);\n    LOG.info(\"CoprocessorJarPath\u003d\" + coprocessorJarPath.toString());\n    flowRunTableDescp.addCoprocessor(\n        \"org.apache.hadoop.yarn.server.timelineservice.storage.\" +\n            \"flow.FlowRunCoprocessor\", coprocessorJarPath,\n        Coprocessor.PRIORITY_USER, null);\n    admin.createTable(flowRunTableDescp);\n    LOG.info(\"Status of table creation for \" + table.getNameAsString() + \"\u003d\"\n        + admin.tableExists(table));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunTableRW.java",
          "extendedDetails": {}
        }
      ]
    },
    "580d884913c200f6c6cae475d8c183a4b61ff710": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6094. Update the coprocessor to be a dynamically loaded one. Contributed by Vrushali C.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "580d884913c200f6c6cae475d8c183a4b61ff710",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "9bb5cc3d4929d55124fc3143d3c88122c6bee597",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,34 @@\n   public void createTable(Admin admin, Configuration hbaseConf)\n       throws IOException {\n \n     TableName table \u003d getTableName(hbaseConf);\n     if (admin.tableExists(table)) {\n       // do not disable / delete existing table\n       // similar to the approach taken by map-reduce jobs when\n       // output directory exists\n       throw new IOException(\"Table \" + table.getNameAsString()\n           + \" already exists.\");\n     }\n \n     HTableDescriptor flowRunTableDescp \u003d new HTableDescriptor(table);\n     HColumnDescriptor infoCF \u003d\n         new HColumnDescriptor(FlowRunColumnFamily.INFO.getBytes());\n     infoCF.setBloomFilterType(BloomType.ROWCOL);\n     flowRunTableDescp.addFamily(infoCF);\n     infoCF.setMinVersions(1);\n     infoCF.setMaxVersions(DEFAULT_METRICS_MAX_VERSIONS);\n \n     // TODO: figure the split policy\n-    flowRunTableDescp.addCoprocessor(FlowRunCoprocessor.class\n-        .getCanonicalName());\n+    String coprocessorJarPathStr \u003d hbaseConf.get(\n+        YarnConfiguration.FLOW_RUN_COPROCESSOR_JAR_HDFS_LOCATION,\n+        YarnConfiguration.DEFAULT_HDFS_LOCATION_FLOW_RUN_COPROCESSOR_JAR);\n+\n+    Path coprocessorJarPath \u003d new Path(coprocessorJarPathStr);\n+    LOG.info(\"CoprocessorJarPath\u003d\" + coprocessorJarPath.toString());\n+    flowRunTableDescp.addCoprocessor(\n+        FlowRunCoprocessor.class.getCanonicalName(), coprocessorJarPath,\n+        Coprocessor.PRIORITY_USER, null);\n     admin.createTable(flowRunTableDescp);\n     LOG.info(\"Status of table creation for \" + table.getNameAsString() + \"\u003d\"\n         + admin.tableExists(table));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void createTable(Admin admin, Configuration hbaseConf)\n      throws IOException {\n\n    TableName table \u003d getTableName(hbaseConf);\n    if (admin.tableExists(table)) {\n      // do not disable / delete existing table\n      // similar to the approach taken by map-reduce jobs when\n      // output directory exists\n      throw new IOException(\"Table \" + table.getNameAsString()\n          + \" already exists.\");\n    }\n\n    HTableDescriptor flowRunTableDescp \u003d new HTableDescriptor(table);\n    HColumnDescriptor infoCF \u003d\n        new HColumnDescriptor(FlowRunColumnFamily.INFO.getBytes());\n    infoCF.setBloomFilterType(BloomType.ROWCOL);\n    flowRunTableDescp.addFamily(infoCF);\n    infoCF.setMinVersions(1);\n    infoCF.setMaxVersions(DEFAULT_METRICS_MAX_VERSIONS);\n\n    // TODO: figure the split policy\n    String coprocessorJarPathStr \u003d hbaseConf.get(\n        YarnConfiguration.FLOW_RUN_COPROCESSOR_JAR_HDFS_LOCATION,\n        YarnConfiguration.DEFAULT_HDFS_LOCATION_FLOW_RUN_COPROCESSOR_JAR);\n\n    Path coprocessorJarPath \u003d new Path(coprocessorJarPathStr);\n    LOG.info(\"CoprocessorJarPath\u003d\" + coprocessorJarPath.toString());\n    flowRunTableDescp.addCoprocessor(\n        FlowRunCoprocessor.class.getCanonicalName(), coprocessorJarPath,\n        Coprocessor.PRIORITY_USER, null);\n    admin.createTable(flowRunTableDescp);\n    LOG.info(\"Status of table creation for \" + table.getNameAsString() + \"\u003d\"\n        + admin.tableExists(table));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunTable.java",
      "extendedDetails": {}
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void createTable(Admin admin, Configuration hbaseConf)\n      throws IOException {\n\n    TableName table \u003d getTableName(hbaseConf);\n    if (admin.tableExists(table)) {\n      // do not disable / delete existing table\n      // similar to the approach taken by map-reduce jobs when\n      // output directory exists\n      throw new IOException(\"Table \" + table.getNameAsString()\n          + \" already exists.\");\n    }\n\n    HTableDescriptor flowRunTableDescp \u003d new HTableDescriptor(table);\n    HColumnDescriptor infoCF \u003d\n        new HColumnDescriptor(FlowRunColumnFamily.INFO.getBytes());\n    infoCF.setBloomFilterType(BloomType.ROWCOL);\n    flowRunTableDescp.addFamily(infoCF);\n    infoCF.setMinVersions(1);\n    infoCF.setMaxVersions(DEFAULT_METRICS_MAX_VERSIONS);\n\n    // TODO: figure the split policy\n    flowRunTableDescp.addCoprocessor(FlowRunCoprocessor.class\n        .getCanonicalName());\n    admin.createTable(flowRunTableDescp);\n    LOG.info(\"Status of table creation for \" + table.getNameAsString() + \"\u003d\"\n        + admin.tableExists(table));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunTable.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunTable.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunTable.java"
      }
    },
    "a68e3839218523403f42acd7bdd7ce1da59a5e60": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3901. Populate flow run data in the flow_run \u0026 flow activity tables (Vrushali C via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "a68e3839218523403f42acd7bdd7ce1da59a5e60",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,27 @@\n+  public void createTable(Admin admin, Configuration hbaseConf)\n+      throws IOException {\n+\n+    TableName table \u003d getTableName(hbaseConf);\n+    if (admin.tableExists(table)) {\n+      // do not disable / delete existing table\n+      // similar to the approach taken by map-reduce jobs when\n+      // output directory exists\n+      throw new IOException(\"Table \" + table.getNameAsString()\n+          + \" already exists.\");\n+    }\n+\n+    HTableDescriptor flowRunTableDescp \u003d new HTableDescriptor(table);\n+    HColumnDescriptor infoCF \u003d\n+        new HColumnDescriptor(FlowRunColumnFamily.INFO.getBytes());\n+    infoCF.setBloomFilterType(BloomType.ROWCOL);\n+    flowRunTableDescp.addFamily(infoCF);\n+    infoCF.setMinVersions(1);\n+    infoCF.setMaxVersions(DEFAULT_METRICS_MAX_VERSIONS);\n+\n+    // TODO: figure the split policy\n+    flowRunTableDescp.addCoprocessor(FlowRunCoprocessor.class\n+        .getCanonicalName());\n+    admin.createTable(flowRunTableDescp);\n+    LOG.info(\"Status of table creation for \" + table.getNameAsString() + \"\u003d\"\n+        + admin.tableExists(table));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void createTable(Admin admin, Configuration hbaseConf)\n      throws IOException {\n\n    TableName table \u003d getTableName(hbaseConf);\n    if (admin.tableExists(table)) {\n      // do not disable / delete existing table\n      // similar to the approach taken by map-reduce jobs when\n      // output directory exists\n      throw new IOException(\"Table \" + table.getNameAsString()\n          + \" already exists.\");\n    }\n\n    HTableDescriptor flowRunTableDescp \u003d new HTableDescriptor(table);\n    HColumnDescriptor infoCF \u003d\n        new HColumnDescriptor(FlowRunColumnFamily.INFO.getBytes());\n    infoCF.setBloomFilterType(BloomType.ROWCOL);\n    flowRunTableDescp.addFamily(infoCF);\n    infoCF.setMinVersions(1);\n    infoCF.setMaxVersions(DEFAULT_METRICS_MAX_VERSIONS);\n\n    // TODO: figure the split policy\n    flowRunTableDescp.addCoprocessor(FlowRunCoprocessor.class\n        .getCanonicalName());\n    admin.createTable(flowRunTableDescp);\n    LOG.info(\"Status of table creation for \" + table.getNameAsString() + \"\u003d\"\n        + admin.tableExists(table));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunTable.java"
    }
  }
}