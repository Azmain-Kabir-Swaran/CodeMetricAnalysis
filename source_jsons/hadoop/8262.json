{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AclTransformation.java",
  "functionName": "filterDefaultAclEntries",
  "functionId": "filterDefaultAclEntries___existingAcl-List__AclEntry__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/AclTransformation.java",
  "functionStartLine": 114,
  "functionEndLine": 125,
  "numCommitsSeen": 8,
  "timeTaken": 748,
  "changeHistory": [
    "c6585675710aa800317ad35e6fdf95c50c559d68"
  ],
  "changeHistoryShort": {
    "c6585675710aa800317ad35e6fdf95c50c559d68": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c6585675710aa800317ad35e6fdf95c50c559d68": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5673. Implement logic for modification of ACLs. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1556090 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/01/14 4:47 PM",
      "commitName": "c6585675710aa800317ad35e6fdf95c50c559d68",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,12 @@\n+  public static List\u003cAclEntry\u003e filterDefaultAclEntries(\n+      List\u003cAclEntry\u003e existingAcl) throws AclException {\n+    ArrayList\u003cAclEntry\u003e aclBuilder \u003d Lists.newArrayListWithCapacity(MAX_ENTRIES);\n+    for (AclEntry existingEntry: existingAcl) {\n+      if (existingEntry.getScope() \u003d\u003d DEFAULT) {\n+        // Default entries sort after access entries, so we can exit early.\n+        break;\n+      }\n+      aclBuilder.add(existingEntry);\n+    }\n+    return buildAndValidateAcl(aclBuilder);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cAclEntry\u003e filterDefaultAclEntries(\n      List\u003cAclEntry\u003e existingAcl) throws AclException {\n    ArrayList\u003cAclEntry\u003e aclBuilder \u003d Lists.newArrayListWithCapacity(MAX_ENTRIES);\n    for (AclEntry existingEntry: existingAcl) {\n      if (existingEntry.getScope() \u003d\u003d DEFAULT) {\n        // Default entries sort after access entries, so we can exit early.\n        break;\n      }\n      aclBuilder.add(existingEntry);\n    }\n    return buildAndValidateAcl(aclBuilder);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/AclTransformation.java"
    }
  }
}