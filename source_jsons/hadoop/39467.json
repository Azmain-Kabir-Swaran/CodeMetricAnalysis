{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractCSQueue.java",
  "functionName": "validateAbsoluteVsPercentageCapacityConfig",
  "functionId": "validateAbsoluteVsPercentageCapacityConfig___minResource-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
  "functionStartLine": 603,
  "functionEndLine": 616,
  "numCommitsSeen": 76,
  "timeTaken": 3322,
  "changeHistory": [
    "cdb2107066a2d8557270888c0a9a75f29a6853bf",
    "5e798b1a0ddceeaf54703b94052501867156e979"
  ],
  "changeHistoryShort": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": "Ybodychange",
    "5e798b1a0ddceeaf54703b94052501867156e979": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
      "commitDate": "25/03/20 4:20 AM",
      "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthor": "Sunil G",
      "commitDateOld": "28/01/20 7:54 PM",
      "commitNameOld": "e578e52aae01248507e089b406fe038ab8e84207",
      "commitAuthorOld": "Eric Badger",
      "daysBetweenCommits": 56.31,
      "commitsBetweenForRepo": 177,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private void validateAbsoluteVsPercentageCapacityConfig(\n       Resource minResource) {\n     CapacityConfigType localType \u003d CapacityConfigType.PERCENTAGE;\n     if (!minResource.equals(Resources.none())) {\n       localType \u003d CapacityConfigType.ABSOLUTE_RESOURCE;\n     }\n \n-    if (!queueName.equals(\"root\")\n+    if (!queuePath.equals(\"root\")\n         \u0026\u0026 !this.capacityConfigType.equals(localType)) {\n-      throw new IllegalArgumentException(\"Queue \u0027\" + getQueueName()\n+      throw new IllegalArgumentException(\"Queue \u0027\" + getQueuePath()\n           + \"\u0027 should use either percentage based capacity\"\n           + \" configuration or absolute resource.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void validateAbsoluteVsPercentageCapacityConfig(\n      Resource minResource) {\n    CapacityConfigType localType \u003d CapacityConfigType.PERCENTAGE;\n    if (!minResource.equals(Resources.none())) {\n      localType \u003d CapacityConfigType.ABSOLUTE_RESOURCE;\n    }\n\n    if (!queuePath.equals(\"root\")\n        \u0026\u0026 !this.capacityConfigType.equals(localType)) {\n      throw new IllegalArgumentException(\"Queue \u0027\" + getQueuePath()\n          + \"\u0027 should use either percentage based capacity\"\n          + \" configuration or absolute resource.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
      "extendedDetails": {}
    },
    "5e798b1a0ddceeaf54703b94052501867156e979": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6471. Support to add min/max resource configuration for a queue. (Sunil G via wangda)\n\nChange-Id: I9213f5297a6841fab5c573e85ee4c4e5f4a0b7ff\n",
      "commitDate": "07/12/17 6:56 PM",
      "commitName": "5e798b1a0ddceeaf54703b94052501867156e979",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,14 @@\n+  private void validateAbsoluteVsPercentageCapacityConfig(\n+      Resource minResource) {\n+    CapacityConfigType localType \u003d CapacityConfigType.PERCENTAGE;\n+    if (!minResource.equals(Resources.none())) {\n+      localType \u003d CapacityConfigType.ABSOLUTE_RESOURCE;\n+    }\n+\n+    if (!queueName.equals(\"root\")\n+        \u0026\u0026 !this.capacityConfigType.equals(localType)) {\n+      throw new IllegalArgumentException(\"Queue \u0027\" + getQueueName()\n+          + \"\u0027 should use either percentage based capacity\"\n+          + \" configuration or absolute resource.\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void validateAbsoluteVsPercentageCapacityConfig(\n      Resource minResource) {\n    CapacityConfigType localType \u003d CapacityConfigType.PERCENTAGE;\n    if (!minResource.equals(Resources.none())) {\n      localType \u003d CapacityConfigType.ABSOLUTE_RESOURCE;\n    }\n\n    if (!queueName.equals(\"root\")\n        \u0026\u0026 !this.capacityConfigType.equals(localType)) {\n      throw new IllegalArgumentException(\"Queue \u0027\" + getQueueName()\n          + \"\u0027 should use either percentage based capacity\"\n          + \" configuration or absolute resource.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java"
    }
  }
}