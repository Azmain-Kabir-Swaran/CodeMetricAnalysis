{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OsSecureRandom.java",
  "functionName": "fillReservoir",
  "functionId": "fillReservoir___min-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/random/OsSecureRandom.java",
  "functionStartLine": 60,
  "functionEndLine": 72,
  "numCommitsSeen": 7,
  "timeTaken": 1252,
  "changeHistory": [
    "7a3188d054481b9bd563e337901e93476303ce7f",
    "f0db797be28ca221d540c6a3accd6bff9a7996fa",
    "905c90b066503c966ff78e3d1add57f4aff6e9c6"
  ],
  "changeHistoryShort": {
    "7a3188d054481b9bd563e337901e93476303ce7f": "Ybodychange",
    "f0db797be28ca221d540c6a3accd6bff9a7996fa": "Ybodychange",
    "905c90b066503c966ff78e3d1add57f4aff6e9c6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7a3188d054481b9bd563e337901e93476303ce7f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16282. Avoid FileStream to improve performance. Contributed by Ayush Saxena.\n",
      "commitDate": "02/05/19 12:58 PM",
      "commitName": "7a3188d054481b9bd563e337901e93476303ce7f",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 653.64,
      "commitsBetweenForRepo": 5524,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   private void fillReservoir(int min) {\n     if (pos \u003e\u003d reservoir.length - min) {\n       try {\n         if (stream \u003d\u003d null) {\n-          stream \u003d new FileInputStream(new File(randomDevPath));\n+          stream \u003d Files.newInputStream(Paths.get(randomDevPath));\n         }\n         IOUtils.readFully(stream, reservoir, 0, reservoir.length);\n       } catch (IOException e) {\n         throw new RuntimeException(\"failed to fill reservoir\", e);\n       }\n       pos \u003d 0;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void fillReservoir(int min) {\n    if (pos \u003e\u003d reservoir.length - min) {\n      try {\n        if (stream \u003d\u003d null) {\n          stream \u003d Files.newInputStream(Paths.get(randomDevPath));\n        }\n        IOUtils.readFully(stream, reservoir, 0, reservoir.length);\n      } catch (IOException e) {\n        throw new RuntimeException(\"failed to fill reservoir\", e);\n      }\n      pos \u003d 0;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/random/OsSecureRandom.java",
      "extendedDetails": {}
    },
    "f0db797be28ca221d540c6a3accd6bff9a7996fa": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11891. OsSecureRandom should lazily fill its reservoir (asuresh)\n",
      "commitDate": "30/04/15 1:59 PM",
      "commitName": "f0db797be28ca221d540c6a3accd6bff9a7996fa",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "03/09/14 7:35 PM",
      "commitNameOld": "8f1a668575d35bee11f4cd8173335be5352ec620",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 238.77,
      "commitsBetweenForRepo": 2056,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,13 @@\n   private void fillReservoir(int min) {\n     if (pos \u003e\u003d reservoir.length - min) {\n       try {\n+        if (stream \u003d\u003d null) {\n+          stream \u003d new FileInputStream(new File(randomDevPath));\n+        }\n         IOUtils.readFully(stream, reservoir, 0, reservoir.length);\n       } catch (IOException e) {\n         throw new RuntimeException(\"failed to fill reservoir\", e);\n       }\n       pos \u003d 0;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void fillReservoir(int min) {\n    if (pos \u003e\u003d reservoir.length - min) {\n      try {\n        if (stream \u003d\u003d null) {\n          stream \u003d new FileInputStream(new File(randomDevPath));\n        }\n        IOUtils.readFully(stream, reservoir, 0, reservoir.length);\n      } catch (IOException e) {\n        throw new RuntimeException(\"failed to fill reservoir\", e);\n      }\n      pos \u003d 0;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/random/OsSecureRandom.java",
      "extendedDetails": {}
    },
    "905c90b066503c966ff78e3d1add57f4aff6e9c6": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10734. Implement high-performance secure random number sources. (Yi Liu via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1609874 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/07/14 6:29 PM",
      "commitName": "905c90b066503c966ff78e3d1add57f4aff6e9c6",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,10 @@\n+  private void fillReservoir(int min) {\n+    if (pos \u003e\u003d reservoir.length - min) {\n+      try {\n+        IOUtils.readFully(stream, reservoir, 0, reservoir.length);\n+      } catch (IOException e) {\n+        throw new RuntimeException(\"failed to fill reservoir\", e);\n+      }\n+      pos \u003d 0;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void fillReservoir(int min) {\n    if (pos \u003e\u003d reservoir.length - min) {\n      try {\n        IOUtils.readFully(stream, reservoir, 0, reservoir.length);\n      } catch (IOException e) {\n        throw new RuntimeException(\"failed to fill reservoir\", e);\n      }\n      pos \u003d 0;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/random/OsSecureRandom.java"
    }
  }
}