{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "YarnUncaughtExceptionHandler.java",
  "functionName": "uncaughtException",
  "functionId": "uncaughtException___t-Thread__e-Throwable",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/YarnUncaughtExceptionHandler.java",
  "functionStartLine": 50,
  "functionEndLine": 76,
  "numCommitsSeen": 6,
  "timeTaken": 1480,
  "changeHistory": [
    "bd8d299ded742813cabd4b4e7ce1e33e0d1f9509",
    "52cbb906d9530c870d9886fb99ad4b1b39df2199",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "11782dd3a5ee5a2f6ad42b335f0386d00baa9ae1"
  ],
  "changeHistoryShort": {
    "bd8d299ded742813cabd4b4e7ce1e33e0d1f9509": "Ybodychange",
    "52cbb906d9530c870d9886fb99ad4b1b39df2199": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "11782dd3a5ee5a2f6ad42b335f0386d00baa9ae1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bd8d299ded742813cabd4b4e7ce1e33e0d1f9509": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7477. Moving logging APIs over to slf4j in hadoop-yarn-common. Contributed by Prabhu Joseph.\n",
      "commitDate": "03/03/19 11:59 PM",
      "commitName": "bd8d299ded742813cabd4b4e7ce1e33e0d1f9509",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "03/10/17 3:01 PM",
      "commitNameOld": "c9b525bd943fe7e098e72fb9be5623862c7ab5ff",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 516.41,
      "commitsBetweenForRepo": 4434,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   public void uncaughtException(Thread t, Throwable e) {\n     if(ShutdownHookManager.get().isShutdownInProgress()) {\n       LOG.error(\"Thread \" + t + \" threw an Throwable, but we are shutting \" +\n       \t\t\"down, so ignoring this\", e);\n     } else if(e instanceof Error) {\n       try {\n-        LOG.fatal(\"Thread \" + t + \" threw an Error.  Shutting down now...\", e);\n+        LOG.error(FATAL,\n+            \"Thread \" + t + \" threw an Error.  Shutting down now...\", e);\n       } catch (Throwable err) {\n         //We don\u0027t want to not exit because of an issue with logging\n       }\n       if(e instanceof OutOfMemoryError) {\n         //After catching an OOM java says it is undefined behavior, so don\u0027t\n         //even try to clean up or we can get stuck on shutdown.\n         try {\n           System.err.println(\"Halting due to Out Of Memory Error...\");\n         } catch (Throwable err) {\n           //Again we done want to exit because of logging issues.\n         }\n         ExitUtil.halt(-1);\n       } else {\n         ExitUtil.terminate(-1);\n       }\n     } else {\n       LOG.error(\"Thread \" + t + \" threw an Exception.\", e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void uncaughtException(Thread t, Throwable e) {\n    if(ShutdownHookManager.get().isShutdownInProgress()) {\n      LOG.error(\"Thread \" + t + \" threw an Throwable, but we are shutting \" +\n      \t\t\"down, so ignoring this\", e);\n    } else if(e instanceof Error) {\n      try {\n        LOG.error(FATAL,\n            \"Thread \" + t + \" threw an Error.  Shutting down now...\", e);\n      } catch (Throwable err) {\n        //We don\u0027t want to not exit because of an issue with logging\n      }\n      if(e instanceof OutOfMemoryError) {\n        //After catching an OOM java says it is undefined behavior, so don\u0027t\n        //even try to clean up or we can get stuck on shutdown.\n        try {\n          System.err.println(\"Halting due to Out Of Memory Error...\");\n        } catch (Throwable err) {\n          //Again we done want to exit because of logging issues.\n        }\n        ExitUtil.halt(-1);\n      } else {\n        ExitUtil.terminate(-1);\n      }\n    } else {\n      LOG.error(\"Thread \" + t + \" threw an Exception.\", e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/YarnUncaughtExceptionHandler.java",
      "extendedDetails": {}
    },
    "52cbb906d9530c870d9886fb99ad4b1b39df2199": {
      "type": "Ybodychange",
      "commitMessage": "YARN-548. Add tests for YarnUncaughtExceptionHandler (Vadim Bondarev via jeagles)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485877 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/05/13 3:21 PM",
      "commitName": "52cbb906d9530c870d9886fb99ad4b1b39df2199",
      "commitAuthor": "Jonathan Turner Eagles",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 288.71,
      "commitsBetweenForRepo": 1649,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public void uncaughtException(Thread t, Throwable e) {\n     if(ShutdownHookManager.get().isShutdownInProgress()) {\n       LOG.error(\"Thread \" + t + \" threw an Throwable, but we are shutting \" +\n       \t\t\"down, so ignoring this\", e);\n     } else if(e instanceof Error) {\n       try {\n         LOG.fatal(\"Thread \" + t + \" threw an Error.  Shutting down now...\", e);\n       } catch (Throwable err) {\n         //We don\u0027t want to not exit because of an issue with logging\n       }\n       if(e instanceof OutOfMemoryError) {\n         //After catching an OOM java says it is undefined behavior, so don\u0027t\n         //even try to clean up or we can get stuck on shutdown.\n         try {\n           System.err.println(\"Halting due to Out Of Memory Error...\");\n         } catch (Throwable err) {\n           //Again we done want to exit because of logging issues.\n         }\n-        Runtime.getRuntime().halt(-1);\n+        ExitUtil.halt(-1);\n       } else {\n-        System.exit(-1);\n+        ExitUtil.terminate(-1);\n       }\n     } else {\n       LOG.error(\"Thread \" + t + \" threw an Exception.\", e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void uncaughtException(Thread t, Throwable e) {\n    if(ShutdownHookManager.get().isShutdownInProgress()) {\n      LOG.error(\"Thread \" + t + \" threw an Throwable, but we are shutting \" +\n      \t\t\"down, so ignoring this\", e);\n    } else if(e instanceof Error) {\n      try {\n        LOG.fatal(\"Thread \" + t + \" threw an Error.  Shutting down now...\", e);\n      } catch (Throwable err) {\n        //We don\u0027t want to not exit because of an issue with logging\n      }\n      if(e instanceof OutOfMemoryError) {\n        //After catching an OOM java says it is undefined behavior, so don\u0027t\n        //even try to clean up or we can get stuck on shutdown.\n        try {\n          System.err.println(\"Halting due to Out Of Memory Error...\");\n        } catch (Throwable err) {\n          //Again we done want to exit because of logging issues.\n        }\n        ExitUtil.halt(-1);\n      } else {\n        ExitUtil.terminate(-1);\n      }\n    } else {\n      LOG.error(\"Thread \" + t + \" threw an Exception.\", e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/YarnUncaughtExceptionHandler.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void uncaughtException(Thread t, Throwable e) {\n    if(ShutdownHookManager.get().isShutdownInProgress()) {\n      LOG.error(\"Thread \" + t + \" threw an Throwable, but we are shutting \" +\n      \t\t\"down, so ignoring this\", e);\n    } else if(e instanceof Error) {\n      try {\n        LOG.fatal(\"Thread \" + t + \" threw an Error.  Shutting down now...\", e);\n      } catch (Throwable err) {\n        //We don\u0027t want to not exit because of an issue with logging\n      }\n      if(e instanceof OutOfMemoryError) {\n        //After catching an OOM java says it is undefined behavior, so don\u0027t\n        //even try to clean up or we can get stuck on shutdown.\n        try {\n          System.err.println(\"Halting due to Out Of Memory Error...\");\n        } catch (Throwable err) {\n          //Again we done want to exit because of logging issues.\n        }\n        Runtime.getRuntime().halt(-1);\n      } else {\n        System.exit(-1);\n      }\n    } else {\n      LOG.error(\"Thread \" + t + \" threw an Exception.\", e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/YarnUncaughtExceptionHandler.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/YarnUncaughtExceptionHandler.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/YarnUncaughtExceptionHandler.java"
      }
    },
    "11782dd3a5ee5a2f6ad42b335f0386d00baa9ae1": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-4300. OOM in AM can turn it into a zombie. (Robert Evans via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1359399 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/07/12 2:08 PM",
      "commitName": "11782dd3a5ee5a2f6ad42b335f0386d00baa9ae1",
      "commitAuthor": "Thomas Graves",
      "diff": "@@ -0,0 +1,26 @@\n+  public void uncaughtException(Thread t, Throwable e) {\n+    if(ShutdownHookManager.get().isShutdownInProgress()) {\n+      LOG.error(\"Thread \" + t + \" threw an Throwable, but we are shutting \" +\n+      \t\t\"down, so ignoring this\", e);\n+    } else if(e instanceof Error) {\n+      try {\n+        LOG.fatal(\"Thread \" + t + \" threw an Error.  Shutting down now...\", e);\n+      } catch (Throwable err) {\n+        //We don\u0027t want to not exit because of an issue with logging\n+      }\n+      if(e instanceof OutOfMemoryError) {\n+        //After catching an OOM java says it is undefined behavior, so don\u0027t\n+        //even try to clean up or we can get stuck on shutdown.\n+        try {\n+          System.err.println(\"Halting due to Out Of Memory Error...\");\n+        } catch (Throwable err) {\n+          //Again we done want to exit because of logging issues.\n+        }\n+        Runtime.getRuntime().halt(-1);\n+      } else {\n+        System.exit(-1);\n+      }\n+    } else {\n+      LOG.error(\"Thread \" + t + \" threw an Exception.\", e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void uncaughtException(Thread t, Throwable e) {\n    if(ShutdownHookManager.get().isShutdownInProgress()) {\n      LOG.error(\"Thread \" + t + \" threw an Throwable, but we are shutting \" +\n      \t\t\"down, so ignoring this\", e);\n    } else if(e instanceof Error) {\n      try {\n        LOG.fatal(\"Thread \" + t + \" threw an Error.  Shutting down now...\", e);\n      } catch (Throwable err) {\n        //We don\u0027t want to not exit because of an issue with logging\n      }\n      if(e instanceof OutOfMemoryError) {\n        //After catching an OOM java says it is undefined behavior, so don\u0027t\n        //even try to clean up or we can get stuck on shutdown.\n        try {\n          System.err.println(\"Halting due to Out Of Memory Error...\");\n        } catch (Throwable err) {\n          //Again we done want to exit because of logging issues.\n        }\n        Runtime.getRuntime().halt(-1);\n      } else {\n        System.exit(-1);\n      }\n    } else {\n      LOG.error(\"Thread \" + t + \" threw an Exception.\", e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/YarnUncaughtExceptionHandler.java"
    }
  }
}