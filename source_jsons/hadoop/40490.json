{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SingleConstraintAppPlacementAllocator.java",
  "functionName": "precheckNode",
  "functionId": "precheckNode___schedulerNode-SchedulerNode__schedulingMode-SchedulingMode__dcOpt-Optional__DiagnosticsCollector__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/SingleConstraintAppPlacementAllocator.java",
  "functionStartLine": 393,
  "functionEndLine": 421,
  "numCommitsSeen": 17,
  "timeTaken": 1607,
  "changeHistory": [
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7"
  ],
  "changeHistoryShort": {
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9440. Improve diagnostics for scheduler and app activities. Contributed by Tao Yang.\n",
      "commitDate": "06/05/19 5:00 AM",
      "commitName": "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
      "commitAuthor": "Weiwei Yang",
      "diff": "@@ -0,0 +1,29 @@\n+  public boolean precheckNode(SchedulerNode schedulerNode,\n+      SchedulingMode schedulingMode,\n+      Optional\u003cDiagnosticsCollector\u003e dcOpt) {\n+    // We will only look at node label \u003d nodeLabelToLookAt according to\n+    // schedulingMode and partition of node.\n+    String nodePartitionToLookAt;\n+    if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n+      nodePartitionToLookAt \u003d schedulerNode.getPartition();\n+    } else{\n+      nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n+    }\n+\n+    readLock.lock();\n+    try {\n+      // Check node partition as well as cardinality/pending resources.\n+      boolean rst \u003d this.targetNodePartition.equals(nodePartitionToLookAt);\n+      if (!rst) {\n+        if (dcOpt.isPresent()) {\n+          dcOpt.get().collectPartitionDiagnostics(targetNodePartition,\n+              nodePartitionToLookAt);\n+        }\n+        return rst;\n+      }\n+      return checkCardinalityAndPending(schedulerNode, dcOpt);\n+    } finally {\n+      readLock.unlock();\n+    }\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean precheckNode(SchedulerNode schedulerNode,\n      SchedulingMode schedulingMode,\n      Optional\u003cDiagnosticsCollector\u003e dcOpt) {\n    // We will only look at node label \u003d nodeLabelToLookAt according to\n    // schedulingMode and partition of node.\n    String nodePartitionToLookAt;\n    if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n      nodePartitionToLookAt \u003d schedulerNode.getPartition();\n    } else{\n      nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n    }\n\n    readLock.lock();\n    try {\n      // Check node partition as well as cardinality/pending resources.\n      boolean rst \u003d this.targetNodePartition.equals(nodePartitionToLookAt);\n      if (!rst) {\n        if (dcOpt.isPresent()) {\n          dcOpt.get().collectPartitionDiagnostics(targetNodePartition,\n              nodePartitionToLookAt);\n        }\n        return rst;\n      }\n      return checkCardinalityAndPending(schedulerNode, dcOpt);\n    } finally {\n      readLock.unlock();\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/SingleConstraintAppPlacementAllocator.java"
    }
  }
}