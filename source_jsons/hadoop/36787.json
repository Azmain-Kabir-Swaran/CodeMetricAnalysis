{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMWebServices.java",
  "functionName": "escapeInvalidXMLCharacters",
  "functionId": "escapeInvalidXMLCharacters___str-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
  "functionStartLine": 576,
  "functionEndLine": 596,
  "numCommitsSeen": 106,
  "timeTaken": 1684,
  "changeHistory": [
    "10144a580e4647eb7d3d59d043608ffbf8cf090d"
  ],
  "changeHistoryShort": {
    "10144a580e4647eb7d3d59d043608ffbf8cf090d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10144a580e4647eb7d3d59d043608ffbf8cf090d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9728. Bugfix for escaping illegal xml characters for Resource Manager REST API.\n           Contributed by Prabhu Joseph\n",
      "commitDate": "10/09/19 2:04 PM",
      "commitName": "10144a580e4647eb7d3d59d043608ffbf8cf090d",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,21 @@\n+  public static String escapeInvalidXMLCharacters(String str) {\n+    StringBuffer out \u003d new StringBuffer();\n+    final int strlen \u003d str.length();\n+    final String substitute \u003d \"\\uFFFD\";\n+    int idx \u003d 0;\n+    while (idx \u003c strlen) {\n+      final int cpt \u003d str.codePointAt(idx);\n+      idx +\u003d Character.isSupplementaryCodePoint(cpt) ? 2 : 1;\n+      if ((cpt \u003d\u003d 0x9) ||\n+          (cpt \u003d\u003d 0xA) ||\n+          (cpt \u003d\u003d 0xD) ||\n+          ((cpt \u003e\u003d 0x20) \u0026\u0026 (cpt \u003c\u003d 0xD7FF)) ||\n+          ((cpt \u003e\u003d 0xE000) \u0026\u0026 (cpt \u003c\u003d 0xFFFD)) ||\n+          ((cpt \u003e\u003d 0x10000) \u0026\u0026 (cpt \u003c\u003d 0x10FFFF))) {\n+        out.append(Character.toChars(cpt));\n+      } else {\n+        out.append(substitute);\n+      }\n+    }\n+    return out.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String escapeInvalidXMLCharacters(String str) {\n    StringBuffer out \u003d new StringBuffer();\n    final int strlen \u003d str.length();\n    final String substitute \u003d \"\\uFFFD\";\n    int idx \u003d 0;\n    while (idx \u003c strlen) {\n      final int cpt \u003d str.codePointAt(idx);\n      idx +\u003d Character.isSupplementaryCodePoint(cpt) ? 2 : 1;\n      if ((cpt \u003d\u003d 0x9) ||\n          (cpt \u003d\u003d 0xA) ||\n          (cpt \u003d\u003d 0xD) ||\n          ((cpt \u003e\u003d 0x20) \u0026\u0026 (cpt \u003c\u003d 0xD7FF)) ||\n          ((cpt \u003e\u003d 0xE000) \u0026\u0026 (cpt \u003c\u003d 0xFFFD)) ||\n          ((cpt \u003e\u003d 0x10000) \u0026\u0026 (cpt \u003c\u003d 0x10FFFF))) {\n        out.append(Character.toChars(cpt));\n      } else {\n        out.append(substitute);\n      }\n    }\n    return out.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java"
    }
  }
}