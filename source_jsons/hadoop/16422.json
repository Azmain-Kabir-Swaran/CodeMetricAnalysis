{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Quota.java",
  "functionName": "setQuotaInternal",
  "functionId": "setQuotaInternal___path-String__locations-List__RemoteLocation____namespaceQuota-long__storagespaceQuota-long__type-StorageType",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java",
  "functionStartLine": 100,
  "functionEndLine": 124,
  "numCommitsSeen": 15,
  "timeTaken": 887,
  "changeHistory": [
    "761594549ec0c6bab50a28a7eb6c741aec7239d7"
  ],
  "changeHistoryShort": {
    "761594549ec0c6bab50a28a7eb6c741aec7239d7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "761594549ec0c6bab50a28a7eb6c741aec7239d7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14814. RBF: RouterQuotaUpdateService supports inherited rule. Contributed by Jinglun.\n",
      "commitDate": "08/10/19 1:31 AM",
      "commitName": "761594549ec0c6bab50a28a7eb6c741aec7239d7",
      "commitAuthor": "Ayush Saxena",
      "diff": "@@ -0,0 +1,25 @@\n+  void setQuotaInternal(String path, List\u003cRemoteLocation\u003e locations,\n+      long namespaceQuota, long storagespaceQuota, StorageType type)\n+      throws IOException {\n+    rpcServer.checkOperation(OperationCategory.WRITE);\n+    if (!router.isQuotaEnabled()) {\n+      throw new IOException(\"The quota system is disabled in Router.\");\n+    }\n+\n+    // Set quota for current path and its children mount table path.\n+    if (locations \u003d\u003d null) {\n+      locations \u003d getQuotaRemoteLocations(path);\n+    }\n+    if (LOG.isDebugEnabled()) {\n+      for (RemoteLocation loc : locations) {\n+        LOG.debug(\"Set quota for path: nsId: {}, dest: {}.\",\n+            loc.getNameserviceId(), loc.getDest());\n+      }\n+    }\n+\n+    RemoteMethod method \u003d new RemoteMethod(\"setQuota\",\n+        new Class\u003c?\u003e[] {String.class, long.class, long.class,\n+            StorageType.class},\n+        new RemoteParam(), namespaceQuota, storagespaceQuota, type);\n+    rpcClient.invokeConcurrent(locations, method, false, false);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void setQuotaInternal(String path, List\u003cRemoteLocation\u003e locations,\n      long namespaceQuota, long storagespaceQuota, StorageType type)\n      throws IOException {\n    rpcServer.checkOperation(OperationCategory.WRITE);\n    if (!router.isQuotaEnabled()) {\n      throw new IOException(\"The quota system is disabled in Router.\");\n    }\n\n    // Set quota for current path and its children mount table path.\n    if (locations \u003d\u003d null) {\n      locations \u003d getQuotaRemoteLocations(path);\n    }\n    if (LOG.isDebugEnabled()) {\n      for (RemoteLocation loc : locations) {\n        LOG.debug(\"Set quota for path: nsId: {}, dest: {}.\",\n            loc.getNameserviceId(), loc.getDest());\n      }\n    }\n\n    RemoteMethod method \u003d new RemoteMethod(\"setQuota\",\n        new Class\u003c?\u003e[] {String.class, long.class, long.class,\n            StorageType.class},\n        new RemoteParam(), namespaceQuota, storagespaceQuota, type);\n    rpcClient.invokeConcurrent(locations, method, false, false);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java"
    }
  }
}