{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeId.java",
  "functionName": "fromString",
  "functionId": "fromString___nodeIdStr-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/NodeId.java",
  "functionStartLine": 118,
  "functionEndLine": 131,
  "numCommitsSeen": 6,
  "timeTaken": 3620,
  "changeHistory": [
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86"
  ],
  "changeHistoryShort": {
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1942. Deprecate toString/fromString methods from ConverterUtils and move them to records classes like ContainerId/ApplicationId, etc. (wangda)\n",
      "commitDate": "14/06/16 3:06 PM",
      "commitName": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,14 @@\n+  public static NodeId fromString(String nodeIdStr) {\n+    String[] parts \u003d nodeIdStr.split(\":\");\n+    if (parts.length !\u003d 2) {\n+      throw new IllegalArgumentException(\"Invalid NodeId [\" + nodeIdStr\n+          + \"]. Expected host:port\");\n+    }\n+    try {\n+      NodeId nodeId \u003d\n+          NodeId.newInstance(parts[0].trim(), Integer.parseInt(parts[1]));\n+      return nodeId;\n+    } catch (NumberFormatException e) {\n+      throw new IllegalArgumentException(\"Invalid port: \" + parts[1], e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static NodeId fromString(String nodeIdStr) {\n    String[] parts \u003d nodeIdStr.split(\":\");\n    if (parts.length !\u003d 2) {\n      throw new IllegalArgumentException(\"Invalid NodeId [\" + nodeIdStr\n          + \"]. Expected host:port\");\n    }\n    try {\n      NodeId nodeId \u003d\n          NodeId.newInstance(parts[0].trim(), Integer.parseInt(parts[1]));\n      return nodeId;\n    } catch (NumberFormatException e) {\n      throw new IllegalArgumentException(\"Invalid port: \" + parts[1], e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/NodeId.java"
    }
  }
}