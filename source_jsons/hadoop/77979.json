{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Ls.java",
  "functionName": "processPath",
  "functionId": "processPath___item-PathData",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
  "functionStartLine": 286,
  "functionEndLine": 321,
  "numCommitsSeen": 36,
  "timeTaken": 3808,
  "changeHistory": [
    "668817a6cefa6025ddfe082ed71d7d317d811381",
    "fa8cd1bf28f5b81849ba351a2d7225fbc580350d",
    "dd7916d3cd5d880d0b257d229f43f10feff04c93",
    "d6df0fdbbda42b4ddab3810b5ac57336c6241ba7",
    "0accc3306d830c3f2b16c4b8abf68729c7aba6cb",
    "3b50dcdce4ffe3d4e5892fca84909ff22be28739",
    "30b797ee9df30260314eeadffc7d51492871b352",
    "65158e478f135ec051c1939bd5f371818365dffd",
    "d5639c85fb92a666abebd75390bad8b7fdd9df50",
    "9ee7c2a0774eb07b1d7ee40aa89659c5c0a6346e",
    "659ea4c540e440004d9f1a7dedefa91c0bec8b04",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "5dbd26f2c7ac7f08b20d41b0f89ab3500649783b",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "99ebad8e757e90f6e036fc213d99f82dec7b80d7"
  ],
  "changeHistoryShort": {
    "668817a6cefa6025ddfe082ed71d7d317d811381": "Ybodychange",
    "fa8cd1bf28f5b81849ba351a2d7225fbc580350d": "Ybodychange",
    "dd7916d3cd5d880d0b257d229f43f10feff04c93": "Ybodychange",
    "d6df0fdbbda42b4ddab3810b5ac57336c6241ba7": "Ybodychange",
    "0accc3306d830c3f2b16c4b8abf68729c7aba6cb": "Ybodychange",
    "3b50dcdce4ffe3d4e5892fca84909ff22be28739": "Ybodychange",
    "30b797ee9df30260314eeadffc7d51492871b352": "Ybodychange",
    "65158e478f135ec051c1939bd5f371818365dffd": "Ybodychange",
    "d5639c85fb92a666abebd75390bad8b7fdd9df50": "Ybodychange",
    "9ee7c2a0774eb07b1d7ee40aa89659c5c0a6346e": "Ybodychange",
    "659ea4c540e440004d9f1a7dedefa91c0bec8b04": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "5dbd26f2c7ac7f08b20d41b0f89ab3500649783b": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "99ebad8e757e90f6e036fc213d99f82dec7b80d7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "668817a6cefa6025ddfe082ed71d7d317d811381": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-15954. ABFS: Enable owner and group conversion for MSI and login user using OAuth.\"\n\n(accidentally mixed in two patches)\n\nThis reverts commit fa8cd1bf28f5b81849ba351a2d7225fbc580350d.\n",
      "commitDate": "07/02/19 1:57 PM",
      "commitName": "668817a6cefa6025ddfe082ed71d7d317d811381",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "05/02/19 11:23 AM",
      "commitNameOld": "fa8cd1bf28f5b81849ba351a2d7225fbc580350d",
      "commitAuthorOld": "Da Zhou",
      "daysBetweenCommits": 2.11,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,36 @@\n   protected void processPath(PathData item) throws IOException {\n     if (pathOnly) {\n       out.println(item.toString());\n       return;\n     }\n     FileStatus stat \u003d item.stat;\n     if (displayECPolicy) {\n       ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n       String line \u003d String.format(lineFormat,\n           (stat.isDirectory() ? \"d\" : \"-\"),\n           stat.getPermission() + (stat.hasAcl() ? \"+\" : \" \"),\n           (stat.isFile() ? stat.getReplication() : \"-\"),\n           stat.getOwner(),\n           stat.getGroup(),\n           contentSummary.getErasureCodingPolicy(),\n-          displaySPolicy ? item.fs.getStoragePolicy(item.path).getName() : \"\",\n           formatSize(stat.getLen()),\n           dateFormat.format(new Date(isUseAtime()\n               ? stat.getAccessTime()\n               : stat.getModificationTime())),\n           isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n       out.println(line);\n     } else {\n       String line \u003d String.format(lineFormat,\n           (stat.isDirectory() ? \"d\" : \"-\"),\n           stat.getPermission() + (stat.hasAcl() ? \"+\" : \" \"),\n           (stat.isFile() ? stat.getReplication() : \"-\"),\n           stat.getOwner(),\n           stat.getGroup(),\n-          displaySPolicy ? item.fs.getStoragePolicy(item.path).getName() : \"\",\n           formatSize(stat.getLen()),\n           dateFormat.format(new Date(isUseAtime()\n               ? stat.getAccessTime()\n               : stat.getModificationTime())),\n           isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n       out.println(line);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    if (pathOnly) {\n      out.println(item.toString());\n      return;\n    }\n    FileStatus stat \u003d item.stat;\n    if (displayECPolicy) {\n      ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n      String line \u003d String.format(lineFormat,\n          (stat.isDirectory() ? \"d\" : \"-\"),\n          stat.getPermission() + (stat.hasAcl() ? \"+\" : \" \"),\n          (stat.isFile() ? stat.getReplication() : \"-\"),\n          stat.getOwner(),\n          stat.getGroup(),\n          contentSummary.getErasureCodingPolicy(),\n          formatSize(stat.getLen()),\n          dateFormat.format(new Date(isUseAtime()\n              ? stat.getAccessTime()\n              : stat.getModificationTime())),\n          isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n      out.println(line);\n    } else {\n      String line \u003d String.format(lineFormat,\n          (stat.isDirectory() ? \"d\" : \"-\"),\n          stat.getPermission() + (stat.hasAcl() ? \"+\" : \" \"),\n          (stat.isFile() ? stat.getReplication() : \"-\"),\n          stat.getOwner(),\n          stat.getGroup(),\n          formatSize(stat.getLen()),\n          dateFormat.format(new Date(isUseAtime()\n              ? stat.getAccessTime()\n              : stat.getModificationTime())),\n          isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n      out.println(line);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "fa8cd1bf28f5b81849ba351a2d7225fbc580350d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15954. ABFS: Enable owner and group conversion for MSI and login user using OAuth.\n\nContributed by Da Zhou and Junhua Gu.\n",
      "commitDate": "05/02/19 11:23 AM",
      "commitName": "fa8cd1bf28f5b81849ba351a2d7225fbc580350d",
      "commitAuthor": "Da Zhou",
      "commitDateOld": "11/01/19 10:54 AM",
      "commitNameOld": "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 25.02,
      "commitsBetweenForRepo": 180,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,38 @@\n   protected void processPath(PathData item) throws IOException {\n     if (pathOnly) {\n       out.println(item.toString());\n       return;\n     }\n     FileStatus stat \u003d item.stat;\n     if (displayECPolicy) {\n       ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n       String line \u003d String.format(lineFormat,\n           (stat.isDirectory() ? \"d\" : \"-\"),\n           stat.getPermission() + (stat.hasAcl() ? \"+\" : \" \"),\n           (stat.isFile() ? stat.getReplication() : \"-\"),\n           stat.getOwner(),\n           stat.getGroup(),\n           contentSummary.getErasureCodingPolicy(),\n+          displaySPolicy ? item.fs.getStoragePolicy(item.path).getName() : \"\",\n           formatSize(stat.getLen()),\n           dateFormat.format(new Date(isUseAtime()\n               ? stat.getAccessTime()\n               : stat.getModificationTime())),\n           isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n       out.println(line);\n     } else {\n       String line \u003d String.format(lineFormat,\n           (stat.isDirectory() ? \"d\" : \"-\"),\n           stat.getPermission() + (stat.hasAcl() ? \"+\" : \" \"),\n           (stat.isFile() ? stat.getReplication() : \"-\"),\n           stat.getOwner(),\n           stat.getGroup(),\n+          displaySPolicy ? item.fs.getStoragePolicy(item.path).getName() : \"\",\n           formatSize(stat.getLen()),\n           dateFormat.format(new Date(isUseAtime()\n               ? stat.getAccessTime()\n               : stat.getModificationTime())),\n           isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n       out.println(line);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    if (pathOnly) {\n      out.println(item.toString());\n      return;\n    }\n    FileStatus stat \u003d item.stat;\n    if (displayECPolicy) {\n      ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n      String line \u003d String.format(lineFormat,\n          (stat.isDirectory() ? \"d\" : \"-\"),\n          stat.getPermission() + (stat.hasAcl() ? \"+\" : \" \"),\n          (stat.isFile() ? stat.getReplication() : \"-\"),\n          stat.getOwner(),\n          stat.getGroup(),\n          contentSummary.getErasureCodingPolicy(),\n          displaySPolicy ? item.fs.getStoragePolicy(item.path).getName() : \"\",\n          formatSize(stat.getLen()),\n          dateFormat.format(new Date(isUseAtime()\n              ? stat.getAccessTime()\n              : stat.getModificationTime())),\n          isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n      out.println(line);\n    } else {\n      String line \u003d String.format(lineFormat,\n          (stat.isDirectory() ? \"d\" : \"-\"),\n          stat.getPermission() + (stat.hasAcl() ? \"+\" : \" \"),\n          (stat.isFile() ? stat.getReplication() : \"-\"),\n          stat.getOwner(),\n          stat.getGroup(),\n          displaySPolicy ? item.fs.getStoragePolicy(item.path).getName() : \"\",\n          formatSize(stat.getLen()),\n          dateFormat.format(new Date(isUseAtime()\n              ? stat.getAccessTime()\n              : stat.getModificationTime())),\n          isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n      out.println(line);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "dd7916d3cd5d880d0b257d229f43f10feff04c93": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12250. Reduce usage of FsPermissionExtension in unit tests. Contributed by Chris Douglas.\n",
      "commitDate": "17/08/17 9:35 AM",
      "commitName": "dd7916d3cd5d880d0b257d229f43f10feff04c93",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "28/06/17 1:47 PM",
      "commitNameOld": "d6df0fdbbda42b4ddab3810b5ac57336c6241ba7",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 49.83,
      "commitsBetweenForRepo": 329,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   protected void processPath(PathData item) throws IOException {\n     if (pathOnly) {\n       out.println(item.toString());\n       return;\n     }\n     FileStatus stat \u003d item.stat;\n     if (displayECPolicy) {\n       ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n       String line \u003d String.format(lineFormat,\n           (stat.isDirectory() ? \"d\" : \"-\"),\n-          stat.getPermission() + (stat.getPermission().getAclBit() ? \"+\" : \" \"),\n+          stat.getPermission() + (stat.hasAcl() ? \"+\" : \" \"),\n           (stat.isFile() ? stat.getReplication() : \"-\"),\n           stat.getOwner(),\n           stat.getGroup(),\n           contentSummary.getErasureCodingPolicy(),\n           formatSize(stat.getLen()),\n           dateFormat.format(new Date(isUseAtime()\n               ? stat.getAccessTime()\n               : stat.getModificationTime())),\n           isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n       out.println(line);\n     } else {\n       String line \u003d String.format(lineFormat,\n           (stat.isDirectory() ? \"d\" : \"-\"),\n-          stat.getPermission() + (stat.getPermission().getAclBit() ? \"+\" : \" \"),\n+          stat.getPermission() + (stat.hasAcl() ? \"+\" : \" \"),\n           (stat.isFile() ? stat.getReplication() : \"-\"),\n           stat.getOwner(),\n           stat.getGroup(),\n           formatSize(stat.getLen()),\n           dateFormat.format(new Date(isUseAtime()\n               ? stat.getAccessTime()\n               : stat.getModificationTime())),\n           isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n       out.println(line);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    if (pathOnly) {\n      out.println(item.toString());\n      return;\n    }\n    FileStatus stat \u003d item.stat;\n    if (displayECPolicy) {\n      ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n      String line \u003d String.format(lineFormat,\n          (stat.isDirectory() ? \"d\" : \"-\"),\n          stat.getPermission() + (stat.hasAcl() ? \"+\" : \" \"),\n          (stat.isFile() ? stat.getReplication() : \"-\"),\n          stat.getOwner(),\n          stat.getGroup(),\n          contentSummary.getErasureCodingPolicy(),\n          formatSize(stat.getLen()),\n          dateFormat.format(new Date(isUseAtime()\n              ? stat.getAccessTime()\n              : stat.getModificationTime())),\n          isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n      out.println(line);\n    } else {\n      String line \u003d String.format(lineFormat,\n          (stat.isDirectory() ? \"d\" : \"-\"),\n          stat.getPermission() + (stat.hasAcl() ? \"+\" : \" \"),\n          (stat.isFile() ? stat.getReplication() : \"-\"),\n          stat.getOwner(),\n          stat.getGroup(),\n          formatSize(stat.getLen()),\n          dateFormat.format(new Date(isUseAtime()\n              ? stat.getAccessTime()\n              : stat.getModificationTime())),\n          isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n      out.println(line);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "d6df0fdbbda42b4ddab3810b5ac57336c6241ba7": {
      "type": "Ybodychange",
      "commitMessage": "Add -E option in \u0027ls\u0027 to list erasure coding policy of each file and directory if applicable. Contributed by luhuichun via lei.\n",
      "commitDate": "28/06/17 1:47 PM",
      "commitName": "d6df0fdbbda42b4ddab3810b5ac57336c6241ba7",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "13/06/16 11:43 AM",
      "commitNameOld": "0accc3306d830c3f2b16c4b8abf68729c7aba6cb",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 380.09,
      "commitsBetweenForRepo": 2444,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,36 @@\n   protected void processPath(PathData item) throws IOException {\n     if (pathOnly) {\n       out.println(item.toString());\n       return;\n     }\n     FileStatus stat \u003d item.stat;\n-    String line \u003d String.format(lineFormat,\n-        (stat.isDirectory() ? \"d\" : \"-\"),\n-        stat.getPermission() + (stat.getPermission().getAclBit() ? \"+\" : \" \"),\n-        (stat.isFile() ? stat.getReplication() : \"-\"),\n-        stat.getOwner(),\n-        stat.getGroup(),\n-        formatSize(stat.getLen()),\n-        dateFormat.format(new Date(isUseAtime()\n-            ? stat.getAccessTime()\n-            : stat.getModificationTime())),\n-        isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n-    out.println(line);\n+    if (displayECPolicy) {\n+      ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n+      String line \u003d String.format(lineFormat,\n+          (stat.isDirectory() ? \"d\" : \"-\"),\n+          stat.getPermission() + (stat.getPermission().getAclBit() ? \"+\" : \" \"),\n+          (stat.isFile() ? stat.getReplication() : \"-\"),\n+          stat.getOwner(),\n+          stat.getGroup(),\n+          contentSummary.getErasureCodingPolicy(),\n+          formatSize(stat.getLen()),\n+          dateFormat.format(new Date(isUseAtime()\n+              ? stat.getAccessTime()\n+              : stat.getModificationTime())),\n+          isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n+      out.println(line);\n+    } else {\n+      String line \u003d String.format(lineFormat,\n+          (stat.isDirectory() ? \"d\" : \"-\"),\n+          stat.getPermission() + (stat.getPermission().getAclBit() ? \"+\" : \" \"),\n+          (stat.isFile() ? stat.getReplication() : \"-\"),\n+          stat.getOwner(),\n+          stat.getGroup(),\n+          formatSize(stat.getLen()),\n+          dateFormat.format(new Date(isUseAtime()\n+              ? stat.getAccessTime()\n+              : stat.getModificationTime())),\n+          isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n+      out.println(line);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    if (pathOnly) {\n      out.println(item.toString());\n      return;\n    }\n    FileStatus stat \u003d item.stat;\n    if (displayECPolicy) {\n      ContentSummary contentSummary \u003d item.fs.getContentSummary(item.path);\n      String line \u003d String.format(lineFormat,\n          (stat.isDirectory() ? \"d\" : \"-\"),\n          stat.getPermission() + (stat.getPermission().getAclBit() ? \"+\" : \" \"),\n          (stat.isFile() ? stat.getReplication() : \"-\"),\n          stat.getOwner(),\n          stat.getGroup(),\n          contentSummary.getErasureCodingPolicy(),\n          formatSize(stat.getLen()),\n          dateFormat.format(new Date(isUseAtime()\n              ? stat.getAccessTime()\n              : stat.getModificationTime())),\n          isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n      out.println(line);\n    } else {\n      String line \u003d String.format(lineFormat,\n          (stat.isDirectory() ? \"d\" : \"-\"),\n          stat.getPermission() + (stat.getPermission().getAclBit() ? \"+\" : \" \"),\n          (stat.isFile() ? stat.getReplication() : \"-\"),\n          stat.getOwner(),\n          stat.getGroup(),\n          formatSize(stat.getLen()),\n          dateFormat.format(new Date(isUseAtime()\n              ? stat.getAccessTime()\n              : stat.getModificationTime())),\n          isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n      out.println(line);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "0accc3306d830c3f2b16c4b8abf68729c7aba6cb": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13079. Add -q option to Ls to print ? instead of non-printable characters. Contributed by John Zhuge.\n",
      "commitDate": "13/06/16 11:43 AM",
      "commitName": "0accc3306d830c3f2b16c4b8abf68729c7aba6cb",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "29/05/15 5:15 PM",
      "commitNameOld": "374ddd9f9ea43b0e730a7baab3e51e6893d40420",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 380.77,
      "commitsBetweenForRepo": 2531,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   protected void processPath(PathData item) throws IOException {\n     if (pathOnly) {\n       out.println(item.toString());\n       return;\n     }\n     FileStatus stat \u003d item.stat;\n     String line \u003d String.format(lineFormat,\n         (stat.isDirectory() ? \"d\" : \"-\"),\n         stat.getPermission() + (stat.getPermission().getAclBit() ? \"+\" : \" \"),\n         (stat.isFile() ? stat.getReplication() : \"-\"),\n         stat.getOwner(),\n         stat.getGroup(),\n         formatSize(stat.getLen()),\n         dateFormat.format(new Date(isUseAtime()\n             ? stat.getAccessTime()\n             : stat.getModificationTime())),\n-        item);\n+        isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n     out.println(line);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    if (pathOnly) {\n      out.println(item.toString());\n      return;\n    }\n    FileStatus stat \u003d item.stat;\n    String line \u003d String.format(lineFormat,\n        (stat.isDirectory() ? \"d\" : \"-\"),\n        stat.getPermission() + (stat.getPermission().getAclBit() ? \"+\" : \" \"),\n        (stat.isFile() ? stat.getReplication() : \"-\"),\n        stat.getOwner(),\n        stat.getGroup(),\n        formatSize(stat.getLen()),\n        dateFormat.format(new Date(isUseAtime()\n            ? stat.getAccessTime()\n            : stat.getModificationTime())),\n        isHideNonPrintable() ? new PrintableString(item.toString()) : item);\n    out.println(line);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "3b50dcdce4ffe3d4e5892fca84909ff22be28739": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10971. Add -C flag to make `hadoop fs -ls` print filenames only. Contributed by Kengo Seki.\n",
      "commitDate": "19/05/15 1:25 AM",
      "commitName": "3b50dcdce4ffe3d4e5892fca84909ff22be28739",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "11/02/15 7:49 AM",
      "commitNameOld": "b015fec6011586784fd6f4791a0c1c22e3902046",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 96.69,
      "commitsBetweenForRepo": 946,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,19 @@\n   protected void processPath(PathData item) throws IOException {\n+    if (pathOnly) {\n+      out.println(item.toString());\n+      return;\n+    }\n     FileStatus stat \u003d item.stat;\n     String line \u003d String.format(lineFormat,\n         (stat.isDirectory() ? \"d\" : \"-\"),\n         stat.getPermission() + (stat.getPermission().getAclBit() ? \"+\" : \" \"),\n         (stat.isFile() ? stat.getReplication() : \"-\"),\n         stat.getOwner(),\n         stat.getGroup(),\n         formatSize(stat.getLen()),\n         dateFormat.format(new Date(isUseAtime()\n             ? stat.getAccessTime()\n             : stat.getModificationTime())),\n         item);\n     out.println(line);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    if (pathOnly) {\n      out.println(item.toString());\n      return;\n    }\n    FileStatus stat \u003d item.stat;\n    String line \u003d String.format(lineFormat,\n        (stat.isDirectory() ? \"d\" : \"-\"),\n        stat.getPermission() + (stat.getPermission().getAclBit() ? \"+\" : \" \"),\n        (stat.isFile() ? stat.getReplication() : \"-\"),\n        stat.getOwner(),\n        stat.getGroup(),\n        formatSize(stat.getLen()),\n        dateFormat.format(new Date(isUseAtime()\n            ? stat.getAccessTime()\n            : stat.getModificationTime())),\n        item);\n    out.println(line);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "30b797ee9df30260314eeadffc7d51492871b352": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8934. Shell command ls should include sort options (Jonathan Allen via aw)\n",
      "commitDate": "09/02/15 12:50 PM",
      "commitName": "30b797ee9df30260314eeadffc7d51492871b352",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "10/12/14 12:44 PM",
      "commitNameOld": "bbd6a3277678a60d472e76a207f25a916220946c",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 61.0,
      "commitsBetweenForRepo": 398,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   protected void processPath(PathData item) throws IOException {\n     FileStatus stat \u003d item.stat;\n     String line \u003d String.format(lineFormat,\n         (stat.isDirectory() ? \"d\" : \"-\"),\n         stat.getPermission() + (stat.getPermission().getAclBit() ? \"+\" : \" \"),\n         (stat.isFile() ? stat.getReplication() : \"-\"),\n         stat.getOwner(),\n         stat.getGroup(),\n         formatSize(stat.getLen()),\n-        dateFormat.format(new Date(stat.getModificationTime())),\n-        item\n-    );\n+        dateFormat.format(new Date(isUseAtime()\n+            ? stat.getAccessTime()\n+            : stat.getModificationTime())),\n+        item);\n     out.println(line);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    FileStatus stat \u003d item.stat;\n    String line \u003d String.format(lineFormat,\n        (stat.isDirectory() ? \"d\" : \"-\"),\n        stat.getPermission() + (stat.getPermission().getAclBit() ? \"+\" : \" \"),\n        (stat.isFile() ? stat.getReplication() : \"-\"),\n        stat.getOwner(),\n        stat.getGroup(),\n        formatSize(stat.getLen()),\n        dateFormat.format(new Date(isUseAtime()\n            ? stat.getAccessTime()\n            : stat.getModificationTime())),\n        item);\n    out.println(line);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "65158e478f135ec051c1939bd5f371818365dffd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6326. WebHdfs ACL compatibility is broken. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594743 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/05/14 3:35 PM",
      "commitName": "65158e478f135ec051c1939bd5f371818365dffd",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "04/03/14 4:01 PM",
      "commitNameOld": "53768eccf3e34814173ab1ef0952b9ee561f5077",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 70.94,
      "commitsBetweenForRepo": 479,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   protected void processPath(PathData item) throws IOException {\n     FileStatus stat \u003d item.stat;\n     String line \u003d String.format(lineFormat,\n         (stat.isDirectory() ? \"d\" : \"-\"),\n-        stat.getPermission() + (hasAcl(item) ? \"+\" : \" \"),\n+        stat.getPermission() + (stat.getPermission().getAclBit() ? \"+\" : \" \"),\n         (stat.isFile() ? stat.getReplication() : \"-\"),\n         stat.getOwner(),\n         stat.getGroup(),\n         formatSize(stat.getLen()),\n         dateFormat.format(new Date(stat.getModificationTime())),\n         item\n     );\n     out.println(line);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    FileStatus stat \u003d item.stat;\n    String line \u003d String.format(lineFormat,\n        (stat.isDirectory() ? \"d\" : \"-\"),\n        stat.getPermission() + (stat.getPermission().getAclBit() ? \"+\" : \" \"),\n        (stat.isFile() ? stat.getReplication() : \"-\"),\n        stat.getOwner(),\n        stat.getGroup(),\n        formatSize(stat.getLen()),\n        dateFormat.format(new Date(stat.getModificationTime())),\n        item\n    );\n    out.println(line);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "d5639c85fb92a666abebd75390bad8b7fdd9df50": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10361. Correct alignment in CLI output for ACLs. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1571573 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/02/14 9:54 PM",
      "commitName": "d5639c85fb92a666abebd75390bad8b7fdd9df50",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "12/02/14 9:51 PM",
      "commitNameOld": "9ee7c2a0774eb07b1d7ee40aa89659c5c0a6346e",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 12.0,
      "commitsBetweenForRepo": 90,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   protected void processPath(PathData item) throws IOException {\n     FileStatus stat \u003d item.stat;\n     String line \u003d String.format(lineFormat,\n         (stat.isDirectory() ? \"d\" : \"-\"),\n-        stat.getPermission() + (hasAcl(item) ? \"+\" : \"\"),\n+        stat.getPermission() + (hasAcl(item) ? \"+\" : \" \"),\n         (stat.isFile() ? stat.getReplication() : \"-\"),\n         stat.getOwner(),\n         stat.getGroup(),\n         formatSize(stat.getLen()),\n         dateFormat.format(new Date(stat.getModificationTime())),\n         item\n     );\n     out.println(line);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    FileStatus stat \u003d item.stat;\n    String line \u003d String.format(lineFormat,\n        (stat.isDirectory() ? \"d\" : \"-\"),\n        stat.getPermission() + (hasAcl(item) ? \"+\" : \" \"),\n        (stat.isFile() ? stat.getReplication() : \"-\"),\n        stat.getOwner(),\n        stat.getGroup(),\n        formatSize(stat.getLen()),\n        dateFormat.format(new Date(stat.getModificationTime())),\n        item\n    );\n    out.println(line);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "9ee7c2a0774eb07b1d7ee40aa89659c5c0a6346e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5932. Ls should display the ACL bit. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1567850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/02/14 9:51 PM",
      "commitName": "9ee7c2a0774eb07b1d7ee40aa89659c5c0a6346e",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "21/01/14 1:20 PM",
      "commitNameOld": "21a5bc7f2c5d5973255e31ea7588712b7a3bec99",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 22.35,
      "commitsBetweenForRepo": 169,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   protected void processPath(PathData item) throws IOException {\n     FileStatus stat \u003d item.stat;\n     String line \u003d String.format(lineFormat,\n         (stat.isDirectory() ? \"d\" : \"-\"),\n-        stat.getPermission(),\n+        stat.getPermission() + (hasAcl(item) ? \"+\" : \"\"),\n         (stat.isFile() ? stat.getReplication() : \"-\"),\n         stat.getOwner(),\n         stat.getGroup(),\n         formatSize(stat.getLen()),\n         dateFormat.format(new Date(stat.getModificationTime())),\n         item\n     );\n     out.println(line);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    FileStatus stat \u003d item.stat;\n    String line \u003d String.format(lineFormat,\n        (stat.isDirectory() ? \"d\" : \"-\"),\n        stat.getPermission() + (hasAcl(item) ? \"+\" : \"\"),\n        (stat.isFile() ? stat.getReplication() : \"-\"),\n        stat.getOwner(),\n        stat.getGroup(),\n        formatSize(stat.getLen()),\n        dateFormat.format(new Date(stat.getModificationTime())),\n        item\n    );\n    out.println(line);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "659ea4c540e440004d9f1a7dedefa91c0bec8b04": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7360. Preserve relative paths that do not contain globs in FsShell.  Contributed by Daryn Sharp and Kihwal Lee \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190109 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 6:13 PM",
      "commitName": "659ea4c540e440004d9f1a7dedefa91c0bec8b04",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 64.04,
      "commitsBetweenForRepo": 467,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   protected void processPath(PathData item) throws IOException {\n     FileStatus stat \u003d item.stat;\n     String line \u003d String.format(lineFormat,\n         (stat.isDirectory() ? \"d\" : \"-\"),\n         stat.getPermission(),\n         (stat.isFile() ? stat.getReplication() : \"-\"),\n         stat.getOwner(),\n         stat.getGroup(),\n         formatSize(stat.getLen()),\n         dateFormat.format(new Date(stat.getModificationTime())),\n-        item.path.toUri().getPath()\n+        item\n     );\n     out.println(line);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    FileStatus stat \u003d item.stat;\n    String line \u003d String.format(lineFormat,\n        (stat.isDirectory() ? \"d\" : \"-\"),\n        stat.getPermission(),\n        (stat.isFile() ? stat.getReplication() : \"-\"),\n        stat.getOwner(),\n        stat.getGroup(),\n        formatSize(stat.getLen()),\n        dateFormat.format(new Date(stat.getModificationTime())),\n        item\n    );\n    out.println(line);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    FileStatus stat \u003d item.stat;\n    String line \u003d String.format(lineFormat,\n        (stat.isDirectory() ? \"d\" : \"-\"),\n        stat.getPermission(),\n        (stat.isFile() ? stat.getReplication() : \"-\"),\n        stat.getOwner(),\n        stat.getGroup(),\n        formatSize(stat.getLen()),\n        dateFormat.format(new Date(stat.getModificationTime())),\n        item.path.toUri().getPath()\n    );\n    out.println(line);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    FileStatus stat \u003d item.stat;\n    String line \u003d String.format(lineFormat,\n        (stat.isDirectory() ? \"d\" : \"-\"),\n        stat.getPermission(),\n        (stat.isFile() ? stat.getReplication() : \"-\"),\n        stat.getOwner(),\n        stat.getGroup(),\n        formatSize(stat.getLen()),\n        dateFormat.format(new Date(stat.getModificationTime())),\n        item.path.toUri().getPath()\n    );\n    out.println(line);\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/shell/Ls.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Ls.java"
      }
    },
    "5dbd26f2c7ac7f08b20d41b0f89ab3500649783b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7485. Add -h option to ls to list file sizes in human readable format. Contributed by XieXianshan.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1151505 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/07/11 8:35 AM",
      "commitName": "5dbd26f2c7ac7f08b20d41b0f89ab3500649783b",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "12/06/11 3:00 PM",
      "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 44.73,
      "commitsBetweenForRepo": 154,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   protected void processPath(PathData item) throws IOException {\n     FileStatus stat \u003d item.stat;\n     String line \u003d String.format(lineFormat,\n         (stat.isDirectory() ? \"d\" : \"-\"),\n         stat.getPermission(),\n         (stat.isFile() ? stat.getReplication() : \"-\"),\n         stat.getOwner(),\n         stat.getGroup(),\n-        stat.getLen(),\n+        formatSize(stat.getLen()),\n         dateFormat.format(new Date(stat.getModificationTime())),\n         item.path.toUri().getPath()\n     );\n     out.println(line);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    FileStatus stat \u003d item.stat;\n    String line \u003d String.format(lineFormat,\n        (stat.isDirectory() ? \"d\" : \"-\"),\n        stat.getPermission(),\n        (stat.isFile() ? stat.getReplication() : \"-\"),\n        stat.getOwner(),\n        stat.getGroup(),\n        formatSize(stat.getLen()),\n        dateFormat.format(new Date(stat.getModificationTime())),\n        item.path.toUri().getPath()\n    );\n    out.println(line);\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    FileStatus stat \u003d item.stat;\n    String line \u003d String.format(lineFormat,\n        (stat.isDirectory() ? \"d\" : \"-\"),\n        stat.getPermission(),\n        (stat.isFile() ? stat.getReplication() : \"-\"),\n        stat.getOwner(),\n        stat.getGroup(),\n        stat.getLen(),\n        dateFormat.format(new Date(stat.getModificationTime())),\n        item.path.toUri().getPath()\n    );\n    out.println(line);\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/shell/Ls.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/shell/Ls.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/shell/Ls.java"
      }
    },
    "99ebad8e757e90f6e036fc213d99f82dec7b80d7": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7233. Refactor ls to conform to new FsCommand class.  Contributed by Daryn Sharp\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1095761 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/04/11 9:05 AM",
      "commitName": "99ebad8e757e90f6e036fc213d99f82dec7b80d7",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,14 @@\n+  protected void processPath(PathData item) throws IOException {\n+    FileStatus stat \u003d item.stat;\n+    String line \u003d String.format(lineFormat,\n+        (stat.isDirectory() ? \"d\" : \"-\"),\n+        stat.getPermission(),\n+        (stat.isFile() ? stat.getReplication() : \"-\"),\n+        stat.getOwner(),\n+        stat.getGroup(),\n+        stat.getLen(),\n+        dateFormat.format(new Date(stat.getModificationTime())),\n+        item.path.toUri().getPath()\n+    );\n+    out.println(line);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processPath(PathData item) throws IOException {\n    FileStatus stat \u003d item.stat;\n    String line \u003d String.format(lineFormat,\n        (stat.isDirectory() ? \"d\" : \"-\"),\n        stat.getPermission(),\n        (stat.isFile() ? stat.getReplication() : \"-\"),\n        stat.getOwner(),\n        stat.getGroup(),\n        stat.getLen(),\n        dateFormat.format(new Date(stat.getModificationTime())),\n        item.path.toUri().getPath()\n    );\n    out.println(line);\n  }",
      "path": "src/java/org/apache/hadoop/fs/shell/Ls.java"
    }
  }
}