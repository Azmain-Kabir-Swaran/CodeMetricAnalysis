{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Diff.java",
  "functionName": "accessPrevious",
  "functionId": "accessPrevious___name-K(modifiers-final)__clist-List__E__(modifiers-final)__dlist-List__E__(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/Diff.java",
  "functionStartLine": 383,
  "functionEndLine": 394,
  "numCommitsSeen": 34,
  "timeTaken": 2559,
  "changeHistory": [
    "43f8d0b9c9e209eb503451613c2f8d3fed07c203",
    "a3bf2083867db5d848ea14f145d120f02b820af2",
    "cbbaa93ae09bf5cf643263faf78f99315c4f3a8d",
    "e5a7b3d4307951f0574c2341178e3cd95e69f7b7"
  ],
  "changeHistoryShort": {
    "43f8d0b9c9e209eb503451613c2f8d3fed07c203": "Yfilerename",
    "a3bf2083867db5d848ea14f145d120f02b820af2": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yparameterchange)",
    "cbbaa93ae09bf5cf643263faf78f99315c4f3a8d": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "e5a7b3d4307951f0574c2341178e3cd95e69f7b7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "43f8d0b9c9e209eb503451613c2f8d3fed07c203": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-4574. Move Diff to the util package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1454988 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/03/13 8:45 PM",
      "commitName": "43f8d0b9c9e209eb503451613c2f8d3fed07c203",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "09/03/13 10:14 AM",
      "commitNameOld": "d32fb8a62b323a21228d864ce0e859464fb1f160",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 1.4,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e Container\u003cE\u003e accessPrevious(\n      final K name, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n    final int d \u003d search(dlist, name);\n    if (d \u003e\u003d 0) {\n      // the element was in previous and was once deleted in current.\n      return new Container\u003cE\u003e(dlist.get(d));\n    } else {\n      final int c \u003d search(clist, name);\n      // When c \u003e\u003d 0, the element in current is a newly created element.\n      return c \u003c 0? null: new Container\u003cE\u003e(null);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/Diff.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/diff/Diff.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/Diff.java"
      }
    },
    "a3bf2083867db5d848ea14f145d120f02b820af2": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-4441. Move INodeDirectoryWithSnapshot.Diff and the related classes to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1438782 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/13 4:01 PM",
      "commitName": "a3bf2083867db5d848ea14f145d120f02b820af2",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-4441. Move INodeDirectoryWithSnapshot.Diff and the related classes to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1438782 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/01/13 4:01 PM",
          "commitName": "a3bf2083867db5d848ea14f145d120f02b820af2",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "24/01/13 7:13 PM",
          "commitNameOld": "569d63d36cfc1744288b9ad756c0ff7d762f1549",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.87,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    private static INode[] accessPrevious(byte[] name,\n-        final List\u003cINode\u003e clist, final List\u003cINode\u003e dlist) {\n-      final int d \u003d search(dlist, name);\n-      if (d \u003e\u003d 0) {\n-        // the inode was in previous and was once deleted in current.\n-        return new INode[]{dlist.get(d)};\n-      } else {\n-        final int c \u003d search(clist, name);\n-        // When c \u003e\u003d 0, the inode in current is a newly created inode.\n-        return c \u003e\u003d 0? new INode[]{null}: null;\n-      }\n-    }\n\\ No newline at end of file\n+  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e Container\u003cE\u003e accessPrevious(\n+      final K name, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n+    final int d \u003d search(dlist, name);\n+    if (d \u003e\u003d 0) {\n+      // the element was in previous and was once deleted in current.\n+      return new Container\u003cE\u003e(dlist.get(d));\n+    } else {\n+      final int c \u003d search(clist, name);\n+      // When c \u003e\u003d 0, the element in current is a newly created element.\n+      return c \u003c 0? null: new Container\u003cE\u003e(null);\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e Container\u003cE\u003e accessPrevious(\n      final K name, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n    final int d \u003d search(dlist, name);\n    if (d \u003e\u003d 0) {\n      // the element was in previous and was once deleted in current.\n      return new Container\u003cE\u003e(dlist.get(d));\n    } else {\n      final int c \u003d search(clist, name);\n      // When c \u003e\u003d 0, the element in current is a newly created element.\n      return c \u003c 0? null: new Container\u003cE\u003e(null);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/diff/Diff.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectoryWithSnapshot.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/diff/Diff.java",
            "oldMethodName": "accessPrevious",
            "newMethodName": "accessPrevious"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-4441. Move INodeDirectoryWithSnapshot.Diff and the related classes to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1438782 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/01/13 4:01 PM",
          "commitName": "a3bf2083867db5d848ea14f145d120f02b820af2",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "24/01/13 7:13 PM",
          "commitNameOld": "569d63d36cfc1744288b9ad756c0ff7d762f1549",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.87,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    private static INode[] accessPrevious(byte[] name,\n-        final List\u003cINode\u003e clist, final List\u003cINode\u003e dlist) {\n-      final int d \u003d search(dlist, name);\n-      if (d \u003e\u003d 0) {\n-        // the inode was in previous and was once deleted in current.\n-        return new INode[]{dlist.get(d)};\n-      } else {\n-        final int c \u003d search(clist, name);\n-        // When c \u003e\u003d 0, the inode in current is a newly created inode.\n-        return c \u003e\u003d 0? new INode[]{null}: null;\n-      }\n-    }\n\\ No newline at end of file\n+  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e Container\u003cE\u003e accessPrevious(\n+      final K name, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n+    final int d \u003d search(dlist, name);\n+    if (d \u003e\u003d 0) {\n+      // the element was in previous and was once deleted in current.\n+      return new Container\u003cE\u003e(dlist.get(d));\n+    } else {\n+      final int c \u003d search(clist, name);\n+      // When c \u003e\u003d 0, the element in current is a newly created element.\n+      return c \u003c 0? null: new Container\u003cE\u003e(null);\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e Container\u003cE\u003e accessPrevious(\n      final K name, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n    final int d \u003d search(dlist, name);\n    if (d \u003e\u003d 0) {\n      // the element was in previous and was once deleted in current.\n      return new Container\u003cE\u003e(dlist.get(d));\n    } else {\n      final int c \u003d search(clist, name);\n      // When c \u003e\u003d 0, the element in current is a newly created element.\n      return c \u003c 0? null: new Container\u003cE\u003e(null);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/diff/Diff.java",
          "extendedDetails": {
            "oldValue": "INode[]",
            "newValue": "Container\u003cE\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4441. Move INodeDirectoryWithSnapshot.Diff and the related classes to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1438782 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/01/13 4:01 PM",
          "commitName": "a3bf2083867db5d848ea14f145d120f02b820af2",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "24/01/13 7:13 PM",
          "commitNameOld": "569d63d36cfc1744288b9ad756c0ff7d762f1549",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.87,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    private static INode[] accessPrevious(byte[] name,\n-        final List\u003cINode\u003e clist, final List\u003cINode\u003e dlist) {\n-      final int d \u003d search(dlist, name);\n-      if (d \u003e\u003d 0) {\n-        // the inode was in previous and was once deleted in current.\n-        return new INode[]{dlist.get(d)};\n-      } else {\n-        final int c \u003d search(clist, name);\n-        // When c \u003e\u003d 0, the inode in current is a newly created inode.\n-        return c \u003e\u003d 0? new INode[]{null}: null;\n-      }\n-    }\n\\ No newline at end of file\n+  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e Container\u003cE\u003e accessPrevious(\n+      final K name, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n+    final int d \u003d search(dlist, name);\n+    if (d \u003e\u003d 0) {\n+      // the element was in previous and was once deleted in current.\n+      return new Container\u003cE\u003e(dlist.get(d));\n+    } else {\n+      final int c \u003d search(clist, name);\n+      // When c \u003e\u003d 0, the element in current is a newly created element.\n+      return c \u003c 0? null: new Container\u003cE\u003e(null);\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e Container\u003cE\u003e accessPrevious(\n      final K name, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n    final int d \u003d search(dlist, name);\n    if (d \u003e\u003d 0) {\n      // the element was in previous and was once deleted in current.\n      return new Container\u003cE\u003e(dlist.get(d));\n    } else {\n      final int c \u003d search(clist, name);\n      // When c \u003e\u003d 0, the element in current is a newly created element.\n      return c \u003c 0? null: new Container\u003cE\u003e(null);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/diff/Diff.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4441. Move INodeDirectoryWithSnapshot.Diff and the related classes to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1438782 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/01/13 4:01 PM",
          "commitName": "a3bf2083867db5d848ea14f145d120f02b820af2",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "24/01/13 7:13 PM",
          "commitNameOld": "569d63d36cfc1744288b9ad756c0ff7d762f1549",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.87,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    private static INode[] accessPrevious(byte[] name,\n-        final List\u003cINode\u003e clist, final List\u003cINode\u003e dlist) {\n-      final int d \u003d search(dlist, name);\n-      if (d \u003e\u003d 0) {\n-        // the inode was in previous and was once deleted in current.\n-        return new INode[]{dlist.get(d)};\n-      } else {\n-        final int c \u003d search(clist, name);\n-        // When c \u003e\u003d 0, the inode in current is a newly created inode.\n-        return c \u003e\u003d 0? new INode[]{null}: null;\n-      }\n-    }\n\\ No newline at end of file\n+  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e Container\u003cE\u003e accessPrevious(\n+      final K name, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n+    final int d \u003d search(dlist, name);\n+    if (d \u003e\u003d 0) {\n+      // the element was in previous and was once deleted in current.\n+      return new Container\u003cE\u003e(dlist.get(d));\n+    } else {\n+      final int c \u003d search(clist, name);\n+      // When c \u003e\u003d 0, the element in current is a newly created element.\n+      return c \u003c 0? null: new Container\u003cE\u003e(null);\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e Container\u003cE\u003e accessPrevious(\n      final K name, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n    final int d \u003d search(dlist, name);\n    if (d \u003e\u003d 0) {\n      // the element was in previous and was once deleted in current.\n      return new Container\u003cE\u003e(dlist.get(d));\n    } else {\n      final int c \u003d search(clist, name);\n      // When c \u003e\u003d 0, the element in current is a newly created element.\n      return c \u003c 0? null: new Container\u003cE\u003e(null);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/diff/Diff.java",
          "extendedDetails": {
            "oldValue": "[name-byte[], clist-List\u003cINode\u003e(modifiers-final), dlist-List\u003cINode\u003e(modifiers-final)]",
            "newValue": "[name-K(modifiers-final), clist-List\u003cE\u003e(modifiers-final), dlist-List\u003cE\u003e(modifiers-final)]"
          }
        }
      ]
    },
    "cbbaa93ae09bf5cf643263faf78f99315c4f3a8d": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-4317. Change INode and its subclasses to support HDFS-4103.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1422748 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/12/12 7:40 PM",
      "commitName": "cbbaa93ae09bf5cf643263faf78f99315c4f3a8d",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4317. Change INode and its subclasses to support HDFS-4103.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1422748 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/12/12 7:40 PM",
          "commitName": "cbbaa93ae09bf5cf643263faf78f99315c4f3a8d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "03/12/12 2:43 PM",
          "commitNameOld": "9821af9ce8a56a2c583f1ed938902c20e897048f",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 13.21,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    private static INode accessPrevious(byte[] name, INode inodeInCurrent,\n+    private static INode[] accessPrevious(byte[] name,\n         final List\u003cINode\u003e clist, final List\u003cINode\u003e dlist) {\n       final int d \u003d search(dlist, name);\n       if (d \u003e\u003d 0) {\n         // the inode was in previous and was once deleted in current.\n-        return dlist.get(d);\n+        return new INode[]{dlist.get(d)};\n       } else {\n         final int c \u003d search(clist, name);\n         // When c \u003e\u003d 0, the inode in current is a newly created inode.\n-        return c \u003e\u003d 0? null: inodeInCurrent;\n+        return c \u003e\u003d 0? new INode[]{null}: null;\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static INode[] accessPrevious(byte[] name,\n        final List\u003cINode\u003e clist, final List\u003cINode\u003e dlist) {\n      final int d \u003d search(dlist, name);\n      if (d \u003e\u003d 0) {\n        // the inode was in previous and was once deleted in current.\n        return new INode[]{dlist.get(d)};\n      } else {\n        final int c \u003d search(clist, name);\n        // When c \u003e\u003d 0, the inode in current is a newly created inode.\n        return c \u003e\u003d 0? new INode[]{null}: null;\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectoryWithSnapshot.java",
          "extendedDetails": {
            "oldValue": "[name-byte[], inodeInCurrent-INode, clist-List\u003cINode\u003e(modifiers-final), dlist-List\u003cINode\u003e(modifiers-final)]",
            "newValue": "[name-byte[], clist-List\u003cINode\u003e(modifiers-final), dlist-List\u003cINode\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-4317. Change INode and its subclasses to support HDFS-4103.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1422748 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/12/12 7:40 PM",
          "commitName": "cbbaa93ae09bf5cf643263faf78f99315c4f3a8d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "03/12/12 2:43 PM",
          "commitNameOld": "9821af9ce8a56a2c583f1ed938902c20e897048f",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 13.21,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    private static INode accessPrevious(byte[] name, INode inodeInCurrent,\n+    private static INode[] accessPrevious(byte[] name,\n         final List\u003cINode\u003e clist, final List\u003cINode\u003e dlist) {\n       final int d \u003d search(dlist, name);\n       if (d \u003e\u003d 0) {\n         // the inode was in previous and was once deleted in current.\n-        return dlist.get(d);\n+        return new INode[]{dlist.get(d)};\n       } else {\n         final int c \u003d search(clist, name);\n         // When c \u003e\u003d 0, the inode in current is a newly created inode.\n-        return c \u003e\u003d 0? null: inodeInCurrent;\n+        return c \u003e\u003d 0? new INode[]{null}: null;\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static INode[] accessPrevious(byte[] name,\n        final List\u003cINode\u003e clist, final List\u003cINode\u003e dlist) {\n      final int d \u003d search(dlist, name);\n      if (d \u003e\u003d 0) {\n        // the inode was in previous and was once deleted in current.\n        return new INode[]{dlist.get(d)};\n      } else {\n        final int c \u003d search(clist, name);\n        // When c \u003e\u003d 0, the inode in current is a newly created inode.\n        return c \u003e\u003d 0? new INode[]{null}: null;\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectoryWithSnapshot.java",
          "extendedDetails": {
            "oldValue": "INode",
            "newValue": "INode[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4317. Change INode and its subclasses to support HDFS-4103.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1422748 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/12/12 7:40 PM",
          "commitName": "cbbaa93ae09bf5cf643263faf78f99315c4f3a8d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "03/12/12 2:43 PM",
          "commitNameOld": "9821af9ce8a56a2c583f1ed938902c20e897048f",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 13.21,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    private static INode accessPrevious(byte[] name, INode inodeInCurrent,\n+    private static INode[] accessPrevious(byte[] name,\n         final List\u003cINode\u003e clist, final List\u003cINode\u003e dlist) {\n       final int d \u003d search(dlist, name);\n       if (d \u003e\u003d 0) {\n         // the inode was in previous and was once deleted in current.\n-        return dlist.get(d);\n+        return new INode[]{dlist.get(d)};\n       } else {\n         final int c \u003d search(clist, name);\n         // When c \u003e\u003d 0, the inode in current is a newly created inode.\n-        return c \u003e\u003d 0? null: inodeInCurrent;\n+        return c \u003e\u003d 0? new INode[]{null}: null;\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static INode[] accessPrevious(byte[] name,\n        final List\u003cINode\u003e clist, final List\u003cINode\u003e dlist) {\n      final int d \u003d search(dlist, name);\n      if (d \u003e\u003d 0) {\n        // the inode was in previous and was once deleted in current.\n        return new INode[]{dlist.get(d)};\n      } else {\n        final int c \u003d search(clist, name);\n        // When c \u003e\u003d 0, the inode in current is a newly created inode.\n        return c \u003e\u003d 0? new INode[]{null}: null;\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectoryWithSnapshot.java",
          "extendedDetails": {}
        }
      ]
    },
    "e5a7b3d4307951f0574c2341178e3cd95e69f7b7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4141. Support directory diff - the difference between the current state and a previous snapshot of an INodeDirectory.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1405250 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/11/12 6:31 PM",
      "commitName": "e5a7b3d4307951f0574c2341178e3cd95e69f7b7",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,12 @@\n+    private static INode accessPrevious(byte[] name, INode inodeInCurrent,\n+        final List\u003cINode\u003e clist, final List\u003cINode\u003e dlist) {\n+      final int d \u003d search(dlist, name);\n+      if (d \u003e\u003d 0) {\n+        // the inode was in previous and was once deleted in current.\n+        return dlist.get(d);\n+      } else {\n+        final int c \u003d search(clist, name);\n+        // When c \u003e\u003d 0, the inode in current is a newly created inode.\n+        return c \u003e\u003d 0? null: inodeInCurrent;\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static INode accessPrevious(byte[] name, INode inodeInCurrent,\n        final List\u003cINode\u003e clist, final List\u003cINode\u003e dlist) {\n      final int d \u003d search(dlist, name);\n      if (d \u003e\u003d 0) {\n        // the inode was in previous and was once deleted in current.\n        return dlist.get(d);\n      } else {\n        final int c \u003d search(clist, name);\n        // When c \u003e\u003d 0, the inode in current is a newly created inode.\n        return c \u003e\u003d 0? null: inodeInCurrent;\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectoryWithSnapshot.java"
    }
  }
}