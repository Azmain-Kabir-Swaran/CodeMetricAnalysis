{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppSchedulingInfo.java",
  "functionName": "stop",
  "functionId": "stop",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
  "functionStartLine": 633,
  "functionEndLine": 659,
  "numCommitsSeen": 119,
  "timeTaken": 12010,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
    "e9c2aa1bc383cb08784846534415bf17667d6e41",
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a",
    "9ca54f4810de182195263bd594afb56dab564105",
    "1831be8e737fd423a9f3d590767b944147e85641",
    "4e4b3a8465a8433e78e015cb1ce7e0dc1ebeb523",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434",
    "586348e4cbf197188057d6b843a6701cfffdaff3",
    "981679e6d7650141fc8737c7e13b16d8b795b408",
    "f677175f35f68bde9df72e648dffacbd31cfd620",
    "520033b1cd81c76b38fcdcfcfeed16158db4bbba",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949": "Ybodychange",
    "e9c2aa1bc383cb08784846534415bf17667d6e41": "Ybodychange",
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a": "Ybodychange",
    "9ca54f4810de182195263bd594afb56dab564105": "Ybodychange",
    "1831be8e737fd423a9f3d590767b944147e85641": "Ymultichange(Ymodifierchange,Ybodychange)",
    "4e4b3a8465a8433e78e015cb1ce7e0dc1ebeb523": "Yparameterchange",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": "Ybodychange",
    "586348e4cbf197188057d6b843a6701cfffdaff3": "Ybodychange",
    "981679e6d7650141fc8737c7e13b16d8b795b408": "Ybodychange",
    "f677175f35f68bde9df72e648dffacbd31cfd620": "Ybodychange",
    "520033b1cd81c76b38fcdcfcfeed16158db4bbba": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public void stop() {\n     // clear pending resources metrics for the application\n+    this.writeLock.lock();\n     try {\n-      this.writeLock.lock();\n       QueueMetrics metrics \u003d queue.getMetrics();\n       for (AppPlacementAllocator ap : schedulerKeyToAppPlacementAllocator\n           .values()) {\n         PendingAsk ask \u003d ap.getPendingAsk(ResourceRequest.ANY);\n         if (ask.getCount() \u003e 0) {\n           metrics.decrPendingResources(ap.getPrimaryRequestedNodePartition(),\n               user, ask.getCount(), ask.getPerAllocationResource());\n \n           // Update Queue\n           queue.decPendingResource(\n               ap.getPrimaryRequestedNodePartition(),\n               Resources.multiply(ask.getPerAllocationResource(),\n                   ask.getCount()));\n         }\n       }\n       metrics.finishAppAttempt(applicationId, pending, user);\n \n       // Clear requests themselves\n       clearRequests();\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() {\n    // clear pending resources metrics for the application\n    this.writeLock.lock();\n    try {\n      QueueMetrics metrics \u003d queue.getMetrics();\n      for (AppPlacementAllocator ap : schedulerKeyToAppPlacementAllocator\n          .values()) {\n        PendingAsk ask \u003d ap.getPendingAsk(ResourceRequest.ANY);\n        if (ask.getCount() \u003e 0) {\n          metrics.decrPendingResources(ap.getPrimaryRequestedNodePartition(),\n              user, ask.getCount(), ask.getPerAllocationResource());\n\n          // Update Queue\n          queue.decPendingResource(\n              ap.getPrimaryRequestedNodePartition(),\n              Resources.multiply(ask.getPerAllocationResource(),\n                  ask.getCount()));\n        }\n      }\n      metrics.finishAppAttempt(applicationId, pending, user);\n\n      // Clear requests themselves\n      clearRequests();\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {}
    },
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7437. Rename PlacementSet and SchedulingPlacementSet. (Wangda Tan via kkaranasos)\n",
      "commitDate": "09/11/17 1:01 PM",
      "commitName": "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
      "commitAuthor": "Konstantinos Karanasos",
      "commitDateOld": "08/09/17 9:24 AM",
      "commitNameOld": "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 62.19,
      "commitsBetweenForRepo": 599,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   public void stop() {\n     // clear pending resources metrics for the application\n     try {\n       this.writeLock.lock();\n       QueueMetrics metrics \u003d queue.getMetrics();\n-      for (SchedulingPlacementSet ps : schedulerKeyToPlacementSets.values()) {\n-        PendingAsk ask \u003d ps.getPendingAsk(ResourceRequest.ANY);\n+      for (AppPlacementAllocator ap : schedulerKeyToAppPlacementAllocator\n+          .values()) {\n+        PendingAsk ask \u003d ap.getPendingAsk(ResourceRequest.ANY);\n         if (ask.getCount() \u003e 0) {\n-          metrics.decrPendingResources(ps.getPrimaryRequestedNodePartition(),\n+          metrics.decrPendingResources(ap.getPrimaryRequestedNodePartition(),\n               user, ask.getCount(), ask.getPerAllocationResource());\n \n           // Update Queue\n           queue.decPendingResource(\n-              ps.getPrimaryRequestedNodePartition(),\n+              ap.getPrimaryRequestedNodePartition(),\n               Resources.multiply(ask.getPerAllocationResource(),\n                   ask.getCount()));\n         }\n       }\n       metrics.finishAppAttempt(applicationId, pending, user);\n \n       // Clear requests themselves\n       clearRequests();\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() {\n    // clear pending resources metrics for the application\n    try {\n      this.writeLock.lock();\n      QueueMetrics metrics \u003d queue.getMetrics();\n      for (AppPlacementAllocator ap : schedulerKeyToAppPlacementAllocator\n          .values()) {\n        PendingAsk ask \u003d ap.getPendingAsk(ResourceRequest.ANY);\n        if (ask.getCount() \u003e 0) {\n          metrics.decrPendingResources(ap.getPrimaryRequestedNodePartition(),\n              user, ask.getCount(), ask.getPerAllocationResource());\n\n          // Update Queue\n          queue.decPendingResource(\n              ap.getPrimaryRequestedNodePartition(),\n              Resources.multiply(ask.getPerAllocationResource(),\n                  ask.getCount()));\n        }\n      }\n      metrics.finishAppAttempt(applicationId, pending, user);\n\n      // Clear requests themselves\n      clearRequests();\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {}
    },
    "e9c2aa1bc383cb08784846534415bf17667d6e41": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6467. CSQueueMetrics needs to update the current metrics for default partition only. Contributed by Manikandan R.\n",
      "commitDate": "19/06/17 9:01 AM",
      "commitName": "e9c2aa1bc383cb08784846534415bf17667d6e41",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "05/04/17 11:28 AM",
      "commitNameOld": "87e2ef8c985bb72a916477e8783359f2859f7890",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 74.9,
      "commitsBetweenForRepo": 382,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public void stop() {\n     // clear pending resources metrics for the application\n     try {\n       this.writeLock.lock();\n       QueueMetrics metrics \u003d queue.getMetrics();\n       for (SchedulingPlacementSet ps : schedulerKeyToPlacementSets.values()) {\n         PendingAsk ask \u003d ps.getPendingAsk(ResourceRequest.ANY);\n         if (ask.getCount() \u003e 0) {\n-          metrics.decrPendingResources(user, ask.getCount(),\n-              ask.getPerAllocationResource());\n+          metrics.decrPendingResources(ps.getPrimaryRequestedNodePartition(),\n+              user, ask.getCount(), ask.getPerAllocationResource());\n \n           // Update Queue\n           queue.decPendingResource(\n               ps.getPrimaryRequestedNodePartition(),\n               Resources.multiply(ask.getPerAllocationResource(),\n                   ask.getCount()));\n         }\n       }\n       metrics.finishAppAttempt(applicationId, pending, user);\n \n       // Clear requests themselves\n       clearRequests();\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() {\n    // clear pending resources metrics for the application\n    try {\n      this.writeLock.lock();\n      QueueMetrics metrics \u003d queue.getMetrics();\n      for (SchedulingPlacementSet ps : schedulerKeyToPlacementSets.values()) {\n        PendingAsk ask \u003d ps.getPendingAsk(ResourceRequest.ANY);\n        if (ask.getCount() \u003e 0) {\n          metrics.decrPendingResources(ps.getPrimaryRequestedNodePartition(),\n              user, ask.getCount(), ask.getPerAllocationResource());\n\n          // Update Queue\n          queue.decPendingResource(\n              ps.getPrimaryRequestedNodePartition(),\n              Resources.multiply(ask.getPerAllocationResource(),\n                  ask.getCount()));\n        }\n      }\n      metrics.finishAppAttempt(applicationId, pending, user);\n\n      // Clear requests themselves\n      clearRequests();\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {}
    },
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6040. Introduce api independent PendingAsk to replace usage of ResourceRequest within Scheduler classes. (Wangda Tan via asuresh)\n",
      "commitDate": "06/01/17 9:59 AM",
      "commitName": "2977bc6a141041ef7579efc416e93fc55e0c2a1a",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "05/01/17 10:31 AM",
      "commitNameOld": "0a55bd841ec0f2eb89a0383f4c589526e8b138d4",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.98,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public void stop() {\n     // clear pending resources metrics for the application\n     try {\n       this.writeLock.lock();\n       QueueMetrics metrics \u003d queue.getMetrics();\n       for (SchedulingPlacementSet ps : schedulerKeyToPlacementSets.values()) {\n-        ResourceRequest request \u003d ps.getResourceRequest(ResourceRequest.ANY);\n-        if (request !\u003d null \u0026\u0026 request.getNumContainers() \u003e 0) {\n-          metrics.decrPendingResources(user, request.getNumContainers(),\n-              request.getCapability());\n+        PendingAsk ask \u003d ps.getPendingAsk(ResourceRequest.ANY);\n+        if (ask.getCount() \u003e 0) {\n+          metrics.decrPendingResources(user, ask.getCount(),\n+              ask.getPerAllocationResource());\n \n           // Update Queue\n           queue.decPendingResource(\n-              request.getNodeLabelExpression(),\n-              Resources.multiply(request.getCapability(),\n-                  request.getNumContainers()));\n+              ps.getPrimaryRequestedNodePartition(),\n+              Resources.multiply(ask.getPerAllocationResource(),\n+                  ask.getCount()));\n         }\n       }\n       metrics.finishAppAttempt(applicationId, pending, user);\n \n       // Clear requests themselves\n       clearRequests();\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() {\n    // clear pending resources metrics for the application\n    try {\n      this.writeLock.lock();\n      QueueMetrics metrics \u003d queue.getMetrics();\n      for (SchedulingPlacementSet ps : schedulerKeyToPlacementSets.values()) {\n        PendingAsk ask \u003d ps.getPendingAsk(ResourceRequest.ANY);\n        if (ask.getCount() \u003e 0) {\n          metrics.decrPendingResources(user, ask.getCount(),\n              ask.getPerAllocationResource());\n\n          // Update Queue\n          queue.decPendingResource(\n              ps.getPrimaryRequestedNodePartition(),\n              Resources.multiply(ask.getPerAllocationResource(),\n                  ask.getCount()));\n        }\n      }\n      metrics.finishAppAttempt(applicationId, pending, user);\n\n      // Clear requests themselves\n      clearRequests();\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {}
    },
    "9ca54f4810de182195263bd594afb56dab564105": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5906. Update AppSchedulingInfo to use SchedulingPlacementSet. Contributed by Wangda Tan.\n",
      "commitDate": "28/12/16 9:18 AM",
      "commitName": "9ca54f4810de182195263bd594afb56dab564105",
      "commitAuthor": "Sunil G",
      "commitDateOld": "27/12/16 12:40 PM",
      "commitNameOld": "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.86,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public void stop() {\n     // clear pending resources metrics for the application\n     try {\n       this.writeLock.lock();\n       QueueMetrics metrics \u003d queue.getMetrics();\n-      for (Map\u003cString, ResourceRequest\u003e asks : resourceRequestMap.values()) {\n-        ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n-        if (request !\u003d null) {\n+      for (SchedulingPlacementSet ps : schedulerKeyToPlacementSets.values()) {\n+        ResourceRequest request \u003d ps.getResourceRequest(ResourceRequest.ANY);\n+        if (request !\u003d null \u0026\u0026 request.getNumContainers() \u003e 0) {\n           metrics.decrPendingResources(user, request.getNumContainers(),\n               request.getCapability());\n \n           // Update Queue\n           queue.decPendingResource(\n               request.getNodeLabelExpression(),\n               Resources.multiply(request.getCapability(),\n                   request.getNumContainers()));\n         }\n       }\n       metrics.finishAppAttempt(applicationId, pending, user);\n \n       // Clear requests themselves\n       clearRequests();\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stop() {\n    // clear pending resources metrics for the application\n    try {\n      this.writeLock.lock();\n      QueueMetrics metrics \u003d queue.getMetrics();\n      for (SchedulingPlacementSet ps : schedulerKeyToPlacementSets.values()) {\n        ResourceRequest request \u003d ps.getResourceRequest(ResourceRequest.ANY);\n        if (request !\u003d null \u0026\u0026 request.getNumContainers() \u003e 0) {\n          metrics.decrPendingResources(user, request.getNumContainers(),\n              request.getCapability());\n\n          // Update Queue\n          queue.decPendingResource(\n              request.getNodeLabelExpression(),\n              Resources.multiply(request.getCapability(),\n                  request.getNumContainers()));\n        }\n      }\n      metrics.finishAppAttempt(applicationId, pending, user);\n\n      // Clear requests themselves\n      clearRequests();\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {}
    },
    "1831be8e737fd423a9f3d590767b944147e85641": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3142. Improve locks in AppSchedulingInfo. (Varun Saxena via wangda)\n",
      "commitDate": "27/09/16 11:54 AM",
      "commitName": "1831be8e737fd423a9f3d590767b944147e85641",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3142. Improve locks in AppSchedulingInfo. (Varun Saxena via wangda)\n",
          "commitDate": "27/09/16 11:54 AM",
          "commitName": "1831be8e737fd423a9f3d590767b944147e85641",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "19/09/16 1:31 PM",
          "commitNameOld": "7558dbbb481eab055e794beb3603bbe5671a4b4c",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 7.93,
          "commitsBetweenForRepo": 48,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,26 @@\n-  public synchronized void stop() {\n+  public void stop() {\n     // clear pending resources metrics for the application\n-    QueueMetrics metrics \u003d queue.getMetrics();\n-    for (Map\u003cString, ResourceRequest\u003e asks : resourceRequestMap.values()) {\n-      ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n-      if (request !\u003d null) {\n-        metrics.decrPendingResources(user, request.getNumContainers(),\n-            request.getCapability());\n-        \n-        // Update Queue\n-        queue.decPendingResource(\n-            request.getNodeLabelExpression(),\n-            Resources.multiply(request.getCapability(),\n-                request.getNumContainers()));\n+    try {\n+      this.writeLock.lock();\n+      QueueMetrics metrics \u003d queue.getMetrics();\n+      for (Map\u003cString, ResourceRequest\u003e asks : resourceRequestMap.values()) {\n+        ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n+        if (request !\u003d null) {\n+          metrics.decrPendingResources(user, request.getNumContainers(),\n+              request.getCapability());\n+\n+          // Update Queue\n+          queue.decPendingResource(\n+              request.getNodeLabelExpression(),\n+              Resources.multiply(request.getCapability(),\n+                  request.getNumContainers()));\n+        }\n       }\n+      metrics.finishAppAttempt(applicationId, pending, user);\n+\n+      // Clear requests themselves\n+      clearRequests();\n+    } finally {\n+      this.writeLock.unlock();\n     }\n-    metrics.finishAppAttempt(applicationId, pending, user);\n-    \n-    // Clear requests themselves\n-    clearRequests();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void stop() {\n    // clear pending resources metrics for the application\n    try {\n      this.writeLock.lock();\n      QueueMetrics metrics \u003d queue.getMetrics();\n      for (Map\u003cString, ResourceRequest\u003e asks : resourceRequestMap.values()) {\n        ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n        if (request !\u003d null) {\n          metrics.decrPendingResources(user, request.getNumContainers(),\n              request.getCapability());\n\n          // Update Queue\n          queue.decPendingResource(\n              request.getNodeLabelExpression(),\n              Resources.multiply(request.getCapability(),\n                  request.getNumContainers()));\n        }\n      }\n      metrics.finishAppAttempt(applicationId, pending, user);\n\n      // Clear requests themselves\n      clearRequests();\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3142. Improve locks in AppSchedulingInfo. (Varun Saxena via wangda)\n",
          "commitDate": "27/09/16 11:54 AM",
          "commitName": "1831be8e737fd423a9f3d590767b944147e85641",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "19/09/16 1:31 PM",
          "commitNameOld": "7558dbbb481eab055e794beb3603bbe5671a4b4c",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 7.93,
          "commitsBetweenForRepo": 48,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,26 @@\n-  public synchronized void stop() {\n+  public void stop() {\n     // clear pending resources metrics for the application\n-    QueueMetrics metrics \u003d queue.getMetrics();\n-    for (Map\u003cString, ResourceRequest\u003e asks : resourceRequestMap.values()) {\n-      ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n-      if (request !\u003d null) {\n-        metrics.decrPendingResources(user, request.getNumContainers(),\n-            request.getCapability());\n-        \n-        // Update Queue\n-        queue.decPendingResource(\n-            request.getNodeLabelExpression(),\n-            Resources.multiply(request.getCapability(),\n-                request.getNumContainers()));\n+    try {\n+      this.writeLock.lock();\n+      QueueMetrics metrics \u003d queue.getMetrics();\n+      for (Map\u003cString, ResourceRequest\u003e asks : resourceRequestMap.values()) {\n+        ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n+        if (request !\u003d null) {\n+          metrics.decrPendingResources(user, request.getNumContainers(),\n+              request.getCapability());\n+\n+          // Update Queue\n+          queue.decPendingResource(\n+              request.getNodeLabelExpression(),\n+              Resources.multiply(request.getCapability(),\n+                  request.getNumContainers()));\n+        }\n       }\n+      metrics.finishAppAttempt(applicationId, pending, user);\n+\n+      // Clear requests themselves\n+      clearRequests();\n+    } finally {\n+      this.writeLock.unlock();\n     }\n-    metrics.finishAppAttempt(applicationId, pending, user);\n-    \n-    // Clear requests themselves\n-    clearRequests();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void stop() {\n    // clear pending resources metrics for the application\n    try {\n      this.writeLock.lock();\n      QueueMetrics metrics \u003d queue.getMetrics();\n      for (Map\u003cString, ResourceRequest\u003e asks : resourceRequestMap.values()) {\n        ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n        if (request !\u003d null) {\n          metrics.decrPendingResources(user, request.getNumContainers(),\n              request.getCapability());\n\n          // Update Queue\n          queue.decPendingResource(\n              request.getNodeLabelExpression(),\n              Resources.multiply(request.getCapability(),\n                  request.getNumContainers()));\n        }\n      }\n      metrics.finishAppAttempt(applicationId, pending, user);\n\n      // Clear requests themselves\n      clearRequests();\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
          "extendedDetails": {}
        }
      ]
    },
    "4e4b3a8465a8433e78e015cb1ce7e0dc1ebeb523": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-4524. Cleanup AppSchedulingInfo. (Karthik Kambatla via wangda)\n\n(cherry picked from commit 05fa852d7567b7590d6b53bbf925f8f424736514)\n",
      "commitDate": "30/12/15 3:39 PM",
      "commitName": "4e4b3a8465a8433e78e015cb1ce7e0dc1ebeb523",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "12/11/15 11:09 AM",
      "commitNameOld": "796638d9bc86235b9f3e5d1a3a9a25bbf5c04d1c",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 48.19,
      "commitsBetweenForRepo": 287,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n-  synchronized public void stop(RMAppAttemptState rmAppAttemptFinalState) {\n+  public synchronized void stop() {\n     // clear pending resources metrics for the application\n     QueueMetrics metrics \u003d queue.getMetrics();\n     for (Map\u003cString, ResourceRequest\u003e asks : resourceRequestMap.values()) {\n       ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n       if (request !\u003d null) {\n         metrics.decrPendingResources(user, request.getNumContainers(),\n             request.getCapability());\n         \n         // Update Queue\n         queue.decPendingResource(\n             request.getNodeLabelExpression(),\n             Resources.multiply(request.getCapability(),\n                 request.getNumContainers()));\n       }\n     }\n     metrics.finishAppAttempt(applicationId, pending, user);\n     \n     // Clear requests themselves\n     clearRequests();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void stop() {\n    // clear pending resources metrics for the application\n    QueueMetrics metrics \u003d queue.getMetrics();\n    for (Map\u003cString, ResourceRequest\u003e asks : resourceRequestMap.values()) {\n      ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n      if (request !\u003d null) {\n        metrics.decrPendingResources(user, request.getNumContainers(),\n            request.getCapability());\n        \n        // Update Queue\n        queue.decPendingResource(\n            request.getNodeLabelExpression(),\n            Resources.multiply(request.getCapability(),\n                request.getNumContainers()));\n      }\n    }\n    metrics.finishAppAttempt(applicationId, pending, user);\n    \n    // Clear requests themselves\n    clearRequests();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {
        "oldValue": "[rmAppAttemptFinalState-RMAppAttemptState]",
        "newValue": "[]"
      }
    },
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1651. CapacityScheduler side changes to support container resize. Contributed by Wangda Tan\n",
      "commitDate": "23/09/15 1:29 PM",
      "commitName": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
      "commitAuthor": "Jian He",
      "commitDateOld": "13/09/15 5:03 PM",
      "commitNameOld": "81df7b586a16f8226c7b01c139c1c70c060399c3",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 9.85,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   synchronized public void stop(RMAppAttemptState rmAppAttemptFinalState) {\n     // clear pending resources metrics for the application\n     QueueMetrics metrics \u003d queue.getMetrics();\n-    for (Map\u003cString, ResourceRequest\u003e asks : requests.values()) {\n+    for (Map\u003cString, ResourceRequest\u003e asks : resourceRequestMap.values()) {\n       ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n       if (request !\u003d null) {\n         metrics.decrPendingResources(user, request.getNumContainers(),\n             request.getCapability());\n         \n         // Update Queue\n         queue.decPendingResource(\n             request.getNodeLabelExpression(),\n             Resources.multiply(request.getCapability(),\n                 request.getNumContainers()));\n       }\n     }\n     metrics.finishAppAttempt(applicationId, pending, user);\n     \n     // Clear requests themselves\n     clearRequests();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized public void stop(RMAppAttemptState rmAppAttemptFinalState) {\n    // clear pending resources metrics for the application\n    QueueMetrics metrics \u003d queue.getMetrics();\n    for (Map\u003cString, ResourceRequest\u003e asks : resourceRequestMap.values()) {\n      ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n      if (request !\u003d null) {\n        metrics.decrPendingResources(user, request.getNumContainers(),\n            request.getCapability());\n        \n        // Update Queue\n        queue.decPendingResource(\n            request.getNodeLabelExpression(),\n            Resources.multiply(request.getCapability(),\n                request.getNumContainers()));\n      }\n    }\n    metrics.finishAppAttempt(applicationId, pending, user);\n    \n    // Clear requests themselves\n    clearRequests();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {}
    },
    "586348e4cbf197188057d6b843a6701cfffdaff3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3356. Capacity Scheduler FiCaSchedulerApp should use ResourceUsage to track used-resources-by-label. Contributed by Wangda Tan\n",
      "commitDate": "20/03/15 1:54 PM",
      "commitName": "586348e4cbf197188057d6b843a6701cfffdaff3",
      "commitAuthor": "Jian He",
      "commitDateOld": "20/03/15 10:42 AM",
      "commitNameOld": "6bc7710ec7f2592c4c87dd940fbe5827ef81fe72",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.13,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,21 @@\n   synchronized public void stop(RMAppAttemptState rmAppAttemptFinalState) {\n     // clear pending resources metrics for the application\n     QueueMetrics metrics \u003d queue.getMetrics();\n     for (Map\u003cString, ResourceRequest\u003e asks : requests.values()) {\n       ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n       if (request !\u003d null) {\n         metrics.decrPendingResources(user, request.getNumContainers(),\n             request.getCapability());\n+        \n+        // Update Queue\n+        queue.decPendingResource(\n+            request.getNodeLabelExpression(),\n+            Resources.multiply(request.getCapability(),\n+                request.getNumContainers()));\n       }\n     }\n     metrics.finishAppAttempt(applicationId, pending, user);\n     \n     // Clear requests themselves\n     clearRequests();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized public void stop(RMAppAttemptState rmAppAttemptFinalState) {\n    // clear pending resources metrics for the application\n    QueueMetrics metrics \u003d queue.getMetrics();\n    for (Map\u003cString, ResourceRequest\u003e asks : requests.values()) {\n      ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n      if (request !\u003d null) {\n        metrics.decrPendingResources(user, request.getNumContainers(),\n            request.getCapability());\n        \n        // Update Queue\n        queue.decPendingResource(\n            request.getNodeLabelExpression(),\n            Resources.multiply(request.getCapability(),\n                request.getNumContainers()));\n      }\n    }\n    metrics.finishAppAttempt(applicationId, pending, user);\n    \n    // Clear requests themselves\n    clearRequests();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {}
    },
    "981679e6d7650141fc8737c7e13b16d8b795b408": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1498. Common scheduler changes for moving apps between queues (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1563021 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/01/14 4:14 PM",
      "commitName": "981679e6d7650141fc8737c7e13b16d8b795b408",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "30/01/14 2:40 PM",
      "commitNameOld": "1cac66ce68d5f8d5f73920133eb91fa43e9bdb1c",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,15 @@\n   synchronized public void stop(RMAppAttemptState rmAppAttemptFinalState) {\n     // clear pending resources metrics for the application\n     QueueMetrics metrics \u003d queue.getMetrics();\n     for (Map\u003cString, ResourceRequest\u003e asks : requests.values()) {\n       ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n       if (request !\u003d null) {\n         metrics.decrPendingResources(user, request.getNumContainers(),\n-            Resources.multiply(request.getCapability(), request\n-                .getNumContainers()));\n+            request.getCapability());\n       }\n     }\n     metrics.finishAppAttempt(applicationId, pending, user);\n     \n     // Clear requests themselves\n     clearRequests();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized public void stop(RMAppAttemptState rmAppAttemptFinalState) {\n    // clear pending resources metrics for the application\n    QueueMetrics metrics \u003d queue.getMetrics();\n    for (Map\u003cString, ResourceRequest\u003e asks : requests.values()) {\n      ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n      if (request !\u003d null) {\n        metrics.decrPendingResources(user, request.getNumContainers(),\n            request.getCapability());\n      }\n    }\n    metrics.finishAppAttempt(applicationId, pending, user);\n    \n    // Clear requests themselves\n    clearRequests();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {}
    },
    "f677175f35f68bde9df72e648dffacbd31cfd620": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1166. Fixed app-specific and attempt-specific QueueMetrics to be triggered by accordingly app event and attempt event. Contributed by Zhijie Shen\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1557296 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/01/14 5:15 PM",
      "commitName": "f677175f35f68bde9df72e648dffacbd31cfd620",
      "commitAuthor": "Jian He",
      "commitDateOld": "10/01/14 7:04 AM",
      "commitNameOld": "1393581bceda234c88cafec00dbfc0ef2a402e83",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.42,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   synchronized public void stop(RMAppAttemptState rmAppAttemptFinalState) {\n     // clear pending resources metrics for the application\n     QueueMetrics metrics \u003d queue.getMetrics();\n     for (Map\u003cString, ResourceRequest\u003e asks : requests.values()) {\n       ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n       if (request !\u003d null) {\n         metrics.decrPendingResources(user, request.getNumContainers(),\n             Resources.multiply(request.getCapability(), request\n                 .getNumContainers()));\n       }\n     }\n-    metrics.finishApp(this, rmAppAttemptFinalState);\n+    metrics.finishAppAttempt(applicationId, pending, user);\n     \n     // Clear requests themselves\n     clearRequests();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized public void stop(RMAppAttemptState rmAppAttemptFinalState) {\n    // clear pending resources metrics for the application\n    QueueMetrics metrics \u003d queue.getMetrics();\n    for (Map\u003cString, ResourceRequest\u003e asks : requests.values()) {\n      ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n      if (request !\u003d null) {\n        metrics.decrPendingResources(user, request.getNumContainers(),\n            Resources.multiply(request.getCapability(), request\n                .getNumContainers()));\n      }\n    }\n    metrics.finishAppAttempt(applicationId, pending, user);\n    \n    // Clear requests themselves\n    clearRequests();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {}
    },
    "520033b1cd81c76b38fcdcfcfeed16158db4bbba": {
      "type": "Ybodychange",
      "commitMessage": "YARN-450. Define value for * in the scheduling protocol (Zhijie Shen via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1462271 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/03/13 12:44 PM",
      "commitName": "520033b1cd81c76b38fcdcfcfeed16158db4bbba",
      "commitAuthor": "Bikas Saha",
      "commitDateOld": "28/11/12 5:56 PM",
      "commitNameOld": "1943fdbec613715f3cdc3ca60cbd273115f28299",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 119.74,
      "commitsBetweenForRepo": 537,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   synchronized public void stop(RMAppAttemptState rmAppAttemptFinalState) {\n     // clear pending resources metrics for the application\n     QueueMetrics metrics \u003d queue.getMetrics();\n     for (Map\u003cString, ResourceRequest\u003e asks : requests.values()) {\n-      ResourceRequest request \u003d asks.get(RMNode.ANY);\n+      ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n       if (request !\u003d null) {\n         metrics.decrPendingResources(user, request.getNumContainers(),\n             Resources.multiply(request.getCapability(), request\n                 .getNumContainers()));\n       }\n     }\n     metrics.finishApp(this, rmAppAttemptFinalState);\n     \n     // Clear requests themselves\n     clearRequests();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized public void stop(RMAppAttemptState rmAppAttemptFinalState) {\n    // clear pending resources metrics for the application\n    QueueMetrics metrics \u003d queue.getMetrics();\n    for (Map\u003cString, ResourceRequest\u003e asks : requests.values()) {\n      ResourceRequest request \u003d asks.get(ResourceRequest.ANY);\n      if (request !\u003d null) {\n        metrics.decrPendingResources(user, request.getNumContainers(),\n            Resources.multiply(request.getCapability(), request\n                .getNumContainers()));\n      }\n    }\n    metrics.finishApp(this, rmAppAttemptFinalState);\n    \n    // Clear requests themselves\n    clearRequests();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized public void stop(RMAppAttemptState rmAppAttemptFinalState) {\n    // clear pending resources metrics for the application\n    QueueMetrics metrics \u003d queue.getMetrics();\n    for (Map\u003cString, ResourceRequest\u003e asks : requests.values()) {\n      ResourceRequest request \u003d asks.get(RMNode.ANY);\n      if (request !\u003d null) {\n        metrics.decrPendingResources(user, request.getNumContainers(),\n            Resources.multiply(request.getCapability(), request\n                .getNumContainers()));\n      }\n    }\n    metrics.finishApp(this, rmAppAttemptFinalState);\n    \n    // Clear requests themselves\n    clearRequests();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized public void stop(RMAppAttemptState rmAppAttemptFinalState) {\n    // clear pending resources metrics for the application\n    QueueMetrics metrics \u003d queue.getMetrics();\n    for (Map\u003cString, ResourceRequest\u003e asks : requests.values()) {\n      ResourceRequest request \u003d asks.get(RMNode.ANY);\n      if (request !\u003d null) {\n        metrics.decrPendingResources(user, request.getNumContainers(),\n            Resources.multiply(request.getCapability(), request\n                .getNumContainers()));\n      }\n    }\n    metrics.finishApp(this, rmAppAttemptFinalState);\n    \n    // Clear requests themselves\n    clearRequests();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,16 @@\n+  synchronized public void stop(RMAppAttemptState rmAppAttemptFinalState) {\n+    // clear pending resources metrics for the application\n+    QueueMetrics metrics \u003d queue.getMetrics();\n+    for (Map\u003cString, ResourceRequest\u003e asks : requests.values()) {\n+      ResourceRequest request \u003d asks.get(RMNode.ANY);\n+      if (request !\u003d null) {\n+        metrics.decrPendingResources(user, request.getNumContainers(),\n+            Resources.multiply(request.getCapability(), request\n+                .getNumContainers()));\n+      }\n+    }\n+    metrics.finishApp(this, rmAppAttemptFinalState);\n+    \n+    // Clear requests themselves\n+    clearRequests();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized public void stop(RMAppAttemptState rmAppAttemptFinalState) {\n    // clear pending resources metrics for the application\n    QueueMetrics metrics \u003d queue.getMetrics();\n    for (Map\u003cString, ResourceRequest\u003e asks : requests.values()) {\n      ResourceRequest request \u003d asks.get(RMNode.ANY);\n      if (request !\u003d null) {\n        metrics.decrPendingResources(user, request.getNumContainers(),\n            Resources.multiply(request.getCapability(), request\n                .getNumContainers()));\n      }\n    }\n    metrics.finishApp(this, rmAppAttemptFinalState);\n    \n    // Clear requests themselves\n    clearRequests();\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java"
    }
  }
}