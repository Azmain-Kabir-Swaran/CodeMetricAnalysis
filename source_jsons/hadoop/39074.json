{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractResourceUsage.java",
  "functionName": "_getAll",
  "functionId": "_getAll___type-ResourceType",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractResourceUsage.java",
  "functionStartLine": 133,
  "functionEndLine": 145,
  "numCommitsSeen": 15,
  "timeTaken": 3949,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "b7b8cd53242da8d47ba4a6d99d906bdb2a1a3494",
    "5e798b1a0ddceeaf54703b94052501867156e979",
    "5004e753322084e42dfda4be1d2db66677f86a1e"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "b7b8cd53242da8d47ba4a6d99d906bdb2a1a3494": "Ybodychange",
    "5e798b1a0ddceeaf54703b94052501867156e979": "Ymultichange(Ymovefromfile,Ymodifierchange)",
    "5004e753322084e42dfda4be1d2db66677f86a1e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "25/02/19 11:45 AM",
      "commitNameOld": "95372657fc25c02399b01793833021ccf88dada2",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 10.08,
      "commitsBetweenForRepo": 105,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   protected Resource _getAll(ResourceType type) {\n+    readLock.lock();\n     try {\n-      readLock.lock();\n       Resource allOfType \u003d Resources.createResource(0);\n       for (Map.Entry\u003cString, UsageByLabel\u003e usageEntry : usages.entrySet()) {\n         // all usages types are initialized\n         Resources.addTo(allOfType, usageEntry.getValue().resArr.get(type.idx));\n       }\n       return allOfType;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Resource _getAll(ResourceType type) {\n    readLock.lock();\n    try {\n      Resource allOfType \u003d Resources.createResource(0);\n      for (Map.Entry\u003cString, UsageByLabel\u003e usageEntry : usages.entrySet()) {\n        // all usages types are initialized\n        Resources.addTo(allOfType, usageEntry.getValue().resArr.get(type.idx));\n      }\n      return allOfType;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractResourceUsage.java",
      "extendedDetails": {}
    },
    "b7b8cd53242da8d47ba4a6d99d906bdb2a1a3494": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7538. Fix performance regression introduced by Capacity Scheduler absolute min/max resource refactoring. (Sunil G via wangda)\n\nChange-Id: Ic9bd7e599c56970fe01cb0e1bba6df7d1f77eb29\n",
      "commitDate": "07/12/17 6:56 PM",
      "commitName": "b7b8cd53242da8d47ba4a6d99d906bdb2a1a3494",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "07/12/17 6:56 PM",
      "commitNameOld": "5e798b1a0ddceeaf54703b94052501867156e979",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   protected Resource _getAll(ResourceType type) {\n     try {\n       readLock.lock();\n       Resource allOfType \u003d Resources.createResource(0);\n       for (Map.Entry\u003cString, UsageByLabel\u003e usageEntry : usages.entrySet()) {\n         //all usages types are initialized\n-        Resources.addTo(allOfType, usageEntry.getValue().resArr[type.idx]);\n+        Resources.addTo(allOfType, usageEntry.getValue().resArr.get(type.idx));\n       }\n       return allOfType;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Resource _getAll(ResourceType type) {\n    try {\n      readLock.lock();\n      Resource allOfType \u003d Resources.createResource(0);\n      for (Map.Entry\u003cString, UsageByLabel\u003e usageEntry : usages.entrySet()) {\n        //all usages types are initialized\n        Resources.addTo(allOfType, usageEntry.getValue().resArr.get(type.idx));\n      }\n      return allOfType;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractResourceUsage.java",
      "extendedDetails": {}
    },
    "5e798b1a0ddceeaf54703b94052501867156e979": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange)",
      "commitMessage": "YARN-6471. Support to add min/max resource configuration for a queue. (Sunil G via wangda)\n\nChange-Id: I9213f5297a6841fab5c573e85ee4c4e5f4a0b7ff\n",
      "commitDate": "07/12/17 6:56 PM",
      "commitName": "5e798b1a0ddceeaf54703b94052501867156e979",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-6471. Support to add min/max resource configuration for a queue. (Sunil G via wangda)\n\nChange-Id: I9213f5297a6841fab5c573e85ee4c4e5f4a0b7ff\n",
          "commitDate": "07/12/17 6:56 PM",
          "commitName": "5e798b1a0ddceeaf54703b94052501867156e979",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "07/12/17 2:50 PM",
          "commitNameOld": "d6c31a3e6b60c4b8af9ae4661f16614805654e59",
          "commitAuthorOld": "Wei-Chiu Chuang",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  private Resource _getAll(ResourceType type) {\n+  protected Resource _getAll(ResourceType type) {\n     try {\n       readLock.lock();\n       Resource allOfType \u003d Resources.createResource(0);\n       for (Map.Entry\u003cString, UsageByLabel\u003e usageEntry : usages.entrySet()) {\n         //all usages types are initialized\n         Resources.addTo(allOfType, usageEntry.getValue().resArr[type.idx]);\n       }\n       return allOfType;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected Resource _getAll(ResourceType type) {\n    try {\n      readLock.lock();\n      Resource allOfType \u003d Resources.createResource(0);\n      for (Map.Entry\u003cString, UsageByLabel\u003e usageEntry : usages.entrySet()) {\n        //all usages types are initialized\n        Resources.addTo(allOfType, usageEntry.getValue().resArr[type.idx]);\n      }\n      return allOfType;\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractResourceUsage.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/ResourceUsage.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractResourceUsage.java",
            "oldMethodName": "_getAll",
            "newMethodName": "_getAll"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-6471. Support to add min/max resource configuration for a queue. (Sunil G via wangda)\n\nChange-Id: I9213f5297a6841fab5c573e85ee4c4e5f4a0b7ff\n",
          "commitDate": "07/12/17 6:56 PM",
          "commitName": "5e798b1a0ddceeaf54703b94052501867156e979",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "07/12/17 2:50 PM",
          "commitNameOld": "d6c31a3e6b60c4b8af9ae4661f16614805654e59",
          "commitAuthorOld": "Wei-Chiu Chuang",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  private Resource _getAll(ResourceType type) {\n+  protected Resource _getAll(ResourceType type) {\n     try {\n       readLock.lock();\n       Resource allOfType \u003d Resources.createResource(0);\n       for (Map.Entry\u003cString, UsageByLabel\u003e usageEntry : usages.entrySet()) {\n         //all usages types are initialized\n         Resources.addTo(allOfType, usageEntry.getValue().resArr[type.idx]);\n       }\n       return allOfType;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected Resource _getAll(ResourceType type) {\n    try {\n      readLock.lock();\n      Resource allOfType \u003d Resources.createResource(0);\n      for (Map.Entry\u003cString, UsageByLabel\u003e usageEntry : usages.entrySet()) {\n        //all usages types are initialized\n        Resources.addTo(allOfType, usageEntry.getValue().resArr[type.idx]);\n      }\n      return allOfType;\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractResourceUsage.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[protected]"
          }
        }
      ]
    },
    "5004e753322084e42dfda4be1d2db66677f86a1e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3318. Create Initial OrderingPolicy Framework and FifoOrderingPolicy. (Craig Welch via wangda)\n",
      "commitDate": "15/04/15 9:56 AM",
      "commitName": "5004e753322084e42dfda4be1d2db66677f86a1e",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,13 @@\n+  private Resource _getAll(ResourceType type) {\n+    try {\n+      readLock.lock();\n+      Resource allOfType \u003d Resources.createResource(0);\n+      for (Map.Entry\u003cString, UsageByLabel\u003e usageEntry : usages.entrySet()) {\n+        //all usages types are initialized\n+        Resources.addTo(allOfType, usageEntry.getValue().resArr[type.idx]);\n+      }\n+      return allOfType;\n+    } finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Resource _getAll(ResourceType type) {\n    try {\n      readLock.lock();\n      Resource allOfType \u003d Resources.createResource(0);\n      for (Map.Entry\u003cString, UsageByLabel\u003e usageEntry : usages.entrySet()) {\n        //all usages types are initialized\n        Resources.addTo(allOfType, usageEntry.getValue().resArr[type.idx]);\n      }\n      return allOfType;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/ResourceUsage.java"
    }
  }
}