{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalityAppPlacementAllocator.java",
  "functionName": "updateNodeLabels",
  "functionId": "updateNodeLabels___request-ResourceRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
  "functionStartLine": 131,
  "functionEndLine": 154,
  "numCommitsSeen": 70,
  "timeTaken": 3674,
  "changeHistory": [
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
    "9ca54f4810de182195263bd594afb56dab564105",
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
    "4e4b3a8465a8433e78e015cb1ce7e0dc1ebeb523"
  ],
  "changeHistoryShort": {
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949": "Yfilerename",
    "9ca54f4810de182195263bd594afb56dab564105": "Ymultichange(Ymovefromfile,Ybodychange)",
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828": "Ybodychange",
    "4e4b3a8465a8433e78e015cb1ce7e0dc1ebeb523": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7437. Rename PlacementSet and SchedulingPlacementSet. (Wangda Tan via kkaranasos)\n",
      "commitDate": "09/11/17 1:01 PM",
      "commitName": "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
      "commitAuthor": "Konstantinos Karanasos",
      "commitDateOld": "09/11/17 12:12 PM",
      "commitNameOld": "a2c150a7369cc629bbfaa2dfa3a8495b6f9c42e2",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void updateNodeLabels(ResourceRequest request) {\n    String resourceName \u003d request.getResourceName();\n    if (resourceName.equals(ResourceRequest.ANY)) {\n      ResourceRequest previousAnyRequest \u003d\n          getResourceRequest(resourceName);\n\n      // When there is change in ANY request label expression, we should\n      // update label for all resource requests already added of same\n      // priority as ANY resource request.\n      if ((null \u003d\u003d previousAnyRequest) || hasRequestLabelChanged(\n          previousAnyRequest, request)) {\n        for (ResourceRequest r : resourceRequestMap.values()) {\n          if (!r.getResourceName().equals(ResourceRequest.ANY)) {\n            r.setNodeLabelExpression(request.getNodeLabelExpression());\n          }\n        }\n      }\n    } else{\n      ResourceRequest anyRequest \u003d getResourceRequest(ResourceRequest.ANY);\n      if (anyRequest !\u003d null) {\n        request.setNodeLabelExpression(anyRequest.getNodeLabelExpression());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalitySchedulingPlacementSet.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java"
      }
    },
    "9ca54f4810de182195263bd594afb56dab564105": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-5906. Update AppSchedulingInfo to use SchedulingPlacementSet. Contributed by Wangda Tan.\n",
      "commitDate": "28/12/16 9:18 AM",
      "commitName": "9ca54f4810de182195263bd594afb56dab564105",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-5906. Update AppSchedulingInfo to use SchedulingPlacementSet. Contributed by Wangda Tan.\n",
          "commitDate": "28/12/16 9:18 AM",
          "commitName": "9ca54f4810de182195263bd594afb56dab564105",
          "commitAuthor": "Sunil G",
          "commitDateOld": "28/12/16 1:29 AM",
          "commitNameOld": "972da46cb48725ad49d3e0a033742bd1a8228f51",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 0.33,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,24 @@\n   private void updateNodeLabels(ResourceRequest request) {\n-    SchedulerRequestKey schedulerKey \u003d SchedulerRequestKey.create(request);\n     String resourceName \u003d request.getResourceName();\n     if (resourceName.equals(ResourceRequest.ANY)) {\n       ResourceRequest previousAnyRequest \u003d\n-          getResourceRequest(schedulerKey, resourceName);\n+          getResourceRequest(resourceName);\n \n       // When there is change in ANY request label expression, we should\n       // update label for all resource requests already added of same\n       // priority as ANY resource request.\n-      if ((null \u003d\u003d previousAnyRequest)\n-          || hasRequestLabelChanged(previousAnyRequest, request)) {\n-        Map\u003cString, ResourceRequest\u003e resourceRequest \u003d\n-            getResourceRequests(schedulerKey);\n-        if (resourceRequest !\u003d null) {\n-          for (ResourceRequest r : resourceRequest.values()) {\n-            if (!r.getResourceName().equals(ResourceRequest.ANY)) {\n-              r.setNodeLabelExpression(request.getNodeLabelExpression());\n-            }\n+      if ((null \u003d\u003d previousAnyRequest) || hasRequestLabelChanged(\n+          previousAnyRequest, request)) {\n+        for (ResourceRequest r : resourceRequestMap.values()) {\n+          if (!r.getResourceName().equals(ResourceRequest.ANY)) {\n+            r.setNodeLabelExpression(request.getNodeLabelExpression());\n           }\n         }\n       }\n-    } else {\n-      ResourceRequest anyRequest \u003d\n-          getResourceRequest(schedulerKey, ResourceRequest.ANY);\n+    } else{\n+      ResourceRequest anyRequest \u003d getResourceRequest(ResourceRequest.ANY);\n       if (anyRequest !\u003d null) {\n         request.setNodeLabelExpression(anyRequest.getNodeLabelExpression());\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void updateNodeLabels(ResourceRequest request) {\n    String resourceName \u003d request.getResourceName();\n    if (resourceName.equals(ResourceRequest.ANY)) {\n      ResourceRequest previousAnyRequest \u003d\n          getResourceRequest(resourceName);\n\n      // When there is change in ANY request label expression, we should\n      // update label for all resource requests already added of same\n      // priority as ANY resource request.\n      if ((null \u003d\u003d previousAnyRequest) || hasRequestLabelChanged(\n          previousAnyRequest, request)) {\n        for (ResourceRequest r : resourceRequestMap.values()) {\n          if (!r.getResourceName().equals(ResourceRequest.ANY)) {\n            r.setNodeLabelExpression(request.getNodeLabelExpression());\n          }\n        }\n      }\n    } else{\n      ResourceRequest anyRequest \u003d getResourceRequest(ResourceRequest.ANY);\n      if (anyRequest !\u003d null) {\n        request.setNodeLabelExpression(anyRequest.getNodeLabelExpression());\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalitySchedulingPlacementSet.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalitySchedulingPlacementSet.java",
            "oldMethodName": "updateNodeLabels",
            "newMethodName": "updateNodeLabels"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5906. Update AppSchedulingInfo to use SchedulingPlacementSet. Contributed by Wangda Tan.\n",
          "commitDate": "28/12/16 9:18 AM",
          "commitName": "9ca54f4810de182195263bd594afb56dab564105",
          "commitAuthor": "Sunil G",
          "commitDateOld": "28/12/16 1:29 AM",
          "commitNameOld": "972da46cb48725ad49d3e0a033742bd1a8228f51",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 0.33,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,24 @@\n   private void updateNodeLabels(ResourceRequest request) {\n-    SchedulerRequestKey schedulerKey \u003d SchedulerRequestKey.create(request);\n     String resourceName \u003d request.getResourceName();\n     if (resourceName.equals(ResourceRequest.ANY)) {\n       ResourceRequest previousAnyRequest \u003d\n-          getResourceRequest(schedulerKey, resourceName);\n+          getResourceRequest(resourceName);\n \n       // When there is change in ANY request label expression, we should\n       // update label for all resource requests already added of same\n       // priority as ANY resource request.\n-      if ((null \u003d\u003d previousAnyRequest)\n-          || hasRequestLabelChanged(previousAnyRequest, request)) {\n-        Map\u003cString, ResourceRequest\u003e resourceRequest \u003d\n-            getResourceRequests(schedulerKey);\n-        if (resourceRequest !\u003d null) {\n-          for (ResourceRequest r : resourceRequest.values()) {\n-            if (!r.getResourceName().equals(ResourceRequest.ANY)) {\n-              r.setNodeLabelExpression(request.getNodeLabelExpression());\n-            }\n+      if ((null \u003d\u003d previousAnyRequest) || hasRequestLabelChanged(\n+          previousAnyRequest, request)) {\n+        for (ResourceRequest r : resourceRequestMap.values()) {\n+          if (!r.getResourceName().equals(ResourceRequest.ANY)) {\n+            r.setNodeLabelExpression(request.getNodeLabelExpression());\n           }\n         }\n       }\n-    } else {\n-      ResourceRequest anyRequest \u003d\n-          getResourceRequest(schedulerKey, ResourceRequest.ANY);\n+    } else{\n+      ResourceRequest anyRequest \u003d getResourceRequest(ResourceRequest.ANY);\n       if (anyRequest !\u003d null) {\n         request.setNodeLabelExpression(anyRequest.getNodeLabelExpression());\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void updateNodeLabels(ResourceRequest request) {\n    String resourceName \u003d request.getResourceName();\n    if (resourceName.equals(ResourceRequest.ANY)) {\n      ResourceRequest previousAnyRequest \u003d\n          getResourceRequest(resourceName);\n\n      // When there is change in ANY request label expression, we should\n      // update label for all resource requests already added of same\n      // priority as ANY resource request.\n      if ((null \u003d\u003d previousAnyRequest) || hasRequestLabelChanged(\n          previousAnyRequest, request)) {\n        for (ResourceRequest r : resourceRequestMap.values()) {\n          if (!r.getResourceName().equals(ResourceRequest.ANY)) {\n            r.setNodeLabelExpression(request.getNodeLabelExpression());\n          }\n        }\n      }\n    } else{\n      ResourceRequest anyRequest \u003d getResourceRequest(ResourceRequest.ANY);\n      if (anyRequest !\u003d null) {\n        request.setNodeLabelExpression(anyRequest.getNodeLabelExpression());\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalitySchedulingPlacementSet.java",
          "extendedDetails": {}
        }
      ]
    },
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
      "commitDate": "26/07/16 2:54 PM",
      "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "07/06/16 3:06 PM",
      "commitNameOld": "620325e81696fca140195b74929ed9eda2d5eb16",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 48.99,
      "commitsBetweenForRepo": 441,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   private void updateNodeLabels(ResourceRequest request) {\n-    Priority priority \u003d request.getPriority();\n+    SchedulerRequestKey schedulerKey \u003d SchedulerRequestKey.create(request);\n     String resourceName \u003d request.getResourceName();\n     if (resourceName.equals(ResourceRequest.ANY)) {\n       ResourceRequest previousAnyRequest \u003d\n-          getResourceRequest(priority, resourceName);\n+          getResourceRequest(schedulerKey, resourceName);\n \n       // When there is change in ANY request label expression, we should\n       // update label for all resource requests already added of same\n       // priority as ANY resource request.\n       if ((null \u003d\u003d previousAnyRequest)\n           || hasRequestLabelChanged(previousAnyRequest, request)) {\n         Map\u003cString, ResourceRequest\u003e resourceRequest \u003d\n-            getResourceRequests(priority);\n+            getResourceRequests(schedulerKey);\n         if (resourceRequest !\u003d null) {\n           for (ResourceRequest r : resourceRequest.values()) {\n             if (!r.getResourceName().equals(ResourceRequest.ANY)) {\n               r.setNodeLabelExpression(request.getNodeLabelExpression());\n             }\n           }\n         }\n       }\n     } else {\n       ResourceRequest anyRequest \u003d\n-          getResourceRequest(priority, ResourceRequest.ANY);\n+          getResourceRequest(schedulerKey, ResourceRequest.ANY);\n       if (anyRequest !\u003d null) {\n         request.setNodeLabelExpression(anyRequest.getNodeLabelExpression());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateNodeLabels(ResourceRequest request) {\n    SchedulerRequestKey schedulerKey \u003d SchedulerRequestKey.create(request);\n    String resourceName \u003d request.getResourceName();\n    if (resourceName.equals(ResourceRequest.ANY)) {\n      ResourceRequest previousAnyRequest \u003d\n          getResourceRequest(schedulerKey, resourceName);\n\n      // When there is change in ANY request label expression, we should\n      // update label for all resource requests already added of same\n      // priority as ANY resource request.\n      if ((null \u003d\u003d previousAnyRequest)\n          || hasRequestLabelChanged(previousAnyRequest, request)) {\n        Map\u003cString, ResourceRequest\u003e resourceRequest \u003d\n            getResourceRequests(schedulerKey);\n        if (resourceRequest !\u003d null) {\n          for (ResourceRequest r : resourceRequest.values()) {\n            if (!r.getResourceName().equals(ResourceRequest.ANY)) {\n              r.setNodeLabelExpression(request.getNodeLabelExpression());\n            }\n          }\n        }\n      }\n    } else {\n      ResourceRequest anyRequest \u003d\n          getResourceRequest(schedulerKey, ResourceRequest.ANY);\n      if (anyRequest !\u003d null) {\n        request.setNodeLabelExpression(anyRequest.getNodeLabelExpression());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java",
      "extendedDetails": {}
    },
    "4e4b3a8465a8433e78e015cb1ce7e0dc1ebeb523": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4524. Cleanup AppSchedulingInfo. (Karthik Kambatla via wangda)\n\n(cherry picked from commit 05fa852d7567b7590d6b53bbf925f8f424736514)\n",
      "commitDate": "30/12/15 3:39 PM",
      "commitName": "4e4b3a8465a8433e78e015cb1ce7e0dc1ebeb523",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,30 @@\n+  private void updateNodeLabels(ResourceRequest request) {\n+    Priority priority \u003d request.getPriority();\n+    String resourceName \u003d request.getResourceName();\n+    if (resourceName.equals(ResourceRequest.ANY)) {\n+      ResourceRequest previousAnyRequest \u003d\n+          getResourceRequest(priority, resourceName);\n+\n+      // When there is change in ANY request label expression, we should\n+      // update label for all resource requests already added of same\n+      // priority as ANY resource request.\n+      if ((null \u003d\u003d previousAnyRequest)\n+          || hasRequestLabelChanged(previousAnyRequest, request)) {\n+        Map\u003cString, ResourceRequest\u003e resourceRequest \u003d\n+            getResourceRequests(priority);\n+        if (resourceRequest !\u003d null) {\n+          for (ResourceRequest r : resourceRequest.values()) {\n+            if (!r.getResourceName().equals(ResourceRequest.ANY)) {\n+              r.setNodeLabelExpression(request.getNodeLabelExpression());\n+            }\n+          }\n+        }\n+      }\n+    } else {\n+      ResourceRequest anyRequest \u003d\n+          getResourceRequest(priority, ResourceRequest.ANY);\n+      if (anyRequest !\u003d null) {\n+        request.setNodeLabelExpression(anyRequest.getNodeLabelExpression());\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateNodeLabels(ResourceRequest request) {\n    Priority priority \u003d request.getPriority();\n    String resourceName \u003d request.getResourceName();\n    if (resourceName.equals(ResourceRequest.ANY)) {\n      ResourceRequest previousAnyRequest \u003d\n          getResourceRequest(priority, resourceName);\n\n      // When there is change in ANY request label expression, we should\n      // update label for all resource requests already added of same\n      // priority as ANY resource request.\n      if ((null \u003d\u003d previousAnyRequest)\n          || hasRequestLabelChanged(previousAnyRequest, request)) {\n        Map\u003cString, ResourceRequest\u003e resourceRequest \u003d\n            getResourceRequests(priority);\n        if (resourceRequest !\u003d null) {\n          for (ResourceRequest r : resourceRequest.values()) {\n            if (!r.getResourceName().equals(ResourceRequest.ANY)) {\n              r.setNodeLabelExpression(request.getNodeLabelExpression());\n            }\n          }\n        }\n      }\n    } else {\n      ResourceRequest anyRequest \u003d\n          getResourceRequest(priority, ResourceRequest.ANY);\n      if (anyRequest !\u003d null) {\n        request.setNodeLabelExpression(anyRequest.getNodeLabelExpression());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AppSchedulingInfo.java"
    }
  }
}