{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DeviceResourceDockerRuntimePluginImpl.java",
  "functionName": "getAllocatedDevices",
  "functionId": "getAllocatedDevices___container-Container",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/deviceframework/DeviceResourceDockerRuntimePluginImpl.java",
  "functionStartLine": 174,
  "functionEndLine": 189,
  "numCommitsSeen": 2,
  "timeTaken": 1251,
  "changeHistory": [
    "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd",
    "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0"
  ],
  "changeHistoryShort": {
    "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd": "Ybodychange",
    "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9363.  Replaced debug logging with SLF4J parameterized log message.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "18/03/19 10:57 AM",
      "commitName": "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "18/02/19 2:28 AM",
      "commitNameOld": "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 28.31,
      "commitsBetweenForRepo": 261,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,16 @@\n   private Set\u003cDevice\u003e getAllocatedDevices(Container container) {\n     // get allocated devices\n     Set\u003cDevice\u003e allocated;\n     ContainerId containerId \u003d container.getContainerId();\n     allocated \u003d cachedAllocation.get(containerId);\n     if (allocated !\u003d null) {\n       return allocated;\n     }\n     allocated \u003d devicePluginAdapter\n         .getDeviceMappingManager()\n         .getAllocatedDevices(resourceName, containerId);\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Get allocation from deviceMappingManager: \"\n-          + allocated + \", \" + resourceName + \" for container: \" + containerId);\n-    }\n+    LOG.debug(\"Get allocation from deviceMappingManager: {}, {} for\"\n+        + \" container: {}\", allocated, resourceName, containerId);\n     cachedAllocation.put(containerId, allocated);\n     return allocated;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Set\u003cDevice\u003e getAllocatedDevices(Container container) {\n    // get allocated devices\n    Set\u003cDevice\u003e allocated;\n    ContainerId containerId \u003d container.getContainerId();\n    allocated \u003d cachedAllocation.get(containerId);\n    if (allocated !\u003d null) {\n      return allocated;\n    }\n    allocated \u003d devicePluginAdapter\n        .getDeviceMappingManager()\n        .getAllocatedDevices(resourceName, containerId);\n    LOG.debug(\"Get allocation from deviceMappingManager: {}, {} for\"\n        + \" container: {}\", allocated, resourceName, containerId);\n    cachedAllocation.put(containerId, allocated);\n    return allocated;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/deviceframework/DeviceResourceDockerRuntimePluginImpl.java",
      "extendedDetails": {}
    },
    "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9060. [YARN-8851] Phase 1 - Support device isolation and use the Nvidia GPU plugin as an example. Contributed by Zhankun Tang.\n",
      "commitDate": "18/02/19 2:28 AM",
      "commitName": "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,18 @@\n+  private Set\u003cDevice\u003e getAllocatedDevices(Container container) {\n+    // get allocated devices\n+    Set\u003cDevice\u003e allocated;\n+    ContainerId containerId \u003d container.getContainerId();\n+    allocated \u003d cachedAllocation.get(containerId);\n+    if (allocated !\u003d null) {\n+      return allocated;\n+    }\n+    allocated \u003d devicePluginAdapter\n+        .getDeviceMappingManager()\n+        .getAllocatedDevices(resourceName, containerId);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Get allocation from deviceMappingManager: \"\n+          + allocated + \", \" + resourceName + \" for container: \" + containerId);\n+    }\n+    cachedAllocation.put(containerId, allocated);\n+    return allocated;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Set\u003cDevice\u003e getAllocatedDevices(Container container) {\n    // get allocated devices\n    Set\u003cDevice\u003e allocated;\n    ContainerId containerId \u003d container.getContainerId();\n    allocated \u003d cachedAllocation.get(containerId);\n    if (allocated !\u003d null) {\n      return allocated;\n    }\n    allocated \u003d devicePluginAdapter\n        .getDeviceMappingManager()\n        .getAllocatedDevices(resourceName, containerId);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Get allocation from deviceMappingManager: \"\n          + allocated + \", \" + resourceName + \" for container: \" + containerId);\n    }\n    cachedAllocation.put(containerId, allocated);\n    return allocated;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/deviceframework/DeviceResourceDockerRuntimePluginImpl.java"
    }
  }
}