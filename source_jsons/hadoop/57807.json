{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Router.java",
  "functionName": "addController",
  "functionId": "addController___httpMethod-WebApp.HTTP__path-String__cls-Class__? extends Controller____action-String__names-List__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java",
  "functionStartLine": 106,
  "functionEndLine": 131,
  "numCommitsSeen": 10,
  "timeTaken": 7234,
  "changeHistory": [
    "bf6f4a3b980a07d0b268eeb984a649a362877734",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "e16f8a9fdfc37a9dc3b0c45fafd0195dc97b811c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "bf6f4a3b980a07d0b268eeb984a649a362877734": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "e16f8a9fdfc37a9dc3b0c45fafd0195dc97b811c": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bf6f4a3b980a07d0b268eeb984a649a362877734": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4366. Fix Lint Warnings in YARN Common (templedf via rkanter)\n",
      "commitDate": "12/07/16 3:12 PM",
      "commitName": "bf6f4a3b980a07d0b268eeb984a649a362877734",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "13/03/14 7:39 PM",
      "commitNameOld": "d9cdcb9474528733c488d4a5c73d2e4abb1af6fb",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 851.81,
      "commitsBetweenForRepo": 6633,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   private Dest addController(WebApp.HTTP httpMethod, String path,\n                              Class\u003c? extends Controller\u003e cls,\n                              String action, List\u003cString\u003e names) {\n     try {\n       // Look for the method in all public methods declared in the class\n       // or inherited by the class.\n       // Note: this does not distinguish methods with the same signature\n       // but different return types.\n       // TODO: We may want to deal with methods that take parameters in the future\n-      Method method \u003d cls.getMethod(action, null);\n+      Method method \u003d cls.getMethod(action);\n       Dest dest \u003d routes.get(path);\n       if (dest \u003d\u003d null) {\n         method.setAccessible(true); // avoid any runtime checks\n         dest \u003d new Dest(path, method, cls, names, httpMethod);\n         routes.put(path, dest);\n         return dest;\n       }\n       dest.methods.add(httpMethod);\n       return dest;\n     } catch (NoSuchMethodException nsme) {\n       throw new WebAppException(action + \"() not found in \" + cls);\n     } catch (SecurityException se) {\n       throw new WebAppException(\"Security exception thrown for \" + action +\n         \"() in \" + cls);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Dest addController(WebApp.HTTP httpMethod, String path,\n                             Class\u003c? extends Controller\u003e cls,\n                             String action, List\u003cString\u003e names) {\n    try {\n      // Look for the method in all public methods declared in the class\n      // or inherited by the class.\n      // Note: this does not distinguish methods with the same signature\n      // but different return types.\n      // TODO: We may want to deal with methods that take parameters in the future\n      Method method \u003d cls.getMethod(action);\n      Dest dest \u003d routes.get(path);\n      if (dest \u003d\u003d null) {\n        method.setAccessible(true); // avoid any runtime checks\n        dest \u003d new Dest(path, method, cls, names, httpMethod);\n        routes.put(path, dest);\n        return dest;\n      }\n      dest.methods.add(httpMethod);\n      return dest;\n    } catch (NoSuchMethodException nsme) {\n      throw new WebAppException(action + \"() not found in \" + cls);\n    } catch (SecurityException se) {\n      throw new WebAppException(\"Security exception thrown for \" + action +\n        \"() in \" + cls);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Dest addController(WebApp.HTTP httpMethod, String path,\n                             Class\u003c? extends Controller\u003e cls,\n                             String action, List\u003cString\u003e names) {\n    try {\n      // Look for the method in all public methods declared in the class\n      // or inherited by the class.\n      // Note: this does not distinguish methods with the same signature\n      // but different return types.\n      // TODO: We may want to deal with methods that take parameters in the future\n      Method method \u003d cls.getMethod(action, null);\n      Dest dest \u003d routes.get(path);\n      if (dest \u003d\u003d null) {\n        method.setAccessible(true); // avoid any runtime checks\n        dest \u003d new Dest(path, method, cls, names, httpMethod);\n        routes.put(path, dest);\n        return dest;\n      }\n      dest.methods.add(httpMethod);\n      return dest;\n    } catch (NoSuchMethodException nsme) {\n      throw new WebAppException(action + \"() not found in \" + cls);\n    } catch (SecurityException se) {\n      throw new WebAppException(\"Security exception thrown for \" + action +\n        \"() in \" + cls);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java"
      }
    },
    "e16f8a9fdfc37a9dc3b0c45fafd0195dc97b811c": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3038. job history server not starting because conf() missing HsController (Jeffrey Naisbitt via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1172875 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/11 3:51 PM",
      "commitName": "e16f8a9fdfc37a9dc3b0c45fafd0195dc97b811c",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 25.94,
      "commitsBetweenForRepo": 153,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,26 @@\n   private Dest addController(WebApp.HTTP httpMethod, String path,\n                              Class\u003c? extends Controller\u003e cls,\n                              String action, List\u003cString\u003e names) {\n-    for (Method method : cls.getDeclaredMethods()) {\n-      if (method.getName().equals(action) \u0026\u0026\n-          method.getParameterTypes().length \u003d\u003d 0 \u0026\u0026\n-          Modifier.isPublic(method.getModifiers())) {\n-        // TODO: deal with parameters using the names\n-        Dest dest \u003d routes.get(path);\n-        if (dest \u003d\u003d null) {\n-          method.setAccessible(true); // avoid any runtime checks\n-          dest \u003d new Dest(path, method, cls, names, httpMethod);\n-          routes.put(path, dest);\n-          return dest;\n-        }\n-        dest.methods.add(httpMethod);\n+    try {\n+      // Look for the method in all public methods declared in the class\n+      // or inherited by the class.\n+      // Note: this does not distinguish methods with the same signature\n+      // but different return types.\n+      // TODO: We may want to deal with methods that take parameters in the future\n+      Method method \u003d cls.getMethod(action, null);\n+      Dest dest \u003d routes.get(path);\n+      if (dest \u003d\u003d null) {\n+        method.setAccessible(true); // avoid any runtime checks\n+        dest \u003d new Dest(path, method, cls, names, httpMethod);\n+        routes.put(path, dest);\n         return dest;\n       }\n+      dest.methods.add(httpMethod);\n+      return dest;\n+    } catch (NoSuchMethodException nsme) {\n+      throw new WebAppException(action + \"() not found in \" + cls);\n+    } catch (SecurityException se) {\n+      throw new WebAppException(\"Security exception thrown for \" + action +\n+        \"() in \" + cls);\n     }\n-    throw new WebAppException(action + \"() not found in \" + cls);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Dest addController(WebApp.HTTP httpMethod, String path,\n                             Class\u003c? extends Controller\u003e cls,\n                             String action, List\u003cString\u003e names) {\n    try {\n      // Look for the method in all public methods declared in the class\n      // or inherited by the class.\n      // Note: this does not distinguish methods with the same signature\n      // but different return types.\n      // TODO: We may want to deal with methods that take parameters in the future\n      Method method \u003d cls.getMethod(action, null);\n      Dest dest \u003d routes.get(path);\n      if (dest \u003d\u003d null) {\n        method.setAccessible(true); // avoid any runtime checks\n        dest \u003d new Dest(path, method, cls, names, httpMethod);\n        routes.put(path, dest);\n        return dest;\n      }\n      dest.methods.add(httpMethod);\n      return dest;\n    } catch (NoSuchMethodException nsme) {\n      throw new WebAppException(action + \"() not found in \" + cls);\n    } catch (SecurityException se) {\n      throw new WebAppException(\"Security exception thrown for \" + action +\n        \"() in \" + cls);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Dest addController(WebApp.HTTP httpMethod, String path,\n                             Class\u003c? extends Controller\u003e cls,\n                             String action, List\u003cString\u003e names) {\n    for (Method method : cls.getDeclaredMethods()) {\n      if (method.getName().equals(action) \u0026\u0026\n          method.getParameterTypes().length \u003d\u003d 0 \u0026\u0026\n          Modifier.isPublic(method.getModifiers())) {\n        // TODO: deal with parameters using the names\n        Dest dest \u003d routes.get(path);\n        if (dest \u003d\u003d null) {\n          method.setAccessible(true); // avoid any runtime checks\n          dest \u003d new Dest(path, method, cls, names, httpMethod);\n          routes.put(path, dest);\n          return dest;\n        }\n        dest.methods.add(httpMethod);\n        return dest;\n      }\n    }\n    throw new WebAppException(action + \"() not found in \" + cls);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,21 @@\n+  private Dest addController(WebApp.HTTP httpMethod, String path,\n+                             Class\u003c? extends Controller\u003e cls,\n+                             String action, List\u003cString\u003e names) {\n+    for (Method method : cls.getDeclaredMethods()) {\n+      if (method.getName().equals(action) \u0026\u0026\n+          method.getParameterTypes().length \u003d\u003d 0 \u0026\u0026\n+          Modifier.isPublic(method.getModifiers())) {\n+        // TODO: deal with parameters using the names\n+        Dest dest \u003d routes.get(path);\n+        if (dest \u003d\u003d null) {\n+          method.setAccessible(true); // avoid any runtime checks\n+          dest \u003d new Dest(path, method, cls, names, httpMethod);\n+          routes.put(path, dest);\n+          return dest;\n+        }\n+        dest.methods.add(httpMethod);\n+        return dest;\n+      }\n+    }\n+    throw new WebAppException(action + \"() not found in \" + cls);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Dest addController(WebApp.HTTP httpMethod, String path,\n                             Class\u003c? extends Controller\u003e cls,\n                             String action, List\u003cString\u003e names) {\n    for (Method method : cls.getDeclaredMethods()) {\n      if (method.getName().equals(action) \u0026\u0026\n          method.getParameterTypes().length \u003d\u003d 0 \u0026\u0026\n          Modifier.isPublic(method.getModifiers())) {\n        // TODO: deal with parameters using the names\n        Dest dest \u003d routes.get(path);\n        if (dest \u003d\u003d null) {\n          method.setAccessible(true); // avoid any runtime checks\n          dest \u003d new Dest(path, method, cls, names, httpMethod);\n          routes.put(path, dest);\n          return dest;\n        }\n        dest.methods.add(httpMethod);\n        return dest;\n      }\n    }\n    throw new WebAppException(action + \"() not found in \" + cls);\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/Router.java"
    }
  }
}