{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Graph.java",
  "functionName": "generateGraphViz",
  "functionId": "generateGraphViz___indent-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/Graph.java",
  "functionStartLine": 150,
  "functionEndLine": 185,
  "numCommitsSeen": 10,
  "timeTaken": 1501,
  "changeHistory": [
    "95372657fc25c02399b01793833021ccf88dada2",
    "a696fbb001b946ae75f3b8e962839c2fd3decfa1",
    "4662b8b44313dc2a7ddcd9fcb0c8423b93345ce9",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "01fbb0fb4502dfa6bd8f76a4dfe7dfd0033e7d62"
  ],
  "changeHistoryShort": {
    "95372657fc25c02399b01793833021ccf88dada2": "Ybodychange",
    "a696fbb001b946ae75f3b8e962839c2fd3decfa1": "Ybodychange",
    "4662b8b44313dc2a7ddcd9fcb0c8423b93345ce9": "Yfilerename",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "01fbb0fb4502dfa6bd8f76a4dfe7dfd0033e7d62": "Yintroduced"
  },
  "changeHistoryDetails": {
    "95372657fc25c02399b01793833021ccf88dada2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9287. Consecutive StringBuilder append should be reuse. Contributed by Ayush Saxena.\n",
      "commitDate": "25/02/19 11:45 AM",
      "commitName": "95372657fc25c02399b01793833021ccf88dada2",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "13/07/18 8:42 AM",
      "commitNameOld": "88625f5cd90766136a9ebd76a8d84b45a37e6c99",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 227.17,
      "commitsBetweenForRepo": 1790,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,36 @@\n   public String generateGraphViz(String indent) {\n     StringBuilder sb \u003d new StringBuilder();\n     if (this.parent \u003d\u003d null) {\n-      sb.append(\"digraph \" + name + \" {\\n\");\n-      sb.append(String.format(\"graph [ label\u003d%s, fontsize\u003d24, fontname\u003dHelvetica];%n\",\n-          wrapSafeString(name)));\n-      sb.append(\"node [fontsize\u003d12, fontname\u003dHelvetica];\\n\");\n-      sb.append(\"edge [fontsize\u003d9, fontcolor\u003dblue, fontname\u003dArial];\\n\");\n+      sb.append(\"digraph \" + name + \" {\\n\")\n+          .append(String.format(\n+              \"graph [ label\u003d%s, fontsize\u003d24, fontname\u003dHelvetica];%n\",\n+              wrapSafeString(name)))\n+          .append(\"node [fontsize\u003d12, fontname\u003dHelvetica];\\n\")\n+          .append(\"edge [fontsize\u003d9, fontcolor\u003dblue, fontname\u003dArial];\\n\");\n     } else {\n       sb.append(\"subgraph cluster_\" + name + \" {\\nlabel\u003d\\\"\" + name + \"\\\"\\n\");\n     }\n     for (Graph g : subgraphs) {\n       String ginfo \u003d g.generateGraphViz(indent+\"  \");\n-      sb.append(ginfo);\n-      sb.append(\"\\n\");\n+      sb.append(ginfo)\n+          .append(\"\\n\");\n     }\n     for (Node n : nodes) {\n       sb.append(String.format(\n           \"%s%s [ label \u003d %s ];%n\",\n           indent,\n           wrapSafeString(n.getUniqueId()),\n           n.id));\n       List\u003cEdge\u003e combinedOuts \u003d combineEdges(n.outs);\n       for (Edge e : combinedOuts) {\n         sb.append(String.format(\n             \"%s%s -\u003e %s [ label \u003d %s ];%n\",\n             indent,\n             wrapSafeString(e.from.getUniqueId()),\n             wrapSafeString(e.to.getUniqueId()),\n             wrapSafeString(e.label)));\n       }\n     }\n     sb.append(\"}\\n\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String generateGraphViz(String indent) {\n    StringBuilder sb \u003d new StringBuilder();\n    if (this.parent \u003d\u003d null) {\n      sb.append(\"digraph \" + name + \" {\\n\")\n          .append(String.format(\n              \"graph [ label\u003d%s, fontsize\u003d24, fontname\u003dHelvetica];%n\",\n              wrapSafeString(name)))\n          .append(\"node [fontsize\u003d12, fontname\u003dHelvetica];\\n\")\n          .append(\"edge [fontsize\u003d9, fontcolor\u003dblue, fontname\u003dArial];\\n\");\n    } else {\n      sb.append(\"subgraph cluster_\" + name + \" {\\nlabel\u003d\\\"\" + name + \"\\\"\\n\");\n    }\n    for (Graph g : subgraphs) {\n      String ginfo \u003d g.generateGraphViz(indent+\"  \");\n      sb.append(ginfo)\n          .append(\"\\n\");\n    }\n    for (Node n : nodes) {\n      sb.append(String.format(\n          \"%s%s [ label \u003d %s ];%n\",\n          indent,\n          wrapSafeString(n.getUniqueId()),\n          n.id));\n      List\u003cEdge\u003e combinedOuts \u003d combineEdges(n.outs);\n      for (Edge e : combinedOuts) {\n        sb.append(String.format(\n            \"%s%s -\u003e %s [ label \u003d %s ];%n\",\n            indent,\n            wrapSafeString(e.from.getUniqueId()),\n            wrapSafeString(e.to.getUniqueId()),\n            wrapSafeString(e.label)));\n      }\n    }\n    sb.append(\"}\\n\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/Graph.java",
      "extendedDetails": {}
    },
    "a696fbb001b946ae75f3b8e962839c2fd3decfa1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2939. Fix new findbugs warnings in hadoop-yarn-common. (Li Lu via junping_du)\n",
      "commitDate": "22/12/14 3:06 AM",
      "commitName": "a696fbb001b946ae75f3b8e962839c2fd3decfa1",
      "commitAuthor": "Junping Du",
      "commitDateOld": "16/06/13 11:51 PM",
      "commitNameOld": "4662b8b44313dc2a7ddcd9fcb0c8423b93345ce9",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 553.18,
      "commitsBetweenForRepo": 4083,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n   public String generateGraphViz(String indent) {\n     StringBuilder sb \u003d new StringBuilder();\n     if (this.parent \u003d\u003d null) {\n       sb.append(\"digraph \" + name + \" {\\n\");\n-      sb.append(String.format(\"graph [ label\u003d%s, fontsize\u003d24, fontname\u003dHelvetica];\\n\",\n+      sb.append(String.format(\"graph [ label\u003d%s, fontsize\u003d24, fontname\u003dHelvetica];%n\",\n           wrapSafeString(name)));\n       sb.append(\"node [fontsize\u003d12, fontname\u003dHelvetica];\\n\");\n       sb.append(\"edge [fontsize\u003d9, fontcolor\u003dblue, fontname\u003dArial];\\n\");\n     } else {\n       sb.append(\"subgraph cluster_\" + name + \" {\\nlabel\u003d\\\"\" + name + \"\\\"\\n\");\n     }\n     for (Graph g : subgraphs) {\n       String ginfo \u003d g.generateGraphViz(indent+\"  \");\n       sb.append(ginfo);\n       sb.append(\"\\n\");\n     }\n     for (Node n : nodes) {\n       sb.append(String.format(\n-          \"%s%s [ label \u003d %s ];\\n\",\n+          \"%s%s [ label \u003d %s ];%n\",\n           indent,\n           wrapSafeString(n.getUniqueId()),\n           n.id));\n       List\u003cEdge\u003e combinedOuts \u003d combineEdges(n.outs);\n       for (Edge e : combinedOuts) {\n         sb.append(String.format(\n-            \"%s%s -\u003e %s [ label \u003d %s ];\\n\",\n+            \"%s%s -\u003e %s [ label \u003d %s ];%n\",\n             indent,\n             wrapSafeString(e.from.getUniqueId()),\n             wrapSafeString(e.to.getUniqueId()),\n             wrapSafeString(e.label)));\n       }\n     }\n     sb.append(\"}\\n\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String generateGraphViz(String indent) {\n    StringBuilder sb \u003d new StringBuilder();\n    if (this.parent \u003d\u003d null) {\n      sb.append(\"digraph \" + name + \" {\\n\");\n      sb.append(String.format(\"graph [ label\u003d%s, fontsize\u003d24, fontname\u003dHelvetica];%n\",\n          wrapSafeString(name)));\n      sb.append(\"node [fontsize\u003d12, fontname\u003dHelvetica];\\n\");\n      sb.append(\"edge [fontsize\u003d9, fontcolor\u003dblue, fontname\u003dArial];\\n\");\n    } else {\n      sb.append(\"subgraph cluster_\" + name + \" {\\nlabel\u003d\\\"\" + name + \"\\\"\\n\");\n    }\n    for (Graph g : subgraphs) {\n      String ginfo \u003d g.generateGraphViz(indent+\"  \");\n      sb.append(ginfo);\n      sb.append(\"\\n\");\n    }\n    for (Node n : nodes) {\n      sb.append(String.format(\n          \"%s%s [ label \u003d %s ];%n\",\n          indent,\n          wrapSafeString(n.getUniqueId()),\n          n.id));\n      List\u003cEdge\u003e combinedOuts \u003d combineEdges(n.outs);\n      for (Edge e : combinedOuts) {\n        sb.append(String.format(\n            \"%s%s -\u003e %s [ label \u003d %s ];%n\",\n            indent,\n            wrapSafeString(e.from.getUniqueId()),\n            wrapSafeString(e.to.getUniqueId()),\n            wrapSafeString(e.label)));\n      }\n    }\n    sb.append(\"}\\n\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/Graph.java",
      "extendedDetails": {}
    },
    "4662b8b44313dc2a7ddcd9fcb0c8423b93345ce9": {
      "type": "Yfilerename",
      "commitMessage": "YARN-833. Moved Graph and VisualizeStateMachine into yarn.state package. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493654 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/06/13 11:51 PM",
      "commitName": "4662b8b44313dc2a7ddcd9fcb0c8423b93345ce9",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/06/13 11:39 PM",
      "commitNameOld": "b9efe6bd4a1277b4067ecde715a7713a85968886",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String generateGraphViz(String indent) {\n    StringBuilder sb \u003d new StringBuilder();\n    if (this.parent \u003d\u003d null) {\n      sb.append(\"digraph \" + name + \" {\\n\");\n      sb.append(String.format(\"graph [ label\u003d%s, fontsize\u003d24, fontname\u003dHelvetica];\\n\",\n          wrapSafeString(name)));\n      sb.append(\"node [fontsize\u003d12, fontname\u003dHelvetica];\\n\");\n      sb.append(\"edge [fontsize\u003d9, fontcolor\u003dblue, fontname\u003dArial];\\n\");\n    } else {\n      sb.append(\"subgraph cluster_\" + name + \" {\\nlabel\u003d\\\"\" + name + \"\\\"\\n\");\n    }\n    for (Graph g : subgraphs) {\n      String ginfo \u003d g.generateGraphViz(indent+\"  \");\n      sb.append(ginfo);\n      sb.append(\"\\n\");\n    }\n    for (Node n : nodes) {\n      sb.append(String.format(\n          \"%s%s [ label \u003d %s ];\\n\",\n          indent,\n          wrapSafeString(n.getUniqueId()),\n          n.id));\n      List\u003cEdge\u003e combinedOuts \u003d combineEdges(n.outs);\n      for (Edge e : combinedOuts) {\n        sb.append(String.format(\n            \"%s%s -\u003e %s [ label \u003d %s ];\\n\",\n            indent,\n            wrapSafeString(e.from.getUniqueId()),\n            wrapSafeString(e.to.getUniqueId()),\n            wrapSafeString(e.label)));\n      }\n    }\n    sb.append(\"}\\n\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/Graph.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Graph.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/state/Graph.java"
      }
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String generateGraphViz(String indent) {\n    StringBuilder sb \u003d new StringBuilder();\n    if (this.parent \u003d\u003d null) {\n      sb.append(\"digraph \" + name + \" {\\n\");\n      sb.append(String.format(\"graph [ label\u003d%s, fontsize\u003d24, fontname\u003dHelvetica];\\n\",\n          wrapSafeString(name)));\n      sb.append(\"node [fontsize\u003d12, fontname\u003dHelvetica];\\n\");\n      sb.append(\"edge [fontsize\u003d9, fontcolor\u003dblue, fontname\u003dArial];\\n\");\n    } else {\n      sb.append(\"subgraph cluster_\" + name + \" {\\nlabel\u003d\\\"\" + name + \"\\\"\\n\");\n    }\n    for (Graph g : subgraphs) {\n      String ginfo \u003d g.generateGraphViz(indent+\"  \");\n      sb.append(ginfo);\n      sb.append(\"\\n\");\n    }\n    for (Node n : nodes) {\n      sb.append(String.format(\n          \"%s%s [ label \u003d %s ];\\n\",\n          indent,\n          wrapSafeString(n.getUniqueId()),\n          n.id));\n      List\u003cEdge\u003e combinedOuts \u003d combineEdges(n.outs);\n      for (Edge e : combinedOuts) {\n        sb.append(String.format(\n            \"%s%s -\u003e %s [ label \u003d %s ];\\n\",\n            indent,\n            wrapSafeString(e.from.getUniqueId()),\n            wrapSafeString(e.to.getUniqueId()),\n            wrapSafeString(e.label)));\n      }\n    }\n    sb.append(\"}\\n\");\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Graph.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Graph.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Graph.java"
      }
    },
    "01fbb0fb4502dfa6bd8f76a4dfe7dfd0033e7d62": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2930. Added the ability to be able to generate graphs from the state-machine definitions. Contributed by Binglin Chang.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1173524 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/09/11 1:37 AM",
      "commitName": "01fbb0fb4502dfa6bd8f76a4dfe7dfd0033e7d62",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,35 @@\n+  public String generateGraphViz(String indent) {\n+    StringBuilder sb \u003d new StringBuilder();\n+    if (this.parent \u003d\u003d null) {\n+      sb.append(\"digraph \" + name + \" {\\n\");\n+      sb.append(String.format(\"graph [ label\u003d%s, fontsize\u003d24, fontname\u003dHelvetica];\\n\",\n+          wrapSafeString(name)));\n+      sb.append(\"node [fontsize\u003d12, fontname\u003dHelvetica];\\n\");\n+      sb.append(\"edge [fontsize\u003d9, fontcolor\u003dblue, fontname\u003dArial];\\n\");\n+    } else {\n+      sb.append(\"subgraph cluster_\" + name + \" {\\nlabel\u003d\\\"\" + name + \"\\\"\\n\");\n+    }\n+    for (Graph g : subgraphs) {\n+      String ginfo \u003d g.generateGraphViz(indent+\"  \");\n+      sb.append(ginfo);\n+      sb.append(\"\\n\");\n+    }\n+    for (Node n : nodes) {\n+      sb.append(String.format(\n+          \"%s%s [ label \u003d %s ];\\n\",\n+          indent,\n+          wrapSafeString(n.getUniqueId()),\n+          n.id));\n+      List\u003cEdge\u003e combinedOuts \u003d combineEdges(n.outs);\n+      for (Edge e : combinedOuts) {\n+        sb.append(String.format(\n+            \"%s%s -\u003e %s [ label \u003d %s ];\\n\",\n+            indent,\n+            wrapSafeString(e.from.getUniqueId()),\n+            wrapSafeString(e.to.getUniqueId()),\n+            wrapSafeString(e.label)));\n+      }\n+    }\n+    sb.append(\"}\\n\");\n+    return sb.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String generateGraphViz(String indent) {\n    StringBuilder sb \u003d new StringBuilder();\n    if (this.parent \u003d\u003d null) {\n      sb.append(\"digraph \" + name + \" {\\n\");\n      sb.append(String.format(\"graph [ label\u003d%s, fontsize\u003d24, fontname\u003dHelvetica];\\n\",\n          wrapSafeString(name)));\n      sb.append(\"node [fontsize\u003d12, fontname\u003dHelvetica];\\n\");\n      sb.append(\"edge [fontsize\u003d9, fontcolor\u003dblue, fontname\u003dArial];\\n\");\n    } else {\n      sb.append(\"subgraph cluster_\" + name + \" {\\nlabel\u003d\\\"\" + name + \"\\\"\\n\");\n    }\n    for (Graph g : subgraphs) {\n      String ginfo \u003d g.generateGraphViz(indent+\"  \");\n      sb.append(ginfo);\n      sb.append(\"\\n\");\n    }\n    for (Node n : nodes) {\n      sb.append(String.format(\n          \"%s%s [ label \u003d %s ];\\n\",\n          indent,\n          wrapSafeString(n.getUniqueId()),\n          n.id));\n      List\u003cEdge\u003e combinedOuts \u003d combineEdges(n.outs);\n      for (Edge e : combinedOuts) {\n        sb.append(String.format(\n            \"%s%s -\u003e %s [ label \u003d %s ];\\n\",\n            indent,\n            wrapSafeString(e.from.getUniqueId()),\n            wrapSafeString(e.to.getUniqueId()),\n            wrapSafeString(e.label)));\n      }\n    }\n    sb.append(\"}\\n\");\n    return sb.toString();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Graph.java"
    }
  }
}