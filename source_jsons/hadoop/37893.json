{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SpecifiedPlacementRule.java",
  "functionName": "getPlacementForApp",
  "functionId": "getPlacementForApp___asc-ApplicationSubmissionContext__user-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/SpecifiedPlacementRule.java",
  "functionStartLine": 55,
  "functionEndLine": 76,
  "numCommitsSeen": 1,
  "timeTaken": 544,
  "changeHistory": [
    "0aefe2846fbda5b3402879e343e65484355849c9"
  ],
  "changeHistoryShort": {
    "0aefe2846fbda5b3402879e343e65484355849c9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0aefe2846fbda5b3402879e343e65484355849c9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9298. Implement FS placement rules using PlacementRule interface. Contributed by Wilfred Spiegelenburg.\n",
      "commitDate": "04/03/19 11:49 PM",
      "commitName": "0aefe2846fbda5b3402879e343e65484355849c9",
      "commitAuthor": "Yufei Gu",
      "diff": "@@ -0,0 +1,22 @@\n+  public ApplicationPlacementContext getPlacementForApp(\n+      ApplicationSubmissionContext asc, String user) throws YarnException {\n+\n+    // Sanity check the provided queue\n+    String queueName \u003d asc.getQueue();\n+    if (!isValidQueueName(queueName)) {\n+      LOG.error(\"Specified queue name not valid: \u0027{}\u0027\", queueName);\n+      throw new YarnException(\"Application submitted by user \" + user +\n+          \"with illegal queue name \u0027\" + queueName + \"\u0027.\");\n+    }\n+    // On submission the requested queue will be set to \"default\" if no queue\n+    // is specified: just check the next rule in that case\n+    if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME)) {\n+      return null;\n+    }\n+    queueName \u003d assureRoot(queueName);\n+    // If we can create the queue in the rule or the queue exists return it\n+    if (createQueue || configuredQueue(queueName)) {\n+      return new ApplicationPlacementContext(queueName);\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationPlacementContext getPlacementForApp(\n      ApplicationSubmissionContext asc, String user) throws YarnException {\n\n    // Sanity check the provided queue\n    String queueName \u003d asc.getQueue();\n    if (!isValidQueueName(queueName)) {\n      LOG.error(\"Specified queue name not valid: \u0027{}\u0027\", queueName);\n      throw new YarnException(\"Application submitted by user \" + user +\n          \"with illegal queue name \u0027\" + queueName + \"\u0027.\");\n    }\n    // On submission the requested queue will be set to \"default\" if no queue\n    // is specified: just check the next rule in that case\n    if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME)) {\n      return null;\n    }\n    queueName \u003d assureRoot(queueName);\n    // If we can create the queue in the rule or the queue exists return it\n    if (createQueue || configuredQueue(queueName)) {\n      return new ApplicationPlacementContext(queueName);\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/SpecifiedPlacementRule.java"
    }
  }
}