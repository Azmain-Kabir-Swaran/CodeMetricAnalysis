{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceUtils.java",
  "functionName": "initializeResourceTypesIfNeeded",
  "functionId": "initializeResourceTypesIfNeeded___conf-Configuration__resourceFile-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
  "functionStartLine": 419,
  "functionEndLine": 437,
  "numCommitsSeen": 42,
  "timeTaken": 6214,
  "changeHistory": [
    "0921b706f7f80c40e061d2c0f8c8b2e4910071e5",
    "462f6c490efd2a38a9ba639bcda47b3aa667f650",
    "8bcc49e6771ca75f012211e27870a421b19233e7",
    "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
    "bf2b687412f9a830ec4834477ccf25dbe76fddcd",
    "53df3eac503064b8c4cd8eb2b659567622f4d8a7",
    "758b7719430c981a6d4d1644d9d03cd16b981cf3",
    "a6989af1d91d8b6795862c39d154823f8488c8de",
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
    "9e4ba6aff595b7a5b53d016c97c8334e10f1f2cb",
    "759114b0063907d4c07ea6ee261e861bf5cc3a9a",
    "ceb12c59a34677518a198e19acb4e29cdfc8a0e1"
  ],
  "changeHistoryShort": {
    "0921b706f7f80c40e061d2c0f8c8b2e4910071e5": "Ybodychange",
    "462f6c490efd2a38a9ba639bcda47b3aa667f650": "Ybodychange",
    "8bcc49e6771ca75f012211e27870a421b19233e7": "Ybodychange",
    "09b476e6dabe8039a41dde7930c8a9c0d14bb750": "Ybodychange",
    "bf2b687412f9a830ec4834477ccf25dbe76fddcd": "Ybodychange",
    "53df3eac503064b8c4cd8eb2b659567622f4d8a7": "Ybodychange",
    "758b7719430c981a6d4d1644d9d03cd16b981cf3": "Ybodychange",
    "a6989af1d91d8b6795862c39d154823f8488c8de": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d": "Ymultichange(Yfilerename,Ybodychange)",
    "9e4ba6aff595b7a5b53d016c97c8334e10f1f2cb": "Ybodychange",
    "759114b0063907d4c07ea6ee261e861bf5cc3a9a": "Ybodychange",
    "ceb12c59a34677518a198e19acb4e29cdfc8a0e1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0921b706f7f80c40e061d2c0f8c8b2e4910071e5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9037. [CSI] Ignore volume resource in resource calculators based on tags. Contributed by Sunil Govindan.\n",
      "commitDate": "07/01/19 10:30 PM",
      "commitName": "0921b706f7f80c40e061d2c0f8c8b2e4910071e5",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "15/10/18 3:08 AM",
      "commitNameOld": "8e5365e277a184ff65f2f6bca2bf037d1a9f3fd0",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 84.85,
      "commitsBetweenForRepo": 602,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   private static void initializeResourceTypesIfNeeded(Configuration conf,\n       String resourceFile) {\n     if (!initializedResources) {\n       synchronized (ResourceUtils.class) {\n         if (!initializedResources) {\n           Configuration resConf \u003d conf;\n \n           if (resConf \u003d\u003d null) {\n             resConf \u003d new YarnConfiguration();\n           }\n \n           addResourcesFileToConf(resourceFile, resConf);\n           initializeResourcesMap(resConf);\n         }\n       }\n     }\n     numKnownResourceTypes \u003d resourceTypes.size();\n+    numNonCountableResourceTypes \u003d nonCountableResourceTypes.size();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void initializeResourceTypesIfNeeded(Configuration conf,\n      String resourceFile) {\n    if (!initializedResources) {\n      synchronized (ResourceUtils.class) {\n        if (!initializedResources) {\n          Configuration resConf \u003d conf;\n\n          if (resConf \u003d\u003d null) {\n            resConf \u003d new YarnConfiguration();\n          }\n\n          addResourcesFileToConf(resourceFile, resConf);\n          initializeResourcesMap(resConf);\n        }\n      }\n    }\n    numKnownResourceTypes \u003d resourceTypes.size();\n    numNonCountableResourceTypes \u003d nonCountableResourceTypes.size();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {}
    },
    "462f6c490efd2a38a9ba639bcda47b3aa667f650": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7143. FileNotFound handling in ResourceUtils is inconsistent\n\nChange-Id: Ib1bb487e14a15edd2b5a42cf5078c5a2b295f069\n",
      "commitDate": "09/11/17 11:58 AM",
      "commitName": "462f6c490efd2a38a9ba639bcda47b3aa667f650",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "02/11/17 6:55 PM",
      "commitNameOld": "1700adc6f7e0ec9f855f554cd0d470a8f04e9c51",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 6.75,
      "commitsBetweenForRepo": 138,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,18 @@\n   private static void initializeResourceTypesIfNeeded(Configuration conf,\n       String resourceFile) {\n     if (!initializedResources) {\n       synchronized (ResourceUtils.class) {\n         if (!initializedResources) {\n-          if (conf \u003d\u003d null) {\n-            conf \u003d new YarnConfiguration();\n+          Configuration resConf \u003d conf;\n+\n+          if (resConf \u003d\u003d null) {\n+            resConf \u003d new YarnConfiguration();\n           }\n-          try {\n-            addResourcesFileToConf(resourceFile, conf);\n-          } catch (FileNotFoundException fe) {\n-            if (LOG.isDebugEnabled()) {\n-              LOG.debug(\"Unable to find \u0027\" + resourceFile + \"\u0027.\");\n-            }\n-          }\n-          initializeResourcesMap(conf);\n+\n+          addResourcesFileToConf(resourceFile, resConf);\n+          initializeResourcesMap(resConf);\n         }\n       }\n     }\n     numKnownResourceTypes \u003d resourceTypes.size();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void initializeResourceTypesIfNeeded(Configuration conf,\n      String resourceFile) {\n    if (!initializedResources) {\n      synchronized (ResourceUtils.class) {\n        if (!initializedResources) {\n          Configuration resConf \u003d conf;\n\n          if (resConf \u003d\u003d null) {\n            resConf \u003d new YarnConfiguration();\n          }\n\n          addResourcesFileToConf(resourceFile, resConf);\n          initializeResourcesMap(resConf);\n        }\n      }\n    }\n    numKnownResourceTypes \u003d resourceTypes.size();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {}
    },
    "8bcc49e6771ca75f012211e27870a421b19233e7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7205. Log improvements for the ResourceUtils. (Sunil G via wangda)\n\nChange-Id: I0f5b7a7f68ec5d3e1d52211f83fdd089bc0bfd37\n",
      "commitDate": "11/10/17 3:25 PM",
      "commitName": "8bcc49e6771ca75f012211e27870a421b19233e7",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "11/10/17 11:14 AM",
      "commitNameOld": "fa5cfc68f37c78b6cf26ce13247b9ff34da806cd",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.17,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private static void initializeResourceTypesIfNeeded(Configuration conf,\n       String resourceFile) {\n     if (!initializedResources) {\n       synchronized (ResourceUtils.class) {\n         if (!initializedResources) {\n           if (conf \u003d\u003d null) {\n             conf \u003d new YarnConfiguration();\n           }\n           try {\n             addResourcesFileToConf(resourceFile, conf);\n-            LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n           } catch (FileNotFoundException fe) {\n-            LOG.debug(\"Unable to find \u0027\" + resourceFile + \"\u0027.\");\n+            if (LOG.isDebugEnabled()) {\n+              LOG.debug(\"Unable to find \u0027\" + resourceFile + \"\u0027.\");\n+            }\n           }\n-\n           initializeResourcesMap(conf);\n         }\n       }\n     }\n     numKnownResourceTypes \u003d resourceTypes.size();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void initializeResourceTypesIfNeeded(Configuration conf,\n      String resourceFile) {\n    if (!initializedResources) {\n      synchronized (ResourceUtils.class) {\n        if (!initializedResources) {\n          if (conf \u003d\u003d null) {\n            conf \u003d new YarnConfiguration();\n          }\n          try {\n            addResourcesFileToConf(resourceFile, conf);\n          } catch (FileNotFoundException fe) {\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"Unable to find \u0027\" + resourceFile + \"\u0027.\");\n            }\n          }\n          initializeResourcesMap(conf);\n        }\n      }\n    }\n    numKnownResourceTypes \u003d resourceTypes.size();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {}
    },
    "09b476e6dabe8039a41dde7930c8a9c0d14bb750": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6612. Update fair scheduler policies to be aware of resource types. (Contributed by Daniel Templeton via Yufei Gu)\n",
      "commitDate": "14/09/17 11:23 AM",
      "commitName": "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
      "commitAuthor": "Yufei Gu",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "da0b6a354bf6f6bf37ca5a05a4a8eece09aa4893",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 2.09,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n   private static void initializeResourceTypesIfNeeded(Configuration conf,\n       String resourceFile) {\n     if (!initializedResources) {\n       synchronized (ResourceUtils.class) {\n         if (!initializedResources) {\n           if (conf \u003d\u003d null) {\n             conf \u003d new YarnConfiguration();\n           }\n           try {\n             addResourcesFileToConf(resourceFile, conf);\n             LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n           } catch (FileNotFoundException fe) {\n-            LOG.info(\"Unable to find \u0027\" + resourceFile\n-                + \"\u0027. Falling back to memory and vcores as resources.\");\n+            LOG.debug(\"Unable to find \u0027\" + resourceFile + \"\u0027.\");\n           }\n-          initializeResourcesMap(conf);\n \n+          initializeResourcesMap(conf);\n         }\n       }\n     }\n     numKnownResourceTypes \u003d resourceTypes.size();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void initializeResourceTypesIfNeeded(Configuration conf,\n      String resourceFile) {\n    if (!initializedResources) {\n      synchronized (ResourceUtils.class) {\n        if (!initializedResources) {\n          if (conf \u003d\u003d null) {\n            conf \u003d new YarnConfiguration();\n          }\n          try {\n            addResourcesFileToConf(resourceFile, conf);\n            LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n          } catch (FileNotFoundException fe) {\n            LOG.debug(\"Unable to find \u0027\" + resourceFile + \"\u0027.\");\n          }\n\n          initializeResourcesMap(conf);\n        }\n      }\n    }\n    numKnownResourceTypes \u003d resourceTypes.size();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {}
    },
    "bf2b687412f9a830ec4834477ccf25dbe76fddcd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7136. Additional Performance Improvement for Resource Profile Feature\n(Contributed by Wangda Tan via Daniel Templeton)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "bf2b687412f9a830ec4834477ccf25dbe76fddcd",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "805095496dfd8e50f71b70cf20845e954d3ba47c",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,22 @@\n   private static void initializeResourceTypesIfNeeded(Configuration conf,\n       String resourceFile) {\n     if (!initializedResources) {\n       synchronized (ResourceUtils.class) {\n         if (!initializedResources) {\n           if (conf \u003d\u003d null) {\n             conf \u003d new YarnConfiguration();\n           }\n           try {\n             addResourcesFileToConf(resourceFile, conf);\n             LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n-            initializeResourcesMap(conf);\n-            initializedResources \u003d true;\n           } catch (FileNotFoundException fe) {\n             LOG.info(\"Unable to find \u0027\" + resourceFile\n                 + \"\u0027. Falling back to memory and vcores as resources.\");\n-            initializeResourcesMap(conf);\n-            initializedResources \u003d true;\n           }\n+          initializeResourcesMap(conf);\n+\n         }\n       }\n     }\n     numKnownResourceTypes \u003d resourceTypes.size();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void initializeResourceTypesIfNeeded(Configuration conf,\n      String resourceFile) {\n    if (!initializedResources) {\n      synchronized (ResourceUtils.class) {\n        if (!initializedResources) {\n          if (conf \u003d\u003d null) {\n            conf \u003d new YarnConfiguration();\n          }\n          try {\n            addResourcesFileToConf(resourceFile, conf);\n            LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n          } catch (FileNotFoundException fe) {\n            LOG.info(\"Unable to find \u0027\" + resourceFile\n                + \"\u0027. Falling back to memory and vcores as resources.\");\n          }\n          initializeResourcesMap(conf);\n\n        }\n      }\n    }\n    numKnownResourceTypes \u003d resourceTypes.size();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {}
    },
    "53df3eac503064b8c4cd8eb2b659567622f4d8a7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7093. Improve log message in ResourceUtils. (Sunil G via wangda)\n\nChange-Id: I88928a747ee3eec17bc76fb71e9aaa632d091f0f\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "53df3eac503064b8c4cd8eb2b659567622f4d8a7",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "e490602e9b306d5b8a543b93fb15a7395bb9a03d",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   private static void initializeResourceTypesIfNeeded(Configuration conf,\n       String resourceFile) {\n     if (!initializedResources) {\n       synchronized (ResourceUtils.class) {\n         if (!initializedResources) {\n           if (conf \u003d\u003d null) {\n             conf \u003d new YarnConfiguration();\n           }\n           try {\n             addResourcesFileToConf(resourceFile, conf);\n             LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n             initializeResourcesMap(conf);\n             initializedResources \u003d true;\n           } catch (FileNotFoundException fe) {\n             LOG.info(\"Unable to find \u0027\" + resourceFile\n-                + \"\u0027. Falling back to memory and vcores as resources\", fe);\n+                + \"\u0027. Falling back to memory and vcores as resources.\");\n             initializeResourcesMap(conf);\n             initializedResources \u003d true;\n           }\n         }\n       }\n     }\n     numKnownResourceTypes \u003d resourceTypes.size();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void initializeResourceTypesIfNeeded(Configuration conf,\n      String resourceFile) {\n    if (!initializedResources) {\n      synchronized (ResourceUtils.class) {\n        if (!initializedResources) {\n          if (conf \u003d\u003d null) {\n            conf \u003d new YarnConfiguration();\n          }\n          try {\n            addResourcesFileToConf(resourceFile, conf);\n            LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n            initializeResourcesMap(conf);\n            initializedResources \u003d true;\n          } catch (FileNotFoundException fe) {\n            LOG.info(\"Unable to find \u0027\" + resourceFile\n                + \"\u0027. Falling back to memory and vcores as resources.\");\n            initializeResourcesMap(conf);\n            initializedResources \u003d true;\n          }\n        }\n      }\n    }\n    numKnownResourceTypes \u003d resourceTypes.size();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {}
    },
    "758b7719430c981a6d4d1644d9d03cd16b981cf3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6781. [YARN-3926] ResourceUtils#initializeResourcesMap takes an unnecessary Map parameter. Contributed by Yu-Tang Lin.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "758b7719430c981a6d4d1644d9d03cd16b981cf3",
      "commitAuthor": "Sunil G",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "df3855541af98a3805958f2b5b9db6be705d52ab",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,24 @@\n   private static void initializeResourceTypesIfNeeded(Configuration conf,\n       String resourceFile) {\n     if (!initializedResources) {\n       synchronized (ResourceUtils.class) {\n         if (!initializedResources) {\n-          Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n           if (conf \u003d\u003d null) {\n             conf \u003d new YarnConfiguration();\n           }\n           try {\n             addResourcesFileToConf(resourceFile, conf);\n             LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n-            initializeResourcesMap(conf, resources);\n+            initializeResourcesMap(conf);\n             initializedResources \u003d true;\n           } catch (FileNotFoundException fe) {\n             LOG.info(\"Unable to find \u0027\" + resourceFile\n                 + \"\u0027. Falling back to memory and vcores as resources\", fe);\n-            initializeResourcesMap(conf, resources);\n+            initializeResourcesMap(conf);\n             initializedResources \u003d true;\n           }\n         }\n       }\n     }\n     numKnownResourceTypes \u003d resourceTypes.size();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void initializeResourceTypesIfNeeded(Configuration conf,\n      String resourceFile) {\n    if (!initializedResources) {\n      synchronized (ResourceUtils.class) {\n        if (!initializedResources) {\n          if (conf \u003d\u003d null) {\n            conf \u003d new YarnConfiguration();\n          }\n          try {\n            addResourcesFileToConf(resourceFile, conf);\n            LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n            initializeResourcesMap(conf);\n            initializedResources \u003d true;\n          } catch (FileNotFoundException fe) {\n            LOG.info(\"Unable to find \u0027\" + resourceFile\n                + \"\u0027. Falling back to memory and vcores as resources\", fe);\n            initializeResourcesMap(conf);\n            initializedResources \u003d true;\n          }\n        }\n      }\n    }\n    numKnownResourceTypes \u003d resourceTypes.size();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {}
    },
    "a6989af1d91d8b6795862c39d154823f8488c8de": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-7030. [YARN-3926] Performance optimizations in Resource and ResourceUtils class. Contributed by Wangda Tan.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "a6989af1d91d8b6795862c39d154823f8488c8de",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-7030. [YARN-3926] Performance optimizations in Resource and ResourceUtils class. Contributed by Wangda Tan.\n",
          "commitDate": "12/09/17 9:19 AM",
          "commitName": "a6989af1d91d8b6795862c39d154823f8488c8de",
          "commitAuthor": "Sunil G",
          "commitDateOld": "12/09/17 9:19 AM",
          "commitNameOld": "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
          "commitAuthorOld": "Daniel Templeton",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-  private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n-      Configuration conf, String resourceFile) {\n+  private static void initializeResourceTypesIfNeeded(Configuration conf,\n+      String resourceFile) {\n     if (!initializedResources) {\n       synchronized (ResourceUtils.class) {\n         if (!initializedResources) {\n           Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n           if (conf \u003d\u003d null) {\n             conf \u003d new YarnConfiguration();\n           }\n           try {\n             addResourcesFileToConf(resourceFile, conf);\n             LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n             initializeResourcesMap(conf, resources);\n             initializedResources \u003d true;\n           } catch (FileNotFoundException fe) {\n             LOG.info(\"Unable to find \u0027\" + resourceFile\n                 + \"\u0027. Falling back to memory and vcores as resources\", fe);\n             initializeResourcesMap(conf, resources);\n             initializedResources \u003d true;\n           }\n         }\n       }\n     }\n-    return resourceTypes;\n+    numKnownResourceTypes \u003d resourceTypes.size();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void initializeResourceTypesIfNeeded(Configuration conf,\n      String resourceFile) {\n    if (!initializedResources) {\n      synchronized (ResourceUtils.class) {\n        if (!initializedResources) {\n          Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n          if (conf \u003d\u003d null) {\n            conf \u003d new YarnConfiguration();\n          }\n          try {\n            addResourcesFileToConf(resourceFile, conf);\n            LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n            initializeResourcesMap(conf, resources);\n            initializedResources \u003d true;\n          } catch (FileNotFoundException fe) {\n            LOG.info(\"Unable to find \u0027\" + resourceFile\n                + \"\u0027. Falling back to memory and vcores as resources\", fe);\n            initializeResourcesMap(conf, resources);\n            initializedResources \u003d true;\n          }\n        }\n      }\n    }\n    numKnownResourceTypes \u003d resourceTypes.size();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
          "extendedDetails": {
            "oldValue": "getResourceTypes",
            "newValue": "initializeResourceTypesIfNeeded"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-7030. [YARN-3926] Performance optimizations in Resource and ResourceUtils class. Contributed by Wangda Tan.\n",
          "commitDate": "12/09/17 9:19 AM",
          "commitName": "a6989af1d91d8b6795862c39d154823f8488c8de",
          "commitAuthor": "Sunil G",
          "commitDateOld": "12/09/17 9:19 AM",
          "commitNameOld": "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
          "commitAuthorOld": "Daniel Templeton",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-  private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n-      Configuration conf, String resourceFile) {\n+  private static void initializeResourceTypesIfNeeded(Configuration conf,\n+      String resourceFile) {\n     if (!initializedResources) {\n       synchronized (ResourceUtils.class) {\n         if (!initializedResources) {\n           Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n           if (conf \u003d\u003d null) {\n             conf \u003d new YarnConfiguration();\n           }\n           try {\n             addResourcesFileToConf(resourceFile, conf);\n             LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n             initializeResourcesMap(conf, resources);\n             initializedResources \u003d true;\n           } catch (FileNotFoundException fe) {\n             LOG.info(\"Unable to find \u0027\" + resourceFile\n                 + \"\u0027. Falling back to memory and vcores as resources\", fe);\n             initializeResourcesMap(conf, resources);\n             initializedResources \u003d true;\n           }\n         }\n       }\n     }\n-    return resourceTypes;\n+    numKnownResourceTypes \u003d resourceTypes.size();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void initializeResourceTypesIfNeeded(Configuration conf,\n      String resourceFile) {\n    if (!initializedResources) {\n      synchronized (ResourceUtils.class) {\n        if (!initializedResources) {\n          Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n          if (conf \u003d\u003d null) {\n            conf \u003d new YarnConfiguration();\n          }\n          try {\n            addResourcesFileToConf(resourceFile, conf);\n            LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n            initializeResourcesMap(conf, resources);\n            initializedResources \u003d true;\n          } catch (FileNotFoundException fe) {\n            LOG.info(\"Unable to find \u0027\" + resourceFile\n                + \"\u0027. Falling back to memory and vcores as resources\", fe);\n            initializeResourcesMap(conf, resources);\n            initializedResources \u003d true;\n          }\n        }\n      }\n    }\n    numKnownResourceTypes \u003d resourceTypes.size();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
          "extendedDetails": {
            "oldValue": "Map\u003cString,ResourceInformation\u003e",
            "newValue": "void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7030. [YARN-3926] Performance optimizations in Resource and ResourceUtils class. Contributed by Wangda Tan.\n",
          "commitDate": "12/09/17 9:19 AM",
          "commitName": "a6989af1d91d8b6795862c39d154823f8488c8de",
          "commitAuthor": "Sunil G",
          "commitDateOld": "12/09/17 9:19 AM",
          "commitNameOld": "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
          "commitAuthorOld": "Daniel Templeton",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-  private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n-      Configuration conf, String resourceFile) {\n+  private static void initializeResourceTypesIfNeeded(Configuration conf,\n+      String resourceFile) {\n     if (!initializedResources) {\n       synchronized (ResourceUtils.class) {\n         if (!initializedResources) {\n           Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n           if (conf \u003d\u003d null) {\n             conf \u003d new YarnConfiguration();\n           }\n           try {\n             addResourcesFileToConf(resourceFile, conf);\n             LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n             initializeResourcesMap(conf, resources);\n             initializedResources \u003d true;\n           } catch (FileNotFoundException fe) {\n             LOG.info(\"Unable to find \u0027\" + resourceFile\n                 + \"\u0027. Falling back to memory and vcores as resources\", fe);\n             initializeResourcesMap(conf, resources);\n             initializedResources \u003d true;\n           }\n         }\n       }\n     }\n-    return resourceTypes;\n+    numKnownResourceTypes \u003d resourceTypes.size();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void initializeResourceTypesIfNeeded(Configuration conf,\n      String resourceFile) {\n    if (!initializedResources) {\n      synchronized (ResourceUtils.class) {\n        if (!initializedResources) {\n          Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n          if (conf \u003d\u003d null) {\n            conf \u003d new YarnConfiguration();\n          }\n          try {\n            addResourcesFileToConf(resourceFile, conf);\n            LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n            initializeResourcesMap(conf, resources);\n            initializedResources \u003d true;\n          } catch (FileNotFoundException fe) {\n            LOG.info(\"Unable to find \u0027\" + resourceFile\n                + \"\u0027. Falling back to memory and vcores as resources\", fe);\n            initializeResourcesMap(conf, resources);\n            initializedResources \u003d true;\n          }\n        }\n      }\n    }\n    numKnownResourceTypes \u003d resourceTypes.size();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "YARN-6788. [YARN-3926] Improve performance of resource profile branch\n(Contributed by Sunil Govindan via Daniel Templeton)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
      "commitAuthor": "Daniel Templeton",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-6788. [YARN-3926] Improve performance of resource profile branch\n(Contributed by Sunil Govindan via Daniel Templeton)\n",
          "commitDate": "12/09/17 9:19 AM",
          "commitName": "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
          "commitAuthor": "Daniel Templeton",
          "commitDateOld": "12/09/17 9:19 AM",
          "commitNameOld": "4e5632d28eb8f6b1b8830c2aa89ec6321d477977",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,25 @@\n   private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n       Configuration conf, String resourceFile) {\n-    if (lock \u003d\u003d null) {\n+    if (!initializedResources) {\n       synchronized (ResourceUtils.class) {\n-        if (lock \u003d\u003d null) {\n-          synchronized (ResourceUtils.class) {\n-            Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n-            if (conf \u003d\u003d null) {\n-              conf \u003d new YarnConfiguration();\n-            }\n-            try {\n-              addResourcesFileToConf(resourceFile, conf);\n-              LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n-              initializeResourcesMap(conf, resources);\n-              lock \u003d new Object();\n-            } catch (FileNotFoundException fe) {\n-              LOG.info(\"Unable to find \u0027\" + resourceFile\n-                  + \"\u0027. Falling back to memory and vcores as resources\", fe);\n-              initializeResourcesMap(conf, resources);\n-              lock \u003d new Object();\n-            }\n+        if (!initializedResources) {\n+          Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n+          if (conf \u003d\u003d null) {\n+            conf \u003d new YarnConfiguration();\n+          }\n+          try {\n+            addResourcesFileToConf(resourceFile, conf);\n+            LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n+            initializeResourcesMap(conf, resources);\n+            initializedResources \u003d true;\n+          } catch (FileNotFoundException fe) {\n+            LOG.info(\"Unable to find \u0027\" + resourceFile\n+                + \"\u0027. Falling back to memory and vcores as resources\", fe);\n+            initializeResourcesMap(conf, resources);\n+            initializedResources \u003d true;\n           }\n         }\n       }\n     }\n-    return readOnlyResources;\n+    return resourceTypes;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n      Configuration conf, String resourceFile) {\n    if (!initializedResources) {\n      synchronized (ResourceUtils.class) {\n        if (!initializedResources) {\n          Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n          if (conf \u003d\u003d null) {\n            conf \u003d new YarnConfiguration();\n          }\n          try {\n            addResourcesFileToConf(resourceFile, conf);\n            LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n            initializeResourcesMap(conf, resources);\n            initializedResources \u003d true;\n          } catch (FileNotFoundException fe) {\n            LOG.info(\"Unable to find \u0027\" + resourceFile\n                + \"\u0027. Falling back to memory and vcores as resources\", fe);\n            initializeResourcesMap(conf, resources);\n            initializedResources \u003d true;\n          }\n        }\n      }\n    }\n    return resourceTypes;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6788. [YARN-3926] Improve performance of resource profile branch\n(Contributed by Sunil Govindan via Daniel Templeton)\n",
          "commitDate": "12/09/17 9:19 AM",
          "commitName": "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
          "commitAuthor": "Daniel Templeton",
          "commitDateOld": "12/09/17 9:19 AM",
          "commitNameOld": "4e5632d28eb8f6b1b8830c2aa89ec6321d477977",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,25 @@\n   private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n       Configuration conf, String resourceFile) {\n-    if (lock \u003d\u003d null) {\n+    if (!initializedResources) {\n       synchronized (ResourceUtils.class) {\n-        if (lock \u003d\u003d null) {\n-          synchronized (ResourceUtils.class) {\n-            Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n-            if (conf \u003d\u003d null) {\n-              conf \u003d new YarnConfiguration();\n-            }\n-            try {\n-              addResourcesFileToConf(resourceFile, conf);\n-              LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n-              initializeResourcesMap(conf, resources);\n-              lock \u003d new Object();\n-            } catch (FileNotFoundException fe) {\n-              LOG.info(\"Unable to find \u0027\" + resourceFile\n-                  + \"\u0027. Falling back to memory and vcores as resources\", fe);\n-              initializeResourcesMap(conf, resources);\n-              lock \u003d new Object();\n-            }\n+        if (!initializedResources) {\n+          Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n+          if (conf \u003d\u003d null) {\n+            conf \u003d new YarnConfiguration();\n+          }\n+          try {\n+            addResourcesFileToConf(resourceFile, conf);\n+            LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n+            initializeResourcesMap(conf, resources);\n+            initializedResources \u003d true;\n+          } catch (FileNotFoundException fe) {\n+            LOG.info(\"Unable to find \u0027\" + resourceFile\n+                + \"\u0027. Falling back to memory and vcores as resources\", fe);\n+            initializeResourcesMap(conf, resources);\n+            initializedResources \u003d true;\n           }\n         }\n       }\n     }\n-    return readOnlyResources;\n+    return resourceTypes;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n      Configuration conf, String resourceFile) {\n    if (!initializedResources) {\n      synchronized (ResourceUtils.class) {\n        if (!initializedResources) {\n          Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n          if (conf \u003d\u003d null) {\n            conf \u003d new YarnConfiguration();\n          }\n          try {\n            addResourcesFileToConf(resourceFile, conf);\n            LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n            initializeResourcesMap(conf, resources);\n            initializedResources \u003d true;\n          } catch (FileNotFoundException fe) {\n            LOG.info(\"Unable to find \u0027\" + resourceFile\n                + \"\u0027. Falling back to memory and vcores as resources\", fe);\n            initializeResourcesMap(conf, resources);\n            initializedResources \u003d true;\n          }\n        }\n      }\n    }\n    return resourceTypes;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "9e4ba6aff595b7a5b53d016c97c8334e10f1f2cb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5242. Update DominantResourceCalculator to consider all resource types in calculations. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "9e4ba6aff595b7a5b53d016c97c8334e10f1f2cb",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "759114b0063907d4c07ea6ee261e861bf5cc3a9a",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n       Configuration conf, String resourceFile) {\n     if (lock \u003d\u003d null) {\n       synchronized (ResourceUtils.class) {\n         if (lock \u003d\u003d null) {\n           synchronized (ResourceUtils.class) {\n-            lock \u003d new Object();\n             Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n             if (conf \u003d\u003d null) {\n               conf \u003d new YarnConfiguration();\n             }\n             try {\n               addResourcesFileToConf(resourceFile, conf);\n               LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n               initializeResourcesMap(conf, resources);\n+              lock \u003d new Object();\n             } catch (FileNotFoundException fe) {\n               LOG.info(\"Unable to find \u0027\" + resourceFile\n                   + \"\u0027. Falling back to memory and vcores as resources\", fe);\n               initializeResourcesMap(conf, resources);\n+              lock \u003d new Object();\n             }\n           }\n         }\n       }\n     }\n     return readOnlyResources;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n      Configuration conf, String resourceFile) {\n    if (lock \u003d\u003d null) {\n      synchronized (ResourceUtils.class) {\n        if (lock \u003d\u003d null) {\n          synchronized (ResourceUtils.class) {\n            Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n            if (conf \u003d\u003d null) {\n              conf \u003d new YarnConfiguration();\n            }\n            try {\n              addResourcesFileToConf(resourceFile, conf);\n              LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n              initializeResourcesMap(conf, resources);\n              lock \u003d new Object();\n            } catch (FileNotFoundException fe) {\n              LOG.info(\"Unable to find \u0027\" + resourceFile\n                  + \"\u0027. Falling back to memory and vcores as resources\", fe);\n              initializeResourcesMap(conf, resources);\n              lock \u003d new Object();\n            }\n          }\n        }\n      }\n    }\n    return readOnlyResources;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {}
    },
    "759114b0063907d4c07ea6ee261e861bf5cc3a9a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4830. Add support for resource types in the nodemanager. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "759114b0063907d4c07ea6ee261e861bf5cc3a9a",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "ceb12c59a34677518a198e19acb4e29cdfc8a0e1",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,26 @@\n   private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n       Configuration conf, String resourceFile) {\n     if (lock \u003d\u003d null) {\n       synchronized (ResourceUtils.class) {\n         if (lock \u003d\u003d null) {\n           synchronized (ResourceUtils.class) {\n             lock \u003d new Object();\n             Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n             if (conf \u003d\u003d null) {\n               conf \u003d new YarnConfiguration();\n             }\n             try {\n-              InputStream ris \u003d getConfInputStream(resourceFile, conf);\n+              addResourcesFileToConf(resourceFile, conf);\n               LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n-              conf.addResource(ris);\n               initializeResourcesMap(conf, resources);\n-              return resources;\n             } catch (FileNotFoundException fe) {\n               LOG.info(\"Unable to find \u0027\" + resourceFile\n                   + \"\u0027. Falling back to memory and vcores as resources\", fe);\n               initializeResourcesMap(conf, resources);\n-            } catch (IOException ie) {\n-              LOG.fatal(\n-                  \"Exception trying to read resource types configuration \u0027\"\n-                      + resourceFile + \"\u0027.\", ie);\n-              throw new YarnRuntimeException(ie);\n-            } catch (YarnException ye) {\n-              LOG.fatal(\n-                  \"YARN Exception trying to read resource types configuration \u0027\"\n-                      + resourceFile + \"\u0027.\", ye);\n-              throw new YarnRuntimeException(ye);\n             }\n           }\n         }\n       }\n     }\n     return readOnlyResources;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n      Configuration conf, String resourceFile) {\n    if (lock \u003d\u003d null) {\n      synchronized (ResourceUtils.class) {\n        if (lock \u003d\u003d null) {\n          synchronized (ResourceUtils.class) {\n            lock \u003d new Object();\n            Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n            if (conf \u003d\u003d null) {\n              conf \u003d new YarnConfiguration();\n            }\n            try {\n              addResourcesFileToConf(resourceFile, conf);\n              LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n              initializeResourcesMap(conf, resources);\n            } catch (FileNotFoundException fe) {\n              LOG.info(\"Unable to find \u0027\" + resourceFile\n                  + \"\u0027. Falling back to memory and vcores as resources\", fe);\n              initializeResourcesMap(conf, resources);\n            }\n          }\n        }\n      }\n    }\n    return readOnlyResources;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
      "extendedDetails": {}
    },
    "ceb12c59a34677518a198e19acb4e29cdfc8a0e1": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4715. Add support to read resource types from a config file. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "ceb12c59a34677518a198e19acb4e29cdfc8a0e1",
      "commitAuthor": "Varun Vasudev",
      "diff": "@@ -0,0 +1,38 @@\n+  private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n+      Configuration conf, String resourceFile) {\n+    if (lock \u003d\u003d null) {\n+      synchronized (ResourceUtils.class) {\n+        if (lock \u003d\u003d null) {\n+          synchronized (ResourceUtils.class) {\n+            lock \u003d new Object();\n+            Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n+            if (conf \u003d\u003d null) {\n+              conf \u003d new YarnConfiguration();\n+            }\n+            try {\n+              InputStream ris \u003d getConfInputStream(resourceFile, conf);\n+              LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n+              conf.addResource(ris);\n+              initializeResourcesMap(conf, resources);\n+              return resources;\n+            } catch (FileNotFoundException fe) {\n+              LOG.info(\"Unable to find \u0027\" + resourceFile\n+                  + \"\u0027. Falling back to memory and vcores as resources\", fe);\n+              initializeResourcesMap(conf, resources);\n+            } catch (IOException ie) {\n+              LOG.fatal(\n+                  \"Exception trying to read resource types configuration \u0027\"\n+                      + resourceFile + \"\u0027.\", ie);\n+              throw new YarnRuntimeException(ie);\n+            } catch (YarnException ye) {\n+              LOG.fatal(\n+                  \"YARN Exception trying to read resource types configuration \u0027\"\n+                      + resourceFile + \"\u0027.\", ye);\n+              throw new YarnRuntimeException(ye);\n+            }\n+          }\n+        }\n+      }\n+    }\n+    return readOnlyResources;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static Map\u003cString, ResourceInformation\u003e getResourceTypes(\n      Configuration conf, String resourceFile) {\n    if (lock \u003d\u003d null) {\n      synchronized (ResourceUtils.class) {\n        if (lock \u003d\u003d null) {\n          synchronized (ResourceUtils.class) {\n            lock \u003d new Object();\n            Map\u003cString, ResourceInformation\u003e resources \u003d new HashMap\u003c\u003e();\n            if (conf \u003d\u003d null) {\n              conf \u003d new YarnConfiguration();\n            }\n            try {\n              InputStream ris \u003d getConfInputStream(resourceFile, conf);\n              LOG.debug(\"Found \" + resourceFile + \", adding to configuration\");\n              conf.addResource(ris);\n              initializeResourcesMap(conf, resources);\n              return resources;\n            } catch (FileNotFoundException fe) {\n              LOG.info(\"Unable to find \u0027\" + resourceFile\n                  + \"\u0027. Falling back to memory and vcores as resources\", fe);\n              initializeResourcesMap(conf, resources);\n            } catch (IOException ie) {\n              LOG.fatal(\n                  \"Exception trying to read resource types configuration \u0027\"\n                      + resourceFile + \"\u0027.\", ie);\n              throw new YarnRuntimeException(ie);\n            } catch (YarnException ye) {\n              LOG.fatal(\n                  \"YARN Exception trying to read resource types configuration \u0027\"\n                      + resourceFile + \"\u0027.\", ye);\n              throw new YarnRuntimeException(ye);\n            }\n          }\n        }\n      }\n    }\n    return readOnlyResources;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java"
    }
  }
}