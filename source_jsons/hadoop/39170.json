{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SchedulerApplicationAttempt.java",
  "functionName": "transferStateFromPreviousAttempt",
  "functionId": "transferStateFromPreviousAttempt___appAttempt-SchedulerApplicationAttempt",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
  "functionStartLine": 1173,
  "functionEndLine": 1190,
  "numCommitsSeen": 105,
  "timeTaken": 4170,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
    "586348e4cbf197188057d6b843a6701cfffdaff3",
    "1393581bceda234c88cafec00dbfc0ef2a402e83"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "b8a30f2f170ffbd590e7366c3c944ab4919e40df": "Ymultichange(Ymodifierchange,Ybodychange)",
    "586348e4cbf197188057d6b843a6701cfffdaff3": "Ybodychange",
    "1393581bceda234c88cafec00dbfc0ef2a402e83": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public void transferStateFromPreviousAttempt(\n       SchedulerApplicationAttempt appAttempt) {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       this.liveContainers \u003d appAttempt.getLiveContainersMap();\n       // this.reReservations \u003d appAttempt.reReservations;\n       this.attemptResourceUsage.copyAllUsed(appAttempt.attemptResourceUsage);\n       this.setHeadroom(appAttempt.resourceLimit);\n       // this.currentReservation \u003d appAttempt.currentReservation;\n       // this.newlyAllocatedContainers \u003d appAttempt.newlyAllocatedContainers;\n       // this.schedulingOpportunities \u003d appAttempt.schedulingOpportunities;\n       this.lastScheduledContainer \u003d appAttempt.getLastScheduledContainer();\n       this.appSchedulingInfo.transferStateFromPreviousAppSchedulingInfo(\n           appAttempt.appSchedulingInfo);\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void transferStateFromPreviousAttempt(\n      SchedulerApplicationAttempt appAttempt) {\n    writeLock.lock();\n    try {\n      this.liveContainers \u003d appAttempt.getLiveContainersMap();\n      // this.reReservations \u003d appAttempt.reReservations;\n      this.attemptResourceUsage.copyAllUsed(appAttempt.attemptResourceUsage);\n      this.setHeadroom(appAttempt.resourceLimit);\n      // this.currentReservation \u003d appAttempt.currentReservation;\n      // this.newlyAllocatedContainers \u003d appAttempt.newlyAllocatedContainers;\n      // this.schedulingOpportunities \u003d appAttempt.schedulingOpportunities;\n      this.lastScheduledContainer \u003d appAttempt.getLastScheduledContainer();\n      this.appSchedulingInfo.transferStateFromPreviousAppSchedulingInfo(\n          appAttempt.appSchedulingInfo);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
      "extendedDetails": {}
    },
    "b8a30f2f170ffbd590e7366c3c944ab4919e40df": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3141. Improve locks in SchedulerApplicationAttempt/FSAppAttempt/FiCaSchedulerApp. Contributed by Wangda Tan\n",
      "commitDate": "19/09/16 2:08 AM",
      "commitName": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3141. Improve locks in SchedulerApplicationAttempt/FSAppAttempt/FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "19/09/16 2:08 AM",
          "commitName": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
          "commitAuthor": "Jian He",
          "commitDateOld": "30/08/16 3:52 PM",
          "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 19.43,
          "commitsBetweenForRepo": 91,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,18 @@\n-  public synchronized void transferStateFromPreviousAttempt(\n+  public void transferStateFromPreviousAttempt(\n       SchedulerApplicationAttempt appAttempt) {\n-    this.liveContainers \u003d appAttempt.getLiveContainersMap();\n-    // this.reReservations \u003d appAttempt.reReservations;\n-    this.attemptResourceUsage.copyAllUsed(appAttempt.attemptResourceUsage);\n-    this.resourceLimit \u003d appAttempt.getResourceLimit();\n-    // this.currentReservation \u003d appAttempt.currentReservation;\n-    // this.newlyAllocatedContainers \u003d appAttempt.newlyAllocatedContainers;\n-    // this.schedulingOpportunities \u003d appAttempt.schedulingOpportunities;\n-    this.lastScheduledContainer \u003d appAttempt.getLastScheduledContainer();\n-    this.appSchedulingInfo\n-      .transferStateFromPreviousAppSchedulingInfo(appAttempt.appSchedulingInfo);\n+    try {\n+      writeLock.lock();\n+      this.liveContainers \u003d appAttempt.getLiveContainersMap();\n+      // this.reReservations \u003d appAttempt.reReservations;\n+      this.attemptResourceUsage.copyAllUsed(appAttempt.attemptResourceUsage);\n+      this.setHeadroom(appAttempt.resourceLimit);\n+      // this.currentReservation \u003d appAttempt.currentReservation;\n+      // this.newlyAllocatedContainers \u003d appAttempt.newlyAllocatedContainers;\n+      // this.schedulingOpportunities \u003d appAttempt.schedulingOpportunities;\n+      this.lastScheduledContainer \u003d appAttempt.getLastScheduledContainer();\n+      this.appSchedulingInfo.transferStateFromPreviousAppSchedulingInfo(\n+          appAttempt.appSchedulingInfo);\n+    } finally {\n+      writeLock.unlock();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void transferStateFromPreviousAttempt(\n      SchedulerApplicationAttempt appAttempt) {\n    try {\n      writeLock.lock();\n      this.liveContainers \u003d appAttempt.getLiveContainersMap();\n      // this.reReservations \u003d appAttempt.reReservations;\n      this.attemptResourceUsage.copyAllUsed(appAttempt.attemptResourceUsage);\n      this.setHeadroom(appAttempt.resourceLimit);\n      // this.currentReservation \u003d appAttempt.currentReservation;\n      // this.newlyAllocatedContainers \u003d appAttempt.newlyAllocatedContainers;\n      // this.schedulingOpportunities \u003d appAttempt.schedulingOpportunities;\n      this.lastScheduledContainer \u003d appAttempt.getLastScheduledContainer();\n      this.appSchedulingInfo.transferStateFromPreviousAppSchedulingInfo(\n          appAttempt.appSchedulingInfo);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3141. Improve locks in SchedulerApplicationAttempt/FSAppAttempt/FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "19/09/16 2:08 AM",
          "commitName": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
          "commitAuthor": "Jian He",
          "commitDateOld": "30/08/16 3:52 PM",
          "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 19.43,
          "commitsBetweenForRepo": 91,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,18 @@\n-  public synchronized void transferStateFromPreviousAttempt(\n+  public void transferStateFromPreviousAttempt(\n       SchedulerApplicationAttempt appAttempt) {\n-    this.liveContainers \u003d appAttempt.getLiveContainersMap();\n-    // this.reReservations \u003d appAttempt.reReservations;\n-    this.attemptResourceUsage.copyAllUsed(appAttempt.attemptResourceUsage);\n-    this.resourceLimit \u003d appAttempt.getResourceLimit();\n-    // this.currentReservation \u003d appAttempt.currentReservation;\n-    // this.newlyAllocatedContainers \u003d appAttempt.newlyAllocatedContainers;\n-    // this.schedulingOpportunities \u003d appAttempt.schedulingOpportunities;\n-    this.lastScheduledContainer \u003d appAttempt.getLastScheduledContainer();\n-    this.appSchedulingInfo\n-      .transferStateFromPreviousAppSchedulingInfo(appAttempt.appSchedulingInfo);\n+    try {\n+      writeLock.lock();\n+      this.liveContainers \u003d appAttempt.getLiveContainersMap();\n+      // this.reReservations \u003d appAttempt.reReservations;\n+      this.attemptResourceUsage.copyAllUsed(appAttempt.attemptResourceUsage);\n+      this.setHeadroom(appAttempt.resourceLimit);\n+      // this.currentReservation \u003d appAttempt.currentReservation;\n+      // this.newlyAllocatedContainers \u003d appAttempt.newlyAllocatedContainers;\n+      // this.schedulingOpportunities \u003d appAttempt.schedulingOpportunities;\n+      this.lastScheduledContainer \u003d appAttempt.getLastScheduledContainer();\n+      this.appSchedulingInfo.transferStateFromPreviousAppSchedulingInfo(\n+          appAttempt.appSchedulingInfo);\n+    } finally {\n+      writeLock.unlock();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void transferStateFromPreviousAttempt(\n      SchedulerApplicationAttempt appAttempt) {\n    try {\n      writeLock.lock();\n      this.liveContainers \u003d appAttempt.getLiveContainersMap();\n      // this.reReservations \u003d appAttempt.reReservations;\n      this.attemptResourceUsage.copyAllUsed(appAttempt.attemptResourceUsage);\n      this.setHeadroom(appAttempt.resourceLimit);\n      // this.currentReservation \u003d appAttempt.currentReservation;\n      // this.newlyAllocatedContainers \u003d appAttempt.newlyAllocatedContainers;\n      // this.schedulingOpportunities \u003d appAttempt.schedulingOpportunities;\n      this.lastScheduledContainer \u003d appAttempt.getLastScheduledContainer();\n      this.appSchedulingInfo.transferStateFromPreviousAppSchedulingInfo(\n          appAttempt.appSchedulingInfo);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
          "extendedDetails": {}
        }
      ]
    },
    "586348e4cbf197188057d6b843a6701cfffdaff3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3356. Capacity Scheduler FiCaSchedulerApp should use ResourceUsage to track used-resources-by-label. Contributed by Wangda Tan\n",
      "commitDate": "20/03/15 1:54 PM",
      "commitName": "586348e4cbf197188057d6b843a6701cfffdaff3",
      "commitAuthor": "Jian He",
      "commitDateOld": "17/03/15 9:30 PM",
      "commitNameOld": "658097d6da1b1aac8e01db459f0c3b456e99652f",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 2.68,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public synchronized void transferStateFromPreviousAttempt(\n       SchedulerApplicationAttempt appAttempt) {\n     this.liveContainers \u003d appAttempt.getLiveContainersMap();\n     // this.reReservations \u003d appAttempt.reReservations;\n-    this.currentConsumption \u003d appAttempt.getCurrentConsumption();\n+    this.attemptResourceUsage.copyAllUsed(appAttempt.attemptResourceUsage);\n     this.resourceLimit \u003d appAttempt.getResourceLimit();\n     // this.currentReservation \u003d appAttempt.currentReservation;\n     // this.newlyAllocatedContainers \u003d appAttempt.newlyAllocatedContainers;\n     // this.schedulingOpportunities \u003d appAttempt.schedulingOpportunities;\n     this.lastScheduledContainer \u003d appAttempt.getLastScheduledContainer();\n     this.appSchedulingInfo\n       .transferStateFromPreviousAppSchedulingInfo(appAttempt.appSchedulingInfo);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void transferStateFromPreviousAttempt(\n      SchedulerApplicationAttempt appAttempt) {\n    this.liveContainers \u003d appAttempt.getLiveContainersMap();\n    // this.reReservations \u003d appAttempt.reReservations;\n    this.attemptResourceUsage.copyAllUsed(appAttempt.attemptResourceUsage);\n    this.resourceLimit \u003d appAttempt.getResourceLimit();\n    // this.currentReservation \u003d appAttempt.currentReservation;\n    // this.newlyAllocatedContainers \u003d appAttempt.newlyAllocatedContainers;\n    // this.schedulingOpportunities \u003d appAttempt.schedulingOpportunities;\n    this.lastScheduledContainer \u003d appAttempt.getLastScheduledContainer();\n    this.appSchedulingInfo\n      .transferStateFromPreviousAppSchedulingInfo(appAttempt.appSchedulingInfo);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
      "extendedDetails": {}
    },
    "1393581bceda234c88cafec00dbfc0ef2a402e83": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1490. Introduced the ability to make ResourceManager optionally not kill all containers when an ApplicationMaster exits. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1557143 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/01/14 7:04 AM",
      "commitName": "1393581bceda234c88cafec00dbfc0ef2a402e83",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,13 @@\n+  public synchronized void transferStateFromPreviousAttempt(\n+      SchedulerApplicationAttempt appAttempt) {\n+    this.liveContainers \u003d appAttempt.getLiveContainersMap();\n+    // this.reReservations \u003d appAttempt.reReservations;\n+    this.currentConsumption \u003d appAttempt.getCurrentConsumption();\n+    this.resourceLimit \u003d appAttempt.getResourceLimit();\n+    // this.currentReservation \u003d appAttempt.currentReservation;\n+    // this.newlyAllocatedContainers \u003d appAttempt.newlyAllocatedContainers;\n+    // this.schedulingOpportunities \u003d appAttempt.schedulingOpportunities;\n+    this.lastScheduledContainer \u003d appAttempt.getLastScheduledContainer();\n+    this.appSchedulingInfo\n+      .transferStateFromPreviousAppSchedulingInfo(appAttempt.appSchedulingInfo);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void transferStateFromPreviousAttempt(\n      SchedulerApplicationAttempt appAttempt) {\n    this.liveContainers \u003d appAttempt.getLiveContainersMap();\n    // this.reReservations \u003d appAttempt.reReservations;\n    this.currentConsumption \u003d appAttempt.getCurrentConsumption();\n    this.resourceLimit \u003d appAttempt.getResourceLimit();\n    // this.currentReservation \u003d appAttempt.currentReservation;\n    // this.newlyAllocatedContainers \u003d appAttempt.newlyAllocatedContainers;\n    // this.schedulingOpportunities \u003d appAttempt.schedulingOpportunities;\n    this.lastScheduledContainer \u003d appAttempt.getLastScheduledContainer();\n    this.appSchedulingInfo\n      .transferStateFromPreviousAppSchedulingInfo(appAttempt.appSchedulingInfo);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java"
    }
  }
}