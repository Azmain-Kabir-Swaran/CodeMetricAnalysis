{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ComputeFairShares.java",
  "functionName": "getFairShareIfFixed",
  "functionId": "getFairShareIfFixed___sched-Schedulable__isSteadyShare-boolean__type-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
  "functionStartLine": 246,
  "functionEndLine": 267,
  "numCommitsSeen": 21,
  "timeTaken": 3810,
  "changeHistory": [
    "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae",
    "3072c83b38fd87318d502a7d1bc518963b5ccdf7"
  ],
  "changeHistoryShort": {
    "09b476e6dabe8039a41dde7930c8a9c0d14bb750": "Ymultichange(Yparameterchange,Ybodychange)",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": "Ymultichange(Yreturntypechange,Ybodychange)",
    "3072c83b38fd87318d502a7d1bc518963b5ccdf7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "09b476e6dabe8039a41dde7930c8a9c0d14bb750": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6612. Update fair scheduler policies to be aware of resource types. (Contributed by Daniel Templeton via Yufei Gu)\n",
      "commitDate": "14/09/17 11:23 AM",
      "commitName": "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
      "commitAuthor": "Yufei Gu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6612. Update fair scheduler policies to be aware of resource types. (Contributed by Daniel Templeton via Yufei Gu)\n",
          "commitDate": "14/09/17 11:23 AM",
          "commitName": "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
          "commitAuthor": "Yufei Gu",
          "commitDateOld": "11/07/16 10:36 PM",
          "commitNameOld": "819224dcf9c683aa52f58633ac8e13663f1916d8",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 429.53,
          "commitsBetweenForRepo": 2748,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n   private static long getFairShareIfFixed(Schedulable sched,\n-      boolean isSteadyShare, ResourceType type) {\n+      boolean isSteadyShare, String type) {\n \n     // Check if maxShare is 0\n-    if (getResourceValue(sched.getMaxShare(), type) \u003c\u003d 0) {\n+    if (sched.getMaxShare().getResourceValue(type) \u003c\u003d 0) {\n       return 0;\n     }\n \n     // For instantaneous fairshares, check if queue is active\n     if (!isSteadyShare \u0026\u0026\n         (sched instanceof FSQueue) \u0026\u0026 !((FSQueue)sched).isActive()) {\n       return 0;\n     }\n \n     // Check if weight is 0\n-    if (sched.getWeights().getWeight(type) \u003c\u003d 0) {\n-      long minShare \u003d getResourceValue(sched.getMinShare(), type);\n+    if (sched.getWeight() \u003c\u003d 0) {\n+      long minShare \u003d sched.getMinShare().getResourceValue(type);\n       return (minShare \u003c\u003d 0) ? 0 : minShare;\n     }\n \n     return -1;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static long getFairShareIfFixed(Schedulable sched,\n      boolean isSteadyShare, String type) {\n\n    // Check if maxShare is 0\n    if (sched.getMaxShare().getResourceValue(type) \u003c\u003d 0) {\n      return 0;\n    }\n\n    // For instantaneous fairshares, check if queue is active\n    if (!isSteadyShare \u0026\u0026\n        (sched instanceof FSQueue) \u0026\u0026 !((FSQueue)sched).isActive()) {\n      return 0;\n    }\n\n    // Check if weight is 0\n    if (sched.getWeight() \u003c\u003d 0) {\n      long minShare \u003d sched.getMinShare().getResourceValue(type);\n      return (minShare \u003c\u003d 0) ? 0 : minShare;\n    }\n\n    return -1;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
          "extendedDetails": {
            "oldValue": "[sched-Schedulable, isSteadyShare-boolean, type-ResourceType]",
            "newValue": "[sched-Schedulable, isSteadyShare-boolean, type-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6612. Update fair scheduler policies to be aware of resource types. (Contributed by Daniel Templeton via Yufei Gu)\n",
          "commitDate": "14/09/17 11:23 AM",
          "commitName": "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
          "commitAuthor": "Yufei Gu",
          "commitDateOld": "11/07/16 10:36 PM",
          "commitNameOld": "819224dcf9c683aa52f58633ac8e13663f1916d8",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 429.53,
          "commitsBetweenForRepo": 2748,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n   private static long getFairShareIfFixed(Schedulable sched,\n-      boolean isSteadyShare, ResourceType type) {\n+      boolean isSteadyShare, String type) {\n \n     // Check if maxShare is 0\n-    if (getResourceValue(sched.getMaxShare(), type) \u003c\u003d 0) {\n+    if (sched.getMaxShare().getResourceValue(type) \u003c\u003d 0) {\n       return 0;\n     }\n \n     // For instantaneous fairshares, check if queue is active\n     if (!isSteadyShare \u0026\u0026\n         (sched instanceof FSQueue) \u0026\u0026 !((FSQueue)sched).isActive()) {\n       return 0;\n     }\n \n     // Check if weight is 0\n-    if (sched.getWeights().getWeight(type) \u003c\u003d 0) {\n-      long minShare \u003d getResourceValue(sched.getMinShare(), type);\n+    if (sched.getWeight() \u003c\u003d 0) {\n+      long minShare \u003d sched.getMinShare().getResourceValue(type);\n       return (minShare \u003c\u003d 0) ? 0 : minShare;\n     }\n \n     return -1;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static long getFairShareIfFixed(Schedulable sched,\n      boolean isSteadyShare, String type) {\n\n    // Check if maxShare is 0\n    if (sched.getMaxShare().getResourceValue(type) \u003c\u003d 0) {\n      return 0;\n    }\n\n    // For instantaneous fairshares, check if queue is active\n    if (!isSteadyShare \u0026\u0026\n        (sched instanceof FSQueue) \u0026\u0026 !((FSQueue)sched).isActive()) {\n      return 0;\n    }\n\n    // Check if weight is 0\n    if (sched.getWeight() \u003c\u003d 0) {\n      long minShare \u003d sched.getMinShare().getResourceValue(type);\n      return (minShare \u003c\u003d 0) ? 0 : minShare;\n    }\n\n    return -1;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
          "extendedDetails": {}
        }
      ]
    },
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
      "commitDate": "29/05/16 8:54 AM",
      "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthor": "Varun Vasudev",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
          "commitDate": "29/05/16 8:54 AM",
          "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
          "commitAuthor": "Varun Vasudev",
          "commitDateOld": "16/03/15 7:19 AM",
          "commitNameOld": "3da9a97cfbcc3a1c50aaf85b1a129d4d269cd5fd",
          "commitAuthorOld": "Tsuyoshi Ozawa",
          "daysBetweenCommits": 440.07,
          "commitsBetweenForRepo": 3328,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  private static int getFairShareIfFixed(Schedulable sched,\n+  private static long getFairShareIfFixed(Schedulable sched,\n       boolean isSteadyShare, ResourceType type) {\n \n     // Check if maxShare is 0\n     if (getResourceValue(sched.getMaxShare(), type) \u003c\u003d 0) {\n       return 0;\n     }\n \n     // For instantaneous fairshares, check if queue is active\n     if (!isSteadyShare \u0026\u0026\n         (sched instanceof FSQueue) \u0026\u0026 !((FSQueue)sched).isActive()) {\n       return 0;\n     }\n \n     // Check if weight is 0\n     if (sched.getWeights().getWeight(type) \u003c\u003d 0) {\n-      int minShare \u003d getResourceValue(sched.getMinShare(), type);\n+      long minShare \u003d getResourceValue(sched.getMinShare(), type);\n       return (minShare \u003c\u003d 0) ? 0 : minShare;\n     }\n \n     return -1;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static long getFairShareIfFixed(Schedulable sched,\n      boolean isSteadyShare, ResourceType type) {\n\n    // Check if maxShare is 0\n    if (getResourceValue(sched.getMaxShare(), type) \u003c\u003d 0) {\n      return 0;\n    }\n\n    // For instantaneous fairshares, check if queue is active\n    if (!isSteadyShare \u0026\u0026\n        (sched instanceof FSQueue) \u0026\u0026 !((FSQueue)sched).isActive()) {\n      return 0;\n    }\n\n    // Check if weight is 0\n    if (sched.getWeights().getWeight(type) \u003c\u003d 0) {\n      long minShare \u003d getResourceValue(sched.getMinShare(), type);\n      return (minShare \u003c\u003d 0) ? 0 : minShare;\n    }\n\n    return -1;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
          "extendedDetails": {
            "oldValue": "int",
            "newValue": "long"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
          "commitDate": "29/05/16 8:54 AM",
          "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
          "commitAuthor": "Varun Vasudev",
          "commitDateOld": "16/03/15 7:19 AM",
          "commitNameOld": "3da9a97cfbcc3a1c50aaf85b1a129d4d269cd5fd",
          "commitAuthorOld": "Tsuyoshi Ozawa",
          "daysBetweenCommits": 440.07,
          "commitsBetweenForRepo": 3328,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  private static int getFairShareIfFixed(Schedulable sched,\n+  private static long getFairShareIfFixed(Schedulable sched,\n       boolean isSteadyShare, ResourceType type) {\n \n     // Check if maxShare is 0\n     if (getResourceValue(sched.getMaxShare(), type) \u003c\u003d 0) {\n       return 0;\n     }\n \n     // For instantaneous fairshares, check if queue is active\n     if (!isSteadyShare \u0026\u0026\n         (sched instanceof FSQueue) \u0026\u0026 !((FSQueue)sched).isActive()) {\n       return 0;\n     }\n \n     // Check if weight is 0\n     if (sched.getWeights().getWeight(type) \u003c\u003d 0) {\n-      int minShare \u003d getResourceValue(sched.getMinShare(), type);\n+      long minShare \u003d getResourceValue(sched.getMinShare(), type);\n       return (minShare \u003c\u003d 0) ? 0 : minShare;\n     }\n \n     return -1;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static long getFairShareIfFixed(Schedulable sched,\n      boolean isSteadyShare, ResourceType type) {\n\n    // Check if maxShare is 0\n    if (getResourceValue(sched.getMaxShare(), type) \u003c\u003d 0) {\n      return 0;\n    }\n\n    // For instantaneous fairshares, check if queue is active\n    if (!isSteadyShare \u0026\u0026\n        (sched instanceof FSQueue) \u0026\u0026 !((FSQueue)sched).isActive()) {\n      return 0;\n    }\n\n    // Check if weight is 0\n    if (sched.getWeights().getWeight(type) \u003c\u003d 0) {\n      long minShare \u003d getResourceValue(sched.getMinShare(), type);\n      return (minShare \u003c\u003d 0) ? 0 : minShare;\n    }\n\n    return -1;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
          "extendedDetails": {}
        }
      ]
    },
    "3072c83b38fd87318d502a7d1bc518963b5ccdf7": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1458. FairScheduler: Zero weight can lead to livelock. (Zhihai Xu via kasha)\n",
      "commitDate": "10/09/14 8:26 AM",
      "commitName": "3072c83b38fd87318d502a7d1bc518963b5ccdf7",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,22 @@\n+  private static int getFairShareIfFixed(Schedulable sched,\n+      boolean isSteadyShare, ResourceType type) {\n+\n+    // Check if maxShare is 0\n+    if (getResourceValue(sched.getMaxShare(), type) \u003c\u003d 0) {\n+      return 0;\n+    }\n+\n+    // For instantaneous fairshares, check if queue is active\n+    if (!isSteadyShare \u0026\u0026\n+        (sched instanceof FSQueue) \u0026\u0026 !((FSQueue)sched).isActive()) {\n+      return 0;\n+    }\n+\n+    // Check if weight is 0\n+    if (sched.getWeights().getWeight(type) \u003c\u003d 0) {\n+      int minShare \u003d getResourceValue(sched.getMinShare(), type);\n+      return (minShare \u003c\u003d 0) ? 0 : minShare;\n+    }\n+\n+    return -1;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static int getFairShareIfFixed(Schedulable sched,\n      boolean isSteadyShare, ResourceType type) {\n\n    // Check if maxShare is 0\n    if (getResourceValue(sched.getMaxShare(), type) \u003c\u003d 0) {\n      return 0;\n    }\n\n    // For instantaneous fairshares, check if queue is active\n    if (!isSteadyShare \u0026\u0026\n        (sched instanceof FSQueue) \u0026\u0026 !((FSQueue)sched).isActive()) {\n      return 0;\n    }\n\n    // Check if weight is 0\n    if (sched.getWeights().getWeight(type) \u003c\u003d 0) {\n      int minShare \u003d getResourceValue(sched.getMinShare(), type);\n      return (minShare \u003c\u003d 0) ? 0 : minShare;\n    }\n\n    return -1;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java"
    }
  }
}