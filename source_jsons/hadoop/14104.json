{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QuorumCall.java",
  "functionName": "create",
  "functionId": "create___calls-Map__KEY,? extends ListenableFuture__RESULT____",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumCall.java",
  "functionStartLine": 93,
  "functionEndLine": 96,
  "numCommitsSeen": 9,
  "timeTaken": 1565,
  "changeHistory": [
    "90894c7262df0243e795b675f3ac9f7b322ccd11",
    "74d4573a23db5586c6e47ff2277aa7c35237da34"
  ],
  "changeHistoryShort": {
    "90894c7262df0243e795b675f3ac9f7b322ccd11": "Ybodychange",
    "74d4573a23db5586c6e47ff2277aa7c35237da34": "Yintroduced"
  },
  "changeHistoryDetails": {
    "90894c7262df0243e795b675f3ac9f7b322ccd11": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12323. NameNode terminates after full GC thinking QJM unresponsive if full GC is much longer than timeout. Contributed by Erik Krogen.",
      "commitDate": "15/09/17 1:56 PM",
      "commitName": "90894c7262df0243e795b675f3ac9f7b322ccd11",
      "commitAuthor": "Erik Krogen",
      "commitDateOld": "18/01/17 12:46 PM",
      "commitNameOld": "8a0fa0f7e88c45a98c6f266d6349cb426dd06495",
      "commitAuthorOld": "Vinitha Reddy Gankidi",
      "daysBetweenCommits": 240.01,
      "commitsBetweenForRepo": 1499,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,4 @@\n   static \u003cKEY, RESULT\u003e QuorumCall\u003cKEY, RESULT\u003e create(\n       Map\u003cKEY, ? extends ListenableFuture\u003cRESULT\u003e\u003e calls) {\n-    final QuorumCall\u003cKEY, RESULT\u003e qr \u003d new QuorumCall\u003cKEY, RESULT\u003e();\n-    for (final Entry\u003cKEY, ? extends ListenableFuture\u003cRESULT\u003e\u003e e : calls.entrySet()) {\n-      Preconditions.checkArgument(e.getValue() !\u003d null,\n-          \"null future for key: \" + e.getKey());\n-      Futures.addCallback(e.getValue(), new FutureCallback\u003cRESULT\u003e() {\n-        @Override\n-        public void onFailure(Throwable t) {\n-          qr.addException(e.getKey(), t);\n-        }\n-\n-        @Override\n-        public void onSuccess(RESULT res) {\n-          qr.addResult(e.getKey(), res);\n-        }\n-      });\n-    }\n-    return qr;\n+    return create(calls, new Timer());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static \u003cKEY, RESULT\u003e QuorumCall\u003cKEY, RESULT\u003e create(\n      Map\u003cKEY, ? extends ListenableFuture\u003cRESULT\u003e\u003e calls) {\n    return create(calls, new Timer());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumCall.java",
      "extendedDetails": {}
    },
    "74d4573a23db5586c6e47ff2277aa7c35237da34": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1363596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/07/12 5:25 PM",
      "commitName": "74d4573a23db5586c6e47ff2277aa7c35237da34",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,20 @@\n+  static \u003cKEY, RESULT\u003e QuorumCall\u003cKEY, RESULT\u003e create(\n+      Map\u003cKEY, ? extends ListenableFuture\u003cRESULT\u003e\u003e calls) {\n+    final QuorumCall\u003cKEY, RESULT\u003e qr \u003d new QuorumCall\u003cKEY, RESULT\u003e();\n+    for (final Entry\u003cKEY, ? extends ListenableFuture\u003cRESULT\u003e\u003e e : calls.entrySet()) {\n+      Preconditions.checkArgument(e.getValue() !\u003d null,\n+          \"null future for key: \" + e.getKey());\n+      Futures.addCallback(e.getValue(), new FutureCallback\u003cRESULT\u003e() {\n+        @Override\n+        public void onFailure(Throwable t) {\n+          qr.addException(e.getKey(), t);\n+        }\n+\n+        @Override\n+        public void onSuccess(RESULT res) {\n+          qr.addResult(e.getKey(), res);\n+        }\n+      });\n+    }\n+    return qr;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static \u003cKEY, RESULT\u003e QuorumCall\u003cKEY, RESULT\u003e create(\n      Map\u003cKEY, ? extends ListenableFuture\u003cRESULT\u003e\u003e calls) {\n    final QuorumCall\u003cKEY, RESULT\u003e qr \u003d new QuorumCall\u003cKEY, RESULT\u003e();\n    for (final Entry\u003cKEY, ? extends ListenableFuture\u003cRESULT\u003e\u003e e : calls.entrySet()) {\n      Preconditions.checkArgument(e.getValue() !\u003d null,\n          \"null future for key: \" + e.getKey());\n      Futures.addCallback(e.getValue(), new FutureCallback\u003cRESULT\u003e() {\n        @Override\n        public void onFailure(Throwable t) {\n          qr.addException(e.getKey(), t);\n        }\n\n        @Override\n        public void onSuccess(RESULT res) {\n          qr.addResult(e.getKey(), res);\n        }\n      });\n    }\n    return qr;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/QuorumCall.java"
    }
  }
}