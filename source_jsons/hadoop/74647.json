{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DtFileOperations.java",
  "functionName": "printCredentials",
  "functionId": "printCredentials___creds-Credentials__alias-Text__out-PrintStream",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/DtFileOperations.java",
  "functionStartLine": 137,
  "functionEndLine": 163,
  "numCommitsSeen": 9,
  "timeTaken": 1344,
  "changeHistory": [
    "202926ac3301298753abd0e6e1f324caf0202ec6",
    "2753185a010e70f8d9539f42151c79177781122d"
  ],
  "changeHistoryShort": {
    "202926ac3301298753abd0e6e1f324caf0202ec6": "Ybodychange",
    "2753185a010e70f8d9539f42151c79177781122d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "202926ac3301298753abd0e6e1f324caf0202ec6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15808. Harden Token service loader use.\n\nContributed by Steve Loughran.\n",
      "commitDate": "11/12/18 9:33 AM",
      "commitName": "202926ac3301298753abd0e6e1f324caf0202ec6",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "02/11/18 10:54 AM",
      "commitNameOld": "44e37b4fd9f441becf536368a89436afcd6dede8",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 38.99,
      "commitsBetweenForRepo": 253,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,27 @@\n   public static void printCredentials(\n       Credentials creds, Text alias, PrintStream out)\n       throws IOException {\n     boolean tokenHeader \u003d true;\n     String fmt \u003d \"%-24s %-20s %-15s %-12s %s%n\";\n     for (Token\u003c?\u003e token : creds.getAllTokens()) {\n       if (matchAlias(token, alias)) {\n         if (tokenHeader) {\n           out.printf(fmt, \"Token kind\", \"Service\", \"Renewer\", \"Exp date\",\n                      \"URL enc token\");\n           out.println(StringUtils.repeat(\"-\", 80));\n           tokenHeader \u003d false;\n         }\n-        AbstractDelegationTokenIdentifier id \u003d\n-            (AbstractDelegationTokenIdentifier) token.decodeIdentifier();\n+        AbstractDelegationTokenIdentifier id;\n+        try {\n+          id \u003d (AbstractDelegationTokenIdentifier) token.decodeIdentifier();\n+        } catch (IllegalStateException e) {\n+          LOG.debug(\"Failed to decode token identifier\", e);\n+          id \u003d null;\n+        }\n         out.printf(fmt, token.getKind(), token.getService(),\n                    (id !\u003d null) ? id.getRenewer() : NA_STRING,\n                    (id !\u003d null) ? formatDate(id.getMaxDate()) : NA_STRING,\n                    token.encodeToUrlString());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void printCredentials(\n      Credentials creds, Text alias, PrintStream out)\n      throws IOException {\n    boolean tokenHeader \u003d true;\n    String fmt \u003d \"%-24s %-20s %-15s %-12s %s%n\";\n    for (Token\u003c?\u003e token : creds.getAllTokens()) {\n      if (matchAlias(token, alias)) {\n        if (tokenHeader) {\n          out.printf(fmt, \"Token kind\", \"Service\", \"Renewer\", \"Exp date\",\n                     \"URL enc token\");\n          out.println(StringUtils.repeat(\"-\", 80));\n          tokenHeader \u003d false;\n        }\n        AbstractDelegationTokenIdentifier id;\n        try {\n          id \u003d (AbstractDelegationTokenIdentifier) token.decodeIdentifier();\n        } catch (IllegalStateException e) {\n          LOG.debug(\"Failed to decode token identifier\", e);\n          id \u003d null;\n        }\n        out.printf(fmt, token.getKind(), token.getService(),\n                   (id !\u003d null) ? id.getRenewer() : NA_STRING,\n                   (id !\u003d null) ? formatDate(id.getMaxDate()) : NA_STRING,\n                   token.encodeToUrlString());\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/DtFileOperations.java",
      "extendedDetails": {}
    },
    "2753185a010e70f8d9539f42151c79177781122d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12563. Updated utility (dtutil) to create/modify token files. Contributed by Matthew Paduano\n",
      "commitDate": "29/04/16 10:32 PM",
      "commitName": "2753185a010e70f8d9539f42151c79177781122d",
      "commitAuthor": "Ravi Prakash",
      "diff": "@@ -0,0 +1,22 @@\n+  public static void printCredentials(\n+      Credentials creds, Text alias, PrintStream out)\n+      throws IOException {\n+    boolean tokenHeader \u003d true;\n+    String fmt \u003d \"%-24s %-20s %-15s %-12s %s%n\";\n+    for (Token\u003c?\u003e token : creds.getAllTokens()) {\n+      if (matchAlias(token, alias)) {\n+        if (tokenHeader) {\n+          out.printf(fmt, \"Token kind\", \"Service\", \"Renewer\", \"Exp date\",\n+                     \"URL enc token\");\n+          out.println(StringUtils.repeat(\"-\", 80));\n+          tokenHeader \u003d false;\n+        }\n+        AbstractDelegationTokenIdentifier id \u003d\n+            (AbstractDelegationTokenIdentifier) token.decodeIdentifier();\n+        out.printf(fmt, token.getKind(), token.getService(),\n+                   (id !\u003d null) ? id.getRenewer() : NA_STRING,\n+                   (id !\u003d null) ? formatDate(id.getMaxDate()) : NA_STRING,\n+                   token.encodeToUrlString());\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void printCredentials(\n      Credentials creds, Text alias, PrintStream out)\n      throws IOException {\n    boolean tokenHeader \u003d true;\n    String fmt \u003d \"%-24s %-20s %-15s %-12s %s%n\";\n    for (Token\u003c?\u003e token : creds.getAllTokens()) {\n      if (matchAlias(token, alias)) {\n        if (tokenHeader) {\n          out.printf(fmt, \"Token kind\", \"Service\", \"Renewer\", \"Exp date\",\n                     \"URL enc token\");\n          out.println(StringUtils.repeat(\"-\", 80));\n          tokenHeader \u003d false;\n        }\n        AbstractDelegationTokenIdentifier id \u003d\n            (AbstractDelegationTokenIdentifier) token.decodeIdentifier();\n        out.printf(fmt, token.getKind(), token.getService(),\n                   (id !\u003d null) ? id.getRenewer() : NA_STRING,\n                   (id !\u003d null) ? formatDate(id.getMaxDate()) : NA_STRING,\n                   token.encodeToUrlString());\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/DtFileOperations.java"
    }
  }
}