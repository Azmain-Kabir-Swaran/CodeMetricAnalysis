{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PermissionParser.java",
  "functionName": "combineModeSegments",
  "functionId": "combineModeSegments___type-char__mode-int__existing-int__exeOk-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/PermissionParser.java",
  "functionStartLine": 185,
  "functionEndLine": 208,
  "numCommitsSeen": 8,
  "timeTaken": 866,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "cdbb724edbe093a02d4e2c24523001dcdff0ffd5",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "cdbb724edbe093a02d4e2c24523001dcdff0ffd5": "Ymultichange(Ymovefromfile,Ymodifierchange,Yrename)",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected int combineModeSegments(char type, int mode, \n                                    int existing, boolean exeOk) {\n    boolean capX \u003d false;\n\n    if ((mode\u00268) !\u003d 0) { // convert X to x;\n      capX \u003d true;\n      mode \u0026\u003d ~8;\n      mode |\u003d 1;\n    }\n\n    switch (type) {\n    case \u0027+\u0027 : mode \u003d mode | existing; break;\n    case \u0027-\u0027 : mode \u003d (~mode) \u0026 existing; break;\n    case \u0027\u003d\u0027 : break;\n    default  : throw new RuntimeException(\"Unexpected\");      \n    }\n\n    // if X is specified add \u0027x\u0027 only if exeOk or x was already set.\n    if (capX \u0026\u0026 !exeOk \u0026\u0026 (mode\u00261) !\u003d 0 \u0026\u0026 (existing\u00261) \u003d\u003d 0) {\n      mode \u0026\u003d ~1; // remove x\n    }\n\n    return mode;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/PermissionParser.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/permission/PermissionParser.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/PermissionParser.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected int combineModeSegments(char type, int mode, \n                                    int existing, boolean exeOk) {\n    boolean capX \u003d false;\n\n    if ((mode\u00268) !\u003d 0) { // convert X to x;\n      capX \u003d true;\n      mode \u0026\u003d ~8;\n      mode |\u003d 1;\n    }\n\n    switch (type) {\n    case \u0027+\u0027 : mode \u003d mode | existing; break;\n    case \u0027-\u0027 : mode \u003d (~mode) \u0026 existing; break;\n    case \u0027\u003d\u0027 : break;\n    default  : throw new RuntimeException(\"Unexpected\");      \n    }\n\n    // if X is specified add \u0027x\u0027 only if exeOk or x was already set.\n    if (capX \u0026\u0026 !exeOk \u0026\u0026 (mode\u00261) !\u003d 0 \u0026\u0026 (existing\u00261) \u003d\u003d 0) {\n      mode \u0026\u003d ~1; // remove x\n    }\n\n    return mode;\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/permission/PermissionParser.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/permission/PermissionParser.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/permission/PermissionParser.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected int combineModeSegments(char type, int mode, \n                                    int existing, boolean exeOk) {\n    boolean capX \u003d false;\n\n    if ((mode\u00268) !\u003d 0) { // convert X to x;\n      capX \u003d true;\n      mode \u0026\u003d ~8;\n      mode |\u003d 1;\n    }\n\n    switch (type) {\n    case \u0027+\u0027 : mode \u003d mode | existing; break;\n    case \u0027-\u0027 : mode \u003d (~mode) \u0026 existing; break;\n    case \u0027\u003d\u0027 : break;\n    default  : throw new RuntimeException(\"Unexpected\");      \n    }\n\n    // if X is specified add \u0027x\u0027 only if exeOk or x was already set.\n    if (capX \u0026\u0026 !exeOk \u0026\u0026 (mode\u00261) !\u003d 0 \u0026\u0026 (existing\u00261) \u003d\u003d 0) {\n      mode \u0026\u003d ~1; // remove x\n    }\n\n    return mode;\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/permission/PermissionParser.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/permission/PermissionParser.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/permission/PermissionParser.java"
      }
    },
    "cdbb724edbe093a02d4e2c24523001dcdff0ffd5": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Yrename)",
      "commitMessage": "HADOOP-6234. Add new option dfs.umaskmode to set umask in configuration to use octal or symbolic instead of decimal. Contributed by Jakob Homan.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@812652 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/09 12:08 PM",
      "commitName": "cdbb724edbe093a02d4e2c24523001dcdff0ffd5",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HADOOP-6234. Add new option dfs.umaskmode to set umask in configuration to use octal or symbolic instead of decimal. Contributed by Jakob Homan.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@812652 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/09/09 12:08 PM",
          "commitName": "cdbb724edbe093a02d4e2c24523001dcdff0ffd5",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "08/09/09 10:54 AM",
          "commitNameOld": "3f384b42d2272ffed8e71409505f391cdbf1ec64",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,24 @@\n-    private int applyChmod(char type, int mode, int existing, boolean exeOk) {\n-      boolean capX \u003d false;\n+  protected int combineModeSegments(char type, int mode, \n+                                    int existing, boolean exeOk) {\n+    boolean capX \u003d false;\n \n-      if ((mode\u00268) !\u003d 0) { // convert X to x;\n-        capX \u003d true;\n-        mode \u0026\u003d ~8;\n-        mode |\u003d 1;\n-      }\n+    if ((mode\u00268) !\u003d 0) { // convert X to x;\n+      capX \u003d true;\n+      mode \u0026\u003d ~8;\n+      mode |\u003d 1;\n+    }\n \n-      switch (type) {\n-      case \u0027+\u0027 : mode \u003d mode | existing; break;\n-      case \u0027-\u0027 : mode \u003d (~mode) \u0026 existing; break;\n-      case \u0027\u003d\u0027 : break;\n-      default  : throw new RuntimeException(\"Unexpected\");      \n-      }\n+    switch (type) {\n+    case \u0027+\u0027 : mode \u003d mode | existing; break;\n+    case \u0027-\u0027 : mode \u003d (~mode) \u0026 existing; break;\n+    case \u0027\u003d\u0027 : break;\n+    default  : throw new RuntimeException(\"Unexpected\");      \n+    }\n \n-      // if X is specified add \u0027x\u0027 only if exeOk or x was already set.\n-      if (capX \u0026\u0026 !exeOk \u0026\u0026 (mode\u00261) !\u003d 0 \u0026\u0026 (existing\u00261) \u003d\u003d 0) {\n-        mode \u0026\u003d ~1; // remove x\n-      }\n+    // if X is specified add \u0027x\u0027 only if exeOk or x was already set.\n+    if (capX \u0026\u0026 !exeOk \u0026\u0026 (mode\u00261) !\u003d 0 \u0026\u0026 (existing\u00261) \u003d\u003d 0) {\n+      mode \u0026\u003d ~1; // remove x\n+    }\n \n-      return mode;\n-    }\n\\ No newline at end of file\n+    return mode;\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  protected int combineModeSegments(char type, int mode, \n                                    int existing, boolean exeOk) {\n    boolean capX \u003d false;\n\n    if ((mode\u00268) !\u003d 0) { // convert X to x;\n      capX \u003d true;\n      mode \u0026\u003d ~8;\n      mode |\u003d 1;\n    }\n\n    switch (type) {\n    case \u0027+\u0027 : mode \u003d mode | existing; break;\n    case \u0027-\u0027 : mode \u003d (~mode) \u0026 existing; break;\n    case \u0027\u003d\u0027 : break;\n    default  : throw new RuntimeException(\"Unexpected\");      \n    }\n\n    // if X is specified add \u0027x\u0027 only if exeOk or x was already set.\n    if (capX \u0026\u0026 !exeOk \u0026\u0026 (mode\u00261) !\u003d 0 \u0026\u0026 (existing\u00261) \u003d\u003d 0) {\n      mode \u0026\u003d ~1; // remove x\n    }\n\n    return mode;\n  }",
          "path": "src/java/org/apache/hadoop/fs/permission/PermissionParser.java",
          "extendedDetails": {
            "oldPath": "src/java/org/apache/hadoop/fs/FsShellPermissions.java",
            "newPath": "src/java/org/apache/hadoop/fs/permission/PermissionParser.java",
            "oldMethodName": "applyChmod",
            "newMethodName": "combineModeSegments"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-6234. Add new option dfs.umaskmode to set umask in configuration to use octal or symbolic instead of decimal. Contributed by Jakob Homan.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@812652 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/09/09 12:08 PM",
          "commitName": "cdbb724edbe093a02d4e2c24523001dcdff0ffd5",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "08/09/09 10:54 AM",
          "commitNameOld": "3f384b42d2272ffed8e71409505f391cdbf1ec64",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,24 @@\n-    private int applyChmod(char type, int mode, int existing, boolean exeOk) {\n-      boolean capX \u003d false;\n+  protected int combineModeSegments(char type, int mode, \n+                                    int existing, boolean exeOk) {\n+    boolean capX \u003d false;\n \n-      if ((mode\u00268) !\u003d 0) { // convert X to x;\n-        capX \u003d true;\n-        mode \u0026\u003d ~8;\n-        mode |\u003d 1;\n-      }\n+    if ((mode\u00268) !\u003d 0) { // convert X to x;\n+      capX \u003d true;\n+      mode \u0026\u003d ~8;\n+      mode |\u003d 1;\n+    }\n \n-      switch (type) {\n-      case \u0027+\u0027 : mode \u003d mode | existing; break;\n-      case \u0027-\u0027 : mode \u003d (~mode) \u0026 existing; break;\n-      case \u0027\u003d\u0027 : break;\n-      default  : throw new RuntimeException(\"Unexpected\");      \n-      }\n+    switch (type) {\n+    case \u0027+\u0027 : mode \u003d mode | existing; break;\n+    case \u0027-\u0027 : mode \u003d (~mode) \u0026 existing; break;\n+    case \u0027\u003d\u0027 : break;\n+    default  : throw new RuntimeException(\"Unexpected\");      \n+    }\n \n-      // if X is specified add \u0027x\u0027 only if exeOk or x was already set.\n-      if (capX \u0026\u0026 !exeOk \u0026\u0026 (mode\u00261) !\u003d 0 \u0026\u0026 (existing\u00261) \u003d\u003d 0) {\n-        mode \u0026\u003d ~1; // remove x\n-      }\n+    // if X is specified add \u0027x\u0027 only if exeOk or x was already set.\n+    if (capX \u0026\u0026 !exeOk \u0026\u0026 (mode\u00261) !\u003d 0 \u0026\u0026 (existing\u00261) \u003d\u003d 0) {\n+      mode \u0026\u003d ~1; // remove x\n+    }\n \n-      return mode;\n-    }\n\\ No newline at end of file\n+    return mode;\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  protected int combineModeSegments(char type, int mode, \n                                    int existing, boolean exeOk) {\n    boolean capX \u003d false;\n\n    if ((mode\u00268) !\u003d 0) { // convert X to x;\n      capX \u003d true;\n      mode \u0026\u003d ~8;\n      mode |\u003d 1;\n    }\n\n    switch (type) {\n    case \u0027+\u0027 : mode \u003d mode | existing; break;\n    case \u0027-\u0027 : mode \u003d (~mode) \u0026 existing; break;\n    case \u0027\u003d\u0027 : break;\n    default  : throw new RuntimeException(\"Unexpected\");      \n    }\n\n    // if X is specified add \u0027x\u0027 only if exeOk or x was already set.\n    if (capX \u0026\u0026 !exeOk \u0026\u0026 (mode\u00261) !\u003d 0 \u0026\u0026 (existing\u00261) \u003d\u003d 0) {\n      mode \u0026\u003d ~1; // remove x\n    }\n\n    return mode;\n  }",
          "path": "src/java/org/apache/hadoop/fs/permission/PermissionParser.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-6234. Add new option dfs.umaskmode to set umask in configuration to use octal or symbolic instead of decimal. Contributed by Jakob Homan.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@812652 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/09/09 12:08 PM",
          "commitName": "cdbb724edbe093a02d4e2c24523001dcdff0ffd5",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "08/09/09 10:54 AM",
          "commitNameOld": "3f384b42d2272ffed8e71409505f391cdbf1ec64",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,24 @@\n-    private int applyChmod(char type, int mode, int existing, boolean exeOk) {\n-      boolean capX \u003d false;\n+  protected int combineModeSegments(char type, int mode, \n+                                    int existing, boolean exeOk) {\n+    boolean capX \u003d false;\n \n-      if ((mode\u00268) !\u003d 0) { // convert X to x;\n-        capX \u003d true;\n-        mode \u0026\u003d ~8;\n-        mode |\u003d 1;\n-      }\n+    if ((mode\u00268) !\u003d 0) { // convert X to x;\n+      capX \u003d true;\n+      mode \u0026\u003d ~8;\n+      mode |\u003d 1;\n+    }\n \n-      switch (type) {\n-      case \u0027+\u0027 : mode \u003d mode | existing; break;\n-      case \u0027-\u0027 : mode \u003d (~mode) \u0026 existing; break;\n-      case \u0027\u003d\u0027 : break;\n-      default  : throw new RuntimeException(\"Unexpected\");      \n-      }\n+    switch (type) {\n+    case \u0027+\u0027 : mode \u003d mode | existing; break;\n+    case \u0027-\u0027 : mode \u003d (~mode) \u0026 existing; break;\n+    case \u0027\u003d\u0027 : break;\n+    default  : throw new RuntimeException(\"Unexpected\");      \n+    }\n \n-      // if X is specified add \u0027x\u0027 only if exeOk or x was already set.\n-      if (capX \u0026\u0026 !exeOk \u0026\u0026 (mode\u00261) !\u003d 0 \u0026\u0026 (existing\u00261) \u003d\u003d 0) {\n-        mode \u0026\u003d ~1; // remove x\n-      }\n+    // if X is specified add \u0027x\u0027 only if exeOk or x was already set.\n+    if (capX \u0026\u0026 !exeOk \u0026\u0026 (mode\u00261) !\u003d 0 \u0026\u0026 (existing\u00261) \u003d\u003d 0) {\n+      mode \u0026\u003d ~1; // remove x\n+    }\n \n-      return mode;\n-    }\n\\ No newline at end of file\n+    return mode;\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  protected int combineModeSegments(char type, int mode, \n                                    int existing, boolean exeOk) {\n    boolean capX \u003d false;\n\n    if ((mode\u00268) !\u003d 0) { // convert X to x;\n      capX \u003d true;\n      mode \u0026\u003d ~8;\n      mode |\u003d 1;\n    }\n\n    switch (type) {\n    case \u0027+\u0027 : mode \u003d mode | existing; break;\n    case \u0027-\u0027 : mode \u003d (~mode) \u0026 existing; break;\n    case \u0027\u003d\u0027 : break;\n    default  : throw new RuntimeException(\"Unexpected\");      \n    }\n\n    // if X is specified add \u0027x\u0027 only if exeOk or x was already set.\n    if (capX \u0026\u0026 !exeOk \u0026\u0026 (mode\u00261) !\u003d 0 \u0026\u0026 (existing\u00261) \u003d\u003d 0) {\n      mode \u0026\u003d ~1; // remove x\n    }\n\n    return mode;\n  }",
          "path": "src/java/org/apache/hadoop/fs/permission/PermissionParser.java",
          "extendedDetails": {
            "oldValue": "applyChmod",
            "newValue": "combineModeSegments"
          }
        }
      ]
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,23 @@\n+    private int applyChmod(char type, int mode, int existing, boolean exeOk) {\n+      boolean capX \u003d false;\n+\n+      if ((mode\u00268) !\u003d 0) { // convert X to x;\n+        capX \u003d true;\n+        mode \u0026\u003d ~8;\n+        mode |\u003d 1;\n+      }\n+\n+      switch (type) {\n+      case \u0027+\u0027 : mode \u003d mode | existing; break;\n+      case \u0027-\u0027 : mode \u003d (~mode) \u0026 existing; break;\n+      case \u0027\u003d\u0027 : break;\n+      default  : throw new RuntimeException(\"Unexpected\");      \n+      }\n+\n+      // if X is specified add \u0027x\u0027 only if exeOk or x was already set.\n+      if (capX \u0026\u0026 !exeOk \u0026\u0026 (mode\u00261) !\u003d 0 \u0026\u0026 (existing\u00261) \u003d\u003d 0) {\n+        mode \u0026\u003d ~1; // remove x\n+      }\n+\n+      return mode;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private int applyChmod(char type, int mode, int existing, boolean exeOk) {\n      boolean capX \u003d false;\n\n      if ((mode\u00268) !\u003d 0) { // convert X to x;\n        capX \u003d true;\n        mode \u0026\u003d ~8;\n        mode |\u003d 1;\n      }\n\n      switch (type) {\n      case \u0027+\u0027 : mode \u003d mode | existing; break;\n      case \u0027-\u0027 : mode \u003d (~mode) \u0026 existing; break;\n      case \u0027\u003d\u0027 : break;\n      default  : throw new RuntimeException(\"Unexpected\");      \n      }\n\n      // if X is specified add \u0027x\u0027 only if exeOk or x was already set.\n      if (capX \u0026\u0026 !exeOk \u0026\u0026 (mode\u00261) !\u003d 0 \u0026\u0026 (existing\u00261) \u003d\u003d 0) {\n        mode \u0026\u003d ~1; // remove x\n      }\n\n      return mode;\n    }",
      "path": "src/java/org/apache/hadoop/fs/FsShellPermissions.java"
    }
  }
}