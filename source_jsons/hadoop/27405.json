{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineParserForEqualityExpr.java",
  "functionName": "handleNotChar",
  "functionId": "handleNotChar",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineParserForEqualityExpr.java",
  "functionStartLine": 188,
  "functionEndLine": 208,
  "numCommitsSeen": 2,
  "timeTaken": 622,
  "changeHistory": [
    "089caf49fe968cf4cd3fd4f9637da89ee143991a"
  ],
  "changeHistoryShort": {
    "089caf49fe968cf4cd3fd4f9637da89ee143991a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "089caf49fe968cf4cd3fd4f9637da89ee143991a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4447. Provide a mechanism to represent complex filters and parse them at the REST layer (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "089caf49fe968cf4cd3fd4f9637da89ee143991a",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,21 @@\n+  private void handleNotChar() throws TimelineParseException {\n+    if (currentParseState \u003d\u003d ParseState.PARSING_COMPAREOP ||\n+        currentParseState \u003d\u003d ParseState.PARSING_VALUE) {\n+      offset++;\n+      while (offset \u003c exprLength \u0026\u0026\n+          expr.charAt(offset) \u003d\u003d TimelineParseConstants.SPACE_CHAR) {\n+        offset++;\n+      }\n+      if (offset \u003d\u003d exprLength) {\n+        throw new TimelineParseException(\"Invalid \" + exprName + \"expression\");\n+      }\n+      if (expr.charAt(offset) \u003d\u003d TimelineParseConstants.OPENING_BRACKET_CHAR) {\n+        handleOpeningBracketChar(true);\n+      } else {\n+        throw new TimelineParseException(\"Invalid \" + exprName + \"expression\");\n+      }\n+    } else {\n+      throw new TimelineParseException(\"Encountered unexpected not(!) char \" +\n+         \"while parsing \" + exprName + \".\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleNotChar() throws TimelineParseException {\n    if (currentParseState \u003d\u003d ParseState.PARSING_COMPAREOP ||\n        currentParseState \u003d\u003d ParseState.PARSING_VALUE) {\n      offset++;\n      while (offset \u003c exprLength \u0026\u0026\n          expr.charAt(offset) \u003d\u003d TimelineParseConstants.SPACE_CHAR) {\n        offset++;\n      }\n      if (offset \u003d\u003d exprLength) {\n        throw new TimelineParseException(\"Invalid \" + exprName + \"expression\");\n      }\n      if (expr.charAt(offset) \u003d\u003d TimelineParseConstants.OPENING_BRACKET_CHAR) {\n        handleOpeningBracketChar(true);\n      } else {\n        throw new TimelineParseException(\"Invalid \" + exprName + \"expression\");\n      }\n    } else {\n      throw new TimelineParseException(\"Encountered unexpected not(!) char \" +\n         \"while parsing \" + exprName + \".\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineParserForEqualityExpr.java"
    }
  }
}