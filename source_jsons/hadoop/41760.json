{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractYarnScheduler.java",
  "functionName": "createDemotedRMContainer",
  "functionId": "createDemotedRMContainer___appAttempt-SchedulerApplicationAttempt__oppCntxt-OpportunisticContainerContext__rmContainer-RMContainer",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
  "functionStartLine": 1437,
  "functionEndLine": 1454,
  "numCommitsSeen": 115,
  "timeTaken": 2993,
  "changeHistory": [
    "0a55bd841ec0f2eb89a0383f4c589526e8b138d4"
  ],
  "changeHistoryShort": {
    "0a55bd841ec0f2eb89a0383f4c589526e8b138d4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0a55bd841ec0f2eb89a0383f4c589526e8b138d4": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5959. RM changes to support change of container ExecutionType. (Arun Suresh via wangda)\n",
      "commitDate": "05/01/17 10:31 AM",
      "commitName": "0a55bd841ec0f2eb89a0383f4c589526e8b138d4",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,18 @@\n+  private RMContainer createDemotedRMContainer(\n+      SchedulerApplicationAttempt appAttempt,\n+      OpportunisticContainerContext oppCntxt,\n+      RMContainer rmContainer) {\n+    SchedulerRequestKey sk \u003d\n+        SchedulerRequestKey.extractFrom(rmContainer.getContainer());\n+    Container demotedContainer \u003d BuilderUtils.newContainer(\n+        ContainerId.newContainerId(appAttempt.getApplicationAttemptId(),\n+            oppCntxt.getContainerIdGenerator().generateContainerId()),\n+        rmContainer.getContainer().getNodeId(),\n+        rmContainer.getContainer().getNodeHttpAddress(),\n+        rmContainer.getContainer().getResource(),\n+        sk.getPriority(), null, ExecutionType.OPPORTUNISTIC,\n+        sk.getAllocationRequestId());\n+    demotedContainer.setVersion(rmContainer.getContainer().getVersion());\n+    return SchedulerUtils.createOpportunisticRmContainer(\n+        rmContext, demotedContainer, false);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private RMContainer createDemotedRMContainer(\n      SchedulerApplicationAttempt appAttempt,\n      OpportunisticContainerContext oppCntxt,\n      RMContainer rmContainer) {\n    SchedulerRequestKey sk \u003d\n        SchedulerRequestKey.extractFrom(rmContainer.getContainer());\n    Container demotedContainer \u003d BuilderUtils.newContainer(\n        ContainerId.newContainerId(appAttempt.getApplicationAttemptId(),\n            oppCntxt.getContainerIdGenerator().generateContainerId()),\n        rmContainer.getContainer().getNodeId(),\n        rmContainer.getContainer().getNodeHttpAddress(),\n        rmContainer.getContainer().getResource(),\n        sk.getPriority(), null, ExecutionType.OPPORTUNISTIC,\n        sk.getAllocationRequestId());\n    demotedContainer.setVersion(rmContainer.getContainer().getVersion());\n    return SchedulerUtils.createOpportunisticRmContainer(\n        rmContext, demotedContainer, false);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java"
    }
  }
}