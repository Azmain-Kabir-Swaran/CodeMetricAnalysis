{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKRMStateStore.java",
  "functionName": "getAlternateAppPath",
  "functionId": "getAlternateAppPath___appId-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
  "functionStartLine": 1268,
  "functionEndLine": 1281,
  "numCommitsSeen": 145,
  "timeTaken": 3293,
  "changeHistory": [
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210"
  ],
  "changeHistoryShort": {
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-7262. Add a hierarchy into the ZKRMStateStore for delegation token znodes to prevent jute buffer overflow (rkanter)\n",
      "commitDate": "26/10/17 5:47 PM",
      "commitName": "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
      "commitAuthor": "Robert Kanter",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-7262. Add a hierarchy into the ZKRMStateStore for delegation token znodes to prevent jute buffer overflow (rkanter)\n",
          "commitDate": "26/10/17 5:47 PM",
          "commitName": "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "09/10/17 11:11 AM",
          "commitNameOld": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 17.28,
          "commitsBetweenForRepo": 109,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  private AppNodeSplitInfo getAlternatePath(String appId) throws Exception {\n+  private ZnodeSplitInfo getAlternateAppPath(String appId) throws Exception {\n     for (Map.Entry\u003cInteger, String\u003e entry : rmAppRootHierarchies.entrySet()) {\n       // Look for other paths\n       int splitIndex \u003d entry.getKey();\n       if (splitIndex !\u003d appIdNodeSplitIndex) {\n         String alternatePath \u003d\n-            getLeafAppIdNodePath(appId, entry.getValue(), splitIndex, false);\n+            getLeafZnodePath(appId, entry.getValue(), splitIndex, false);\n         if (exists(alternatePath)) {\n-          return new AppNodeSplitInfo(alternatePath, splitIndex);\n+          return new ZnodeSplitInfo(alternatePath, splitIndex);\n         }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ZnodeSplitInfo getAlternateAppPath(String appId) throws Exception {\n    for (Map.Entry\u003cInteger, String\u003e entry : rmAppRootHierarchies.entrySet()) {\n      // Look for other paths\n      int splitIndex \u003d entry.getKey();\n      if (splitIndex !\u003d appIdNodeSplitIndex) {\n        String alternatePath \u003d\n            getLeafZnodePath(appId, entry.getValue(), splitIndex, false);\n        if (exists(alternatePath)) {\n          return new ZnodeSplitInfo(alternatePath, splitIndex);\n        }\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {
            "oldValue": "getAlternatePath",
            "newValue": "getAlternateAppPath"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-7262. Add a hierarchy into the ZKRMStateStore for delegation token znodes to prevent jute buffer overflow (rkanter)\n",
          "commitDate": "26/10/17 5:47 PM",
          "commitName": "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "09/10/17 11:11 AM",
          "commitNameOld": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 17.28,
          "commitsBetweenForRepo": 109,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  private AppNodeSplitInfo getAlternatePath(String appId) throws Exception {\n+  private ZnodeSplitInfo getAlternateAppPath(String appId) throws Exception {\n     for (Map.Entry\u003cInteger, String\u003e entry : rmAppRootHierarchies.entrySet()) {\n       // Look for other paths\n       int splitIndex \u003d entry.getKey();\n       if (splitIndex !\u003d appIdNodeSplitIndex) {\n         String alternatePath \u003d\n-            getLeafAppIdNodePath(appId, entry.getValue(), splitIndex, false);\n+            getLeafZnodePath(appId, entry.getValue(), splitIndex, false);\n         if (exists(alternatePath)) {\n-          return new AppNodeSplitInfo(alternatePath, splitIndex);\n+          return new ZnodeSplitInfo(alternatePath, splitIndex);\n         }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ZnodeSplitInfo getAlternateAppPath(String appId) throws Exception {\n    for (Map.Entry\u003cInteger, String\u003e entry : rmAppRootHierarchies.entrySet()) {\n      // Look for other paths\n      int splitIndex \u003d entry.getKey();\n      if (splitIndex !\u003d appIdNodeSplitIndex) {\n        String alternatePath \u003d\n            getLeafZnodePath(appId, entry.getValue(), splitIndex, false);\n        if (exists(alternatePath)) {\n          return new ZnodeSplitInfo(alternatePath, splitIndex);\n        }\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {
            "oldValue": "AppNodeSplitInfo",
            "newValue": "ZnodeSplitInfo"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7262. Add a hierarchy into the ZKRMStateStore for delegation token znodes to prevent jute buffer overflow (rkanter)\n",
          "commitDate": "26/10/17 5:47 PM",
          "commitName": "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "09/10/17 11:11 AM",
          "commitNameOld": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 17.28,
          "commitsBetweenForRepo": 109,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  private AppNodeSplitInfo getAlternatePath(String appId) throws Exception {\n+  private ZnodeSplitInfo getAlternateAppPath(String appId) throws Exception {\n     for (Map.Entry\u003cInteger, String\u003e entry : rmAppRootHierarchies.entrySet()) {\n       // Look for other paths\n       int splitIndex \u003d entry.getKey();\n       if (splitIndex !\u003d appIdNodeSplitIndex) {\n         String alternatePath \u003d\n-            getLeafAppIdNodePath(appId, entry.getValue(), splitIndex, false);\n+            getLeafZnodePath(appId, entry.getValue(), splitIndex, false);\n         if (exists(alternatePath)) {\n-          return new AppNodeSplitInfo(alternatePath, splitIndex);\n+          return new ZnodeSplitInfo(alternatePath, splitIndex);\n         }\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ZnodeSplitInfo getAlternateAppPath(String appId) throws Exception {\n    for (Map.Entry\u003cInteger, String\u003e entry : rmAppRootHierarchies.entrySet()) {\n      // Look for other paths\n      int splitIndex \u003d entry.getKey();\n      if (splitIndex !\u003d appIdNodeSplitIndex) {\n        String alternatePath \u003d\n            getLeafZnodePath(appId, entry.getValue(), splitIndex, false);\n        if (exists(alternatePath)) {\n          return new ZnodeSplitInfo(alternatePath, splitIndex);\n        }\n      }\n    }\n    return null;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2962. ZKRMStateStore: Limit the number of znodes under a znode (Contributed by Varun Sexena via Daniel Templeton)\n",
      "commitDate": "28/04/17 1:30 PM",
      "commitName": "2e52789edf68016e7a3f450164f8bd3d8e6cb210",
      "commitAuthor": "Daniel Templeton",
      "diff": "@@ -0,0 +1,14 @@\n+  private AppNodeSplitInfo getAlternatePath(String appId) throws Exception {\n+    for (Map.Entry\u003cInteger, String\u003e entry : rmAppRootHierarchies.entrySet()) {\n+      // Look for other paths\n+      int splitIndex \u003d entry.getKey();\n+      if (splitIndex !\u003d appIdNodeSplitIndex) {\n+        String alternatePath \u003d\n+            getLeafAppIdNodePath(appId, entry.getValue(), splitIndex, false);\n+        if (exists(alternatePath)) {\n+          return new AppNodeSplitInfo(alternatePath, splitIndex);\n+        }\n+      }\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private AppNodeSplitInfo getAlternatePath(String appId) throws Exception {\n    for (Map.Entry\u003cInteger, String\u003e entry : rmAppRootHierarchies.entrySet()) {\n      // Look for other paths\n      int splitIndex \u003d entry.getKey();\n      if (splitIndex !\u003d appIdNodeSplitIndex) {\n        String alternatePath \u003d\n            getLeafAppIdNodePath(appId, entry.getValue(), splitIndex, false);\n        if (exists(alternatePath)) {\n          return new AppNodeSplitInfo(alternatePath, splitIndex);\n        }\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java"
    }
  }
}