{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ColumnRWHelper.java",
  "functionName": "store",
  "functionId": "store___rowKey-byte[]__tableMutator-TypedBufferedMutator__?____columnPrefix-ColumnPrefix__?____qualifier-String__timestamp-Long__inputValue-Object__attributes-Attribute",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnRWHelper.java",
  "functionStartLine": 468,
  "functionEndLine": 484,
  "numCommitsSeen": 15,
  "timeTaken": 4511,
  "changeHistory": [
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "55f5886ea24671ff3db87a64aaba2e76b3355455",
    "1f710484e5b8ab4d5c67379c012004e8a4242d15",
    "b51d0fef56a59b15489f5b932025718b4e9613d2",
    "a68e3839218523403f42acd7bdd7ce1da59a5e60"
  ],
  "changeHistoryShort": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "55f5886ea24671ff3db87a64aaba2e76b3355455": "Ybodychange",
    "1f710484e5b8ab4d5c67379c012004e8a4242d15": "Ybodychange",
    "b51d0fef56a59b15489f5b932025718b4e9613d2": "Ybodychange",
    "a68e3839218523403f42acd7bdd7ce1da59a5e60": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
          "commitDate": "17/02/18 7:00 AM",
          "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 3:24 AM",
          "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public void store(byte[] rowKey,\n-      TypedBufferedMutator\u003cFlowRunTable\u003e tableMutator, String qualifier,\n-      Long timestamp, Object inputValue, Attribute... attributes)\n-      throws IOException {\n-\n+  public static void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n+             ColumnPrefix\u003c?\u003e columnPrefix, String qualifier, Long timestamp,\n+             Object inputValue, Attribute... attributes) throws IOException {\n     // Null check\n     if (qualifier \u003d\u003d null) {\n       throw new IOException(\"Cannot store column with null qualifier in \"\n           + tableMutator.getName().getNameAsString());\n     }\n \n-    byte[] columnQualifier \u003d getColumnPrefixBytes(qualifier);\n+    byte[] columnQualifier \u003d columnPrefix.getColumnPrefixBytes(qualifier);\n     Attribute[] combinedAttributes \u003d\n-        HBaseTimelineStorageUtils.combineAttributes(attributes, this.aggOp);\n-    column.store(rowKey, tableMutator, columnQualifier, timestamp, inputValue,\n-        combinedAttributes);\n+        columnPrefix.getCombinedAttrsWithAggr(attributes);\n+\n+    store(rowKey, tableMutator, columnPrefix.getColumnFamilyBytes(),\n+        columnQualifier, timestamp, columnPrefix.supplementCellTimeStamp(),\n+        inputValue, columnPrefix.getValueConverter(), combinedAttributes);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n             ColumnPrefix\u003c?\u003e columnPrefix, String qualifier, Long timestamp,\n             Object inputValue, Attribute... attributes) throws IOException {\n    // Null check\n    if (qualifier \u003d\u003d null) {\n      throw new IOException(\"Cannot store column with null qualifier in \"\n          + tableMutator.getName().getNameAsString());\n    }\n\n    byte[] columnQualifier \u003d columnPrefix.getColumnPrefixBytes(qualifier);\n    Attribute[] combinedAttributes \u003d\n        columnPrefix.getCombinedAttrsWithAggr(attributes);\n\n    store(rowKey, tableMutator, columnPrefix.getColumnFamilyBytes(),\n        columnQualifier, timestamp, columnPrefix.supplementCellTimeStamp(),\n        inputValue, columnPrefix.getValueConverter(), combinedAttributes);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnRWHelper.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunColumnPrefix.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnRWHelper.java",
            "oldMethodName": "store",
            "newMethodName": "store"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
          "commitDate": "17/02/18 7:00 AM",
          "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 3:24 AM",
          "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public void store(byte[] rowKey,\n-      TypedBufferedMutator\u003cFlowRunTable\u003e tableMutator, String qualifier,\n-      Long timestamp, Object inputValue, Attribute... attributes)\n-      throws IOException {\n-\n+  public static void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n+             ColumnPrefix\u003c?\u003e columnPrefix, String qualifier, Long timestamp,\n+             Object inputValue, Attribute... attributes) throws IOException {\n     // Null check\n     if (qualifier \u003d\u003d null) {\n       throw new IOException(\"Cannot store column with null qualifier in \"\n           + tableMutator.getName().getNameAsString());\n     }\n \n-    byte[] columnQualifier \u003d getColumnPrefixBytes(qualifier);\n+    byte[] columnQualifier \u003d columnPrefix.getColumnPrefixBytes(qualifier);\n     Attribute[] combinedAttributes \u003d\n-        HBaseTimelineStorageUtils.combineAttributes(attributes, this.aggOp);\n-    column.store(rowKey, tableMutator, columnQualifier, timestamp, inputValue,\n-        combinedAttributes);\n+        columnPrefix.getCombinedAttrsWithAggr(attributes);\n+\n+    store(rowKey, tableMutator, columnPrefix.getColumnFamilyBytes(),\n+        columnQualifier, timestamp, columnPrefix.supplementCellTimeStamp(),\n+        inputValue, columnPrefix.getValueConverter(), combinedAttributes);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n             ColumnPrefix\u003c?\u003e columnPrefix, String qualifier, Long timestamp,\n             Object inputValue, Attribute... attributes) throws IOException {\n    // Null check\n    if (qualifier \u003d\u003d null) {\n      throw new IOException(\"Cannot store column with null qualifier in \"\n          + tableMutator.getName().getNameAsString());\n    }\n\n    byte[] columnQualifier \u003d columnPrefix.getColumnPrefixBytes(qualifier);\n    Attribute[] combinedAttributes \u003d\n        columnPrefix.getCombinedAttrsWithAggr(attributes);\n\n    store(rowKey, tableMutator, columnPrefix.getColumnFamilyBytes(),\n        columnQualifier, timestamp, columnPrefix.supplementCellTimeStamp(),\n        inputValue, columnPrefix.getValueConverter(), combinedAttributes);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnRWHelper.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
          "commitDate": "17/02/18 7:00 AM",
          "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 3:24 AM",
          "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public void store(byte[] rowKey,\n-      TypedBufferedMutator\u003cFlowRunTable\u003e tableMutator, String qualifier,\n-      Long timestamp, Object inputValue, Attribute... attributes)\n-      throws IOException {\n-\n+  public static void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n+             ColumnPrefix\u003c?\u003e columnPrefix, String qualifier, Long timestamp,\n+             Object inputValue, Attribute... attributes) throws IOException {\n     // Null check\n     if (qualifier \u003d\u003d null) {\n       throw new IOException(\"Cannot store column with null qualifier in \"\n           + tableMutator.getName().getNameAsString());\n     }\n \n-    byte[] columnQualifier \u003d getColumnPrefixBytes(qualifier);\n+    byte[] columnQualifier \u003d columnPrefix.getColumnPrefixBytes(qualifier);\n     Attribute[] combinedAttributes \u003d\n-        HBaseTimelineStorageUtils.combineAttributes(attributes, this.aggOp);\n-    column.store(rowKey, tableMutator, columnQualifier, timestamp, inputValue,\n-        combinedAttributes);\n+        columnPrefix.getCombinedAttrsWithAggr(attributes);\n+\n+    store(rowKey, tableMutator, columnPrefix.getColumnFamilyBytes(),\n+        columnQualifier, timestamp, columnPrefix.supplementCellTimeStamp(),\n+        inputValue, columnPrefix.getValueConverter(), combinedAttributes);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n             ColumnPrefix\u003c?\u003e columnPrefix, String qualifier, Long timestamp,\n             Object inputValue, Attribute... attributes) throws IOException {\n    // Null check\n    if (qualifier \u003d\u003d null) {\n      throw new IOException(\"Cannot store column with null qualifier in \"\n          + tableMutator.getName().getNameAsString());\n    }\n\n    byte[] columnQualifier \u003d columnPrefix.getColumnPrefixBytes(qualifier);\n    Attribute[] combinedAttributes \u003d\n        columnPrefix.getCombinedAttrsWithAggr(attributes);\n\n    store(rowKey, tableMutator, columnPrefix.getColumnFamilyBytes(),\n        columnQualifier, timestamp, columnPrefix.supplementCellTimeStamp(),\n        inputValue, columnPrefix.getValueConverter(), combinedAttributes);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnRWHelper.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
          "commitDate": "17/02/18 7:00 AM",
          "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 3:24 AM",
          "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public void store(byte[] rowKey,\n-      TypedBufferedMutator\u003cFlowRunTable\u003e tableMutator, String qualifier,\n-      Long timestamp, Object inputValue, Attribute... attributes)\n-      throws IOException {\n-\n+  public static void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n+             ColumnPrefix\u003c?\u003e columnPrefix, String qualifier, Long timestamp,\n+             Object inputValue, Attribute... attributes) throws IOException {\n     // Null check\n     if (qualifier \u003d\u003d null) {\n       throw new IOException(\"Cannot store column with null qualifier in \"\n           + tableMutator.getName().getNameAsString());\n     }\n \n-    byte[] columnQualifier \u003d getColumnPrefixBytes(qualifier);\n+    byte[] columnQualifier \u003d columnPrefix.getColumnPrefixBytes(qualifier);\n     Attribute[] combinedAttributes \u003d\n-        HBaseTimelineStorageUtils.combineAttributes(attributes, this.aggOp);\n-    column.store(rowKey, tableMutator, columnQualifier, timestamp, inputValue,\n-        combinedAttributes);\n+        columnPrefix.getCombinedAttrsWithAggr(attributes);\n+\n+    store(rowKey, tableMutator, columnPrefix.getColumnFamilyBytes(),\n+        columnQualifier, timestamp, columnPrefix.supplementCellTimeStamp(),\n+        inputValue, columnPrefix.getValueConverter(), combinedAttributes);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n             ColumnPrefix\u003c?\u003e columnPrefix, String qualifier, Long timestamp,\n             Object inputValue, Attribute... attributes) throws IOException {\n    // Null check\n    if (qualifier \u003d\u003d null) {\n      throw new IOException(\"Cannot store column with null qualifier in \"\n          + tableMutator.getName().getNameAsString());\n    }\n\n    byte[] columnQualifier \u003d columnPrefix.getColumnPrefixBytes(qualifier);\n    Attribute[] combinedAttributes \u003d\n        columnPrefix.getCombinedAttrsWithAggr(attributes);\n\n    store(rowKey, tableMutator, columnPrefix.getColumnFamilyBytes(),\n        columnQualifier, timestamp, columnPrefix.supplementCellTimeStamp(),\n        inputValue, columnPrefix.getValueConverter(), combinedAttributes);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnRWHelper.java",
          "extendedDetails": {
            "oldValue": "[rowKey-byte[], tableMutator-TypedBufferedMutator\u003cFlowRunTable\u003e, qualifier-String, timestamp-Long, inputValue-Object, attributes-Attribute]",
            "newValue": "[rowKey-byte[], tableMutator-TypedBufferedMutator\u003c?\u003e, columnPrefix-ColumnPrefix\u003c?\u003e, qualifier-String, timestamp-Long, inputValue-Object, attributes-Attribute]"
          }
        }
      ]
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void store(byte[] rowKey,\n      TypedBufferedMutator\u003cFlowRunTable\u003e tableMutator, String qualifier,\n      Long timestamp, Object inputValue, Attribute... attributes)\n      throws IOException {\n\n    // Null check\n    if (qualifier \u003d\u003d null) {\n      throw new IOException(\"Cannot store column with null qualifier in \"\n          + tableMutator.getName().getNameAsString());\n    }\n\n    byte[] columnQualifier \u003d getColumnPrefixBytes(qualifier);\n    Attribute[] combinedAttributes \u003d\n        HBaseTimelineStorageUtils.combineAttributes(attributes, this.aggOp);\n    column.store(rowKey, tableMutator, columnQualifier, timestamp, inputValue,\n        combinedAttributes);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunColumnPrefix.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunColumnPrefix.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunColumnPrefix.java"
      }
    },
    "55f5886ea24671ff3db87a64aaba2e76b3355455": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5925. Extract hbase-backend-exclusive utility methods from TimelineStorageUtil. Contributed by Haibo Chen.\n",
      "commitDate": "09/12/16 4:17 PM",
      "commitName": "55f5886ea24671ff3db87a64aaba2e76b3355455",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:46 AM",
      "commitNameOld": "892b193bd77c15932b4c084c1d525b7017def0d4",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 152.36,
      "commitsBetweenForRepo": 1110,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public void store(byte[] rowKey,\n       TypedBufferedMutator\u003cFlowRunTable\u003e tableMutator, String qualifier,\n       Long timestamp, Object inputValue, Attribute... attributes)\n       throws IOException {\n \n     // Null check\n     if (qualifier \u003d\u003d null) {\n       throw new IOException(\"Cannot store column with null qualifier in \"\n           + tableMutator.getName().getNameAsString());\n     }\n \n     byte[] columnQualifier \u003d getColumnPrefixBytes(qualifier);\n     Attribute[] combinedAttributes \u003d\n-        TimelineStorageUtils.combineAttributes(attributes, this.aggOp);\n+        HBaseTimelineStorageUtils.combineAttributes(attributes, this.aggOp);\n     column.store(rowKey, tableMutator, columnQualifier, timestamp, inputValue,\n         combinedAttributes);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void store(byte[] rowKey,\n      TypedBufferedMutator\u003cFlowRunTable\u003e tableMutator, String qualifier,\n      Long timestamp, Object inputValue, Attribute... attributes)\n      throws IOException {\n\n    // Null check\n    if (qualifier \u003d\u003d null) {\n      throw new IOException(\"Cannot store column with null qualifier in \"\n          + tableMutator.getName().getNameAsString());\n    }\n\n    byte[] columnQualifier \u003d getColumnPrefixBytes(qualifier);\n    Attribute[] combinedAttributes \u003d\n        HBaseTimelineStorageUtils.combineAttributes(attributes, this.aggOp);\n    column.store(rowKey, tableMutator, columnQualifier, timestamp, inputValue,\n        combinedAttributes);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunColumnPrefix.java",
      "extendedDetails": {}
    },
    "1f710484e5b8ab4d5c67379c012004e8a4242d15": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3862. Support for fetching specific configs and metrics based on prefixes (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "51254a6b5133c8abfec4b7d2ac9477d112b3ccfa",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   public void store(byte[] rowKey,\n       TypedBufferedMutator\u003cFlowRunTable\u003e tableMutator, String qualifier,\n       Long timestamp, Object inputValue, Attribute... attributes)\n       throws IOException {\n \n     // Null check\n     if (qualifier \u003d\u003d null) {\n       throw new IOException(\"Cannot store column with null qualifier in \"\n           + tableMutator.getName().getNameAsString());\n     }\n \n-    byte[] columnQualifier \u003d ColumnHelper.getColumnQualifier(\n-        this.columnPrefixBytes, qualifier);\n+    byte[] columnQualifier \u003d getColumnPrefixBytes(qualifier);\n     Attribute[] combinedAttributes \u003d TimelineStorageUtils.combineAttributes(\n         attributes, this.aggOp);\n     column.store(rowKey, tableMutator, columnQualifier, timestamp, inputValue,\n         combinedAttributes);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void store(byte[] rowKey,\n      TypedBufferedMutator\u003cFlowRunTable\u003e tableMutator, String qualifier,\n      Long timestamp, Object inputValue, Attribute... attributes)\n      throws IOException {\n\n    // Null check\n    if (qualifier \u003d\u003d null) {\n      throw new IOException(\"Cannot store column with null qualifier in \"\n          + tableMutator.getName().getNameAsString());\n    }\n\n    byte[] columnQualifier \u003d getColumnPrefixBytes(qualifier);\n    Attribute[] combinedAttributes \u003d TimelineStorageUtils.combineAttributes(\n        attributes, this.aggOp);\n    column.store(rowKey, tableMutator, columnQualifier, timestamp, inputValue,\n        combinedAttributes);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunColumnPrefix.java",
      "extendedDetails": {}
    },
    "b51d0fef56a59b15489f5b932025718b4e9613d2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4178. [storage implementation] app id as string in row keys can cause incorrect ordering (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "b51d0fef56a59b15489f5b932025718b4e9613d2",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "a68e3839218523403f42acd7bdd7ce1da59a5e60",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public void store(byte[] rowKey,\n       TypedBufferedMutator\u003cFlowRunTable\u003e tableMutator, String qualifier,\n       Long timestamp, Object inputValue, Attribute... attributes)\n       throws IOException {\n \n     // Null check\n     if (qualifier \u003d\u003d null) {\n       throw new IOException(\"Cannot store column with null qualifier in \"\n           + tableMutator.getName().getNameAsString());\n     }\n \n     byte[] columnQualifier \u003d ColumnHelper.getColumnQualifier(\n         this.columnPrefixBytes, qualifier);\n-    Attribute[] combinedAttributes \u003d TimelineWriterUtils.combineAttributes(\n+    Attribute[] combinedAttributes \u003d TimelineStorageUtils.combineAttributes(\n         attributes, this.aggOp);\n     column.store(rowKey, tableMutator, columnQualifier, timestamp, inputValue,\n         combinedAttributes);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void store(byte[] rowKey,\n      TypedBufferedMutator\u003cFlowRunTable\u003e tableMutator, String qualifier,\n      Long timestamp, Object inputValue, Attribute... attributes)\n      throws IOException {\n\n    // Null check\n    if (qualifier \u003d\u003d null) {\n      throw new IOException(\"Cannot store column with null qualifier in \"\n          + tableMutator.getName().getNameAsString());\n    }\n\n    byte[] columnQualifier \u003d ColumnHelper.getColumnQualifier(\n        this.columnPrefixBytes, qualifier);\n    Attribute[] combinedAttributes \u003d TimelineStorageUtils.combineAttributes(\n        attributes, this.aggOp);\n    column.store(rowKey, tableMutator, columnQualifier, timestamp, inputValue,\n        combinedAttributes);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunColumnPrefix.java",
      "extendedDetails": {}
    },
    "a68e3839218523403f42acd7bdd7ce1da59a5e60": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3901. Populate flow run data in the flow_run \u0026 flow activity tables (Vrushali C via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "a68e3839218523403f42acd7bdd7ce1da59a5e60",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,18 @@\n+  public void store(byte[] rowKey,\n+      TypedBufferedMutator\u003cFlowRunTable\u003e tableMutator, String qualifier,\n+      Long timestamp, Object inputValue, Attribute... attributes)\n+      throws IOException {\n+\n+    // Null check\n+    if (qualifier \u003d\u003d null) {\n+      throw new IOException(\"Cannot store column with null qualifier in \"\n+          + tableMutator.getName().getNameAsString());\n+    }\n+\n+    byte[] columnQualifier \u003d ColumnHelper.getColumnQualifier(\n+        this.columnPrefixBytes, qualifier);\n+    Attribute[] combinedAttributes \u003d TimelineWriterUtils.combineAttributes(\n+        attributes, this.aggOp);\n+    column.store(rowKey, tableMutator, columnQualifier, timestamp, inputValue,\n+        combinedAttributes);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void store(byte[] rowKey,\n      TypedBufferedMutator\u003cFlowRunTable\u003e tableMutator, String qualifier,\n      Long timestamp, Object inputValue, Attribute... attributes)\n      throws IOException {\n\n    // Null check\n    if (qualifier \u003d\u003d null) {\n      throw new IOException(\"Cannot store column with null qualifier in \"\n          + tableMutator.getName().getNameAsString());\n    }\n\n    byte[] columnQualifier \u003d ColumnHelper.getColumnQualifier(\n        this.columnPrefixBytes, qualifier);\n    Attribute[] combinedAttributes \u003d TimelineWriterUtils.combineAttributes(\n        attributes, this.aggOp);\n    column.store(rowKey, tableMutator, columnQualifier, timestamp, inputValue,\n        combinedAttributes);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowRunColumnPrefix.java"
    }
  }
}