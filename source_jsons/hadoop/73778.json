{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Server.java",
  "functionName": "bind",
  "functionId": "bind___socket-ServerSocket__address-InetSocketAddress__backlog-int__conf-Configuration__rangeConf-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
  "functionStartLine": 611,
  "functionEndLine": 641,
  "numCommitsSeen": 162,
  "timeTaken": 4685,
  "changeHistory": [
    "e8eed2f62d30e0bf2f915ee3ad6b9c9f6d2d97cb"
  ],
  "changeHistoryShort": {
    "e8eed2f62d30e0bf2f915ee3ad6b9c9f6d2d97cb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e8eed2f62d30e0bf2f915ee3ad6b9c9f6d2d97cb": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8227. Allow RPC to limit ephemeral port range. (bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1327127 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/04/12 8:04 AM",
      "commitName": "e8eed2f62d30e0bf2f915ee3ad6b9c9f6d2d97cb",
      "commitAuthor": "Robert Joseph Evans",
      "diff": "@@ -0,0 +1,31 @@\n+  public static void bind(ServerSocket socket, InetSocketAddress address, \n+      int backlog, Configuration conf, String rangeConf) throws IOException {\n+    try {\n+      IntegerRanges range \u003d null;\n+      if (rangeConf !\u003d null) {\n+        range \u003d conf.getRange(rangeConf, \"\");\n+      }\n+      if (range \u003d\u003d null || range.isEmpty() || (address.getPort() !\u003d 0)) {\n+        socket.bind(address, backlog);\n+      } else {\n+        for (Integer port : range) {\n+          if (socket.isBound()) break;\n+          try {\n+            InetSocketAddress temp \u003d new InetSocketAddress(address.getAddress(),\n+                port);\n+            socket.bind(temp, backlog);\n+          } catch(BindException e) {\n+            //Ignored\n+          }\n+        }\n+        if (!socket.isBound()) {\n+          throw new BindException(\"Could not find a free port in \"+range);\n+        }\n+      }\n+    } catch (SocketException e) {\n+      throw NetUtils.wrapException(null,\n+          0,\n+          address.getHostName(),\n+          address.getPort(), e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void bind(ServerSocket socket, InetSocketAddress address, \n      int backlog, Configuration conf, String rangeConf) throws IOException {\n    try {\n      IntegerRanges range \u003d null;\n      if (rangeConf !\u003d null) {\n        range \u003d conf.getRange(rangeConf, \"\");\n      }\n      if (range \u003d\u003d null || range.isEmpty() || (address.getPort() !\u003d 0)) {\n        socket.bind(address, backlog);\n      } else {\n        for (Integer port : range) {\n          if (socket.isBound()) break;\n          try {\n            InetSocketAddress temp \u003d new InetSocketAddress(address.getAddress(),\n                port);\n            socket.bind(temp, backlog);\n          } catch(BindException e) {\n            //Ignored\n          }\n        }\n        if (!socket.isBound()) {\n          throw new BindException(\"Could not find a free port in \"+range);\n        }\n      }\n    } catch (SocketException e) {\n      throw NetUtils.wrapException(null,\n          0,\n          address.getHostName(),\n          address.getPort(), e);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java"
    }
  }
}