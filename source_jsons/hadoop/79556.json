{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContentSummary.java",
  "functionName": "toString",
  "functionId": "toString___qOption-boolean__hOption-boolean__tOption-boolean__types-List__StorageType__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ContentSummary.java",
  "functionStartLine": 387,
  "functionEndLine": 390,
  "numCommitsSeen": 22,
  "timeTaken": 2667,
  "changeHistory": [
    "f0efea490e5aa9dd629d2199aae9c5b1290a17ee",
    "2fd19b9674420e025af54a5bed12eb96478f8c48",
    "18a3dad44afd8061643fffc5bbe50fa66e47b72c",
    "fb06c0083799fa5ca514447ba6b63ce564272805",
    "a34dafe325902164c04de0bf9d34eccdf6a2cd88",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "f0efea490e5aa9dd629d2199aae9c5b1290a17ee": "Ybodychange",
    "2fd19b9674420e025af54a5bed12eb96478f8c48": "Ybodychange",
    "18a3dad44afd8061643fffc5bbe50fa66e47b72c": "Ymultichange(Yparameterchange,Ybodychange)",
    "fb06c0083799fa5ca514447ba6b63ce564272805": "Ybodychange",
    "a34dafe325902164c04de0bf9d34eccdf6a2cd88": "Ymultichange(Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f0efea490e5aa9dd629d2199aae9c5b1290a17ee": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8986. Add option to -du to calculate directory space usage excluding snapshots. Contributed by Xiao Chen.\n",
      "commitDate": "23/08/16 4:14 AM",
      "commitName": "f0efea490e5aa9dd629d2199aae9c5b1290a17ee",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "22/01/16 7:10 AM",
      "commitNameOld": "2fd19b9674420e025af54a5bed12eb96478f8c48",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 213.84,
      "commitsBetweenForRepo": 1526,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,4 @@\n   public String toString(boolean qOption, boolean hOption,\n                          boolean tOption, List\u003cStorageType\u003e types) {\n-    String prefix \u003d \"\";\n-\n-    if (tOption) {\n-      return getTypesQuotaUsage(hOption, types);\n-    }\n-\n-    if (qOption) {\n-      prefix \u003d getQuotaUsage(hOption);\n-    }\n-\n-    return prefix + String.format(SUMMARY_FORMAT,\n-        formatSize(directoryCount, hOption),\n-        formatSize(fileCount, hOption),\n-        formatSize(length, hOption));\n+    return toString(qOption, hOption, tOption, false, types);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString(boolean qOption, boolean hOption,\n                         boolean tOption, List\u003cStorageType\u003e types) {\n    return toString(qOption, hOption, tOption, false, types);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ContentSummary.java",
      "extendedDetails": {}
    },
    "2fd19b9674420e025af54a5bed12eb96478f8c48": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8898. Create API and command-line argument to get quota and quota usage without detailed content summary. Contributed by Ming Ma.\n",
      "commitDate": "22/01/16 7:10 AM",
      "commitName": "2fd19b9674420e025af54a5bed12eb96478f8c48",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "22/04/15 1:48 PM",
      "commitNameOld": "e54a3e1f4f3ea4dbba14f3fab0c395a235763c54",
      "commitAuthorOld": "Jakob Homan",
      "daysBetweenCommits": 274.77,
      "commitsBetweenForRepo": 2158,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,17 @@\n   public String toString(boolean qOption, boolean hOption,\n                          boolean tOption, List\u003cStorageType\u003e types) {\n     String prefix \u003d \"\";\n \n     if (tOption) {\n-      StringBuffer content \u003d new StringBuffer();\n-      for (StorageType st : types) {\n-        long typeQuota \u003d getTypeQuota(st);\n-        long typeConsumed \u003d getTypeConsumed(st);\n-        String quotaStr \u003d QUOTA_NONE;\n-        String quotaRem \u003d QUOTA_INF;\n-\n-        if (typeQuota \u003e 0) {\n-          quotaStr \u003d formatSize(typeQuota, hOption);\n-          quotaRem \u003d formatSize(typeQuota - typeConsumed, hOption);\n-        }\n-\n-        content.append(String.format(STORAGE_TYPE_SUMMARY_FORMAT,\n-            quotaStr, quotaRem));\n-      }\n-      return content.toString();\n+      return getTypesQuotaUsage(hOption, types);\n     }\n \n     if (qOption) {\n-      String quotaStr \u003d QUOTA_NONE;\n-      String quotaRem \u003d QUOTA_INF;\n-      String spaceQuotaStr \u003d QUOTA_NONE;\n-      String spaceQuotaRem \u003d QUOTA_INF;\n-\n-      if (quota\u003e0) {\n-        quotaStr \u003d formatSize(quota, hOption);\n-        quotaRem \u003d formatSize(quota-(directoryCount+fileCount), hOption);\n-      }\n-      if (spaceQuota\u003e0) {\n-        spaceQuotaStr \u003d formatSize(spaceQuota, hOption);\n-        spaceQuotaRem \u003d formatSize(spaceQuota - spaceConsumed, hOption);\n-      }\n-\n-      prefix \u003d String.format(QUOTA_SUMMARY_FORMAT + SPACE_QUOTA_SUMMARY_FORMAT,\n-          quotaStr, quotaRem, spaceQuotaStr, spaceQuotaRem);\n+      prefix \u003d getQuotaUsage(hOption);\n     }\n \n     return prefix + String.format(SUMMARY_FORMAT,\n         formatSize(directoryCount, hOption),\n         formatSize(fileCount, hOption),\n         formatSize(length, hOption));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString(boolean qOption, boolean hOption,\n                         boolean tOption, List\u003cStorageType\u003e types) {\n    String prefix \u003d \"\";\n\n    if (tOption) {\n      return getTypesQuotaUsage(hOption, types);\n    }\n\n    if (qOption) {\n      prefix \u003d getQuotaUsage(hOption);\n    }\n\n    return prefix + String.format(SUMMARY_FORMAT,\n        formatSize(directoryCount, hOption),\n        formatSize(fileCount, hOption),\n        formatSize(length, hOption));\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ContentSummary.java",
      "extendedDetails": {}
    },
    "18a3dad44afd8061643fffc5bbe50fa66e47b72c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7701. Support reporting per storage type quota and usage with hadoop/hdfs shell. (Contributed by Peter Shi)\n",
      "commitDate": "13/04/15 9:01 PM",
      "commitName": "18a3dad44afd8061643fffc5bbe50fa66e47b72c",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7701. Support reporting per storage type quota and usage with hadoop/hdfs shell. (Contributed by Peter Shi)\n",
          "commitDate": "13/04/15 9:01 PM",
          "commitName": "18a3dad44afd8061643fffc5bbe50fa66e47b72c",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "26/03/15 10:24 AM",
          "commitNameOld": "3d0708bdb0a75af3d87bbac9f6c4ffbcabab98ca",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 18.44,
          "commitsBetweenForRepo": 153,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,47 @@\n-  public String toString(boolean qOption, boolean hOption) {\n+  public String toString(boolean qOption, boolean hOption,\n+                         boolean tOption, List\u003cStorageType\u003e types) {\n     String prefix \u003d \"\";\n+\n+    if (tOption) {\n+      StringBuffer content \u003d new StringBuffer();\n+      for (StorageType st : types) {\n+        long typeQuota \u003d getTypeQuota(st);\n+        long typeConsumed \u003d getTypeConsumed(st);\n+        String quotaStr \u003d QUOTA_NONE;\n+        String quotaRem \u003d QUOTA_INF;\n+\n+        if (typeQuota \u003e 0) {\n+          quotaStr \u003d formatSize(typeQuota, hOption);\n+          quotaRem \u003d formatSize(typeQuota - typeConsumed, hOption);\n+        }\n+\n+        content.append(String.format(STORAGE_TYPE_SUMMARY_FORMAT,\n+            quotaStr, quotaRem));\n+      }\n+      return content.toString();\n+    }\n+\n     if (qOption) {\n-      String quotaStr \u003d \"none\";\n-      String quotaRem \u003d \"inf\";\n-      String spaceQuotaStr \u003d \"none\";\n-      String spaceQuotaRem \u003d \"inf\";\n-      \n+      String quotaStr \u003d QUOTA_NONE;\n+      String quotaRem \u003d QUOTA_INF;\n+      String spaceQuotaStr \u003d QUOTA_NONE;\n+      String spaceQuotaRem \u003d QUOTA_INF;\n+\n       if (quota\u003e0) {\n         quotaStr \u003d formatSize(quota, hOption);\n         quotaRem \u003d formatSize(quota-(directoryCount+fileCount), hOption);\n       }\n       if (spaceQuota\u003e0) {\n         spaceQuotaStr \u003d formatSize(spaceQuota, hOption);\n         spaceQuotaRem \u003d formatSize(spaceQuota - spaceConsumed, hOption);\n       }\n-      \n+\n       prefix \u003d String.format(QUOTA_SUMMARY_FORMAT + SPACE_QUOTA_SUMMARY_FORMAT,\n-                             quotaStr, quotaRem, spaceQuotaStr, spaceQuotaRem);\n+          quotaStr, quotaRem, spaceQuotaStr, spaceQuotaRem);\n     }\n-    \n+\n     return prefix + String.format(SUMMARY_FORMAT,\n-     formatSize(directoryCount, hOption),\n-     formatSize(fileCount, hOption),\n-     formatSize(length, hOption));\n+        formatSize(directoryCount, hOption),\n+        formatSize(fileCount, hOption),\n+        formatSize(length, hOption));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String toString(boolean qOption, boolean hOption,\n                         boolean tOption, List\u003cStorageType\u003e types) {\n    String prefix \u003d \"\";\n\n    if (tOption) {\n      StringBuffer content \u003d new StringBuffer();\n      for (StorageType st : types) {\n        long typeQuota \u003d getTypeQuota(st);\n        long typeConsumed \u003d getTypeConsumed(st);\n        String quotaStr \u003d QUOTA_NONE;\n        String quotaRem \u003d QUOTA_INF;\n\n        if (typeQuota \u003e 0) {\n          quotaStr \u003d formatSize(typeQuota, hOption);\n          quotaRem \u003d formatSize(typeQuota - typeConsumed, hOption);\n        }\n\n        content.append(String.format(STORAGE_TYPE_SUMMARY_FORMAT,\n            quotaStr, quotaRem));\n      }\n      return content.toString();\n    }\n\n    if (qOption) {\n      String quotaStr \u003d QUOTA_NONE;\n      String quotaRem \u003d QUOTA_INF;\n      String spaceQuotaStr \u003d QUOTA_NONE;\n      String spaceQuotaRem \u003d QUOTA_INF;\n\n      if (quota\u003e0) {\n        quotaStr \u003d formatSize(quota, hOption);\n        quotaRem \u003d formatSize(quota-(directoryCount+fileCount), hOption);\n      }\n      if (spaceQuota\u003e0) {\n        spaceQuotaStr \u003d formatSize(spaceQuota, hOption);\n        spaceQuotaRem \u003d formatSize(spaceQuota - spaceConsumed, hOption);\n      }\n\n      prefix \u003d String.format(QUOTA_SUMMARY_FORMAT + SPACE_QUOTA_SUMMARY_FORMAT,\n          quotaStr, quotaRem, spaceQuotaStr, spaceQuotaRem);\n    }\n\n    return prefix + String.format(SUMMARY_FORMAT,\n        formatSize(directoryCount, hOption),\n        formatSize(fileCount, hOption),\n        formatSize(length, hOption));\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ContentSummary.java",
          "extendedDetails": {
            "oldValue": "[qOption-boolean, hOption-boolean]",
            "newValue": "[qOption-boolean, hOption-boolean, tOption-boolean, types-List\u003cStorageType\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7701. Support reporting per storage type quota and usage with hadoop/hdfs shell. (Contributed by Peter Shi)\n",
          "commitDate": "13/04/15 9:01 PM",
          "commitName": "18a3dad44afd8061643fffc5bbe50fa66e47b72c",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "26/03/15 10:24 AM",
          "commitNameOld": "3d0708bdb0a75af3d87bbac9f6c4ffbcabab98ca",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 18.44,
          "commitsBetweenForRepo": 153,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,47 @@\n-  public String toString(boolean qOption, boolean hOption) {\n+  public String toString(boolean qOption, boolean hOption,\n+                         boolean tOption, List\u003cStorageType\u003e types) {\n     String prefix \u003d \"\";\n+\n+    if (tOption) {\n+      StringBuffer content \u003d new StringBuffer();\n+      for (StorageType st : types) {\n+        long typeQuota \u003d getTypeQuota(st);\n+        long typeConsumed \u003d getTypeConsumed(st);\n+        String quotaStr \u003d QUOTA_NONE;\n+        String quotaRem \u003d QUOTA_INF;\n+\n+        if (typeQuota \u003e 0) {\n+          quotaStr \u003d formatSize(typeQuota, hOption);\n+          quotaRem \u003d formatSize(typeQuota - typeConsumed, hOption);\n+        }\n+\n+        content.append(String.format(STORAGE_TYPE_SUMMARY_FORMAT,\n+            quotaStr, quotaRem));\n+      }\n+      return content.toString();\n+    }\n+\n     if (qOption) {\n-      String quotaStr \u003d \"none\";\n-      String quotaRem \u003d \"inf\";\n-      String spaceQuotaStr \u003d \"none\";\n-      String spaceQuotaRem \u003d \"inf\";\n-      \n+      String quotaStr \u003d QUOTA_NONE;\n+      String quotaRem \u003d QUOTA_INF;\n+      String spaceQuotaStr \u003d QUOTA_NONE;\n+      String spaceQuotaRem \u003d QUOTA_INF;\n+\n       if (quota\u003e0) {\n         quotaStr \u003d formatSize(quota, hOption);\n         quotaRem \u003d formatSize(quota-(directoryCount+fileCount), hOption);\n       }\n       if (spaceQuota\u003e0) {\n         spaceQuotaStr \u003d formatSize(spaceQuota, hOption);\n         spaceQuotaRem \u003d formatSize(spaceQuota - spaceConsumed, hOption);\n       }\n-      \n+\n       prefix \u003d String.format(QUOTA_SUMMARY_FORMAT + SPACE_QUOTA_SUMMARY_FORMAT,\n-                             quotaStr, quotaRem, spaceQuotaStr, spaceQuotaRem);\n+          quotaStr, quotaRem, spaceQuotaStr, spaceQuotaRem);\n     }\n-    \n+\n     return prefix + String.format(SUMMARY_FORMAT,\n-     formatSize(directoryCount, hOption),\n-     formatSize(fileCount, hOption),\n-     formatSize(length, hOption));\n+        formatSize(directoryCount, hOption),\n+        formatSize(fileCount, hOption),\n+        formatSize(length, hOption));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String toString(boolean qOption, boolean hOption,\n                         boolean tOption, List\u003cStorageType\u003e types) {\n    String prefix \u003d \"\";\n\n    if (tOption) {\n      StringBuffer content \u003d new StringBuffer();\n      for (StorageType st : types) {\n        long typeQuota \u003d getTypeQuota(st);\n        long typeConsumed \u003d getTypeConsumed(st);\n        String quotaStr \u003d QUOTA_NONE;\n        String quotaRem \u003d QUOTA_INF;\n\n        if (typeQuota \u003e 0) {\n          quotaStr \u003d formatSize(typeQuota, hOption);\n          quotaRem \u003d formatSize(typeQuota - typeConsumed, hOption);\n        }\n\n        content.append(String.format(STORAGE_TYPE_SUMMARY_FORMAT,\n            quotaStr, quotaRem));\n      }\n      return content.toString();\n    }\n\n    if (qOption) {\n      String quotaStr \u003d QUOTA_NONE;\n      String quotaRem \u003d QUOTA_INF;\n      String spaceQuotaStr \u003d QUOTA_NONE;\n      String spaceQuotaRem \u003d QUOTA_INF;\n\n      if (quota\u003e0) {\n        quotaStr \u003d formatSize(quota, hOption);\n        quotaRem \u003d formatSize(quota-(directoryCount+fileCount), hOption);\n      }\n      if (spaceQuota\u003e0) {\n        spaceQuotaStr \u003d formatSize(spaceQuota, hOption);\n        spaceQuotaRem \u003d formatSize(spaceQuota - spaceConsumed, hOption);\n      }\n\n      prefix \u003d String.format(QUOTA_SUMMARY_FORMAT + SPACE_QUOTA_SUMMARY_FORMAT,\n          quotaStr, quotaRem, spaceQuotaStr, spaceQuotaRem);\n    }\n\n    return prefix + String.format(SUMMARY_FORMAT,\n        formatSize(directoryCount, hOption),\n        formatSize(fileCount, hOption),\n        formatSize(length, hOption));\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ContentSummary.java",
          "extendedDetails": {}
        }
      ]
    },
    "fb06c0083799fa5ca514447ba6b63ce564272805": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7713. dfs -count -q should label output column (Jonathan Allen via aw)\n",
      "commitDate": "05/02/15 7:44 AM",
      "commitName": "fb06c0083799fa5ca514447ba6b63ce564272805",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "13/08/14 10:30 AM",
      "commitNameOld": "a34dafe325902164c04de0bf9d34eccdf6a2cd88",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 175.93,
      "commitsBetweenForRepo": 1474,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public String toString(boolean qOption, boolean hOption) {\n     String prefix \u003d \"\";\n     if (qOption) {\n       String quotaStr \u003d \"none\";\n       String quotaRem \u003d \"inf\";\n       String spaceQuotaStr \u003d \"none\";\n       String spaceQuotaRem \u003d \"inf\";\n       \n       if (quota\u003e0) {\n         quotaStr \u003d formatSize(quota, hOption);\n         quotaRem \u003d formatSize(quota-(directoryCount+fileCount), hOption);\n       }\n       if (spaceQuota\u003e0) {\n         spaceQuotaStr \u003d formatSize(spaceQuota, hOption);\n         spaceQuotaRem \u003d formatSize(spaceQuota - spaceConsumed, hOption);\n       }\n       \n-      prefix \u003d String.format(QUOTA_STRING_FORMAT + SPACE_QUOTA_STRING_FORMAT, \n+      prefix \u003d String.format(QUOTA_SUMMARY_FORMAT + SPACE_QUOTA_SUMMARY_FORMAT,\n                              quotaStr, quotaRem, spaceQuotaStr, spaceQuotaRem);\n     }\n     \n-    return prefix + String.format(STRING_FORMAT,\n+    return prefix + String.format(SUMMARY_FORMAT,\n      formatSize(directoryCount, hOption),\n      formatSize(fileCount, hOption),\n      formatSize(length, hOption));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString(boolean qOption, boolean hOption) {\n    String prefix \u003d \"\";\n    if (qOption) {\n      String quotaStr \u003d \"none\";\n      String quotaRem \u003d \"inf\";\n      String spaceQuotaStr \u003d \"none\";\n      String spaceQuotaRem \u003d \"inf\";\n      \n      if (quota\u003e0) {\n        quotaStr \u003d formatSize(quota, hOption);\n        quotaRem \u003d formatSize(quota-(directoryCount+fileCount), hOption);\n      }\n      if (spaceQuota\u003e0) {\n        spaceQuotaStr \u003d formatSize(spaceQuota, hOption);\n        spaceQuotaRem \u003d formatSize(spaceQuota - spaceConsumed, hOption);\n      }\n      \n      prefix \u003d String.format(QUOTA_SUMMARY_FORMAT + SPACE_QUOTA_SUMMARY_FORMAT,\n                             quotaStr, quotaRem, spaceQuotaStr, spaceQuotaRem);\n    }\n    \n    return prefix + String.format(SUMMARY_FORMAT,\n     formatSize(directoryCount, hOption),\n     formatSize(fileCount, hOption),\n     formatSize(length, hOption));\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ContentSummary.java",
      "extendedDetails": {}
    },
    "a34dafe325902164c04de0bf9d34eccdf6a2cd88": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-8944. Shell command fs -count should include human readable option (Jonathan Allen via aw)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617775 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/08/14 10:30 AM",
      "commitName": "a34dafe325902164c04de0bf9d34eccdf6a2cd88",
      "commitAuthor": "Allen Wittenauer",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-8944. Shell command fs -count should include human readable option (Jonathan Allen via aw)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617775 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/08/14 10:30 AM",
          "commitName": "a34dafe325902164c04de0bf9d34eccdf6a2cd88",
          "commitAuthor": "Allen Wittenauer",
          "commitDateOld": "24/08/12 6:03 PM",
          "commitNameOld": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 718.69,
          "commitsBetweenForRepo": 4498,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,26 @@\n-  public String toString(boolean qOption) {\n+  public String toString(boolean qOption, boolean hOption) {\n     String prefix \u003d \"\";\n     if (qOption) {\n       String quotaStr \u003d \"none\";\n       String quotaRem \u003d \"inf\";\n       String spaceQuotaStr \u003d \"none\";\n       String spaceQuotaRem \u003d \"inf\";\n       \n       if (quota\u003e0) {\n-        quotaStr \u003d Long.toString(quota);\n-        quotaRem \u003d Long.toString(quota-(directoryCount+fileCount));\n+        quotaStr \u003d formatSize(quota, hOption);\n+        quotaRem \u003d formatSize(quota-(directoryCount+fileCount), hOption);\n       }\n       if (spaceQuota\u003e0) {\n-        spaceQuotaStr \u003d Long.toString(spaceQuota);\n-        spaceQuotaRem \u003d Long.toString(spaceQuota - spaceConsumed);        \n+        spaceQuotaStr \u003d formatSize(spaceQuota, hOption);\n+        spaceQuotaRem \u003d formatSize(spaceQuota - spaceConsumed, hOption);\n       }\n       \n       prefix \u003d String.format(QUOTA_STRING_FORMAT + SPACE_QUOTA_STRING_FORMAT, \n                              quotaStr, quotaRem, spaceQuotaStr, spaceQuotaRem);\n     }\n     \n-    return prefix + String.format(STRING_FORMAT, directoryCount, \n-                                  fileCount, length);\n+    return prefix + String.format(STRING_FORMAT,\n+     formatSize(directoryCount, hOption),\n+     formatSize(fileCount, hOption),\n+     formatSize(length, hOption));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String toString(boolean qOption, boolean hOption) {\n    String prefix \u003d \"\";\n    if (qOption) {\n      String quotaStr \u003d \"none\";\n      String quotaRem \u003d \"inf\";\n      String spaceQuotaStr \u003d \"none\";\n      String spaceQuotaRem \u003d \"inf\";\n      \n      if (quota\u003e0) {\n        quotaStr \u003d formatSize(quota, hOption);\n        quotaRem \u003d formatSize(quota-(directoryCount+fileCount), hOption);\n      }\n      if (spaceQuota\u003e0) {\n        spaceQuotaStr \u003d formatSize(spaceQuota, hOption);\n        spaceQuotaRem \u003d formatSize(spaceQuota - spaceConsumed, hOption);\n      }\n      \n      prefix \u003d String.format(QUOTA_STRING_FORMAT + SPACE_QUOTA_STRING_FORMAT, \n                             quotaStr, quotaRem, spaceQuotaStr, spaceQuotaRem);\n    }\n    \n    return prefix + String.format(STRING_FORMAT,\n     formatSize(directoryCount, hOption),\n     formatSize(fileCount, hOption),\n     formatSize(length, hOption));\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ContentSummary.java",
          "extendedDetails": {
            "oldValue": "[qOption-boolean]",
            "newValue": "[qOption-boolean, hOption-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-8944. Shell command fs -count should include human readable option (Jonathan Allen via aw)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617775 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/08/14 10:30 AM",
          "commitName": "a34dafe325902164c04de0bf9d34eccdf6a2cd88",
          "commitAuthor": "Allen Wittenauer",
          "commitDateOld": "24/08/12 6:03 PM",
          "commitNameOld": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 718.69,
          "commitsBetweenForRepo": 4498,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,26 @@\n-  public String toString(boolean qOption) {\n+  public String toString(boolean qOption, boolean hOption) {\n     String prefix \u003d \"\";\n     if (qOption) {\n       String quotaStr \u003d \"none\";\n       String quotaRem \u003d \"inf\";\n       String spaceQuotaStr \u003d \"none\";\n       String spaceQuotaRem \u003d \"inf\";\n       \n       if (quota\u003e0) {\n-        quotaStr \u003d Long.toString(quota);\n-        quotaRem \u003d Long.toString(quota-(directoryCount+fileCount));\n+        quotaStr \u003d formatSize(quota, hOption);\n+        quotaRem \u003d formatSize(quota-(directoryCount+fileCount), hOption);\n       }\n       if (spaceQuota\u003e0) {\n-        spaceQuotaStr \u003d Long.toString(spaceQuota);\n-        spaceQuotaRem \u003d Long.toString(spaceQuota - spaceConsumed);        \n+        spaceQuotaStr \u003d formatSize(spaceQuota, hOption);\n+        spaceQuotaRem \u003d formatSize(spaceQuota - spaceConsumed, hOption);\n       }\n       \n       prefix \u003d String.format(QUOTA_STRING_FORMAT + SPACE_QUOTA_STRING_FORMAT, \n                              quotaStr, quotaRem, spaceQuotaStr, spaceQuotaRem);\n     }\n     \n-    return prefix + String.format(STRING_FORMAT, directoryCount, \n-                                  fileCount, length);\n+    return prefix + String.format(STRING_FORMAT,\n+     formatSize(directoryCount, hOption),\n+     formatSize(fileCount, hOption),\n+     formatSize(length, hOption));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String toString(boolean qOption, boolean hOption) {\n    String prefix \u003d \"\";\n    if (qOption) {\n      String quotaStr \u003d \"none\";\n      String quotaRem \u003d \"inf\";\n      String spaceQuotaStr \u003d \"none\";\n      String spaceQuotaRem \u003d \"inf\";\n      \n      if (quota\u003e0) {\n        quotaStr \u003d formatSize(quota, hOption);\n        quotaRem \u003d formatSize(quota-(directoryCount+fileCount), hOption);\n      }\n      if (spaceQuota\u003e0) {\n        spaceQuotaStr \u003d formatSize(spaceQuota, hOption);\n        spaceQuotaRem \u003d formatSize(spaceQuota - spaceConsumed, hOption);\n      }\n      \n      prefix \u003d String.format(QUOTA_STRING_FORMAT + SPACE_QUOTA_STRING_FORMAT, \n                             quotaStr, quotaRem, spaceQuotaStr, spaceQuotaRem);\n    }\n    \n    return prefix + String.format(STRING_FORMAT,\n     formatSize(directoryCount, hOption),\n     formatSize(fileCount, hOption),\n     formatSize(length, hOption));\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ContentSummary.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String toString(boolean qOption) {\n    String prefix \u003d \"\";\n    if (qOption) {\n      String quotaStr \u003d \"none\";\n      String quotaRem \u003d \"inf\";\n      String spaceQuotaStr \u003d \"none\";\n      String spaceQuotaRem \u003d \"inf\";\n      \n      if (quota\u003e0) {\n        quotaStr \u003d Long.toString(quota);\n        quotaRem \u003d Long.toString(quota-(directoryCount+fileCount));\n      }\n      if (spaceQuota\u003e0) {\n        spaceQuotaStr \u003d Long.toString(spaceQuota);\n        spaceQuotaRem \u003d Long.toString(spaceQuota - spaceConsumed);        \n      }\n      \n      prefix \u003d String.format(QUOTA_STRING_FORMAT + SPACE_QUOTA_STRING_FORMAT, \n                             quotaStr, quotaRem, spaceQuotaStr, spaceQuotaRem);\n    }\n    \n    return prefix + String.format(STRING_FORMAT, directoryCount, \n                                  fileCount, length);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ContentSummary.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/ContentSummary.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ContentSummary.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String toString(boolean qOption) {\n    String prefix \u003d \"\";\n    if (qOption) {\n      String quotaStr \u003d \"none\";\n      String quotaRem \u003d \"inf\";\n      String spaceQuotaStr \u003d \"none\";\n      String spaceQuotaRem \u003d \"inf\";\n      \n      if (quota\u003e0) {\n        quotaStr \u003d Long.toString(quota);\n        quotaRem \u003d Long.toString(quota-(directoryCount+fileCount));\n      }\n      if (spaceQuota\u003e0) {\n        spaceQuotaStr \u003d Long.toString(spaceQuota);\n        spaceQuotaRem \u003d Long.toString(spaceQuota - spaceConsumed);        \n      }\n      \n      prefix \u003d String.format(QUOTA_STRING_FORMAT + SPACE_QUOTA_STRING_FORMAT, \n                             quotaStr, quotaRem, spaceQuotaStr, spaceQuotaRem);\n    }\n    \n    return prefix + String.format(STRING_FORMAT, directoryCount, \n                                  fileCount, length);\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/ContentSummary.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/ContentSummary.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/ContentSummary.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String toString(boolean qOption) {\n    String prefix \u003d \"\";\n    if (qOption) {\n      String quotaStr \u003d \"none\";\n      String quotaRem \u003d \"inf\";\n      String spaceQuotaStr \u003d \"none\";\n      String spaceQuotaRem \u003d \"inf\";\n      \n      if (quota\u003e0) {\n        quotaStr \u003d Long.toString(quota);\n        quotaRem \u003d Long.toString(quota-(directoryCount+fileCount));\n      }\n      if (spaceQuota\u003e0) {\n        spaceQuotaStr \u003d Long.toString(spaceQuota);\n        spaceQuotaRem \u003d Long.toString(spaceQuota - spaceConsumed);        \n      }\n      \n      prefix \u003d String.format(QUOTA_STRING_FORMAT + SPACE_QUOTA_STRING_FORMAT, \n                             quotaStr, quotaRem, spaceQuotaStr, spaceQuotaRem);\n    }\n    \n    return prefix + String.format(STRING_FORMAT, directoryCount, \n                                  fileCount, length);\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/ContentSummary.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/ContentSummary.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/ContentSummary.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,24 @@\n+  public String toString(boolean qOption) {\n+    String prefix \u003d \"\";\n+    if (qOption) {\n+      String quotaStr \u003d \"none\";\n+      String quotaRem \u003d \"inf\";\n+      String spaceQuotaStr \u003d \"none\";\n+      String spaceQuotaRem \u003d \"inf\";\n+      \n+      if (quota\u003e0) {\n+        quotaStr \u003d Long.toString(quota);\n+        quotaRem \u003d Long.toString(quota-(directoryCount+fileCount));\n+      }\n+      if (spaceQuota\u003e0) {\n+        spaceQuotaStr \u003d Long.toString(spaceQuota);\n+        spaceQuotaRem \u003d Long.toString(spaceQuota - spaceConsumed);        \n+      }\n+      \n+      prefix \u003d String.format(QUOTA_STRING_FORMAT + SPACE_QUOTA_STRING_FORMAT, \n+                             quotaStr, quotaRem, spaceQuotaStr, spaceQuotaRem);\n+    }\n+    \n+    return prefix + String.format(STRING_FORMAT, directoryCount, \n+                                  fileCount, length);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString(boolean qOption) {\n    String prefix \u003d \"\";\n    if (qOption) {\n      String quotaStr \u003d \"none\";\n      String quotaRem \u003d \"inf\";\n      String spaceQuotaStr \u003d \"none\";\n      String spaceQuotaRem \u003d \"inf\";\n      \n      if (quota\u003e0) {\n        quotaStr \u003d Long.toString(quota);\n        quotaRem \u003d Long.toString(quota-(directoryCount+fileCount));\n      }\n      if (spaceQuota\u003e0) {\n        spaceQuotaStr \u003d Long.toString(spaceQuota);\n        spaceQuotaRem \u003d Long.toString(spaceQuota - spaceConsumed);        \n      }\n      \n      prefix \u003d String.format(QUOTA_STRING_FORMAT + SPACE_QUOTA_STRING_FORMAT, \n                             quotaStr, quotaRem, spaceQuotaStr, spaceQuotaRem);\n    }\n    \n    return prefix + String.format(STRING_FORMAT, directoryCount, \n                                  fileCount, length);\n  }",
      "path": "src/java/org/apache/hadoop/fs/ContentSummary.java"
    }
  }
}