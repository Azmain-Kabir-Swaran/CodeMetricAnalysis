{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractCSQueue.java",
  "functionName": "recoverDrainingState",
  "functionId": "recoverDrainingState",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
  "functionStartLine": 1399,
  "functionEndLine": 1412,
  "numCommitsSeen": 76,
  "timeTaken": 2306,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "9db9cd95bd0348070a286e69e7965c03c9bd39d6"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "9db9cd95bd0348070a286e69e7965c03c9bd39d6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public void recoverDrainingState() {\n+    this.writeLock.lock();\n     try {\n-      this.writeLock.lock();\n       if (getState() \u003d\u003d QueueState.STOPPED) {\n         updateQueueState(QueueState.DRAINING);\n       }\n       LOG.info(\"Recover draining state for queue \" + this.getQueuePath());\n       if (getParent() !\u003d null \u0026\u0026 getParent().getState() \u003d\u003d QueueState.STOPPED) {\n         ((AbstractCSQueue) getParent()).recoverDrainingState();\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recoverDrainingState() {\n    this.writeLock.lock();\n    try {\n      if (getState() \u003d\u003d QueueState.STOPPED) {\n        updateQueueState(QueueState.DRAINING);\n      }\n      LOG.info(\"Recover draining state for queue \" + this.getQueuePath());\n      if (getParent() !\u003d null \u0026\u0026 getParent().getState() \u003d\u003d QueueState.STOPPED) {\n        ((AbstractCSQueue) getParent()).recoverDrainingState();\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
      "extendedDetails": {}
    },
    "9db9cd95bd0348070a286e69e7965c03c9bd39d6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7003. DRAINING state of queues is not recovered after RM restart. Contributed by Tao Yang.\n",
      "commitDate": "10/05/18 7:47 PM",
      "commitName": "9db9cd95bd0348070a286e69e7965c03c9bd39d6",
      "commitAuthor": "Weiwei Yang",
      "diff": "@@ -0,0 +1,14 @@\n+  public void recoverDrainingState() {\n+    try {\n+      this.writeLock.lock();\n+      if (getState() \u003d\u003d QueueState.STOPPED) {\n+        updateQueueState(QueueState.DRAINING);\n+      }\n+      LOG.info(\"Recover draining state for queue \" + this.getQueuePath());\n+      if (getParent() !\u003d null \u0026\u0026 getParent().getState() \u003d\u003d QueueState.STOPPED) {\n+        ((AbstractCSQueue) getParent()).recoverDrainingState();\n+      }\n+    } finally {\n+      this.writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void recoverDrainingState() {\n    try {\n      this.writeLock.lock();\n      if (getState() \u003d\u003d QueueState.STOPPED) {\n        updateQueueState(QueueState.DRAINING);\n      }\n      LOG.info(\"Recover draining state for queue \" + this.getQueuePath());\n      if (getParent() !\u003d null \u0026\u0026 getParent().getState() \u003d\u003d QueueState.STOPPED) {\n        ((AbstractCSQueue) getParent()).recoverDrainingState();\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java"
    }
  }
}