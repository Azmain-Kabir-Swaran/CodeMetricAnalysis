{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Configuration.java",
  "functionName": "getTimeDurationHelper",
  "functionId": "getTimeDurationHelper___name-String__vStr-String__defaultUnit-TimeUnit__returnUnit-TimeUnit",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
  "functionStartLine": 1885,
  "functionEndLine": 1903,
  "numCommitsSeen": 255,
  "timeTaken": 5249,
  "changeHistory": [
    "5ff76cb8bc69d68ba7c9487d00b1dc753d616bb2",
    "66357574ae1da09ced735da36bf7d80a40c3fa1b",
    "3a7f02b81520ad4d3eebf92e9dbca662beec0302",
    "d37dc5d1b8e022a7085118a2e7066623483c293f",
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc"
  ],
  "changeHistoryShort": {
    "5ff76cb8bc69d68ba7c9487d00b1dc753d616bb2": "Ybodychange",
    "66357574ae1da09ced735da36bf7d80a40c3fa1b": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "3a7f02b81520ad4d3eebf92e9dbca662beec0302": "Ymodifierchange",
    "d37dc5d1b8e022a7085118a2e7066623483c293f": "Ybodychange",
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5ff76cb8bc69d68ba7c9487d00b1dc753d616bb2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14630. Configuration.getTimeDurationHelper() should not log time unit warning in info log. Contributed by hemanthboyina.\n",
      "commitDate": "03/09/19 12:07 AM",
      "commitName": "5ff76cb8bc69d68ba7c9487d00b1dc753d616bb2",
      "commitAuthor": "Surendra Singh Lilhore",
      "commitDateOld": "01/08/19 7:56 PM",
      "commitNameOld": "e872ceb810a343da7fce7185dca78d3b9aad9b7b",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 32.17,
      "commitsBetweenForRepo": 321,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,19 @@\n   private long getTimeDurationHelper(String name, String vStr,\n       TimeUnit defaultUnit, TimeUnit returnUnit) {\n     vStr \u003d vStr.trim();\n     vStr \u003d StringUtils.toLowerCase(vStr);\n     ParsedTimeDuration vUnit \u003d ParsedTimeDuration.unitFor(vStr);\n     if (null \u003d\u003d vUnit) {\n-      logDeprecation(\"No unit for \" + name + \"(\" + vStr + \") assuming \" +\n-          defaultUnit);\n       vUnit \u003d ParsedTimeDuration.unitFor(defaultUnit);\n     } else {\n       vStr \u003d vStr.substring(0, vStr.lastIndexOf(vUnit.suffix()));\n     }\n \n     long raw \u003d Long.parseLong(vStr);\n     long converted \u003d returnUnit.convert(raw, vUnit.unit());\n     if (vUnit.unit().convert(converted, returnUnit) \u003c raw) {\n       logDeprecation(\"Possible loss of precision converting \" + vStr\n           + vUnit.suffix() + \" to \" + returnUnit + \" for \" + name);\n     }\n     return converted;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long getTimeDurationHelper(String name, String vStr,\n      TimeUnit defaultUnit, TimeUnit returnUnit) {\n    vStr \u003d vStr.trim();\n    vStr \u003d StringUtils.toLowerCase(vStr);\n    ParsedTimeDuration vUnit \u003d ParsedTimeDuration.unitFor(vStr);\n    if (null \u003d\u003d vUnit) {\n      vUnit \u003d ParsedTimeDuration.unitFor(defaultUnit);\n    } else {\n      vStr \u003d vStr.substring(0, vStr.lastIndexOf(vUnit.suffix()));\n    }\n\n    long raw \u003d Long.parseLong(vStr);\n    long converted \u003d returnUnit.convert(raw, vUnit.unit());\n    if (vUnit.unit().convert(converted, returnUnit) \u003c raw) {\n      logDeprecation(\"Possible loss of precision converting \" + vStr\n          + vUnit.suffix() + \" to \" + returnUnit + \" for \" + name);\n    }\n    return converted;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {}
    },
    "66357574ae1da09ced735da36bf7d80a40c3fa1b": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-14346. Add better time precision to Configuration#getTimeDuration, allowing return unit and default unit to be specified independently. Contributed by Chao Sun.\n",
      "commitDate": "13/03/19 1:15 PM",
      "commitName": "66357574ae1da09ced735da36bf7d80a40c3fa1b",
      "commitAuthor": "Erik Krogen",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-14346. Add better time precision to Configuration#getTimeDuration, allowing return unit and default unit to be specified independently. Contributed by Chao Sun.\n",
          "commitDate": "13/03/19 1:15 PM",
          "commitName": "66357574ae1da09ced735da36bf7d80a40c3fa1b",
          "commitAuthor": "Erik Krogen",
          "commitDateOld": "31/01/19 10:06 AM",
          "commitNameOld": "bcc3a79f589cd8a05e3241801c3f977f011e8157",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 41.09,
          "commitsBetweenForRepo": 353,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-  public long getTimeDurationHelper(String name, String vStr, TimeUnit unit) {\n+  private long getTimeDurationHelper(String name, String vStr,\n+      TimeUnit defaultUnit, TimeUnit returnUnit) {\n     vStr \u003d vStr.trim();\n     vStr \u003d StringUtils.toLowerCase(vStr);\n     ParsedTimeDuration vUnit \u003d ParsedTimeDuration.unitFor(vStr);\n     if (null \u003d\u003d vUnit) {\n-      logDeprecation(\"No unit for \" + name + \"(\" + vStr + \") assuming \" + unit);\n-      vUnit \u003d ParsedTimeDuration.unitFor(unit);\n+      logDeprecation(\"No unit for \" + name + \"(\" + vStr + \") assuming \" +\n+          defaultUnit);\n+      vUnit \u003d ParsedTimeDuration.unitFor(defaultUnit);\n     } else {\n       vStr \u003d vStr.substring(0, vStr.lastIndexOf(vUnit.suffix()));\n     }\n \n     long raw \u003d Long.parseLong(vStr);\n-    long converted \u003d unit.convert(raw, vUnit.unit());\n-    if (vUnit.unit().convert(converted, unit) \u003c raw) {\n+    long converted \u003d returnUnit.convert(raw, vUnit.unit());\n+    if (vUnit.unit().convert(converted, returnUnit) \u003c raw) {\n       logDeprecation(\"Possible loss of precision converting \" + vStr\n-          + vUnit.suffix() + \" to \" + unit + \" for \" + name);\n+          + vUnit.suffix() + \" to \" + returnUnit + \" for \" + name);\n     }\n     return converted;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private long getTimeDurationHelper(String name, String vStr,\n      TimeUnit defaultUnit, TimeUnit returnUnit) {\n    vStr \u003d vStr.trim();\n    vStr \u003d StringUtils.toLowerCase(vStr);\n    ParsedTimeDuration vUnit \u003d ParsedTimeDuration.unitFor(vStr);\n    if (null \u003d\u003d vUnit) {\n      logDeprecation(\"No unit for \" + name + \"(\" + vStr + \") assuming \" +\n          defaultUnit);\n      vUnit \u003d ParsedTimeDuration.unitFor(defaultUnit);\n    } else {\n      vStr \u003d vStr.substring(0, vStr.lastIndexOf(vUnit.suffix()));\n    }\n\n    long raw \u003d Long.parseLong(vStr);\n    long converted \u003d returnUnit.convert(raw, vUnit.unit());\n    if (vUnit.unit().convert(converted, returnUnit) \u003c raw) {\n      logDeprecation(\"Possible loss of precision converting \" + vStr\n          + vUnit.suffix() + \" to \" + returnUnit + \" for \" + name);\n    }\n    return converted;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
          "extendedDetails": {
            "oldValue": "[name-String, vStr-String, unit-TimeUnit]",
            "newValue": "[name-String, vStr-String, defaultUnit-TimeUnit, returnUnit-TimeUnit]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-14346. Add better time precision to Configuration#getTimeDuration, allowing return unit and default unit to be specified independently. Contributed by Chao Sun.\n",
          "commitDate": "13/03/19 1:15 PM",
          "commitName": "66357574ae1da09ced735da36bf7d80a40c3fa1b",
          "commitAuthor": "Erik Krogen",
          "commitDateOld": "31/01/19 10:06 AM",
          "commitNameOld": "bcc3a79f589cd8a05e3241801c3f977f011e8157",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 41.09,
          "commitsBetweenForRepo": 353,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-  public long getTimeDurationHelper(String name, String vStr, TimeUnit unit) {\n+  private long getTimeDurationHelper(String name, String vStr,\n+      TimeUnit defaultUnit, TimeUnit returnUnit) {\n     vStr \u003d vStr.trim();\n     vStr \u003d StringUtils.toLowerCase(vStr);\n     ParsedTimeDuration vUnit \u003d ParsedTimeDuration.unitFor(vStr);\n     if (null \u003d\u003d vUnit) {\n-      logDeprecation(\"No unit for \" + name + \"(\" + vStr + \") assuming \" + unit);\n-      vUnit \u003d ParsedTimeDuration.unitFor(unit);\n+      logDeprecation(\"No unit for \" + name + \"(\" + vStr + \") assuming \" +\n+          defaultUnit);\n+      vUnit \u003d ParsedTimeDuration.unitFor(defaultUnit);\n     } else {\n       vStr \u003d vStr.substring(0, vStr.lastIndexOf(vUnit.suffix()));\n     }\n \n     long raw \u003d Long.parseLong(vStr);\n-    long converted \u003d unit.convert(raw, vUnit.unit());\n-    if (vUnit.unit().convert(converted, unit) \u003c raw) {\n+    long converted \u003d returnUnit.convert(raw, vUnit.unit());\n+    if (vUnit.unit().convert(converted, returnUnit) \u003c raw) {\n       logDeprecation(\"Possible loss of precision converting \" + vStr\n-          + vUnit.suffix() + \" to \" + unit + \" for \" + name);\n+          + vUnit.suffix() + \" to \" + returnUnit + \" for \" + name);\n     }\n     return converted;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private long getTimeDurationHelper(String name, String vStr,\n      TimeUnit defaultUnit, TimeUnit returnUnit) {\n    vStr \u003d vStr.trim();\n    vStr \u003d StringUtils.toLowerCase(vStr);\n    ParsedTimeDuration vUnit \u003d ParsedTimeDuration.unitFor(vStr);\n    if (null \u003d\u003d vUnit) {\n      logDeprecation(\"No unit for \" + name + \"(\" + vStr + \") assuming \" +\n          defaultUnit);\n      vUnit \u003d ParsedTimeDuration.unitFor(defaultUnit);\n    } else {\n      vStr \u003d vStr.substring(0, vStr.lastIndexOf(vUnit.suffix()));\n    }\n\n    long raw \u003d Long.parseLong(vStr);\n    long converted \u003d returnUnit.convert(raw, vUnit.unit());\n    if (vUnit.unit().convert(converted, returnUnit) \u003c raw) {\n      logDeprecation(\"Possible loss of precision converting \" + vStr\n          + vUnit.suffix() + \" to \" + returnUnit + \" for \" + name);\n    }\n    return converted;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-14346. Add better time precision to Configuration#getTimeDuration, allowing return unit and default unit to be specified independently. Contributed by Chao Sun.\n",
          "commitDate": "13/03/19 1:15 PM",
          "commitName": "66357574ae1da09ced735da36bf7d80a40c3fa1b",
          "commitAuthor": "Erik Krogen",
          "commitDateOld": "31/01/19 10:06 AM",
          "commitNameOld": "bcc3a79f589cd8a05e3241801c3f977f011e8157",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 41.09,
          "commitsBetweenForRepo": 353,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-  public long getTimeDurationHelper(String name, String vStr, TimeUnit unit) {\n+  private long getTimeDurationHelper(String name, String vStr,\n+      TimeUnit defaultUnit, TimeUnit returnUnit) {\n     vStr \u003d vStr.trim();\n     vStr \u003d StringUtils.toLowerCase(vStr);\n     ParsedTimeDuration vUnit \u003d ParsedTimeDuration.unitFor(vStr);\n     if (null \u003d\u003d vUnit) {\n-      logDeprecation(\"No unit for \" + name + \"(\" + vStr + \") assuming \" + unit);\n-      vUnit \u003d ParsedTimeDuration.unitFor(unit);\n+      logDeprecation(\"No unit for \" + name + \"(\" + vStr + \") assuming \" +\n+          defaultUnit);\n+      vUnit \u003d ParsedTimeDuration.unitFor(defaultUnit);\n     } else {\n       vStr \u003d vStr.substring(0, vStr.lastIndexOf(vUnit.suffix()));\n     }\n \n     long raw \u003d Long.parseLong(vStr);\n-    long converted \u003d unit.convert(raw, vUnit.unit());\n-    if (vUnit.unit().convert(converted, unit) \u003c raw) {\n+    long converted \u003d returnUnit.convert(raw, vUnit.unit());\n+    if (vUnit.unit().convert(converted, returnUnit) \u003c raw) {\n       logDeprecation(\"Possible loss of precision converting \" + vStr\n-          + vUnit.suffix() + \" to \" + unit + \" for \" + name);\n+          + vUnit.suffix() + \" to \" + returnUnit + \" for \" + name);\n     }\n     return converted;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private long getTimeDurationHelper(String name, String vStr,\n      TimeUnit defaultUnit, TimeUnit returnUnit) {\n    vStr \u003d vStr.trim();\n    vStr \u003d StringUtils.toLowerCase(vStr);\n    ParsedTimeDuration vUnit \u003d ParsedTimeDuration.unitFor(vStr);\n    if (null \u003d\u003d vUnit) {\n      logDeprecation(\"No unit for \" + name + \"(\" + vStr + \") assuming \" +\n          defaultUnit);\n      vUnit \u003d ParsedTimeDuration.unitFor(defaultUnit);\n    } else {\n      vStr \u003d vStr.substring(0, vStr.lastIndexOf(vUnit.suffix()));\n    }\n\n    long raw \u003d Long.parseLong(vStr);\n    long converted \u003d returnUnit.convert(raw, vUnit.unit());\n    if (vUnit.unit().convert(converted, returnUnit) \u003c raw) {\n      logDeprecation(\"Possible loss of precision converting \" + vStr\n          + vUnit.suffix() + \" to \" + returnUnit + \" for \" + name);\n    }\n    return converted;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
          "extendedDetails": {}
        }
      ]
    },
    "3a7f02b81520ad4d3eebf92e9dbca662beec0302": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-12085. Reconfigure namenode heartbeat interval fails if the interval was set with time unit. Contributed by Weiwei Yang.\n",
      "commitDate": "11/07/17 5:40 AM",
      "commitName": "3a7f02b81520ad4d3eebf92e9dbca662beec0302",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "12/06/17 3:07 PM",
      "commitNameOld": "a81916ea89d59c1642b3462e3d7c6c1acb1e7109",
      "commitAuthorOld": "Jonathan Eagles",
      "daysBetweenCommits": 28.61,
      "commitsBetweenForRepo": 131,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-  private long getTimeDurationHelper(String name, String vStr, TimeUnit unit) {\n+  public long getTimeDurationHelper(String name, String vStr, TimeUnit unit) {\n     vStr \u003d vStr.trim();\n     vStr \u003d StringUtils.toLowerCase(vStr);\n     ParsedTimeDuration vUnit \u003d ParsedTimeDuration.unitFor(vStr);\n     if (null \u003d\u003d vUnit) {\n       logDeprecation(\"No unit for \" + name + \"(\" + vStr + \") assuming \" + unit);\n       vUnit \u003d ParsedTimeDuration.unitFor(unit);\n     } else {\n       vStr \u003d vStr.substring(0, vStr.lastIndexOf(vUnit.suffix()));\n     }\n \n     long raw \u003d Long.parseLong(vStr);\n     long converted \u003d unit.convert(raw, vUnit.unit());\n     if (vUnit.unit().convert(converted, unit) \u003c raw) {\n       logDeprecation(\"Possible loss of precision converting \" + vStr\n           + vUnit.suffix() + \" to \" + unit + \" for \" + name);\n     }\n     return converted;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public long getTimeDurationHelper(String name, String vStr, TimeUnit unit) {\n    vStr \u003d vStr.trim();\n    vStr \u003d StringUtils.toLowerCase(vStr);\n    ParsedTimeDuration vUnit \u003d ParsedTimeDuration.unitFor(vStr);\n    if (null \u003d\u003d vUnit) {\n      logDeprecation(\"No unit for \" + name + \"(\" + vStr + \") assuming \" + unit);\n      vUnit \u003d ParsedTimeDuration.unitFor(unit);\n    } else {\n      vStr \u003d vStr.substring(0, vStr.lastIndexOf(vUnit.suffix()));\n    }\n\n    long raw \u003d Long.parseLong(vStr);\n    long converted \u003d unit.convert(raw, vUnit.unit());\n    if (vUnit.unit().convert(converted, unit) \u003c raw) {\n      logDeprecation(\"Possible loss of precision converting \" + vStr\n          + vUnit.suffix() + \" to \" + unit + \" for \" + name);\n    }\n    return converted;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[public]"
      }
    },
    "d37dc5d1b8e022a7085118a2e7066623483c293f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9847. HDFS configuration should accept time units. Contributed by Yiqun Lin\n",
      "commitDate": "06/09/16 10:38 AM",
      "commitName": "d37dc5d1b8e022a7085118a2e7066623483c293f",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "11/08/16 11:57 AM",
      "commitNameOld": "d892ae9576d07d01927443b6dc6c934a6c2f317f",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 25.94,
      "commitsBetweenForRepo": 152,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,19 @@\n   private long getTimeDurationHelper(String name, String vStr, TimeUnit unit) {\n+    vStr \u003d vStr.trim();\n+    vStr \u003d StringUtils.toLowerCase(vStr);\n     ParsedTimeDuration vUnit \u003d ParsedTimeDuration.unitFor(vStr);\n     if (null \u003d\u003d vUnit) {\n-      LOG.warn(\"No unit for \" + name + \"(\" + vStr + \") assuming \" + unit);\n+      logDeprecation(\"No unit for \" + name + \"(\" + vStr + \") assuming \" + unit);\n       vUnit \u003d ParsedTimeDuration.unitFor(unit);\n     } else {\n       vStr \u003d vStr.substring(0, vStr.lastIndexOf(vUnit.suffix()));\n     }\n-    return unit.convert(Long.parseLong(vStr), vUnit.unit());\n+\n+    long raw \u003d Long.parseLong(vStr);\n+    long converted \u003d unit.convert(raw, vUnit.unit());\n+    if (vUnit.unit().convert(converted, unit) \u003c raw) {\n+      logDeprecation(\"Possible loss of precision converting \" + vStr\n+          + vUnit.suffix() + \" to \" + unit + \" for \" + name);\n+    }\n+    return converted;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long getTimeDurationHelper(String name, String vStr, TimeUnit unit) {\n    vStr \u003d vStr.trim();\n    vStr \u003d StringUtils.toLowerCase(vStr);\n    ParsedTimeDuration vUnit \u003d ParsedTimeDuration.unitFor(vStr);\n    if (null \u003d\u003d vUnit) {\n      logDeprecation(\"No unit for \" + name + \"(\" + vStr + \") assuming \" + unit);\n      vUnit \u003d ParsedTimeDuration.unitFor(unit);\n    } else {\n      vStr \u003d vStr.substring(0, vStr.lastIndexOf(vUnit.suffix()));\n    }\n\n    long raw \u003d Long.parseLong(vStr);\n    long converted \u003d unit.convert(raw, vUnit.unit());\n    if (vUnit.unit().convert(converted, unit) \u003c raw) {\n      logDeprecation(\"Possible loss of precision converting \" + vStr\n          + vUnit.suffix() + \" to \" + unit + \" for \" + name);\n    }\n    return converted;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {}
    },
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12916. Allow RPC scheduler/callqueue backoff using response times. Contributed by Xiaoyu Yao.\n",
      "commitDate": "31/03/16 8:42 AM",
      "commitName": "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,10 @@\n+  private long getTimeDurationHelper(String name, String vStr, TimeUnit unit) {\n+    ParsedTimeDuration vUnit \u003d ParsedTimeDuration.unitFor(vStr);\n+    if (null \u003d\u003d vUnit) {\n+      LOG.warn(\"No unit for \" + name + \"(\" + vStr + \") assuming \" + unit);\n+      vUnit \u003d ParsedTimeDuration.unitFor(unit);\n+    } else {\n+      vStr \u003d vStr.substring(0, vStr.lastIndexOf(vUnit.suffix()));\n+    }\n+    return unit.convert(Long.parseLong(vStr), vUnit.unit());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private long getTimeDurationHelper(String name, String vStr, TimeUnit unit) {\n    ParsedTimeDuration vUnit \u003d ParsedTimeDuration.unitFor(vStr);\n    if (null \u003d\u003d vUnit) {\n      LOG.warn(\"No unit for \" + name + \"(\" + vStr + \") assuming \" + unit);\n      vUnit \u003d ParsedTimeDuration.unitFor(unit);\n    } else {\n      vStr \u003d vStr.substring(0, vStr.lastIndexOf(vUnit.suffix()));\n    }\n    return unit.convert(Long.parseLong(vStr), vUnit.unit());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java"
    }
  }
}