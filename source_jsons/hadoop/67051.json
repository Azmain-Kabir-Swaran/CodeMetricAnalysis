{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StatePool.java",
  "functionName": "reloadState",
  "functionId": "reloadState___stateFile-Path__configuration-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/state/StatePool.java",
  "functionStartLine": 195,
  "functionEndLine": 206,
  "numCommitsSeen": 7,
  "timeTaken": 4105,
  "changeHistory": [
    "5af572b6443715b7a741296c1bd520a1840f9a7c",
    "10325d97329c214bb3899c8535df5a366bc86d2f",
    "a238f931ea7dce0ca620d1798156c84ff77097ff"
  ],
  "changeHistoryShort": {
    "5af572b6443715b7a741296c1bd520a1840f9a7c": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "10325d97329c214bb3899c8535df5a366bc86d2f": "Yfilerename",
    "a238f931ea7dce0ca620d1798156c84ff77097ff": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5af572b6443715b7a741296c1bd520a1840f9a7c": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HADOOP-13427. Eliminate needless uses of FileSystem#{exists(), isFile(), isDirectory()}. Contributed by Steve Loughran and Mingliang Liu\n",
      "commitDate": "15/11/16 10:57 AM",
      "commitName": "5af572b6443715b7a741296c1bd520a1840f9a7c",
      "commitAuthor": "Mingliang Liu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-13427. Eliminate needless uses of FileSystem#{exists(), isFile(), isDirectory()}. Contributed by Steve Loughran and Mingliang Liu\n",
          "commitDate": "15/11/16 10:57 AM",
          "commitName": "5af572b6443715b7a741296c1bd520a1840f9a7c",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "06/10/16 8:31 AM",
          "commitNameOld": "2cc841f16ec9aa5336495fc20ee781a1276fddc5",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 40.14,
          "commitsBetweenForRepo": 361,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,12 @@\n-  private void reloadState(Path stateFile, Configuration conf) \n-  throws Exception {\n-    FileSystem fs \u003d stateFile.getFileSystem(conf);\n-    if (fs.exists(stateFile)) {\n+  private boolean reloadState(Path stateFile, Configuration configuration)\n+      throws Exception {\n+    FileSystem fs \u003d stateFile.getFileSystem(configuration);\n+    try (FSDataInputStream in \u003d fs.open(stateFile)) {\n       System.out.println(\"Reading state from \" + stateFile.toString());\n-      FSDataInputStream in \u003d fs.open(stateFile);\n-      \n       read(in);\n-      in.close();\n-    } else {\n+      return true;\n+    } catch (FileNotFoundException e) {\n       System.out.println(\"No state information found for \" + stateFile);\n+      return false;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean reloadState(Path stateFile, Configuration configuration)\n      throws Exception {\n    FileSystem fs \u003d stateFile.getFileSystem(configuration);\n    try (FSDataInputStream in \u003d fs.open(stateFile)) {\n      System.out.println(\"Reading state from \" + stateFile.toString());\n      read(in);\n      return true;\n    } catch (FileNotFoundException e) {\n      System.out.println(\"No state information found for \" + stateFile);\n      return false;\n    }\n  }",
          "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/state/StatePool.java",
          "extendedDetails": {
            "oldValue": "[stateFile-Path, conf-Configuration]",
            "newValue": "[stateFile-Path, configuration-Configuration]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-13427. Eliminate needless uses of FileSystem#{exists(), isFile(), isDirectory()}. Contributed by Steve Loughran and Mingliang Liu\n",
          "commitDate": "15/11/16 10:57 AM",
          "commitName": "5af572b6443715b7a741296c1bd520a1840f9a7c",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "06/10/16 8:31 AM",
          "commitNameOld": "2cc841f16ec9aa5336495fc20ee781a1276fddc5",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 40.14,
          "commitsBetweenForRepo": 361,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,12 @@\n-  private void reloadState(Path stateFile, Configuration conf) \n-  throws Exception {\n-    FileSystem fs \u003d stateFile.getFileSystem(conf);\n-    if (fs.exists(stateFile)) {\n+  private boolean reloadState(Path stateFile, Configuration configuration)\n+      throws Exception {\n+    FileSystem fs \u003d stateFile.getFileSystem(configuration);\n+    try (FSDataInputStream in \u003d fs.open(stateFile)) {\n       System.out.println(\"Reading state from \" + stateFile.toString());\n-      FSDataInputStream in \u003d fs.open(stateFile);\n-      \n       read(in);\n-      in.close();\n-    } else {\n+      return true;\n+    } catch (FileNotFoundException e) {\n       System.out.println(\"No state information found for \" + stateFile);\n+      return false;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean reloadState(Path stateFile, Configuration configuration)\n      throws Exception {\n    FileSystem fs \u003d stateFile.getFileSystem(configuration);\n    try (FSDataInputStream in \u003d fs.open(stateFile)) {\n      System.out.println(\"Reading state from \" + stateFile.toString());\n      read(in);\n      return true;\n    } catch (FileNotFoundException e) {\n      System.out.println(\"No state information found for \" + stateFile);\n      return false;\n    }\n  }",
          "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/state/StatePool.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "boolean"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13427. Eliminate needless uses of FileSystem#{exists(), isFile(), isDirectory()}. Contributed by Steve Loughran and Mingliang Liu\n",
          "commitDate": "15/11/16 10:57 AM",
          "commitName": "5af572b6443715b7a741296c1bd520a1840f9a7c",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "06/10/16 8:31 AM",
          "commitNameOld": "2cc841f16ec9aa5336495fc20ee781a1276fddc5",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 40.14,
          "commitsBetweenForRepo": 361,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,12 @@\n-  private void reloadState(Path stateFile, Configuration conf) \n-  throws Exception {\n-    FileSystem fs \u003d stateFile.getFileSystem(conf);\n-    if (fs.exists(stateFile)) {\n+  private boolean reloadState(Path stateFile, Configuration configuration)\n+      throws Exception {\n+    FileSystem fs \u003d stateFile.getFileSystem(configuration);\n+    try (FSDataInputStream in \u003d fs.open(stateFile)) {\n       System.out.println(\"Reading state from \" + stateFile.toString());\n-      FSDataInputStream in \u003d fs.open(stateFile);\n-      \n       read(in);\n-      in.close();\n-    } else {\n+      return true;\n+    } catch (FileNotFoundException e) {\n       System.out.println(\"No state information found for \" + stateFile);\n+      return false;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean reloadState(Path stateFile, Configuration configuration)\n      throws Exception {\n    FileSystem fs \u003d stateFile.getFileSystem(configuration);\n    try (FSDataInputStream in \u003d fs.open(stateFile)) {\n      System.out.println(\"Reading state from \" + stateFile.toString());\n      read(in);\n      return true;\n    } catch (FileNotFoundException e) {\n      System.out.println(\"No state information found for \" + stateFile);\n      return false;\n    }\n  }",
          "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/state/StatePool.java",
          "extendedDetails": {}
        }
      ]
    },
    "10325d97329c214bb3899c8535df5a366bc86d2f": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3582. Move successfully passing MR1 tests to MR2 maven tree.(ahmed via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233090 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/01/12 2:10 PM",
      "commitName": "10325d97329c214bb3899c8535df5a366bc86d2f",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/01/12 10:20 AM",
      "commitNameOld": "8b2f6909ec7df5cffb5ef417f5c9cffdee43e38a",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void reloadState(Path stateFile, Configuration conf) \n  throws Exception {\n    FileSystem fs \u003d stateFile.getFileSystem(conf);\n    if (fs.exists(stateFile)) {\n      System.out.println(\"Reading state from \" + stateFile.toString());\n      FSDataInputStream in \u003d fs.open(stateFile);\n      \n      read(in);\n      in.close();\n    } else {\n      System.out.println(\"No state information found for \" + stateFile);\n    }\n  }",
      "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/state/StatePool.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/state/StatePool.java",
        "newPath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/state/StatePool.java"
      }
    },
    "a238f931ea7dce0ca620d1798156c84ff77097ff": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-778. Rumen Anonymizer. (Amar Kamat and Chris Douglas via amarrk)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1215141 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/12/11 6:20 AM",
      "commitName": "a238f931ea7dce0ca620d1798156c84ff77097ff",
      "commitAuthor": "Amar Kamat",
      "diff": "@@ -0,0 +1,13 @@\n+  private void reloadState(Path stateFile, Configuration conf) \n+  throws Exception {\n+    FileSystem fs \u003d stateFile.getFileSystem(conf);\n+    if (fs.exists(stateFile)) {\n+      System.out.println(\"Reading state from \" + stateFile.toString());\n+      FSDataInputStream in \u003d fs.open(stateFile);\n+      \n+      read(in);\n+      in.close();\n+    } else {\n+      System.out.println(\"No state information found for \" + stateFile);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void reloadState(Path stateFile, Configuration conf) \n  throws Exception {\n    FileSystem fs \u003d stateFile.getFileSystem(conf);\n    if (fs.exists(stateFile)) {\n      System.out.println(\"Reading state from \" + stateFile.toString());\n      FSDataInputStream in \u003d fs.open(stateFile);\n      \n      read(in);\n      in.close();\n    } else {\n      System.out.println(\"No state information found for \" + stateFile);\n    }\n  }",
      "path": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/state/StatePool.java"
    }
  }
}