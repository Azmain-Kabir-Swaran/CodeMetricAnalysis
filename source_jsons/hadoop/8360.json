{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirSnapshotOp.java",
  "functionName": "createSnapshot",
  "functionId": "createSnapshot___fsd-FSDirectory__pc-FSPermissionChecker__snapshotManager-SnapshotManager__snapshotRoot-String__snapshotName-String__logRetryCache-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSnapshotOp.java",
  "functionStartLine": 91,
  "functionEndLine": 122,
  "numCommitsSeen": 32,
  "timeTaken": 4796,
  "changeHistory": [
    "40150da1e12a41c2e774fe2a277ddc3988bed239",
    "84a1321f6aa0af6895564a7c47f8f264656f0294",
    "20e3ae260b40cd6ef657b2a629a02219d68f162f",
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
    "26d8dec756da1d9bd3df3b41a4dd5d8ff03bc5b2",
    "4a3161182905afaf450a60d02528161ed1f97471"
  ],
  "changeHistoryShort": {
    "40150da1e12a41c2e774fe2a277ddc3988bed239": "Ybodychange",
    "84a1321f6aa0af6895564a7c47f8f264656f0294": "Ymultichange(Yparameterchange,Ybodychange)",
    "20e3ae260b40cd6ef657b2a629a02219d68f162f": "Ybodychange",
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": "Ybodychange",
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": "Ybodychange",
    "26d8dec756da1d9bd3df3b41a4dd5d8ff03bc5b2": "Ybodychange",
    "4a3161182905afaf450a60d02528161ed1f97471": "Yintroduced"
  },
  "changeHistoryDetails": {
    "40150da1e12a41c2e774fe2a277ddc3988bed239": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14922. Prevent snapshot modification time got change on startup. Contributed by hemanthboyina.\n",
      "commitDate": "12/11/19 10:53 AM",
      "commitName": "40150da1e12a41c2e774fe2a277ddc3988bed239",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "22/02/18 11:32 AM",
      "commitNameOld": "84a1321f6aa0af6895564a7c47f8f264656f0294",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 627.97,
      "commitsBetweenForRepo": 5324,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,32 @@\n   static String createSnapshot(\n       FSDirectory fsd, FSPermissionChecker pc, SnapshotManager snapshotManager,\n       String snapshotRoot, String snapshotName, boolean logRetryCache)\n       throws IOException {\n     final INodesInPath iip \u003d fsd.resolvePath(pc, snapshotRoot, DirOp.WRITE);\n     if (fsd.isPermissionEnabled()) {\n       fsd.checkOwner(pc, iip);\n     }\n \n     if (snapshotName \u003d\u003d null || snapshotName.isEmpty()) {\n       snapshotName \u003d Snapshot.generateDefaultSnapshotName();\n     } else if (!DFSUtil.isValidNameForComponent(snapshotName)) {\n       throw new InvalidPathException(\"Invalid snapshot name: \" + snapshotName);\n     }\n \n     String snapshotPath;\n     verifySnapshotName(fsd, snapshotName, snapshotRoot);\n+    // time of snapshot creation\n+    final long now \u003d Time.now();\n     fsd.writeLock();\n     try {\n       snapshotPath \u003d snapshotManager.createSnapshot(\n           fsd.getFSNamesystem().getLeaseManager(),\n-          iip, snapshotRoot, snapshotName);\n+          iip, snapshotRoot, snapshotName, now);\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logCreateSnapshot(snapshotRoot, snapshotName,\n-        logRetryCache);\n+        logRetryCache, now);\n \n     return snapshotPath;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static String createSnapshot(\n      FSDirectory fsd, FSPermissionChecker pc, SnapshotManager snapshotManager,\n      String snapshotRoot, String snapshotName, boolean logRetryCache)\n      throws IOException {\n    final INodesInPath iip \u003d fsd.resolvePath(pc, snapshotRoot, DirOp.WRITE);\n    if (fsd.isPermissionEnabled()) {\n      fsd.checkOwner(pc, iip);\n    }\n\n    if (snapshotName \u003d\u003d null || snapshotName.isEmpty()) {\n      snapshotName \u003d Snapshot.generateDefaultSnapshotName();\n    } else if (!DFSUtil.isValidNameForComponent(snapshotName)) {\n      throw new InvalidPathException(\"Invalid snapshot name: \" + snapshotName);\n    }\n\n    String snapshotPath;\n    verifySnapshotName(fsd, snapshotName, snapshotRoot);\n    // time of snapshot creation\n    final long now \u003d Time.now();\n    fsd.writeLock();\n    try {\n      snapshotPath \u003d snapshotManager.createSnapshot(\n          fsd.getFSNamesystem().getLeaseManager(),\n          iip, snapshotRoot, snapshotName, now);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logCreateSnapshot(snapshotRoot, snapshotName,\n        logRetryCache, now);\n\n    return snapshotPath;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSnapshotOp.java",
      "extendedDetails": {}
    },
    "84a1321f6aa0af6895564a7c47f8f264656f0294": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
      "commitDate": "22/02/18 11:32 AM",
      "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
      "commitAuthor": "Xiaoyu Yao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
          "commitDate": "22/02/18 11:32 AM",
          "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
          "commitAuthor": "Xiaoyu Yao",
          "commitDateOld": "11/12/17 8:14 PM",
          "commitNameOld": "693169ef34f856a27dc09d90a45fb4ec5b66ed2c",
          "commitAuthorOld": "Chris Douglas",
          "daysBetweenCommits": 72.64,
          "commitsBetweenForRepo": 423,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,30 @@\n   static String createSnapshot(\n-      FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n-      String snapshotName, boolean logRetryCache)\n+      FSDirectory fsd, FSPermissionChecker pc, SnapshotManager snapshotManager,\n+      String snapshotRoot, String snapshotName, boolean logRetryCache)\n       throws IOException {\n-    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     final INodesInPath iip \u003d fsd.resolvePath(pc, snapshotRoot, DirOp.WRITE);\n     if (fsd.isPermissionEnabled()) {\n       fsd.checkOwner(pc, iip);\n     }\n \n     if (snapshotName \u003d\u003d null || snapshotName.isEmpty()) {\n       snapshotName \u003d Snapshot.generateDefaultSnapshotName();\n     } else if (!DFSUtil.isValidNameForComponent(snapshotName)) {\n       throw new InvalidPathException(\"Invalid snapshot name: \" + snapshotName);\n     }\n \n     String snapshotPath;\n     verifySnapshotName(fsd, snapshotName, snapshotRoot);\n     fsd.writeLock();\n     try {\n       snapshotPath \u003d snapshotManager.createSnapshot(\n           fsd.getFSNamesystem().getLeaseManager(),\n           iip, snapshotRoot, snapshotName);\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logCreateSnapshot(snapshotRoot, snapshotName,\n         logRetryCache);\n \n     return snapshotPath;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static String createSnapshot(\n      FSDirectory fsd, FSPermissionChecker pc, SnapshotManager snapshotManager,\n      String snapshotRoot, String snapshotName, boolean logRetryCache)\n      throws IOException {\n    final INodesInPath iip \u003d fsd.resolvePath(pc, snapshotRoot, DirOp.WRITE);\n    if (fsd.isPermissionEnabled()) {\n      fsd.checkOwner(pc, iip);\n    }\n\n    if (snapshotName \u003d\u003d null || snapshotName.isEmpty()) {\n      snapshotName \u003d Snapshot.generateDefaultSnapshotName();\n    } else if (!DFSUtil.isValidNameForComponent(snapshotName)) {\n      throw new InvalidPathException(\"Invalid snapshot name: \" + snapshotName);\n    }\n\n    String snapshotPath;\n    verifySnapshotName(fsd, snapshotName, snapshotRoot);\n    fsd.writeLock();\n    try {\n      snapshotPath \u003d snapshotManager.createSnapshot(\n          fsd.getFSNamesystem().getLeaseManager(),\n          iip, snapshotRoot, snapshotName);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logCreateSnapshot(snapshotRoot, snapshotName,\n        logRetryCache);\n\n    return snapshotPath;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSnapshotOp.java",
          "extendedDetails": {
            "oldValue": "[fsd-FSDirectory, snapshotManager-SnapshotManager, snapshotRoot-String, snapshotName-String, logRetryCache-boolean]",
            "newValue": "[fsd-FSDirectory, pc-FSPermissionChecker, snapshotManager-SnapshotManager, snapshotRoot-String, snapshotName-String, logRetryCache-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
          "commitDate": "22/02/18 11:32 AM",
          "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
          "commitAuthor": "Xiaoyu Yao",
          "commitDateOld": "11/12/17 8:14 PM",
          "commitNameOld": "693169ef34f856a27dc09d90a45fb4ec5b66ed2c",
          "commitAuthorOld": "Chris Douglas",
          "daysBetweenCommits": 72.64,
          "commitsBetweenForRepo": 423,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,30 @@\n   static String createSnapshot(\n-      FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n-      String snapshotName, boolean logRetryCache)\n+      FSDirectory fsd, FSPermissionChecker pc, SnapshotManager snapshotManager,\n+      String snapshotRoot, String snapshotName, boolean logRetryCache)\n       throws IOException {\n-    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     final INodesInPath iip \u003d fsd.resolvePath(pc, snapshotRoot, DirOp.WRITE);\n     if (fsd.isPermissionEnabled()) {\n       fsd.checkOwner(pc, iip);\n     }\n \n     if (snapshotName \u003d\u003d null || snapshotName.isEmpty()) {\n       snapshotName \u003d Snapshot.generateDefaultSnapshotName();\n     } else if (!DFSUtil.isValidNameForComponent(snapshotName)) {\n       throw new InvalidPathException(\"Invalid snapshot name: \" + snapshotName);\n     }\n \n     String snapshotPath;\n     verifySnapshotName(fsd, snapshotName, snapshotRoot);\n     fsd.writeLock();\n     try {\n       snapshotPath \u003d snapshotManager.createSnapshot(\n           fsd.getFSNamesystem().getLeaseManager(),\n           iip, snapshotRoot, snapshotName);\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logCreateSnapshot(snapshotRoot, snapshotName,\n         logRetryCache);\n \n     return snapshotPath;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static String createSnapshot(\n      FSDirectory fsd, FSPermissionChecker pc, SnapshotManager snapshotManager,\n      String snapshotRoot, String snapshotName, boolean logRetryCache)\n      throws IOException {\n    final INodesInPath iip \u003d fsd.resolvePath(pc, snapshotRoot, DirOp.WRITE);\n    if (fsd.isPermissionEnabled()) {\n      fsd.checkOwner(pc, iip);\n    }\n\n    if (snapshotName \u003d\u003d null || snapshotName.isEmpty()) {\n      snapshotName \u003d Snapshot.generateDefaultSnapshotName();\n    } else if (!DFSUtil.isValidNameForComponent(snapshotName)) {\n      throw new InvalidPathException(\"Invalid snapshot name: \" + snapshotName);\n    }\n\n    String snapshotPath;\n    verifySnapshotName(fsd, snapshotName, snapshotRoot);\n    fsd.writeLock();\n    try {\n      snapshotPath \u003d snapshotManager.createSnapshot(\n          fsd.getFSNamesystem().getLeaseManager(),\n          iip, snapshotRoot, snapshotName);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logCreateSnapshot(snapshotRoot, snapshotName,\n        logRetryCache);\n\n    return snapshotPath;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSnapshotOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "20e3ae260b40cd6ef657b2a629a02219d68f162f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11402. HDFS Snapshots should capture point-in-time copies of OPEN files. (Manoj Govindassamy via Yongjun Zhang)\n",
      "commitDate": "21/04/17 8:35 PM",
      "commitName": "20e3ae260b40cd6ef657b2a629a02219d68f162f",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "24/10/16 3:14 PM",
      "commitNameOld": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 179.22,
      "commitsBetweenForRepo": 1090,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,31 @@\n   static String createSnapshot(\n       FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n       String snapshotName, boolean logRetryCache)\n       throws IOException {\n     FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n     final INodesInPath iip \u003d fsd.resolvePath(pc, snapshotRoot, DirOp.WRITE);\n     if (fsd.isPermissionEnabled()) {\n       fsd.checkOwner(pc, iip);\n     }\n \n     if (snapshotName \u003d\u003d null || snapshotName.isEmpty()) {\n       snapshotName \u003d Snapshot.generateDefaultSnapshotName();\n     } else if (!DFSUtil.isValidNameForComponent(snapshotName)) {\n       throw new InvalidPathException(\"Invalid snapshot name: \" + snapshotName);\n     }\n \n-    String snapshotPath \u003d null;\n+    String snapshotPath;\n     verifySnapshotName(fsd, snapshotName, snapshotRoot);\n     fsd.writeLock();\n     try {\n-      snapshotPath \u003d snapshotManager.createSnapshot(iip, snapshotRoot,\n-          snapshotName);\n+      snapshotPath \u003d snapshotManager.createSnapshot(\n+          fsd.getFSNamesystem().getLeaseManager(),\n+          iip, snapshotRoot, snapshotName);\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logCreateSnapshot(snapshotRoot, snapshotName,\n         logRetryCache);\n \n     return snapshotPath;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static String createSnapshot(\n      FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n      String snapshotName, boolean logRetryCache)\n      throws IOException {\n    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    final INodesInPath iip \u003d fsd.resolvePath(pc, snapshotRoot, DirOp.WRITE);\n    if (fsd.isPermissionEnabled()) {\n      fsd.checkOwner(pc, iip);\n    }\n\n    if (snapshotName \u003d\u003d null || snapshotName.isEmpty()) {\n      snapshotName \u003d Snapshot.generateDefaultSnapshotName();\n    } else if (!DFSUtil.isValidNameForComponent(snapshotName)) {\n      throw new InvalidPathException(\"Invalid snapshot name: \" + snapshotName);\n    }\n\n    String snapshotPath;\n    verifySnapshotName(fsd, snapshotName, snapshotRoot);\n    fsd.writeLock();\n    try {\n      snapshotPath \u003d snapshotManager.createSnapshot(\n          fsd.getFSNamesystem().getLeaseManager(),\n          iip, snapshotRoot, snapshotName);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logCreateSnapshot(snapshotRoot, snapshotName,\n        logRetryCache);\n\n    return snapshotPath;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSnapshotOp.java",
      "extendedDetails": {}
    },
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
      "commitDate": "24/10/16 3:14 PM",
      "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "04/10/16 1:05 PM",
      "commitNameOld": "44f48ee96ee6b2a3909911c37bfddb0c963d5ffc",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 20.09,
      "commitsBetweenForRepo": 141,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   static String createSnapshot(\n       FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n       String snapshotName, boolean logRetryCache)\n       throws IOException {\n-    final INodesInPath iip \u003d fsd.getINodesInPath4Write(snapshotRoot);\n+    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n+    final INodesInPath iip \u003d fsd.resolvePath(pc, snapshotRoot, DirOp.WRITE);\n     if (fsd.isPermissionEnabled()) {\n-      FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n       fsd.checkOwner(pc, iip);\n     }\n \n     if (snapshotName \u003d\u003d null || snapshotName.isEmpty()) {\n       snapshotName \u003d Snapshot.generateDefaultSnapshotName();\n     } else if (!DFSUtil.isValidNameForComponent(snapshotName)) {\n       throw new InvalidPathException(\"Invalid snapshot name: \" + snapshotName);\n     }\n \n     String snapshotPath \u003d null;\n     verifySnapshotName(fsd, snapshotName, snapshotRoot);\n     fsd.writeLock();\n     try {\n       snapshotPath \u003d snapshotManager.createSnapshot(iip, snapshotRoot,\n           snapshotName);\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logCreateSnapshot(snapshotRoot, snapshotName,\n         logRetryCache);\n \n     return snapshotPath;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static String createSnapshot(\n      FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n      String snapshotName, boolean logRetryCache)\n      throws IOException {\n    FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    final INodesInPath iip \u003d fsd.resolvePath(pc, snapshotRoot, DirOp.WRITE);\n    if (fsd.isPermissionEnabled()) {\n      fsd.checkOwner(pc, iip);\n    }\n\n    if (snapshotName \u003d\u003d null || snapshotName.isEmpty()) {\n      snapshotName \u003d Snapshot.generateDefaultSnapshotName();\n    } else if (!DFSUtil.isValidNameForComponent(snapshotName)) {\n      throw new InvalidPathException(\"Invalid snapshot name: \" + snapshotName);\n    }\n\n    String snapshotPath \u003d null;\n    verifySnapshotName(fsd, snapshotName, snapshotRoot);\n    fsd.writeLock();\n    try {\n      snapshotPath \u003d snapshotManager.createSnapshot(iip, snapshotRoot,\n          snapshotName);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logCreateSnapshot(snapshotRoot, snapshotName,\n        logRetryCache);\n\n    return snapshotPath;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSnapshotOp.java",
      "extendedDetails": {}
    },
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
      "commitDate": "05/12/14 2:17 PM",
      "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "04/12/14 2:09 PM",
      "commitNameOld": "26d8dec756da1d9bd3df3b41a4dd5d8ff03bc5b2",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 1.01,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,30 @@\n   static String createSnapshot(\n       FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n       String snapshotName, boolean logRetryCache)\n       throws IOException {\n-    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n-\n-    String snapshotPath \u003d null;\n+    final INodesInPath iip \u003d fsd.getINodesInPath4Write(snapshotRoot);\n     if (fsd.isPermissionEnabled()) {\n-      fsd.checkOwner(pc, snapshotRoot);\n+      FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n+      fsd.checkOwner(pc, iip);\n     }\n \n     if (snapshotName \u003d\u003d null || snapshotName.isEmpty()) {\n       snapshotName \u003d Snapshot.generateDefaultSnapshotName();\n+    } else if (!DFSUtil.isValidNameForComponent(snapshotName)) {\n+      throw new InvalidPathException(\"Invalid snapshot name: \" + snapshotName);\n     }\n \n-    if(snapshotName !\u003d null){\n-      if (!DFSUtil.isValidNameForComponent(snapshotName)) {\n-        throw new InvalidPathException(\"Invalid snapshot name: \" +\n-            snapshotName);\n-      }\n-    }\n+    String snapshotPath \u003d null;\n     verifySnapshotName(fsd, snapshotName, snapshotRoot);\n     fsd.writeLock();\n     try {\n-      snapshotPath \u003d snapshotManager.createSnapshot(snapshotRoot, snapshotName);\n+      snapshotPath \u003d snapshotManager.createSnapshot(iip, snapshotRoot,\n+          snapshotName);\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logCreateSnapshot(snapshotRoot, snapshotName,\n         logRetryCache);\n \n     return snapshotPath;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static String createSnapshot(\n      FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n      String snapshotName, boolean logRetryCache)\n      throws IOException {\n    final INodesInPath iip \u003d fsd.getINodesInPath4Write(snapshotRoot);\n    if (fsd.isPermissionEnabled()) {\n      FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n      fsd.checkOwner(pc, iip);\n    }\n\n    if (snapshotName \u003d\u003d null || snapshotName.isEmpty()) {\n      snapshotName \u003d Snapshot.generateDefaultSnapshotName();\n    } else if (!DFSUtil.isValidNameForComponent(snapshotName)) {\n      throw new InvalidPathException(\"Invalid snapshot name: \" + snapshotName);\n    }\n\n    String snapshotPath \u003d null;\n    verifySnapshotName(fsd, snapshotName, snapshotRoot);\n    fsd.writeLock();\n    try {\n      snapshotPath \u003d snapshotManager.createSnapshot(iip, snapshotRoot,\n          snapshotName);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logCreateSnapshot(snapshotRoot, snapshotName,\n        logRetryCache);\n\n    return snapshotPath;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSnapshotOp.java",
      "extendedDetails": {}
    },
    "26d8dec756da1d9bd3df3b41a4dd5d8ff03bc5b2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7468. Moving verify* functions to corresponding classes. Contributed by Li Lu.\n",
      "commitDate": "04/12/14 2:09 PM",
      "commitName": "26d8dec756da1d9bd3df3b41a4dd5d8ff03bc5b2",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "25/11/14 9:04 PM",
      "commitNameOld": "4a3161182905afaf450a60d02528161ed1f97471",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 8.71,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   static String createSnapshot(\n       FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n       String snapshotName, boolean logRetryCache)\n       throws IOException {\n     final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n \n     String snapshotPath \u003d null;\n     if (fsd.isPermissionEnabled()) {\n       fsd.checkOwner(pc, snapshotRoot);\n     }\n \n     if (snapshotName \u003d\u003d null || snapshotName.isEmpty()) {\n       snapshotName \u003d Snapshot.generateDefaultSnapshotName();\n     }\n \n     if(snapshotName !\u003d null){\n       if (!DFSUtil.isValidNameForComponent(snapshotName)) {\n         throw new InvalidPathException(\"Invalid snapshot name: \" +\n             snapshotName);\n       }\n     }\n-    fsd.verifySnapshotName(snapshotName, snapshotRoot);\n+    verifySnapshotName(fsd, snapshotName, snapshotRoot);\n     fsd.writeLock();\n     try {\n       snapshotPath \u003d snapshotManager.createSnapshot(snapshotRoot, snapshotName);\n     } finally {\n       fsd.writeUnlock();\n     }\n     fsd.getEditLog().logCreateSnapshot(snapshotRoot, snapshotName,\n         logRetryCache);\n \n     return snapshotPath;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static String createSnapshot(\n      FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n      String snapshotName, boolean logRetryCache)\n      throws IOException {\n    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n\n    String snapshotPath \u003d null;\n    if (fsd.isPermissionEnabled()) {\n      fsd.checkOwner(pc, snapshotRoot);\n    }\n\n    if (snapshotName \u003d\u003d null || snapshotName.isEmpty()) {\n      snapshotName \u003d Snapshot.generateDefaultSnapshotName();\n    }\n\n    if(snapshotName !\u003d null){\n      if (!DFSUtil.isValidNameForComponent(snapshotName)) {\n        throw new InvalidPathException(\"Invalid snapshot name: \" +\n            snapshotName);\n      }\n    }\n    verifySnapshotName(fsd, snapshotName, snapshotRoot);\n    fsd.writeLock();\n    try {\n      snapshotPath \u003d snapshotManager.createSnapshot(snapshotRoot, snapshotName);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logCreateSnapshot(snapshotRoot, snapshotName,\n        logRetryCache);\n\n    return snapshotPath;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSnapshotOp.java",
      "extendedDetails": {}
    },
    "4a3161182905afaf450a60d02528161ed1f97471": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7440. Consolidate snapshot related operations in a single class. Contributed by Haohui Mai.\n",
      "commitDate": "25/11/14 9:04 PM",
      "commitName": "4a3161182905afaf450a60d02528161ed1f97471",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,33 @@\n+  static String createSnapshot(\n+      FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n+      String snapshotName, boolean logRetryCache)\n+      throws IOException {\n+    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n+\n+    String snapshotPath \u003d null;\n+    if (fsd.isPermissionEnabled()) {\n+      fsd.checkOwner(pc, snapshotRoot);\n+    }\n+\n+    if (snapshotName \u003d\u003d null || snapshotName.isEmpty()) {\n+      snapshotName \u003d Snapshot.generateDefaultSnapshotName();\n+    }\n+\n+    if(snapshotName !\u003d null){\n+      if (!DFSUtil.isValidNameForComponent(snapshotName)) {\n+        throw new InvalidPathException(\"Invalid snapshot name: \" +\n+            snapshotName);\n+      }\n+    }\n+    fsd.verifySnapshotName(snapshotName, snapshotRoot);\n+    fsd.writeLock();\n+    try {\n+      snapshotPath \u003d snapshotManager.createSnapshot(snapshotRoot, snapshotName);\n+    } finally {\n+      fsd.writeUnlock();\n+    }\n+    fsd.getEditLog().logCreateSnapshot(snapshotRoot, snapshotName,\n+        logRetryCache);\n+\n+    return snapshotPath;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static String createSnapshot(\n      FSDirectory fsd, SnapshotManager snapshotManager, String snapshotRoot,\n      String snapshotName, boolean logRetryCache)\n      throws IOException {\n    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n\n    String snapshotPath \u003d null;\n    if (fsd.isPermissionEnabled()) {\n      fsd.checkOwner(pc, snapshotRoot);\n    }\n\n    if (snapshotName \u003d\u003d null || snapshotName.isEmpty()) {\n      snapshotName \u003d Snapshot.generateDefaultSnapshotName();\n    }\n\n    if(snapshotName !\u003d null){\n      if (!DFSUtil.isValidNameForComponent(snapshotName)) {\n        throw new InvalidPathException(\"Invalid snapshot name: \" +\n            snapshotName);\n      }\n    }\n    fsd.verifySnapshotName(snapshotName, snapshotRoot);\n    fsd.writeLock();\n    try {\n      snapshotPath \u003d snapshotManager.createSnapshot(snapshotRoot, snapshotName);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logCreateSnapshot(snapshotRoot, snapshotName,\n        logRetryCache);\n\n    return snapshotPath;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirSnapshotOp.java"
    }
  }
}