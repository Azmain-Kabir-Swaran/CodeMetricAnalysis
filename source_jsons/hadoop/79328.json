{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileUtil.java",
  "functionName": "unTarUsingTar",
  "functionId": "unTarUsingTar___inputStream-InputStream__untarDir-File__gzipped-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
  "functionStartLine": 872,
  "functionEndLine": 888,
  "numCommitsSeen": 52,
  "timeTaken": 1439,
  "changeHistory": [
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
    "7288b08330001102f944124d18e02bf0585d3e96"
  ],
  "changeHistoryShort": {
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": "Ybodychange",
    "7288b08330001102f944124d18e02bf0585d3e96": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16029. Consecutive StringBuilder.append can be reused. Contributed by Ayush Saxena.\n",
      "commitDate": "11/01/19 10:54 AM",
      "commitName": "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "27/12/18 10:38 PM",
      "commitNameOld": "57198bc51122a36db8cb4788fcb7b55edc788b3b",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 14.51,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private static void unTarUsingTar(InputStream inputStream, File untarDir,\n                                     boolean gzipped)\n       throws IOException, InterruptedException, ExecutionException {\n     StringBuilder untarCommand \u003d new StringBuilder();\n     if (gzipped) {\n       untarCommand.append(\"gzip -dc | (\");\n     }\n-    untarCommand.append(\"cd \u0027\");\n-    untarCommand.append(FileUtil.makeSecureShellPath(untarDir));\n-    untarCommand.append(\"\u0027 \u0026\u0026 \");\n-    untarCommand.append(\"tar -x \");\n+    untarCommand.append(\"cd \u0027\")\n+        .append(FileUtil.makeSecureShellPath(untarDir))\n+        .append(\"\u0027 \u0026\u0026 \")\n+        .append(\"tar -x \");\n \n     if (gzipped) {\n       untarCommand.append(\")\");\n     }\n     runCommandOnStream(inputStream, untarCommand.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void unTarUsingTar(InputStream inputStream, File untarDir,\n                                    boolean gzipped)\n      throws IOException, InterruptedException, ExecutionException {\n    StringBuilder untarCommand \u003d new StringBuilder();\n    if (gzipped) {\n      untarCommand.append(\"gzip -dc | (\");\n    }\n    untarCommand.append(\"cd \u0027\")\n        .append(FileUtil.makeSecureShellPath(untarDir))\n        .append(\"\u0027 \u0026\u0026 \")\n        .append(\"tar -x \");\n\n    if (gzipped) {\n      untarCommand.append(\")\");\n    }\n    runCommandOnStream(inputStream, untarCommand.toString());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {}
    },
    "7288b08330001102f944124d18e02bf0585d3e96": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2185. Use pipes when localizing archives. Contributed by Miklos Szegedi\n",
      "commitDate": "31/01/18 7:39 AM",
      "commitName": "7288b08330001102f944124d18e02bf0585d3e96",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,17 @@\n+  private static void unTarUsingTar(InputStream inputStream, File untarDir,\n+                                    boolean gzipped)\n+      throws IOException, InterruptedException, ExecutionException {\n+    StringBuilder untarCommand \u003d new StringBuilder();\n+    if (gzipped) {\n+      untarCommand.append(\"gzip -dc | (\");\n+    }\n+    untarCommand.append(\"cd \u0027\");\n+    untarCommand.append(FileUtil.makeSecureShellPath(untarDir));\n+    untarCommand.append(\"\u0027 \u0026\u0026 \");\n+    untarCommand.append(\"tar -x \");\n+\n+    if (gzipped) {\n+      untarCommand.append(\")\");\n+    }\n+    runCommandOnStream(inputStream, untarCommand.toString());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void unTarUsingTar(InputStream inputStream, File untarDir,\n                                    boolean gzipped)\n      throws IOException, InterruptedException, ExecutionException {\n    StringBuilder untarCommand \u003d new StringBuilder();\n    if (gzipped) {\n      untarCommand.append(\"gzip -dc | (\");\n    }\n    untarCommand.append(\"cd \u0027\");\n    untarCommand.append(FileUtil.makeSecureShellPath(untarDir));\n    untarCommand.append(\"\u0027 \u0026\u0026 \");\n    untarCommand.append(\"tar -x \");\n\n    if (gzipped) {\n      untarCommand.append(\")\");\n    }\n    runCommandOnStream(inputStream, untarCommand.toString());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java"
    }
  }
}