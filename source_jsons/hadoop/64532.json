{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AFileSystem.java",
  "functionName": "initThreadPools",
  "functionId": "initThreadPools___conf-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
  "functionStartLine": 511,
  "functionEndLine": 535,
  "numCommitsSeen": 141,
  "timeTaken": 3565,
  "changeHistory": [
    "5672efa5c7184970c8f9e430ff8c36121f3a836d",
    "e02eb24e0a9139418120027b694492e0738df20a",
    "a36274d69947648dbe82721220cc5240ec5d396d"
  ],
  "changeHistoryShort": {
    "5672efa5c7184970c8f9e430ff8c36121f3a836d": "Ybodychange",
    "e02eb24e0a9139418120027b694492e0738df20a": "Ybodychange",
    "a36274d69947648dbe82721220cc5240ec5d396d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5672efa5c7184970c8f9e430ff8c36121f3a836d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15729. [s3a] Allow core threads to time out. (#1075)\n\n\r\n",
      "commitDate": "16/07/19 5:14 PM",
      "commitName": "5672efa5c7184970c8f9e430ff8c36121f3a836d",
      "commitAuthor": "Sean Mackrory",
      "commitDateOld": "12/07/19 5:02 AM",
      "commitNameOld": "b15ef7dc3d91c6d50fa515158104fba29f43e6b0",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 4.51,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   private void initThreadPools(Configuration conf) {\n     int maxThreads \u003d conf.getInt(MAX_THREADS, DEFAULT_MAX_THREADS);\n     if (maxThreads \u003c 2) {\n       LOG.warn(MAX_THREADS + \" must be at least 2: forcing to 2.\");\n       maxThreads \u003d 2;\n     }\n     int totalTasks \u003d intOption(conf,\n         MAX_TOTAL_TASKS, DEFAULT_MAX_TOTAL_TASKS, 1);\n     long keepAliveTime \u003d longOption(conf, KEEPALIVE_TIME,\n         DEFAULT_KEEPALIVE_TIME, 0);\n     boundedThreadPool \u003d BlockingThreadPoolExecutorService.newInstance(\n         maxThreads,\n         maxThreads + totalTasks,\n         keepAliveTime, TimeUnit.SECONDS,\n         \"s3a-transfer-shared\");\n     unboundedThreadPool \u003d new ThreadPoolExecutor(\n         maxThreads, Integer.MAX_VALUE,\n         keepAliveTime, TimeUnit.SECONDS,\n         new LinkedBlockingQueue\u003c\u003e(),\n         BlockingThreadPoolExecutorService.newDaemonThreadFactory(\n             \"s3a-transfer-unbounded\"));\n+    unboundedThreadPool.allowCoreThreadTimeOut(true);\n     executorCapacity \u003d intOption(conf,\n         EXECUTOR_CAPACITY, DEFAULT_EXECUTOR_CAPACITY, 1);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initThreadPools(Configuration conf) {\n    int maxThreads \u003d conf.getInt(MAX_THREADS, DEFAULT_MAX_THREADS);\n    if (maxThreads \u003c 2) {\n      LOG.warn(MAX_THREADS + \" must be at least 2: forcing to 2.\");\n      maxThreads \u003d 2;\n    }\n    int totalTasks \u003d intOption(conf,\n        MAX_TOTAL_TASKS, DEFAULT_MAX_TOTAL_TASKS, 1);\n    long keepAliveTime \u003d longOption(conf, KEEPALIVE_TIME,\n        DEFAULT_KEEPALIVE_TIME, 0);\n    boundedThreadPool \u003d BlockingThreadPoolExecutorService.newInstance(\n        maxThreads,\n        maxThreads + totalTasks,\n        keepAliveTime, TimeUnit.SECONDS,\n        \"s3a-transfer-shared\");\n    unboundedThreadPool \u003d new ThreadPoolExecutor(\n        maxThreads, Integer.MAX_VALUE,\n        keepAliveTime, TimeUnit.SECONDS,\n        new LinkedBlockingQueue\u003c\u003e(),\n        BlockingThreadPoolExecutorService.newDaemonThreadFactory(\n            \"s3a-transfer-unbounded\"));\n    unboundedThreadPool.allowCoreThreadTimeOut(true);\n    executorCapacity \u003d intOption(conf,\n        EXECUTOR_CAPACITY, DEFAULT_EXECUTOR_CAPACITY, 1);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "e02eb24e0a9139418120027b694492e0738df20a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15183. S3Guard store becomes inconsistent after partial failure of rename.\n\nContributed by Steve Loughran.\n\nChange-Id: I825b0bc36be960475d2d259b1cdab45ae1bb78eb\n",
      "commitDate": "20/06/19 1:56 AM",
      "commitName": "e02eb24e0a9139418120027b694492e0738df20a",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "16/06/19 9:05 AM",
      "commitNameOld": "f9cc9e162175444efe9d5b07ecb9a795f750ca3c",
      "commitAuthorOld": "Gabor Bota",
      "daysBetweenCommits": 3.7,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,24 @@\n   private void initThreadPools(Configuration conf) {\n     int maxThreads \u003d conf.getInt(MAX_THREADS, DEFAULT_MAX_THREADS);\n     if (maxThreads \u003c 2) {\n       LOG.warn(MAX_THREADS + \" must be at least 2: forcing to 2.\");\n       maxThreads \u003d 2;\n     }\n     int totalTasks \u003d intOption(conf,\n         MAX_TOTAL_TASKS, DEFAULT_MAX_TOTAL_TASKS, 1);\n     long keepAliveTime \u003d longOption(conf, KEEPALIVE_TIME,\n         DEFAULT_KEEPALIVE_TIME, 0);\n     boundedThreadPool \u003d BlockingThreadPoolExecutorService.newInstance(\n         maxThreads,\n         maxThreads + totalTasks,\n         keepAliveTime, TimeUnit.SECONDS,\n         \"s3a-transfer-shared\");\n     unboundedThreadPool \u003d new ThreadPoolExecutor(\n         maxThreads, Integer.MAX_VALUE,\n         keepAliveTime, TimeUnit.SECONDS,\n-        new LinkedBlockingQueue\u003cRunnable\u003e(),\n+        new LinkedBlockingQueue\u003c\u003e(),\n         BlockingThreadPoolExecutorService.newDaemonThreadFactory(\n             \"s3a-transfer-unbounded\"));\n+    executorCapacity \u003d intOption(conf,\n+        EXECUTOR_CAPACITY, DEFAULT_EXECUTOR_CAPACITY, 1);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initThreadPools(Configuration conf) {\n    int maxThreads \u003d conf.getInt(MAX_THREADS, DEFAULT_MAX_THREADS);\n    if (maxThreads \u003c 2) {\n      LOG.warn(MAX_THREADS + \" must be at least 2: forcing to 2.\");\n      maxThreads \u003d 2;\n    }\n    int totalTasks \u003d intOption(conf,\n        MAX_TOTAL_TASKS, DEFAULT_MAX_TOTAL_TASKS, 1);\n    long keepAliveTime \u003d longOption(conf, KEEPALIVE_TIME,\n        DEFAULT_KEEPALIVE_TIME, 0);\n    boundedThreadPool \u003d BlockingThreadPoolExecutorService.newInstance(\n        maxThreads,\n        maxThreads + totalTasks,\n        keepAliveTime, TimeUnit.SECONDS,\n        \"s3a-transfer-shared\");\n    unboundedThreadPool \u003d new ThreadPoolExecutor(\n        maxThreads, Integer.MAX_VALUE,\n        keepAliveTime, TimeUnit.SECONDS,\n        new LinkedBlockingQueue\u003c\u003e(),\n        BlockingThreadPoolExecutorService.newDaemonThreadFactory(\n            \"s3a-transfer-unbounded\"));\n    executorCapacity \u003d intOption(conf,\n        EXECUTOR_CAPACITY, DEFAULT_EXECUTOR_CAPACITY, 1);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "a36274d69947648dbe82721220cc5240ec5d396d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16085. S3Guard: use object version or etags to protect against inconsistent read after replace/overwrite.\n\nContributed by Ben Roling.\n\nS3Guard will now track the etag of uploaded files and, if an S3\nbucket is versioned, the object version.\n\nYou can then control how to react to a mismatch between the data\nin the DynamoDB table and that in the store: warn, fail, or, when\nusing versions, return the original value.\n\nThis adds two new columns to the table: etag and version.\nThis is transparent to older S3A clients -but when such clients\nadd/update data to the S3Guard table, they will not add these values.\nAs a result, the etag/version checks will not work with files uploaded by older clients.\n\nFor a consistent experience, upgrade all clients to use the latest hadoop version.\n",
      "commitDate": "19/05/19 2:29 PM",
      "commitName": "a36274d69947648dbe82721220cc5240ec5d396d",
      "commitAuthor": "Ben Roling",
      "diff": "@@ -0,0 +1,22 @@\n+  private void initThreadPools(Configuration conf) {\n+    int maxThreads \u003d conf.getInt(MAX_THREADS, DEFAULT_MAX_THREADS);\n+    if (maxThreads \u003c 2) {\n+      LOG.warn(MAX_THREADS + \" must be at least 2: forcing to 2.\");\n+      maxThreads \u003d 2;\n+    }\n+    int totalTasks \u003d intOption(conf,\n+        MAX_TOTAL_TASKS, DEFAULT_MAX_TOTAL_TASKS, 1);\n+    long keepAliveTime \u003d longOption(conf, KEEPALIVE_TIME,\n+        DEFAULT_KEEPALIVE_TIME, 0);\n+    boundedThreadPool \u003d BlockingThreadPoolExecutorService.newInstance(\n+        maxThreads,\n+        maxThreads + totalTasks,\n+        keepAliveTime, TimeUnit.SECONDS,\n+        \"s3a-transfer-shared\");\n+    unboundedThreadPool \u003d new ThreadPoolExecutor(\n+        maxThreads, Integer.MAX_VALUE,\n+        keepAliveTime, TimeUnit.SECONDS,\n+        new LinkedBlockingQueue\u003cRunnable\u003e(),\n+        BlockingThreadPoolExecutorService.newDaemonThreadFactory(\n+            \"s3a-transfer-unbounded\"));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initThreadPools(Configuration conf) {\n    int maxThreads \u003d conf.getInt(MAX_THREADS, DEFAULT_MAX_THREADS);\n    if (maxThreads \u003c 2) {\n      LOG.warn(MAX_THREADS + \" must be at least 2: forcing to 2.\");\n      maxThreads \u003d 2;\n    }\n    int totalTasks \u003d intOption(conf,\n        MAX_TOTAL_TASKS, DEFAULT_MAX_TOTAL_TASKS, 1);\n    long keepAliveTime \u003d longOption(conf, KEEPALIVE_TIME,\n        DEFAULT_KEEPALIVE_TIME, 0);\n    boundedThreadPool \u003d BlockingThreadPoolExecutorService.newInstance(\n        maxThreads,\n        maxThreads + totalTasks,\n        keepAliveTime, TimeUnit.SECONDS,\n        \"s3a-transfer-shared\");\n    unboundedThreadPool \u003d new ThreadPoolExecutor(\n        maxThreads, Integer.MAX_VALUE,\n        keepAliveTime, TimeUnit.SECONDS,\n        new LinkedBlockingQueue\u003cRunnable\u003e(),\n        BlockingThreadPoolExecutorService.newDaemonThreadFactory(\n            \"s3a-transfer-unbounded\"));\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java"
    }
  }
}