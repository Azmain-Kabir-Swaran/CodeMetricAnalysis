{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CachedDNSToSwitchMapping.java",
  "functionName": "resolve",
  "functionId": "resolve___names-List__String__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/CachedDNSToSwitchMapping.java",
  "functionStartLine": 107,
  "functionEndLine": 125,
  "numCommitsSeen": 12,
  "timeTaken": 792,
  "changeHistory": [
    "a3c0a0e799688b790bacf55b5d8f7b6b70e9cc5f",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "31f1a674e59207fe11065e8026fa310bdcc9c924",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "a3c0a0e799688b790bacf55b5d8f7b6b70e9cc5f": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "31f1a674e59207fe11065e8026fa310bdcc9c924": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a3c0a0e799688b790bacf55b5d8f7b6b70e9cc5f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7772\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1189847 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 9:29 AM",
      "commitName": "a3c0a0e799688b790bacf55b5d8f7b6b70e9cc5f",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 63.68,
      "commitsBetweenForRepo": 454,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,19 @@\n   public List\u003cString\u003e resolve(List\u003cString\u003e names) {\n     // normalize all input names to be in the form of IP addresses\n     names \u003d NetUtils.normalizeHostNames(names);\n \n     List \u003cString\u003e result \u003d new ArrayList\u003cString\u003e(names.size());\n     if (names.isEmpty()) {\n       return result;\n     }\n \n-    List\u003cString\u003e uncachedHosts \u003d this.getUncachedHosts(names);\n+    List\u003cString\u003e uncachedHosts \u003d getUncachedHosts(names);\n \n     // Resolve the uncached hosts\n     List\u003cString\u003e resolvedHosts \u003d rawMapping.resolve(uncachedHosts);\n-    this.cacheResolvedHosts(uncachedHosts, resolvedHosts);\n-    return this.getCachedHosts(names);\n+    //cache them\n+    cacheResolvedHosts(uncachedHosts, resolvedHosts);\n+    //now look up the entire list in the cache\n+    return getCachedHosts(names);\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cString\u003e resolve(List\u003cString\u003e names) {\n    // normalize all input names to be in the form of IP addresses\n    names \u003d NetUtils.normalizeHostNames(names);\n\n    List \u003cString\u003e result \u003d new ArrayList\u003cString\u003e(names.size());\n    if (names.isEmpty()) {\n      return result;\n    }\n\n    List\u003cString\u003e uncachedHosts \u003d getUncachedHosts(names);\n\n    // Resolve the uncached hosts\n    List\u003cString\u003e resolvedHosts \u003d rawMapping.resolve(uncachedHosts);\n    //cache them\n    cacheResolvedHosts(uncachedHosts, resolvedHosts);\n    //now look up the entire list in the cache\n    return getCachedHosts(names);\n\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/CachedDNSToSwitchMapping.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public List\u003cString\u003e resolve(List\u003cString\u003e names) {\n    // normalize all input names to be in the form of IP addresses\n    names \u003d NetUtils.normalizeHostNames(names);\n\n    List \u003cString\u003e result \u003d new ArrayList\u003cString\u003e(names.size());\n    if (names.isEmpty()) {\n      return result;\n    }\n\n    List\u003cString\u003e uncachedHosts \u003d this.getUncachedHosts(names);\n\n    // Resolve the uncached hosts\n    List\u003cString\u003e resolvedHosts \u003d rawMapping.resolve(uncachedHosts);\n    this.cacheResolvedHosts(uncachedHosts, resolvedHosts);\n    return this.getCachedHosts(names);\n\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/CachedDNSToSwitchMapping.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/net/CachedDNSToSwitchMapping.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/CachedDNSToSwitchMapping.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public List\u003cString\u003e resolve(List\u003cString\u003e names) {\n    // normalize all input names to be in the form of IP addresses\n    names \u003d NetUtils.normalizeHostNames(names);\n\n    List \u003cString\u003e result \u003d new ArrayList\u003cString\u003e(names.size());\n    if (names.isEmpty()) {\n      return result;\n    }\n\n    List\u003cString\u003e uncachedHosts \u003d this.getUncachedHosts(names);\n\n    // Resolve the uncached hosts\n    List\u003cString\u003e resolvedHosts \u003d rawMapping.resolve(uncachedHosts);\n    this.cacheResolvedHosts(uncachedHosts, resolvedHosts);\n    return this.getCachedHosts(names);\n\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/net/CachedDNSToSwitchMapping.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/net/CachedDNSToSwitchMapping.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/net/CachedDNSToSwitchMapping.java"
      }
    },
    "31f1a674e59207fe11065e8026fa310bdcc9c924": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7314. Add support for throwing UnknownHostException when a host doesn\u0027t resolve. Contributed by Jeffrey Naisbitt.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1147317 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/07/11 1:58 PM",
      "commitName": "31f1a674e59207fe11065e8026fa310bdcc9c924",
      "commitAuthor": "Jitendra Nath Pandey",
      "commitDateOld": "12/06/11 3:00 PM",
      "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 32.96,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,17 @@\n   public List\u003cString\u003e resolve(List\u003cString\u003e names) {\n     // normalize all input names to be in the form of IP addresses\n     names \u003d NetUtils.normalizeHostNames(names);\n-    \n+\n     List \u003cString\u003e result \u003d new ArrayList\u003cString\u003e(names.size());\n     if (names.isEmpty()) {\n       return result;\n     }\n \n+    List\u003cString\u003e uncachedHosts \u003d this.getUncachedHosts(names);\n \n-    // find out all names without cached resolved location\n-    List\u003cString\u003e unCachedHosts \u003d new ArrayList\u003cString\u003e(names.size());\n-    for (String name : names) {\n-      if (cache.get(name) \u003d\u003d null) {\n-        unCachedHosts.add(name);\n-      } \n-    }\n-    \n-    // Resolve those names\n-    List\u003cString\u003e rNames \u003d rawMapping.resolve(unCachedHosts);\n-    \n-    // Cache the result\n-    if (rNames !\u003d null) {\n-      for (int i\u003d0; i\u003cunCachedHosts.size(); i++) {\n-        cache.put(unCachedHosts.get(i), rNames.get(i));\n-      }\n-    }\n-    \n-    // Construct the result\n-    for (String name : names) {\n-      //now everything is in the cache\n-      String networkLocation \u003d cache.get(name);\n-      if (networkLocation !\u003d null) {\n-        result.add(networkLocation);\n-      } else { //resolve all or nothing\n-        return null;\n-      }\n-    }\n-    return result;\n+    // Resolve the uncached hosts\n+    List\u003cString\u003e resolvedHosts \u003d rawMapping.resolve(uncachedHosts);\n+    this.cacheResolvedHosts(uncachedHosts, resolvedHosts);\n+    return this.getCachedHosts(names);\n+\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cString\u003e resolve(List\u003cString\u003e names) {\n    // normalize all input names to be in the form of IP addresses\n    names \u003d NetUtils.normalizeHostNames(names);\n\n    List \u003cString\u003e result \u003d new ArrayList\u003cString\u003e(names.size());\n    if (names.isEmpty()) {\n      return result;\n    }\n\n    List\u003cString\u003e uncachedHosts \u003d this.getUncachedHosts(names);\n\n    // Resolve the uncached hosts\n    List\u003cString\u003e resolvedHosts \u003d rawMapping.resolve(uncachedHosts);\n    this.cacheResolvedHosts(uncachedHosts, resolvedHosts);\n    return this.getCachedHosts(names);\n\n  }",
      "path": "common/src/java/org/apache/hadoop/net/CachedDNSToSwitchMapping.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public List\u003cString\u003e resolve(List\u003cString\u003e names) {\n    // normalize all input names to be in the form of IP addresses\n    names \u003d NetUtils.normalizeHostNames(names);\n    \n    List \u003cString\u003e result \u003d new ArrayList\u003cString\u003e(names.size());\n    if (names.isEmpty()) {\n      return result;\n    }\n\n\n    // find out all names without cached resolved location\n    List\u003cString\u003e unCachedHosts \u003d new ArrayList\u003cString\u003e(names.size());\n    for (String name : names) {\n      if (cache.get(name) \u003d\u003d null) {\n        unCachedHosts.add(name);\n      } \n    }\n    \n    // Resolve those names\n    List\u003cString\u003e rNames \u003d rawMapping.resolve(unCachedHosts);\n    \n    // Cache the result\n    if (rNames !\u003d null) {\n      for (int i\u003d0; i\u003cunCachedHosts.size(); i++) {\n        cache.put(unCachedHosts.get(i), rNames.get(i));\n      }\n    }\n    \n    // Construct the result\n    for (String name : names) {\n      //now everything is in the cache\n      String networkLocation \u003d cache.get(name);\n      if (networkLocation !\u003d null) {\n        result.add(networkLocation);\n      } else { //resolve all or nothing\n        return null;\n      }\n    }\n    return result;\n  }",
      "path": "common/src/java/org/apache/hadoop/net/CachedDNSToSwitchMapping.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/net/CachedDNSToSwitchMapping.java",
        "newPath": "common/src/java/org/apache/hadoop/net/CachedDNSToSwitchMapping.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,40 @@\n+  public List\u003cString\u003e resolve(List\u003cString\u003e names) {\n+    // normalize all input names to be in the form of IP addresses\n+    names \u003d NetUtils.normalizeHostNames(names);\n+    \n+    List \u003cString\u003e result \u003d new ArrayList\u003cString\u003e(names.size());\n+    if (names.isEmpty()) {\n+      return result;\n+    }\n+\n+\n+    // find out all names without cached resolved location\n+    List\u003cString\u003e unCachedHosts \u003d new ArrayList\u003cString\u003e(names.size());\n+    for (String name : names) {\n+      if (cache.get(name) \u003d\u003d null) {\n+        unCachedHosts.add(name);\n+      } \n+    }\n+    \n+    // Resolve those names\n+    List\u003cString\u003e rNames \u003d rawMapping.resolve(unCachedHosts);\n+    \n+    // Cache the result\n+    if (rNames !\u003d null) {\n+      for (int i\u003d0; i\u003cunCachedHosts.size(); i++) {\n+        cache.put(unCachedHosts.get(i), rNames.get(i));\n+      }\n+    }\n+    \n+    // Construct the result\n+    for (String name : names) {\n+      //now everything is in the cache\n+      String networkLocation \u003d cache.get(name);\n+      if (networkLocation !\u003d null) {\n+        result.add(networkLocation);\n+      } else { //resolve all or nothing\n+        return null;\n+      }\n+    }\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cString\u003e resolve(List\u003cString\u003e names) {\n    // normalize all input names to be in the form of IP addresses\n    names \u003d NetUtils.normalizeHostNames(names);\n    \n    List \u003cString\u003e result \u003d new ArrayList\u003cString\u003e(names.size());\n    if (names.isEmpty()) {\n      return result;\n    }\n\n\n    // find out all names without cached resolved location\n    List\u003cString\u003e unCachedHosts \u003d new ArrayList\u003cString\u003e(names.size());\n    for (String name : names) {\n      if (cache.get(name) \u003d\u003d null) {\n        unCachedHosts.add(name);\n      } \n    }\n    \n    // Resolve those names\n    List\u003cString\u003e rNames \u003d rawMapping.resolve(unCachedHosts);\n    \n    // Cache the result\n    if (rNames !\u003d null) {\n      for (int i\u003d0; i\u003cunCachedHosts.size(); i++) {\n        cache.put(unCachedHosts.get(i), rNames.get(i));\n      }\n    }\n    \n    // Construct the result\n    for (String name : names) {\n      //now everything is in the cache\n      String networkLocation \u003d cache.get(name);\n      if (networkLocation !\u003d null) {\n        result.add(networkLocation);\n      } else { //resolve all or nothing\n        return null;\n      }\n    }\n    return result;\n  }",
      "path": "src/java/org/apache/hadoop/net/CachedDNSToSwitchMapping.java"
    }
  }
}