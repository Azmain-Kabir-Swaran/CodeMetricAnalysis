{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RemoteSASKeyGeneratorImpl.java",
  "functionName": "makeRemoteRequest",
  "functionId": "makeRemoteRequest___urls-String[]__path-String__queryParams-List__NameValuePair__",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteSASKeyGeneratorImpl.java",
  "functionStartLine": 256,
  "functionEndLine": 281,
  "numCommitsSeen": 21,
  "timeTaken": 4473,
  "changeHistory": [
    "38996fdcf0987d1da00ce46f8284d8fcdce57329",
    "b08cc973964b4eb7e7a7445a440b19d3a0f3d4d5",
    "8e15e240597f821968e14893eabfea39815de207",
    "52d7d5aa1a303cf70519a61487641211f4267c6f",
    "6b7cd62b8cf12616b13142f2eb2cfc2f25796f0f",
    "e92a77099b91620cee84513cc879089907468075"
  ],
  "changeHistoryShort": {
    "38996fdcf0987d1da00ce46f8284d8fcdce57329": "Ymultichange(Yparameterchange,Ybodychange)",
    "b08cc973964b4eb7e7a7445a440b19d3a0f3d4d5": "Ybodychange",
    "8e15e240597f821968e14893eabfea39815de207": "Ymultichange(Yparameterchange,Ybodychange)",
    "52d7d5aa1a303cf70519a61487641211f4267c6f": "Ymultichange(Yparameterchange,Ybodychange)",
    "6b7cd62b8cf12616b13142f2eb2cfc2f25796f0f": "Ymultichange(Yparameterchange,Ybodychange)",
    "e92a77099b91620cee84513cc879089907468075": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38996fdcf0987d1da00ce46f8284d8fcdce57329": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-14443. Azure: Support retry and client side failover for authorization, SASKey and delegation token generation. Contributed by Santhosh G Nayak\n",
      "commitDate": "30/06/17 4:53 PM",
      "commitName": "38996fdcf0987d1da00ce46f8284d8fcdce57329",
      "commitAuthor": "Mingliang Liu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-14443. Azure: Support retry and client side failover for authorization, SASKey and delegation token generation. Contributed by Santhosh G Nayak\n",
          "commitDate": "30/06/17 4:53 PM",
          "commitName": "38996fdcf0987d1da00ce46f8284d8fcdce57329",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "29/06/17 9:22 AM",
          "commitNameOld": "b08cc973964b4eb7e7a7445a440b19d3a0f3d4d5",
          "commitAuthorOld": "Mingliang Liu",
          "daysBetweenCommits": 1.31,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri,\n-      String token) throws SASKeyGenerationException {\n+  private RemoteSASKeyGenerationResponse makeRemoteRequest(String[] urls,\n+      String path, List\u003cNameValuePair\u003e queryParams)\n+      throws SASKeyGenerationException {\n \n     try {\n-      HttpGet httpGet \u003d new HttpGet(uri);\n-      if (token !\u003d null) {\n-        httpGet.setHeader(\"Cookie\", AuthenticatedURL.AUTH_COOKIE + \"\u003d\" + token);\n-      }\n-      String responseBody \u003d remoteCallHelper.makeRemoteGetRequest(httpGet);\n+      String responseBody \u003d remoteCallHelper\n+          .makeRemoteRequest(urls, path, queryParams, HttpGet.METHOD_NAME);\n       return RESPONSE_READER.readValue(responseBody);\n+\n     } catch (WasbRemoteCallException remoteCallEx) {\n       throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n           + \" while retrieving SAS key from remote service\", remoteCallEx);\n     } catch (JsonParseException jsonParserEx) {\n       throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n           + \"while parsing the response from remote\"\n-          + \" service into RemoteSASKeyGenerationResponse object\", jsonParserEx);\n+          + \" service into RemoteSASKeyGenerationResponse object\",\n+          jsonParserEx);\n     } catch (JsonMappingException jsonMappingEx) {\n       throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n           + \" while mapping the response from remote service into \"\n           + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n     } catch (IOException ioEx) {\n       throw new SASKeyGenerationException(\"Encountered IOException while \"\n           + \"accessing remote service to retrieve SAS Key\", ioEx);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private RemoteSASKeyGenerationResponse makeRemoteRequest(String[] urls,\n      String path, List\u003cNameValuePair\u003e queryParams)\n      throws SASKeyGenerationException {\n\n    try {\n      String responseBody \u003d remoteCallHelper\n          .makeRemoteRequest(urls, path, queryParams, HttpGet.METHOD_NAME);\n      return RESPONSE_READER.readValue(responseBody);\n\n    } catch (WasbRemoteCallException remoteCallEx) {\n      throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n          + \" while retrieving SAS key from remote service\", remoteCallEx);\n    } catch (JsonParseException jsonParserEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n          + \"while parsing the response from remote\"\n          + \" service into RemoteSASKeyGenerationResponse object\",\n          jsonParserEx);\n    } catch (JsonMappingException jsonMappingEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n          + \" while mapping the response from remote service into \"\n          + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n    } catch (IOException ioEx) {\n      throw new SASKeyGenerationException(\"Encountered IOException while \"\n          + \"accessing remote service to retrieve SAS Key\", ioEx);\n    }\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteSASKeyGeneratorImpl.java",
          "extendedDetails": {
            "oldValue": "[uri-URI, token-String]",
            "newValue": "[urls-String[], path-String, queryParams-List\u003cNameValuePair\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14443. Azure: Support retry and client side failover for authorization, SASKey and delegation token generation. Contributed by Santhosh G Nayak\n",
          "commitDate": "30/06/17 4:53 PM",
          "commitName": "38996fdcf0987d1da00ce46f8284d8fcdce57329",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "29/06/17 9:22 AM",
          "commitNameOld": "b08cc973964b4eb7e7a7445a440b19d3a0f3d4d5",
          "commitAuthorOld": "Mingliang Liu",
          "daysBetweenCommits": 1.31,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri,\n-      String token) throws SASKeyGenerationException {\n+  private RemoteSASKeyGenerationResponse makeRemoteRequest(String[] urls,\n+      String path, List\u003cNameValuePair\u003e queryParams)\n+      throws SASKeyGenerationException {\n \n     try {\n-      HttpGet httpGet \u003d new HttpGet(uri);\n-      if (token !\u003d null) {\n-        httpGet.setHeader(\"Cookie\", AuthenticatedURL.AUTH_COOKIE + \"\u003d\" + token);\n-      }\n-      String responseBody \u003d remoteCallHelper.makeRemoteGetRequest(httpGet);\n+      String responseBody \u003d remoteCallHelper\n+          .makeRemoteRequest(urls, path, queryParams, HttpGet.METHOD_NAME);\n       return RESPONSE_READER.readValue(responseBody);\n+\n     } catch (WasbRemoteCallException remoteCallEx) {\n       throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n           + \" while retrieving SAS key from remote service\", remoteCallEx);\n     } catch (JsonParseException jsonParserEx) {\n       throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n           + \"while parsing the response from remote\"\n-          + \" service into RemoteSASKeyGenerationResponse object\", jsonParserEx);\n+          + \" service into RemoteSASKeyGenerationResponse object\",\n+          jsonParserEx);\n     } catch (JsonMappingException jsonMappingEx) {\n       throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n           + \" while mapping the response from remote service into \"\n           + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n     } catch (IOException ioEx) {\n       throw new SASKeyGenerationException(\"Encountered IOException while \"\n           + \"accessing remote service to retrieve SAS Key\", ioEx);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private RemoteSASKeyGenerationResponse makeRemoteRequest(String[] urls,\n      String path, List\u003cNameValuePair\u003e queryParams)\n      throws SASKeyGenerationException {\n\n    try {\n      String responseBody \u003d remoteCallHelper\n          .makeRemoteRequest(urls, path, queryParams, HttpGet.METHOD_NAME);\n      return RESPONSE_READER.readValue(responseBody);\n\n    } catch (WasbRemoteCallException remoteCallEx) {\n      throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n          + \" while retrieving SAS key from remote service\", remoteCallEx);\n    } catch (JsonParseException jsonParserEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n          + \"while parsing the response from remote\"\n          + \" service into RemoteSASKeyGenerationResponse object\",\n          jsonParserEx);\n    } catch (JsonMappingException jsonMappingEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n          + \" while mapping the response from remote service into \"\n          + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n    } catch (IOException ioEx) {\n      throw new SASKeyGenerationException(\"Encountered IOException while \"\n          + \"accessing remote service to retrieve SAS Key\", ioEx);\n    }\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteSASKeyGeneratorImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "b08cc973964b4eb7e7a7445a440b19d3a0f3d4d5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14601. Azure: Reuse ObjectMapper. Contributed by Mingliang Liu\n",
      "commitDate": "29/06/17 9:22 AM",
      "commitName": "b08cc973964b4eb7e7a7445a440b19d3a0f3d4d5",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "26/04/17 1:47 PM",
      "commitNameOld": "8b5f2c372e70999f3ee0a0bd685a494e06bc3652",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 63.82,
      "commitsBetweenForRepo": 335,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,26 @@\n   private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri,\n       String token) throws SASKeyGenerationException {\n \n     try {\n       HttpGet httpGet \u003d new HttpGet(uri);\n       if (token !\u003d null) {\n         httpGet.setHeader(\"Cookie\", AuthenticatedURL.AUTH_COOKIE + \"\u003d\" + token);\n       }\n       String responseBody \u003d remoteCallHelper.makeRemoteGetRequest(httpGet);\n-\n-      ObjectMapper objectMapper \u003d new ObjectMapper();\n-      return objectMapper.readValue(responseBody,\n-          RemoteSASKeyGenerationResponse.class);\n-\n+      return RESPONSE_READER.readValue(responseBody);\n     } catch (WasbRemoteCallException remoteCallEx) {\n       throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n           + \" while retrieving SAS key from remote service\", remoteCallEx);\n     } catch (JsonParseException jsonParserEx) {\n       throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n           + \"while parsing the response from remote\"\n           + \" service into RemoteSASKeyGenerationResponse object\", jsonParserEx);\n     } catch (JsonMappingException jsonMappingEx) {\n       throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n           + \" while mapping the response from remote service into \"\n           + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n     } catch (IOException ioEx) {\n       throw new SASKeyGenerationException(\"Encountered IOException while \"\n           + \"accessing remote service to retrieve SAS Key\", ioEx);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri,\n      String token) throws SASKeyGenerationException {\n\n    try {\n      HttpGet httpGet \u003d new HttpGet(uri);\n      if (token !\u003d null) {\n        httpGet.setHeader(\"Cookie\", AuthenticatedURL.AUTH_COOKIE + \"\u003d\" + token);\n      }\n      String responseBody \u003d remoteCallHelper.makeRemoteGetRequest(httpGet);\n      return RESPONSE_READER.readValue(responseBody);\n    } catch (WasbRemoteCallException remoteCallEx) {\n      throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n          + \" while retrieving SAS key from remote service\", remoteCallEx);\n    } catch (JsonParseException jsonParserEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n          + \"while parsing the response from remote\"\n          + \" service into RemoteSASKeyGenerationResponse object\", jsonParserEx);\n    } catch (JsonMappingException jsonMappingEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n          + \" while mapping the response from remote service into \"\n          + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n    } catch (IOException ioEx) {\n      throw new SASKeyGenerationException(\"Encountered IOException while \"\n          + \"accessing remote service to retrieve SAS Key\", ioEx);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteSASKeyGeneratorImpl.java",
      "extendedDetails": {}
    },
    "8e15e240597f821968e14893eabfea39815de207": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-13945. Azure: Add Kerberos and Delegation token support to WASB client. Contributed by Santhosh G Nayak\n\nChange-Id: I39fb0a3b0491bf2160571366939a0502a0045429\n",
      "commitDate": "20/03/17 4:31 PM",
      "commitName": "8e15e240597f821968e14893eabfea39815de207",
      "commitAuthor": "Mingliang Liu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-13945. Azure: Add Kerberos and Delegation token support to WASB client. Contributed by Santhosh G Nayak\n\nChange-Id: I39fb0a3b0491bf2160571366939a0502a0045429\n",
          "commitDate": "20/03/17 4:31 PM",
          "commitName": "8e15e240597f821968e14893eabfea39815de207",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "06/03/17 5:10 PM",
          "commitNameOld": "52d7d5aa1a303cf70519a61487641211f4267c6f",
          "commitAuthorOld": "Mingliang Liu",
          "daysBetweenCommits": 13.93,
          "commitsBetweenForRepo": 80,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,30 @@\n-  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri)\n-      throws SASKeyGenerationException {\n+  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri,\n+      String token) throws SASKeyGenerationException {\n \n     try {\n-      String responseBody \u003d\n-          remoteCallHelper.makeRemoteGetRequest(new HttpGet(uri));\n+      HttpGet httpGet \u003d new HttpGet(uri);\n+      if (token !\u003d null) {\n+        httpGet.setHeader(\"Cookie\", AuthenticatedURL.AUTH_COOKIE + \"\u003d\" + token);\n+      }\n+      String responseBody \u003d remoteCallHelper.makeRemoteGetRequest(httpGet);\n \n       ObjectMapper objectMapper \u003d new ObjectMapper();\n       return objectMapper.readValue(responseBody,\n           RemoteSASKeyGenerationResponse.class);\n \n     } catch (WasbRemoteCallException remoteCallEx) {\n       throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n           + \" while retrieving SAS key from remote service\", remoteCallEx);\n     } catch (JsonParseException jsonParserEx) {\n       throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n           + \"while parsing the response from remote\"\n           + \" service into RemoteSASKeyGenerationResponse object\", jsonParserEx);\n     } catch (JsonMappingException jsonMappingEx) {\n       throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n           + \" while mapping the response from remote service into \"\n           + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n     } catch (IOException ioEx) {\n       throw new SASKeyGenerationException(\"Encountered IOException while \"\n           + \"accessing remote service to retrieve SAS Key\", ioEx);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri,\n      String token) throws SASKeyGenerationException {\n\n    try {\n      HttpGet httpGet \u003d new HttpGet(uri);\n      if (token !\u003d null) {\n        httpGet.setHeader(\"Cookie\", AuthenticatedURL.AUTH_COOKIE + \"\u003d\" + token);\n      }\n      String responseBody \u003d remoteCallHelper.makeRemoteGetRequest(httpGet);\n\n      ObjectMapper objectMapper \u003d new ObjectMapper();\n      return objectMapper.readValue(responseBody,\n          RemoteSASKeyGenerationResponse.class);\n\n    } catch (WasbRemoteCallException remoteCallEx) {\n      throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n          + \" while retrieving SAS key from remote service\", remoteCallEx);\n    } catch (JsonParseException jsonParserEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n          + \"while parsing the response from remote\"\n          + \" service into RemoteSASKeyGenerationResponse object\", jsonParserEx);\n    } catch (JsonMappingException jsonMappingEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n          + \" while mapping the response from remote service into \"\n          + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n    } catch (IOException ioEx) {\n      throw new SASKeyGenerationException(\"Encountered IOException while \"\n          + \"accessing remote service to retrieve SAS Key\", ioEx);\n    }\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteSASKeyGeneratorImpl.java",
          "extendedDetails": {
            "oldValue": "[uri-URI]",
            "newValue": "[uri-URI, token-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13945. Azure: Add Kerberos and Delegation token support to WASB client. Contributed by Santhosh G Nayak\n\nChange-Id: I39fb0a3b0491bf2160571366939a0502a0045429\n",
          "commitDate": "20/03/17 4:31 PM",
          "commitName": "8e15e240597f821968e14893eabfea39815de207",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "06/03/17 5:10 PM",
          "commitNameOld": "52d7d5aa1a303cf70519a61487641211f4267c6f",
          "commitAuthorOld": "Mingliang Liu",
          "daysBetweenCommits": 13.93,
          "commitsBetweenForRepo": 80,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,30 @@\n-  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri)\n-      throws SASKeyGenerationException {\n+  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri,\n+      String token) throws SASKeyGenerationException {\n \n     try {\n-      String responseBody \u003d\n-          remoteCallHelper.makeRemoteGetRequest(new HttpGet(uri));\n+      HttpGet httpGet \u003d new HttpGet(uri);\n+      if (token !\u003d null) {\n+        httpGet.setHeader(\"Cookie\", AuthenticatedURL.AUTH_COOKIE + \"\u003d\" + token);\n+      }\n+      String responseBody \u003d remoteCallHelper.makeRemoteGetRequest(httpGet);\n \n       ObjectMapper objectMapper \u003d new ObjectMapper();\n       return objectMapper.readValue(responseBody,\n           RemoteSASKeyGenerationResponse.class);\n \n     } catch (WasbRemoteCallException remoteCallEx) {\n       throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n           + \" while retrieving SAS key from remote service\", remoteCallEx);\n     } catch (JsonParseException jsonParserEx) {\n       throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n           + \"while parsing the response from remote\"\n           + \" service into RemoteSASKeyGenerationResponse object\", jsonParserEx);\n     } catch (JsonMappingException jsonMappingEx) {\n       throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n           + \" while mapping the response from remote service into \"\n           + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n     } catch (IOException ioEx) {\n       throw new SASKeyGenerationException(\"Encountered IOException while \"\n           + \"accessing remote service to retrieve SAS Key\", ioEx);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri,\n      String token) throws SASKeyGenerationException {\n\n    try {\n      HttpGet httpGet \u003d new HttpGet(uri);\n      if (token !\u003d null) {\n        httpGet.setHeader(\"Cookie\", AuthenticatedURL.AUTH_COOKIE + \"\u003d\" + token);\n      }\n      String responseBody \u003d remoteCallHelper.makeRemoteGetRequest(httpGet);\n\n      ObjectMapper objectMapper \u003d new ObjectMapper();\n      return objectMapper.readValue(responseBody,\n          RemoteSASKeyGenerationResponse.class);\n\n    } catch (WasbRemoteCallException remoteCallEx) {\n      throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n          + \" while retrieving SAS key from remote service\", remoteCallEx);\n    } catch (JsonParseException jsonParserEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n          + \"while parsing the response from remote\"\n          + \" service into RemoteSASKeyGenerationResponse object\", jsonParserEx);\n    } catch (JsonMappingException jsonMappingEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n          + \" while mapping the response from remote service into \"\n          + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n    } catch (IOException ioEx) {\n      throw new SASKeyGenerationException(\"Encountered IOException while \"\n          + \"accessing remote service to retrieve SAS Key\", ioEx);\n    }\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteSASKeyGeneratorImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "52d7d5aa1a303cf70519a61487641211f4267c6f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Revert \"HADOOP-13930. Azure: Add Authorization support to WASB. Contributed by Sivaguru Sankaridurg and Dushyanth\"\n\nThis reverts commit 6b7cd62b8cf12616b13142f2eb2cfc2f25796f0f.\n",
      "commitDate": "06/03/17 5:10 PM",
      "commitName": "52d7d5aa1a303cf70519a61487641211f4267c6f",
      "commitAuthor": "Mingliang Liu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Revert \"HADOOP-13930. Azure: Add Authorization support to WASB. Contributed by Sivaguru Sankaridurg and Dushyanth\"\n\nThis reverts commit 6b7cd62b8cf12616b13142f2eb2cfc2f25796f0f.\n",
          "commitDate": "06/03/17 5:10 PM",
          "commitName": "52d7d5aa1a303cf70519a61487641211f4267c6f",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "03/03/17 5:09 PM",
          "commitNameOld": "6b7cd62b8cf12616b13142f2eb2cfc2f25796f0f",
          "commitAuthorOld": "Mingliang Liu",
          "daysBetweenCommits": 3.0,
          "commitsBetweenForRepo": 13,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,27 @@\n-  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri, String token)\n+  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri)\n       throws SASKeyGenerationException {\n \n     try {\n-      HttpGet httpGet \u003d new HttpGet(uri);\n-      if(token !\u003d null){\n-        httpGet.setHeader(\"Cookie\", AuthenticatedURL.AUTH_COOKIE + \"\u003d\" + token);\n-      }\n       String responseBody \u003d\n-          remoteCallHelper.makeRemoteGetRequest(httpGet);\n+          remoteCallHelper.makeRemoteGetRequest(new HttpGet(uri));\n \n       ObjectMapper objectMapper \u003d new ObjectMapper();\n       return objectMapper.readValue(responseBody,\n           RemoteSASKeyGenerationResponse.class);\n \n     } catch (WasbRemoteCallException remoteCallEx) {\n       throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n           + \" while retrieving SAS key from remote service\", remoteCallEx);\n     } catch (JsonParseException jsonParserEx) {\n       throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n           + \"while parsing the response from remote\"\n           + \" service into RemoteSASKeyGenerationResponse object\", jsonParserEx);\n     } catch (JsonMappingException jsonMappingEx) {\n       throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n           + \" while mapping the response from remote service into \"\n           + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n     } catch (IOException ioEx) {\n       throw new SASKeyGenerationException(\"Encountered IOException while \"\n           + \"accessing remote service to retrieve SAS Key\", ioEx);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri)\n      throws SASKeyGenerationException {\n\n    try {\n      String responseBody \u003d\n          remoteCallHelper.makeRemoteGetRequest(new HttpGet(uri));\n\n      ObjectMapper objectMapper \u003d new ObjectMapper();\n      return objectMapper.readValue(responseBody,\n          RemoteSASKeyGenerationResponse.class);\n\n    } catch (WasbRemoteCallException remoteCallEx) {\n      throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n          + \" while retrieving SAS key from remote service\", remoteCallEx);\n    } catch (JsonParseException jsonParserEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n          + \"while parsing the response from remote\"\n          + \" service into RemoteSASKeyGenerationResponse object\", jsonParserEx);\n    } catch (JsonMappingException jsonMappingEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n          + \" while mapping the response from remote service into \"\n          + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n    } catch (IOException ioEx) {\n      throw new SASKeyGenerationException(\"Encountered IOException while \"\n          + \"accessing remote service to retrieve SAS Key\", ioEx);\n    }\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteSASKeyGeneratorImpl.java",
          "extendedDetails": {
            "oldValue": "[uri-URI, token-String]",
            "newValue": "[uri-URI]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert \"HADOOP-13930. Azure: Add Authorization support to WASB. Contributed by Sivaguru Sankaridurg and Dushyanth\"\n\nThis reverts commit 6b7cd62b8cf12616b13142f2eb2cfc2f25796f0f.\n",
          "commitDate": "06/03/17 5:10 PM",
          "commitName": "52d7d5aa1a303cf70519a61487641211f4267c6f",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "03/03/17 5:09 PM",
          "commitNameOld": "6b7cd62b8cf12616b13142f2eb2cfc2f25796f0f",
          "commitAuthorOld": "Mingliang Liu",
          "daysBetweenCommits": 3.0,
          "commitsBetweenForRepo": 13,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,27 @@\n-  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri, String token)\n+  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri)\n       throws SASKeyGenerationException {\n \n     try {\n-      HttpGet httpGet \u003d new HttpGet(uri);\n-      if(token !\u003d null){\n-        httpGet.setHeader(\"Cookie\", AuthenticatedURL.AUTH_COOKIE + \"\u003d\" + token);\n-      }\n       String responseBody \u003d\n-          remoteCallHelper.makeRemoteGetRequest(httpGet);\n+          remoteCallHelper.makeRemoteGetRequest(new HttpGet(uri));\n \n       ObjectMapper objectMapper \u003d new ObjectMapper();\n       return objectMapper.readValue(responseBody,\n           RemoteSASKeyGenerationResponse.class);\n \n     } catch (WasbRemoteCallException remoteCallEx) {\n       throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n           + \" while retrieving SAS key from remote service\", remoteCallEx);\n     } catch (JsonParseException jsonParserEx) {\n       throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n           + \"while parsing the response from remote\"\n           + \" service into RemoteSASKeyGenerationResponse object\", jsonParserEx);\n     } catch (JsonMappingException jsonMappingEx) {\n       throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n           + \" while mapping the response from remote service into \"\n           + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n     } catch (IOException ioEx) {\n       throw new SASKeyGenerationException(\"Encountered IOException while \"\n           + \"accessing remote service to retrieve SAS Key\", ioEx);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri)\n      throws SASKeyGenerationException {\n\n    try {\n      String responseBody \u003d\n          remoteCallHelper.makeRemoteGetRequest(new HttpGet(uri));\n\n      ObjectMapper objectMapper \u003d new ObjectMapper();\n      return objectMapper.readValue(responseBody,\n          RemoteSASKeyGenerationResponse.class);\n\n    } catch (WasbRemoteCallException remoteCallEx) {\n      throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n          + \" while retrieving SAS key from remote service\", remoteCallEx);\n    } catch (JsonParseException jsonParserEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n          + \"while parsing the response from remote\"\n          + \" service into RemoteSASKeyGenerationResponse object\", jsonParserEx);\n    } catch (JsonMappingException jsonMappingEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n          + \" while mapping the response from remote service into \"\n          + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n    } catch (IOException ioEx) {\n      throw new SASKeyGenerationException(\"Encountered IOException while \"\n          + \"accessing remote service to retrieve SAS Key\", ioEx);\n    }\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteSASKeyGeneratorImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "6b7cd62b8cf12616b13142f2eb2cfc2f25796f0f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-13930. Azure: Add Authorization support to WASB. Contributed by Sivaguru Sankaridurg and Dushyanth\n",
      "commitDate": "03/03/17 5:09 PM",
      "commitName": "6b7cd62b8cf12616b13142f2eb2cfc2f25796f0f",
      "commitAuthor": "Mingliang Liu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-13930. Azure: Add Authorization support to WASB. Contributed by Sivaguru Sankaridurg and Dushyanth\n",
          "commitDate": "03/03/17 5:09 PM",
          "commitName": "6b7cd62b8cf12616b13142f2eb2cfc2f25796f0f",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "22/12/16 8:15 PM",
          "commitNameOld": "e92a77099b91620cee84513cc879089907468075",
          "commitAuthorOld": "Mingliang Liu",
          "daysBetweenCommits": 70.87,
          "commitsBetweenForRepo": 352,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,31 @@\n-  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri)\n+  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri, String token)\n       throws SASKeyGenerationException {\n \n     try {\n+      HttpGet httpGet \u003d new HttpGet(uri);\n+      if(token !\u003d null){\n+        httpGet.setHeader(\"Cookie\", AuthenticatedURL.AUTH_COOKIE + \"\u003d\" + token);\n+      }\n       String responseBody \u003d\n-          remoteCallHelper.makeRemoteGetRequest(new HttpGet(uri));\n+          remoteCallHelper.makeRemoteGetRequest(httpGet);\n \n       ObjectMapper objectMapper \u003d new ObjectMapper();\n       return objectMapper.readValue(responseBody,\n           RemoteSASKeyGenerationResponse.class);\n \n     } catch (WasbRemoteCallException remoteCallEx) {\n       throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n           + \" while retrieving SAS key from remote service\", remoteCallEx);\n     } catch (JsonParseException jsonParserEx) {\n       throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n           + \"while parsing the response from remote\"\n           + \" service into RemoteSASKeyGenerationResponse object\", jsonParserEx);\n     } catch (JsonMappingException jsonMappingEx) {\n       throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n           + \" while mapping the response from remote service into \"\n           + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n     } catch (IOException ioEx) {\n       throw new SASKeyGenerationException(\"Encountered IOException while \"\n           + \"accessing remote service to retrieve SAS Key\", ioEx);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri, String token)\n      throws SASKeyGenerationException {\n\n    try {\n      HttpGet httpGet \u003d new HttpGet(uri);\n      if(token !\u003d null){\n        httpGet.setHeader(\"Cookie\", AuthenticatedURL.AUTH_COOKIE + \"\u003d\" + token);\n      }\n      String responseBody \u003d\n          remoteCallHelper.makeRemoteGetRequest(httpGet);\n\n      ObjectMapper objectMapper \u003d new ObjectMapper();\n      return objectMapper.readValue(responseBody,\n          RemoteSASKeyGenerationResponse.class);\n\n    } catch (WasbRemoteCallException remoteCallEx) {\n      throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n          + \" while retrieving SAS key from remote service\", remoteCallEx);\n    } catch (JsonParseException jsonParserEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n          + \"while parsing the response from remote\"\n          + \" service into RemoteSASKeyGenerationResponse object\", jsonParserEx);\n    } catch (JsonMappingException jsonMappingEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n          + \" while mapping the response from remote service into \"\n          + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n    } catch (IOException ioEx) {\n      throw new SASKeyGenerationException(\"Encountered IOException while \"\n          + \"accessing remote service to retrieve SAS Key\", ioEx);\n    }\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteSASKeyGeneratorImpl.java",
          "extendedDetails": {
            "oldValue": "[uri-URI]",
            "newValue": "[uri-URI, token-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13930. Azure: Add Authorization support to WASB. Contributed by Sivaguru Sankaridurg and Dushyanth\n",
          "commitDate": "03/03/17 5:09 PM",
          "commitName": "6b7cd62b8cf12616b13142f2eb2cfc2f25796f0f",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "22/12/16 8:15 PM",
          "commitNameOld": "e92a77099b91620cee84513cc879089907468075",
          "commitAuthorOld": "Mingliang Liu",
          "daysBetweenCommits": 70.87,
          "commitsBetweenForRepo": 352,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,31 @@\n-  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri)\n+  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri, String token)\n       throws SASKeyGenerationException {\n \n     try {\n+      HttpGet httpGet \u003d new HttpGet(uri);\n+      if(token !\u003d null){\n+        httpGet.setHeader(\"Cookie\", AuthenticatedURL.AUTH_COOKIE + \"\u003d\" + token);\n+      }\n       String responseBody \u003d\n-          remoteCallHelper.makeRemoteGetRequest(new HttpGet(uri));\n+          remoteCallHelper.makeRemoteGetRequest(httpGet);\n \n       ObjectMapper objectMapper \u003d new ObjectMapper();\n       return objectMapper.readValue(responseBody,\n           RemoteSASKeyGenerationResponse.class);\n \n     } catch (WasbRemoteCallException remoteCallEx) {\n       throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n           + \" while retrieving SAS key from remote service\", remoteCallEx);\n     } catch (JsonParseException jsonParserEx) {\n       throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n           + \"while parsing the response from remote\"\n           + \" service into RemoteSASKeyGenerationResponse object\", jsonParserEx);\n     } catch (JsonMappingException jsonMappingEx) {\n       throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n           + \" while mapping the response from remote service into \"\n           + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n     } catch (IOException ioEx) {\n       throw new SASKeyGenerationException(\"Encountered IOException while \"\n           + \"accessing remote service to retrieve SAS Key\", ioEx);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri, String token)\n      throws SASKeyGenerationException {\n\n    try {\n      HttpGet httpGet \u003d new HttpGet(uri);\n      if(token !\u003d null){\n        httpGet.setHeader(\"Cookie\", AuthenticatedURL.AUTH_COOKIE + \"\u003d\" + token);\n      }\n      String responseBody \u003d\n          remoteCallHelper.makeRemoteGetRequest(httpGet);\n\n      ObjectMapper objectMapper \u003d new ObjectMapper();\n      return objectMapper.readValue(responseBody,\n          RemoteSASKeyGenerationResponse.class);\n\n    } catch (WasbRemoteCallException remoteCallEx) {\n      throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n          + \" while retrieving SAS key from remote service\", remoteCallEx);\n    } catch (JsonParseException jsonParserEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n          + \"while parsing the response from remote\"\n          + \" service into RemoteSASKeyGenerationResponse object\", jsonParserEx);\n    } catch (JsonMappingException jsonMappingEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n          + \" while mapping the response from remote service into \"\n          + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n    } catch (IOException ioEx) {\n      throw new SASKeyGenerationException(\"Encountered IOException while \"\n          + \"accessing remote service to retrieve SAS Key\", ioEx);\n    }\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteSASKeyGeneratorImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "e92a77099b91620cee84513cc879089907468075": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13863. Azure: Add a new SAS key mode for WASB. Contributed by Dushyanth\n",
      "commitDate": "22/12/16 8:15 PM",
      "commitName": "e92a77099b91620cee84513cc879089907468075",
      "commitAuthor": "Mingliang Liu",
      "diff": "@@ -0,0 +1,27 @@\n+  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri)\n+      throws SASKeyGenerationException {\n+\n+    try {\n+      String responseBody \u003d\n+          remoteCallHelper.makeRemoteGetRequest(new HttpGet(uri));\n+\n+      ObjectMapper objectMapper \u003d new ObjectMapper();\n+      return objectMapper.readValue(responseBody,\n+          RemoteSASKeyGenerationResponse.class);\n+\n+    } catch (WasbRemoteCallException remoteCallEx) {\n+      throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n+          + \" while retrieving SAS key from remote service\", remoteCallEx);\n+    } catch (JsonParseException jsonParserEx) {\n+      throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n+          + \"while parsing the response from remote\"\n+          + \" service into RemoteSASKeyGenerationResponse object\", jsonParserEx);\n+    } catch (JsonMappingException jsonMappingEx) {\n+      throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n+          + \" while mapping the response from remote service into \"\n+          + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n+    } catch (IOException ioEx) {\n+      throw new SASKeyGenerationException(\"Encountered IOException while \"\n+          + \"accessing remote service to retrieve SAS Key\", ioEx);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private RemoteSASKeyGenerationResponse makeRemoteRequest(URI uri)\n      throws SASKeyGenerationException {\n\n    try {\n      String responseBody \u003d\n          remoteCallHelper.makeRemoteGetRequest(new HttpGet(uri));\n\n      ObjectMapper objectMapper \u003d new ObjectMapper();\n      return objectMapper.readValue(responseBody,\n          RemoteSASKeyGenerationResponse.class);\n\n    } catch (WasbRemoteCallException remoteCallEx) {\n      throw new SASKeyGenerationException(\"Encountered RemoteCallException\"\n          + \" while retrieving SAS key from remote service\", remoteCallEx);\n    } catch (JsonParseException jsonParserEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonParseException \"\n          + \"while parsing the response from remote\"\n          + \" service into RemoteSASKeyGenerationResponse object\", jsonParserEx);\n    } catch (JsonMappingException jsonMappingEx) {\n      throw new SASKeyGenerationException(\"Encountered JsonMappingException\"\n          + \" while mapping the response from remote service into \"\n          + \"RemoteSASKeyGenerationResponse object\", jsonMappingEx);\n    } catch (IOException ioEx) {\n      throw new SASKeyGenerationException(\"Encountered IOException while \"\n          + \"accessing remote service to retrieve SAS Key\", ioEx);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/RemoteSASKeyGeneratorImpl.java"
    }
  }
}