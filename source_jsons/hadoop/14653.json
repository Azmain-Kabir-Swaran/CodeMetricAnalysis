{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSTopologyNodeImpl.java",
  "functionName": "childAddStorage",
  "functionId": "childAddStorage___childName-String__type-StorageType",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/net/DFSTopologyNodeImpl.java",
  "functionStartLine": 376,
  "functionEndLine": 405,
  "numCommitsSeen": 4,
  "timeTaken": 1161,
  "changeHistory": [
    "97c2e576c91c2316c2b52bfc948bae9bff8ca49f"
  ],
  "changeHistoryShort": {
    "97c2e576c91c2316c2b52bfc948bae9bff8ca49f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "97c2e576c91c2316c2b52bfc948bae9bff8ca49f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11530. Use HDFS specific network topology to choose datanode in BlockPlacementPolicyDefault. Contributed by Yiqun Lin and Chen Liang.\n",
      "commitDate": "04/05/17 8:54 PM",
      "commitName": "97c2e576c91c2316c2b52bfc948bae9bff8ca49f",
      "commitAuthor": "Yiqun Lin",
      "diff": "@@ -0,0 +1,30 @@\n+  public synchronized void childAddStorage(\n+      String childName, StorageType type) {\n+    LOG.debug(\"child add storage: {}:{}\", childName, type);\n+    // childrenStorageInfo should definitely contain this node already\n+    // because updateStorage is called after node added\n+    Preconditions.checkArgument(childrenStorageInfo.containsKey(childName));\n+    EnumMap\u003cStorageType, Integer\u003e typeCount \u003d\n+        childrenStorageInfo.get(childName);\n+    if (typeCount.containsKey(type)) {\n+      typeCount.put(type, typeCount.get(type) + 1);\n+    } else {\n+      // Please be aware that, the counts are always \"number of datanodes in\n+      // this subtree\" rather than \"number of storages in this storage\".\n+      // so if the caller is a datanode, it should always be this branch rather\n+      // than the +1 branch above. This depends on the caller in\n+      // DatanodeDescriptor to make sure only when a *new* storage type is added\n+      // it calls this. (should not call this when a already existing storage\n+      // is added).\n+      // but no such restriction for inner nodes.\n+      typeCount.put(type, 1);\n+    }\n+    if (storageTypeCounts.containsKey(type)) {\n+      storageTypeCounts.put(type, storageTypeCounts.get(type) + 1);\n+    } else {\n+      storageTypeCounts.put(type, 1);\n+    }\n+    if (getParent() !\u003d null) {\n+      ((DFSTopologyNodeImpl)getParent()).childAddStorage(getName(), type);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void childAddStorage(\n      String childName, StorageType type) {\n    LOG.debug(\"child add storage: {}:{}\", childName, type);\n    // childrenStorageInfo should definitely contain this node already\n    // because updateStorage is called after node added\n    Preconditions.checkArgument(childrenStorageInfo.containsKey(childName));\n    EnumMap\u003cStorageType, Integer\u003e typeCount \u003d\n        childrenStorageInfo.get(childName);\n    if (typeCount.containsKey(type)) {\n      typeCount.put(type, typeCount.get(type) + 1);\n    } else {\n      // Please be aware that, the counts are always \"number of datanodes in\n      // this subtree\" rather than \"number of storages in this storage\".\n      // so if the caller is a datanode, it should always be this branch rather\n      // than the +1 branch above. This depends on the caller in\n      // DatanodeDescriptor to make sure only when a *new* storage type is added\n      // it calls this. (should not call this when a already existing storage\n      // is added).\n      // but no such restriction for inner nodes.\n      typeCount.put(type, 1);\n    }\n    if (storageTypeCounts.containsKey(type)) {\n      storageTypeCounts.put(type, storageTypeCounts.get(type) + 1);\n    } else {\n      storageTypeCounts.put(type, 1);\n    }\n    if (getParent() !\u003d null) {\n      ((DFSTopologyNodeImpl)getParent()).childAddStorage(getName(), type);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/net/DFSTopologyNodeImpl.java"
    }
  }
}