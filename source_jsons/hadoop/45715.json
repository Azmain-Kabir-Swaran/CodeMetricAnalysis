{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogAggregationIndexedFileController.java",
  "functionName": "getAllNodeFiles",
  "functionId": "getAllNodeFiles___nodeFiles-RemoteIterator__FileStatus____appId-ApplicationId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/ifile/LogAggregationIndexedFileController.java",
  "functionStartLine": 769,
  "functionEndLine": 785,
  "numCommitsSeen": 18,
  "timeTaken": 820,
  "changeHistory": [
    "583f4594314b3db25b57b1e46ea8026eab21f932"
  ],
  "changeHistoryShort": {
    "583f4594314b3db25b57b1e46ea8026eab21f932": "Yintroduced"
  },
  "changeHistoryDetails": {
    "583f4594314b3db25b57b1e46ea8026eab21f932": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7891. LogAggregationIndexedFileController should support read from HAR file. (Xuan Gong via wangda)\n\nChange-Id: I16e081f21c5f80160564c49cc49d103bd8eb7e16\n",
      "commitDate": "07/03/18 3:46 PM",
      "commitName": "583f4594314b3db25b57b1e46ea8026eab21f932",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,17 @@\n+  private List\u003cFileStatus\u003e getAllNodeFiles(\n+      RemoteIterator\u003cFileStatus\u003e nodeFiles, ApplicationId appId)\n+      throws IOException {\n+    List\u003cFileStatus\u003e listOfFiles \u003d new ArrayList\u003c\u003e();\n+    while (nodeFiles !\u003d null \u0026\u0026 nodeFiles.hasNext()) {\n+      FileStatus thisNodeFile \u003d nodeFiles.next();\n+      String nodeName \u003d thisNodeFile.getPath().getName();\n+      if (nodeName.equals(appId + \".har\")) {\n+        Path p \u003d new Path(\"har:///\"\n+            + thisNodeFile.getPath().toUri().getRawPath());\n+        nodeFiles \u003d HarFs.get(p.toUri(), conf).listStatusIterator(p);\n+        continue;\n+      }\n+      listOfFiles.add(thisNodeFile);\n+    }\n+    return listOfFiles;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cFileStatus\u003e getAllNodeFiles(\n      RemoteIterator\u003cFileStatus\u003e nodeFiles, ApplicationId appId)\n      throws IOException {\n    List\u003cFileStatus\u003e listOfFiles \u003d new ArrayList\u003c\u003e();\n    while (nodeFiles !\u003d null \u0026\u0026 nodeFiles.hasNext()) {\n      FileStatus thisNodeFile \u003d nodeFiles.next();\n      String nodeName \u003d thisNodeFile.getPath().getName();\n      if (nodeName.equals(appId + \".har\")) {\n        Path p \u003d new Path(\"har:///\"\n            + thisNodeFile.getPath().toUri().getRawPath());\n        nodeFiles \u003d HarFs.get(p.toUri(), conf).listStatusIterator(p);\n        continue;\n      }\n      listOfFiles.add(thisNodeFile);\n    }\n    return listOfFiles;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/ifile/LogAggregationIndexedFileController.java"
    }
  }
}