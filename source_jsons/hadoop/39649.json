{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeafQueue.java",
  "functionName": "addApplicationAttempt",
  "functionId": "addApplicationAttempt___application-FiCaSchedulerApp__user-User",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
  "functionStartLine": 891,
  "functionEndLine": 924,
  "numCommitsSeen": 288,
  "timeTaken": 13388,
  "changeHistory": [
    "cdb2107066a2d8557270888c0a9a75f29a6853bf",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "1c8ab41e8b3477a93cbdf0b553a87b131eb60e1f",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
    "f4a57d4a531e793373fe3118d644871a3b9ae0b1",
    "109e528ef5d8df07443373751266b4417acc981a",
    "cf9d3c925608e8bc650d43975382ed3014081057",
    "b543d1a390a67e5e92fea67d3a2635058c29e9da",
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
    "6b608aad7d52b524fa94955a538e8b3524d42d93",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": "Ybodychange",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "1c8ab41e8b3477a93cbdf0b553a87b131eb60e1f": "Ybodychange",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": "Ymultichange(Ymodifierchange,Ybodychange)",
    "f4a57d4a531e793373fe3118d644871a3b9ae0b1": "Ybodychange",
    "109e528ef5d8df07443373751266b4417acc981a": "Ybodychange",
    "cf9d3c925608e8bc650d43975382ed3014081057": "Ybodychange",
    "b543d1a390a67e5e92fea67d3a2635058c29e9da": "Ybodychange",
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": "Ymultichange(Yrename,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": "Yparameterchange",
    "6b608aad7d52b524fa94955a538e8b3524d42d93": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
      "commitDate": "25/03/20 4:20 AM",
      "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthor": "Sunil G",
      "commitDateOld": "28/01/20 7:54 PM",
      "commitNameOld": "e578e52aae01248507e089b406fe038ab8e84207",
      "commitAuthorOld": "Eric Badger",
      "daysBetweenCommits": 56.31,
      "commitsBetweenForRepo": 177,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   private void addApplicationAttempt(FiCaSchedulerApp application,\n       User user) {\n     writeLock.lock();\n     try {\n       // Accept\n       user.submitApplication();\n       getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n       applicationAttemptMap.put(application.getApplicationAttemptId(),\n           application);\n \n       // Activate applications\n       if (Resources.greaterThan(resourceCalculator, lastClusterResource,\n           lastClusterResource, Resources.none())) {\n         activateApplications();\n       } else {\n         application.updateAMContainerDiagnostics(AMState.INACTIVATED,\n             CSAMContainerLaunchDiagnosticsConstants.CLUSTER_RESOURCE_EMPTY);\n         LOG.info(\"Skipping activateApplications for \"\n             + application.getApplicationAttemptId()\n             + \" since cluster resource is \" + Resources.none());\n       }\n \n       LOG.info(\n           \"Application added -\" + \" appId: \" + application.getApplicationId()\n               + \" user: \" + application.getUser() + \",\" + \" leaf-queue: \"\n-              + getQueueName() + \" #user-pending-applications: \" + user\n+              + getQueuePath() + \" #user-pending-applications: \" + user\n               .getPendingApplications() + \" #user-active-applications: \" + user\n               .getActiveApplications() + \" #queue-pending-applications: \"\n               + getNumPendingApplications() + \" #queue-active-applications: \"\n               + getNumActiveApplications());\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addApplicationAttempt(FiCaSchedulerApp application,\n      User user) {\n    writeLock.lock();\n    try {\n      // Accept\n      user.submitApplication();\n      getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n      applicationAttemptMap.put(application.getApplicationAttemptId(),\n          application);\n\n      // Activate applications\n      if (Resources.greaterThan(resourceCalculator, lastClusterResource,\n          lastClusterResource, Resources.none())) {\n        activateApplications();\n      } else {\n        application.updateAMContainerDiagnostics(AMState.INACTIVATED,\n            CSAMContainerLaunchDiagnosticsConstants.CLUSTER_RESOURCE_EMPTY);\n        LOG.info(\"Skipping activateApplications for \"\n            + application.getApplicationAttemptId()\n            + \" since cluster resource is \" + Resources.none());\n      }\n\n      LOG.info(\n          \"Application added -\" + \" appId: \" + application.getApplicationId()\n              + \" user: \" + application.getUser() + \",\" + \" leaf-queue: \"\n              + getQueuePath() + \" #user-pending-applications: \" + user\n              .getPendingApplications() + \" #user-active-applications: \" + user\n              .getActiveApplications() + \" #queue-pending-applications: \"\n              + getNumPendingApplications() + \" #queue-active-applications: \"\n              + getNumActiveApplications());\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   private void addApplicationAttempt(FiCaSchedulerApp application,\n       User user) {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       // Accept\n       user.submitApplication();\n       getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n       applicationAttemptMap.put(application.getApplicationAttemptId(),\n           application);\n \n       // Activate applications\n       if (Resources.greaterThan(resourceCalculator, lastClusterResource,\n           lastClusterResource, Resources.none())) {\n         activateApplications();\n       } else {\n         application.updateAMContainerDiagnostics(AMState.INACTIVATED,\n             CSAMContainerLaunchDiagnosticsConstants.CLUSTER_RESOURCE_EMPTY);\n         LOG.info(\"Skipping activateApplications for \"\n             + application.getApplicationAttemptId()\n             + \" since cluster resource is \" + Resources.none());\n       }\n \n       LOG.info(\n           \"Application added -\" + \" appId: \" + application.getApplicationId()\n               + \" user: \" + application.getUser() + \",\" + \" leaf-queue: \"\n               + getQueueName() + \" #user-pending-applications: \" + user\n               .getPendingApplications() + \" #user-active-applications: \" + user\n               .getActiveApplications() + \" #queue-pending-applications: \"\n               + getNumPendingApplications() + \" #queue-active-applications: \"\n               + getNumActiveApplications());\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addApplicationAttempt(FiCaSchedulerApp application,\n      User user) {\n    writeLock.lock();\n    try {\n      // Accept\n      user.submitApplication();\n      getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n      applicationAttemptMap.put(application.getApplicationAttemptId(),\n          application);\n\n      // Activate applications\n      if (Resources.greaterThan(resourceCalculator, lastClusterResource,\n          lastClusterResource, Resources.none())) {\n        activateApplications();\n      } else {\n        application.updateAMContainerDiagnostics(AMState.INACTIVATED,\n            CSAMContainerLaunchDiagnosticsConstants.CLUSTER_RESOURCE_EMPTY);\n        LOG.info(\"Skipping activateApplications for \"\n            + application.getApplicationAttemptId()\n            + \" since cluster resource is \" + Resources.none());\n      }\n\n      LOG.info(\n          \"Application added -\" + \" appId: \" + application.getApplicationId()\n              + \" user: \" + application.getUser() + \",\" + \" leaf-queue: \"\n              + getQueueName() + \" #user-pending-applications: \" + user\n              .getPendingApplications() + \" #user-active-applications: \" + user\n              .getActiveApplications() + \" #queue-pending-applications: \"\n              + getNumPendingApplications() + \" #queue-active-applications: \"\n              + getNumActiveApplications());\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "1c8ab41e8b3477a93cbdf0b553a87b131eb60e1f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5773. RM recovery too slow due to LeafQueue#activateApplications (Bibin A Chundatt via Varun Saxena)\n",
      "commitDate": "29/10/16 1:17 AM",
      "commitName": "1c8ab41e8b3477a93cbdf0b553a87b131eb60e1f",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "04/10/16 5:23 PM",
      "commitNameOld": "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 24.33,
      "commitsBetweenForRepo": 226,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,34 @@\n   private void addApplicationAttempt(FiCaSchedulerApp application,\n       User user) {\n     try {\n       writeLock.lock();\n       // Accept\n       user.submitApplication();\n       getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n       applicationAttemptMap.put(application.getApplicationAttemptId(),\n           application);\n \n       // Activate applications\n-      activateApplications();\n+      if (Resources.greaterThan(resourceCalculator, lastClusterResource,\n+          lastClusterResource, Resources.none())) {\n+        activateApplications();\n+      } else {\n+        application.updateAMContainerDiagnostics(AMState.INACTIVATED,\n+            CSAMContainerLaunchDiagnosticsConstants.CLUSTER_RESOURCE_EMPTY);\n+        LOG.info(\"Skipping activateApplications for \"\n+            + application.getApplicationAttemptId()\n+            + \" since cluster resource is \" + Resources.none());\n+      }\n \n       LOG.info(\n           \"Application added -\" + \" appId: \" + application.getApplicationId()\n               + \" user: \" + application.getUser() + \",\" + \" leaf-queue: \"\n               + getQueueName() + \" #user-pending-applications: \" + user\n               .getPendingApplications() + \" #user-active-applications: \" + user\n               .getActiveApplications() + \" #queue-pending-applications: \"\n               + getNumPendingApplications() + \" #queue-active-applications: \"\n               + getNumActiveApplications());\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addApplicationAttempt(FiCaSchedulerApp application,\n      User user) {\n    try {\n      writeLock.lock();\n      // Accept\n      user.submitApplication();\n      getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n      applicationAttemptMap.put(application.getApplicationAttemptId(),\n          application);\n\n      // Activate applications\n      if (Resources.greaterThan(resourceCalculator, lastClusterResource,\n          lastClusterResource, Resources.none())) {\n        activateApplications();\n      } else {\n        application.updateAMContainerDiagnostics(AMState.INACTIVATED,\n            CSAMContainerLaunchDiagnosticsConstants.CLUSTER_RESOURCE_EMPTY);\n        LOG.info(\"Skipping activateApplications for \"\n            + application.getApplicationAttemptId()\n            + \" since cluster resource is \" + Resources.none());\n      }\n\n      LOG.info(\n          \"Application added -\" + \" appId: \" + application.getApplicationId()\n              + \" user: \" + application.getUser() + \",\" + \" leaf-queue: \"\n              + getQueueName() + \" #user-pending-applications: \" + user\n              .getPendingApplications() + \" #user-active-applications: \" + user\n              .getActiveApplications() + \" #queue-pending-applications: \"\n              + getNumPendingApplications() + \" #queue-active-applications: \"\n              + getNumActiveApplications());\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
      "commitDate": "20/09/16 12:03 AM",
      "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
          "commitDate": "20/09/16 12:03 AM",
          "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthor": "Jian He",
          "commitDateOld": "16/09/16 10:05 PM",
          "commitNameOld": "4174b9756c8c7877797545c4356b1f40df603ec5",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 3.08,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,25 @@\n-  private synchronized void addApplicationAttempt(FiCaSchedulerApp application,\n+  private void addApplicationAttempt(FiCaSchedulerApp application,\n       User user) {\n-    // Accept \n-    user.submitApplication();\n-    getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n-    applicationAttemptMap.put(application.getApplicationAttemptId(), application);\n+    try {\n+      writeLock.lock();\n+      // Accept\n+      user.submitApplication();\n+      getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n+      applicationAttemptMap.put(application.getApplicationAttemptId(),\n+          application);\n \n-    // Activate applications\n-    activateApplications();\n-    \n-    LOG.info(\"Application added -\" +\n-        \" appId: \" + application.getApplicationId() +\n-        \" user: \" + application.getUser() + \",\" +\n-        \" leaf-queue: \" + getQueueName() +\n-        \" #user-pending-applications: \" + user.getPendingApplications() +\n-        \" #user-active-applications: \" + user.getActiveApplications() +\n-        \" #queue-pending-applications: \" + getNumPendingApplications() +\n-        \" #queue-active-applications: \" + getNumActiveApplications()\n-        );\n+      // Activate applications\n+      activateApplications();\n+\n+      LOG.info(\n+          \"Application added -\" + \" appId: \" + application.getApplicationId()\n+              + \" user: \" + application.getUser() + \",\" + \" leaf-queue: \"\n+              + getQueueName() + \" #user-pending-applications: \" + user\n+              .getPendingApplications() + \" #user-active-applications: \" + user\n+              .getActiveApplications() + \" #queue-pending-applications: \"\n+              + getNumPendingApplications() + \" #queue-active-applications: \"\n+              + getNumActiveApplications());\n+    } finally {\n+      writeLock.unlock();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void addApplicationAttempt(FiCaSchedulerApp application,\n      User user) {\n    try {\n      writeLock.lock();\n      // Accept\n      user.submitApplication();\n      getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n      applicationAttemptMap.put(application.getApplicationAttemptId(),\n          application);\n\n      // Activate applications\n      activateApplications();\n\n      LOG.info(\n          \"Application added -\" + \" appId: \" + application.getApplicationId()\n              + \" user: \" + application.getUser() + \",\" + \" leaf-queue: \"\n              + getQueueName() + \" #user-pending-applications: \" + user\n              .getPendingApplications() + \" #user-active-applications: \" + user\n              .getActiveApplications() + \" #queue-pending-applications: \"\n              + getNumPendingApplications() + \" #queue-active-applications: \"\n              + getNumActiveApplications());\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "[private, synchronized]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
          "commitDate": "20/09/16 12:03 AM",
          "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthor": "Jian He",
          "commitDateOld": "16/09/16 10:05 PM",
          "commitNameOld": "4174b9756c8c7877797545c4356b1f40df603ec5",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 3.08,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,25 @@\n-  private synchronized void addApplicationAttempt(FiCaSchedulerApp application,\n+  private void addApplicationAttempt(FiCaSchedulerApp application,\n       User user) {\n-    // Accept \n-    user.submitApplication();\n-    getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n-    applicationAttemptMap.put(application.getApplicationAttemptId(), application);\n+    try {\n+      writeLock.lock();\n+      // Accept\n+      user.submitApplication();\n+      getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n+      applicationAttemptMap.put(application.getApplicationAttemptId(),\n+          application);\n \n-    // Activate applications\n-    activateApplications();\n-    \n-    LOG.info(\"Application added -\" +\n-        \" appId: \" + application.getApplicationId() +\n-        \" user: \" + application.getUser() + \",\" +\n-        \" leaf-queue: \" + getQueueName() +\n-        \" #user-pending-applications: \" + user.getPendingApplications() +\n-        \" #user-active-applications: \" + user.getActiveApplications() +\n-        \" #queue-pending-applications: \" + getNumPendingApplications() +\n-        \" #queue-active-applications: \" + getNumActiveApplications()\n-        );\n+      // Activate applications\n+      activateApplications();\n+\n+      LOG.info(\n+          \"Application added -\" + \" appId: \" + application.getApplicationId()\n+              + \" user: \" + application.getUser() + \",\" + \" leaf-queue: \"\n+              + getQueueName() + \" #user-pending-applications: \" + user\n+              .getPendingApplications() + \" #user-active-applications: \" + user\n+              .getActiveApplications() + \" #queue-pending-applications: \"\n+              + getNumPendingApplications() + \" #queue-active-applications: \"\n+              + getNumActiveApplications());\n+    } finally {\n+      writeLock.unlock();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void addApplicationAttempt(FiCaSchedulerApp application,\n      User user) {\n    try {\n      writeLock.lock();\n      // Accept\n      user.submitApplication();\n      getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n      applicationAttemptMap.put(application.getApplicationAttemptId(),\n          application);\n\n      // Activate applications\n      activateApplications();\n\n      LOG.info(\n          \"Application added -\" + \" appId: \" + application.getApplicationId()\n              + \" user: \" + application.getUser() + \",\" + \" leaf-queue: \"\n              + getQueueName() + \" #user-pending-applications: \" + user\n              .getPendingApplications() + \" #user-active-applications: \" + user\n              .getActiveApplications() + \" #queue-pending-applications: \"\n              + getNumPendingApplications() + \" #queue-active-applications: \"\n              + getNumActiveApplications());\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "f4a57d4a531e793373fe3118d644871a3b9ae0b1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4617. LeafQueue#pendingOrderingPolicy should always use fixed ordering policy instead of using same as active applications ordering policy. Contributed by Rohith Sharma K S\n",
      "commitDate": "29/01/16 12:22 PM",
      "commitName": "f4a57d4a531e793373fe3118d644871a3b9ae0b1",
      "commitAuthor": "Jian He",
      "commitDateOld": "28/01/16 2:51 PM",
      "commitNameOld": "7f46636495e23693d588b0915f464fa7afd9102e",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.9,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,20 @@\n   private synchronized void addApplicationAttempt(FiCaSchedulerApp application,\n       User user) {\n     // Accept \n     user.submitApplication();\n-    if (application.isAttemptRecovering()) {\n-      getPendingAppsOrderingPolicyRecovery().addSchedulableEntity(application);\n-    } else {\n-      getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n-    }\n+    getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n     applicationAttemptMap.put(application.getApplicationAttemptId(), application);\n \n     // Activate applications\n     activateApplications();\n     \n     LOG.info(\"Application added -\" +\n         \" appId: \" + application.getApplicationId() +\n         \" user: \" + application.getUser() + \",\" +\n         \" leaf-queue: \" + getQueueName() +\n         \" #user-pending-applications: \" + user.getPendingApplications() +\n         \" #user-active-applications: \" + user.getActiveApplications() +\n         \" #queue-pending-applications: \" + getNumPendingApplications() +\n         \" #queue-active-applications: \" + getNumActiveApplications()\n         );\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addApplicationAttempt(FiCaSchedulerApp application,\n      User user) {\n    // Accept \n    user.submitApplication();\n    getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n    applicationAttemptMap.put(application.getApplicationAttemptId(), application);\n\n    // Activate applications\n    activateApplications();\n    \n    LOG.info(\"Application added -\" +\n        \" appId: \" + application.getApplicationId() +\n        \" user: \" + application.getUser() + \",\" +\n        \" leaf-queue: \" + getQueueName() +\n        \" #user-pending-applications: \" + user.getPendingApplications() +\n        \" #user-active-applications: \" + user.getActiveApplications() +\n        \" #queue-pending-applications: \" + getNumPendingApplications() +\n        \" #queue-active-applications: \" + getNumActiveApplications()\n        );\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "109e528ef5d8df07443373751266b4417acc981a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4479. Change CS LeafQueue pendingOrderingPolicy to hornor recovered apps. Contributed by Rohith Sharma K S\n",
      "commitDate": "08/01/16 3:51 PM",
      "commitName": "109e528ef5d8df07443373751266b4417acc981a",
      "commitAuthor": "Jian He",
      "commitDateOld": "30/12/15 3:30 PM",
      "commitNameOld": "8310b2e9ff3d6804bad703c4c15458b0dfeeb4af",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 9.01,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,24 @@\n   private synchronized void addApplicationAttempt(FiCaSchedulerApp application,\n       User user) {\n     // Accept \n     user.submitApplication();\n-    getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n+    if (application.isAttemptRecovering()) {\n+      getPendingAppsOrderingPolicyRecovery().addSchedulableEntity(application);\n+    } else {\n+      getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n+    }\n     applicationAttemptMap.put(application.getApplicationAttemptId(), application);\n \n     // Activate applications\n     activateApplications();\n     \n     LOG.info(\"Application added -\" +\n         \" appId: \" + application.getApplicationId() +\n         \" user: \" + application.getUser() + \",\" +\n         \" leaf-queue: \" + getQueueName() +\n         \" #user-pending-applications: \" + user.getPendingApplications() +\n         \" #user-active-applications: \" + user.getActiveApplications() +\n         \" #queue-pending-applications: \" + getNumPendingApplications() +\n         \" #queue-active-applications: \" + getNumActiveApplications()\n         );\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addApplicationAttempt(FiCaSchedulerApp application,\n      User user) {\n    // Accept \n    user.submitApplication();\n    if (application.isAttemptRecovering()) {\n      getPendingAppsOrderingPolicyRecovery().addSchedulableEntity(application);\n    } else {\n      getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n    }\n    applicationAttemptMap.put(application.getApplicationAttemptId(), application);\n\n    // Activate applications\n    activateApplications();\n    \n    LOG.info(\"Application added -\" +\n        \" appId: \" + application.getApplicationId() +\n        \" user: \" + application.getUser() + \",\" +\n        \" leaf-queue: \" + getQueueName() +\n        \" #user-pending-applications: \" + user.getPendingApplications() +\n        \" #user-active-applications: \" + user.getActiveApplications() +\n        \" #queue-pending-applications: \" + getNumPendingApplications() +\n        \" #queue-active-applications: \" + getNumActiveApplications()\n        );\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "cf9d3c925608e8bc650d43975382ed3014081057": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3873. PendingApplications in LeafQueue should also use OrderingPolicy. (Sunil G via wangda)\n",
      "commitDate": "10/08/15 2:54 PM",
      "commitName": "cf9d3c925608e8bc650d43975382ed3014081057",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "07/08/15 9:46 AM",
      "commitNameOld": "4bc42d76e7fa53cb268cab0f9fe1fd8d8dbb17fd",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 3.21,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private synchronized void addApplicationAttempt(FiCaSchedulerApp application,\n       User user) {\n     // Accept \n     user.submitApplication();\n-    pendingApplications.add(application);\n+    getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n     applicationAttemptMap.put(application.getApplicationAttemptId(), application);\n \n     // Activate applications\n     activateApplications();\n     \n     LOG.info(\"Application added -\" +\n         \" appId: \" + application.getApplicationId() +\n         \" user: \" + application.getUser() + \",\" +\n         \" leaf-queue: \" + getQueueName() +\n         \" #user-pending-applications: \" + user.getPendingApplications() +\n         \" #user-active-applications: \" + user.getActiveApplications() +\n         \" #queue-pending-applications: \" + getNumPendingApplications() +\n         \" #queue-active-applications: \" + getNumActiveApplications()\n         );\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addApplicationAttempt(FiCaSchedulerApp application,\n      User user) {\n    // Accept \n    user.submitApplication();\n    getPendingAppsOrderingPolicy().addSchedulableEntity(application);\n    applicationAttemptMap.put(application.getApplicationAttemptId(), application);\n\n    // Activate applications\n    activateApplications();\n    \n    LOG.info(\"Application added -\" +\n        \" appId: \" + application.getApplicationId() +\n        \" user: \" + application.getUser() + \",\" +\n        \" leaf-queue: \" + getQueueName() +\n        \" #user-pending-applications: \" + user.getPendingApplications() +\n        \" #user-active-applications: \" + user.getActiveApplications() +\n        \" #queue-pending-applications: \" + getNumPendingApplications() +\n        \" #queue-active-applications: \" + getNumActiveApplications()\n        );\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "b543d1a390a67e5e92fea67d3a2635058c29e9da": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3859. LeafQueue doesn\u0027t print user properly for application add.\nContributed by Varun Saxena.\n",
      "commitDate": "27/06/15 9:34 PM",
      "commitName": "b543d1a390a67e5e92fea67d3a2635058c29e9da",
      "commitAuthor": "Devaraj K",
      "commitDateOld": "16/06/15 1:33 AM",
      "commitNameOld": "b039e69bb03accef485361af301fa59f03d08d6a",
      "commitAuthorOld": "Devaraj K",
      "daysBetweenCommits": 11.83,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   private synchronized void addApplicationAttempt(FiCaSchedulerApp application,\n       User user) {\n     // Accept \n     user.submitApplication();\n     pendingApplications.add(application);\n     applicationAttemptMap.put(application.getApplicationAttemptId(), application);\n \n     // Activate applications\n     activateApplications();\n     \n     LOG.info(\"Application added -\" +\n         \" appId: \" + application.getApplicationId() +\n-        \" user: \" + user + \",\" + \" leaf-queue: \" + getQueueName() +\n+        \" user: \" + application.getUser() + \",\" +\n+        \" leaf-queue: \" + getQueueName() +\n         \" #user-pending-applications: \" + user.getPendingApplications() +\n         \" #user-active-applications: \" + user.getActiveApplications() +\n         \" #queue-pending-applications: \" + getNumPendingApplications() +\n         \" #queue-active-applications: \" + getNumActiveApplications()\n         );\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addApplicationAttempt(FiCaSchedulerApp application,\n      User user) {\n    // Accept \n    user.submitApplication();\n    pendingApplications.add(application);\n    applicationAttemptMap.put(application.getApplicationAttemptId(), application);\n\n    // Activate applications\n    activateApplications();\n    \n    LOG.info(\"Application added -\" +\n        \" appId: \" + application.getApplicationId() +\n        \" user: \" + application.getUser() + \",\" +\n        \" leaf-queue: \" + getQueueName() +\n        \" #user-pending-applications: \" + user.getPendingApplications() +\n        \" #user-active-applications: \" + user.getActiveApplications() +\n        \" #queue-pending-applications: \" + getNumPendingApplications() +\n        \" #queue-active-applications: \" + getNumActiveApplications()\n        );\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-1493. Changed ResourceManager and Scheduler interfacing to recognize app-attempts separately from apps. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/01/14 12:19 PM",
      "commitName": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-1493. Changed ResourceManager and Scheduler interfacing to recognize app-attempts separately from apps. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554896 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/01/14 12:19 PM",
          "commitName": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/12/13 7:09 PM",
          "commitNameOld": "e1d3670f4c233696dc673c37b578ce46b44a6876",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 25.72,
          "commitsBetweenForRepo": 114,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private synchronized void addApplication(FiCaSchedulerApp application, User user) {\n+  private synchronized void addApplicationAttempt(FiCaSchedulerApp application, User user) {\n     // Accept \n     user.submitApplication();\n     pendingApplications.add(application);\n-    applicationsMap.put(application.getApplicationAttemptId(), application);\n+    applicationAttemptMap.put(application.getApplicationAttemptId(), application);\n \n     // Activate applications\n     activateApplications();\n     \n     LOG.info(\"Application added -\" +\n         \" appId: \" + application.getApplicationId() +\n         \" user: \" + user + \",\" + \" leaf-queue: \" + getQueueName() +\n         \" #user-pending-applications: \" + user.getPendingApplications() +\n         \" #user-active-applications: \" + user.getActiveApplications() +\n         \" #queue-pending-applications: \" + getNumPendingApplications() +\n         \" #queue-active-applications: \" + getNumActiveApplications()\n         );\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized void addApplicationAttempt(FiCaSchedulerApp application, User user) {\n    // Accept \n    user.submitApplication();\n    pendingApplications.add(application);\n    applicationAttemptMap.put(application.getApplicationAttemptId(), application);\n\n    // Activate applications\n    activateApplications();\n    \n    LOG.info(\"Application added -\" +\n        \" appId: \" + application.getApplicationId() +\n        \" user: \" + user + \",\" + \" leaf-queue: \" + getQueueName() +\n        \" #user-pending-applications: \" + user.getPendingApplications() +\n        \" #user-active-applications: \" + user.getActiveApplications() +\n        \" #queue-pending-applications: \" + getNumPendingApplications() +\n        \" #queue-active-applications: \" + getNumActiveApplications()\n        );\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "addApplication",
            "newValue": "addApplicationAttempt"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1493. Changed ResourceManager and Scheduler interfacing to recognize app-attempts separately from apps. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554896 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/01/14 12:19 PM",
          "commitName": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/12/13 7:09 PM",
          "commitNameOld": "e1d3670f4c233696dc673c37b578ce46b44a6876",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 25.72,
          "commitsBetweenForRepo": 114,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private synchronized void addApplication(FiCaSchedulerApp application, User user) {\n+  private synchronized void addApplicationAttempt(FiCaSchedulerApp application, User user) {\n     // Accept \n     user.submitApplication();\n     pendingApplications.add(application);\n-    applicationsMap.put(application.getApplicationAttemptId(), application);\n+    applicationAttemptMap.put(application.getApplicationAttemptId(), application);\n \n     // Activate applications\n     activateApplications();\n     \n     LOG.info(\"Application added -\" +\n         \" appId: \" + application.getApplicationId() +\n         \" user: \" + user + \",\" + \" leaf-queue: \" + getQueueName() +\n         \" #user-pending-applications: \" + user.getPendingApplications() +\n         \" #user-active-applications: \" + user.getActiveApplications() +\n         \" #queue-pending-applications: \" + getNumPendingApplications() +\n         \" #queue-active-applications: \" + getNumActiveApplications()\n         );\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized void addApplicationAttempt(FiCaSchedulerApp application, User user) {\n    // Accept \n    user.submitApplication();\n    pendingApplications.add(application);\n    applicationAttemptMap.put(application.getApplicationAttemptId(), application);\n\n    // Activate applications\n    activateApplications();\n    \n    LOG.info(\"Application added -\" +\n        \" appId: \" + application.getApplicationId() +\n        \" user: \" + user + \",\" + \" leaf-queue: \" + getQueueName() +\n        \" #user-pending-applications: \" + user.getPendingApplications() +\n        \" #user-active-applications: \" + user.getActiveApplications() +\n        \" #queue-pending-applications: \" + getNumPendingApplications() +\n        \" #queue-active-applications: \" + getNumActiveApplications()\n        );\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void addApplication(FiCaSchedulerApp application, User user) {\n    // Accept \n    user.submitApplication();\n    pendingApplications.add(application);\n    applicationsMap.put(application.getApplicationAttemptId(), application);\n\n    // Activate applications\n    activateApplications();\n    \n    LOG.info(\"Application added -\" +\n        \" appId: \" + application.getApplicationId() +\n        \" user: \" + user + \",\" + \" leaf-queue: \" + getQueueName() +\n        \" #user-pending-applications: \" + user.getPendingApplications() +\n        \" #user-active-applications: \" + user.getActiveApplications() +\n        \" #queue-pending-applications: \" + getNumPendingApplications() +\n        \" #queue-active-applications: \" + getNumActiveApplications()\n        );\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
      }
    },
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": {
      "type": "Yparameterchange",
      "commitMessage": "MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/12 6:43 PM",
      "commitName": "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "10/07/12 2:26 PM",
      "commitNameOld": "3bfb26ad3b5ac46f992a632541c97ca2bc897638",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 6.18,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n-  private synchronized void addApplication(SchedulerApp application, User user) {\n+  private synchronized void addApplication(FiCaSchedulerApp application, User user) {\n     // Accept \n     user.submitApplication();\n     pendingApplications.add(application);\n     applicationsMap.put(application.getApplicationAttemptId(), application);\n \n     // Activate applications\n     activateApplications();\n     \n     LOG.info(\"Application added -\" +\n         \" appId: \" + application.getApplicationId() +\n         \" user: \" + user + \",\" + \" leaf-queue: \" + getQueueName() +\n         \" #user-pending-applications: \" + user.getPendingApplications() +\n         \" #user-active-applications: \" + user.getActiveApplications() +\n         \" #queue-pending-applications: \" + getNumPendingApplications() +\n         \" #queue-active-applications: \" + getNumActiveApplications()\n         );\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addApplication(FiCaSchedulerApp application, User user) {\n    // Accept \n    user.submitApplication();\n    pendingApplications.add(application);\n    applicationsMap.put(application.getApplicationAttemptId(), application);\n\n    // Activate applications\n    activateApplications();\n    \n    LOG.info(\"Application added -\" +\n        \" appId: \" + application.getApplicationId() +\n        \" user: \" + user + \",\" + \" leaf-queue: \" + getQueueName() +\n        \" #user-pending-applications: \" + user.getPendingApplications() +\n        \" #user-active-applications: \" + user.getActiveApplications() +\n        \" #queue-pending-applications: \" + getNumPendingApplications() +\n        \" #queue-active-applications: \" + getNumActiveApplications()\n        );\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {
        "oldValue": "[application-SchedulerApp, user-User]",
        "newValue": "[application-FiCaSchedulerApp, user-User]"
      }
    },
    "6b608aad7d52b524fa94955a538e8b3524d42d93": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2697. Enhance CapacityScheduler to cap concurrently running applications per-queue \u0026 per-user.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165403 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/09/11 12:49 PM",
      "commitName": "6b608aad7d52b524fa94955a538e8b3524d42d93",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "31/08/11 12:52 PM",
      "commitNameOld": "b9a5fd51904a074a7a33f38266378f0f6f97b531",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 5.0,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,18 @@\n   private synchronized void addApplication(SchedulerApp application, User user) {\n     // Accept \n     user.submitApplication();\n-    applications.add(application);\n+    pendingApplications.add(application);\n     applicationsMap.put(application.getApplicationAttemptId(), application);\n \n+    // Activate applications\n+    activateApplications();\n+    \n     LOG.info(\"Application added -\" +\n         \" appId: \" + application.getApplicationId() +\n         \" user: \" + user + \",\" + \" leaf-queue: \" + getQueueName() +\n-        \" #user-applications: \" + user.getApplications() + \n-        \" #queue-applications: \" + getNumApplications());\n+        \" #user-pending-applications: \" + user.getPendingApplications() +\n+        \" #user-active-applications: \" + user.getActiveApplications() +\n+        \" #queue-pending-applications: \" + getNumPendingApplications() +\n+        \" #queue-active-applications: \" + getNumActiveApplications()\n+        );\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addApplication(SchedulerApp application, User user) {\n    // Accept \n    user.submitApplication();\n    pendingApplications.add(application);\n    applicationsMap.put(application.getApplicationAttemptId(), application);\n\n    // Activate applications\n    activateApplications();\n    \n    LOG.info(\"Application added -\" +\n        \" appId: \" + application.getApplicationId() +\n        \" user: \" + user + \",\" + \" leaf-queue: \" + getQueueName() +\n        \" #user-pending-applications: \" + user.getPendingApplications() +\n        \" #user-active-applications: \" + user.getActiveApplications() +\n        \" #queue-pending-applications: \" + getNumPendingApplications() +\n        \" #queue-active-applications: \" + getNumActiveApplications()\n        );\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void addApplication(SchedulerApp application, User user) {\n    // Accept \n    user.submitApplication();\n    applications.add(application);\n    applicationsMap.put(application.getApplicationAttemptId(), application);\n\n    LOG.info(\"Application added -\" +\n        \" appId: \" + application.getApplicationId() +\n        \" user: \" + user + \",\" + \" leaf-queue: \" + getQueueName() +\n        \" #user-applications: \" + user.getApplications() + \n        \" #queue-applications: \" + getNumApplications());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,12 @@\n+  private synchronized void addApplication(SchedulerApp application, User user) {\n+    // Accept \n+    user.submitApplication();\n+    applications.add(application);\n+    applicationsMap.put(application.getApplicationAttemptId(), application);\n+\n+    LOG.info(\"Application added -\" +\n+        \" appId: \" + application.getApplicationId() +\n+        \" user: \" + user + \",\" + \" leaf-queue: \" + getQueueName() +\n+        \" #user-applications: \" + user.getApplications() + \n+        \" #queue-applications: \" + getNumApplications());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void addApplication(SchedulerApp application, User user) {\n    // Accept \n    user.submitApplication();\n    applications.add(application);\n    applicationsMap.put(application.getApplicationAttemptId(), application);\n\n    LOG.info(\"Application added -\" +\n        \" appId: \" + application.getApplicationId() +\n        \" user: \" + user + \",\" + \" leaf-queue: \" + getQueueName() +\n        \" #user-applications: \" + user.getApplications() + \n        \" #queue-applications: \" + getNumApplications());\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
    }
  }
}