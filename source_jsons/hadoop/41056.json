{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSConfigToCSConfigConverter.java",
  "functionName": "checkPlacementPoliciesPresent",
  "functionId": "checkPlacementPoliciesPresent___scheduler-FairScheduler__inputYarnSiteConfig-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigConverter.java",
  "functionStartLine": 462,
  "functionEndLine": 490,
  "numCommitsSeen": 9,
  "timeTaken": 837,
  "changeHistory": [
    "a7d72c523ae9d23fad5f2fcc4b40610731ce454a"
  ],
  "changeHistoryShort": {
    "a7d72c523ae9d23fad5f2fcc4b40610731ce454a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a7d72c523ae9d23fad5f2fcc4b40610731ce454a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-10099. FS-CS converter: handle allow-undeclared-pools and user-as-default-queue properly and fix misc issues. Contributed by Peter Bacsko\n",
      "commitDate": "30/01/20 7:03 AM",
      "commitName": "a7d72c523ae9d23fad5f2fcc4b40610731ce454a",
      "commitAuthor": "Szilard Nemeth",
      "diff": "@@ -0,0 +1,29 @@\n+  private boolean checkPlacementPoliciesPresent(FairScheduler scheduler,\n+      Configuration inputYarnSiteConfig)\n+      throws RuntimeException {\n+\n+    try (AllocationFileLoaderService loader \u003d\n+        new AllocationFileLoaderService(scheduler)){\n+\n+      Path allocFilePath \u003d loader.getAllocationFile(inputYarnSiteConfig);\n+      FileSystem fs \u003d allocFilePath.getFileSystem(inputYarnSiteConfig);\n+\n+      DocumentBuilderFactory docBuilderFactory \u003d\n+          DocumentBuilderFactory.newInstance();\n+      DocumentBuilder builder \u003d docBuilderFactory.newDocumentBuilder();\n+      Document doc \u003d builder.parse(fs.open(allocFilePath));\n+      Element root \u003d doc.getDocumentElement();\n+\n+      NodeList elements \u003d root.getChildNodes();\n+\n+      AllocationFileParser allocationFileParser \u003d\n+          new AllocationFileParser(elements);\n+      allocationFileParser.parse();\n+      docBuilderFactory.setIgnoringComments(true);\n+\n+      return\n+          allocationFileParser.getQueuePlacementPolicy().isPresent();\n+    } catch (Exception e) {\n+      throw new PreconditionException(\"Unable to parse allocation file\", e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean checkPlacementPoliciesPresent(FairScheduler scheduler,\n      Configuration inputYarnSiteConfig)\n      throws RuntimeException {\n\n    try (AllocationFileLoaderService loader \u003d\n        new AllocationFileLoaderService(scheduler)){\n\n      Path allocFilePath \u003d loader.getAllocationFile(inputYarnSiteConfig);\n      FileSystem fs \u003d allocFilePath.getFileSystem(inputYarnSiteConfig);\n\n      DocumentBuilderFactory docBuilderFactory \u003d\n          DocumentBuilderFactory.newInstance();\n      DocumentBuilder builder \u003d docBuilderFactory.newDocumentBuilder();\n      Document doc \u003d builder.parse(fs.open(allocFilePath));\n      Element root \u003d doc.getDocumentElement();\n\n      NodeList elements \u003d root.getChildNodes();\n\n      AllocationFileParser allocationFileParser \u003d\n          new AllocationFileParser(elements);\n      allocationFileParser.parse();\n      docBuilderFactory.setIgnoringComments(true);\n\n      return\n          allocationFileParser.getQueuePlacementPolicy().isPresent();\n    } catch (Exception e) {\n      throw new PreconditionException(\"Unable to parse allocation file\", e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigConverter.java"
    }
  }
}