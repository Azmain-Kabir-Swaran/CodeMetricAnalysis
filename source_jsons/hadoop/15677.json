{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LightWeightHashSet.java",
  "functionName": "pollToArray",
  "functionId": "pollToArray___array-T[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/LightWeightHashSet.java",
  "functionStartLine": 390,
  "functionEndLine": 434,
  "numCommitsSeen": 9,
  "timeTaken": 1070,
  "changeHistory": [
    "9a3f147fdd5421460889b266ead3a2300323cda2"
  ],
  "changeHistoryShort": {
    "9a3f147fdd5421460889b266ead3a2300323cda2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9a3f147fdd5421460889b266ead3a2300323cda2": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2476. More CPU efficient data structure for under-replicated, over-replicated, and invalidated blocks. Contributed by Tomasz Nykiel.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1201991 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/11/11 5:13 PM",
      "commitName": "9a3f147fdd5421460889b266ead3a2300323cda2",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,45 @@\n+  public T[] pollToArray(T[] array) {\n+    int currentIndex \u003d 0;\n+    LinkedElement\u003cT\u003e current \u003d null;\n+\n+    if (array.length \u003d\u003d 0) {\n+      return array;\n+    }\n+    if (array.length \u003e size) {\n+      array \u003d (T[]) java.lang.reflect.Array.newInstance(array.getClass()\n+          .getComponentType(), size);\n+    }\n+    // do fast polling if the entire set needs to be fetched\n+    if (array.length \u003d\u003d size) {\n+      for (int i \u003d 0; i \u003c entries.length; i++) {\n+        current \u003d entries[i];\n+        while (current !\u003d null) {\n+          array[currentIndex++] \u003d current.element;\n+          current \u003d current.next;\n+        }\n+      }\n+      this.clear();\n+      return array;\n+    }\n+\n+    boolean done \u003d false;\n+    int currentBucketIndex \u003d 0;\n+\n+    while (!done) {\n+      current \u003d entries[currentBucketIndex];\n+      while (current !\u003d null) {\n+        array[currentIndex++] \u003d current.element;\n+        current \u003d current.next;\n+        entries[currentBucketIndex] \u003d current;\n+        size--;\n+        modification++;\n+        if (currentIndex \u003d\u003d array.length) {\n+          done \u003d true;\n+          break;\n+        }\n+      }\n+      currentBucketIndex++;\n+    }\n+    shrinkIfNecessary();\n+    return array;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public T[] pollToArray(T[] array) {\n    int currentIndex \u003d 0;\n    LinkedElement\u003cT\u003e current \u003d null;\n\n    if (array.length \u003d\u003d 0) {\n      return array;\n    }\n    if (array.length \u003e size) {\n      array \u003d (T[]) java.lang.reflect.Array.newInstance(array.getClass()\n          .getComponentType(), size);\n    }\n    // do fast polling if the entire set needs to be fetched\n    if (array.length \u003d\u003d size) {\n      for (int i \u003d 0; i \u003c entries.length; i++) {\n        current \u003d entries[i];\n        while (current !\u003d null) {\n          array[currentIndex++] \u003d current.element;\n          current \u003d current.next;\n        }\n      }\n      this.clear();\n      return array;\n    }\n\n    boolean done \u003d false;\n    int currentBucketIndex \u003d 0;\n\n    while (!done) {\n      current \u003d entries[currentBucketIndex];\n      while (current !\u003d null) {\n        array[currentIndex++] \u003d current.element;\n        current \u003d current.next;\n        entries[currentBucketIndex] \u003d current;\n        size--;\n        modification++;\n        if (currentIndex \u003d\u003d array.length) {\n          done \u003d true;\n          break;\n        }\n      }\n      currentBucketIndex++;\n    }\n    shrinkIfNecessary();\n    return array;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/LightWeightHashSet.java"
    }
  }
}