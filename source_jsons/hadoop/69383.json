{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SleepJob.java",
  "functionName": "setup",
  "functionId": "setup___context-Context",
  "sourceFilePath": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/SleepJob.java",
  "functionStartLine": 172,
  "functionEndLine": 198,
  "numCommitsSeen": 7,
  "timeTaken": 4734,
  "changeHistory": [
    "b133dc5700b66318ac6d80e463b049723c511f37",
    "dcf84707ab50662add112bd6b01c0bfd63374853",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "b133dc5700b66318ac6d80e463b049723c511f37": "Ybodychange",
    "dcf84707ab50662add112bd6b01c0bfd63374853": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b133dc5700b66318ac6d80e463b049723c511f37": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6967. gridmix/SleepReducer should use Time.monotonicNow for measuring durations. Contributed by Chetna Chaudhari\n",
      "commitDate": "22/09/17 1:21 PM",
      "commitName": "b133dc5700b66318ac6d80e463b049723c511f37",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "03/04/13 2:22 PM",
      "commitNameOld": "070916130a538968f8e01a1e895f3092d50983ae",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 1632.96,
      "commitsBetweenForRepo": 11740,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     protected void setup(Context context)\n     throws IOException, InterruptedException {\n       if (!context.nextKey() ||\n         context.getCurrentKey().getType() !\u003d GridmixKey.REDUCE_SPEC) {\n         throw new IOException(\"Missing reduce spec\");\n       }\n       for (NullWritable ignored : context.getValues()) {\n         final GridmixKey spec \u003d context.getCurrentKey();\n         duration +\u003d spec.getReduceOutputBytes();\n       }\n       long sleepInterval \u003d \n         context.getConfiguration().getLong(GRIDMIX_SLEEP_INTERVAL, 5);\n       final long RINTERVAL \u003d \n         TimeUnit.MILLISECONDS.convert(sleepInterval, TimeUnit.SECONDS);\n       //This is to stop accumulating deviation from expected sleep time\n       //over a period of time.\n-      long start \u003d System.currentTimeMillis();\n+      long start \u003d Time.monotonicNow();\n       long slept \u003d 0L;\n       long sleep \u003d 0L;\n       while (slept \u003c duration) {\n         final long rem \u003d duration - slept;\n         sleep \u003d Math.min(rem, RINTERVAL);\n         context.setStatus(\"Sleeping... \" + rem + \" ms left\");\n         TimeUnit.MILLISECONDS.sleep(sleep);\n-        slept \u003d System.currentTimeMillis() - start;\n+        slept \u003d Time.monotonicNow() - start;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setup(Context context)\n    throws IOException, InterruptedException {\n      if (!context.nextKey() ||\n        context.getCurrentKey().getType() !\u003d GridmixKey.REDUCE_SPEC) {\n        throw new IOException(\"Missing reduce spec\");\n      }\n      for (NullWritable ignored : context.getValues()) {\n        final GridmixKey spec \u003d context.getCurrentKey();\n        duration +\u003d spec.getReduceOutputBytes();\n      }\n      long sleepInterval \u003d \n        context.getConfiguration().getLong(GRIDMIX_SLEEP_INTERVAL, 5);\n      final long RINTERVAL \u003d \n        TimeUnit.MILLISECONDS.convert(sleepInterval, TimeUnit.SECONDS);\n      //This is to stop accumulating deviation from expected sleep time\n      //over a period of time.\n      long start \u003d Time.monotonicNow();\n      long slept \u003d 0L;\n      long sleep \u003d 0L;\n      while (slept \u003c duration) {\n        final long rem \u003d duration - slept;\n        sleep \u003d Math.min(rem, RINTERVAL);\n        context.setStatus(\"Sleeping... \" + rem + \" ms left\");\n        TimeUnit.MILLISECONDS.sleep(sleep);\n        slept \u003d Time.monotonicNow() - start;\n      }\n    }",
      "path": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/SleepJob.java",
      "extendedDetails": {}
    },
    "dcf84707ab50662add112bd6b01c0bfd63374853": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3543. Mavenize Gridmix. (tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1339629 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/05/12 8:06 AM",
      "commitName": "dcf84707ab50662add112bd6b01c0bfd63374853",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "17/05/12 7:20 AM",
      "commitNameOld": "e1f09365ca0bee093f849fcf2e546dd6e2c0a965",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected void setup(Context context)\n    throws IOException, InterruptedException {\n      if (!context.nextKey() ||\n        context.getCurrentKey().getType() !\u003d GridmixKey.REDUCE_SPEC) {\n        throw new IOException(\"Missing reduce spec\");\n      }\n      for (NullWritable ignored : context.getValues()) {\n        final GridmixKey spec \u003d context.getCurrentKey();\n        duration +\u003d spec.getReduceOutputBytes();\n      }\n      long sleepInterval \u003d \n        context.getConfiguration().getLong(GRIDMIX_SLEEP_INTERVAL, 5);\n      final long RINTERVAL \u003d \n        TimeUnit.MILLISECONDS.convert(sleepInterval, TimeUnit.SECONDS);\n      //This is to stop accumulating deviation from expected sleep time\n      //over a period of time.\n      long start \u003d System.currentTimeMillis();\n      long slept \u003d 0L;\n      long sleep \u003d 0L;\n      while (slept \u003c duration) {\n        final long rem \u003d duration - slept;\n        sleep \u003d Math.min(rem, RINTERVAL);\n        context.setStatus(\"Sleeping... \" + rem + \" ms left\");\n        TimeUnit.MILLISECONDS.sleep(sleep);\n        slept \u003d System.currentTimeMillis() - start;\n      }\n    }",
      "path": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/SleepJob.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/SleepJob.java",
        "newPath": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/SleepJob.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected void setup(Context context)\n    throws IOException, InterruptedException {\n      if (!context.nextKey() ||\n        context.getCurrentKey().getType() !\u003d GridmixKey.REDUCE_SPEC) {\n        throw new IOException(\"Missing reduce spec\");\n      }\n      for (NullWritable ignored : context.getValues()) {\n        final GridmixKey spec \u003d context.getCurrentKey();\n        duration +\u003d spec.getReduceOutputBytes();\n      }\n      long sleepInterval \u003d \n        context.getConfiguration().getLong(GRIDMIX_SLEEP_INTERVAL, 5);\n      final long RINTERVAL \u003d \n        TimeUnit.MILLISECONDS.convert(sleepInterval, TimeUnit.SECONDS);\n      //This is to stop accumulating deviation from expected sleep time\n      //over a period of time.\n      long start \u003d System.currentTimeMillis();\n      long slept \u003d 0L;\n      long sleep \u003d 0L;\n      while (slept \u003c duration) {\n        final long rem \u003d duration - slept;\n        sleep \u003d Math.min(rem, RINTERVAL);\n        context.setStatus(\"Sleeping... \" + rem + \" ms left\");\n        TimeUnit.MILLISECONDS.sleep(sleep);\n        slept \u003d System.currentTimeMillis() - start;\n      }\n    }",
      "path": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/SleepJob.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/SleepJob.java",
        "newPath": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/SleepJob.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected void setup(Context context)\n    throws IOException, InterruptedException {\n      if (!context.nextKey() ||\n        context.getCurrentKey().getType() !\u003d GridmixKey.REDUCE_SPEC) {\n        throw new IOException(\"Missing reduce spec\");\n      }\n      for (NullWritable ignored : context.getValues()) {\n        final GridmixKey spec \u003d context.getCurrentKey();\n        duration +\u003d spec.getReduceOutputBytes();\n      }\n      long sleepInterval \u003d \n        context.getConfiguration().getLong(GRIDMIX_SLEEP_INTERVAL, 5);\n      final long RINTERVAL \u003d \n        TimeUnit.MILLISECONDS.convert(sleepInterval, TimeUnit.SECONDS);\n      //This is to stop accumulating deviation from expected sleep time\n      //over a period of time.\n      long start \u003d System.currentTimeMillis();\n      long slept \u003d 0L;\n      long sleep \u003d 0L;\n      while (slept \u003c duration) {\n        final long rem \u003d duration - slept;\n        sleep \u003d Math.min(rem, RINTERVAL);\n        context.setStatus(\"Sleeping... \" + rem + \" ms left\");\n        TimeUnit.MILLISECONDS.sleep(sleep);\n        slept \u003d System.currentTimeMillis() - start;\n      }\n    }",
      "path": "hadoop-mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/SleepJob.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/SleepJob.java",
        "newPath": "hadoop-mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/SleepJob.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,27 @@\n+    protected void setup(Context context)\n+    throws IOException, InterruptedException {\n+      if (!context.nextKey() ||\n+        context.getCurrentKey().getType() !\u003d GridmixKey.REDUCE_SPEC) {\n+        throw new IOException(\"Missing reduce spec\");\n+      }\n+      for (NullWritable ignored : context.getValues()) {\n+        final GridmixKey spec \u003d context.getCurrentKey();\n+        duration +\u003d spec.getReduceOutputBytes();\n+      }\n+      long sleepInterval \u003d \n+        context.getConfiguration().getLong(GRIDMIX_SLEEP_INTERVAL, 5);\n+      final long RINTERVAL \u003d \n+        TimeUnit.MILLISECONDS.convert(sleepInterval, TimeUnit.SECONDS);\n+      //This is to stop accumulating deviation from expected sleep time\n+      //over a period of time.\n+      long start \u003d System.currentTimeMillis();\n+      long slept \u003d 0L;\n+      long sleep \u003d 0L;\n+      while (slept \u003c duration) {\n+        final long rem \u003d duration - slept;\n+        sleep \u003d Math.min(rem, RINTERVAL);\n+        context.setStatus(\"Sleeping... \" + rem + \" ms left\");\n+        TimeUnit.MILLISECONDS.sleep(sleep);\n+        slept \u003d System.currentTimeMillis() - start;\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setup(Context context)\n    throws IOException, InterruptedException {\n      if (!context.nextKey() ||\n        context.getCurrentKey().getType() !\u003d GridmixKey.REDUCE_SPEC) {\n        throw new IOException(\"Missing reduce spec\");\n      }\n      for (NullWritable ignored : context.getValues()) {\n        final GridmixKey spec \u003d context.getCurrentKey();\n        duration +\u003d spec.getReduceOutputBytes();\n      }\n      long sleepInterval \u003d \n        context.getConfiguration().getLong(GRIDMIX_SLEEP_INTERVAL, 5);\n      final long RINTERVAL \u003d \n        TimeUnit.MILLISECONDS.convert(sleepInterval, TimeUnit.SECONDS);\n      //This is to stop accumulating deviation from expected sleep time\n      //over a period of time.\n      long start \u003d System.currentTimeMillis();\n      long slept \u003d 0L;\n      long sleep \u003d 0L;\n      while (slept \u003c duration) {\n        final long rem \u003d duration - slept;\n        sleep \u003d Math.min(rem, RINTERVAL);\n        context.setStatus(\"Sleeping... \" + rem + \" ms left\");\n        TimeUnit.MILLISECONDS.sleep(sleep);\n        slept \u003d System.currentTimeMillis() - start;\n      }\n    }",
      "path": "mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/SleepJob.java"
    }
  }
}