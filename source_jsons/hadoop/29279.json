{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeHeartbeatResponsePBImpl.java",
  "functionName": "addAppCollectorsMapToProto",
  "functionId": "addAppCollectorsMapToProto",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
  "functionStartLine": 139,
  "functionEndLine": 157,
  "numCommitsSeen": 48,
  "timeTaken": 4169,
  "changeHistory": [
    "6a923464afa6b635f505be5d5b2414d47d570f99",
    "e276c75ec17634fc3b521fdb15b6ac141b001274",
    "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
    "78b7e070d8009c78665a2baa64fe888788f53e69",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438",
    "9b5636408005676ae580f8d929f8e912c27828e7"
  ],
  "changeHistoryShort": {
    "6a923464afa6b635f505be5d5b2414d47d570f99": "Ybodychange",
    "e276c75ec17634fc3b521fdb15b6ac141b001274": "Ybodychange",
    "7594d1de7bbc34cd2e64202095a5e1757154d7d0": "Ybodychange",
    "78b7e070d8009c78665a2baa64fe888788f53e69": "Ybodychange",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": "Ymultichange(Yrename,Ybodychange)",
    "9b5636408005676ae580f8d929f8e912c27828e7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6a923464afa6b635f505be5d5b2414d47d570f99": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6523. Optimize system credentials sent in node heartbeat responses. Contributed by Manikandan R\n",
      "commitDate": "08/01/19 2:54 PM",
      "commitName": "6a923464afa6b635f505be5d5b2414d47d570f99",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "20/12/18 6:56 PM",
      "commitNameOld": "f659485ee83f3f34e3717631983adfc8fa1e53dc",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 18.83,
      "commitsBetweenForRepo": 114,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   private void addAppCollectorsMapToProto() {\n     maybeInitBuilder();\n     builder.clearAppCollectors();\n     for (Map.Entry\u003cApplicationId, AppCollectorData\u003e entry\n         : appCollectorsMap.entrySet()) {\n       AppCollectorData data \u003d entry.getValue();\n       AppCollectorDataProto.Builder appCollectorDataBuilder \u003d\n           AppCollectorDataProto.newBuilder()\n-              .setAppId(convertToProtoFormat(entry.getKey()))\n+              .setAppId(ProtoUtils.convertToProtoFormat(entry.getKey()))\n               .setAppCollectorAddr(data.getCollectorAddr())\n               .setRmIdentifier(data.getRMIdentifier())\n               .setVersion(data.getVersion());\n       if (data.getCollectorToken() !\u003d null) {\n         appCollectorDataBuilder.setAppCollectorToken(\n             convertToProtoFormat(data.getCollectorToken()));\n       }\n       builder.addAppCollectors(appCollectorDataBuilder);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addAppCollectorsMapToProto() {\n    maybeInitBuilder();\n    builder.clearAppCollectors();\n    for (Map.Entry\u003cApplicationId, AppCollectorData\u003e entry\n        : appCollectorsMap.entrySet()) {\n      AppCollectorData data \u003d entry.getValue();\n      AppCollectorDataProto.Builder appCollectorDataBuilder \u003d\n          AppCollectorDataProto.newBuilder()\n              .setAppId(ProtoUtils.convertToProtoFormat(entry.getKey()))\n              .setAppCollectorAddr(data.getCollectorAddr())\n              .setRmIdentifier(data.getRMIdentifier())\n              .setVersion(data.getVersion());\n      if (data.getCollectorToken() !\u003d null) {\n        appCollectorDataBuilder.setAppCollectorToken(\n            convertToProtoFormat(data.getCollectorToken()));\n      }\n      builder.addAppCollectors(appCollectorDataBuilder);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "e276c75ec17634fc3b521fdb15b6ac141b001274": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7041. Nodemanager NPE running jobs with security off. Contributed by Varun Saxena.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "e276c75ec17634fc3b521fdb15b6ac141b001274",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,19 @@\n   private void addAppCollectorsMapToProto() {\n     maybeInitBuilder();\n     builder.clearAppCollectors();\n     for (Map.Entry\u003cApplicationId, AppCollectorData\u003e entry\n         : appCollectorsMap.entrySet()) {\n       AppCollectorData data \u003d entry.getValue();\n-      builder.addAppCollectors(AppCollectorDataProto.newBuilder()\n-          .setAppId(convertToProtoFormat(entry.getKey()))\n-          .setAppCollectorAddr(data.getCollectorAddr())\n-          .setAppCollectorToken(\n-              convertToProtoFormat(entry.getValue().getCollectorToken()))\n-          .setRmIdentifier(data.getRMIdentifier())\n-          .setVersion(data.getVersion()));\n+      AppCollectorDataProto.Builder appCollectorDataBuilder \u003d\n+          AppCollectorDataProto.newBuilder()\n+              .setAppId(convertToProtoFormat(entry.getKey()))\n+              .setAppCollectorAddr(data.getCollectorAddr())\n+              .setRmIdentifier(data.getRMIdentifier())\n+              .setVersion(data.getVersion());\n+      if (data.getCollectorToken() !\u003d null) {\n+        appCollectorDataBuilder.setAppCollectorToken(\n+            convertToProtoFormat(data.getCollectorToken()));\n+      }\n+      builder.addAppCollectors(appCollectorDataBuilder);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addAppCollectorsMapToProto() {\n    maybeInitBuilder();\n    builder.clearAppCollectors();\n    for (Map.Entry\u003cApplicationId, AppCollectorData\u003e entry\n        : appCollectorsMap.entrySet()) {\n      AppCollectorData data \u003d entry.getValue();\n      AppCollectorDataProto.Builder appCollectorDataBuilder \u003d\n          AppCollectorDataProto.newBuilder()\n              .setAppId(convertToProtoFormat(entry.getKey()))\n              .setAppCollectorAddr(data.getCollectorAddr())\n              .setRmIdentifier(data.getRMIdentifier())\n              .setVersion(data.getVersion());\n      if (data.getCollectorToken() !\u003d null) {\n        appCollectorDataBuilder.setAppCollectorToken(\n            convertToProtoFormat(data.getCollectorToken()));\n      }\n      builder.addAppCollectors(appCollectorDataBuilder);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "7594d1de7bbc34cd2e64202095a5e1757154d7d0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6130. [ATSv2 Security] Generate a delegation token for AM when app collector is created and pass it to AM via NM and RM. Contributed by Varun Saxena.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "78b7e070d8009c78665a2baa64fe888788f53e69",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n   private void addAppCollectorsMapToProto() {\n     maybeInitBuilder();\n     builder.clearAppCollectors();\n     for (Map.Entry\u003cApplicationId, AppCollectorData\u003e entry\n         : appCollectorsMap.entrySet()) {\n       AppCollectorData data \u003d entry.getValue();\n       builder.addAppCollectors(AppCollectorDataProto.newBuilder()\n           .setAppId(convertToProtoFormat(entry.getKey()))\n           .setAppCollectorAddr(data.getCollectorAddr())\n+          .setAppCollectorToken(\n+              convertToProtoFormat(entry.getValue().getCollectorToken()))\n           .setRmIdentifier(data.getRMIdentifier())\n           .setVersion(data.getVersion()));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addAppCollectorsMapToProto() {\n    maybeInitBuilder();\n    builder.clearAppCollectors();\n    for (Map.Entry\u003cApplicationId, AppCollectorData\u003e entry\n        : appCollectorsMap.entrySet()) {\n      AppCollectorData data \u003d entry.getValue();\n      builder.addAppCollectors(AppCollectorDataProto.newBuilder()\n          .setAppId(convertToProtoFormat(entry.getKey()))\n          .setAppCollectorAddr(data.getCollectorAddr())\n          .setAppCollectorToken(\n              convertToProtoFormat(entry.getValue().getCollectorToken()))\n          .setRmIdentifier(data.getRMIdentifier())\n          .setVersion(data.getVersion()));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "78b7e070d8009c78665a2baa64fe888788f53e69": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5638. Introduce a collector timestamp to uniquely identify collectors creation order in collector discovery. Contributed by Li Lu.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "78b7e070d8009c78665a2baa64fe888788f53e69",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "20/08/17 7:54 AM",
      "commitNameOld": "8410d862d3a72740f461ef91dddb5325955e1ca5",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 9.63,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,13 @@\n   private void addAppCollectorsMapToProto() {\n     maybeInitBuilder();\n-    builder.clearAppCollectorsMap();\n-    for (Map.Entry\u003cApplicationId, String\u003e entry : appCollectorsMap.entrySet()) {\n-      builder.addAppCollectorsMap(AppCollectorsMapProto.newBuilder()\n+    builder.clearAppCollectors();\n+    for (Map.Entry\u003cApplicationId, AppCollectorData\u003e entry\n+        : appCollectorsMap.entrySet()) {\n+      AppCollectorData data \u003d entry.getValue();\n+      builder.addAppCollectors(AppCollectorDataProto.newBuilder()\n           .setAppId(convertToProtoFormat(entry.getKey()))\n-          .setAppCollectorAddr(entry.getValue()));\n+          .setAppCollectorAddr(data.getCollectorAddr())\n+          .setRmIdentifier(data.getRMIdentifier())\n+          .setVersion(data.getVersion()));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addAppCollectorsMapToProto() {\n    maybeInitBuilder();\n    builder.clearAppCollectors();\n    for (Map.Entry\u003cApplicationId, AppCollectorData\u003e entry\n        : appCollectorsMap.entrySet()) {\n      AppCollectorData data \u003d entry.getValue();\n      builder.addAppCollectors(AppCollectorDataProto.newBuilder()\n          .setAppId(convertToProtoFormat(entry.getKey()))\n          .setAppCollectorAddr(data.getCollectorAddr())\n          .setRmIdentifier(data.getRMIdentifier())\n          .setVersion(data.getVersion()));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
      "extendedDetails": {}
    },
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-  private void addAppAggregatorsMapToProto() {\n+  private void addAppCollectorsMapToProto() {\n     maybeInitBuilder();\n-    builder.clearAppAggregatorsMap();\n-    for (Map.Entry\u003cApplicationId, String\u003e entry : appAggregatorsMap.entrySet()) {\n-      builder.addAppAggregatorsMap(AppAggregatorsMapProto.newBuilder()\n+    builder.clearAppCollectorsMap();\n+    for (Map.Entry\u003cApplicationId, String\u003e entry : appCollectorsMap.entrySet()) {\n+      builder.addAppCollectorsMap(AppCollectorsMapProto.newBuilder()\n         .setAppId(convertToProtoFormat(entry.getKey()))\n-        .setAppAggregatorAddr(entry.getValue()));\n+        .setAppCollectorAddr(entry.getValue()));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void addAppCollectorsMapToProto() {\n    maybeInitBuilder();\n    builder.clearAppCollectorsMap();\n    for (Map.Entry\u003cApplicationId, String\u003e entry : appCollectorsMap.entrySet()) {\n      builder.addAppCollectorsMap(AppCollectorsMapProto.newBuilder()\n        .setAppId(convertToProtoFormat(entry.getKey()))\n        .setAppCollectorAddr(entry.getValue()));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
          "extendedDetails": {
            "oldValue": "addAppAggregatorsMapToProto",
            "newValue": "addAppCollectorsMapToProto"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-  private void addAppAggregatorsMapToProto() {\n+  private void addAppCollectorsMapToProto() {\n     maybeInitBuilder();\n-    builder.clearAppAggregatorsMap();\n-    for (Map.Entry\u003cApplicationId, String\u003e entry : appAggregatorsMap.entrySet()) {\n-      builder.addAppAggregatorsMap(AppAggregatorsMapProto.newBuilder()\n+    builder.clearAppCollectorsMap();\n+    for (Map.Entry\u003cApplicationId, String\u003e entry : appCollectorsMap.entrySet()) {\n+      builder.addAppCollectorsMap(AppCollectorsMapProto.newBuilder()\n         .setAppId(convertToProtoFormat(entry.getKey()))\n-        .setAppAggregatorAddr(entry.getValue()));\n+        .setAppCollectorAddr(entry.getValue()));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void addAppCollectorsMapToProto() {\n    maybeInitBuilder();\n    builder.clearAppCollectorsMap();\n    for (Map.Entry\u003cApplicationId, String\u003e entry : appCollectorsMap.entrySet()) {\n      builder.addAppCollectorsMap(AppCollectorsMapProto.newBuilder()\n        .setAppId(convertToProtoFormat(entry.getKey()))\n        .setAppCollectorAddr(entry.getValue()));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "9b5636408005676ae580f8d929f8e912c27828e7": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3039. Implemented the app-level timeline aggregator discovery service. Contributed by Junping Du.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9b5636408005676ae580f8d929f8e912c27828e7",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,9 @@\n+  private void addAppAggregatorsMapToProto() {\n+    maybeInitBuilder();\n+    builder.clearAppAggregatorsMap();\n+    for (Map.Entry\u003cApplicationId, String\u003e entry : appAggregatorsMap.entrySet()) {\n+      builder.addAppAggregatorsMap(AppAggregatorsMapProto.newBuilder()\n+        .setAppId(convertToProtoFormat(entry.getKey()))\n+        .setAppAggregatorAddr(entry.getValue()));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addAppAggregatorsMapToProto() {\n    maybeInitBuilder();\n    builder.clearAppAggregatorsMap();\n    for (Map.Entry\u003cApplicationId, String\u003e entry : appAggregatorsMap.entrySet()) {\n      builder.addAppAggregatorsMap(AppAggregatorsMapProto.newBuilder()\n        .setAppId(convertToProtoFormat(entry.getKey()))\n        .setAppAggregatorAddr(entry.getValue()));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatResponsePBImpl.java"
    }
  }
}