{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSPreemptionThread.java",
  "functionName": "getBestPreemptableContainers",
  "functionId": "getBestPreemptableContainers___rr-ResourceRequest__potentialNodes-List__FSSchedulerNode__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSPreemptionThread.java",
  "functionStartLine": 251,
  "functionEndLine": 272,
  "numCommitsSeen": 14,
  "timeTaken": 967,
  "changeHistory": [
    "e89941fdbb3b382eeb487d32e5194909610ac334"
  ],
  "changeHistoryShort": {
    "e89941fdbb3b382eeb487d32e5194909610ac334": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e89941fdbb3b382eeb487d32e5194909610ac334": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9041. Performance Optimization of method FSPreemptionThread#identifyContainersToPreempt. Contributed by Wanqiang Ji.\n",
      "commitDate": "04/12/18 10:08 AM",
      "commitName": "e89941fdbb3b382eeb487d32e5194909610ac334",
      "commitAuthor": "Yufei Gu",
      "diff": "@@ -0,0 +1,22 @@\n+  private PreemptableContainers getBestPreemptableContainers(ResourceRequest rr,\n+      List\u003cFSSchedulerNode\u003e potentialNodes) {\n+    PreemptableContainers bestContainers \u003d\n+        identifyContainersToPreemptForOneContainer(potentialNodes, rr);\n+\n+    if (rr.getRelaxLocality()\n+        \u0026\u0026 !ResourceRequest.isAnyLocation(rr.getResourceName())\n+        \u0026\u0026 bestContainers !\u003d null\n+        \u0026\u0026 bestContainers.numAMContainers \u003e 0) {\n+      List\u003cFSSchedulerNode\u003e remainingNodes \u003d\n+          scheduler.getNodeTracker().getAllNodes();\n+      remainingNodes.removeAll(potentialNodes);\n+      PreemptableContainers spareContainers \u003d\n+          identifyContainersToPreemptForOneContainer(remainingNodes, rr);\n+      if (spareContainers !\u003d null \u0026\u0026 spareContainers.numAMContainers\n+          \u003c bestContainers.numAMContainers) {\n+        bestContainers \u003d spareContainers;\n+      }\n+    }\n+\n+    return bestContainers;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private PreemptableContainers getBestPreemptableContainers(ResourceRequest rr,\n      List\u003cFSSchedulerNode\u003e potentialNodes) {\n    PreemptableContainers bestContainers \u003d\n        identifyContainersToPreemptForOneContainer(potentialNodes, rr);\n\n    if (rr.getRelaxLocality()\n        \u0026\u0026 !ResourceRequest.isAnyLocation(rr.getResourceName())\n        \u0026\u0026 bestContainers !\u003d null\n        \u0026\u0026 bestContainers.numAMContainers \u003e 0) {\n      List\u003cFSSchedulerNode\u003e remainingNodes \u003d\n          scheduler.getNodeTracker().getAllNodes();\n      remainingNodes.removeAll(potentialNodes);\n      PreemptableContainers spareContainers \u003d\n          identifyContainersToPreemptForOneContainer(remainingNodes, rr);\n      if (spareContainers !\u003d null \u0026\u0026 spareContainers.numAMContainers\n          \u003c bestContainers.numAMContainers) {\n        bestContainers \u003d spareContainers;\n      }\n    }\n\n    return bestContainers;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSPreemptionThread.java"
    }
  }
}