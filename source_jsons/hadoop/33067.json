{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationImpl.java",
  "functionName": "buildAppProto",
  "functionId": "buildAppProto___app-ApplicationImpl",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/application/ApplicationImpl.java",
  "functionStartLine": 381,
  "functionEndLine": 426,
  "numCommitsSeen": 44,
  "timeTaken": 1704,
  "changeHistory": [
    "47474fffac085e0e5ea46336bf80ccd0677017a3",
    "e07519b8dbb96d73c48e910a4de12563c5c2f8aa"
  ],
  "changeHistoryShort": {
    "47474fffac085e0e5ea46336bf80ccd0677017a3": "Ybodychange",
    "e07519b8dbb96d73c48e910a4de12563c5c2f8aa": "Yintroduced"
  },
  "changeHistoryDetails": {
    "47474fffac085e0e5ea46336bf80ccd0677017a3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6555. Store application flow context in NM state store for work-preserving restart. (Rohith Sharma K S via Haibo Chen)\n",
      "commitDate": "25/05/17 9:15 PM",
      "commitName": "47474fffac085e0e5ea46336bf80ccd0677017a3",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "16/03/17 7:30 AM",
      "commitNameOld": "7114baddb627628a54cdab77f68504332a5a0e28",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 70.57,
      "commitsBetweenForRepo": 399,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,46 @@\n   static ContainerManagerApplicationProto buildAppProto(ApplicationImpl app)\n       throws IOException {\n     ContainerManagerApplicationProto.Builder builder \u003d\n         ContainerManagerApplicationProto.newBuilder();\n     builder.setId(((ApplicationIdPBImpl) app.appId).getProto());\n     builder.setUser(app.getUser());\n \n     if (app.logAggregationContext !\u003d null) {\n       builder.setLogAggregationContext((\n           (LogAggregationContextPBImpl)app.logAggregationContext).getProto());\n     }\n \n     builder.clearCredentials();\n     if (app.credentials !\u003d null) {\n       DataOutputBuffer dob \u003d new DataOutputBuffer();\n       app.credentials.writeTokenStorageToStream(dob);\n       builder.setCredentials(ByteString.copyFrom(dob.getData()));\n     }\n \n     builder.clearAcls();\n     if (app.applicationACLs !\u003d null) {\n       for (Map.Entry\u003cApplicationAccessType, String\u003e acl :  app\n           .applicationACLs.entrySet()) {\n         YarnProtos.ApplicationACLMapProto p \u003d YarnProtos\n             .ApplicationACLMapProto.newBuilder()\n             .setAccessType(ProtoUtils.convertToProtoFormat(acl.getKey()))\n             .setAcl(acl.getValue())\n             .build();\n         builder.addAcls(p);\n       }\n     }\n \n     builder.setAppLogAggregationInitedTime(app.applicationLogInitedTimestamp);\n \n+    builder.clearFlowContext();\n+    if (app.flowContext !\u003d null \u0026\u0026 app.flowContext.getFlowName() !\u003d null\n+        \u0026\u0026 app.flowContext.getFlowVersion() !\u003d null) {\n+      FlowContextProto fcp \u003d FlowContextProto.newBuilder()\n+          .setFlowName(app.flowContext.getFlowName())\n+          .setFlowVersion(app.flowContext.getFlowVersion())\n+          .setFlowRunId(app.flowContext.getFlowRunId()).build();\n+      builder.setFlowContext(fcp);\n+    }\n+\n     return builder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static ContainerManagerApplicationProto buildAppProto(ApplicationImpl app)\n      throws IOException {\n    ContainerManagerApplicationProto.Builder builder \u003d\n        ContainerManagerApplicationProto.newBuilder();\n    builder.setId(((ApplicationIdPBImpl) app.appId).getProto());\n    builder.setUser(app.getUser());\n\n    if (app.logAggregationContext !\u003d null) {\n      builder.setLogAggregationContext((\n          (LogAggregationContextPBImpl)app.logAggregationContext).getProto());\n    }\n\n    builder.clearCredentials();\n    if (app.credentials !\u003d null) {\n      DataOutputBuffer dob \u003d new DataOutputBuffer();\n      app.credentials.writeTokenStorageToStream(dob);\n      builder.setCredentials(ByteString.copyFrom(dob.getData()));\n    }\n\n    builder.clearAcls();\n    if (app.applicationACLs !\u003d null) {\n      for (Map.Entry\u003cApplicationAccessType, String\u003e acl :  app\n          .applicationACLs.entrySet()) {\n        YarnProtos.ApplicationACLMapProto p \u003d YarnProtos\n            .ApplicationACLMapProto.newBuilder()\n            .setAccessType(ProtoUtils.convertToProtoFormat(acl.getKey()))\n            .setAcl(acl.getValue())\n            .build();\n        builder.addAcls(p);\n      }\n    }\n\n    builder.setAppLogAggregationInitedTime(app.applicationLogInitedTimestamp);\n\n    builder.clearFlowContext();\n    if (app.flowContext !\u003d null \u0026\u0026 app.flowContext.getFlowName() !\u003d null\n        \u0026\u0026 app.flowContext.getFlowVersion() !\u003d null) {\n      FlowContextProto fcp \u003d FlowContextProto.newBuilder()\n          .setFlowName(app.flowContext.getFlowName())\n          .setFlowVersion(app.flowContext.getFlowVersion())\n          .setFlowRunId(app.flowContext.getFlowRunId()).build();\n      builder.setFlowContext(fcp);\n    }\n\n    return builder.build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/application/ApplicationImpl.java",
      "extendedDetails": {}
    },
    "e07519b8dbb96d73c48e910a4de12563c5c2f8aa": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4766. NM should not aggregate logs older than the retention policy (haibochen via rkanter)\n",
      "commitDate": "25/05/16 10:25 AM",
      "commitName": "e07519b8dbb96d73c48e910a4de12563c5c2f8aa",
      "commitAuthor": "Robert Kanter",
      "diff": "@@ -0,0 +1,36 @@\n+  static ContainerManagerApplicationProto buildAppProto(ApplicationImpl app)\n+      throws IOException {\n+    ContainerManagerApplicationProto.Builder builder \u003d\n+        ContainerManagerApplicationProto.newBuilder();\n+    builder.setId(((ApplicationIdPBImpl) app.appId).getProto());\n+    builder.setUser(app.getUser());\n+\n+    if (app.logAggregationContext !\u003d null) {\n+      builder.setLogAggregationContext((\n+          (LogAggregationContextPBImpl)app.logAggregationContext).getProto());\n+    }\n+\n+    builder.clearCredentials();\n+    if (app.credentials !\u003d null) {\n+      DataOutputBuffer dob \u003d new DataOutputBuffer();\n+      app.credentials.writeTokenStorageToStream(dob);\n+      builder.setCredentials(ByteString.copyFrom(dob.getData()));\n+    }\n+\n+    builder.clearAcls();\n+    if (app.applicationACLs !\u003d null) {\n+      for (Map.Entry\u003cApplicationAccessType, String\u003e acl :  app\n+          .applicationACLs.entrySet()) {\n+        YarnProtos.ApplicationACLMapProto p \u003d YarnProtos\n+            .ApplicationACLMapProto.newBuilder()\n+            .setAccessType(ProtoUtils.convertToProtoFormat(acl.getKey()))\n+            .setAcl(acl.getValue())\n+            .build();\n+        builder.addAcls(p);\n+      }\n+    }\n+\n+    builder.setAppLogAggregationInitedTime(app.applicationLogInitedTimestamp);\n+\n+    return builder.build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static ContainerManagerApplicationProto buildAppProto(ApplicationImpl app)\n      throws IOException {\n    ContainerManagerApplicationProto.Builder builder \u003d\n        ContainerManagerApplicationProto.newBuilder();\n    builder.setId(((ApplicationIdPBImpl) app.appId).getProto());\n    builder.setUser(app.getUser());\n\n    if (app.logAggregationContext !\u003d null) {\n      builder.setLogAggregationContext((\n          (LogAggregationContextPBImpl)app.logAggregationContext).getProto());\n    }\n\n    builder.clearCredentials();\n    if (app.credentials !\u003d null) {\n      DataOutputBuffer dob \u003d new DataOutputBuffer();\n      app.credentials.writeTokenStorageToStream(dob);\n      builder.setCredentials(ByteString.copyFrom(dob.getData()));\n    }\n\n    builder.clearAcls();\n    if (app.applicationACLs !\u003d null) {\n      for (Map.Entry\u003cApplicationAccessType, String\u003e acl :  app\n          .applicationACLs.entrySet()) {\n        YarnProtos.ApplicationACLMapProto p \u003d YarnProtos\n            .ApplicationACLMapProto.newBuilder()\n            .setAccessType(ProtoUtils.convertToProtoFormat(acl.getKey()))\n            .setAcl(acl.getValue())\n            .build();\n        builder.addAcls(p);\n      }\n    }\n\n    builder.setAppLogAggregationInitedTime(app.applicationLogInitedTimestamp);\n\n    return builder.build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/application/ApplicationImpl.java"
    }
  }
}