{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HttpFSFileSystem.java",
  "functionName": "getHomeDirectory",
  "functionId": "getHomeDirectory",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/client/HttpFSFileSystem.java",
  "functionStartLine": 870,
  "functionEndLine": 883,
  "numCommitsSeen": 51,
  "timeTaken": 1850,
  "changeHistory": [
    "70b218748badf079c859c3af2b468a0b7b49c333",
    "4d4560189adccb941a3dc5eee7add134adbf6519",
    "d263653ae22217439d1740c936d1c78e1644d73e",
    "f4711ef3ab4bb9676303d0aff79ff3d004f239ff",
    "3334306512b5dc932814fded31a89ba1ee97cd9f"
  ],
  "changeHistoryShort": {
    "70b218748badf079c859c3af2b468a0b7b49c333": "Ybodychange",
    "4d4560189adccb941a3dc5eee7add134adbf6519": "Ybodychange",
    "d263653ae22217439d1740c936d1c78e1644d73e": "Ybodychange",
    "f4711ef3ab4bb9676303d0aff79ff3d004f239ff": "Ybodychange",
    "3334306512b5dc932814fded31a89ba1ee97cd9f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "70b218748badf079c859c3af2b468a0b7b49c333": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11015. Http server/client utils to propagate and recreate Exceptions from server to client. (tucu)\n",
      "commitDate": "04/09/14 9:11 AM",
      "commitName": "70b218748badf079c859c3af2b468a0b7b49c333",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "07/08/14 9:58 PM",
      "commitNameOld": "be9c67930b57c516723d566625f9036a88a84055",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 27.47,
      "commitsBetweenForRepo": 206,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public Path getHomeDirectory() {\n     Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n     params.put(OP_PARAM, Operation.GETHOMEDIRECTORY.toString());\n     try {\n       HttpURLConnection conn \u003d\n         getConnection(Operation.GETHOMEDIRECTORY.getMethod(), params,\n                       new Path(getUri().toString(), \"/\"), false);\n-      HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n+      HttpExceptionUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n       JSONObject json \u003d (JSONObject) HttpFSUtils.jsonParse(conn);\n       return new Path((String) json.get(HOME_DIR_JSON));\n     } catch (IOException ex) {\n       throw new RuntimeException(ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Path getHomeDirectory() {\n    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n    params.put(OP_PARAM, Operation.GETHOMEDIRECTORY.toString());\n    try {\n      HttpURLConnection conn \u003d\n        getConnection(Operation.GETHOMEDIRECTORY.getMethod(), params,\n                      new Path(getUri().toString(), \"/\"), false);\n      HttpExceptionUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n      JSONObject json \u003d (JSONObject) HttpFSUtils.jsonParse(conn);\n      return new Path((String) json.get(HOME_DIR_JSON));\n    } catch (IOException ex) {\n      throw new RuntimeException(ex);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/client/HttpFSFileSystem.java",
      "extendedDetails": {}
    },
    "4d4560189adccb941a3dc5eee7add134adbf6519": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3113. httpfs does not support delegation tokens. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1365988 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/07/12 6:39 AM",
      "commitName": "4d4560189adccb941a3dc5eee7add134adbf6519",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "29/06/12 1:59 PM",
      "commitNameOld": "34605c9594770b204b28a809d8dbc0dae11ff0d1",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 26.69,
      "commitsBetweenForRepo": 161,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public Path getHomeDirectory() {\n     Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n     params.put(OP_PARAM, Operation.GETHOMEDIRECTORY.toString());\n     try {\n       HttpURLConnection conn \u003d\n         getConnection(Operation.GETHOMEDIRECTORY.getMethod(), params,\n                       new Path(getUri().toString(), \"/\"), false);\n-      validateResponse(conn, HttpURLConnection.HTTP_OK);\n-      JSONObject json \u003d (JSONObject) jsonParse(conn);\n+      HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n+      JSONObject json \u003d (JSONObject) HttpFSUtils.jsonParse(conn);\n       return new Path((String) json.get(HOME_DIR_JSON));\n     } catch (IOException ex) {\n       throw new RuntimeException(ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Path getHomeDirectory() {\n    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n    params.put(OP_PARAM, Operation.GETHOMEDIRECTORY.toString());\n    try {\n      HttpURLConnection conn \u003d\n        getConnection(Operation.GETHOMEDIRECTORY.getMethod(), params,\n                      new Path(getUri().toString(), \"/\"), false);\n      HttpFSUtils.validateResponse(conn, HttpURLConnection.HTTP_OK);\n      JSONObject json \u003d (JSONObject) HttpFSUtils.jsonParse(conn);\n      return new Path((String) json.get(HOME_DIR_JSON));\n    } catch (IOException ex) {\n      throw new RuntimeException(ex);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/client/HttpFSFileSystem.java",
      "extendedDetails": {}
    },
    "d263653ae22217439d1740c936d1c78e1644d73e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3481. Refactor HttpFS handling of JAX-RS query string parameters (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1354599 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/06/12 9:06 AM",
      "commitName": "d263653ae22217439d1740c936d1c78e1644d73e",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "24/04/12 6:46 AM",
      "commitNameOld": "f4711ef3ab4bb9676303d0aff79ff3d004f239ff",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 64.1,
      "commitsBetweenForRepo": 325,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,14 @@\n   public Path getHomeDirectory() {\n     Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n-    params.put(OP_PARAM, GetOpValues.GETHOMEDIRECTORY.toString());\n+    params.put(OP_PARAM, Operation.GETHOMEDIRECTORY.toString());\n     try {\n-      HttpURLConnection conn \u003d getConnection(HTTP_GET, params, new Path(getUri().toString(), \"/\"), false);\n+      HttpURLConnection conn \u003d\n+        getConnection(Operation.GETHOMEDIRECTORY.getMethod(), params,\n+                      new Path(getUri().toString(), \"/\"), false);\n       validateResponse(conn, HttpURLConnection.HTTP_OK);\n       JSONObject json \u003d (JSONObject) jsonParse(conn);\n       return new Path((String) json.get(HOME_DIR_JSON));\n     } catch (IOException ex) {\n       throw new RuntimeException(ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Path getHomeDirectory() {\n    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n    params.put(OP_PARAM, Operation.GETHOMEDIRECTORY.toString());\n    try {\n      HttpURLConnection conn \u003d\n        getConnection(Operation.GETHOMEDIRECTORY.getMethod(), params,\n                      new Path(getUri().toString(), \"/\"), false);\n      validateResponse(conn, HttpURLConnection.HTTP_OK);\n      JSONObject json \u003d (JSONObject) jsonParse(conn);\n      return new Path((String) json.get(HOME_DIR_JSON));\n    } catch (IOException ex) {\n      throw new RuntimeException(ex);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/client/HttpFSFileSystem.java",
      "extendedDetails": {}
    },
    "f4711ef3ab4bb9676303d0aff79ff3d004f239ff": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3314. HttpFS operation for getHomeDirectory is incorrect. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1329715 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/04/12 6:46 AM",
      "commitName": "f4711ef3ab4bb9676303d0aff79ff3d004f239ff",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "20/12/11 9:26 PM",
      "commitNameOld": "6b4f40cbf913c048fb33da6c5d8271cd77766d0a",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 125.35,
      "commitsBetweenForRepo": 886,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public Path getHomeDirectory() {\n     Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n-    params.put(OP_PARAM, GetOpValues.GETHOMEDIR.toString());\n+    params.put(OP_PARAM, GetOpValues.GETHOMEDIRECTORY.toString());\n     try {\n       HttpURLConnection conn \u003d getConnection(HTTP_GET, params, new Path(getUri().toString(), \"/\"), false);\n       validateResponse(conn, HttpURLConnection.HTTP_OK);\n       JSONObject json \u003d (JSONObject) jsonParse(conn);\n       return new Path((String) json.get(HOME_DIR_JSON));\n     } catch (IOException ex) {\n       throw new RuntimeException(ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Path getHomeDirectory() {\n    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n    params.put(OP_PARAM, GetOpValues.GETHOMEDIRECTORY.toString());\n    try {\n      HttpURLConnection conn \u003d getConnection(HTTP_GET, params, new Path(getUri().toString(), \"/\"), false);\n      validateResponse(conn, HttpURLConnection.HTTP_OK);\n      JSONObject json \u003d (JSONObject) jsonParse(conn);\n      return new Path((String) json.get(HOME_DIR_JSON));\n    } catch (IOException ex) {\n      throw new RuntimeException(ex);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/client/HttpFSFileSystem.java",
      "extendedDetails": {}
    },
    "3334306512b5dc932814fded31a89ba1ee97cd9f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2178. Contributing Hoop to HDFS, replacement for HDFS proxy with read/write capabilities. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212060 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/12/11 11:25 AM",
      "commitName": "3334306512b5dc932814fded31a89ba1ee97cd9f",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,12 @@\n+  public Path getHomeDirectory() {\n+    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n+    params.put(OP_PARAM, GetOpValues.GETHOMEDIR.toString());\n+    try {\n+      HttpURLConnection conn \u003d getConnection(HTTP_GET, params, new Path(getUri().toString(), \"/\"), false);\n+      validateResponse(conn, HttpURLConnection.HTTP_OK);\n+      JSONObject json \u003d (JSONObject) jsonParse(conn);\n+      return new Path((String) json.get(HOME_DIR_JSON));\n+    } catch (IOException ex) {\n+      throw new RuntimeException(ex);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Path getHomeDirectory() {\n    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n    params.put(OP_PARAM, GetOpValues.GETHOMEDIR.toString());\n    try {\n      HttpURLConnection conn \u003d getConnection(HTTP_GET, params, new Path(getUri().toString(), \"/\"), false);\n      validateResponse(conn, HttpURLConnection.HTTP_OK);\n      JSONObject json \u003d (JSONObject) jsonParse(conn);\n      return new Path((String) json.get(HOME_DIR_JSON));\n    } catch (IOException ex) {\n      throw new RuntimeException(ex);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/client/HttpFSFileSystem.java"
    }
  }
}