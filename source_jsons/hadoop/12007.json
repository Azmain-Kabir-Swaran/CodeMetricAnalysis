{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsDatasetImpl.java",
  "functionName": "validateBlockFile",
  "functionId": "validateBlockFile___bpid-String__blockId-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
  "functionStartLine": 2083,
  "functionEndLine": 2101,
  "numCommitsSeen": 197,
  "timeTaken": 7443,
  "changeHistory": [
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8",
    "603f3ef1386048111940b66f3a0750ab84d0588f",
    "86c9862bec0248d671e657aa56094a2919b8ac14",
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
    "b2d5ed36bcb80e2581191dcdc3976e825c959142"
  ],
  "changeHistoryShort": {
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8": "Ybodychange",
    "603f3ef1386048111940b66f3a0750ab84d0588f": "Ybodychange",
    "86c9862bec0248d671e657aa56094a2919b8ac14": "Ymultichange(Yreturntypechange,Ybodychange)",
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c": "Ybodychange",
    "b2d5ed36bcb80e2581191dcdc3976e825c959142": "Ybodychange"
  },
  "changeHistoryDetails": {
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15150. Introduce read write lock to Datanode. Contributed Stephen O\u0027Donnell.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "11/02/20 8:00 AM",
      "commitName": "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8",
      "commitAuthor": "Stephen O\u0027Donnell",
      "commitDateOld": "28/01/20 10:10 AM",
      "commitNameOld": "1839c467f60cbb8592d446694ec3d7710cda5142",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 13.91,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   ReplicaInfo validateBlockFile(String bpid, long blockId) {\n     //Should we check for metadata file too?\n     final ReplicaInfo r;\n-    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n+    try (AutoCloseableLock lock \u003d datasetWriteLock.acquire()) {\n       r \u003d volumeMap.get(bpid, blockId);\n     }\n     if (r !\u003d null) {\n       if (r.blockDataExists()) {\n         return r;\n       }\n       // if file is not null, but doesn\u0027t exist - possibly disk failed\n       datanode.checkDiskErrorAsync(r.getVolume());\n     }\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"blockId\u003d\" + blockId + \", replica\u003d\" + r);\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  ReplicaInfo validateBlockFile(String bpid, long blockId) {\n    //Should we check for metadata file too?\n    final ReplicaInfo r;\n    try (AutoCloseableLock lock \u003d datasetWriteLock.acquire()) {\n      r \u003d volumeMap.get(bpid, blockId);\n    }\n    if (r !\u003d null) {\n      if (r.blockDataExists()) {\n        return r;\n      }\n      // if file is not null, but doesn\u0027t exist - possibly disk failed\n      datanode.checkDiskErrorAsync(r.getVolume());\n    }\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"blockId\u003d\" + blockId + \", replica\u003d\" + r);\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "603f3ef1386048111940b66f3a0750ab84d0588f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11274. Datanode should only check the failed volume upon IO errors. Contributed by Xiaoyu Yao.\n",
      "commitDate": "28/12/16 10:08 PM",
      "commitName": "603f3ef1386048111940b66f3a0750ab84d0588f",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "20/12/16 1:53 PM",
      "commitNameOld": "f678080dbd25a218e0406463a3c3a1fc03680702",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 8.34,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   ReplicaInfo validateBlockFile(String bpid, long blockId) {\n     //Should we check for metadata file too?\n     final ReplicaInfo r;\n     try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n       r \u003d volumeMap.get(bpid, blockId);\n     }\n \n     if (r !\u003d null) {\n       if (r.blockDataExists()) {\n         return r;\n       }\n       // if file is not null, but doesn\u0027t exist - possibly disk failed\n-      datanode.checkDiskErrorAsync();\n+      datanode.checkDiskErrorAsync(r.getVolume());\n     }\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"blockId\u003d\" + blockId + \", replica\u003d\" + r);\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  ReplicaInfo validateBlockFile(String bpid, long blockId) {\n    //Should we check for metadata file too?\n    final ReplicaInfo r;\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      r \u003d volumeMap.get(bpid, blockId);\n    }\n\n    if (r !\u003d null) {\n      if (r.blockDataExists()) {\n        return r;\n      }\n      // if file is not null, but doesn\u0027t exist - possibly disk failed\n      datanode.checkDiskErrorAsync(r.getVolume());\n    }\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"blockId\u003d\" + blockId + \", replica\u003d\" + r);\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "86c9862bec0248d671e657aa56094a2919b8ac14": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "13/09/16 12:54 PM",
      "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthor": "Lei Xu",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
          "commitDate": "13/09/16 12:54 PM",
          "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "10/09/16 6:22 PM",
          "commitNameOld": "a99bf26a0899bcc4307c3a242c8414eaef555aa7",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 2.77,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  File validateBlockFile(String bpid, long blockId) {\n+  ReplicaInfo validateBlockFile(String bpid, long blockId) {\n     //Should we check for metadata file too?\n-    final File f;\n+    final ReplicaInfo r;\n     try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n-      f \u003d getFile(bpid, blockId, false);\n+      r \u003d volumeMap.get(bpid, blockId);\n     }\n-    \n-    if(f !\u003d null ) {\n-      if(f.exists())\n-        return f;\n-   \n+\n+    if (r !\u003d null) {\n+      if (r.blockDataExists()) {\n+        return r;\n+      }\n       // if file is not null, but doesn\u0027t exist - possibly disk failed\n       datanode.checkDiskErrorAsync();\n     }\n-    \n+\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"blockId\u003d\" + blockId + \", f\u003d\" + f);\n+      LOG.debug(\"blockId\u003d\" + blockId + \", replica\u003d\" + r);\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  ReplicaInfo validateBlockFile(String bpid, long blockId) {\n    //Should we check for metadata file too?\n    final ReplicaInfo r;\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      r \u003d volumeMap.get(bpid, blockId);\n    }\n\n    if (r !\u003d null) {\n      if (r.blockDataExists()) {\n        return r;\n      }\n      // if file is not null, but doesn\u0027t exist - possibly disk failed\n      datanode.checkDiskErrorAsync();\n    }\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"blockId\u003d\" + blockId + \", replica\u003d\" + r);\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldValue": "File",
            "newValue": "ReplicaInfo"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
          "commitDate": "13/09/16 12:54 PM",
          "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "10/09/16 6:22 PM",
          "commitNameOld": "a99bf26a0899bcc4307c3a242c8414eaef555aa7",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 2.77,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  File validateBlockFile(String bpid, long blockId) {\n+  ReplicaInfo validateBlockFile(String bpid, long blockId) {\n     //Should we check for metadata file too?\n-    final File f;\n+    final ReplicaInfo r;\n     try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n-      f \u003d getFile(bpid, blockId, false);\n+      r \u003d volumeMap.get(bpid, blockId);\n     }\n-    \n-    if(f !\u003d null ) {\n-      if(f.exists())\n-        return f;\n-   \n+\n+    if (r !\u003d null) {\n+      if (r.blockDataExists()) {\n+        return r;\n+      }\n       // if file is not null, but doesn\u0027t exist - possibly disk failed\n       datanode.checkDiskErrorAsync();\n     }\n-    \n+\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"blockId\u003d\" + blockId + \", f\u003d\" + f);\n+      LOG.debug(\"blockId\u003d\" + blockId + \", replica\u003d\" + r);\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  ReplicaInfo validateBlockFile(String bpid, long blockId) {\n    //Should we check for metadata file too?\n    final ReplicaInfo r;\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      r \u003d volumeMap.get(bpid, blockId);\n    }\n\n    if (r !\u003d null) {\n      if (r.blockDataExists()) {\n        return r;\n      }\n      // if file is not null, but doesn\u0027t exist - possibly disk failed\n      datanode.checkDiskErrorAsync();\n    }\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"blockId\u003d\" + blockId + \", replica\u003d\" + r);\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10682. Replace FsDatasetImpl object lock with a separate lock object. (Chen Liang)\n",
      "commitDate": "08/08/16 12:02 PM",
      "commitName": "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "08/07/16 7:40 PM",
      "commitNameOld": "da6f1b88dd47e22b24d44f6fc8bbee73e85746f7",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 30.68,
      "commitsBetweenForRepo": 320,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   File validateBlockFile(String bpid, long blockId) {\n     //Should we check for metadata file too?\n     final File f;\n-    synchronized(this) {\n+    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n       f \u003d getFile(bpid, blockId, false);\n     }\n     \n     if(f !\u003d null ) {\n       if(f.exists())\n         return f;\n    \n       // if file is not null, but doesn\u0027t exist - possibly disk failed\n       datanode.checkDiskErrorAsync();\n     }\n     \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"blockId\u003d\" + blockId + \", f\u003d\" + f);\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  File validateBlockFile(String bpid, long blockId) {\n    //Should we check for metadata file too?\n    final File f;\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      f \u003d getFile(bpid, blockId, false);\n    }\n    \n    if(f !\u003d null ) {\n      if(f.exists())\n        return f;\n   \n      // if file is not null, but doesn\u0027t exist - possibly disk failed\n      datanode.checkDiskErrorAsync();\n    }\n    \n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"blockId\u003d\" + blockId + \", f\u003d\" + f);\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "b2d5ed36bcb80e2581191dcdc3976e825c959142": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7100. Make eviction scheme pluggable. (Arpit Agarwal)\n",
      "commitDate": "20/09/14 1:25 PM",
      "commitName": "b2d5ed36bcb80e2581191dcdc3976e825c959142",
      "commitAuthor": "arp",
      "commitDateOld": "19/09/14 10:02 AM",
      "commitNameOld": "222bf0fe6706ee43964fd39b8315c1a339fbc84a",
      "commitAuthorOld": "",
      "daysBetweenCommits": 1.14,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   File validateBlockFile(String bpid, long blockId) {\n     //Should we check for metadata file too?\n     final File f;\n     synchronized(this) {\n-      f \u003d getFile(bpid, blockId);\n+      f \u003d getFile(bpid, blockId, false);\n     }\n     \n     if(f !\u003d null ) {\n       if(f.exists())\n         return f;\n    \n       // if file is not null, but doesn\u0027t exist - possibly disk failed\n       datanode.checkDiskErrorAsync();\n     }\n     \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"blockId\u003d\" + blockId + \", f\u003d\" + f);\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  File validateBlockFile(String bpid, long blockId) {\n    //Should we check for metadata file too?\n    final File f;\n    synchronized(this) {\n      f \u003d getFile(bpid, blockId, false);\n    }\n    \n    if(f !\u003d null ) {\n      if(f.exists())\n        return f;\n   \n      // if file is not null, but doesn\u0027t exist - possibly disk failed\n      datanode.checkDiskErrorAsync();\n    }\n    \n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"blockId\u003d\" + blockId + \", f\u003d\" + f);\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    }
  }
}