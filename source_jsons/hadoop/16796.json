{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NamenodeHeartbeatService.java",
  "functionName": "getRpcAddress",
  "functionId": "getRpcAddress___conf-Configuration__nsId-String__nnId-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/NamenodeHeartbeatService.java",
  "functionStartLine": 183,
  "functionEndLine": 213,
  "numCommitsSeen": 14,
  "timeTaken": 2088,
  "changeHistory": [
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "67785fe0063cfbfecab0e8deaae4a45d9c7c0073",
    "d8c81073320320a019fb3868be4f06f46aebea43"
  ],
  "changeHistoryShort": {
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "67785fe0063cfbfecab0e8deaae4a45d9c7c0073": "Ybodychange",
    "d8c81073320320a019fb3868be4f06f46aebea43": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static String getRpcAddress(\n      Configuration conf, String nsId, String nnId) {\n\n    // Get it from the regular RPC setting\n    String confKey \u003d DFSConfigKeys.DFS_NAMENODE_RPC_ADDRESS_KEY;\n    String ret \u003d conf.get(confKey);\n\n    if (nsId !\u003d null || nnId !\u003d null) {\n      // Get if for the proper nameservice and namenode\n      confKey \u003d DFSUtil.addKeySuffixes(confKey, nsId, nnId);\n      ret \u003d conf.get(confKey);\n\n      // If not available, get it from the map\n      if (ret \u003d\u003d null) {\n        Map\u003cString, InetSocketAddress\u003e rpcAddresses \u003d\n            DFSUtil.getRpcAddressesForNameserviceId(conf, nsId, null);\n        InetSocketAddress sockAddr \u003d null;\n        if (nnId !\u003d null) {\n          sockAddr \u003d rpcAddresses.get(nnId);\n        } else if (rpcAddresses.size() \u003d\u003d 1) {\n          // Get the only namenode in the namespace\n          sockAddr \u003d rpcAddresses.values().iterator().next();\n        }\n        if (sockAddr !\u003d null) {\n          InetAddress addr \u003d sockAddr.getAddress();\n          ret \u003d addr.getHostName() + \":\" + sockAddr.getPort();\n        }\n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/NamenodeHeartbeatService.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/NamenodeHeartbeatService.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/NamenodeHeartbeatService.java"
      }
    },
    "67785fe0063cfbfecab0e8deaae4a45d9c7c0073": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12450. Fixing TestNamenodeHeartbeat and support non-HA. Contributed by Inigo Goiri.\n\n(cherry picked from commit 928d1e87f9dbe64f89b858ccc1780723f3af58e7)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "67785fe0063cfbfecab0e8deaae4a45d9c7c0073",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "06/10/17 6:50 PM",
      "commitNameOld": "d8c81073320320a019fb3868be4f06f46aebea43",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,31 @@\n   private static String getRpcAddress(\n       Configuration conf, String nsId, String nnId) {\n \n     // Get it from the regular RPC setting\n     String confKey \u003d DFSConfigKeys.DFS_NAMENODE_RPC_ADDRESS_KEY;\n     String ret \u003d conf.get(confKey);\n \n-    if (nsId !\u003d null \u0026\u0026 nnId !\u003d null) {\n+    if (nsId !\u003d null || nnId !\u003d null) {\n       // Get if for the proper nameservice and namenode\n       confKey \u003d DFSUtil.addKeySuffixes(confKey, nsId, nnId);\n       ret \u003d conf.get(confKey);\n \n       // If not available, get it from the map\n       if (ret \u003d\u003d null) {\n         Map\u003cString, InetSocketAddress\u003e rpcAddresses \u003d\n             DFSUtil.getRpcAddressesForNameserviceId(conf, nsId, null);\n-        if (rpcAddresses.containsKey(nnId)) {\n-          InetSocketAddress sockAddr \u003d rpcAddresses.get(nnId);\n+        InetSocketAddress sockAddr \u003d null;\n+        if (nnId !\u003d null) {\n+          sockAddr \u003d rpcAddresses.get(nnId);\n+        } else if (rpcAddresses.size() \u003d\u003d 1) {\n+          // Get the only namenode in the namespace\n+          sockAddr \u003d rpcAddresses.values().iterator().next();\n+        }\n+        if (sockAddr !\u003d null) {\n           InetAddress addr \u003d sockAddr.getAddress();\n-          ret \u003d addr.getHostAddress() + \":\" + sockAddr.getPort();\n+          ret \u003d addr.getHostName() + \":\" + sockAddr.getPort();\n         }\n       }\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static String getRpcAddress(\n      Configuration conf, String nsId, String nnId) {\n\n    // Get it from the regular RPC setting\n    String confKey \u003d DFSConfigKeys.DFS_NAMENODE_RPC_ADDRESS_KEY;\n    String ret \u003d conf.get(confKey);\n\n    if (nsId !\u003d null || nnId !\u003d null) {\n      // Get if for the proper nameservice and namenode\n      confKey \u003d DFSUtil.addKeySuffixes(confKey, nsId, nnId);\n      ret \u003d conf.get(confKey);\n\n      // If not available, get it from the map\n      if (ret \u003d\u003d null) {\n        Map\u003cString, InetSocketAddress\u003e rpcAddresses \u003d\n            DFSUtil.getRpcAddressesForNameserviceId(conf, nsId, null);\n        InetSocketAddress sockAddr \u003d null;\n        if (nnId !\u003d null) {\n          sockAddr \u003d rpcAddresses.get(nnId);\n        } else if (rpcAddresses.size() \u003d\u003d 1) {\n          // Get the only namenode in the namespace\n          sockAddr \u003d rpcAddresses.values().iterator().next();\n        }\n        if (sockAddr !\u003d null) {\n          InetAddress addr \u003d sockAddr.getAddress();\n          ret \u003d addr.getHostName() + \":\" + sockAddr.getPort();\n        }\n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/NamenodeHeartbeatService.java",
      "extendedDetails": {}
    },
    "d8c81073320320a019fb3868be4f06f46aebea43": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11826. Federation Namenode Heartbeat. Contributed by Inigo Goiri.\n\n(cherry picked from commit 928f8dab52191e733984d37f47b69719ccf11313)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "d8c81073320320a019fb3868be4f06f46aebea43",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,25 @@\n+  private static String getRpcAddress(\n+      Configuration conf, String nsId, String nnId) {\n+\n+    // Get it from the regular RPC setting\n+    String confKey \u003d DFSConfigKeys.DFS_NAMENODE_RPC_ADDRESS_KEY;\n+    String ret \u003d conf.get(confKey);\n+\n+    if (nsId !\u003d null \u0026\u0026 nnId !\u003d null) {\n+      // Get if for the proper nameservice and namenode\n+      confKey \u003d DFSUtil.addKeySuffixes(confKey, nsId, nnId);\n+      ret \u003d conf.get(confKey);\n+\n+      // If not available, get it from the map\n+      if (ret \u003d\u003d null) {\n+        Map\u003cString, InetSocketAddress\u003e rpcAddresses \u003d\n+            DFSUtil.getRpcAddressesForNameserviceId(conf, nsId, null);\n+        if (rpcAddresses.containsKey(nnId)) {\n+          InetSocketAddress sockAddr \u003d rpcAddresses.get(nnId);\n+          InetAddress addr \u003d sockAddr.getAddress();\n+          ret \u003d addr.getHostAddress() + \":\" + sockAddr.getPort();\n+        }\n+      }\n+    }\n+    return ret;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static String getRpcAddress(\n      Configuration conf, String nsId, String nnId) {\n\n    // Get it from the regular RPC setting\n    String confKey \u003d DFSConfigKeys.DFS_NAMENODE_RPC_ADDRESS_KEY;\n    String ret \u003d conf.get(confKey);\n\n    if (nsId !\u003d null \u0026\u0026 nnId !\u003d null) {\n      // Get if for the proper nameservice and namenode\n      confKey \u003d DFSUtil.addKeySuffixes(confKey, nsId, nnId);\n      ret \u003d conf.get(confKey);\n\n      // If not available, get it from the map\n      if (ret \u003d\u003d null) {\n        Map\u003cString, InetSocketAddress\u003e rpcAddresses \u003d\n            DFSUtil.getRpcAddressesForNameserviceId(conf, nsId, null);\n        if (rpcAddresses.containsKey(nnId)) {\n          InetSocketAddress sockAddr \u003d rpcAddresses.get(nnId);\n          InetAddress addr \u003d sockAddr.getAddress();\n          ret \u003d addr.getHostAddress() + \":\" + sockAddr.getPort();\n        }\n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/NamenodeHeartbeatService.java"
    }
  }
}