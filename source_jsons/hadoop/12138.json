{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataNode.java",
  "functionName": "createBPRegistration",
  "functionId": "createBPRegistration___nsInfo-NamespaceInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
  "functionStartLine": 1578,
  "functionEndLine": 1594,
  "numCommitsSeen": 358,
  "timeTaken": 2022,
  "changeHistory": [
    "dfcb331ba3516264398121c9f23af3a79c0509cc"
  ],
  "changeHistoryShort": {
    "dfcb331ba3516264398121c9f23af3a79c0509cc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dfcb331ba3516264398121c9f23af3a79c0509cc": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13076: [SPS]: Addendum. Resolve conflicts after rebasing branch to trunk. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "dfcb331ba3516264398121c9f23af3a79c0509cc",
      "commitAuthor": "Rakesh Radhakrishnan",
      "diff": "@@ -0,0 +1,17 @@\n+  DatanodeRegistration createBPRegistration(NamespaceInfo nsInfo) {\n+    StorageInfo storageInfo \u003d storage.getBPStorage(nsInfo.getBlockPoolID());\n+    if (storageInfo \u003d\u003d null) {\n+      // it\u0027s null in the case of SimulatedDataSet\n+      storageInfo \u003d new StorageInfo(\n+          DataNodeLayoutVersion.CURRENT_LAYOUT_VERSION,\n+          nsInfo.getNamespaceID(), nsInfo.clusterID, nsInfo.getCTime(),\n+          NodeType.DATA_NODE);\n+    }\n+\n+    DatanodeID dnId \u003d new DatanodeID(\n+        streamingAddr.getAddress().getHostAddress(), hostName, \n+        storage.getDatanodeUuid(), getXferPort(), getInfoPort(),\n+            infoSecurePort, getIpcPort());\n+    return new DatanodeRegistration(dnId, storageInfo, \n+        new ExportedBlockKeys(), VersionInfo.getVersion());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  DatanodeRegistration createBPRegistration(NamespaceInfo nsInfo) {\n    StorageInfo storageInfo \u003d storage.getBPStorage(nsInfo.getBlockPoolID());\n    if (storageInfo \u003d\u003d null) {\n      // it\u0027s null in the case of SimulatedDataSet\n      storageInfo \u003d new StorageInfo(\n          DataNodeLayoutVersion.CURRENT_LAYOUT_VERSION,\n          nsInfo.getNamespaceID(), nsInfo.clusterID, nsInfo.getCTime(),\n          NodeType.DATA_NODE);\n    }\n\n    DatanodeID dnId \u003d new DatanodeID(\n        streamingAddr.getAddress().getHostAddress(), hostName, \n        storage.getDatanodeUuid(), getXferPort(), getInfoPort(),\n            infoSecurePort, getIpcPort());\n    return new DatanodeRegistration(dnId, storageInfo, \n        new ExportedBlockKeys(), VersionInfo.getVersion());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java"
    }
  }
}