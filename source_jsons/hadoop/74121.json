{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AccessControlList.java",
  "functionName": "buildACL",
  "functionId": "buildACL___userGroupStrings-String[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/AccessControlList.java",
  "functionStartLine": 105,
  "functionEndLine": 124,
  "numCommitsSeen": 24,
  "timeTaken": 2542,
  "changeHistory": [
    "dd268a64d36d27dbeeb775b92cb3664f4ed4fbdf",
    "00254d7b8c714ae2000d0934d260b23458033529",
    "b880b48b35cab46459473e17ee6ba9f750f428a7",
    "214aceb9f707b117b8dacdc4d53224d4445fd78d",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "23da8fe75e474f2ece36bc23c7368f12bc9a56cc",
    "4c940af71438361b47876ac681a974123652d01c"
  ],
  "changeHistoryShort": {
    "dd268a64d36d27dbeeb775b92cb3664f4ed4fbdf": "Ybodychange",
    "00254d7b8c714ae2000d0934d260b23458033529": "Ybodychange",
    "b880b48b35cab46459473e17ee6ba9f750f428a7": "Ymultichange(Yparameterchange,Ybodychange)",
    "214aceb9f707b117b8dacdc4d53224d4445fd78d": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "23da8fe75e474f2ece36bc23c7368f12bc9a56cc": "Ybodychange",
    "4c940af71438361b47876ac681a974123652d01c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dd268a64d36d27dbeeb775b92cb3664f4ed4fbdf": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-15836. Review of AccessControlList. Contributed by BELUGA BEHR.\"\n\nThis reverts commit 00254d7b8c714ae2000d0934d260b23458033529.\n",
      "commitDate": "23/10/18 9:23 AM",
      "commitName": "dd268a64d36d27dbeeb775b92cb3664f4ed4fbdf",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "19/10/18 1:57 PM",
      "commitNameOld": "00254d7b8c714ae2000d0934d260b23458033529",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 3.81,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,20 @@\n   private void buildACL(String[] userGroupStrings) {\n+    users \u003d new HashSet\u003cString\u003e();\n+    groups \u003d new HashSet\u003cString\u003e();\n     for (String aclPart : userGroupStrings) {\n       if (aclPart !\u003d null \u0026\u0026 isWildCardACLValue(aclPart)) {\n         allAllowed \u003d true;\n-        return;\n+        break;\n       }\n     }\n-    if (userGroupStrings.length \u003e\u003d 1 \u0026\u0026 userGroupStrings[0] !\u003d null) {\n-      String[] userList \u003d userGroupStrings[0].split(\",\");\n-      for (String user : userList) {\n-        if (StringUtils.isNotBlank(user)) {\n-          users.add(user.trim());\n-        }\n+    if (!allAllowed) {      \n+      if (userGroupStrings.length \u003e\u003d 1 \u0026\u0026 userGroupStrings[0] !\u003d null) {\n+        users \u003d StringUtils.getTrimmedStringCollection(userGroupStrings[0]);\n+      } \n+      \n+      if (userGroupStrings.length \u003d\u003d 2 \u0026\u0026 userGroupStrings[1] !\u003d null) {\n+        groups \u003d StringUtils.getTrimmedStringCollection(userGroupStrings[1]);\n+        groupsMapping.cacheGroupsAdd(new LinkedList\u003cString\u003e(groups));\n       }\n     }\n-    if (userGroupStrings.length \u003d\u003d 2 \u0026\u0026 userGroupStrings[1] !\u003d null) {\n-      String[] groupList \u003d userGroupStrings[1].split(\",\");\n-      for (String group : groupList) {\n-        if (StringUtils.isNotBlank(group)) {\n-          groups.add(group.trim());\n-        }\n-      }\n-      groupsMapping.cacheGroupsAdd(new ArrayList\u003c\u003e(groups));\n-    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void buildACL(String[] userGroupStrings) {\n    users \u003d new HashSet\u003cString\u003e();\n    groups \u003d new HashSet\u003cString\u003e();\n    for (String aclPart : userGroupStrings) {\n      if (aclPart !\u003d null \u0026\u0026 isWildCardACLValue(aclPart)) {\n        allAllowed \u003d true;\n        break;\n      }\n    }\n    if (!allAllowed) {      \n      if (userGroupStrings.length \u003e\u003d 1 \u0026\u0026 userGroupStrings[0] !\u003d null) {\n        users \u003d StringUtils.getTrimmedStringCollection(userGroupStrings[0]);\n      } \n      \n      if (userGroupStrings.length \u003d\u003d 2 \u0026\u0026 userGroupStrings[1] !\u003d null) {\n        groups \u003d StringUtils.getTrimmedStringCollection(userGroupStrings[1]);\n        groupsMapping.cacheGroupsAdd(new LinkedList\u003cString\u003e(groups));\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/AccessControlList.java",
      "extendedDetails": {}
    },
    "00254d7b8c714ae2000d0934d260b23458033529": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15836. Review of AccessControlList. Contributed by BELUGA BEHR.\n",
      "commitDate": "19/10/18 1:57 PM",
      "commitName": "00254d7b8c714ae2000d0934d260b23458033529",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "04/08/16 8:45 AM",
      "commitNameOld": "94225152399e6e89fa7b4cff6d17d33e544329a3",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 806.22,
      "commitsBetweenForRepo": 6204,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,25 @@\n   private void buildACL(String[] userGroupStrings) {\n-    users \u003d new HashSet\u003cString\u003e();\n-    groups \u003d new HashSet\u003cString\u003e();\n     for (String aclPart : userGroupStrings) {\n       if (aclPart !\u003d null \u0026\u0026 isWildCardACLValue(aclPart)) {\n         allAllowed \u003d true;\n-        break;\n+        return;\n       }\n     }\n-    if (!allAllowed) {      \n-      if (userGroupStrings.length \u003e\u003d 1 \u0026\u0026 userGroupStrings[0] !\u003d null) {\n-        users \u003d StringUtils.getTrimmedStringCollection(userGroupStrings[0]);\n-      } \n-      \n-      if (userGroupStrings.length \u003d\u003d 2 \u0026\u0026 userGroupStrings[1] !\u003d null) {\n-        groups \u003d StringUtils.getTrimmedStringCollection(userGroupStrings[1]);\n-        groupsMapping.cacheGroupsAdd(new LinkedList\u003cString\u003e(groups));\n+    if (userGroupStrings.length \u003e\u003d 1 \u0026\u0026 userGroupStrings[0] !\u003d null) {\n+      String[] userList \u003d userGroupStrings[0].split(\",\");\n+      for (String user : userList) {\n+        if (StringUtils.isNotBlank(user)) {\n+          users.add(user.trim());\n+        }\n       }\n     }\n+    if (userGroupStrings.length \u003d\u003d 2 \u0026\u0026 userGroupStrings[1] !\u003d null) {\n+      String[] groupList \u003d userGroupStrings[1].split(\",\");\n+      for (String group : groupList) {\n+        if (StringUtils.isNotBlank(group)) {\n+          groups.add(group.trim());\n+        }\n+      }\n+      groupsMapping.cacheGroupsAdd(new ArrayList\u003c\u003e(groups));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void buildACL(String[] userGroupStrings) {\n    for (String aclPart : userGroupStrings) {\n      if (aclPart !\u003d null \u0026\u0026 isWildCardACLValue(aclPart)) {\n        allAllowed \u003d true;\n        return;\n      }\n    }\n    if (userGroupStrings.length \u003e\u003d 1 \u0026\u0026 userGroupStrings[0] !\u003d null) {\n      String[] userList \u003d userGroupStrings[0].split(\",\");\n      for (String user : userList) {\n        if (StringUtils.isNotBlank(user)) {\n          users.add(user.trim());\n        }\n      }\n    }\n    if (userGroupStrings.length \u003d\u003d 2 \u0026\u0026 userGroupStrings[1] !\u003d null) {\n      String[] groupList \u003d userGroupStrings[1].split(\",\");\n      for (String group : groupList) {\n        if (StringUtils.isNotBlank(group)) {\n          groups.add(group.trim());\n        }\n      }\n      groupsMapping.cacheGroupsAdd(new ArrayList\u003c\u003e(groups));\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/AccessControlList.java",
      "extendedDetails": {}
    },
    "b880b48b35cab46459473e17ee6ba9f750f428a7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-10652. Refactor Proxyusers to use AccessControlList. (Contributed by Benoy Antony)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605145 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 10:51 AM",
      "commitName": "b880b48b35cab46459473e17ee6ba9f750f428a7",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-10652. Refactor Proxyusers to use AccessControlList. (Contributed by Benoy Antony)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605145 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/06/14 10:51 AM",
          "commitName": "b880b48b35cab46459473e17ee6ba9f750f428a7",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "23/06/14 4:15 PM",
          "commitNameOld": "214aceb9f707b117b8dacdc4d53224d4445fd78d",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.78,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,20 @@\n-  private void buildACL(String aclString) {\n+  private void buildACL(String[] userGroupStrings) {\n     users \u003d new HashSet\u003cString\u003e();\n     groups \u003d new HashSet\u003cString\u003e();\n-    if (isWildCardACLValue(aclString)) {\n-      allAllowed \u003d true;\n-    } else {\n-      allAllowed \u003d false;\n-      String[] userGroupStrings \u003d aclString.split(\" \", 2);\n-      \n-      if (userGroupStrings.length \u003e\u003d 1) {\n+    for (String aclPart : userGroupStrings) {\n+      if (aclPart !\u003d null \u0026\u0026 isWildCardACLValue(aclPart)) {\n+        allAllowed \u003d true;\n+        break;\n+      }\n+    }\n+    if (!allAllowed) {      \n+      if (userGroupStrings.length \u003e\u003d 1 \u0026\u0026 userGroupStrings[0] !\u003d null) {\n         users \u003d StringUtils.getTrimmedStringCollection(userGroupStrings[0]);\n       } \n       \n-      if (userGroupStrings.length \u003d\u003d 2) {\n+      if (userGroupStrings.length \u003d\u003d 2 \u0026\u0026 userGroupStrings[1] !\u003d null) {\n         groups \u003d StringUtils.getTrimmedStringCollection(userGroupStrings[1]);\n         groupsMapping.cacheGroupsAdd(new LinkedList\u003cString\u003e(groups));\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void buildACL(String[] userGroupStrings) {\n    users \u003d new HashSet\u003cString\u003e();\n    groups \u003d new HashSet\u003cString\u003e();\n    for (String aclPart : userGroupStrings) {\n      if (aclPart !\u003d null \u0026\u0026 isWildCardACLValue(aclPart)) {\n        allAllowed \u003d true;\n        break;\n      }\n    }\n    if (!allAllowed) {      \n      if (userGroupStrings.length \u003e\u003d 1 \u0026\u0026 userGroupStrings[0] !\u003d null) {\n        users \u003d StringUtils.getTrimmedStringCollection(userGroupStrings[0]);\n      } \n      \n      if (userGroupStrings.length \u003d\u003d 2 \u0026\u0026 userGroupStrings[1] !\u003d null) {\n        groups \u003d StringUtils.getTrimmedStringCollection(userGroupStrings[1]);\n        groupsMapping.cacheGroupsAdd(new LinkedList\u003cString\u003e(groups));\n      }\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/AccessControlList.java",
          "extendedDetails": {
            "oldValue": "[aclString-String]",
            "newValue": "[userGroupStrings-String[]]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10652. Refactor Proxyusers to use AccessControlList. (Contributed by Benoy Antony)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605145 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/06/14 10:51 AM",
          "commitName": "b880b48b35cab46459473e17ee6ba9f750f428a7",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "23/06/14 4:15 PM",
          "commitNameOld": "214aceb9f707b117b8dacdc4d53224d4445fd78d",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.78,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,20 @@\n-  private void buildACL(String aclString) {\n+  private void buildACL(String[] userGroupStrings) {\n     users \u003d new HashSet\u003cString\u003e();\n     groups \u003d new HashSet\u003cString\u003e();\n-    if (isWildCardACLValue(aclString)) {\n-      allAllowed \u003d true;\n-    } else {\n-      allAllowed \u003d false;\n-      String[] userGroupStrings \u003d aclString.split(\" \", 2);\n-      \n-      if (userGroupStrings.length \u003e\u003d 1) {\n+    for (String aclPart : userGroupStrings) {\n+      if (aclPart !\u003d null \u0026\u0026 isWildCardACLValue(aclPart)) {\n+        allAllowed \u003d true;\n+        break;\n+      }\n+    }\n+    if (!allAllowed) {      \n+      if (userGroupStrings.length \u003e\u003d 1 \u0026\u0026 userGroupStrings[0] !\u003d null) {\n         users \u003d StringUtils.getTrimmedStringCollection(userGroupStrings[0]);\n       } \n       \n-      if (userGroupStrings.length \u003d\u003d 2) {\n+      if (userGroupStrings.length \u003d\u003d 2 \u0026\u0026 userGroupStrings[1] !\u003d null) {\n         groups \u003d StringUtils.getTrimmedStringCollection(userGroupStrings[1]);\n         groupsMapping.cacheGroupsAdd(new LinkedList\u003cString\u003e(groups));\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void buildACL(String[] userGroupStrings) {\n    users \u003d new HashSet\u003cString\u003e();\n    groups \u003d new HashSet\u003cString\u003e();\n    for (String aclPart : userGroupStrings) {\n      if (aclPart !\u003d null \u0026\u0026 isWildCardACLValue(aclPart)) {\n        allAllowed \u003d true;\n        break;\n      }\n    }\n    if (!allAllowed) {      \n      if (userGroupStrings.length \u003e\u003d 1 \u0026\u0026 userGroupStrings[0] !\u003d null) {\n        users \u003d StringUtils.getTrimmedStringCollection(userGroupStrings[0]);\n      } \n      \n      if (userGroupStrings.length \u003d\u003d 2 \u0026\u0026 userGroupStrings[1] !\u003d null) {\n        groups \u003d StringUtils.getTrimmedStringCollection(userGroupStrings[1]);\n        groupsMapping.cacheGroupsAdd(new LinkedList\u003cString\u003e(groups));\n      }\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/AccessControlList.java",
          "extendedDetails": {}
        }
      ]
    },
    "214aceb9f707b117b8dacdc4d53224d4445fd78d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10659. Refactor AccessControlList to reuse utility functions and to improve performance. (Contributed by Benoy Antony)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1604955 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/06/14 4:15 PM",
      "commitName": "214aceb9f707b117b8dacdc4d53224d4445fd78d",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "24/08/12 6:03 PM",
      "commitNameOld": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 667.92,
      "commitsBetweenForRepo": 4137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,19 @@\n   private void buildACL(String aclString) {\n-    users \u003d new TreeSet\u003cString\u003e();\n-    groups \u003d new TreeSet\u003cString\u003e();\n+    users \u003d new HashSet\u003cString\u003e();\n+    groups \u003d new HashSet\u003cString\u003e();\n     if (isWildCardACLValue(aclString)) {\n       allAllowed \u003d true;\n     } else {\n       allAllowed \u003d false;\n       String[] userGroupStrings \u003d aclString.split(\" \", 2);\n-\n+      \n       if (userGroupStrings.length \u003e\u003d 1) {\n-        List\u003cString\u003e usersList \u003d new LinkedList\u003cString\u003e(\n-          Arrays.asList(userGroupStrings[0].split(\",\")));\n-        cleanupList(usersList);\n-        addToSet(users, usersList);\n-      }\n+        users \u003d StringUtils.getTrimmedStringCollection(userGroupStrings[0]);\n+      } \n       \n       if (userGroupStrings.length \u003d\u003d 2) {\n-        List\u003cString\u003e groupsList \u003d new LinkedList\u003cString\u003e(\n-          Arrays.asList(userGroupStrings[1].split(\",\")));\n-        cleanupList(groupsList);\n-        addToSet(groups, groupsList);\n-        groupsMapping.cacheGroupsAdd(groupsList);\n+        groups \u003d StringUtils.getTrimmedStringCollection(userGroupStrings[1]);\n+        groupsMapping.cacheGroupsAdd(new LinkedList\u003cString\u003e(groups));\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void buildACL(String aclString) {\n    users \u003d new HashSet\u003cString\u003e();\n    groups \u003d new HashSet\u003cString\u003e();\n    if (isWildCardACLValue(aclString)) {\n      allAllowed \u003d true;\n    } else {\n      allAllowed \u003d false;\n      String[] userGroupStrings \u003d aclString.split(\" \", 2);\n      \n      if (userGroupStrings.length \u003e\u003d 1) {\n        users \u003d StringUtils.getTrimmedStringCollection(userGroupStrings[0]);\n      } \n      \n      if (userGroupStrings.length \u003d\u003d 2) {\n        groups \u003d StringUtils.getTrimmedStringCollection(userGroupStrings[1]);\n        groupsMapping.cacheGroupsAdd(new LinkedList\u003cString\u003e(groups));\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/AccessControlList.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void buildACL(String aclString) {\n    users \u003d new TreeSet\u003cString\u003e();\n    groups \u003d new TreeSet\u003cString\u003e();\n    if (isWildCardACLValue(aclString)) {\n      allAllowed \u003d true;\n    } else {\n      allAllowed \u003d false;\n      String[] userGroupStrings \u003d aclString.split(\" \", 2);\n\n      if (userGroupStrings.length \u003e\u003d 1) {\n        List\u003cString\u003e usersList \u003d new LinkedList\u003cString\u003e(\n          Arrays.asList(userGroupStrings[0].split(\",\")));\n        cleanupList(usersList);\n        addToSet(users, usersList);\n      }\n      \n      if (userGroupStrings.length \u003d\u003d 2) {\n        List\u003cString\u003e groupsList \u003d new LinkedList\u003cString\u003e(\n          Arrays.asList(userGroupStrings[1].split(\",\")));\n        cleanupList(groupsList);\n        addToSet(groups, groupsList);\n        groupsMapping.cacheGroupsAdd(groupsList);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/AccessControlList.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/security/authorize/AccessControlList.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/AccessControlList.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void buildACL(String aclString) {\n    users \u003d new TreeSet\u003cString\u003e();\n    groups \u003d new TreeSet\u003cString\u003e();\n    if (isWildCardACLValue(aclString)) {\n      allAllowed \u003d true;\n    } else {\n      allAllowed \u003d false;\n      String[] userGroupStrings \u003d aclString.split(\" \", 2);\n\n      if (userGroupStrings.length \u003e\u003d 1) {\n        List\u003cString\u003e usersList \u003d new LinkedList\u003cString\u003e(\n          Arrays.asList(userGroupStrings[0].split(\",\")));\n        cleanupList(usersList);\n        addToSet(users, usersList);\n      }\n      \n      if (userGroupStrings.length \u003d\u003d 2) {\n        List\u003cString\u003e groupsList \u003d new LinkedList\u003cString\u003e(\n          Arrays.asList(userGroupStrings[1].split(\",\")));\n        cleanupList(groupsList);\n        addToSet(groups, groupsList);\n        groupsMapping.cacheGroupsAdd(groupsList);\n      }\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/security/authorize/AccessControlList.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/security/authorize/AccessControlList.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/security/authorize/AccessControlList.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void buildACL(String aclString) {\n    users \u003d new TreeSet\u003cString\u003e();\n    groups \u003d new TreeSet\u003cString\u003e();\n    if (isWildCardACLValue(aclString)) {\n      allAllowed \u003d true;\n    } else {\n      allAllowed \u003d false;\n      String[] userGroupStrings \u003d aclString.split(\" \", 2);\n\n      if (userGroupStrings.length \u003e\u003d 1) {\n        List\u003cString\u003e usersList \u003d new LinkedList\u003cString\u003e(\n          Arrays.asList(userGroupStrings[0].split(\",\")));\n        cleanupList(usersList);\n        addToSet(users, usersList);\n      }\n      \n      if (userGroupStrings.length \u003d\u003d 2) {\n        List\u003cString\u003e groupsList \u003d new LinkedList\u003cString\u003e(\n          Arrays.asList(userGroupStrings[1].split(\",\")));\n        cleanupList(groupsList);\n        addToSet(groups, groupsList);\n        groupsMapping.cacheGroupsAdd(groupsList);\n      }\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/security/authorize/AccessControlList.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/security/authorize/AccessControlList.java",
        "newPath": "common/src/java/org/apache/hadoop/security/authorize/AccessControlList.java"
      }
    },
    "23da8fe75e474f2ece36bc23c7368f12bc9a56cc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6864. Provide a JNI-based implementation of ShellBasedUnixGroupsNetgroupMapping (implementation of GroupMappingServiceProvider)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1052420 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/12/10 4:45 PM",
      "commitName": "23da8fe75e474f2ece36bc23c7368f12bc9a56cc",
      "commitAuthor": "Boris Shkolnik",
      "commitDateOld": "17/09/10 12:25 AM",
      "commitNameOld": "e9c1efd4cccab19048653280afcbcc946548b557",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 97.72,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   private void buildACL(String aclString) {\n     users \u003d new TreeSet\u003cString\u003e();\n     groups \u003d new TreeSet\u003cString\u003e();\n     if (isWildCardACLValue(aclString)) {\n       allAllowed \u003d true;\n     } else {\n       allAllowed \u003d false;\n       String[] userGroupStrings \u003d aclString.split(\" \", 2);\n-      \n+\n       if (userGroupStrings.length \u003e\u003d 1) {\n-        String[] usersStr \u003d userGroupStrings[0].split(\",\");\n-        if (usersStr.length \u003e\u003d 1) {\n-          addToSet(users, usersStr);\n-        }\n+        List\u003cString\u003e usersList \u003d new LinkedList\u003cString\u003e(\n+          Arrays.asList(userGroupStrings[0].split(\",\")));\n+        cleanupList(usersList);\n+        addToSet(users, usersList);\n       }\n       \n       if (userGroupStrings.length \u003d\u003d 2) {\n-        String[] groupsStr \u003d userGroupStrings[1].split(\",\");\n-        if (groupsStr.length \u003e\u003d 1) {\n-          addToSet(groups, groupsStr);\n-        }\n+        List\u003cString\u003e groupsList \u003d new LinkedList\u003cString\u003e(\n+          Arrays.asList(userGroupStrings[1].split(\",\")));\n+        cleanupList(groupsList);\n+        addToSet(groups, groupsList);\n+        groupsMapping.cacheGroupsAdd(groupsList);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void buildACL(String aclString) {\n    users \u003d new TreeSet\u003cString\u003e();\n    groups \u003d new TreeSet\u003cString\u003e();\n    if (isWildCardACLValue(aclString)) {\n      allAllowed \u003d true;\n    } else {\n      allAllowed \u003d false;\n      String[] userGroupStrings \u003d aclString.split(\" \", 2);\n\n      if (userGroupStrings.length \u003e\u003d 1) {\n        List\u003cString\u003e usersList \u003d new LinkedList\u003cString\u003e(\n          Arrays.asList(userGroupStrings[0].split(\",\")));\n        cleanupList(usersList);\n        addToSet(users, usersList);\n      }\n      \n      if (userGroupStrings.length \u003d\u003d 2) {\n        List\u003cString\u003e groupsList \u003d new LinkedList\u003cString\u003e(\n          Arrays.asList(userGroupStrings[1].split(\",\")));\n        cleanupList(groupsList);\n        addToSet(groups, groupsList);\n        groupsMapping.cacheGroupsAdd(groupsList);\n      }\n    }\n  }",
      "path": "src/java/org/apache/hadoop/security/authorize/AccessControlList.java",
      "extendedDetails": {}
    },
    "4c940af71438361b47876ac681a974123652d01c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6715. Fixes AccessControlList.toString() to return a descriptive String representation of the ACL. Contributed by Ravi Gummadi\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@984652 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/08/10 11:34 PM",
      "commitName": "4c940af71438361b47876ac681a974123652d01c",
      "commitAuthor": "Amareshwari Sri Ramadasu",
      "diff": "@@ -0,0 +1,24 @@\n+  private void buildACL(String aclString) {\n+    users \u003d new TreeSet\u003cString\u003e();\n+    groups \u003d new TreeSet\u003cString\u003e();\n+    if (isWildCardACLValue(aclString)) {\n+      allAllowed \u003d true;\n+    } else {\n+      allAllowed \u003d false;\n+      String[] userGroupStrings \u003d aclString.split(\" \", 2);\n+      \n+      if (userGroupStrings.length \u003e\u003d 1) {\n+        String[] usersStr \u003d userGroupStrings[0].split(\",\");\n+        if (usersStr.length \u003e\u003d 1) {\n+          addToSet(users, usersStr);\n+        }\n+      }\n+      \n+      if (userGroupStrings.length \u003d\u003d 2) {\n+        String[] groupsStr \u003d userGroupStrings[1].split(\",\");\n+        if (groupsStr.length \u003e\u003d 1) {\n+          addToSet(groups, groupsStr);\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void buildACL(String aclString) {\n    users \u003d new TreeSet\u003cString\u003e();\n    groups \u003d new TreeSet\u003cString\u003e();\n    if (isWildCardACLValue(aclString)) {\n      allAllowed \u003d true;\n    } else {\n      allAllowed \u003d false;\n      String[] userGroupStrings \u003d aclString.split(\" \", 2);\n      \n      if (userGroupStrings.length \u003e\u003d 1) {\n        String[] usersStr \u003d userGroupStrings[0].split(\",\");\n        if (usersStr.length \u003e\u003d 1) {\n          addToSet(users, usersStr);\n        }\n      }\n      \n      if (userGroupStrings.length \u003d\u003d 2) {\n        String[] groupsStr \u003d userGroupStrings[1].split(\",\");\n        if (groupsStr.length \u003e\u003d 1) {\n          addToSet(groups, groupsStr);\n        }\n      }\n    }\n  }",
      "path": "src/java/org/apache/hadoop/security/authorize/AccessControlList.java"
    }
  }
}