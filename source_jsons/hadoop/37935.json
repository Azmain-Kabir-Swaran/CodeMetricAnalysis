{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceTrackerService.java",
  "functionName": "unRegisterNodeManager",
  "functionId": "unRegisterNodeManager___request-UnRegisterNodeManagerRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java",
  "functionStartLine": 855,
  "functionEndLine": 872,
  "numCommitsSeen": 98,
  "timeTaken": 1856,
  "changeHistory": [
    "d7e7f6aa03c67b6a6ccf664adcb06d90bc963e58"
  ],
  "changeHistoryShort": {
    "d7e7f6aa03c67b6a6ccf664adcb06d90bc963e58": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d7e7f6aa03c67b6a6ccf664adcb06d90bc963e58": {
      "type": "Yintroduced",
      "commitMessage": "YARN-41. The RM should handle the graceful shutdown of the NM. Contributed by Devaraj K.\n",
      "commitDate": "04/06/15 4:59 AM",
      "commitName": "d7e7f6aa03c67b6a6ccf664adcb06d90bc963e58",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,18 @@\n+  public UnRegisterNodeManagerResponse unRegisterNodeManager(\n+      UnRegisterNodeManagerRequest request) throws YarnException, IOException {\n+    UnRegisterNodeManagerResponse response \u003d recordFactory\n+        .newRecordInstance(UnRegisterNodeManagerResponse.class);\n+    NodeId nodeId \u003d request.getNodeId();\n+    RMNode rmNode \u003d this.rmContext.getRMNodes().get(nodeId);\n+    if (rmNode \u003d\u003d null) {\n+      LOG.info(\"Node not found, ignoring the unregister from node id : \"\n+          + nodeId);\n+      return response;\n+    }\n+    LOG.info(\"Node with node id : \" + nodeId\n+        + \" has shutdown, hence unregistering the node.\");\n+    this.nmLivelinessMonitor.unregister(nodeId);\n+    this.rmContext.getDispatcher().getEventHandler()\n+        .handle(new RMNodeEvent(nodeId, RMNodeEventType.SHUTDOWN));\n+    return response;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public UnRegisterNodeManagerResponse unRegisterNodeManager(\n      UnRegisterNodeManagerRequest request) throws YarnException, IOException {\n    UnRegisterNodeManagerResponse response \u003d recordFactory\n        .newRecordInstance(UnRegisterNodeManagerResponse.class);\n    NodeId nodeId \u003d request.getNodeId();\n    RMNode rmNode \u003d this.rmContext.getRMNodes().get(nodeId);\n    if (rmNode \u003d\u003d null) {\n      LOG.info(\"Node not found, ignoring the unregister from node id : \"\n          + nodeId);\n      return response;\n    }\n    LOG.info(\"Node with node id : \" + nodeId\n        + \" has shutdown, hence unregistering the node.\");\n    this.nmLivelinessMonitor.unregister(nodeId);\n    this.rmContext.getDispatcher().getEventHandler()\n        .handle(new RMNodeEvent(nodeId, RMNodeEventType.SHUTDOWN));\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java"
    }
  }
}