{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FifoScheduler.java",
  "functionName": "getQueueInfo",
  "functionId": "getQueueInfo___includeChildQueues-boolean__recursive-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
  "functionStartLine": 140,
  "functionEndLine": 156,
  "numCommitsSeen": 137,
  "timeTaken": 9111,
  "changeHistory": [
    "42f90ab885d9693fcc1e52f9637f7de4111110ae",
    "20d389ce61eaacb5ddfb329015f50e96ad894f8d",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "73a72e0ef97f166a4588506cd255f37eca769def",
    "6a9624dcec1c539ff169732c490485f7b8458abf",
    "035937bee8ef57bc24b08068e7375ac45413a349",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": "Ybodychange",
    "20d389ce61eaacb5ddfb329015f50e96ad894f8d": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "73a72e0ef97f166a4588506cd255f37eca769def": "Ybodychange",
    "6a9624dcec1c539ff169732c490485f7b8458abf": "Ybodychange",
    "035937bee8ef57bc24b08068e7375ac45413a349": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
      "commitDate": "29/05/16 8:54 AM",
      "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "05/05/16 12:56 PM",
      "commitNameOld": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 23.83,
      "commitsBetweenForRepo": 173,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     public QueueInfo getQueueInfo( \n         boolean includeChildQueues, boolean recursive) {\n       QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n       queueInfo.setQueueName(DEFAULT_QUEUE.getQueueName());\n       queueInfo.setCapacity(1.0f);\n       Resource clusterResource \u003d getClusterResource();\n-      if (clusterResource.getMemory() \u003d\u003d 0) {\n+      if (clusterResource.getMemorySize() \u003d\u003d 0) {\n         queueInfo.setCurrentCapacity(0.0f);\n       } else {\n-        queueInfo.setCurrentCapacity((float) usedResource.getMemory()\n-            / clusterResource.getMemory());\n+        queueInfo.setCurrentCapacity((float) usedResource.getMemorySize()\n+            / clusterResource.getMemorySize());\n       }\n       queueInfo.setMaximumCapacity(1.0f);\n       queueInfo.setChildQueues(new ArrayList\u003cQueueInfo\u003e());\n       queueInfo.setQueueState(QueueState.RUNNING);\n       return queueInfo;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public QueueInfo getQueueInfo( \n        boolean includeChildQueues, boolean recursive) {\n      QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n      queueInfo.setQueueName(DEFAULT_QUEUE.getQueueName());\n      queueInfo.setCapacity(1.0f);\n      Resource clusterResource \u003d getClusterResource();\n      if (clusterResource.getMemorySize() \u003d\u003d 0) {\n        queueInfo.setCurrentCapacity(0.0f);\n      } else {\n        queueInfo.setCurrentCapacity((float) usedResource.getMemorySize()\n            / clusterResource.getMemorySize());\n      }\n      queueInfo.setMaximumCapacity(1.0f);\n      queueInfo.setChildQueues(new ArrayList\u003cQueueInfo\u003e());\n      queueInfo.setQueueState(QueueState.RUNNING);\n      return queueInfo;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "20d389ce61eaacb5ddfb329015f50e96ad894f8d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4719. Add a helper library to maintain node state and allows common queries. (kasha)\n",
      "commitDate": "14/03/16 2:19 PM",
      "commitName": "20d389ce61eaacb5ddfb329015f50e96ad894f8d",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "28/02/16 9:35 AM",
      "commitNameOld": "f9692770a58af0ab082eb7f15da9cbdcd177605b",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 15.15,
      "commitsBetweenForRepo": 90,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n     public QueueInfo getQueueInfo( \n         boolean includeChildQueues, boolean recursive) {\n       QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n       queueInfo.setQueueName(DEFAULT_QUEUE.getQueueName());\n       queueInfo.setCapacity(1.0f);\n+      Resource clusterResource \u003d getClusterResource();\n       if (clusterResource.getMemory() \u003d\u003d 0) {\n         queueInfo.setCurrentCapacity(0.0f);\n       } else {\n         queueInfo.setCurrentCapacity((float) usedResource.getMemory()\n             / clusterResource.getMemory());\n       }\n       queueInfo.setMaximumCapacity(1.0f);\n       queueInfo.setChildQueues(new ArrayList\u003cQueueInfo\u003e());\n       queueInfo.setQueueState(QueueState.RUNNING);\n       return queueInfo;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public QueueInfo getQueueInfo( \n        boolean includeChildQueues, boolean recursive) {\n      QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n      queueInfo.setQueueName(DEFAULT_QUEUE.getQueueName());\n      queueInfo.setCapacity(1.0f);\n      Resource clusterResource \u003d getClusterResource();\n      if (clusterResource.getMemory() \u003d\u003d 0) {\n        queueInfo.setCurrentCapacity(0.0f);\n      } else {\n        queueInfo.setCurrentCapacity((float) usedResource.getMemory()\n            / clusterResource.getMemory());\n      }\n      queueInfo.setMaximumCapacity(1.0f);\n      queueInfo.setChildQueues(new ArrayList\u003cQueueInfo\u003e());\n      queueInfo.setQueueState(QueueState.RUNNING);\n      return queueInfo;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public QueueInfo getQueueInfo( \n        boolean includeChildQueues, boolean recursive) {\n      QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n      queueInfo.setQueueName(DEFAULT_QUEUE.getQueueName());\n      queueInfo.setCapacity(1.0f);\n      if (clusterResource.getMemory() \u003d\u003d 0) {\n        queueInfo.setCurrentCapacity(0.0f);\n      } else {\n        queueInfo.setCurrentCapacity((float) usedResource.getMemory()\n            / clusterResource.getMemory());\n      }\n      queueInfo.setMaximumCapacity(1.0f);\n      queueInfo.setChildQueues(new ArrayList\u003cQueueInfo\u003e());\n      queueInfo.setQueueState(QueueState.RUNNING);\n      return queueInfo;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java"
      }
    },
    "73a72e0ef97f166a4588506cd255f37eca769def": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3680. FifoScheduler web service rest API can print out invalid JSON. (B Anil Kumar via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1242790 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/02/12 6:30 AM",
      "commitName": "73a72e0ef97f166a4588506cd255f37eca769def",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "04/02/12 2:44 PM",
      "commitNameOld": "23e336a0ed314ac7f1b47649d1a688e8de6b6e94",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 5.66,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,16 @@\n     public QueueInfo getQueueInfo( \n         boolean includeChildQueues, boolean recursive) {\n       QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n       queueInfo.setQueueName(DEFAULT_QUEUE.getQueueName());\n       queueInfo.setCapacity(1.0f);\n-      queueInfo.setCurrentCapacity((float)usedResource.getMemory() / clusterResource.getMemory());\n+      if (clusterResource.getMemory() \u003d\u003d 0) {\n+        queueInfo.setCurrentCapacity(0.0f);\n+      } else {\n+        queueInfo.setCurrentCapacity((float) usedResource.getMemory()\n+            / clusterResource.getMemory());\n+      }\n       queueInfo.setMaximumCapacity(1.0f);\n       queueInfo.setChildQueues(new ArrayList\u003cQueueInfo\u003e());\n       queueInfo.setQueueState(QueueState.RUNNING);\n       return queueInfo;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public QueueInfo getQueueInfo( \n        boolean includeChildQueues, boolean recursive) {\n      QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n      queueInfo.setQueueName(DEFAULT_QUEUE.getQueueName());\n      queueInfo.setCapacity(1.0f);\n      if (clusterResource.getMemory() \u003d\u003d 0) {\n        queueInfo.setCurrentCapacity(0.0f);\n      } else {\n        queueInfo.setCurrentCapacity((float) usedResource.getMemory()\n            / clusterResource.getMemory());\n      }\n      queueInfo.setMaximumCapacity(1.0f);\n      queueInfo.setChildQueues(new ArrayList\u003cQueueInfo\u003e());\n      queueInfo.setQueueState(QueueState.RUNNING);\n      return queueInfo;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "6a9624dcec1c539ff169732c490485f7b8458abf": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3452. fifoscheduler web ui page always shows 0% used for the queue (Jonathan Eagles via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208999 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/12/11 12:43 AM",
      "commitName": "6a9624dcec1c539ff169732c490485f7b8458abf",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "07/11/11 11:55 PM",
      "commitNameOld": "80cc8e94861e2b0fc423b77fa8ce0f174c3a91fd",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 23.03,
      "commitsBetweenForRepo": 111,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,11 @@\n     public QueueInfo getQueueInfo( \n         boolean includeChildQueues, boolean recursive) {\n       QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n       queueInfo.setQueueName(DEFAULT_QUEUE.getQueueName());\n-      queueInfo.setCapacity(100.0f);\n-      queueInfo.setMaximumCapacity(100.0f);\n+      queueInfo.setCapacity(1.0f);\n+      queueInfo.setCurrentCapacity((float)usedResource.getMemory() / clusterResource.getMemory());\n+      queueInfo.setMaximumCapacity(1.0f);\n       queueInfo.setChildQueues(new ArrayList\u003cQueueInfo\u003e());\n       queueInfo.setQueueState(QueueState.RUNNING);\n       return queueInfo;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public QueueInfo getQueueInfo( \n        boolean includeChildQueues, boolean recursive) {\n      QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n      queueInfo.setQueueName(DEFAULT_QUEUE.getQueueName());\n      queueInfo.setCapacity(1.0f);\n      queueInfo.setCurrentCapacity((float)usedResource.getMemory() / clusterResource.getMemory());\n      queueInfo.setMaximumCapacity(1.0f);\n      queueInfo.setChildQueues(new ArrayList\u003cQueueInfo\u003e());\n      queueInfo.setQueueState(QueueState.RUNNING);\n      return queueInfo;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "035937bee8ef57bc24b08068e7375ac45413a349": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2690. Web-page for FifoScheduler. Contributed by Eric Payne.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166958 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/11 7:04 PM",
      "commitName": "035937bee8ef57bc24b08068e7375ac45413a349",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "08/09/11 6:44 PM",
      "commitNameOld": "fafe8cd28e726566509c679e19d7da622f29f90d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,10 @@\n     public QueueInfo getQueueInfo( \n         boolean includeChildQueues, boolean recursive) {\n       QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n       queueInfo.setQueueName(DEFAULT_QUEUE.getQueueName());\n       queueInfo.setCapacity(100.0f);\n       queueInfo.setMaximumCapacity(100.0f);\n       queueInfo.setChildQueues(new ArrayList\u003cQueueInfo\u003e());\n+      queueInfo.setQueueState(QueueState.RUNNING);\n       return queueInfo;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public QueueInfo getQueueInfo( \n        boolean includeChildQueues, boolean recursive) {\n      QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n      queueInfo.setQueueName(DEFAULT_QUEUE.getQueueName());\n      queueInfo.setCapacity(100.0f);\n      queueInfo.setMaximumCapacity(100.0f);\n      queueInfo.setChildQueues(new ArrayList\u003cQueueInfo\u003e());\n      queueInfo.setQueueState(QueueState.RUNNING);\n      return queueInfo;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public QueueInfo getQueueInfo( \n        boolean includeChildQueues, boolean recursive) {\n      QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n      queueInfo.setQueueName(DEFAULT_QUEUE.getQueueName());\n      queueInfo.setCapacity(100.0f);\n      queueInfo.setMaximumCapacity(100.0f);\n      queueInfo.setChildQueues(new ArrayList\u003cQueueInfo\u003e());\n      return queueInfo;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,9 @@\n+    public QueueInfo getQueueInfo( \n+        boolean includeChildQueues, boolean recursive) {\n+      QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n+      queueInfo.setQueueName(DEFAULT_QUEUE.getQueueName());\n+      queueInfo.setCapacity(100.0f);\n+      queueInfo.setMaximumCapacity(100.0f);\n+      queueInfo.setChildQueues(new ArrayList\u003cQueueInfo\u003e());\n+      return queueInfo;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public QueueInfo getQueueInfo( \n        boolean includeChildQueues, boolean recursive) {\n      QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n      queueInfo.setQueueName(DEFAULT_QUEUE.getQueueName());\n      queueInfo.setCapacity(100.0f);\n      queueInfo.setMaximumCapacity(100.0f);\n      queueInfo.setChildQueues(new ArrayList\u003cQueueInfo\u003e());\n      return queueInfo;\n    }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java"
    }
  }
}