{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeReportPBImpl.java",
  "functionName": "mergeLocalToBuilder",
  "functionId": "mergeLocalToBuilder",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/NodeReportPBImpl.java",
  "functionStartLine": 260,
  "functionEndLine": 296,
  "numCommitsSeen": 17,
  "timeTaken": 8427,
  "changeHistory": [
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1",
    "a062374c396ba2bddbbe4d3806cc2896293b4e0b",
    "79c41b1d83e981ae74cb8b58ffcf7907b7612ad4",
    "e0233c16ebd06bb3aabeb523cd17259008e243ef",
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0",
    "af8514eef297574240652672d048748100c97733",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1": "Ybodychange",
    "a062374c396ba2bddbbe4d3806cc2896293b4e0b": "Ybodychange",
    "79c41b1d83e981ae74cb8b58ffcf7907b7612ad4": "Ybodychange",
    "e0233c16ebd06bb3aabeb523cd17259008e243ef": "Ybodychange",
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0": "Yfilerename",
    "af8514eef297574240652672d048748100c97733": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8103. Add CLI interface to query node attributes. Contributed by Bibin A Chundatt.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "22/11/17 7:18 PM",
      "commitNameOld": "b46ca7e73b8bac3fdbff0b13afe009308078acf2",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 293.3,
      "commitsBetweenForRepo": 2617,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,37 @@\n   private void mergeLocalToBuilder() {\n     if (this.nodeId !\u003d null\n         \u0026\u0026 !((NodeIdPBImpl) this.nodeId).getProto().equals(\n             builder.getNodeId())) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n     if (this.used !\u003d null) {\n       builder.setUsed(convertToProtoFormat(this.used));\n     }\n     if (this.capability !\u003d null) {\n       builder.setCapability(convertToProtoFormat(this.capability));\n     }\n     if (this.labels !\u003d null) {\n       builder.clearNodeLabels();\n       builder.addAllNodeLabels(this.labels);\n     }\n+    if (this.nodeAttributes !\u003d null) {\n+      builder.clearNodeAttributes();\n+      List\u003cNodeAttributeProto\u003e attrList \u003d new ArrayList\u003c\u003e();\n+      for (NodeAttribute attr : this.nodeAttributes) {\n+        attrList.add(convertToProtoFormat(attr));\n+      }\n+      builder.addAllNodeAttributes(attrList);\n+    }\n     if (this.nodeUtilization !\u003d null\n         \u0026\u0026 !((ResourceUtilizationPBImpl) this.nodeUtilization).getProto()\n             .equals(builder.getNodeUtilization())) {\n       builder.setNodeUtilization(convertToProtoFormat(this.nodeUtilization));\n     }\n     if (this.containersUtilization !\u003d null\n         \u0026\u0026 !((ResourceUtilizationPBImpl) this.containersUtilization).getProto()\n             .equals(builder.getContainersUtilization())) {\n       builder\n           .setContainersUtilization(convertToProtoFormat(\n               this.containersUtilization));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) this.nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.used !\u003d null) {\n      builder.setUsed(convertToProtoFormat(this.used));\n    }\n    if (this.capability !\u003d null) {\n      builder.setCapability(convertToProtoFormat(this.capability));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      builder.addAllNodeLabels(this.labels);\n    }\n    if (this.nodeAttributes !\u003d null) {\n      builder.clearNodeAttributes();\n      List\u003cNodeAttributeProto\u003e attrList \u003d new ArrayList\u003c\u003e();\n      for (NodeAttribute attr : this.nodeAttributes) {\n        attrList.add(convertToProtoFormat(attr));\n      }\n      builder.addAllNodeAttributes(attrList);\n    }\n    if (this.nodeUtilization !\u003d null\n        \u0026\u0026 !((ResourceUtilizationPBImpl) this.nodeUtilization).getProto()\n            .equals(builder.getNodeUtilization())) {\n      builder.setNodeUtilization(convertToProtoFormat(this.nodeUtilization));\n    }\n    if (this.containersUtilization !\u003d null\n        \u0026\u0026 !((ResourceUtilizationPBImpl) this.containersUtilization).getProto()\n            .equals(builder.getContainersUtilization())) {\n      builder\n          .setContainersUtilization(convertToProtoFormat(\n              this.containersUtilization));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/NodeReportPBImpl.java",
      "extendedDetails": {}
    },
    "a062374c396ba2bddbbe4d3806cc2896293b4e0b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6679. Reduce Resource instance overhead via non-PBImpl\n(Contributed by Daryn Sharp via Daniel Templeton)\n",
      "commitDate": "08/06/17 10:08 AM",
      "commitName": "a062374c396ba2bddbbe4d3806cc2896293b4e0b",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "16/12/15 1:18 PM",
      "commitNameOld": "79c41b1d83e981ae74cb8b58ffcf7907b7612ad4",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 539.83,
      "commitsBetweenForRepo": 3489,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,29 @@\n   private void mergeLocalToBuilder() {\n     if (this.nodeId !\u003d null\n         \u0026\u0026 !((NodeIdPBImpl) this.nodeId).getProto().equals(\n             builder.getNodeId())) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n-    if (this.used !\u003d null\n-        \u0026\u0026 !((ResourcePBImpl) this.used).getProto().equals(\n-            builder.getUsed())) {\n+    if (this.used !\u003d null) {\n       builder.setUsed(convertToProtoFormat(this.used));\n     }\n-    if (this.capability !\u003d null\n-        \u0026\u0026 !((ResourcePBImpl) this.capability).getProto().equals(\n-            builder.getCapability())) {\n+    if (this.capability !\u003d null) {\n       builder.setCapability(convertToProtoFormat(this.capability));\n     }\n     if (this.labels !\u003d null) {\n       builder.clearNodeLabels();\n       builder.addAllNodeLabels(this.labels);\n     }\n     if (this.nodeUtilization !\u003d null\n         \u0026\u0026 !((ResourceUtilizationPBImpl) this.nodeUtilization).getProto()\n             .equals(builder.getNodeUtilization())) {\n       builder.setNodeUtilization(convertToProtoFormat(this.nodeUtilization));\n     }\n     if (this.containersUtilization !\u003d null\n         \u0026\u0026 !((ResourceUtilizationPBImpl) this.containersUtilization).getProto()\n             .equals(builder.getContainersUtilization())) {\n       builder\n           .setContainersUtilization(convertToProtoFormat(\n               this.containersUtilization));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) this.nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.used !\u003d null) {\n      builder.setUsed(convertToProtoFormat(this.used));\n    }\n    if (this.capability !\u003d null) {\n      builder.setCapability(convertToProtoFormat(this.capability));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      builder.addAllNodeLabels(this.labels);\n    }\n    if (this.nodeUtilization !\u003d null\n        \u0026\u0026 !((ResourceUtilizationPBImpl) this.nodeUtilization).getProto()\n            .equals(builder.getNodeUtilization())) {\n      builder.setNodeUtilization(convertToProtoFormat(this.nodeUtilization));\n    }\n    if (this.containersUtilization !\u003d null\n        \u0026\u0026 !((ResourceUtilizationPBImpl) this.containersUtilization).getProto()\n            .equals(builder.getContainersUtilization())) {\n      builder\n          .setContainersUtilization(convertToProtoFormat(\n              this.containersUtilization));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/NodeReportPBImpl.java",
      "extendedDetails": {}
    },
    "79c41b1d83e981ae74cb8b58ffcf7907b7612ad4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4293. ResourceUtilization should be a part of yarn node CLI. (Sunil G via wangda)\n",
      "commitDate": "16/12/15 1:18 PM",
      "commitName": "79c41b1d83e981ae74cb8b58ffcf7907b7612ad4",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "30/10/14 10:59 PM",
      "commitNameOld": "e0233c16ebd06bb3aabeb523cd17259008e243ef",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 411.64,
      "commitsBetweenForRepo": 3315,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,33 @@\n   private void mergeLocalToBuilder() {\n     if (this.nodeId !\u003d null\n         \u0026\u0026 !((NodeIdPBImpl) this.nodeId).getProto().equals(\n             builder.getNodeId())) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n     if (this.used !\u003d null\n         \u0026\u0026 !((ResourcePBImpl) this.used).getProto().equals(\n             builder.getUsed())) {\n       builder.setUsed(convertToProtoFormat(this.used));\n     }\n     if (this.capability !\u003d null\n         \u0026\u0026 !((ResourcePBImpl) this.capability).getProto().equals(\n             builder.getCapability())) {\n       builder.setCapability(convertToProtoFormat(this.capability));\n     }\n     if (this.labels !\u003d null) {\n       builder.clearNodeLabels();\n       builder.addAllNodeLabels(this.labels);\n     }\n+    if (this.nodeUtilization !\u003d null\n+        \u0026\u0026 !((ResourceUtilizationPBImpl) this.nodeUtilization).getProto()\n+            .equals(builder.getNodeUtilization())) {\n+      builder.setNodeUtilization(convertToProtoFormat(this.nodeUtilization));\n+    }\n+    if (this.containersUtilization !\u003d null\n+        \u0026\u0026 !((ResourceUtilizationPBImpl) this.containersUtilization).getProto()\n+            .equals(builder.getContainersUtilization())) {\n+      builder\n+          .setContainersUtilization(convertToProtoFormat(\n+              this.containersUtilization));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) this.nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.used !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.used).getProto().equals(\n            builder.getUsed())) {\n      builder.setUsed(convertToProtoFormat(this.used));\n    }\n    if (this.capability !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.capability).getProto().equals(\n            builder.getCapability())) {\n      builder.setCapability(convertToProtoFormat(this.capability));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      builder.addAllNodeLabels(this.labels);\n    }\n    if (this.nodeUtilization !\u003d null\n        \u0026\u0026 !((ResourceUtilizationPBImpl) this.nodeUtilization).getProto()\n            .equals(builder.getNodeUtilization())) {\n      builder.setNodeUtilization(convertToProtoFormat(this.nodeUtilization));\n    }\n    if (this.containersUtilization !\u003d null\n        \u0026\u0026 !((ResourceUtilizationPBImpl) this.containersUtilization).getProto()\n            .equals(builder.getContainersUtilization())) {\n      builder\n          .setContainersUtilization(convertToProtoFormat(\n              this.containersUtilization));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/NodeReportPBImpl.java",
      "extendedDetails": {}
    },
    "e0233c16ebd06bb3aabeb523cd17259008e243ef": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2698. Moved some node label APIs to be correctly placed in client protocol. Contributed by Wangda Tan.\n",
      "commitDate": "30/10/14 10:59 PM",
      "commitName": "e0233c16ebd06bb3aabeb523cd17259008e243ef",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "15/08/13 12:20 AM",
      "commitNameOld": "b776bd46aed2f5b3aa226af36c0081a7d1f69eda",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 441.94,
      "commitsBetweenForRepo": 3322,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,21 @@\n   private void mergeLocalToBuilder() {\n     if (this.nodeId !\u003d null\n         \u0026\u0026 !((NodeIdPBImpl) this.nodeId).getProto().equals(\n             builder.getNodeId())) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n     if (this.used !\u003d null\n         \u0026\u0026 !((ResourcePBImpl) this.used).getProto().equals(\n             builder.getUsed())) {\n       builder.setUsed(convertToProtoFormat(this.used));\n     }\n     if (this.capability !\u003d null\n         \u0026\u0026 !((ResourcePBImpl) this.capability).getProto().equals(\n             builder.getCapability())) {\n       builder.setCapability(convertToProtoFormat(this.capability));\n     }\n+    if (this.labels !\u003d null) {\n+      builder.clearNodeLabels();\n+      builder.addAllNodeLabels(this.labels);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) this.nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.used !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.used).getProto().equals(\n            builder.getUsed())) {\n      builder.setUsed(convertToProtoFormat(this.used));\n    }\n    if (this.capability !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.capability).getProto().equals(\n            builder.getCapability())) {\n      builder.setCapability(convertToProtoFormat(this.capability));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      builder.addAllNodeLabels(this.labels);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/NodeReportPBImpl.java",
      "extendedDetails": {}
    },
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0": {
      "type": "Yfilerename",
      "commitMessage": "YARN-846.  Move pb Impl classes from yarn-api to yarn-common. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494052 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/13 12:36 AM",
      "commitName": "2fd7f2823074cbfbcc083a6f66edff62c7a131f0",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 11:34 PM",
      "commitNameOld": "6451288704922576e75dd1597f5fd0ef09ab4f26",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) this.nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.used !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.used).getProto().equals(\n            builder.getUsed())) {\n      builder.setUsed(convertToProtoFormat(this.used));\n    }\n    if (this.capability !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.capability).getProto().equals(\n            builder.getCapability())) {\n      builder.setCapability(convertToProtoFormat(this.capability));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/NodeReportPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/NodeReportPBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/NodeReportPBImpl.java"
      }
    },
    "af8514eef297574240652672d048748100c97733": {
      "type": "Ybodychange",
      "commitMessage": "YARN-686. Flatten NodeReport. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1490827 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/06/13 1:59 PM",
      "commitName": "af8514eef297574240652672d048748100c97733",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "23/05/13 3:47 PM",
      "commitNameOld": "61885df2fa76c589df9751653f94d9b26948dc3e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 14.92,
      "commitsBetweenForRepo": 105,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,17 @@\n   private void mergeLocalToBuilder() {\n     if (this.nodeId !\u003d null\n         \u0026\u0026 !((NodeIdPBImpl) this.nodeId).getProto().equals(\n             builder.getNodeId())) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n     if (this.used !\u003d null\n         \u0026\u0026 !((ResourcePBImpl) this.used).getProto().equals(\n             builder.getUsed())) {\n       builder.setUsed(convertToProtoFormat(this.used));\n     }\n     if (this.capability !\u003d null\n         \u0026\u0026 !((ResourcePBImpl) this.capability).getProto().equals(\n             builder.getCapability())) {\n       builder.setCapability(convertToProtoFormat(this.capability));\n     }\n-    if (this.nodeHealthStatus !\u003d null\n-        \u0026\u0026 !((NodeHealthStatusPBImpl) this.nodeHealthStatus).getProto().equals(\n-            builder.getNodeHealthStatus())) {\n-      builder.setNodeHealthStatus(convertToProtoFormat(this.nodeHealthStatus));\n-    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) this.nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.used !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.used).getProto().equals(\n            builder.getUsed())) {\n      builder.setUsed(convertToProtoFormat(this.used));\n    }\n    if (this.capability !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.capability).getProto().equals(\n            builder.getCapability())) {\n      builder.setCapability(convertToProtoFormat(this.capability));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/NodeReportPBImpl.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) this.nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.used !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.used).getProto().equals(\n            builder.getUsed())) {\n      builder.setUsed(convertToProtoFormat(this.used));\n    }\n    if (this.capability !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.capability).getProto().equals(\n            builder.getCapability())) {\n      builder.setCapability(convertToProtoFormat(this.capability));\n    }\n    if (this.nodeHealthStatus !\u003d null\n        \u0026\u0026 !((NodeHealthStatusPBImpl) this.nodeHealthStatus).getProto().equals(\n            builder.getNodeHealthStatus())) {\n      builder.setNodeHealthStatus(convertToProtoFormat(this.nodeHealthStatus));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/NodeReportPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/NodeReportPBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/NodeReportPBImpl.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) this.nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.used !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.used).getProto().equals(\n            builder.getUsed())) {\n      builder.setUsed(convertToProtoFormat(this.used));\n    }\n    if (this.capability !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.capability).getProto().equals(\n            builder.getCapability())) {\n      builder.setCapability(convertToProtoFormat(this.capability));\n    }\n    if (this.nodeHealthStatus !\u003d null\n        \u0026\u0026 !((NodeHealthStatusPBImpl) this.nodeHealthStatus).getProto().equals(\n            builder.getNodeHealthStatus())) {\n      builder.setNodeHealthStatus(convertToProtoFormat(this.nodeHealthStatus));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/NodeReportPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/NodeReportPBImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/NodeReportPBImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,22 @@\n+  private void mergeLocalToBuilder() {\n+    if (this.nodeId !\u003d null\n+        \u0026\u0026 !((NodeIdPBImpl) this.nodeId).getProto().equals(\n+            builder.getNodeId())) {\n+      builder.setNodeId(convertToProtoFormat(this.nodeId));\n+    }\n+    if (this.used !\u003d null\n+        \u0026\u0026 !((ResourcePBImpl) this.used).getProto().equals(\n+            builder.getUsed())) {\n+      builder.setUsed(convertToProtoFormat(this.used));\n+    }\n+    if (this.capability !\u003d null\n+        \u0026\u0026 !((ResourcePBImpl) this.capability).getProto().equals(\n+            builder.getCapability())) {\n+      builder.setCapability(convertToProtoFormat(this.capability));\n+    }\n+    if (this.nodeHealthStatus !\u003d null\n+        \u0026\u0026 !((NodeHealthStatusPBImpl) this.nodeHealthStatus).getProto().equals(\n+            builder.getNodeHealthStatus())) {\n+      builder.setNodeHealthStatus(convertToProtoFormat(this.nodeHealthStatus));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) this.nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.used !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.used).getProto().equals(\n            builder.getUsed())) {\n      builder.setUsed(convertToProtoFormat(this.used));\n    }\n    if (this.capability !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.capability).getProto().equals(\n            builder.getCapability())) {\n      builder.setCapability(convertToProtoFormat(this.capability));\n    }\n    if (this.nodeHealthStatus !\u003d null\n        \u0026\u0026 !((NodeHealthStatusPBImpl) this.nodeHealthStatus).getProto().equals(\n            builder.getNodeHealthStatus())) {\n      builder.setNodeHealthStatus(convertToProtoFormat(this.nodeHealthStatus));\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/NodeReportPBImpl.java"
    }
  }
}