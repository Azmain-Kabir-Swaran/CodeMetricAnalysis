{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceTrackerService.java",
  "functionName": "updateNodeAttributesIfNecessary",
  "functionId": "updateNodeAttributesIfNecessary___nodeId-NodeId__nodeAttributes-Set__NodeAttribute__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java",
  "functionStartLine": 722,
  "functionEndLine": 759,
  "numCommitsSeen": 98,
  "timeTaken": 2330,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "f659485ee83f3f34e3717631983adfc8fa1e53dc"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "f659485ee83f3f34e3717631983adfc8fa1e53dc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   private void updateNodeAttributesIfNecessary(NodeId nodeId,\n       Set\u003cNodeAttribute\u003e nodeAttributes) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       nodeAttributes.forEach(nodeAttribute -\u003e LOG.debug(\n           nodeId.toString() + \" ATTRIBUTE : \" + nodeAttribute.toString()));\n     }\n \n     // Validate attributes\n     if (!nodeAttributes.stream().allMatch(\n         nodeAttribute -\u003e NodeAttribute.PREFIX_DISTRIBUTED\n             .equals(nodeAttribute.getAttributeKey().getAttributePrefix()))) {\n       // All attributes must be in same prefix: nm.yarn.io.\n       // Since we have the checks in NM to make sure attributes reported\n       // in HB are with correct prefix, so it should not reach here.\n       throw new IOException(\"Reject invalid node attributes from host: \"\n           + nodeId.toString() + \", attributes in HB must have prefix \"\n           + NodeAttribute.PREFIX_DISTRIBUTED);\n     }\n     // Replace all distributed node attributes associated with this host\n     // with the new reported attributes in node attribute manager.\n     Set\u003cNodeAttribute\u003e currentNodeAttributes \u003d\n         this.rmContext.getNodeAttributesManager()\n             .getAttributesForNode(nodeId.getHost()).keySet();\n     if (!currentNodeAttributes.isEmpty()) {\n       currentNodeAttributes \u003d NodeLabelUtil\n           .filterAttributesByPrefix(currentNodeAttributes,\n               NodeAttribute.PREFIX_DISTRIBUTED);\n     }\n     if (!NodeLabelUtil\n         .isNodeAttributesEquals(nodeAttributes, currentNodeAttributes)) {\n       this.rmContext.getNodeAttributesManager()\n           .replaceNodeAttributes(NodeAttribute.PREFIX_DISTRIBUTED,\n               ImmutableMap.of(nodeId.getHost(), nodeAttributes));\n-    } else if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Skip updating node attributes since there is no change for \"\n-          + nodeId + \" : \" + nodeAttributes);\n+    } else {\n+      LOG.debug(\"Skip updating node attributes since there is no change\"\n+          +\" for {} : {}\", nodeId, nodeAttributes);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateNodeAttributesIfNecessary(NodeId nodeId,\n      Set\u003cNodeAttribute\u003e nodeAttributes) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      nodeAttributes.forEach(nodeAttribute -\u003e LOG.debug(\n          nodeId.toString() + \" ATTRIBUTE : \" + nodeAttribute.toString()));\n    }\n\n    // Validate attributes\n    if (!nodeAttributes.stream().allMatch(\n        nodeAttribute -\u003e NodeAttribute.PREFIX_DISTRIBUTED\n            .equals(nodeAttribute.getAttributeKey().getAttributePrefix()))) {\n      // All attributes must be in same prefix: nm.yarn.io.\n      // Since we have the checks in NM to make sure attributes reported\n      // in HB are with correct prefix, so it should not reach here.\n      throw new IOException(\"Reject invalid node attributes from host: \"\n          + nodeId.toString() + \", attributes in HB must have prefix \"\n          + NodeAttribute.PREFIX_DISTRIBUTED);\n    }\n    // Replace all distributed node attributes associated with this host\n    // with the new reported attributes in node attribute manager.\n    Set\u003cNodeAttribute\u003e currentNodeAttributes \u003d\n        this.rmContext.getNodeAttributesManager()\n            .getAttributesForNode(nodeId.getHost()).keySet();\n    if (!currentNodeAttributes.isEmpty()) {\n      currentNodeAttributes \u003d NodeLabelUtil\n          .filterAttributesByPrefix(currentNodeAttributes,\n              NodeAttribute.PREFIX_DISTRIBUTED);\n    }\n    if (!NodeLabelUtil\n        .isNodeAttributesEquals(nodeAttributes, currentNodeAttributes)) {\n      this.rmContext.getNodeAttributesManager()\n          .replaceNodeAttributes(NodeAttribute.PREFIX_DISTRIBUTED,\n              ImmutableMap.of(nodeId.getHost(), nodeAttributes));\n    } else {\n      LOG.debug(\"Skip updating node attributes since there is no change\"\n          +\" for {} : {}\", nodeId, nodeAttributes);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java",
      "extendedDetails": {}
    },
    "f659485ee83f3f34e3717631983adfc8fa1e53dc": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8925. Updating distributed node attributes only when necessary. Contributed by Tao Yang.\n",
      "commitDate": "20/12/18 6:56 PM",
      "commitName": "f659485ee83f3f34e3717631983adfc8fa1e53dc",
      "commitAuthor": "Weiwei Yang",
      "diff": "@@ -0,0 +1,38 @@\n+  private void updateNodeAttributesIfNecessary(NodeId nodeId,\n+      Set\u003cNodeAttribute\u003e nodeAttributes) throws IOException {\n+    if (LOG.isDebugEnabled()) {\n+      nodeAttributes.forEach(nodeAttribute -\u003e LOG.debug(\n+          nodeId.toString() + \" ATTRIBUTE : \" + nodeAttribute.toString()));\n+    }\n+\n+    // Validate attributes\n+    if (!nodeAttributes.stream().allMatch(\n+        nodeAttribute -\u003e NodeAttribute.PREFIX_DISTRIBUTED\n+            .equals(nodeAttribute.getAttributeKey().getAttributePrefix()))) {\n+      // All attributes must be in same prefix: nm.yarn.io.\n+      // Since we have the checks in NM to make sure attributes reported\n+      // in HB are with correct prefix, so it should not reach here.\n+      throw new IOException(\"Reject invalid node attributes from host: \"\n+          + nodeId.toString() + \", attributes in HB must have prefix \"\n+          + NodeAttribute.PREFIX_DISTRIBUTED);\n+    }\n+    // Replace all distributed node attributes associated with this host\n+    // with the new reported attributes in node attribute manager.\n+    Set\u003cNodeAttribute\u003e currentNodeAttributes \u003d\n+        this.rmContext.getNodeAttributesManager()\n+            .getAttributesForNode(nodeId.getHost()).keySet();\n+    if (!currentNodeAttributes.isEmpty()) {\n+      currentNodeAttributes \u003d NodeLabelUtil\n+          .filterAttributesByPrefix(currentNodeAttributes,\n+              NodeAttribute.PREFIX_DISTRIBUTED);\n+    }\n+    if (!NodeLabelUtil\n+        .isNodeAttributesEquals(nodeAttributes, currentNodeAttributes)) {\n+      this.rmContext.getNodeAttributesManager()\n+          .replaceNodeAttributes(NodeAttribute.PREFIX_DISTRIBUTED,\n+              ImmutableMap.of(nodeId.getHost(), nodeAttributes));\n+    } else if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Skip updating node attributes since there is no change for \"\n+          + nodeId + \" : \" + nodeAttributes);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateNodeAttributesIfNecessary(NodeId nodeId,\n      Set\u003cNodeAttribute\u003e nodeAttributes) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      nodeAttributes.forEach(nodeAttribute -\u003e LOG.debug(\n          nodeId.toString() + \" ATTRIBUTE : \" + nodeAttribute.toString()));\n    }\n\n    // Validate attributes\n    if (!nodeAttributes.stream().allMatch(\n        nodeAttribute -\u003e NodeAttribute.PREFIX_DISTRIBUTED\n            .equals(nodeAttribute.getAttributeKey().getAttributePrefix()))) {\n      // All attributes must be in same prefix: nm.yarn.io.\n      // Since we have the checks in NM to make sure attributes reported\n      // in HB are with correct prefix, so it should not reach here.\n      throw new IOException(\"Reject invalid node attributes from host: \"\n          + nodeId.toString() + \", attributes in HB must have prefix \"\n          + NodeAttribute.PREFIX_DISTRIBUTED);\n    }\n    // Replace all distributed node attributes associated with this host\n    // with the new reported attributes in node attribute manager.\n    Set\u003cNodeAttribute\u003e currentNodeAttributes \u003d\n        this.rmContext.getNodeAttributesManager()\n            .getAttributesForNode(nodeId.getHost()).keySet();\n    if (!currentNodeAttributes.isEmpty()) {\n      currentNodeAttributes \u003d NodeLabelUtil\n          .filterAttributesByPrefix(currentNodeAttributes,\n              NodeAttribute.PREFIX_DISTRIBUTED);\n    }\n    if (!NodeLabelUtil\n        .isNodeAttributesEquals(nodeAttributes, currentNodeAttributes)) {\n      this.rmContext.getNodeAttributesManager()\n          .replaceNodeAttributes(NodeAttribute.PREFIX_DISTRIBUTED,\n              ImmutableMap.of(nodeId.getHost(), nodeAttributes));\n    } else if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Skip updating node attributes since there is no change for \"\n          + nodeId + \" : \" + nodeAttributes);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java"
    }
  }
}