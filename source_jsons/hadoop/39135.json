{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SchedulerApplicationAttempt.java",
  "functionName": "containerLaunchedOnNode",
  "functionId": "containerLaunchedOnNode___containerId-ContainerId__nodeId-NodeId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
  "functionStartLine": 647,
  "functionEndLine": 665,
  "numCommitsSeen": 147,
  "timeTaken": 11273,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
    "6772d07fdc0ad7d0cd1be851bf83ae0208abd391",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
    "78ff0b720e0418785d53802a1b4e72085c1a3556",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "b8a30f2f170ffbd590e7366c3c944ab4919e40df": "Ymultichange(Ymodifierchange,Ybodychange)",
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": "Ymovefromfile",
    "6772d07fdc0ad7d0cd1be851bf83ae0208abd391": "Ymultichange(Ymovefromfile,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": "Yfilerename",
    "78ff0b720e0418785d53802a1b4e72085c1a3556": "Ymultichange(Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public void containerLaunchedOnNode(ContainerId containerId,\n       NodeId nodeId) {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       // Inform the container\n       RMContainer rmContainer \u003d getRMContainer(containerId);\n       if (rmContainer \u003d\u003d null) {\n         // Some unknown container sneaked into the system. Kill it.\n         rmContext.getDispatcher().getEventHandler().handle(\n             new RMNodeCleanContainerEvent(nodeId, containerId));\n         return;\n       }\n \n       rmContainer.handle(\n           new RMContainerEvent(containerId, RMContainerEventType.LAUNCHED));\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void containerLaunchedOnNode(ContainerId containerId,\n      NodeId nodeId) {\n    writeLock.lock();\n    try {\n      // Inform the container\n      RMContainer rmContainer \u003d getRMContainer(containerId);\n      if (rmContainer \u003d\u003d null) {\n        // Some unknown container sneaked into the system. Kill it.\n        rmContext.getDispatcher().getEventHandler().handle(\n            new RMNodeCleanContainerEvent(nodeId, containerId));\n        return;\n      }\n\n      rmContainer.handle(\n          new RMContainerEvent(containerId, RMContainerEventType.LAUNCHED));\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
      "extendedDetails": {}
    },
    "b8a30f2f170ffbd590e7366c3c944ab4919e40df": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3141. Improve locks in SchedulerApplicationAttempt/FSAppAttempt/FiCaSchedulerApp. Contributed by Wangda Tan\n",
      "commitDate": "19/09/16 2:08 AM",
      "commitName": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3141. Improve locks in SchedulerApplicationAttempt/FSAppAttempt/FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "19/09/16 2:08 AM",
          "commitName": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
          "commitAuthor": "Jian He",
          "commitDateOld": "30/08/16 3:52 PM",
          "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 19.43,
          "commitsBetweenForRepo": 91,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,19 @@\n-  public synchronized void containerLaunchedOnNode(ContainerId containerId,\n+  public void containerLaunchedOnNode(ContainerId containerId,\n       NodeId nodeId) {\n-    // Inform the container\n-    RMContainer rmContainer \u003d getRMContainer(containerId);\n-    if (rmContainer \u003d\u003d null) {\n-      // Some unknown container sneaked into the system. Kill it.\n-      rmContext.getDispatcher().getEventHandler()\n-        .handle(new RMNodeCleanContainerEvent(nodeId, containerId));\n-      return;\n-    }\n+    try {\n+      writeLock.lock();\n+      // Inform the container\n+      RMContainer rmContainer \u003d getRMContainer(containerId);\n+      if (rmContainer \u003d\u003d null) {\n+        // Some unknown container sneaked into the system. Kill it.\n+        rmContext.getDispatcher().getEventHandler().handle(\n+            new RMNodeCleanContainerEvent(nodeId, containerId));\n+        return;\n+      }\n \n-    rmContainer.handle(new RMContainerEvent(containerId,\n-        RMContainerEventType.LAUNCHED));\n+      rmContainer.handle(\n+          new RMContainerEvent(containerId, RMContainerEventType.LAUNCHED));\n+    } finally {\n+      writeLock.unlock();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void containerLaunchedOnNode(ContainerId containerId,\n      NodeId nodeId) {\n    try {\n      writeLock.lock();\n      // Inform the container\n      RMContainer rmContainer \u003d getRMContainer(containerId);\n      if (rmContainer \u003d\u003d null) {\n        // Some unknown container sneaked into the system. Kill it.\n        rmContext.getDispatcher().getEventHandler().handle(\n            new RMNodeCleanContainerEvent(nodeId, containerId));\n        return;\n      }\n\n      rmContainer.handle(\n          new RMContainerEvent(containerId, RMContainerEventType.LAUNCHED));\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3141. Improve locks in SchedulerApplicationAttempt/FSAppAttempt/FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "19/09/16 2:08 AM",
          "commitName": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
          "commitAuthor": "Jian He",
          "commitDateOld": "30/08/16 3:52 PM",
          "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 19.43,
          "commitsBetweenForRepo": 91,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,19 @@\n-  public synchronized void containerLaunchedOnNode(ContainerId containerId,\n+  public void containerLaunchedOnNode(ContainerId containerId,\n       NodeId nodeId) {\n-    // Inform the container\n-    RMContainer rmContainer \u003d getRMContainer(containerId);\n-    if (rmContainer \u003d\u003d null) {\n-      // Some unknown container sneaked into the system. Kill it.\n-      rmContext.getDispatcher().getEventHandler()\n-        .handle(new RMNodeCleanContainerEvent(nodeId, containerId));\n-      return;\n-    }\n+    try {\n+      writeLock.lock();\n+      // Inform the container\n+      RMContainer rmContainer \u003d getRMContainer(containerId);\n+      if (rmContainer \u003d\u003d null) {\n+        // Some unknown container sneaked into the system. Kill it.\n+        rmContext.getDispatcher().getEventHandler().handle(\n+            new RMNodeCleanContainerEvent(nodeId, containerId));\n+        return;\n+      }\n \n-    rmContainer.handle(new RMContainerEvent(containerId,\n-        RMContainerEventType.LAUNCHED));\n+      rmContainer.handle(\n+          new RMContainerEvent(containerId, RMContainerEventType.LAUNCHED));\n+    } finally {\n+      writeLock.unlock();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void containerLaunchedOnNode(ContainerId containerId,\n      NodeId nodeId) {\n    try {\n      writeLock.lock();\n      // Inform the container\n      RMContainer rmContainer \u003d getRMContainer(containerId);\n      if (rmContainer \u003d\u003d null) {\n        // Some unknown container sneaked into the system. Kill it.\n        rmContext.getDispatcher().getEventHandler().handle(\n            new RMNodeCleanContainerEvent(nodeId, containerId));\n        return;\n      }\n\n      rmContainer.handle(\n          new RMContainerEvent(containerId, RMContainerEventType.LAUNCHED));\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
          "extendedDetails": {}
        }
      ]
    },
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-1493. Changed ResourceManager and Scheduler interfacing to recognize app-attempts separately from apps. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/01/14 12:19 PM",
      "commitName": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "02/01/14 12:11 PM",
      "commitNameOld": "b4eb963c3c3e0b123003d7b32cdf7c9202cfb441",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void containerLaunchedOnNode(ContainerId containerId,\n      NodeId nodeId) {\n    // Inform the container\n    RMContainer rmContainer \u003d getRMContainer(containerId);\n    if (rmContainer \u003d\u003d null) {\n      // Some unknown container sneaked into the system. Kill it.\n      rmContext.getDispatcher().getEventHandler()\n        .handle(new RMNodeCleanContainerEvent(nodeId, containerId));\n      return;\n    }\n\n    rmContainer.handle(new RMContainerEvent(containerId,\n        RMContainerEventType.LAUNCHED));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplication.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplicationAttempt.java",
        "oldMethodName": "containerLaunchedOnNode",
        "newMethodName": "containerLaunchedOnNode"
      }
    },
    "6772d07fdc0ad7d0cd1be851bf83ae0208abd391": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-1335. Move duplicate code from FSSchedulerApp and FiCaSchedulerApp into SchedulerApplication (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1535582 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/10/13 4:15 PM",
      "commitName": "6772d07fdc0ad7d0cd1be851bf83ae0208abd391",
      "commitAuthor": "Sanford Ryza",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-1335. Move duplicate code from FSSchedulerApp and FiCaSchedulerApp into SchedulerApplication (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1535582 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/10/13 4:15 PM",
          "commitName": "6772d07fdc0ad7d0cd1be851bf83ae0208abd391",
          "commitAuthor": "Sanford Ryza",
          "commitDateOld": "23/10/13 7:30 PM",
          "commitNameOld": "b3195f1283c4524c32e67640e965b70e96530fcc",
          "commitAuthorOld": "Jonathan Turner Eagles",
          "daysBetweenCommits": 0.86,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n   public synchronized void containerLaunchedOnNode(ContainerId containerId,\n       NodeId nodeId) {\n     // Inform the container\n-    RMContainer rmContainer \u003d \n-        getRMContainer(containerId);\n+    RMContainer rmContainer \u003d getRMContainer(containerId);\n     if (rmContainer \u003d\u003d null) {\n       // Some unknown container sneaked into the system. Kill it.\n-      this.rmContext.getDispatcher().getEventHandler()\n+      rmContext.getDispatcher().getEventHandler()\n         .handle(new RMNodeCleanContainerEvent(nodeId, containerId));\n       return;\n     }\n \n     rmContainer.handle(new RMContainerEvent(containerId,\n-      RMContainerEventType.LAUNCHED));\n+        RMContainerEventType.LAUNCHED));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void containerLaunchedOnNode(ContainerId containerId,\n      NodeId nodeId) {\n    // Inform the container\n    RMContainer rmContainer \u003d getRMContainer(containerId);\n    if (rmContainer \u003d\u003d null) {\n      // Some unknown container sneaked into the system. Kill it.\n      rmContext.getDispatcher().getEventHandler()\n        .handle(new RMNodeCleanContainerEvent(nodeId, containerId));\n      return;\n    }\n\n    rmContainer.handle(new RMContainerEvent(containerId,\n        RMContainerEventType.LAUNCHED));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplication.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplication.java",
            "oldMethodName": "containerLaunchedOnNode",
            "newMethodName": "containerLaunchedOnNode"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1335. Move duplicate code from FSSchedulerApp and FiCaSchedulerApp into SchedulerApplication (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1535582 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/10/13 4:15 PM",
          "commitName": "6772d07fdc0ad7d0cd1be851bf83ae0208abd391",
          "commitAuthor": "Sanford Ryza",
          "commitDateOld": "23/10/13 7:30 PM",
          "commitNameOld": "b3195f1283c4524c32e67640e965b70e96530fcc",
          "commitAuthorOld": "Jonathan Turner Eagles",
          "daysBetweenCommits": 0.86,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n   public synchronized void containerLaunchedOnNode(ContainerId containerId,\n       NodeId nodeId) {\n     // Inform the container\n-    RMContainer rmContainer \u003d \n-        getRMContainer(containerId);\n+    RMContainer rmContainer \u003d getRMContainer(containerId);\n     if (rmContainer \u003d\u003d null) {\n       // Some unknown container sneaked into the system. Kill it.\n-      this.rmContext.getDispatcher().getEventHandler()\n+      rmContext.getDispatcher().getEventHandler()\n         .handle(new RMNodeCleanContainerEvent(nodeId, containerId));\n       return;\n     }\n \n     rmContainer.handle(new RMContainerEvent(containerId,\n-      RMContainerEventType.LAUNCHED));\n+        RMContainerEventType.LAUNCHED));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void containerLaunchedOnNode(ContainerId containerId,\n      NodeId nodeId) {\n    // Inform the container\n    RMContainer rmContainer \u003d getRMContainer(containerId);\n    if (rmContainer \u003d\u003d null) {\n      // Some unknown container sneaked into the system. Kill it.\n      rmContext.getDispatcher().getEventHandler()\n        .handle(new RMNodeCleanContainerEvent(nodeId, containerId));\n      return;\n    }\n\n    rmContainer.handle(new RMContainerEvent(containerId,\n        RMContainerEventType.LAUNCHED));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApplication.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void containerLaunchedOnNode(ContainerId containerId,\n      NodeId nodeId) {\n    // Inform the container\n    RMContainer rmContainer \u003d \n        getRMContainer(containerId);\n    if (rmContainer \u003d\u003d null) {\n      // Some unknown container sneaked into the system. Kill it.\n      this.rmContext.getDispatcher().getEventHandler()\n        .handle(new RMNodeCleanContainerEvent(nodeId, containerId));\n      return;\n    }\n\n    rmContainer.handle(new RMContainerEvent(containerId,\n      RMContainerEventType.LAUNCHED));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java"
      }
    },
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/12 6:43 PM",
      "commitName": "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "16/07/12 3:41 PM",
      "commitNameOld": "30099efb3525265f8b9fccd2709d45327f5b6724",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.13,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void containerLaunchedOnNode(ContainerId containerId,\n      NodeId nodeId) {\n    // Inform the container\n    RMContainer rmContainer \u003d \n        getRMContainer(containerId);\n    if (rmContainer \u003d\u003d null) {\n      // Some unknown container sneaked into the system. Kill it.\n      this.rmContext.getDispatcher().getEventHandler()\n        .handle(new RMNodeCleanContainerEvent(nodeId, containerId));\n      return;\n    }\n\n    rmContainer.handle(new RMContainerEvent(containerId,\n      RMContainerEventType.LAUNCHED));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApp.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java"
      }
    },
    "78ff0b720e0418785d53802a1b4e72085c1a3556": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-3596. Fix scheduler to handle cleaned up containers, which NMs may subsequently report as running. (Contributed by Vinod Kumar Vavilapalli)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1231297 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/01/12 1:15 PM",
      "commitName": "78ff0b720e0418785d53802a1b4e72085c1a3556",
      "commitAuthor": "Siddharth Seth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-3596. Fix scheduler to handle cleaned up containers, which NMs may subsequently report as running. (Contributed by Vinod Kumar Vavilapalli)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1231297 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/01/12 1:15 PM",
          "commitName": "78ff0b720e0418785d53802a1b4e72085c1a3556",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "27/11/11 3:40 PM",
          "commitNameOld": "7f0f8cb7b05291084cbcba664cf24401203b170c",
          "commitAuthorOld": "Mahadev Konar",
          "daysBetweenCommits": 46.9,
          "commitsBetweenForRepo": 239,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,15 @@\n-  synchronized public void containerLaunchedOnNode(ContainerId containerId) {\n+  public synchronized void containerLaunchedOnNode(ContainerId containerId,\n+      NodeId nodeId) {\n     // Inform the container\n     RMContainer rmContainer \u003d \n         getRMContainer(containerId);\n-    rmContainer.handle(\n-        new RMContainerEvent(containerId, \n-            RMContainerEventType.LAUNCHED));\n+    if (rmContainer \u003d\u003d null) {\n+      // Some unknown container sneaked into the system. Kill it.\n+      this.rmContext.getDispatcher().getEventHandler()\n+        .handle(new RMNodeCleanContainerEvent(nodeId, containerId));\n+      return;\n+    }\n+\n+    rmContainer.handle(new RMContainerEvent(containerId,\n+      RMContainerEventType.LAUNCHED));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void containerLaunchedOnNode(ContainerId containerId,\n      NodeId nodeId) {\n    // Inform the container\n    RMContainer rmContainer \u003d \n        getRMContainer(containerId);\n    if (rmContainer \u003d\u003d null) {\n      // Some unknown container sneaked into the system. Kill it.\n      this.rmContext.getDispatcher().getEventHandler()\n        .handle(new RMNodeCleanContainerEvent(nodeId, containerId));\n      return;\n    }\n\n    rmContainer.handle(new RMContainerEvent(containerId,\n      RMContainerEventType.LAUNCHED));\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApp.java",
          "extendedDetails": {
            "oldValue": "[containerId-ContainerId]",
            "newValue": "[containerId-ContainerId, nodeId-NodeId]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3596. Fix scheduler to handle cleaned up containers, which NMs may subsequently report as running. (Contributed by Vinod Kumar Vavilapalli)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1231297 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/01/12 1:15 PM",
          "commitName": "78ff0b720e0418785d53802a1b4e72085c1a3556",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "27/11/11 3:40 PM",
          "commitNameOld": "7f0f8cb7b05291084cbcba664cf24401203b170c",
          "commitAuthorOld": "Mahadev Konar",
          "daysBetweenCommits": 46.9,
          "commitsBetweenForRepo": 239,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,15 @@\n-  synchronized public void containerLaunchedOnNode(ContainerId containerId) {\n+  public synchronized void containerLaunchedOnNode(ContainerId containerId,\n+      NodeId nodeId) {\n     // Inform the container\n     RMContainer rmContainer \u003d \n         getRMContainer(containerId);\n-    rmContainer.handle(\n-        new RMContainerEvent(containerId, \n-            RMContainerEventType.LAUNCHED));\n+    if (rmContainer \u003d\u003d null) {\n+      // Some unknown container sneaked into the system. Kill it.\n+      this.rmContext.getDispatcher().getEventHandler()\n+        .handle(new RMNodeCleanContainerEvent(nodeId, containerId));\n+      return;\n+    }\n+\n+    rmContainer.handle(new RMContainerEvent(containerId,\n+      RMContainerEventType.LAUNCHED));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void containerLaunchedOnNode(ContainerId containerId,\n      NodeId nodeId) {\n    // Inform the container\n    RMContainer rmContainer \u003d \n        getRMContainer(containerId);\n    if (rmContainer \u003d\u003d null) {\n      // Some unknown container sneaked into the system. Kill it.\n      this.rmContext.getDispatcher().getEventHandler()\n        .handle(new RMNodeCleanContainerEvent(nodeId, containerId));\n      return;\n    }\n\n    rmContainer.handle(new RMContainerEvent(containerId,\n      RMContainerEventType.LAUNCHED));\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApp.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized public void containerLaunchedOnNode(ContainerId containerId) {\n    // Inform the container\n    RMContainer rmContainer \u003d \n        getRMContainer(containerId);\n    rmContainer.handle(\n        new RMContainerEvent(containerId, \n            RMContainerEventType.LAUNCHED));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApp.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApp.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApp.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,8 @@\n+  synchronized public void containerLaunchedOnNode(ContainerId containerId) {\n+    // Inform the container\n+    RMContainer rmContainer \u003d \n+        getRMContainer(containerId);\n+    rmContainer.handle(\n+        new RMContainerEvent(containerId, \n+            RMContainerEventType.LAUNCHED));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized public void containerLaunchedOnNode(ContainerId containerId) {\n    // Inform the container\n    RMContainer rmContainer \u003d \n        getRMContainer(containerId);\n    rmContainer.handle(\n        new RMContainerEvent(containerId, \n            RMContainerEventType.LAUNCHED));\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerApp.java"
    }
  }
}