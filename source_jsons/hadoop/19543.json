{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QueueManager.java",
  "functionName": "dumpConfiguration",
  "functionId": "dumpConfiguration___out-Writer__configFile-String__conf-Configuration",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueManager.java",
  "functionStartLine": 527,
  "functionEndLine": 554,
  "numCommitsSeen": 8,
  "timeTaken": 8946,
  "changeHistory": [
    "ca33bdd5c6afd45110edb6961d1c492bcb009472",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "ca33bdd5c6afd45110edb6961d1c492bcb009472": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymovefromfile",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ca33bdd5c6afd45110edb6961d1c492bcb009472": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6790. Update jackson from 1.9.13 to 2.x in hadoop-mapreduce.\n",
      "commitDate": "06/11/16 6:19 PM",
      "commitName": "ca33bdd5c6afd45110edb6961d1c492bcb009472",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "03/03/15 1:06 AM",
      "commitNameOld": "9ae7f9eb7baeb244e1b95aabc93ad8124870b9a9",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 614.72,
      "commitsBetweenForRepo": 4695,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   static void dumpConfiguration(Writer out, String configFile,\n       Configuration conf) throws IOException {\n     if (conf !\u003d null \u0026\u0026 conf.get(DeprecatedQueueConfigurationParser.\n         MAPRED_QUEUE_NAMES_KEY) !\u003d null) {\n       return;\n     }\n     \n     JsonFactory dumpFactory \u003d new JsonFactory();\n-    JsonGenerator dumpGenerator \u003d dumpFactory.createJsonGenerator(out);\n+    JsonGenerator dumpGenerator \u003d dumpFactory.createGenerator(out);\n     QueueConfigurationParser parser;\n     boolean aclsEnabled \u003d false;\n     if (conf !\u003d null) {\n       aclsEnabled \u003d conf.getBoolean(MRConfig.MR_ACLS_ENABLED, false);\n     }\n     if (configFile !\u003d null \u0026\u0026 !\"\".equals(configFile)) {\n       parser \u003d new QueueConfigurationParser(configFile, aclsEnabled);\n     }\n     else {\n       parser \u003d getQueueConfigurationParser(null, false, aclsEnabled);\n     }\n     dumpGenerator.writeStartObject();\n     dumpGenerator.writeFieldName(\"queues\");\n     dumpGenerator.writeStartArray();\n     dumpConfiguration(dumpGenerator,parser.getRoot().getChildren());\n     dumpGenerator.writeEndArray();\n     dumpGenerator.writeEndObject();\n     dumpGenerator.flush();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void dumpConfiguration(Writer out, String configFile,\n      Configuration conf) throws IOException {\n    if (conf !\u003d null \u0026\u0026 conf.get(DeprecatedQueueConfigurationParser.\n        MAPRED_QUEUE_NAMES_KEY) !\u003d null) {\n      return;\n    }\n    \n    JsonFactory dumpFactory \u003d new JsonFactory();\n    JsonGenerator dumpGenerator \u003d dumpFactory.createGenerator(out);\n    QueueConfigurationParser parser;\n    boolean aclsEnabled \u003d false;\n    if (conf !\u003d null) {\n      aclsEnabled \u003d conf.getBoolean(MRConfig.MR_ACLS_ENABLED, false);\n    }\n    if (configFile !\u003d null \u0026\u0026 !\"\".equals(configFile)) {\n      parser \u003d new QueueConfigurationParser(configFile, aclsEnabled);\n    }\n    else {\n      parser \u003d getQueueConfigurationParser(null, false, aclsEnabled);\n    }\n    dumpGenerator.writeStartObject();\n    dumpGenerator.writeFieldName(\"queues\");\n    dumpGenerator.writeStartArray();\n    dumpConfiguration(dumpGenerator,parser.getRoot().getChildren());\n    dumpGenerator.writeEndArray();\n    dumpGenerator.writeEndObject();\n    dumpGenerator.flush();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueManager.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static void dumpConfiguration(Writer out, String configFile,\n      Configuration conf) throws IOException {\n    if (conf !\u003d null \u0026\u0026 conf.get(DeprecatedQueueConfigurationParser.\n        MAPRED_QUEUE_NAMES_KEY) !\u003d null) {\n      return;\n    }\n    \n    JsonFactory dumpFactory \u003d new JsonFactory();\n    JsonGenerator dumpGenerator \u003d dumpFactory.createJsonGenerator(out);\n    QueueConfigurationParser parser;\n    boolean aclsEnabled \u003d false;\n    if (conf !\u003d null) {\n      aclsEnabled \u003d conf.getBoolean(MRConfig.MR_ACLS_ENABLED, false);\n    }\n    if (configFile !\u003d null \u0026\u0026 !\"\".equals(configFile)) {\n      parser \u003d new QueueConfigurationParser(configFile, aclsEnabled);\n    }\n    else {\n      parser \u003d getQueueConfigurationParser(null, false, aclsEnabled);\n    }\n    dumpGenerator.writeStartObject();\n    dumpGenerator.writeFieldName(\"queues\");\n    dumpGenerator.writeStartArray();\n    dumpConfiguration(dumpGenerator,parser.getRoot().getChildren());\n    dumpGenerator.writeEndArray();\n    dumpGenerator.writeEndObject();\n    dumpGenerator.flush();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueManager.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueManager.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymovefromfile",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static void dumpConfiguration(Writer out, String configFile,\n      Configuration conf) throws IOException {\n    if (conf !\u003d null \u0026\u0026 conf.get(DeprecatedQueueConfigurationParser.\n        MAPRED_QUEUE_NAMES_KEY) !\u003d null) {\n      return;\n    }\n    \n    JsonFactory dumpFactory \u003d new JsonFactory();\n    JsonGenerator dumpGenerator \u003d dumpFactory.createJsonGenerator(out);\n    QueueConfigurationParser parser;\n    boolean aclsEnabled \u003d false;\n    if (conf !\u003d null) {\n      aclsEnabled \u003d conf.getBoolean(MRConfig.MR_ACLS_ENABLED, false);\n    }\n    if (configFile !\u003d null \u0026\u0026 !\"\".equals(configFile)) {\n      parser \u003d new QueueConfigurationParser(configFile, aclsEnabled);\n    }\n    else {\n      parser \u003d getQueueConfigurationParser(null, false, aclsEnabled);\n    }\n    dumpGenerator.writeStartObject();\n    dumpGenerator.writeFieldName(\"queues\");\n    dumpGenerator.writeStartArray();\n    dumpConfiguration(dumpGenerator,parser.getRoot().getChildren());\n    dumpGenerator.writeEndArray();\n    dumpGenerator.writeEndObject();\n    dumpGenerator.flush();\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueManager.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/QueueManager.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueManager.java",
        "oldMethodName": "dumpConfiguration",
        "newMethodName": "dumpConfiguration"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,28 @@\n+  static void dumpConfiguration(Writer out, String configFile,\n+      Configuration conf) throws IOException {\n+    if (conf !\u003d null \u0026\u0026 conf.get(DeprecatedQueueConfigurationParser.\n+        MAPRED_QUEUE_NAMES_KEY) !\u003d null) {\n+      return;\n+    }\n+    \n+    JsonFactory dumpFactory \u003d new JsonFactory();\n+    JsonGenerator dumpGenerator \u003d dumpFactory.createJsonGenerator(out);\n+    QueueConfigurationParser parser;\n+    boolean aclsEnabled \u003d false;\n+    if (conf !\u003d null) {\n+      aclsEnabled \u003d conf.getBoolean(MRConfig.MR_ACLS_ENABLED, false);\n+    }\n+    if (configFile !\u003d null \u0026\u0026 !\"\".equals(configFile)) {\n+      parser \u003d new QueueConfigurationParser(configFile, aclsEnabled);\n+    }\n+    else {\n+      parser \u003d getQueueConfigurationParser(null, false, aclsEnabled);\n+    }\n+    dumpGenerator.writeStartObject();\n+    dumpGenerator.writeFieldName(\"queues\");\n+    dumpGenerator.writeStartArray();\n+    dumpConfiguration(dumpGenerator,parser.getRoot().getChildren());\n+    dumpGenerator.writeEndArray();\n+    dumpGenerator.writeEndObject();\n+    dumpGenerator.flush();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static void dumpConfiguration(Writer out, String configFile,\n      Configuration conf) throws IOException {\n    if (conf !\u003d null \u0026\u0026 conf.get(DeprecatedQueueConfigurationParser.\n        MAPRED_QUEUE_NAMES_KEY) !\u003d null) {\n      return;\n    }\n    \n    JsonFactory dumpFactory \u003d new JsonFactory();\n    JsonGenerator dumpGenerator \u003d dumpFactory.createJsonGenerator(out);\n    QueueConfigurationParser parser;\n    boolean aclsEnabled \u003d false;\n    if (conf !\u003d null) {\n      aclsEnabled \u003d conf.getBoolean(MRConfig.MR_ACLS_ENABLED, false);\n    }\n    if (configFile !\u003d null \u0026\u0026 !\"\".equals(configFile)) {\n      parser \u003d new QueueConfigurationParser(configFile, aclsEnabled);\n    }\n    else {\n      parser \u003d getQueueConfigurationParser(null, false, aclsEnabled);\n    }\n    dumpGenerator.writeStartObject();\n    dumpGenerator.writeFieldName(\"queues\");\n    dumpGenerator.writeStartArray();\n    dumpConfiguration(dumpGenerator,parser.getRoot().getChildren());\n    dumpGenerator.writeEndArray();\n    dumpGenerator.writeEndObject();\n    dumpGenerator.flush();\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/QueueManager.java"
    }
  }
}