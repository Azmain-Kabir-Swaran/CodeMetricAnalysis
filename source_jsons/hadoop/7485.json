{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirRenameOp.java",
  "functionName": "validateNestSnapshot",
  "functionId": "validateNestSnapshot___fsd-FSDirectory__srcPath-String__dstParent-INodeDirectory__snapshottableDirs-List__INodeDirectory__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
  "functionStartLine": 593,
  "functionEndLine": 616,
  "numCommitsSeen": 310,
  "timeTaken": 9445,
  "changeHistory": [
    "de6b8b0c0b1933aab2af3e8adc50a2091d428238",
    "44f48ee96ee6b2a3909911c37bfddb0c963d5ffc",
    "c78e3a7cdd10c40454e9acb06986ba6d8573cb19",
    "5776a41da08af653206bb94d7c76c9c4dcce059a",
    "042699401ebe5186fa5556a79f8f9a206e5ebcd7",
    "4a3161182905afaf450a60d02528161ed1f97471"
  ],
  "changeHistoryShort": {
    "de6b8b0c0b1933aab2af3e8adc50a2091d428238": "Ymultichange(Yrename,Yparameterchange,Yexceptionschange,Ybodychange)",
    "44f48ee96ee6b2a3909911c37bfddb0c963d5ffc": "Ymultichange(Yparameterchange,Ybodychange)",
    "c78e3a7cdd10c40454e9acb06986ba6d8573cb19": "Ymultichange(Yparameterchange,Ybodychange)",
    "5776a41da08af653206bb94d7c76c9c4dcce059a": "Ybodychange",
    "042699401ebe5186fa5556a79f8f9a206e5ebcd7": "Ymovefromfile",
    "4a3161182905afaf450a60d02528161ed1f97471": "Ybodychange"
  },
  "changeHistoryDetails": {
    "de6b8b0c0b1933aab2af3e8adc50a2091d428238": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-14925. Rename operation should check nest snapshot (#1670)\n\nIf the src directory or any of its descendant is snapshottable\r\nand the dst directory or any of its ancestors is snapshottable,\r\nwe consider this as nested snapshot, which should be denied.\r\n\r\nReviewed-by: Shashikant Banerjee \u003cshashikant@apache.org\u003e",
      "commitDate": "01/11/19 4:37 PM",
      "commitName": "de6b8b0c0b1933aab2af3e8adc50a2091d428238",
      "commitAuthor": "Zhao Junwang",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-14925. Rename operation should check nest snapshot (#1670)\n\nIf the src directory or any of its descendant is snapshottable\r\nand the dst directory or any of its ancestors is snapshottable,\r\nwe consider this as nested snapshot, which should be denied.\r\n\r\nReviewed-by: Shashikant Banerjee \u003cshashikant@apache.org\u003e",
          "commitDate": "01/11/19 4:37 PM",
          "commitName": "de6b8b0c0b1933aab2af3e8adc50a2091d428238",
          "commitAuthor": "Zhao Junwang",
          "commitDateOld": "03/09/19 9:29 AM",
          "commitNameOld": "3c117163a343d7da7ac958e22789b461c24efa5f",
          "commitAuthorOld": "Xiaoyu Yao",
          "daysBetweenCommits": 59.3,
          "commitsBetweenForRepo": 392,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,24 @@\n-  private static void validateRenameSource(FSDirectory fsd,\n-      INodesInPath srcIIP) throws IOException {\n-    String error;\n-    final INode srcInode \u003d srcIIP.getLastINode();\n-    // validate source\n-    if (srcInode \u003d\u003d null) {\n-      error \u003d \"rename source \" + srcIIP.getPath() + \" is not found.\";\n-      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n-          + error);\n-      throw new FileNotFoundException(error);\n+  private static void validateNestSnapshot(FSDirectory fsd, String srcPath,\n+      INodeDirectory dstParent, List\u003cINodeDirectory\u003e snapshottableDirs)\n+      throws SnapshotException {\n+\n+    if (fsd.getFSNamesystem().getSnapshotManager().isAllowNestedSnapshots()) {\n+      return;\n     }\n-    if (srcIIP.length() \u003d\u003d 1) {\n-      error \u003d \"rename source cannot be the root\";\n-      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n-          + error);\n-      throw new IOException(error);\n+\n+    /*\n+     * snapshottableDirs is a list of snapshottable directory (child of rename\n+     * src) which do not have snapshots yet. If this list is not empty, that\n+     * means rename src has snapshottable descendant directories.\n+     */\n+    if (snapshottableDirs !\u003d null \u0026\u0026 snapshottableDirs.size() \u003e 0) {\n+      if (fsd.getFSNamesystem().getSnapshotManager()\n+              .isDescendantOfSnapshotRoot(dstParent)) {\n+        String dstPath \u003d dstParent.getFullPathName();\n+        throw new SnapshotException(\"Unable to rename because \" + srcPath\n+                + \" has snapshottable descendant directories and \" + dstPath\n+                + \" is a descent of a snapshottable directory, and HDFS does\"\n+                + \" not support nested snapshottable directory.\");\n+      }\n     }\n-    // srcInode and its subtree cannot contain snapshottable directories with\n-    // snapshots\n-    FSDirSnapshotOp.checkSnapshot(fsd, srcIIP, null);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateNestSnapshot(FSDirectory fsd, String srcPath,\n      INodeDirectory dstParent, List\u003cINodeDirectory\u003e snapshottableDirs)\n      throws SnapshotException {\n\n    if (fsd.getFSNamesystem().getSnapshotManager().isAllowNestedSnapshots()) {\n      return;\n    }\n\n    /*\n     * snapshottableDirs is a list of snapshottable directory (child of rename\n     * src) which do not have snapshots yet. If this list is not empty, that\n     * means rename src has snapshottable descendant directories.\n     */\n    if (snapshottableDirs !\u003d null \u0026\u0026 snapshottableDirs.size() \u003e 0) {\n      if (fsd.getFSNamesystem().getSnapshotManager()\n              .isDescendantOfSnapshotRoot(dstParent)) {\n        String dstPath \u003d dstParent.getFullPathName();\n        throw new SnapshotException(\"Unable to rename because \" + srcPath\n                + \" has snapshottable descendant directories and \" + dstPath\n                + \" is a descent of a snapshottable directory, and HDFS does\"\n                + \" not support nested snapshottable directory.\");\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {
            "oldValue": "validateRenameSource",
            "newValue": "validateNestSnapshot"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-14925. Rename operation should check nest snapshot (#1670)\n\nIf the src directory or any of its descendant is snapshottable\r\nand the dst directory or any of its ancestors is snapshottable,\r\nwe consider this as nested snapshot, which should be denied.\r\n\r\nReviewed-by: Shashikant Banerjee \u003cshashikant@apache.org\u003e",
          "commitDate": "01/11/19 4:37 PM",
          "commitName": "de6b8b0c0b1933aab2af3e8adc50a2091d428238",
          "commitAuthor": "Zhao Junwang",
          "commitDateOld": "03/09/19 9:29 AM",
          "commitNameOld": "3c117163a343d7da7ac958e22789b461c24efa5f",
          "commitAuthorOld": "Xiaoyu Yao",
          "daysBetweenCommits": 59.3,
          "commitsBetweenForRepo": 392,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,24 @@\n-  private static void validateRenameSource(FSDirectory fsd,\n-      INodesInPath srcIIP) throws IOException {\n-    String error;\n-    final INode srcInode \u003d srcIIP.getLastINode();\n-    // validate source\n-    if (srcInode \u003d\u003d null) {\n-      error \u003d \"rename source \" + srcIIP.getPath() + \" is not found.\";\n-      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n-          + error);\n-      throw new FileNotFoundException(error);\n+  private static void validateNestSnapshot(FSDirectory fsd, String srcPath,\n+      INodeDirectory dstParent, List\u003cINodeDirectory\u003e snapshottableDirs)\n+      throws SnapshotException {\n+\n+    if (fsd.getFSNamesystem().getSnapshotManager().isAllowNestedSnapshots()) {\n+      return;\n     }\n-    if (srcIIP.length() \u003d\u003d 1) {\n-      error \u003d \"rename source cannot be the root\";\n-      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n-          + error);\n-      throw new IOException(error);\n+\n+    /*\n+     * snapshottableDirs is a list of snapshottable directory (child of rename\n+     * src) which do not have snapshots yet. If this list is not empty, that\n+     * means rename src has snapshottable descendant directories.\n+     */\n+    if (snapshottableDirs !\u003d null \u0026\u0026 snapshottableDirs.size() \u003e 0) {\n+      if (fsd.getFSNamesystem().getSnapshotManager()\n+              .isDescendantOfSnapshotRoot(dstParent)) {\n+        String dstPath \u003d dstParent.getFullPathName();\n+        throw new SnapshotException(\"Unable to rename because \" + srcPath\n+                + \" has snapshottable descendant directories and \" + dstPath\n+                + \" is a descent of a snapshottable directory, and HDFS does\"\n+                + \" not support nested snapshottable directory.\");\n+      }\n     }\n-    // srcInode and its subtree cannot contain snapshottable directories with\n-    // snapshots\n-    FSDirSnapshotOp.checkSnapshot(fsd, srcIIP, null);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateNestSnapshot(FSDirectory fsd, String srcPath,\n      INodeDirectory dstParent, List\u003cINodeDirectory\u003e snapshottableDirs)\n      throws SnapshotException {\n\n    if (fsd.getFSNamesystem().getSnapshotManager().isAllowNestedSnapshots()) {\n      return;\n    }\n\n    /*\n     * snapshottableDirs is a list of snapshottable directory (child of rename\n     * src) which do not have snapshots yet. If this list is not empty, that\n     * means rename src has snapshottable descendant directories.\n     */\n    if (snapshottableDirs !\u003d null \u0026\u0026 snapshottableDirs.size() \u003e 0) {\n      if (fsd.getFSNamesystem().getSnapshotManager()\n              .isDescendantOfSnapshotRoot(dstParent)) {\n        String dstPath \u003d dstParent.getFullPathName();\n        throw new SnapshotException(\"Unable to rename because \" + srcPath\n                + \" has snapshottable descendant directories and \" + dstPath\n                + \" is a descent of a snapshottable directory, and HDFS does\"\n                + \" not support nested snapshottable directory.\");\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {
            "oldValue": "[fsd-FSDirectory, srcIIP-INodesInPath]",
            "newValue": "[fsd-FSDirectory, srcPath-String, dstParent-INodeDirectory, snapshottableDirs-List\u003cINodeDirectory\u003e]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-14925. Rename operation should check nest snapshot (#1670)\n\nIf the src directory or any of its descendant is snapshottable\r\nand the dst directory or any of its ancestors is snapshottable,\r\nwe consider this as nested snapshot, which should be denied.\r\n\r\nReviewed-by: Shashikant Banerjee \u003cshashikant@apache.org\u003e",
          "commitDate": "01/11/19 4:37 PM",
          "commitName": "de6b8b0c0b1933aab2af3e8adc50a2091d428238",
          "commitAuthor": "Zhao Junwang",
          "commitDateOld": "03/09/19 9:29 AM",
          "commitNameOld": "3c117163a343d7da7ac958e22789b461c24efa5f",
          "commitAuthorOld": "Xiaoyu Yao",
          "daysBetweenCommits": 59.3,
          "commitsBetweenForRepo": 392,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,24 @@\n-  private static void validateRenameSource(FSDirectory fsd,\n-      INodesInPath srcIIP) throws IOException {\n-    String error;\n-    final INode srcInode \u003d srcIIP.getLastINode();\n-    // validate source\n-    if (srcInode \u003d\u003d null) {\n-      error \u003d \"rename source \" + srcIIP.getPath() + \" is not found.\";\n-      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n-          + error);\n-      throw new FileNotFoundException(error);\n+  private static void validateNestSnapshot(FSDirectory fsd, String srcPath,\n+      INodeDirectory dstParent, List\u003cINodeDirectory\u003e snapshottableDirs)\n+      throws SnapshotException {\n+\n+    if (fsd.getFSNamesystem().getSnapshotManager().isAllowNestedSnapshots()) {\n+      return;\n     }\n-    if (srcIIP.length() \u003d\u003d 1) {\n-      error \u003d \"rename source cannot be the root\";\n-      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n-          + error);\n-      throw new IOException(error);\n+\n+    /*\n+     * snapshottableDirs is a list of snapshottable directory (child of rename\n+     * src) which do not have snapshots yet. If this list is not empty, that\n+     * means rename src has snapshottable descendant directories.\n+     */\n+    if (snapshottableDirs !\u003d null \u0026\u0026 snapshottableDirs.size() \u003e 0) {\n+      if (fsd.getFSNamesystem().getSnapshotManager()\n+              .isDescendantOfSnapshotRoot(dstParent)) {\n+        String dstPath \u003d dstParent.getFullPathName();\n+        throw new SnapshotException(\"Unable to rename because \" + srcPath\n+                + \" has snapshottable descendant directories and \" + dstPath\n+                + \" is a descent of a snapshottable directory, and HDFS does\"\n+                + \" not support nested snapshottable directory.\");\n+      }\n     }\n-    // srcInode and its subtree cannot contain snapshottable directories with\n-    // snapshots\n-    FSDirSnapshotOp.checkSnapshot(fsd, srcIIP, null);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateNestSnapshot(FSDirectory fsd, String srcPath,\n      INodeDirectory dstParent, List\u003cINodeDirectory\u003e snapshottableDirs)\n      throws SnapshotException {\n\n    if (fsd.getFSNamesystem().getSnapshotManager().isAllowNestedSnapshots()) {\n      return;\n    }\n\n    /*\n     * snapshottableDirs is a list of snapshottable directory (child of rename\n     * src) which do not have snapshots yet. If this list is not empty, that\n     * means rename src has snapshottable descendant directories.\n     */\n    if (snapshottableDirs !\u003d null \u0026\u0026 snapshottableDirs.size() \u003e 0) {\n      if (fsd.getFSNamesystem().getSnapshotManager()\n              .isDescendantOfSnapshotRoot(dstParent)) {\n        String dstPath \u003d dstParent.getFullPathName();\n        throw new SnapshotException(\"Unable to rename because \" + srcPath\n                + \" has snapshottable descendant directories and \" + dstPath\n                + \" is a descent of a snapshottable directory, and HDFS does\"\n                + \" not support nested snapshottable directory.\");\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[SnapshotException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-14925. Rename operation should check nest snapshot (#1670)\n\nIf the src directory or any of its descendant is snapshottable\r\nand the dst directory or any of its ancestors is snapshottable,\r\nwe consider this as nested snapshot, which should be denied.\r\n\r\nReviewed-by: Shashikant Banerjee \u003cshashikant@apache.org\u003e",
          "commitDate": "01/11/19 4:37 PM",
          "commitName": "de6b8b0c0b1933aab2af3e8adc50a2091d428238",
          "commitAuthor": "Zhao Junwang",
          "commitDateOld": "03/09/19 9:29 AM",
          "commitNameOld": "3c117163a343d7da7ac958e22789b461c24efa5f",
          "commitAuthorOld": "Xiaoyu Yao",
          "daysBetweenCommits": 59.3,
          "commitsBetweenForRepo": 392,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,24 @@\n-  private static void validateRenameSource(FSDirectory fsd,\n-      INodesInPath srcIIP) throws IOException {\n-    String error;\n-    final INode srcInode \u003d srcIIP.getLastINode();\n-    // validate source\n-    if (srcInode \u003d\u003d null) {\n-      error \u003d \"rename source \" + srcIIP.getPath() + \" is not found.\";\n-      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n-          + error);\n-      throw new FileNotFoundException(error);\n+  private static void validateNestSnapshot(FSDirectory fsd, String srcPath,\n+      INodeDirectory dstParent, List\u003cINodeDirectory\u003e snapshottableDirs)\n+      throws SnapshotException {\n+\n+    if (fsd.getFSNamesystem().getSnapshotManager().isAllowNestedSnapshots()) {\n+      return;\n     }\n-    if (srcIIP.length() \u003d\u003d 1) {\n-      error \u003d \"rename source cannot be the root\";\n-      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n-          + error);\n-      throw new IOException(error);\n+\n+    /*\n+     * snapshottableDirs is a list of snapshottable directory (child of rename\n+     * src) which do not have snapshots yet. If this list is not empty, that\n+     * means rename src has snapshottable descendant directories.\n+     */\n+    if (snapshottableDirs !\u003d null \u0026\u0026 snapshottableDirs.size() \u003e 0) {\n+      if (fsd.getFSNamesystem().getSnapshotManager()\n+              .isDescendantOfSnapshotRoot(dstParent)) {\n+        String dstPath \u003d dstParent.getFullPathName();\n+        throw new SnapshotException(\"Unable to rename because \" + srcPath\n+                + \" has snapshottable descendant directories and \" + dstPath\n+                + \" is a descent of a snapshottable directory, and HDFS does\"\n+                + \" not support nested snapshottable directory.\");\n+      }\n     }\n-    // srcInode and its subtree cannot contain snapshottable directories with\n-    // snapshots\n-    FSDirSnapshotOp.checkSnapshot(fsd, srcIIP, null);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateNestSnapshot(FSDirectory fsd, String srcPath,\n      INodeDirectory dstParent, List\u003cINodeDirectory\u003e snapshottableDirs)\n      throws SnapshotException {\n\n    if (fsd.getFSNamesystem().getSnapshotManager().isAllowNestedSnapshots()) {\n      return;\n    }\n\n    /*\n     * snapshottableDirs is a list of snapshottable directory (child of rename\n     * src) which do not have snapshots yet. If this list is not empty, that\n     * means rename src has snapshottable descendant directories.\n     */\n    if (snapshottableDirs !\u003d null \u0026\u0026 snapshottableDirs.size() \u003e 0) {\n      if (fsd.getFSNamesystem().getSnapshotManager()\n              .isDescendantOfSnapshotRoot(dstParent)) {\n        String dstPath \u003d dstParent.getFullPathName();\n        throw new SnapshotException(\"Unable to rename because \" + srcPath\n                + \" has snapshottable descendant directories and \" + dstPath\n                + \" is a descent of a snapshottable directory, and HDFS does\"\n                + \" not support nested snapshottable directory.\");\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "44f48ee96ee6b2a3909911c37bfddb0c963d5ffc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10956. Remove rename/delete performance penalty when not using snapshots. Contributed by Daryn Sharp.\n",
      "commitDate": "04/10/16 1:05 PM",
      "commitName": "44f48ee96ee6b2a3909911c37bfddb0c963d5ffc",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10956. Remove rename/delete performance penalty when not using snapshots. Contributed by Daryn Sharp.\n",
          "commitDate": "04/10/16 1:05 PM",
          "commitName": "44f48ee96ee6b2a3909911c37bfddb0c963d5ffc",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "28/09/16 3:57 PM",
          "commitNameOld": "5f34402adae191232fe78e62990396ca07f314bb",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 5.88,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  private static void validateRenameSource(INodesInPath srcIIP)\n-      throws IOException {\n+  private static void validateRenameSource(FSDirectory fsd,\n+      INodesInPath srcIIP) throws IOException {\n     String error;\n     final INode srcInode \u003d srcIIP.getLastINode();\n     // validate source\n     if (srcInode \u003d\u003d null) {\n       error \u003d \"rename source \" + srcIIP.getPath() + \" is not found.\";\n       NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n           + error);\n       throw new FileNotFoundException(error);\n     }\n     if (srcIIP.length() \u003d\u003d 1) {\n       error \u003d \"rename source cannot be the root\";\n       NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n           + error);\n       throw new IOException(error);\n     }\n     // srcInode and its subtree cannot contain snapshottable directories with\n     // snapshots\n-    FSDirSnapshotOp.checkSnapshot(srcInode, null);\n+    FSDirSnapshotOp.checkSnapshot(fsd, srcIIP, null);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateRenameSource(FSDirectory fsd,\n      INodesInPath srcIIP) throws IOException {\n    String error;\n    final INode srcInode \u003d srcIIP.getLastINode();\n    // validate source\n    if (srcInode \u003d\u003d null) {\n      error \u003d \"rename source \" + srcIIP.getPath() + \" is not found.\";\n      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n          + error);\n      throw new FileNotFoundException(error);\n    }\n    if (srcIIP.length() \u003d\u003d 1) {\n      error \u003d \"rename source cannot be the root\";\n      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n          + error);\n      throw new IOException(error);\n    }\n    // srcInode and its subtree cannot contain snapshottable directories with\n    // snapshots\n    FSDirSnapshotOp.checkSnapshot(fsd, srcIIP, null);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {
            "oldValue": "[srcIIP-INodesInPath]",
            "newValue": "[fsd-FSDirectory, srcIIP-INodesInPath]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10956. Remove rename/delete performance penalty when not using snapshots. Contributed by Daryn Sharp.\n",
          "commitDate": "04/10/16 1:05 PM",
          "commitName": "44f48ee96ee6b2a3909911c37bfddb0c963d5ffc",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "28/09/16 3:57 PM",
          "commitNameOld": "5f34402adae191232fe78e62990396ca07f314bb",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 5.88,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  private static void validateRenameSource(INodesInPath srcIIP)\n-      throws IOException {\n+  private static void validateRenameSource(FSDirectory fsd,\n+      INodesInPath srcIIP) throws IOException {\n     String error;\n     final INode srcInode \u003d srcIIP.getLastINode();\n     // validate source\n     if (srcInode \u003d\u003d null) {\n       error \u003d \"rename source \" + srcIIP.getPath() + \" is not found.\";\n       NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n           + error);\n       throw new FileNotFoundException(error);\n     }\n     if (srcIIP.length() \u003d\u003d 1) {\n       error \u003d \"rename source cannot be the root\";\n       NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n           + error);\n       throw new IOException(error);\n     }\n     // srcInode and its subtree cannot contain snapshottable directories with\n     // snapshots\n-    FSDirSnapshotOp.checkSnapshot(srcInode, null);\n+    FSDirSnapshotOp.checkSnapshot(fsd, srcIIP, null);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateRenameSource(FSDirectory fsd,\n      INodesInPath srcIIP) throws IOException {\n    String error;\n    final INode srcInode \u003d srcIIP.getLastINode();\n    // validate source\n    if (srcInode \u003d\u003d null) {\n      error \u003d \"rename source \" + srcIIP.getPath() + \" is not found.\";\n      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n          + error);\n      throw new FileNotFoundException(error);\n    }\n    if (srcIIP.length() \u003d\u003d 1) {\n      error \u003d \"rename source cannot be the root\";\n      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n          + error);\n      throw new IOException(error);\n    }\n    // srcInode and its subtree cannot contain snapshottable directories with\n    // snapshots\n    FSDirSnapshotOp.checkSnapshot(fsd, srcIIP, null);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "c78e3a7cdd10c40454e9acb06986ba6d8573cb19": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7059. Avoid resolving path multiple times. Contributed by Jing Zhao.\n",
      "commitDate": "12/12/14 3:13 PM",
      "commitName": "c78e3a7cdd10c40454e9acb06986ba6d8573cb19",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7059. Avoid resolving path multiple times. Contributed by Jing Zhao.\n",
          "commitDate": "12/12/14 3:13 PM",
          "commitName": "c78e3a7cdd10c40454e9acb06986ba6d8573cb19",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "11/12/14 12:36 PM",
          "commitNameOld": "b9f6d0c956f0278c8b9b83e05b523a442a730ebb",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 1.11,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  private static void validateRenameSource(String src, INodesInPath srcIIP)\n+  private static void validateRenameSource(INodesInPath srcIIP)\n       throws IOException {\n     String error;\n     final INode srcInode \u003d srcIIP.getLastINode();\n     // validate source\n     if (srcInode \u003d\u003d null) {\n-      error \u003d \"rename source \" + src + \" is not found.\";\n+      error \u003d \"rename source \" + srcIIP.getPath() + \" is not found.\";\n       NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n           + error);\n       throw new FileNotFoundException(error);\n     }\n     if (srcIIP.length() \u003d\u003d 1) {\n       error \u003d \"rename source cannot be the root\";\n       NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n           + error);\n       throw new IOException(error);\n     }\n     // srcInode and its subtree cannot contain snapshottable directories with\n     // snapshots\n     FSDirSnapshotOp.checkSnapshot(srcInode, null);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateRenameSource(INodesInPath srcIIP)\n      throws IOException {\n    String error;\n    final INode srcInode \u003d srcIIP.getLastINode();\n    // validate source\n    if (srcInode \u003d\u003d null) {\n      error \u003d \"rename source \" + srcIIP.getPath() + \" is not found.\";\n      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n          + error);\n      throw new FileNotFoundException(error);\n    }\n    if (srcIIP.length() \u003d\u003d 1) {\n      error \u003d \"rename source cannot be the root\";\n      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n          + error);\n      throw new IOException(error);\n    }\n    // srcInode and its subtree cannot contain snapshottable directories with\n    // snapshots\n    FSDirSnapshotOp.checkSnapshot(srcInode, null);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {
            "oldValue": "[src-String, srcIIP-INodesInPath]",
            "newValue": "[srcIIP-INodesInPath]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7059. Avoid resolving path multiple times. Contributed by Jing Zhao.\n",
          "commitDate": "12/12/14 3:13 PM",
          "commitName": "c78e3a7cdd10c40454e9acb06986ba6d8573cb19",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "11/12/14 12:36 PM",
          "commitNameOld": "b9f6d0c956f0278c8b9b83e05b523a442a730ebb",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 1.11,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  private static void validateRenameSource(String src, INodesInPath srcIIP)\n+  private static void validateRenameSource(INodesInPath srcIIP)\n       throws IOException {\n     String error;\n     final INode srcInode \u003d srcIIP.getLastINode();\n     // validate source\n     if (srcInode \u003d\u003d null) {\n-      error \u003d \"rename source \" + src + \" is not found.\";\n+      error \u003d \"rename source \" + srcIIP.getPath() + \" is not found.\";\n       NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n           + error);\n       throw new FileNotFoundException(error);\n     }\n     if (srcIIP.length() \u003d\u003d 1) {\n       error \u003d \"rename source cannot be the root\";\n       NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n           + error);\n       throw new IOException(error);\n     }\n     // srcInode and its subtree cannot contain snapshottable directories with\n     // snapshots\n     FSDirSnapshotOp.checkSnapshot(srcInode, null);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateRenameSource(INodesInPath srcIIP)\n      throws IOException {\n    String error;\n    final INode srcInode \u003d srcIIP.getLastINode();\n    // validate source\n    if (srcInode \u003d\u003d null) {\n      error \u003d \"rename source \" + srcIIP.getPath() + \" is not found.\";\n      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n          + error);\n      throw new FileNotFoundException(error);\n    }\n    if (srcIIP.length() \u003d\u003d 1) {\n      error \u003d \"rename source cannot be the root\";\n      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n          + error);\n      throw new IOException(error);\n    }\n    // srcInode and its subtree cannot contain snapshottable directories with\n    // snapshots\n    FSDirSnapshotOp.checkSnapshot(srcInode, null);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "5776a41da08af653206bb94d7c76c9c4dcce059a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.\n",
      "commitDate": "09/12/14 11:37 AM",
      "commitName": "5776a41da08af653206bb94d7c76c9c4dcce059a",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "05/12/14 2:17 PM",
      "commitNameOld": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 3.89,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private static void validateRenameSource(String src, INodesInPath srcIIP)\n       throws IOException {\n     String error;\n     final INode srcInode \u003d srcIIP.getLastINode();\n     // validate source\n     if (srcInode \u003d\u003d null) {\n       error \u003d \"rename source \" + src + \" is not found.\";\n       NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n           + error);\n       throw new FileNotFoundException(error);\n     }\n-    if (srcIIP.getINodes().length \u003d\u003d 1) {\n+    if (srcIIP.length() \u003d\u003d 1) {\n       error \u003d \"rename source cannot be the root\";\n       NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n           + error);\n       throw new IOException(error);\n     }\n     // srcInode and its subtree cannot contain snapshottable directories with\n     // snapshots\n     FSDirSnapshotOp.checkSnapshot(srcInode, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void validateRenameSource(String src, INodesInPath srcIIP)\n      throws IOException {\n    String error;\n    final INode srcInode \u003d srcIIP.getLastINode();\n    // validate source\n    if (srcInode \u003d\u003d null) {\n      error \u003d \"rename source \" + src + \" is not found.\";\n      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n          + error);\n      throw new FileNotFoundException(error);\n    }\n    if (srcIIP.length() \u003d\u003d 1) {\n      error \u003d \"rename source cannot be the root\";\n      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n          + error);\n      throw new IOException(error);\n    }\n    // srcInode and its subtree cannot contain snapshottable directories with\n    // snapshots\n    FSDirSnapshotOp.checkSnapshot(srcInode, null);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
      "extendedDetails": {}
    },
    "042699401ebe5186fa5556a79f8f9a206e5ebcd7": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-7438. Consolidate the implementation of rename() into a single class. Contributed by Haohui Mai.\n",
      "commitDate": "01/12/14 9:48 PM",
      "commitName": "042699401ebe5186fa5556a79f8f9a206e5ebcd7",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "01/12/14 9:36 PM",
      "commitNameOld": "0af44ea8462437f8e7a8271b15a19677fd7f05a1",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private static void validateRenameSource(String src, INodesInPath srcIIP)\n-          throws IOException {\n+      throws IOException {\n     String error;\n     final INode srcInode \u003d srcIIP.getLastINode();\n     // validate source\n     if (srcInode \u003d\u003d null) {\n       error \u003d \"rename source \" + src + \" is not found.\";\n       NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n           + error);\n       throw new FileNotFoundException(error);\n     }\n     if (srcIIP.getINodes().length \u003d\u003d 1) {\n       error \u003d \"rename source cannot be the root\";\n       NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n           + error);\n       throw new IOException(error);\n     }\n     // srcInode and its subtree cannot contain snapshottable directories with\n     // snapshots\n     FSDirSnapshotOp.checkSnapshot(srcInode, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void validateRenameSource(String src, INodesInPath srcIIP)\n      throws IOException {\n    String error;\n    final INode srcInode \u003d srcIIP.getLastINode();\n    // validate source\n    if (srcInode \u003d\u003d null) {\n      error \u003d \"rename source \" + src + \" is not found.\";\n      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n          + error);\n      throw new FileNotFoundException(error);\n    }\n    if (srcIIP.getINodes().length \u003d\u003d 1) {\n      error \u003d \"rename source cannot be the root\";\n      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n          + error);\n      throw new IOException(error);\n    }\n    // srcInode and its subtree cannot contain snapshottable directories with\n    // snapshots\n    FSDirSnapshotOp.checkSnapshot(srcInode, null);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirRenameOp.java",
        "oldMethodName": "validateRenameSource",
        "newMethodName": "validateRenameSource"
      }
    },
    "4a3161182905afaf450a60d02528161ed1f97471": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7440. Consolidate snapshot related operations in a single class. Contributed by Haohui Mai.\n",
      "commitDate": "25/11/14 9:04 PM",
      "commitName": "4a3161182905afaf450a60d02528161ed1f97471",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "24/11/14 3:42 PM",
      "commitNameOld": "8caf537afabc70b0c74e0a29aea0cc2935ecb162",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 1.22,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private static void validateRenameSource(String src, INodesInPath srcIIP)\n           throws IOException {\n     String error;\n     final INode srcInode \u003d srcIIP.getLastINode();\n     // validate source\n     if (srcInode \u003d\u003d null) {\n       error \u003d \"rename source \" + src + \" is not found.\";\n       NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n           + error);\n       throw new FileNotFoundException(error);\n     }\n     if (srcIIP.getINodes().length \u003d\u003d 1) {\n       error \u003d \"rename source cannot be the root\";\n       NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n           + error);\n       throw new IOException(error);\n     }\n     // srcInode and its subtree cannot contain snapshottable directories with\n     // snapshots\n-    checkSnapshot(srcInode, null);\n+    FSDirSnapshotOp.checkSnapshot(srcInode, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void validateRenameSource(String src, INodesInPath srcIIP)\n          throws IOException {\n    String error;\n    final INode srcInode \u003d srcIIP.getLastINode();\n    // validate source\n    if (srcInode \u003d\u003d null) {\n      error \u003d \"rename source \" + src + \" is not found.\";\n      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n          + error);\n      throw new FileNotFoundException(error);\n    }\n    if (srcIIP.getINodes().length \u003d\u003d 1) {\n      error \u003d \"rename source cannot be the root\";\n      NameNode.stateChangeLog.warn(\"DIR* FSDirectory.unprotectedRenameTo: \"\n          + error);\n      throw new IOException(error);\n    }\n    // srcInode and its subtree cannot contain snapshottable directories with\n    // snapshots\n    FSDirSnapshotOp.checkSnapshot(srcInode, null);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    }
  }
}