{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Sender.java",
  "functionName": "requestShortCircuitFds",
  "functionId": "requestShortCircuitFds___blk-ExtendedBlock(modifiers-final)__blockToken-Token__BlockTokenIdentifier__(modifiers-final)__slotId-SlotId__maxVersion-int__supportsReceiptVerification-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
  "functionStartLine": 194,
  "functionEndLine": 208,
  "numCommitsSeen": 82,
  "timeTaken": 4049,
  "changeHistory": [
    "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
    "bc9cb3e271b22069a15ca110cd60c860250aaab2",
    "32741cf3d25d85a92e3deb11c302cc2a718d71dd",
    "5aa892ed486d42ae6b94c4866b92cd2b382ea640",
    "dd049a2f6097da189ccce2f5890a2b9bc77fa73f"
  ],
  "changeHistoryShort": {
    "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42": "Ymultichange(Yfilerename,Ybodychange)",
    "bc9cb3e271b22069a15ca110cd60c860250aaab2": "Ymultichange(Yparameterchange,Ybodychange)",
    "32741cf3d25d85a92e3deb11c302cc2a718d71dd": "Ymultichange(Yparameterchange,Ybodychange)",
    "5aa892ed486d42ae6b94c4866b92cd2b382ea640": "Ymultichange(Yparameterchange,Ybodychange)",
    "dd049a2f6097da189ccce2f5890a2b9bc77fa73f": "Ymultichange(Yparameterchange,Ybodychange)"
  },
  "changeHistoryDetails": {
    "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "HDFS-8934. Move ShortCircuitShm to hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "22/08/15 1:31 PM",
      "commitName": "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-8934. Move ShortCircuitShm to hdfs-client. Contributed by Mingliang Liu.\n",
          "commitDate": "22/08/15 1:31 PM",
          "commitName": "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "22/08/15 12:39 AM",
          "commitNameOld": "61bf9cae6f3882c6e9a9222f59457b9be91e3018",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.54,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n   public void requestShortCircuitFds(final ExtendedBlock blk,\n       final Token\u003cBlockTokenIdentifier\u003e blockToken,\n       SlotId slotId, int maxVersion, boolean supportsReceiptVerification)\n         throws IOException {\n     OpRequestShortCircuitAccessProto.Builder builder \u003d\n         OpRequestShortCircuitAccessProto.newBuilder()\n           .setHeader(DataTransferProtoUtil.buildBaseHeader(\n             blk, blockToken)).setMaxVersion(maxVersion);\n     if (slotId !\u003d null) {\n-      builder.setSlotId(PBHelper.convert(slotId));\n+      builder.setSlotId(PBHelperClient.convert(slotId));\n     }\n     builder.setSupportsReceiptVerification(supportsReceiptVerification);\n     OpRequestShortCircuitAccessProto proto \u003d builder.build();\n     send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void requestShortCircuitFds(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      SlotId slotId, int maxVersion, boolean supportsReceiptVerification)\n        throws IOException {\n    OpRequestShortCircuitAccessProto.Builder builder \u003d\n        OpRequestShortCircuitAccessProto.newBuilder()\n          .setHeader(DataTransferProtoUtil.buildBaseHeader(\n            blk, blockToken)).setMaxVersion(maxVersion);\n    if (slotId !\u003d null) {\n      builder.setSlotId(PBHelperClient.convert(slotId));\n    }\n    builder.setSupportsReceiptVerification(supportsReceiptVerification);\n    OpRequestShortCircuitAccessProto proto \u003d builder.build();\n    send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8934. Move ShortCircuitShm to hdfs-client. Contributed by Mingliang Liu.\n",
          "commitDate": "22/08/15 1:31 PM",
          "commitName": "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "22/08/15 12:39 AM",
          "commitNameOld": "61bf9cae6f3882c6e9a9222f59457b9be91e3018",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.54,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n   public void requestShortCircuitFds(final ExtendedBlock blk,\n       final Token\u003cBlockTokenIdentifier\u003e blockToken,\n       SlotId slotId, int maxVersion, boolean supportsReceiptVerification)\n         throws IOException {\n     OpRequestShortCircuitAccessProto.Builder builder \u003d\n         OpRequestShortCircuitAccessProto.newBuilder()\n           .setHeader(DataTransferProtoUtil.buildBaseHeader(\n             blk, blockToken)).setMaxVersion(maxVersion);\n     if (slotId !\u003d null) {\n-      builder.setSlotId(PBHelper.convert(slotId));\n+      builder.setSlotId(PBHelperClient.convert(slotId));\n     }\n     builder.setSupportsReceiptVerification(supportsReceiptVerification);\n     OpRequestShortCircuitAccessProto proto \u003d builder.build();\n     send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void requestShortCircuitFds(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      SlotId slotId, int maxVersion, boolean supportsReceiptVerification)\n        throws IOException {\n    OpRequestShortCircuitAccessProto.Builder builder \u003d\n        OpRequestShortCircuitAccessProto.newBuilder()\n          .setHeader(DataTransferProtoUtil.buildBaseHeader(\n            blk, blockToken)).setMaxVersion(maxVersion);\n    if (slotId !\u003d null) {\n      builder.setSlotId(PBHelperClient.convert(slotId));\n    }\n    builder.setSupportsReceiptVerification(supportsReceiptVerification);\n    OpRequestShortCircuitAccessProto proto \u003d builder.build();\n    send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {}
        }
      ]
    },
    "bc9cb3e271b22069a15ca110cd60c860250aaab2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7915. The DataNode can sometimes allocate a ShortCircuitShm slot and fail to tell the DFSClient about it because of a network error (cmccabe)\n",
      "commitDate": "14/03/15 10:36 PM",
      "commitName": "bc9cb3e271b22069a15ca110cd60c860250aaab2",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7915. The DataNode can sometimes allocate a ShortCircuitShm slot and fail to tell the DFSClient about it because of a network error (cmccabe)\n",
          "commitDate": "14/03/15 10:36 PM",
          "commitName": "bc9cb3e271b22069a15ca110cd60c860250aaab2",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "13/03/15 6:40 PM",
          "commitNameOld": "32741cf3d25d85a92e3deb11c302cc2a718d71dd",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 1.16,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,15 @@\n   public void requestShortCircuitFds(final ExtendedBlock blk,\n       final Token\u003cBlockTokenIdentifier\u003e blockToken,\n-      SlotId slotId, int maxVersion) throws IOException {\n+      SlotId slotId, int maxVersion, boolean supportsReceiptVerification)\n+        throws IOException {\n     OpRequestShortCircuitAccessProto.Builder builder \u003d\n         OpRequestShortCircuitAccessProto.newBuilder()\n           .setHeader(DataTransferProtoUtil.buildBaseHeader(\n             blk, blockToken)).setMaxVersion(maxVersion);\n     if (slotId !\u003d null) {\n       builder.setSlotId(PBHelper.convert(slotId));\n     }\n+    builder.setSupportsReceiptVerification(supportsReceiptVerification);\n     OpRequestShortCircuitAccessProto proto \u003d builder.build();\n     send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void requestShortCircuitFds(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      SlotId slotId, int maxVersion, boolean supportsReceiptVerification)\n        throws IOException {\n    OpRequestShortCircuitAccessProto.Builder builder \u003d\n        OpRequestShortCircuitAccessProto.newBuilder()\n          .setHeader(DataTransferProtoUtil.buildBaseHeader(\n            blk, blockToken)).setMaxVersion(maxVersion);\n    if (slotId !\u003d null) {\n      builder.setSlotId(PBHelper.convert(slotId));\n    }\n    builder.setSupportsReceiptVerification(supportsReceiptVerification);\n    OpRequestShortCircuitAccessProto proto \u003d builder.build();\n    send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {
            "oldValue": "[blk-ExtendedBlock(modifiers-final), blockToken-Token\u003cBlockTokenIdentifier\u003e(modifiers-final), slotId-SlotId, maxVersion-int]",
            "newValue": "[blk-ExtendedBlock(modifiers-final), blockToken-Token\u003cBlockTokenIdentifier\u003e(modifiers-final), slotId-SlotId, maxVersion-int, supportsReceiptVerification-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7915. The DataNode can sometimes allocate a ShortCircuitShm slot and fail to tell the DFSClient about it because of a network error (cmccabe)\n",
          "commitDate": "14/03/15 10:36 PM",
          "commitName": "bc9cb3e271b22069a15ca110cd60c860250aaab2",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "13/03/15 6:40 PM",
          "commitNameOld": "32741cf3d25d85a92e3deb11c302cc2a718d71dd",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 1.16,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,15 @@\n   public void requestShortCircuitFds(final ExtendedBlock blk,\n       final Token\u003cBlockTokenIdentifier\u003e blockToken,\n-      SlotId slotId, int maxVersion) throws IOException {\n+      SlotId slotId, int maxVersion, boolean supportsReceiptVerification)\n+        throws IOException {\n     OpRequestShortCircuitAccessProto.Builder builder \u003d\n         OpRequestShortCircuitAccessProto.newBuilder()\n           .setHeader(DataTransferProtoUtil.buildBaseHeader(\n             blk, blockToken)).setMaxVersion(maxVersion);\n     if (slotId !\u003d null) {\n       builder.setSlotId(PBHelper.convert(slotId));\n     }\n+    builder.setSupportsReceiptVerification(supportsReceiptVerification);\n     OpRequestShortCircuitAccessProto proto \u003d builder.build();\n     send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void requestShortCircuitFds(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      SlotId slotId, int maxVersion, boolean supportsReceiptVerification)\n        throws IOException {\n    OpRequestShortCircuitAccessProto.Builder builder \u003d\n        OpRequestShortCircuitAccessProto.newBuilder()\n          .setHeader(DataTransferProtoUtil.buildBaseHeader(\n            blk, blockToken)).setMaxVersion(maxVersion);\n    if (slotId !\u003d null) {\n      builder.setSlotId(PBHelper.convert(slotId));\n    }\n    builder.setSupportsReceiptVerification(supportsReceiptVerification);\n    OpRequestShortCircuitAccessProto proto \u003d builder.build();\n    send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {}
        }
      ]
    },
    "32741cf3d25d85a92e3deb11c302cc2a718d71dd": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Revert \"HDFS-7915. The DataNode can sometimes allocate a ShortCircuitShm slot and fail to tell the DFSClient about it because of a network error (cmccabe)\" (jenkins didn\u0027t run yet)\n\nThis reverts commit 5aa892ed486d42ae6b94c4866b92cd2b382ea640.\n",
      "commitDate": "13/03/15 6:40 PM",
      "commitName": "32741cf3d25d85a92e3deb11c302cc2a718d71dd",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Revert \"HDFS-7915. The DataNode can sometimes allocate a ShortCircuitShm slot and fail to tell the DFSClient about it because of a network error (cmccabe)\" (jenkins didn\u0027t run yet)\n\nThis reverts commit 5aa892ed486d42ae6b94c4866b92cd2b382ea640.\n",
          "commitDate": "13/03/15 6:40 PM",
          "commitName": "32741cf3d25d85a92e3deb11c302cc2a718d71dd",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "13/03/15 6:29 PM",
          "commitNameOld": "5aa892ed486d42ae6b94c4866b92cd2b382ea640",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,13 @@\n   public void requestShortCircuitFds(final ExtendedBlock blk,\n       final Token\u003cBlockTokenIdentifier\u003e blockToken,\n-      SlotId slotId, int maxVersion, boolean supportsReceiptVerification)\n-        throws IOException {\n+      SlotId slotId, int maxVersion) throws IOException {\n     OpRequestShortCircuitAccessProto.Builder builder \u003d\n         OpRequestShortCircuitAccessProto.newBuilder()\n           .setHeader(DataTransferProtoUtil.buildBaseHeader(\n             blk, blockToken)).setMaxVersion(maxVersion);\n     if (slotId !\u003d null) {\n       builder.setSlotId(PBHelper.convert(slotId));\n     }\n-    builder.setSupportsReceiptVerification(supportsReceiptVerification);\n     OpRequestShortCircuitAccessProto proto \u003d builder.build();\n     send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void requestShortCircuitFds(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      SlotId slotId, int maxVersion) throws IOException {\n    OpRequestShortCircuitAccessProto.Builder builder \u003d\n        OpRequestShortCircuitAccessProto.newBuilder()\n          .setHeader(DataTransferProtoUtil.buildBaseHeader(\n            blk, blockToken)).setMaxVersion(maxVersion);\n    if (slotId !\u003d null) {\n      builder.setSlotId(PBHelper.convert(slotId));\n    }\n    OpRequestShortCircuitAccessProto proto \u003d builder.build();\n    send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {
            "oldValue": "[blk-ExtendedBlock(modifiers-final), blockToken-Token\u003cBlockTokenIdentifier\u003e(modifiers-final), slotId-SlotId, maxVersion-int, supportsReceiptVerification-boolean]",
            "newValue": "[blk-ExtendedBlock(modifiers-final), blockToken-Token\u003cBlockTokenIdentifier\u003e(modifiers-final), slotId-SlotId, maxVersion-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert \"HDFS-7915. The DataNode can sometimes allocate a ShortCircuitShm slot and fail to tell the DFSClient about it because of a network error (cmccabe)\" (jenkins didn\u0027t run yet)\n\nThis reverts commit 5aa892ed486d42ae6b94c4866b92cd2b382ea640.\n",
          "commitDate": "13/03/15 6:40 PM",
          "commitName": "32741cf3d25d85a92e3deb11c302cc2a718d71dd",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "13/03/15 6:29 PM",
          "commitNameOld": "5aa892ed486d42ae6b94c4866b92cd2b382ea640",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,13 @@\n   public void requestShortCircuitFds(final ExtendedBlock blk,\n       final Token\u003cBlockTokenIdentifier\u003e blockToken,\n-      SlotId slotId, int maxVersion, boolean supportsReceiptVerification)\n-        throws IOException {\n+      SlotId slotId, int maxVersion) throws IOException {\n     OpRequestShortCircuitAccessProto.Builder builder \u003d\n         OpRequestShortCircuitAccessProto.newBuilder()\n           .setHeader(DataTransferProtoUtil.buildBaseHeader(\n             blk, blockToken)).setMaxVersion(maxVersion);\n     if (slotId !\u003d null) {\n       builder.setSlotId(PBHelper.convert(slotId));\n     }\n-    builder.setSupportsReceiptVerification(supportsReceiptVerification);\n     OpRequestShortCircuitAccessProto proto \u003d builder.build();\n     send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void requestShortCircuitFds(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      SlotId slotId, int maxVersion) throws IOException {\n    OpRequestShortCircuitAccessProto.Builder builder \u003d\n        OpRequestShortCircuitAccessProto.newBuilder()\n          .setHeader(DataTransferProtoUtil.buildBaseHeader(\n            blk, blockToken)).setMaxVersion(maxVersion);\n    if (slotId !\u003d null) {\n      builder.setSlotId(PBHelper.convert(slotId));\n    }\n    OpRequestShortCircuitAccessProto proto \u003d builder.build();\n    send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {}
        }
      ]
    },
    "5aa892ed486d42ae6b94c4866b92cd2b382ea640": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7915. The DataNode can sometimes allocate a ShortCircuitShm slot and fail to tell the DFSClient about it because of a network error (cmccabe)\n",
      "commitDate": "13/03/15 6:29 PM",
      "commitName": "5aa892ed486d42ae6b94c4866b92cd2b382ea640",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7915. The DataNode can sometimes allocate a ShortCircuitShm slot and fail to tell the DFSClient about it because of a network error (cmccabe)\n",
          "commitDate": "13/03/15 6:29 PM",
          "commitName": "5aa892ed486d42ae6b94c4866b92cd2b382ea640",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "21/02/15 3:38 PM",
          "commitNameOld": "8b465b4b8caed31ca9daeaae108f9a868a30a455",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 20.08,
          "commitsBetweenForRepo": 154,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,15 @@\n   public void requestShortCircuitFds(final ExtendedBlock blk,\n       final Token\u003cBlockTokenIdentifier\u003e blockToken,\n-      SlotId slotId, int maxVersion) throws IOException {\n+      SlotId slotId, int maxVersion, boolean supportsReceiptVerification)\n+        throws IOException {\n     OpRequestShortCircuitAccessProto.Builder builder \u003d\n         OpRequestShortCircuitAccessProto.newBuilder()\n           .setHeader(DataTransferProtoUtil.buildBaseHeader(\n             blk, blockToken)).setMaxVersion(maxVersion);\n     if (slotId !\u003d null) {\n       builder.setSlotId(PBHelper.convert(slotId));\n     }\n+    builder.setSupportsReceiptVerification(supportsReceiptVerification);\n     OpRequestShortCircuitAccessProto proto \u003d builder.build();\n     send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void requestShortCircuitFds(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      SlotId slotId, int maxVersion, boolean supportsReceiptVerification)\n        throws IOException {\n    OpRequestShortCircuitAccessProto.Builder builder \u003d\n        OpRequestShortCircuitAccessProto.newBuilder()\n          .setHeader(DataTransferProtoUtil.buildBaseHeader(\n            blk, blockToken)).setMaxVersion(maxVersion);\n    if (slotId !\u003d null) {\n      builder.setSlotId(PBHelper.convert(slotId));\n    }\n    builder.setSupportsReceiptVerification(supportsReceiptVerification);\n    OpRequestShortCircuitAccessProto proto \u003d builder.build();\n    send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {
            "oldValue": "[blk-ExtendedBlock(modifiers-final), blockToken-Token\u003cBlockTokenIdentifier\u003e(modifiers-final), slotId-SlotId, maxVersion-int]",
            "newValue": "[blk-ExtendedBlock(modifiers-final), blockToken-Token\u003cBlockTokenIdentifier\u003e(modifiers-final), slotId-SlotId, maxVersion-int, supportsReceiptVerification-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7915. The DataNode can sometimes allocate a ShortCircuitShm slot and fail to tell the DFSClient about it because of a network error (cmccabe)\n",
          "commitDate": "13/03/15 6:29 PM",
          "commitName": "5aa892ed486d42ae6b94c4866b92cd2b382ea640",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "21/02/15 3:38 PM",
          "commitNameOld": "8b465b4b8caed31ca9daeaae108f9a868a30a455",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 20.08,
          "commitsBetweenForRepo": 154,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,15 @@\n   public void requestShortCircuitFds(final ExtendedBlock blk,\n       final Token\u003cBlockTokenIdentifier\u003e blockToken,\n-      SlotId slotId, int maxVersion) throws IOException {\n+      SlotId slotId, int maxVersion, boolean supportsReceiptVerification)\n+        throws IOException {\n     OpRequestShortCircuitAccessProto.Builder builder \u003d\n         OpRequestShortCircuitAccessProto.newBuilder()\n           .setHeader(DataTransferProtoUtil.buildBaseHeader(\n             blk, blockToken)).setMaxVersion(maxVersion);\n     if (slotId !\u003d null) {\n       builder.setSlotId(PBHelper.convert(slotId));\n     }\n+    builder.setSupportsReceiptVerification(supportsReceiptVerification);\n     OpRequestShortCircuitAccessProto proto \u003d builder.build();\n     send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void requestShortCircuitFds(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      SlotId slotId, int maxVersion, boolean supportsReceiptVerification)\n        throws IOException {\n    OpRequestShortCircuitAccessProto.Builder builder \u003d\n        OpRequestShortCircuitAccessProto.newBuilder()\n          .setHeader(DataTransferProtoUtil.buildBaseHeader(\n            blk, blockToken)).setMaxVersion(maxVersion);\n    if (slotId !\u003d null) {\n      builder.setSlotId(PBHelper.convert(slotId));\n    }\n    builder.setSupportsReceiptVerification(supportsReceiptVerification);\n    OpRequestShortCircuitAccessProto proto \u003d builder.build();\n    send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {}
        }
      ]
    },
    "dd049a2f6097da189ccce2f5890a2b9bc77fa73f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5950. The DFSClient and DataNode should use shared memory segments to communicate short-circuit information (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1573433 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/03/14 7:58 PM",
      "commitName": "dd049a2f6097da189ccce2f5890a2b9bc77fa73f",
      "commitAuthor": "Colin McCabe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5950. The DFSClient and DataNode should use shared memory segments to communicate short-circuit information (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1573433 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/03/14 7:58 PM",
          "commitName": "dd049a2f6097da189ccce2f5890a2b9bc77fa73f",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "22/07/13 11:15 AM",
          "commitNameOld": "c1314eb2a382bd9ce045a2fcc4a9e5c1fc368a24",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 223.41,
          "commitsBetweenForRepo": 1453,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,13 @@\n   public void requestShortCircuitFds(final ExtendedBlock blk,\n       final Token\u003cBlockTokenIdentifier\u003e blockToken,\n-      int maxVersion) throws IOException {\n-    OpRequestShortCircuitAccessProto proto \u003d\n+      SlotId slotId, int maxVersion) throws IOException {\n+    OpRequestShortCircuitAccessProto.Builder builder \u003d\n         OpRequestShortCircuitAccessProto.newBuilder()\n           .setHeader(DataTransferProtoUtil.buildBaseHeader(\n-            blk, blockToken)).setMaxVersion(maxVersion).build();\n+            blk, blockToken)).setMaxVersion(maxVersion);\n+    if (slotId !\u003d null) {\n+      builder.setSlotId(PBHelper.convert(slotId));\n+    }\n+    OpRequestShortCircuitAccessProto proto \u003d builder.build();\n     send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void requestShortCircuitFds(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      SlotId slotId, int maxVersion) throws IOException {\n    OpRequestShortCircuitAccessProto.Builder builder \u003d\n        OpRequestShortCircuitAccessProto.newBuilder()\n          .setHeader(DataTransferProtoUtil.buildBaseHeader(\n            blk, blockToken)).setMaxVersion(maxVersion);\n    if (slotId !\u003d null) {\n      builder.setSlotId(PBHelper.convert(slotId));\n    }\n    OpRequestShortCircuitAccessProto proto \u003d builder.build();\n    send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {
            "oldValue": "[blk-ExtendedBlock(modifiers-final), blockToken-Token\u003cBlockTokenIdentifier\u003e(modifiers-final), maxVersion-int]",
            "newValue": "[blk-ExtendedBlock(modifiers-final), blockToken-Token\u003cBlockTokenIdentifier\u003e(modifiers-final), slotId-SlotId, maxVersion-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5950. The DFSClient and DataNode should use shared memory segments to communicate short-circuit information (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1573433 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/03/14 7:58 PM",
          "commitName": "dd049a2f6097da189ccce2f5890a2b9bc77fa73f",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "22/07/13 11:15 AM",
          "commitNameOld": "c1314eb2a382bd9ce045a2fcc4a9e5c1fc368a24",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 223.41,
          "commitsBetweenForRepo": 1453,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,13 @@\n   public void requestShortCircuitFds(final ExtendedBlock blk,\n       final Token\u003cBlockTokenIdentifier\u003e blockToken,\n-      int maxVersion) throws IOException {\n-    OpRequestShortCircuitAccessProto proto \u003d\n+      SlotId slotId, int maxVersion) throws IOException {\n+    OpRequestShortCircuitAccessProto.Builder builder \u003d\n         OpRequestShortCircuitAccessProto.newBuilder()\n           .setHeader(DataTransferProtoUtil.buildBaseHeader(\n-            blk, blockToken)).setMaxVersion(maxVersion).build();\n+            blk, blockToken)).setMaxVersion(maxVersion);\n+    if (slotId !\u003d null) {\n+      builder.setSlotId(PBHelper.convert(slotId));\n+    }\n+    OpRequestShortCircuitAccessProto proto \u003d builder.build();\n     send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void requestShortCircuitFds(final ExtendedBlock blk,\n      final Token\u003cBlockTokenIdentifier\u003e blockToken,\n      SlotId slotId, int maxVersion) throws IOException {\n    OpRequestShortCircuitAccessProto.Builder builder \u003d\n        OpRequestShortCircuitAccessProto.newBuilder()\n          .setHeader(DataTransferProtoUtil.buildBaseHeader(\n            blk, blockToken)).setMaxVersion(maxVersion);\n    if (slotId !\u003d null) {\n      builder.setSlotId(PBHelper.convert(slotId));\n    }\n    OpRequestShortCircuitAccessProto proto \u003d builder.build();\n    send(out, Op.REQUEST_SHORT_CIRCUIT_FDS, proto);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/Sender.java",
          "extendedDetails": {}
        }
      ]
    }
  }
}