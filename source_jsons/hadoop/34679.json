{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerManagerImpl.java",
  "functionName": "getContainerStatusInternal",
  "functionId": "getContainerStatusInternal___containerID-ContainerId__nmTokenIdentifier-NMTokenIdentifier__remoteUser-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
  "functionStartLine": 1477,
  "functionEndLine": 1499,
  "numCommitsSeen": 324,
  "timeTaken": 12003,
  "changeHistory": [
    "32fe351bb654e684f127f47ab808c497e0d3f258",
    "144a55f0e3ba302327baf2e98d1e07b953dcbbfd",
    "c8172f5f143d2fefafa5a412899ab7cd081b406d",
    "5b7889f9a7dea81bbb3c8be6944419b59ca4bed1",
    "3ca3137179ef093e42cde06587c9ea785b10f32c",
    "243bcd367ff3130d74676280233041f88aca62a5",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "2692675fc3b5046d2ec88542c30203c87e135b70",
    "ca8024673178fa1c80224b390dfba932921693d9",
    "9eb53b9c841233538a51e4e854b261536c0b85d4",
    "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c",
    "ffd2e01604be814fa3db1dded7cd7cff26a79b1e",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "7f4dc277572df6ba25fa961073b99a5bdb086c00",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "32fe351bb654e684f127f47ab808c497e0d3f258": "Ymultichange(Yparameterchange,Ybodychange)",
    "144a55f0e3ba302327baf2e98d1e07b953dcbbfd": "Ybodychange",
    "c8172f5f143d2fefafa5a412899ab7cd081b406d": "Ymodifierchange",
    "5b7889f9a7dea81bbb3c8be6944419b59ca4bed1": "Ybodychange",
    "3ca3137179ef093e42cde06587c9ea785b10f32c": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "243bcd367ff3130d74676280233041f88aca62a5": "Ybodychange",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Yexceptionschange",
    "2692675fc3b5046d2ec88542c30203c87e135b70": "Ybodychange",
    "ca8024673178fa1c80224b390dfba932921693d9": "Ybodychange",
    "9eb53b9c841233538a51e4e854b261536c0b85d4": "Yexceptionschange",
    "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c": "Ybodychange",
    "ffd2e01604be814fa3db1dded7cd7cff26a79b1e": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "7f4dc277572df6ba25fa961073b99a5bdb086c00": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "32fe351bb654e684f127f47ab808c497e0d3f258": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8864. NM incorrectly logs container user as the user who sent a start/stop container request in its audit log. (Contributed by Wilfred Spiegelenburg)\n",
      "commitDate": "18/10/18 8:28 AM",
      "commitName": "32fe351bb654e684f127f47ab808c497e0d3f258",
      "commitAuthor": "Haibo Chen",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8864. NM incorrectly logs container user as the user who sent a start/stop container request in its audit log. (Contributed by Wilfred Spiegelenburg)\n",
          "commitDate": "18/10/18 8:28 AM",
          "commitName": "32fe351bb654e684f127f47ab808c497e0d3f258",
          "commitAuthor": "Haibo Chen",
          "commitDateOld": "26/09/18 11:51 AM",
          "commitNameOld": "913f87dada27776c539dfb352400ecf8d40e7943",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 21.86,
          "commitsBetweenForRepo": 222,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,23 @@\n   protected ContainerStatus getContainerStatusInternal(ContainerId containerID,\n-      NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n+      NMTokenIdentifier nmTokenIdentifier, String remoteUser)\n+      throws YarnException {\n     String containerIDStr \u003d containerID.toString();\n     Container container \u003d this.context.getContainers().get(containerID);\n \n     LOG.info(\"Getting container-status for \" + containerIDStr);\n     authorizeGetAndStopContainerRequest(containerID, container, false,\n-      nmTokenIdentifier);\n+        nmTokenIdentifier, remoteUser);\n \n     if (container \u003d\u003d null) {\n       if (nodeStatusUpdater.isContainerRecentlyStopped(containerID)) {\n         throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n           + \" was recently stopped on node manager.\");\n       } else {\n         throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n           + \" is not handled by this NodeManager\");\n       }\n     }\n     ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n     logContainerStatus(\"Returning \", containerStatus);\n     return containerStatus;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected ContainerStatus getContainerStatusInternal(ContainerId containerID,\n      NMTokenIdentifier nmTokenIdentifier, String remoteUser)\n      throws YarnException {\n    String containerIDStr \u003d containerID.toString();\n    Container container \u003d this.context.getContainers().get(containerID);\n\n    LOG.info(\"Getting container-status for \" + containerIDStr);\n    authorizeGetAndStopContainerRequest(containerID, container, false,\n        nmTokenIdentifier, remoteUser);\n\n    if (container \u003d\u003d null) {\n      if (nodeStatusUpdater.isContainerRecentlyStopped(containerID)) {\n        throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n          + \" was recently stopped on node manager.\");\n      } else {\n        throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n          + \" is not handled by this NodeManager\");\n      }\n    }\n    ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n    logContainerStatus(\"Returning \", containerStatus);\n    return containerStatus;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
          "extendedDetails": {
            "oldValue": "[containerID-ContainerId, nmTokenIdentifier-NMTokenIdentifier]",
            "newValue": "[containerID-ContainerId, nmTokenIdentifier-NMTokenIdentifier, remoteUser-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8864. NM incorrectly logs container user as the user who sent a start/stop container request in its audit log. (Contributed by Wilfred Spiegelenburg)\n",
          "commitDate": "18/10/18 8:28 AM",
          "commitName": "32fe351bb654e684f127f47ab808c497e0d3f258",
          "commitAuthor": "Haibo Chen",
          "commitDateOld": "26/09/18 11:51 AM",
          "commitNameOld": "913f87dada27776c539dfb352400ecf8d40e7943",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 21.86,
          "commitsBetweenForRepo": 222,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,23 @@\n   protected ContainerStatus getContainerStatusInternal(ContainerId containerID,\n-      NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n+      NMTokenIdentifier nmTokenIdentifier, String remoteUser)\n+      throws YarnException {\n     String containerIDStr \u003d containerID.toString();\n     Container container \u003d this.context.getContainers().get(containerID);\n \n     LOG.info(\"Getting container-status for \" + containerIDStr);\n     authorizeGetAndStopContainerRequest(containerID, container, false,\n-      nmTokenIdentifier);\n+        nmTokenIdentifier, remoteUser);\n \n     if (container \u003d\u003d null) {\n       if (nodeStatusUpdater.isContainerRecentlyStopped(containerID)) {\n         throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n           + \" was recently stopped on node manager.\");\n       } else {\n         throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n           + \" is not handled by this NodeManager\");\n       }\n     }\n     ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n     logContainerStatus(\"Returning \", containerStatus);\n     return containerStatus;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected ContainerStatus getContainerStatusInternal(ContainerId containerID,\n      NMTokenIdentifier nmTokenIdentifier, String remoteUser)\n      throws YarnException {\n    String containerIDStr \u003d containerID.toString();\n    Container container \u003d this.context.getContainers().get(containerID);\n\n    LOG.info(\"Getting container-status for \" + containerIDStr);\n    authorizeGetAndStopContainerRequest(containerID, container, false,\n        nmTokenIdentifier, remoteUser);\n\n    if (container \u003d\u003d null) {\n      if (nodeStatusUpdater.isContainerRecentlyStopped(containerID)) {\n        throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n          + \" was recently stopped on node manager.\");\n      } else {\n        throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n          + \" is not handled by this NodeManager\");\n      }\n    }\n    ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n    logContainerStatus(\"Returning \", containerStatus);\n    return containerStatus;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "144a55f0e3ba302327baf2e98d1e07b953dcbbfd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8045. Reduce log output from container status calls. Contributed by Craig Condit\n",
      "commitDate": "14/09/18 9:41 AM",
      "commitName": "144a55f0e3ba302327baf2e98d1e07b953dcbbfd",
      "commitAuthor": "Shane Kumpf",
      "commitDateOld": "20/08/18 8:14 AM",
      "commitNameOld": "65e7469712be6cf393e29ef73cc94727eec81227",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 25.06,
      "commitsBetweenForRepo": 200,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   protected ContainerStatus getContainerStatusInternal(ContainerId containerID,\n       NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n     String containerIDStr \u003d containerID.toString();\n     Container container \u003d this.context.getContainers().get(containerID);\n \n     LOG.info(\"Getting container-status for \" + containerIDStr);\n     authorizeGetAndStopContainerRequest(containerID, container, false,\n       nmTokenIdentifier);\n \n     if (container \u003d\u003d null) {\n       if (nodeStatusUpdater.isContainerRecentlyStopped(containerID)) {\n         throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n           + \" was recently stopped on node manager.\");\n       } else {\n         throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n           + \" is not handled by this NodeManager\");\n       }\n     }\n     ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n-    LOG.info(\"Returning \" + containerStatus);\n+    logContainerStatus(\"Returning \", containerStatus);\n     return containerStatus;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected ContainerStatus getContainerStatusInternal(ContainerId containerID,\n      NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n    String containerIDStr \u003d containerID.toString();\n    Container container \u003d this.context.getContainers().get(containerID);\n\n    LOG.info(\"Getting container-status for \" + containerIDStr);\n    authorizeGetAndStopContainerRequest(containerID, container, false,\n      nmTokenIdentifier);\n\n    if (container \u003d\u003d null) {\n      if (nodeStatusUpdater.isContainerRecentlyStopped(containerID)) {\n        throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n          + \" was recently stopped on node manager.\");\n      } else {\n        throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n          + \" is not handled by this NodeManager\");\n      }\n    }\n    ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n    logContainerStatus(\"Returning \", containerStatus);\n    return containerStatus;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "c8172f5f143d2fefafa5a412899ab7cd081b406d": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-2883. Queuing of container requests in the NM. (Konstantinos Karanasos and Arun Suresh via kasha)\n",
      "commitDate": "20/04/16 9:55 AM",
      "commitName": "c8172f5f143d2fefafa5a412899ab7cd081b406d",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "14/04/16 12:17 PM",
      "commitNameOld": "3150ae8108a1fc40a67926be6254824c1e37cb38",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 5.9,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n-  private ContainerStatus getContainerStatusInternal(ContainerId containerID,\n+  protected ContainerStatus getContainerStatusInternal(ContainerId containerID,\n       NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n     String containerIDStr \u003d containerID.toString();\n     Container container \u003d this.context.getContainers().get(containerID);\n \n     LOG.info(\"Getting container-status for \" + containerIDStr);\n     authorizeGetAndStopContainerRequest(containerID, container, false,\n       nmTokenIdentifier);\n \n     if (container \u003d\u003d null) {\n       if (nodeStatusUpdater.isContainerRecentlyStopped(containerID)) {\n         throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n           + \" was recently stopped on node manager.\");\n       } else {\n         throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n           + \" is not handled by this NodeManager\");\n       }\n     }\n     ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n     LOG.info(\"Returning \" + containerStatus);\n     return containerStatus;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected ContainerStatus getContainerStatusInternal(ContainerId containerID,\n      NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n    String containerIDStr \u003d containerID.toString();\n    Container container \u003d this.context.getContainers().get(containerID);\n\n    LOG.info(\"Getting container-status for \" + containerIDStr);\n    authorizeGetAndStopContainerRequest(containerID, container, false,\n      nmTokenIdentifier);\n\n    if (container \u003d\u003d null) {\n      if (nodeStatusUpdater.isContainerRecentlyStopped(containerID)) {\n        throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n          + \" was recently stopped on node manager.\");\n      } else {\n        throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n          + \" is not handled by this NodeManager\");\n      }\n    }\n    ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n    LOG.info(\"Returning \" + containerStatus);\n    return containerStatus;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[protected]"
      }
    },
    "5b7889f9a7dea81bbb3c8be6944419b59ca4bed1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-903. Changed ContainerManager to suppress unnecessary warnings when stopping already stopped containers. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1509560 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/08/13 11:54 PM",
      "commitName": "5b7889f9a7dea81bbb3c8be6944419b59ca4bed1",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "29/07/13 3:23 PM",
      "commitNameOld": "c23cf3cddff9d4d52c2e892b26ba20e5640501e0",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 3.35,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,22 @@\n   private ContainerStatus getContainerStatusInternal(ContainerId containerID,\n       NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n     String containerIDStr \u003d containerID.toString();\n     Container container \u003d this.context.getContainers().get(containerID);\n \n     LOG.info(\"Getting container-status for \" + containerIDStr);\n     authorizeGetAndStopContainerRequest(containerID, container, false,\n       nmTokenIdentifier);\n \n+    if (container \u003d\u003d null) {\n+      if (nodeStatusUpdater.isContainerRecentlyStopped(containerID)) {\n+        throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n+          + \" was recently stopped on node manager.\");\n+      } else {\n+        throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n+          + \" is not handled by this NodeManager\");\n+      }\n+    }\n     ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n     LOG.info(\"Returning \" + containerStatus);\n     return containerStatus;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerStatus getContainerStatusInternal(ContainerId containerID,\n      NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n    String containerIDStr \u003d containerID.toString();\n    Container container \u003d this.context.getContainers().get(containerID);\n\n    LOG.info(\"Getting container-status for \" + containerIDStr);\n    authorizeGetAndStopContainerRequest(containerID, container, false,\n      nmTokenIdentifier);\n\n    if (container \u003d\u003d null) {\n      if (nodeStatusUpdater.isContainerRecentlyStopped(containerID)) {\n        throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n          + \" was recently stopped on node manager.\");\n      } else {\n        throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n          + \" is not handled by this NodeManager\");\n      }\n    }\n    ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n    LOG.info(\"Returning \" + containerStatus);\n    return containerStatus;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "3ca3137179ef093e42cde06587c9ea785b10f32c": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/07/13 8:41 PM",
      "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/07/13 8:41 PM",
          "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/07/13 12:31 AM",
          "commitNameOld": "c6facfb10db3f7791e35dd02d11990924a89711f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 6.84,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,13 @@\n-  public GetContainerStatusResponse getContainerStatus(\n-      GetContainerStatusRequest request) throws YarnException, IOException {\n-\n-    ContainerId containerID \u003d request.getContainerId();\n+  private ContainerStatus getContainerStatusInternal(ContainerId containerID,\n+      NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n     String containerIDStr \u003d containerID.toString();\n     Container container \u003d this.context.getContainers().get(containerID);\n \n     LOG.info(\"Getting container-status for \" + containerIDStr);\n-    authorizeGetAndStopContainerRequest(containerID, container, false);\n+    authorizeGetAndStopContainerRequest(containerID, container, false,\n+      nmTokenIdentifier);\n \n     ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n     LOG.info(\"Returning \" + containerStatus);\n-    GetContainerStatusResponse response \u003d\n-        recordFactory.newRecordInstance(GetContainerStatusResponse.class);\n-    response.setStatus(containerStatus);\n-    return response;\n+    return containerStatus;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ContainerStatus getContainerStatusInternal(ContainerId containerID,\n      NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n    String containerIDStr \u003d containerID.toString();\n    Container container \u003d this.context.getContainers().get(containerID);\n\n    LOG.info(\"Getting container-status for \" + containerIDStr);\n    authorizeGetAndStopContainerRequest(containerID, container, false,\n      nmTokenIdentifier);\n\n    ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n    LOG.info(\"Returning \" + containerStatus);\n    return containerStatus;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
          "extendedDetails": {
            "oldValue": "getContainerStatus",
            "newValue": "getContainerStatusInternal"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/07/13 8:41 PM",
          "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/07/13 12:31 AM",
          "commitNameOld": "c6facfb10db3f7791e35dd02d11990924a89711f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 6.84,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,13 @@\n-  public GetContainerStatusResponse getContainerStatus(\n-      GetContainerStatusRequest request) throws YarnException, IOException {\n-\n-    ContainerId containerID \u003d request.getContainerId();\n+  private ContainerStatus getContainerStatusInternal(ContainerId containerID,\n+      NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n     String containerIDStr \u003d containerID.toString();\n     Container container \u003d this.context.getContainers().get(containerID);\n \n     LOG.info(\"Getting container-status for \" + containerIDStr);\n-    authorizeGetAndStopContainerRequest(containerID, container, false);\n+    authorizeGetAndStopContainerRequest(containerID, container, false,\n+      nmTokenIdentifier);\n \n     ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n     LOG.info(\"Returning \" + containerStatus);\n-    GetContainerStatusResponse response \u003d\n-        recordFactory.newRecordInstance(GetContainerStatusResponse.class);\n-    response.setStatus(containerStatus);\n-    return response;\n+    return containerStatus;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ContainerStatus getContainerStatusInternal(ContainerId containerID,\n      NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n    String containerIDStr \u003d containerID.toString();\n    Container container \u003d this.context.getContainers().get(containerID);\n\n    LOG.info(\"Getting container-status for \" + containerIDStr);\n    authorizeGetAndStopContainerRequest(containerID, container, false,\n      nmTokenIdentifier);\n\n    ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n    LOG.info(\"Returning \" + containerStatus);\n    return containerStatus;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
          "extendedDetails": {
            "oldValue": "[request-GetContainerStatusRequest]",
            "newValue": "[containerID-ContainerId, nmTokenIdentifier-NMTokenIdentifier]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/07/13 8:41 PM",
          "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/07/13 12:31 AM",
          "commitNameOld": "c6facfb10db3f7791e35dd02d11990924a89711f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 6.84,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,13 @@\n-  public GetContainerStatusResponse getContainerStatus(\n-      GetContainerStatusRequest request) throws YarnException, IOException {\n-\n-    ContainerId containerID \u003d request.getContainerId();\n+  private ContainerStatus getContainerStatusInternal(ContainerId containerID,\n+      NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n     String containerIDStr \u003d containerID.toString();\n     Container container \u003d this.context.getContainers().get(containerID);\n \n     LOG.info(\"Getting container-status for \" + containerIDStr);\n-    authorizeGetAndStopContainerRequest(containerID, container, false);\n+    authorizeGetAndStopContainerRequest(containerID, container, false,\n+      nmTokenIdentifier);\n \n     ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n     LOG.info(\"Returning \" + containerStatus);\n-    GetContainerStatusResponse response \u003d\n-        recordFactory.newRecordInstance(GetContainerStatusResponse.class);\n-    response.setStatus(containerStatus);\n-    return response;\n+    return containerStatus;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ContainerStatus getContainerStatusInternal(ContainerId containerID,\n      NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n    String containerIDStr \u003d containerID.toString();\n    Container container \u003d this.context.getContainers().get(containerID);\n\n    LOG.info(\"Getting container-status for \" + containerIDStr);\n    authorizeGetAndStopContainerRequest(containerID, container, false,\n      nmTokenIdentifier);\n\n    ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n    LOG.info(\"Returning \" + containerStatus);\n    return containerStatus;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
          "extendedDetails": {
            "oldValue": "GetContainerStatusResponse",
            "newValue": "ContainerStatus"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/07/13 8:41 PM",
          "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/07/13 12:31 AM",
          "commitNameOld": "c6facfb10db3f7791e35dd02d11990924a89711f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 6.84,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,13 @@\n-  public GetContainerStatusResponse getContainerStatus(\n-      GetContainerStatusRequest request) throws YarnException, IOException {\n-\n-    ContainerId containerID \u003d request.getContainerId();\n+  private ContainerStatus getContainerStatusInternal(ContainerId containerID,\n+      NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n     String containerIDStr \u003d containerID.toString();\n     Container container \u003d this.context.getContainers().get(containerID);\n \n     LOG.info(\"Getting container-status for \" + containerIDStr);\n-    authorizeGetAndStopContainerRequest(containerID, container, false);\n+    authorizeGetAndStopContainerRequest(containerID, container, false,\n+      nmTokenIdentifier);\n \n     ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n     LOG.info(\"Returning \" + containerStatus);\n-    GetContainerStatusResponse response \u003d\n-        recordFactory.newRecordInstance(GetContainerStatusResponse.class);\n-    response.setStatus(containerStatus);\n-    return response;\n+    return containerStatus;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ContainerStatus getContainerStatusInternal(ContainerId containerID,\n      NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n    String containerIDStr \u003d containerID.toString();\n    Container container \u003d this.context.getContainers().get(containerID);\n\n    LOG.info(\"Getting container-status for \" + containerIDStr);\n    authorizeGetAndStopContainerRequest(containerID, container, false,\n      nmTokenIdentifier);\n\n    ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n    LOG.info(\"Returning \" + containerStatus);\n    return containerStatus;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/07/13 8:41 PM",
          "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/07/13 12:31 AM",
          "commitNameOld": "c6facfb10db3f7791e35dd02d11990924a89711f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 6.84,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,13 @@\n-  public GetContainerStatusResponse getContainerStatus(\n-      GetContainerStatusRequest request) throws YarnException, IOException {\n-\n-    ContainerId containerID \u003d request.getContainerId();\n+  private ContainerStatus getContainerStatusInternal(ContainerId containerID,\n+      NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n     String containerIDStr \u003d containerID.toString();\n     Container container \u003d this.context.getContainers().get(containerID);\n \n     LOG.info(\"Getting container-status for \" + containerIDStr);\n-    authorizeGetAndStopContainerRequest(containerID, container, false);\n+    authorizeGetAndStopContainerRequest(containerID, container, false,\n+      nmTokenIdentifier);\n \n     ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n     LOG.info(\"Returning \" + containerStatus);\n-    GetContainerStatusResponse response \u003d\n-        recordFactory.newRecordInstance(GetContainerStatusResponse.class);\n-    response.setStatus(containerStatus);\n-    return response;\n+    return containerStatus;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ContainerStatus getContainerStatusInternal(ContainerId containerID,\n      NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n    String containerIDStr \u003d containerID.toString();\n    Container container \u003d this.context.getContainers().get(containerID);\n\n    LOG.info(\"Getting container-status for \" + containerIDStr);\n    authorizeGetAndStopContainerRequest(containerID, container, false,\n      nmTokenIdentifier);\n\n    ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n    LOG.info(\"Returning \" + containerStatus);\n    return containerStatus;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
          "extendedDetails": {
            "oldValue": "[YarnException, IOException]",
            "newValue": "[YarnException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/07/13 8:41 PM",
          "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/07/13 12:31 AM",
          "commitNameOld": "c6facfb10db3f7791e35dd02d11990924a89711f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 6.84,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,13 @@\n-  public GetContainerStatusResponse getContainerStatus(\n-      GetContainerStatusRequest request) throws YarnException, IOException {\n-\n-    ContainerId containerID \u003d request.getContainerId();\n+  private ContainerStatus getContainerStatusInternal(ContainerId containerID,\n+      NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n     String containerIDStr \u003d containerID.toString();\n     Container container \u003d this.context.getContainers().get(containerID);\n \n     LOG.info(\"Getting container-status for \" + containerIDStr);\n-    authorizeGetAndStopContainerRequest(containerID, container, false);\n+    authorizeGetAndStopContainerRequest(containerID, container, false,\n+      nmTokenIdentifier);\n \n     ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n     LOG.info(\"Returning \" + containerStatus);\n-    GetContainerStatusResponse response \u003d\n-        recordFactory.newRecordInstance(GetContainerStatusResponse.class);\n-    response.setStatus(containerStatus);\n-    return response;\n+    return containerStatus;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ContainerStatus getContainerStatusInternal(ContainerId containerID,\n      NMTokenIdentifier nmTokenIdentifier) throws YarnException {\n    String containerIDStr \u003d containerID.toString();\n    Container container \u003d this.context.getContainers().get(containerID);\n\n    LOG.info(\"Getting container-status for \" + containerIDStr);\n    authorizeGetAndStopContainerRequest(containerID, container, false,\n      nmTokenIdentifier);\n\n    ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n    LOG.info(\"Returning \" + containerStatus);\n    return containerStatus;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "243bcd367ff3130d74676280233041f88aca62a5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-694. Starting to use NMTokens to authenticate all communication with NodeManagers. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494369 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/13 4:19 PM",
      "commitName": "243bcd367ff3130d74676280233041f88aca62a5",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 11:20 PM",
      "commitNameOld": "f4d80e91ae314d316100baa7770b9d73ea853d9c",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.71,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,17 @@\n   public GetContainerStatusResponse getContainerStatus(\n-      GetContainerStatusRequest request) throws YarnException,\n-      IOException {\n+      GetContainerStatusRequest request) throws YarnException, IOException {\n \n     ContainerId containerID \u003d request.getContainerId();\n     String containerIDStr \u003d containerID.toString();\n-\n-    // TODO: Only the container\u0027s owner can get containers\u0027 status today.\n-\n-    UserGroupInformation remoteUgi \u003d getRemoteUgi();\n-    LOG.info(\"Getting container-status for \" + containerIDStr);\n     Container container \u003d this.context.getContainers().get(containerID);\n-    if (container \u003d\u003d null) {\n-      throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n-        + \" is not handled by this NodeManager\"); \n-    }\n-    authorizeRequest(containerIDStr, null, remoteUgi,\n-      getContainerTokenIdentifier(remoteUgi, container.getContainerTokenIdentifier()));\n+\n+    LOG.info(\"Getting container-status for \" + containerIDStr);\n+    authorizeGetAndStopContainerRequest(containerID, container, false);\n \n     ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n     LOG.info(\"Returning \" + containerStatus);\n     GetContainerStatusResponse response \u003d\n         recordFactory.newRecordInstance(GetContainerStatusResponse.class);\n     response.setStatus(containerStatus);\n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetContainerStatusResponse getContainerStatus(\n      GetContainerStatusRequest request) throws YarnException, IOException {\n\n    ContainerId containerID \u003d request.getContainerId();\n    String containerIDStr \u003d containerID.toString();\n    Container container \u003d this.context.getContainers().get(containerID);\n\n    LOG.info(\"Getting container-status for \" + containerIDStr);\n    authorizeGetAndStopContainerRequest(containerID, container, false);\n\n    ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n    LOG.info(\"Returning \" + containerStatus);\n    GetContainerStatusResponse response \u003d\n        recordFactory.newRecordInstance(GetContainerStatusResponse.class);\n    response.setStatus(containerStatus);\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/06/13 5:34 PM",
      "commitNameOld": "d33534c4fb35cb82ff8d56abeeb63a949e72a031",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public GetContainerStatusResponse getContainerStatus(\n-      GetContainerStatusRequest request) throws YarnRemoteException,\n+      GetContainerStatusRequest request) throws YarnException,\n       IOException {\n \n     ContainerId containerID \u003d request.getContainerId();\n     String containerIDStr \u003d containerID.toString();\n \n     // TODO: Only the container\u0027s owner can get containers\u0027 status today.\n \n     UserGroupInformation remoteUgi \u003d getRemoteUgi();\n     LOG.info(\"Getting container-status for \" + containerIDStr);\n     Container container \u003d this.context.getContainers().get(containerID);\n     if (container \u003d\u003d null) {\n       throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n         + \" is not handled by this NodeManager\"); \n     }\n     authorizeRequest(containerIDStr, null, remoteUgi,\n       getContainerTokenIdentifier(remoteUgi, container.getContainerTokenIdentifier()));\n \n     ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n     LOG.info(\"Returning \" + containerStatus);\n     GetContainerStatusResponse response \u003d\n         recordFactory.newRecordInstance(GetContainerStatusResponse.class);\n     response.setStatus(containerStatus);\n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetContainerStatusResponse getContainerStatus(\n      GetContainerStatusRequest request) throws YarnException,\n      IOException {\n\n    ContainerId containerID \u003d request.getContainerId();\n    String containerIDStr \u003d containerID.toString();\n\n    // TODO: Only the container\u0027s owner can get containers\u0027 status today.\n\n    UserGroupInformation remoteUgi \u003d getRemoteUgi();\n    LOG.info(\"Getting container-status for \" + containerIDStr);\n    Container container \u003d this.context.getContainers().get(containerID);\n    if (container \u003d\u003d null) {\n      throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n        + \" is not handled by this NodeManager\"); \n    }\n    authorizeRequest(containerIDStr, null, remoteUgi,\n      getContainerTokenIdentifier(remoteUgi, container.getContainerTokenIdentifier()));\n\n    ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n    LOG.info(\"Returning \" + containerStatus);\n    GetContainerStatusResponse response \u003d\n        recordFactory.newRecordInstance(GetContainerStatusResponse.class);\n    response.setStatus(containerStatus);\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {
        "oldValue": "[YarnRemoteException, IOException]",
        "newValue": "[YarnException, IOException]"
      }
    },
    "2692675fc3b5046d2ec88542c30203c87e135b70": {
      "type": "Ybodychange",
      "commitMessage": "YARN-684. ContainerManager.startContainer should use ContainerTokenIdentifier instead of the entire Container. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488085 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/13 9:13 PM",
      "commitName": "2692675fc3b5046d2ec88542c30203c87e135b70",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "29/05/13 9:59 PM",
      "commitNameOld": "b16c5638b5190c56f9d854d873589cb5c11c8b32",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 0.97,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public GetContainerStatusResponse getContainerStatus(\n       GetContainerStatusRequest request) throws YarnRemoteException,\n       IOException {\n \n     ContainerId containerID \u003d request.getContainerId();\n     String containerIDStr \u003d containerID.toString();\n \n     // TODO: Only the container\u0027s owner can get containers\u0027 status today.\n \n-    UserGroupInformation remoteUgi \u003d getRemoteUgi(containerIDStr);\n+    UserGroupInformation remoteUgi \u003d getRemoteUgi();\n     LOG.info(\"Getting container-status for \" + containerIDStr);\n     Container container \u003d this.context.getContainers().get(containerID);\n     if (container \u003d\u003d null) {\n       throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n         + \" is not handled by this NodeManager\"); \n     }\n-    authorizeRequest(containerIDStr, null, null, remoteUgi,\n-      getContainerTokenIdentifier(remoteUgi, container.getContainer()));\n+    authorizeRequest(containerIDStr, null, remoteUgi,\n+      getContainerTokenIdentifier(remoteUgi, container.getContainerTokenIdentifier()));\n \n     ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n     LOG.info(\"Returning \" + containerStatus);\n     GetContainerStatusResponse response \u003d\n         recordFactory.newRecordInstance(GetContainerStatusResponse.class);\n     response.setStatus(containerStatus);\n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetContainerStatusResponse getContainerStatus(\n      GetContainerStatusRequest request) throws YarnRemoteException,\n      IOException {\n\n    ContainerId containerID \u003d request.getContainerId();\n    String containerIDStr \u003d containerID.toString();\n\n    // TODO: Only the container\u0027s owner can get containers\u0027 status today.\n\n    UserGroupInformation remoteUgi \u003d getRemoteUgi();\n    LOG.info(\"Getting container-status for \" + containerIDStr);\n    Container container \u003d this.context.getContainers().get(containerID);\n    if (container \u003d\u003d null) {\n      throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n        + \" is not handled by this NodeManager\"); \n    }\n    authorizeRequest(containerIDStr, null, remoteUgi,\n      getContainerTokenIdentifier(remoteUgi, container.getContainerTokenIdentifier()));\n\n    ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n    LOG.info(\"Returning \" + containerStatus);\n    GetContainerStatusResponse response \u003d\n        recordFactory.newRecordInstance(GetContainerStatusResponse.class);\n    response.setStatus(containerStatus);\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "ca8024673178fa1c80224b390dfba932921693d9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-617. Made ContainerTokens to be used for validation at NodeManager also in unsecure mode to prevent AMs from faking resource requirements in unsecure mode. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1483667 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/05/13 11:36 PM",
      "commitName": "ca8024673178fa1c80224b390dfba932921693d9",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/05/13 9:11 PM",
      "commitNameOld": "1a119f87b4f0a78d56e1bb998b1cbc081484fbd1",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 3.1,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public GetContainerStatusResponse getContainerStatus(\n       GetContainerStatusRequest request) throws YarnRemoteException,\n       IOException {\n \n     ContainerId containerID \u003d request.getContainerId();\n     String containerIDStr \u003d containerID.toString();\n \n     // TODO: Only the container\u0027s owner can get containers\u0027 status today.\n \n     UserGroupInformation remoteUgi \u003d getRemoteUgi(containerIDStr);\n-    authorizeRequest(containerIDStr, null, null, remoteUgi);\n-\n     LOG.info(\"Getting container-status for \" + containerIDStr);\n     Container container \u003d this.context.getContainers().get(containerID);\n-    if (container !\u003d null) {\n-      ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n-      LOG.info(\"Returning \" + containerStatus);\n-      GetContainerStatusResponse response \u003d recordFactory\n-          .newRecordInstance(GetContainerStatusResponse.class);\n-      response.setStatus(containerStatus);\n-      return response;\n+    if (container \u003d\u003d null) {\n+      throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n+        + \" is not handled by this NodeManager\"); \n     }\n+    authorizeRequest(containerIDStr, null, null, remoteUgi,\n+      getContainerTokenIdentifier(remoteUgi, container.getContainer()));\n \n-    throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n-        + \" is not handled by this NodeManager\");\n+    ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n+    LOG.info(\"Returning \" + containerStatus);\n+    GetContainerStatusResponse response \u003d\n+        recordFactory.newRecordInstance(GetContainerStatusResponse.class);\n+    response.setStatus(containerStatus);\n+    return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetContainerStatusResponse getContainerStatus(\n      GetContainerStatusRequest request) throws YarnRemoteException,\n      IOException {\n\n    ContainerId containerID \u003d request.getContainerId();\n    String containerIDStr \u003d containerID.toString();\n\n    // TODO: Only the container\u0027s owner can get containers\u0027 status today.\n\n    UserGroupInformation remoteUgi \u003d getRemoteUgi(containerIDStr);\n    LOG.info(\"Getting container-status for \" + containerIDStr);\n    Container container \u003d this.context.getContainers().get(containerID);\n    if (container \u003d\u003d null) {\n      throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n        + \" is not handled by this NodeManager\"); \n    }\n    authorizeRequest(containerIDStr, null, null, remoteUgi,\n      getContainerTokenIdentifier(remoteUgi, container.getContainer()));\n\n    ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n    LOG.info(\"Returning \" + containerStatus);\n    GetContainerStatusResponse response \u003d\n        recordFactory.newRecordInstance(GetContainerStatusResponse.class);\n    response.setStatus(containerStatus);\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "9eb53b9c841233538a51e4e854b261536c0b85d4": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-632. Changed ContainerManager api to throw IOException and YarnRemoteException. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1479740 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/05/13 5:42 PM",
      "commitName": "9eb53b9c841233538a51e4e854b261536c0b85d4",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "06/05/13 12:04 PM",
      "commitNameOld": "92b7165a71656468f17ce8b760ce11e648932f0e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.23,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   public GetContainerStatusResponse getContainerStatus(\n-      GetContainerStatusRequest request) throws YarnRemoteException {\n+      GetContainerStatusRequest request) throws YarnRemoteException,\n+      IOException {\n \n     ContainerId containerID \u003d request.getContainerId();\n     String containerIDStr \u003d containerID.toString();\n \n     // TODO: Only the container\u0027s owner can get containers\u0027 status today.\n \n     UserGroupInformation remoteUgi \u003d getRemoteUgi(containerIDStr);\n     authorizeRequest(containerIDStr, null, null, remoteUgi);\n \n     LOG.info(\"Getting container-status for \" + containerIDStr);\n     Container container \u003d this.context.getContainers().get(containerID);\n     if (container !\u003d null) {\n       ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n       LOG.info(\"Returning \" + containerStatus);\n       GetContainerStatusResponse response \u003d recordFactory\n           .newRecordInstance(GetContainerStatusResponse.class);\n       response.setStatus(containerStatus);\n       return response;\n     }\n \n     throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n         + \" is not handled by this NodeManager\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetContainerStatusResponse getContainerStatus(\n      GetContainerStatusRequest request) throws YarnRemoteException,\n      IOException {\n\n    ContainerId containerID \u003d request.getContainerId();\n    String containerIDStr \u003d containerID.toString();\n\n    // TODO: Only the container\u0027s owner can get containers\u0027 status today.\n\n    UserGroupInformation remoteUgi \u003d getRemoteUgi(containerIDStr);\n    authorizeRequest(containerIDStr, null, null, remoteUgi);\n\n    LOG.info(\"Getting container-status for \" + containerIDStr);\n    Container container \u003d this.context.getContainers().get(containerID);\n    if (container !\u003d null) {\n      ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n      LOG.info(\"Returning \" + containerStatus);\n      GetContainerStatusResponse response \u003d recordFactory\n          .newRecordInstance(GetContainerStatusResponse.class);\n      response.setStatus(containerStatus);\n      return response;\n    }\n\n    throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n        + \" is not handled by this NodeManager\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {
        "oldValue": "[YarnRemoteException]",
        "newValue": "[YarnRemoteException, IOException]"
      }
    },
    "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-486. Changed NM\u0027s startContainer API to accept Container record given by RM as a direct parameter instead of as part of the ContainerLaunchContext record. Contributed by Xuan Gong.\nMAPREDUCE-5139. Update MR AM to use the modified startContainer API after YARN-486. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1467063 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/04/13 12:28 PM",
      "commitName": "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/12/12 4:12 AM",
      "commitNameOld": "235749a8ab5f303b5b3a2993da8c5bea1818183b",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 129.3,
      "commitsBetweenForRepo": 595,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public GetContainerStatusResponse getContainerStatus(\n       GetContainerStatusRequest request) throws YarnRemoteException {\n \n     ContainerId containerID \u003d request.getContainerId();\n     String containerIDStr \u003d containerID.toString();\n \n     // TODO: Only the container\u0027s owner can get containers\u0027 status today.\n \n     UserGroupInformation remoteUgi \u003d getRemoteUgi(containerIDStr);\n-    authorizeRequest(containerIDStr, null, remoteUgi);\n+    authorizeRequest(containerIDStr, null, null, remoteUgi);\n \n     LOG.info(\"Getting container-status for \" + containerIDStr);\n     Container container \u003d this.context.getContainers().get(containerID);\n     if (container !\u003d null) {\n       ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n       LOG.info(\"Returning \" + containerStatus);\n       GetContainerStatusResponse response \u003d recordFactory\n           .newRecordInstance(GetContainerStatusResponse.class);\n       response.setStatus(containerStatus);\n       return response;\n     }\n \n     throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n         + \" is not handled by this NodeManager\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetContainerStatusResponse getContainerStatus(\n      GetContainerStatusRequest request) throws YarnRemoteException {\n\n    ContainerId containerID \u003d request.getContainerId();\n    String containerIDStr \u003d containerID.toString();\n\n    // TODO: Only the container\u0027s owner can get containers\u0027 status today.\n\n    UserGroupInformation remoteUgi \u003d getRemoteUgi(containerIDStr);\n    authorizeRequest(containerIDStr, null, null, remoteUgi);\n\n    LOG.info(\"Getting container-status for \" + containerIDStr);\n    Container container \u003d this.context.getContainers().get(containerID);\n    if (container !\u003d null) {\n      ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n      LOG.info(\"Returning \" + containerStatus);\n      GetContainerStatusResponse response \u003d recordFactory\n          .newRecordInstance(GetContainerStatusResponse.class);\n      response.setStatus(containerStatus);\n      return response;\n    }\n\n    throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n        + \" is not handled by this NodeManager\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "ffd2e01604be814fa3db1dded7cd7cff26a79b1e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-39. RM-NM secret-keys should be randomly generated and rolled every so often. (Contributed by Vinod Kumar Vavilapalli and Siddharth Seth)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1377180 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/12 7:18 PM",
      "commitName": "ffd2e01604be814fa3db1dded7cd7cff26a79b1e",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 16.87,
      "commitsBetweenForRepo": 114,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,25 @@\n   public GetContainerStatusResponse getContainerStatus(\n       GetContainerStatusRequest request) throws YarnRemoteException {\n \n     ContainerId containerID \u003d request.getContainerId();\n-    // TODO: Only the container\u0027s owner can get containers\u0027 status today.\n-    authorizeRequest(containerID, null);\n+    String containerIDStr \u003d containerID.toString();\n \n-    LOG.info(\"Getting container-status for \" + containerID);\n+    // TODO: Only the container\u0027s owner can get containers\u0027 status today.\n+\n+    UserGroupInformation remoteUgi \u003d getRemoteUgi(containerIDStr);\n+    authorizeRequest(containerIDStr, null, remoteUgi);\n+\n+    LOG.info(\"Getting container-status for \" + containerIDStr);\n     Container container \u003d this.context.getContainers().get(containerID);\n     if (container !\u003d null) {\n       ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n       LOG.info(\"Returning \" + containerStatus);\n       GetContainerStatusResponse response \u003d recordFactory\n           .newRecordInstance(GetContainerStatusResponse.class);\n       response.setStatus(containerStatus);\n       return response;\n     }\n \n-    throw RPCUtil.getRemoteException(\"Container \" + containerID\n+    throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n         + \" is not handled by this NodeManager\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetContainerStatusResponse getContainerStatus(\n      GetContainerStatusRequest request) throws YarnRemoteException {\n\n    ContainerId containerID \u003d request.getContainerId();\n    String containerIDStr \u003d containerID.toString();\n\n    // TODO: Only the container\u0027s owner can get containers\u0027 status today.\n\n    UserGroupInformation remoteUgi \u003d getRemoteUgi(containerIDStr);\n    authorizeRequest(containerIDStr, null, remoteUgi);\n\n    LOG.info(\"Getting container-status for \" + containerIDStr);\n    Container container \u003d this.context.getContainers().get(containerID);\n    if (container !\u003d null) {\n      ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n      LOG.info(\"Returning \" + containerStatus);\n      GetContainerStatusResponse response \u003d recordFactory\n          .newRecordInstance(GetContainerStatusResponse.class);\n      response.setStatus(containerStatus);\n      return response;\n    }\n\n    throw RPCUtil.getRemoteException(\"Container \" + containerIDStr\n        + \" is not handled by this NodeManager\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public GetContainerStatusResponse getContainerStatus(\n      GetContainerStatusRequest request) throws YarnRemoteException {\n\n    ContainerId containerID \u003d request.getContainerId();\n    // TODO: Only the container\u0027s owner can get containers\u0027 status today.\n    authorizeRequest(containerID, null);\n\n    LOG.info(\"Getting container-status for \" + containerID);\n    Container container \u003d this.context.getContainers().get(containerID);\n    if (container !\u003d null) {\n      ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n      LOG.info(\"Returning \" + containerStatus);\n      GetContainerStatusResponse response \u003d recordFactory\n          .newRecordInstance(GetContainerStatusResponse.class);\n      response.setStatus(containerStatus);\n      return response;\n    }\n\n    throw RPCUtil.getRemoteException(\"Container \" + containerID\n        + \" is not handled by this NodeManager\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java"
      }
    },
    "7f4dc277572df6ba25fa961073b99a5bdb086c00": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3256. Added authorization checks for the protocol between NodeManager and ApplicationMaster. Contributed by Vinod K V.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1194850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/10/11 2:35 AM",
      "commitName": "7f4dc277572df6ba25fa961073b99a5bdb086c00",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "27/10/11 11:45 PM",
      "commitNameOld": "670fa24b48acb407c22fbfdde87ae3123dcbf449",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 1.12,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,21 @@\n-  public GetContainerStatusResponse getContainerStatus(GetContainerStatusRequest request) throws YarnRemoteException {\n+  public GetContainerStatusResponse getContainerStatus(\n+      GetContainerStatusRequest request) throws YarnRemoteException {\n+\n     ContainerId containerID \u003d request.getContainerId();\n+    // TODO: Only the container\u0027s owner can get containers\u0027 status today.\n+    authorizeRequest(containerID, null);\n+\n     LOG.info(\"Getting container-status for \" + containerID);\n     Container container \u003d this.context.getContainers().get(containerID);\n     if (container !\u003d null) {\n       ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n       LOG.info(\"Returning \" + containerStatus);\n-      GetContainerStatusResponse response \u003d recordFactory.newRecordInstance(GetContainerStatusResponse.class);\n+      GetContainerStatusResponse response \u003d recordFactory\n+          .newRecordInstance(GetContainerStatusResponse.class);\n       response.setStatus(containerStatus);\n       return response;\n-    } else {\n-      throw RPCUtil.getRemoteException(\"Container \" + containerID\n-          + \" is not handled by this NodeManager\");\n     }\n+\n+    throw RPCUtil.getRemoteException(\"Container \" + containerID\n+        + \" is not handled by this NodeManager\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetContainerStatusResponse getContainerStatus(\n      GetContainerStatusRequest request) throws YarnRemoteException {\n\n    ContainerId containerID \u003d request.getContainerId();\n    // TODO: Only the container\u0027s owner can get containers\u0027 status today.\n    authorizeRequest(containerID, null);\n\n    LOG.info(\"Getting container-status for \" + containerID);\n    Container container \u003d this.context.getContainers().get(containerID);\n    if (container !\u003d null) {\n      ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n      LOG.info(\"Returning \" + containerStatus);\n      GetContainerStatusResponse response \u003d recordFactory\n          .newRecordInstance(GetContainerStatusResponse.class);\n      response.setStatus(containerStatus);\n      return response;\n    }\n\n    throw RPCUtil.getRemoteException(\"Container \" + containerID\n        + \" is not handled by this NodeManager\");\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public GetContainerStatusResponse getContainerStatus(GetContainerStatusRequest request) throws YarnRemoteException {\n    ContainerId containerID \u003d request.getContainerId();\n    LOG.info(\"Getting container-status for \" + containerID);\n    Container container \u003d this.context.getContainers().get(containerID);\n    if (container !\u003d null) {\n      ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n      LOG.info(\"Returning \" + containerStatus);\n      GetContainerStatusResponse response \u003d recordFactory.newRecordInstance(GetContainerStatusResponse.class);\n      response.setStatus(containerStatus);\n      return response;\n    } else {\n      throw RPCUtil.getRemoteException(\"Container \" + containerID\n          + \" is not handled by this NodeManager\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,15 @@\n+  public GetContainerStatusResponse getContainerStatus(GetContainerStatusRequest request) throws YarnRemoteException {\n+    ContainerId containerID \u003d request.getContainerId();\n+    LOG.info(\"Getting container-status for \" + containerID);\n+    Container container \u003d this.context.getContainers().get(containerID);\n+    if (container !\u003d null) {\n+      ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n+      LOG.info(\"Returning \" + containerStatus);\n+      GetContainerStatusResponse response \u003d recordFactory.newRecordInstance(GetContainerStatusResponse.class);\n+      response.setStatus(containerStatus);\n+      return response;\n+    } else {\n+      throw RPCUtil.getRemoteException(\"Container \" + containerID\n+          + \" is not handled by this NodeManager\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public GetContainerStatusResponse getContainerStatus(GetContainerStatusRequest request) throws YarnRemoteException {\n    ContainerId containerID \u003d request.getContainerId();\n    LOG.info(\"Getting container-status for \" + containerID);\n    Container container \u003d this.context.getContainers().get(containerID);\n    if (container !\u003d null) {\n      ContainerStatus containerStatus \u003d container.cloneAndGetContainerStatus();\n      LOG.info(\"Returning \" + containerStatus);\n      GetContainerStatusResponse response \u003d recordFactory.newRecordInstance(GetContainerStatusResponse.class);\n      response.setStatus(containerStatus);\n      return response;\n    } else {\n      throw RPCUtil.getRemoteException(\"Container \" + containerID\n          + \" is not handled by this NodeManager\");\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java"
    }
  }
}