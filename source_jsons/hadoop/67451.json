{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AdlFileSystem.java",
  "functionName": "toFileStatuses",
  "functionId": "toFileStatuses___entries-List__DirectoryEntry__(modifiers-final)__parent-Path(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-azure-datalake/src/main/java/org/apache/hadoop/fs/adl/AdlFileSystem.java",
  "functionStartLine": 632,
  "functionEndLine": 647,
  "numCommitsSeen": 19,
  "timeTaken": 1488,
  "changeHistory": [
    "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417"
  ],
  "changeHistoryShort": {
    "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13037. Refactor Azure Data Lake Store as an independent FileSystem. Contributed by Vishwajeet Dusane\n",
      "commitDate": "11/11/16 11:15 AM",
      "commitName": "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417",
      "commitAuthor": "Chris Douglas",
      "diff": "@@ -0,0 +1,16 @@\n+  private FileStatus[] toFileStatuses(final List\u003cDirectoryEntry\u003e entries,\n+      final Path parent) {\n+    FileStatus[] fileStatuses \u003d new FileStatus[entries.size()];\n+    int index \u003d 0;\n+    for (DirectoryEntry entry : entries) {\n+      FileStatus status \u003d toFileStatus(entry, parent);\n+      if (!(entry.name \u003d\u003d null || entry.name \u003d\u003d \"\")) {\n+        status.setPath(\n+            new Path(parent.makeQualified(uri, workingDirectory), entry.name));\n+      }\n+\n+      fileStatuses[index++] \u003d status;\n+    }\n+\n+    return fileStatuses;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private FileStatus[] toFileStatuses(final List\u003cDirectoryEntry\u003e entries,\n      final Path parent) {\n    FileStatus[] fileStatuses \u003d new FileStatus[entries.size()];\n    int index \u003d 0;\n    for (DirectoryEntry entry : entries) {\n      FileStatus status \u003d toFileStatus(entry, parent);\n      if (!(entry.name \u003d\u003d null || entry.name \u003d\u003d \"\")) {\n        status.setPath(\n            new Path(parent.makeQualified(uri, workingDirectory), entry.name));\n      }\n\n      fileStatuses[index++] \u003d status;\n    }\n\n    return fileStatuses;\n  }",
      "path": "hadoop-tools/hadoop-azure-datalake/src/main/java/org/apache/hadoop/fs/adl/AdlFileSystem.java"
    }
  }
}