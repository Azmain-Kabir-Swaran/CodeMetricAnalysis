{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobHistoryServer.java",
  "functionName": "serviceInit",
  "functionId": "serviceInit___conf-Configuration",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
  "functionStartLine": 119,
  "functionEndLine": 149,
  "numCommitsSeen": 47,
  "timeTaken": 9980,
  "changeHistory": [
    "e2c87b79170f18b316957cb935fbc254d448cd08",
    "dd43b895c2e50fa97cb7327be77509b87dad1823",
    "65f395226ba6cc3750a268a308e288b916f8df1e",
    "e73a928a6360f68aaee2ed58b3a8d180f4051407",
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
    "1152e23ed03e8831a3167a729503aad3cbcb4ee7",
    "21181b65531449e5fda321c11f0672c3067641aa",
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
    "2627e352d630d19c35b97eea9ef603342feb379f",
    "13420d01f2fb28a0e445dc87ad9ee9b607804d53",
    "8fa3ebd13451a243510eed5c2f3dd43cdf605a77",
    "a42e459b9eba8c79652036e44dceb34d717b665e",
    "cc536fe4da7b462d40f36ca7fc5109d297b08a2b",
    "0928502029ef141759008997335ea2cd836a7154",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "7fc6ad661d4723cc2ea1df1ff0c4611d5f534f9e",
    "5ee495e6f34faff231ad87ec890188eb63617393",
    "bc4b1f48d3aba7f7a324ae76ab65a0920b1e609e",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "e2c87b79170f18b316957cb935fbc254d448cd08": "Ybodychange",
    "dd43b895c2e50fa97cb7327be77509b87dad1823": "Ybodychange",
    "65f395226ba6cc3750a268a308e288b916f8df1e": "Ybodychange",
    "e73a928a6360f68aaee2ed58b3a8d180f4051407": "Ybodychange",
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d": "Ybodychange",
    "1152e23ed03e8831a3167a729503aad3cbcb4ee7": "Ybodychange",
    "21181b65531449e5fda321c11f0672c3067641aa": "Ybodychange",
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082": "Ybodychange",
    "2627e352d630d19c35b97eea9ef603342feb379f": "Ybodychange",
    "13420d01f2fb28a0e445dc87ad9ee9b607804d53": "Ybodychange",
    "8fa3ebd13451a243510eed5c2f3dd43cdf605a77": "Ybodychange",
    "a42e459b9eba8c79652036e44dceb34d717b665e": "Ybodychange",
    "cc536fe4da7b462d40f36ca7fc5109d297b08a2b": "Ybodychange",
    "0928502029ef141759008997335ea2cd836a7154": "Ymultichange(Yrename,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Ybodychange",
    "7fc6ad661d4723cc2ea1df1ff0c4611d5f534f9e": "Ybodychange",
    "5ee495e6f34faff231ad87ec890188eb63617393": "Ybodychange",
    "bc4b1f48d3aba7f7a324ae76ab65a0920b1e609e": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e2c87b79170f18b316957cb935fbc254d448cd08": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-7266. historyContext doesn\u0027t need to be a class attribute inside JobHistoryServer. Contributed by Siddharth Ahuja\n",
      "commitDate": "09/04/20 3:38 AM",
      "commitName": "e2c87b79170f18b316957cb935fbc254d448cd08",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "08/11/17 2:21 AM",
      "commitNameOld": "ffee10b68ef1f2d75c9d0df9140c2a605f826724",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 883.01,
      "commitsBetweenForRepo": 6434,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,31 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n     // This is required for WebApps to use https if enabled.\n     MRWebAppUtil.initialize(getConfig());\n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n-    historyContext \u003d (HistoryContext)jobHistoryService;\n     stateStore \u003d createStateStore(conf);\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf, stateStore);\n     clientService \u003d createHistoryClientService();\n     aggLogDelService \u003d new AggregatedLogDeletionService();\n     hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n     addService(stateStore);\n     addService(new HistoryServerSecretManagerService());\n     addService(jobHistoryService);\n     addService(clientService);\n     addService(aggLogDelService);\n     addService(hsAdminServer);\n \n     DefaultMetricsSystem.initialize(\"JobHistoryServer\");\n     JvmMetrics jm \u003d JvmMetrics.initSingleton(\"JobHistoryServer\", null);\n     pauseMonitor \u003d new JvmPauseMonitor();\n     addService(pauseMonitor);\n     jm.setPauseMonitor(pauseMonitor);\n \n     super.serviceInit(config);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    // This is required for WebApps to use https if enabled.\n    MRWebAppUtil.initialize(getConfig());\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    stateStore \u003d createStateStore(conf);\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf, stateStore);\n    clientService \u003d createHistoryClientService();\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n    addService(stateStore);\n    addService(new HistoryServerSecretManagerService());\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    addService(hsAdminServer);\n\n    DefaultMetricsSystem.initialize(\"JobHistoryServer\");\n    JvmMetrics jm \u003d JvmMetrics.initSingleton(\"JobHistoryServer\", null);\n    pauseMonitor \u003d new JvmPauseMonitor();\n    addService(pauseMonitor);\n    jm.setPauseMonitor(pauseMonitor);\n\n    super.serviceInit(config);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "dd43b895c2e50fa97cb7327be77509b87dad1823": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6202. Configuration item Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY is disregarded\n(Contributed by Yufei Gu via Daniel Templeton)\n",
      "commitDate": "19/04/17 11:44 AM",
      "commitName": "dd43b895c2e50fa97cb7327be77509b87dad1823",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "06/12/15 9:43 AM",
      "commitNameOld": "65f395226ba6cc3750a268a308e288b916f8df1e",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 500.04,
      "commitsBetweenForRepo": 3282,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,32 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n-    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n-\n     // This is required for WebApps to use https if enabled.\n     MRWebAppUtil.initialize(getConfig());\n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n     stateStore \u003d createStateStore(conf);\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf, stateStore);\n     clientService \u003d createHistoryClientService();\n     aggLogDelService \u003d new AggregatedLogDeletionService();\n     hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n     addService(stateStore);\n     addService(new HistoryServerSecretManagerService());\n     addService(jobHistoryService);\n     addService(clientService);\n     addService(aggLogDelService);\n     addService(hsAdminServer);\n \n     DefaultMetricsSystem.initialize(\"JobHistoryServer\");\n     JvmMetrics jm \u003d JvmMetrics.initSingleton(\"JobHistoryServer\", null);\n     pauseMonitor \u003d new JvmPauseMonitor();\n     addService(pauseMonitor);\n     jm.setPauseMonitor(pauseMonitor);\n \n     super.serviceInit(config);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    // This is required for WebApps to use https if enabled.\n    MRWebAppUtil.initialize(getConfig());\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    stateStore \u003d createStateStore(conf);\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf, stateStore);\n    clientService \u003d createHistoryClientService();\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n    addService(stateStore);\n    addService(new HistoryServerSecretManagerService());\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    addService(hsAdminServer);\n\n    DefaultMetricsSystem.initialize(\"JobHistoryServer\");\n    JvmMetrics jm \u003d JvmMetrics.initSingleton(\"JobHistoryServer\", null);\n    pauseMonitor \u003d new JvmPauseMonitor();\n    addService(pauseMonitor);\n    jm.setPauseMonitor(pauseMonitor);\n\n    super.serviceInit(config);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "65f395226ba6cc3750a268a308e288b916f8df1e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12321. Make JvmPauseMonitor an AbstractService. (Sunil G via Stevel) [includes HDFS-8947 MAPREDUCE-6462 and YARN-4072]\n",
      "commitDate": "06/12/15 9:43 AM",
      "commitName": "65f395226ba6cc3750a268a308e288b916f8df1e",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "06/08/15 7:03 AM",
      "commitNameOld": "e73a928a6360f68aaee2ed58b3a8d180f4051407",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 122.15,
      "commitsBetweenForRepo": 852,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,34 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n     config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n \n     // This is required for WebApps to use https if enabled.\n     MRWebAppUtil.initialize(getConfig());\n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n     stateStore \u003d createStateStore(conf);\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf, stateStore);\n     clientService \u003d createHistoryClientService();\n     aggLogDelService \u003d new AggregatedLogDeletionService();\n     hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n     addService(stateStore);\n     addService(new HistoryServerSecretManagerService());\n     addService(jobHistoryService);\n     addService(clientService);\n     addService(aggLogDelService);\n     addService(hsAdminServer);\n \n     DefaultMetricsSystem.initialize(\"JobHistoryServer\");\n     JvmMetrics jm \u003d JvmMetrics.initSingleton(\"JobHistoryServer\", null);\n-    pauseMonitor \u003d new JvmPauseMonitor(getConfig());\n+    pauseMonitor \u003d new JvmPauseMonitor();\n+    addService(pauseMonitor);\n     jm.setPauseMonitor(pauseMonitor);\n \n     super.serviceInit(config);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n\n    // This is required for WebApps to use https if enabled.\n    MRWebAppUtil.initialize(getConfig());\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    stateStore \u003d createStateStore(conf);\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf, stateStore);\n    clientService \u003d createHistoryClientService();\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n    addService(stateStore);\n    addService(new HistoryServerSecretManagerService());\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    addService(hsAdminServer);\n\n    DefaultMetricsSystem.initialize(\"JobHistoryServer\");\n    JvmMetrics jm \u003d JvmMetrics.initSingleton(\"JobHistoryServer\", null);\n    pauseMonitor \u003d new JvmPauseMonitor();\n    addService(pauseMonitor);\n    jm.setPauseMonitor(pauseMonitor);\n\n    super.serviceInit(config);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "e73a928a6360f68aaee2ed58b3a8d180f4051407": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6443. Add JvmPauseMonitor to JobHistoryServer. Contributed by Robert Kanter.\n(cherry picked from commit c8469357bad481ca8e341050553a5ae6d98bf8e5)\n\nConflicts:\n\n\thadoop-mapreduce-project/CHANGES.txt\n",
      "commitDate": "06/08/15 7:03 AM",
      "commitName": "e73a928a6360f68aaee2ed58b3a8d180f4051407",
      "commitAuthor": "Junping Du",
      "commitDateOld": "26/02/15 5:12 PM",
      "commitNameOld": "8ca0d957c4b1076e801e1cdce5b44aa805de889c",
      "commitAuthorOld": "Konstantin V Shvachko",
      "daysBetweenCommits": 160.54,
      "commitsBetweenForRepo": 1296,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,33 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n     config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n \n     // This is required for WebApps to use https if enabled.\n     MRWebAppUtil.initialize(getConfig());\n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n     stateStore \u003d createStateStore(conf);\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf, stateStore);\n     clientService \u003d createHistoryClientService();\n     aggLogDelService \u003d new AggregatedLogDeletionService();\n     hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n     addService(stateStore);\n     addService(new HistoryServerSecretManagerService());\n     addService(jobHistoryService);\n     addService(clientService);\n     addService(aggLogDelService);\n     addService(hsAdminServer);\n+\n+    DefaultMetricsSystem.initialize(\"JobHistoryServer\");\n+    JvmMetrics jm \u003d JvmMetrics.initSingleton(\"JobHistoryServer\", null);\n+    pauseMonitor \u003d new JvmPauseMonitor(getConfig());\n+    jm.setPauseMonitor(pauseMonitor);\n+\n     super.serviceInit(config);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n\n    // This is required for WebApps to use https if enabled.\n    MRWebAppUtil.initialize(getConfig());\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    stateStore \u003d createStateStore(conf);\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf, stateStore);\n    clientService \u003d createHistoryClientService();\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n    addService(stateStore);\n    addService(new HistoryServerSecretManagerService());\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    addService(hsAdminServer);\n\n    DefaultMetricsSystem.initialize(\"JobHistoryServer\");\n    JvmMetrics jm \u003d JvmMetrics.initSingleton(\"JobHistoryServer\", null);\n    pauseMonitor \u003d new JvmPauseMonitor(getConfig());\n    jm.setPauseMonitor(pauseMonitor);\n\n    super.serviceInit(config);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1553. Modified YARN and MR to stop using HttpConfig.isSecure() and\ninstead rely on the http policy framework. And also fix some bugs related\nto https handling in YARN web-apps. Contributed by Haohui Mai.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1568501 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/02/14 12:01 PM",
      "commitName": "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "27/12/13 10:55 PM",
      "commitNameOld": "1152e23ed03e8831a3167a729503aad3cbcb4ee7",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 48.55,
      "commitsBetweenForRepo": 291,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,27 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n     config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n \n     // This is required for WebApps to use https if enabled.\n     MRWebAppUtil.initialize(getConfig());\n-    HttpConfig.setPolicy(MRWebAppUtil.getJHSHttpPolicy());\n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n     stateStore \u003d createStateStore(conf);\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf, stateStore);\n     clientService \u003d createHistoryClientService();\n     aggLogDelService \u003d new AggregatedLogDeletionService();\n     hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n     addService(stateStore);\n     addService(new HistoryServerSecretManagerService());\n     addService(jobHistoryService);\n     addService(clientService);\n     addService(aggLogDelService);\n     addService(hsAdminServer);\n     super.serviceInit(config);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n\n    // This is required for WebApps to use https if enabled.\n    MRWebAppUtil.initialize(getConfig());\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    stateStore \u003d createStateStore(conf);\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf, stateStore);\n    clientService \u003d createHistoryClientService();\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n    addService(stateStore);\n    addService(new HistoryServerSecretManagerService());\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    addService(hsAdminServer);\n    super.serviceInit(config);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "1152e23ed03e8831a3167a729503aad3cbcb4ee7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1463. Tests should avoid starting http-server where possible or creates spnego keytab/principals (vinodkv via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1553790 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/12/13 10:55 PM",
      "commitName": "1152e23ed03e8831a3167a729503aad3cbcb4ee7",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "06/10/13 11:43 AM",
      "commitNameOld": "21181b65531449e5fda321c11f0672c3067641aa",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 82.51,
      "commitsBetweenForRepo": 495,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,28 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n     config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n \n     // This is required for WebApps to use https if enabled.\n     MRWebAppUtil.initialize(getConfig());\n     HttpConfig.setPolicy(MRWebAppUtil.getJHSHttpPolicy());\n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n     stateStore \u003d createStateStore(conf);\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf, stateStore);\n-    clientService \u003d new HistoryClientService(historyContext, \n-        this.jhsDTSecretManager);\n+    clientService \u003d createHistoryClientService();\n     aggLogDelService \u003d new AggregatedLogDeletionService();\n     hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n     addService(stateStore);\n     addService(new HistoryServerSecretManagerService());\n     addService(jobHistoryService);\n     addService(clientService);\n     addService(aggLogDelService);\n     addService(hsAdminServer);\n     super.serviceInit(config);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n\n    // This is required for WebApps to use https if enabled.\n    MRWebAppUtil.initialize(getConfig());\n    HttpConfig.setPolicy(MRWebAppUtil.getJHSHttpPolicy());\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    stateStore \u003d createStateStore(conf);\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf, stateStore);\n    clientService \u003d createHistoryClientService();\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n    addService(stateStore);\n    addService(new HistoryServerSecretManagerService());\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    addService(hsAdminServer);\n    super.serviceInit(config);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "21181b65531449e5fda321c11f0672c3067641aa": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1277. Added a policy based configuration for http/https in common HttpServer and using the same in YARN - related\nto per project https config support via HADOOP-10022. Contributed by Suresh Srinivas and Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1529662 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/10/13 11:43 AM",
      "commitName": "21181b65531449e5fda321c11f0672c3067641aa",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "01/10/13 3:52 PM",
      "commitNameOld": "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 4.83,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n     config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n \n     // This is required for WebApps to use https if enabled.\n     MRWebAppUtil.initialize(getConfig());\n-    HttpConfig.setSecure(MRWebAppUtil.isSSLEnabledInJHS());\n+    HttpConfig.setPolicy(MRWebAppUtil.getJHSHttpPolicy());\n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n     stateStore \u003d createStateStore(conf);\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf, stateStore);\n     clientService \u003d new HistoryClientService(historyContext, \n         this.jhsDTSecretManager);\n     aggLogDelService \u003d new AggregatedLogDeletionService();\n     hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n     addService(stateStore);\n     addService(new HistoryServerSecretManagerService());\n     addService(jobHistoryService);\n     addService(clientService);\n     addService(aggLogDelService);\n     addService(hsAdminServer);\n     super.serviceInit(config);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n\n    // This is required for WebApps to use https if enabled.\n    MRWebAppUtil.initialize(getConfig());\n    HttpConfig.setPolicy(MRWebAppUtil.getJHSHttpPolicy());\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    stateStore \u003d createStateStore(conf);\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf, stateStore);\n    clientService \u003d new HistoryClientService(historyContext, \n        this.jhsDTSecretManager);\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n    addService(stateStore);\n    addService(new HistoryServerSecretManagerService());\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    addService(hsAdminServer);\n    super.serviceInit(config);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "82f4348f27a7b6bb74edb583fc17fef9f4f3b082": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5536. Fixed MR AM and JHS to respect mapreduce.jobhistory.webapp.https.address. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1528251 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/10/13 3:52 PM",
      "commitName": "82f4348f27a7b6bb74edb583fc17fef9f4f3b082",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "27/09/13 11:19 AM",
      "commitNameOld": "2627e352d630d19c35b97eea9ef603342feb379f",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 4.19,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,29 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n     config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n \n     // This is required for WebApps to use https if enabled.\n-    WebAppUtil.setSSLEnabledInYARN(conf.getBoolean(\n-        CommonConfigurationKeysPublic.HADOOP_SSL_ENABLED_KEY,\n-        CommonConfigurationKeysPublic.HADOOP_SSL_ENABLED_DEFAULT));\n+    MRWebAppUtil.initialize(getConfig());\n+    HttpConfig.setSecure(MRWebAppUtil.isSSLEnabledInJHS());\n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n     stateStore \u003d createStateStore(conf);\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf, stateStore);\n     clientService \u003d new HistoryClientService(historyContext, \n         this.jhsDTSecretManager);\n     aggLogDelService \u003d new AggregatedLogDeletionService();\n     hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n     addService(stateStore);\n     addService(new HistoryServerSecretManagerService());\n     addService(jobHistoryService);\n     addService(clientService);\n     addService(aggLogDelService);\n     addService(hsAdminServer);\n     super.serviceInit(config);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n\n    // This is required for WebApps to use https if enabled.\n    MRWebAppUtil.initialize(getConfig());\n    HttpConfig.setSecure(MRWebAppUtil.isSSLEnabledInJHS());\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    stateStore \u003d createStateStore(conf);\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf, stateStore);\n    clientService \u003d new HistoryClientService(historyContext, \n        this.jhsDTSecretManager);\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n    addService(stateStore);\n    addService(new HistoryServerSecretManagerService());\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    addService(hsAdminServer);\n    super.serviceInit(config);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "2627e352d630d19c35b97eea9ef603342feb379f": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5332. Support token-preserving restart of history server. Contributed by Jason Lowe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527015 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 11:19 AM",
      "commitName": "2627e352d630d19c35b97eea9ef603342feb379f",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "19/09/13 4:35 PM",
      "commitNameOld": "13420d01f2fb28a0e445dc87ad9ee9b607804d53",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 7.78,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,30 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n     config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n \n     // This is required for WebApps to use https if enabled.\n     WebAppUtil.setSSLEnabledInYARN(conf.getBoolean(\n         CommonConfigurationKeysPublic.HADOOP_SSL_ENABLED_KEY,\n         CommonConfigurationKeysPublic.HADOOP_SSL_ENABLED_DEFAULT));\n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n-    this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n+    stateStore \u003d createStateStore(conf);\n+    this.jhsDTSecretManager \u003d createJHSSecretManager(conf, stateStore);\n     clientService \u003d new HistoryClientService(historyContext, \n         this.jhsDTSecretManager);\n     aggLogDelService \u003d new AggregatedLogDeletionService();\n     hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n+    addService(stateStore);\n+    addService(new HistoryServerSecretManagerService());\n     addService(jobHistoryService);\n     addService(clientService);\n     addService(aggLogDelService);\n     addService(hsAdminServer);\n     super.serviceInit(config);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n\n    // This is required for WebApps to use https if enabled.\n    WebAppUtil.setSSLEnabledInYARN(conf.getBoolean(\n        CommonConfigurationKeysPublic.HADOOP_SSL_ENABLED_KEY,\n        CommonConfigurationKeysPublic.HADOOP_SSL_ENABLED_DEFAULT));\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    stateStore \u003d createStateStore(conf);\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf, stateStore);\n    clientService \u003d new HistoryClientService(historyContext, \n        this.jhsDTSecretManager);\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n    addService(stateStore);\n    addService(new HistoryServerSecretManagerService());\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    addService(hsAdminServer);\n    super.serviceInit(config);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "13420d01f2fb28a0e445dc87ad9ee9b607804d53": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1203. Changed YARN web-app proxy to handle http and https URLs from AM registration and finish correctly. Contributed by Omkar Vinit Joshi.\nMAPREDUCE-5515. Fixed MR AM\u0027s webapp to depend on a new config mapreduce.ssl.enabled to enable https and disabling it by default as MR AM needs\nto set up its own certificates etc and not depend on clusters\u0027. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1524864 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/13 4:35 PM",
      "commitName": "13420d01f2fb28a0e445dc87ad9ee9b607804d53",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/08/13 1:02 PM",
      "commitNameOld": "c5c90ff8f58805880f27be66d28a811fe22a6152",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 43.15,
      "commitsBetweenForRepo": 242,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,27 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n     config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n \n+    // This is required for WebApps to use https if enabled.\n+    WebAppUtil.setSSLEnabledInYARN(conf.getBoolean(\n+        CommonConfigurationKeysPublic.HADOOP_SSL_ENABLED_KEY,\n+        CommonConfigurationKeysPublic.HADOOP_SSL_ENABLED_DEFAULT));\n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n     clientService \u003d new HistoryClientService(historyContext, \n         this.jhsDTSecretManager);\n     aggLogDelService \u003d new AggregatedLogDeletionService();\n     hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n     addService(jobHistoryService);\n     addService(clientService);\n     addService(aggLogDelService);\n     addService(hsAdminServer);\n     super.serviceInit(config);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n\n    // This is required for WebApps to use https if enabled.\n    WebAppUtil.setSSLEnabledInYARN(conf.getBoolean(\n        CommonConfigurationKeysPublic.HADOOP_SSL_ENABLED_KEY,\n        CommonConfigurationKeysPublic.HADOOP_SSL_ENABLED_DEFAULT));\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n    clientService \u003d new HistoryClientService(historyContext, \n        this.jhsDTSecretManager);\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    addService(hsAdminServer);\n    super.serviceInit(config);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "8fa3ebd13451a243510eed5c2f3dd43cdf605a77": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5386. Ability to refresh history server job retention and job cleaner settings. Contributed by Ashwin Shankar\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1507135 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/07/13 2:27 PM",
      "commitName": "8fa3ebd13451a243510eed5c2f3dd43cdf605a77",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "23/07/13 12:20 PM",
      "commitNameOld": "a42e459b9eba8c79652036e44dceb34d717b665e",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 2.09,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n     config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n \n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n     clientService \u003d new HistoryClientService(historyContext, \n         this.jhsDTSecretManager);\n     aggLogDelService \u003d new AggregatedLogDeletionService();\n-    hsAdminServer \u003d new HSAdminServer(aggLogDelService);\n+    hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n     addService(jobHistoryService);\n     addService(clientService);\n     addService(aggLogDelService);\n     addService(hsAdminServer);\n     super.serviceInit(config);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n    clientService \u003d new HistoryClientService(historyContext, \n        this.jhsDTSecretManager);\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    hsAdminServer \u003d new HSAdminServer(aggLogDelService, jobHistoryService);\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    addService(hsAdminServer);\n    super.serviceInit(config);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "a42e459b9eba8c79652036e44dceb34d717b665e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5356. Ability to refresh aggregated log retention period and check interval. Contributed by Ashwin Shankar\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506226 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/07/13 12:20 PM",
      "commitName": "a42e459b9eba8c79652036e44dceb34d717b665e",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "18/07/13 1:41 PM",
      "commitNameOld": "cc536fe4da7b462d40f36ca7fc5109d297b08a2b",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 4.94,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n     config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n \n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n     clientService \u003d new HistoryClientService(historyContext, \n         this.jhsDTSecretManager);\n     aggLogDelService \u003d new AggregatedLogDeletionService();\n-    hsAdminServer \u003d new HSAdminServer();\n+    hsAdminServer \u003d new HSAdminServer(aggLogDelService);\n     addService(jobHistoryService);\n     addService(clientService);\n     addService(aggLogDelService);\n     addService(hsAdminServer);\n     super.serviceInit(config);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n    clientService \u003d new HistoryClientService(historyContext, \n        this.jhsDTSecretManager);\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    hsAdminServer \u003d new HSAdminServer(aggLogDelService);\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    addService(hsAdminServer);\n    super.serviceInit(config);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "cc536fe4da7b462d40f36ca7fc5109d297b08a2b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5265. History server admin service to refresh user and superuser group mappings. Contributed by Ashwin Shankar\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1504645 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/07/13 1:41 PM",
      "commitName": "cc536fe4da7b462d40f36ca7fc5109d297b08a2b",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "16/06/13 11:39 PM",
      "commitNameOld": "b9efe6bd4a1277b4067ecde715a7713a85968886",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 31.58,
      "commitsBetweenForRepo": 174,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,23 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n     config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n \n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n     clientService \u003d new HistoryClientService(historyContext, \n         this.jhsDTSecretManager);\n     aggLogDelService \u003d new AggregatedLogDeletionService();\n+    hsAdminServer \u003d new HSAdminServer();\n     addService(jobHistoryService);\n     addService(clientService);\n     addService(aggLogDelService);\n+    addService(hsAdminServer);\n     super.serviceInit(config);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n    clientService \u003d new HistoryClientService(historyContext, \n        this.jhsDTSecretManager);\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    hsAdminServer \u003d new HSAdminServer();\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    addService(hsAdminServer);\n    super.serviceInit(config);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "0928502029ef141759008997335ea2cd836a7154": {
      "type": "Ymultichange(Yrename,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 8:54 AM",
      "commitName": "0928502029ef141759008997335ea2cd836a7154",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public synchronized void init(Configuration conf) {\n+  protected void serviceInit(Configuration conf) throws Exception {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n     config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n \n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n     clientService \u003d new HistoryClientService(historyContext, \n         this.jhsDTSecretManager);\n     aggLogDelService \u003d new AggregatedLogDeletionService();\n     addService(jobHistoryService);\n     addService(clientService);\n     addService(aggLogDelService);\n-    super.init(config);\n+    super.serviceInit(config);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n    clientService \u003d new HistoryClientService(historyContext, \n        this.jhsDTSecretManager);\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    super.serviceInit(config);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
          "extendedDetails": {
            "oldValue": "init",
            "newValue": "serviceInit"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public synchronized void init(Configuration conf) {\n+  protected void serviceInit(Configuration conf) throws Exception {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n     config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n \n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n     clientService \u003d new HistoryClientService(historyContext, \n         this.jhsDTSecretManager);\n     aggLogDelService \u003d new AggregatedLogDeletionService();\n     addService(jobHistoryService);\n     addService(clientService);\n     addService(aggLogDelService);\n-    super.init(config);\n+    super.serviceInit(config);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n    clientService \u003d new HistoryClientService(historyContext, \n        this.jhsDTSecretManager);\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    super.serviceInit(config);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public synchronized void init(Configuration conf) {\n+  protected void serviceInit(Configuration conf) throws Exception {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n     config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n \n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n     clientService \u003d new HistoryClientService(historyContext, \n         this.jhsDTSecretManager);\n     aggLogDelService \u003d new AggregatedLogDeletionService();\n     addService(jobHistoryService);\n     addService(clientService);\n     addService(aggLogDelService);\n-    super.init(config);\n+    super.serviceInit(config);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n    clientService \u003d new HistoryClientService(historyContext, \n        this.jhsDTSecretManager);\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    super.serviceInit(config);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[Exception]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 8:54 AM",
          "commitName": "0928502029ef141759008997335ea2cd836a7154",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/06/13 9:05 PM",
          "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 9.49,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  public synchronized void init(Configuration conf) {\n+  protected void serviceInit(Configuration conf) throws Exception {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n     config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n \n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n     clientService \u003d new HistoryClientService(historyContext, \n         this.jhsDTSecretManager);\n     aggLogDelService \u003d new AggregatedLogDeletionService();\n     addService(jobHistoryService);\n     addService(clientService);\n     addService(aggLogDelService);\n-    super.init(config);\n+    super.serviceInit(config);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n    clientService \u003d new HistoryClientService(historyContext, \n        this.jhsDTSecretManager);\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    super.serviceInit(config);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
          "extendedDetails": {}
        }
      ]
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Ybodychange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "21/11/12 4:05 PM",
      "commitNameOld": "6c5f37e46d5f70859777b553cbe00fc43dfdb008",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 194.17,
      "commitsBetweenForRepo": 1045,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public synchronized void init(Configuration conf) {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n     config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n \n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n-      throw new YarnException(\"History Server Failed to login\", ie);\n+      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n     clientService \u003d new HistoryClientService(historyContext, \n         this.jhsDTSecretManager);\n     aggLogDelService \u003d new AggregatedLogDeletionService();\n     addService(jobHistoryService);\n     addService(clientService);\n     addService(aggLogDelService);\n     super.init(config);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void init(Configuration conf) {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnRuntimeException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n    clientService \u003d new HistoryClientService(historyContext, \n        this.jhsDTSecretManager);\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    super.init(config);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "7fc6ad661d4723cc2ea1df1ff0c4611d5f534f9e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-25. remove old aggregated logs  (Robert Evans via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1374424 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/08/12 1:29 PM",
      "commitName": "7fc6ad661d4723cc2ea1df1ff0c4611d5f534f9e",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "09/07/12 2:08 PM",
      "commitNameOld": "11782dd3a5ee5a2f6ad42b335f0386d00baa9ae1",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 38.97,
      "commitsBetweenForRepo": 224,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,21 @@\n   public synchronized void init(Configuration conf) {\n     Configuration config \u003d new YarnConfiguration(conf);\n \n     config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n \n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n     clientService \u003d new HistoryClientService(historyContext, \n         this.jhsDTSecretManager);\n+    aggLogDelService \u003d new AggregatedLogDeletionService();\n     addService(jobHistoryService);\n     addService(clientService);\n+    addService(aggLogDelService);\n     super.init(config);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void init(Configuration conf) {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n    clientService \u003d new HistoryClientService(historyContext, \n        this.jhsDTSecretManager);\n    aggLogDelService \u003d new AggregatedLogDeletionService();\n    addService(jobHistoryService);\n    addService(clientService);\n    addService(aggLogDelService);\n    super.init(config);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "5ee495e6f34faff231ad87ec890188eb63617393": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3634. Fixed all daemons to crash instead of hanging around when their EventHandlers get exceptions. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1291598 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/02/12 9:08 PM",
      "commitName": "5ee495e6f34faff231ad87ec890188eb63617393",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "10/01/12 5:50 PM",
      "commitNameOld": "bc4b1f48d3aba7f7a324ae76ab65a0920b1e609e",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 41.14,
      "commitsBetweenForRepo": 262,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,19 @@\n   public synchronized void init(Configuration conf) {\n     Configuration config \u003d new YarnConfiguration(conf);\n+\n+    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n+\n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n     this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n     clientService \u003d new HistoryClientService(historyContext, \n         this.jhsDTSecretManager);\n     addService(jobHistoryService);\n     addService(clientService);\n     super.init(config);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void init(Configuration conf) {\n    Configuration config \u003d new YarnConfiguration(conf);\n\n    config.setBoolean(Dispatcher.DISPATCHER_EXIT_ON_ERROR_KEY, true);\n\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n    clientService \u003d new HistoryClientService(historyContext, \n        this.jhsDTSecretManager);\n    addService(jobHistoryService);\n    addService(clientService);\n    super.init(config);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "bc4b1f48d3aba7f7a324ae76ab65a0920b1e609e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3380. Token infrastructure for running clients which are not kerberos authenticated. (mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1229855 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/01/12 5:50 PM",
      "commitName": "bc4b1f48d3aba7f7a324ae76ab65a0920b1e609e",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "27/10/11 11:45 PM",
      "commitNameOld": "670fa24b48acb407c22fbfdde87ae3123dcbf449",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 74.8,
      "commitsBetweenForRepo": 394,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n   public synchronized void init(Configuration conf) {\n     Configuration config \u003d new YarnConfiguration(conf);\n     try {\n       doSecureLogin(conf);\n     } catch(IOException ie) {\n       throw new YarnException(\"History Server Failed to login\", ie);\n     }\n     jobHistoryService \u003d new JobHistory();\n     historyContext \u003d (HistoryContext)jobHistoryService;\n-    clientService \u003d new HistoryClientService(historyContext);\n+    this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n+    clientService \u003d new HistoryClientService(historyContext, \n+        this.jhsDTSecretManager);\n     addService(jobHistoryService);\n     addService(clientService);\n     super.init(config);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void init(Configuration conf) {\n    Configuration config \u003d new YarnConfiguration(conf);\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    this.jhsDTSecretManager \u003d createJHSSecretManager(conf);\n    clientService \u003d new HistoryClientService(historyContext, \n        this.jhsDTSecretManager);\n    addService(jobHistoryService);\n    addService(clientService);\n    super.init(config);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void init(Configuration conf) {\n    Configuration config \u003d new YarnConfiguration(conf);\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    clientService \u003d new HistoryClientService(historyContext);\n    addService(jobHistoryService);\n    addService(clientService);\n    super.init(config);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,14 @@\n+  public synchronized void init(Configuration conf) {\n+    Configuration config \u003d new YarnConfiguration(conf);\n+    try {\n+      doSecureLogin(conf);\n+    } catch(IOException ie) {\n+      throw new YarnException(\"History Server Failed to login\", ie);\n+    }\n+    jobHistoryService \u003d new JobHistory();\n+    historyContext \u003d (HistoryContext)jobHistoryService;\n+    clientService \u003d new HistoryClientService(historyContext);\n+    addService(jobHistoryService);\n+    addService(clientService);\n+    super.init(config);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void init(Configuration conf) {\n    Configuration config \u003d new YarnConfiguration(conf);\n    try {\n      doSecureLogin(conf);\n    } catch(IOException ie) {\n      throw new YarnException(\"History Server Failed to login\", ie);\n    }\n    jobHistoryService \u003d new JobHistory();\n    historyContext \u003d (HistoryContext)jobHistoryService;\n    clientService \u003d new HistoryClientService(historyContext);\n    addService(jobHistoryService);\n    addService(clientService);\n    super.init(config);\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/JobHistoryServer.java"
    }
  }
}