{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterRpcServer.java",
  "functionName": "create",
  "functionId": "create___src-String__masked-FsPermission__clientName-String__flag-EnumSetWritable__CreateFlag____createParent-boolean__replication-short__blockSize-long__supportedVersions-CryptoProtocolVersion[]__ecPolicyName-String__storagePolicy-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
  "functionStartLine": 605,
  "functionEndLine": 613,
  "numCommitsSeen": 105,
  "timeTaken": 6028,
  "changeHistory": [
    "0d7a5ac5f526801367a9ec963e6d72783b637d55",
    "6425ed27ea638da75f656204d6df4adad1d91fe1",
    "fb5b3dce6192265bce9b9d93ab663bdc5be8048e",
    "fa121eb66bc42e9cb5586f8c2e268cfdc2ed187a",
    "2caba999bbb9d6e3ec56024a0a9d3d56a229edcf",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "ca4f209b49e3aad6a80306f7342c9b6b560a79a7"
  ],
  "changeHistoryShort": {
    "0d7a5ac5f526801367a9ec963e6d72783b637d55": "Ymultichange(Yparameterchange,Ybodychange)",
    "6425ed27ea638da75f656204d6df4adad1d91fe1": "Ybodychange",
    "fb5b3dce6192265bce9b9d93ab663bdc5be8048e": "Ybodychange",
    "fa121eb66bc42e9cb5586f8c2e268cfdc2ed187a": "Ybodychange",
    "2caba999bbb9d6e3ec56024a0a9d3d56a229edcf": "Ybodychange",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "ca4f209b49e3aad6a80306f7342c9b6b560a79a7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0d7a5ac5f526801367a9ec963e6d72783b637d55": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-13209. DistributedFileSystem.create should allow an option to provide StoragePolicy. Contributed by Ayush Saxena.\n",
      "commitDate": "14/02/19 8:43 AM",
      "commitName": "0d7a5ac5f526801367a9ec963e6d72783b637d55",
      "commitAuthor": "Surendra Singh Lilhore",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-13209. DistributedFileSystem.create should allow an option to provide StoragePolicy. Contributed by Ayush Saxena.\n",
          "commitDate": "14/02/19 8:43 AM",
          "commitName": "0d7a5ac5f526801367a9ec963e6d72783b637d55",
          "commitAuthor": "Surendra Singh Lilhore",
          "commitDateOld": "24/12/18 9:34 AM",
          "commitNameOld": "652b257478f723a9e119e5e9181f3c7450ac92b5",
          "commitAuthorOld": "Chen Liang",
          "daysBetweenCommits": 51.96,
          "commitsBetweenForRepo": 332,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n   public HdfsFileStatus create(String src, FsPermission masked,\n       String clientName, EnumSetWritable\u003cCreateFlag\u003e flag,\n       boolean createParent, short replication, long blockSize,\n-      CryptoProtocolVersion[] supportedVersions, String ecPolicyName)\n+      CryptoProtocolVersion[] supportedVersions, String ecPolicyName,\n+      String storagePolicy)\n       throws IOException {\n     return clientProto.create(src, masked, clientName, flag, createParent,\n-        replication, blockSize, supportedVersions, ecPolicyName);\n+        replication, blockSize, supportedVersions, ecPolicyName, storagePolicy);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public HdfsFileStatus create(String src, FsPermission masked,\n      String clientName, EnumSetWritable\u003cCreateFlag\u003e flag,\n      boolean createParent, short replication, long blockSize,\n      CryptoProtocolVersion[] supportedVersions, String ecPolicyName,\n      String storagePolicy)\n      throws IOException {\n    return clientProto.create(src, masked, clientName, flag, createParent,\n        replication, blockSize, supportedVersions, ecPolicyName, storagePolicy);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
          "extendedDetails": {
            "oldValue": "[src-String, masked-FsPermission, clientName-String, flag-EnumSetWritable\u003cCreateFlag\u003e, createParent-boolean, replication-short, blockSize-long, supportedVersions-CryptoProtocolVersion[], ecPolicyName-String]",
            "newValue": "[src-String, masked-FsPermission, clientName-String, flag-EnumSetWritable\u003cCreateFlag\u003e, createParent-boolean, replication-short, blockSize-long, supportedVersions-CryptoProtocolVersion[], ecPolicyName-String, storagePolicy-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13209. DistributedFileSystem.create should allow an option to provide StoragePolicy. Contributed by Ayush Saxena.\n",
          "commitDate": "14/02/19 8:43 AM",
          "commitName": "0d7a5ac5f526801367a9ec963e6d72783b637d55",
          "commitAuthor": "Surendra Singh Lilhore",
          "commitDateOld": "24/12/18 9:34 AM",
          "commitNameOld": "652b257478f723a9e119e5e9181f3c7450ac92b5",
          "commitAuthorOld": "Chen Liang",
          "daysBetweenCommits": 51.96,
          "commitsBetweenForRepo": 332,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n   public HdfsFileStatus create(String src, FsPermission masked,\n       String clientName, EnumSetWritable\u003cCreateFlag\u003e flag,\n       boolean createParent, short replication, long blockSize,\n-      CryptoProtocolVersion[] supportedVersions, String ecPolicyName)\n+      CryptoProtocolVersion[] supportedVersions, String ecPolicyName,\n+      String storagePolicy)\n       throws IOException {\n     return clientProto.create(src, masked, clientName, flag, createParent,\n-        replication, blockSize, supportedVersions, ecPolicyName);\n+        replication, blockSize, supportedVersions, ecPolicyName, storagePolicy);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public HdfsFileStatus create(String src, FsPermission masked,\n      String clientName, EnumSetWritable\u003cCreateFlag\u003e flag,\n      boolean createParent, short replication, long blockSize,\n      CryptoProtocolVersion[] supportedVersions, String ecPolicyName,\n      String storagePolicy)\n      throws IOException {\n    return clientProto.create(src, masked, clientName, flag, createParent,\n        replication, blockSize, supportedVersions, ecPolicyName, storagePolicy);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
          "extendedDetails": {}
        }
      ]
    },
    "6425ed27ea638da75f656204d6df4adad1d91fe1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13790. RBF: Move ClientProtocol APIs to its own module. Contributed by Chao Sun.\n",
      "commitDate": "19/08/18 11:50 PM",
      "commitName": "6425ed27ea638da75f656204d6df4adad1d91fe1",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "17/08/18 8:01 AM",
      "commitNameOld": "fb5b3dce6192265bce9b9d93ab663bdc5be8048e",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 2.66,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,8 @@\n   public HdfsFileStatus create(String src, FsPermission masked,\n       String clientName, EnumSetWritable\u003cCreateFlag\u003e flag,\n       boolean createParent, short replication, long blockSize,\n       CryptoProtocolVersion[] supportedVersions, String ecPolicyName)\n       throws IOException {\n-    checkOperation(OperationCategory.WRITE);\n-\n-    if (createParent \u0026\u0026 isPathAll(src)) {\n-      int index \u003d src.lastIndexOf(Path.SEPARATOR);\n-      String parent \u003d src.substring(0, index);\n-      LOG.debug(\"Creating {} requires creating parent {}\", src, parent);\n-      FsPermission parentPermissions \u003d getParentPermission(masked);\n-      boolean success \u003d mkdirs(parent, parentPermissions, createParent);\n-      if (!success) {\n-        // This shouldn\u0027t happen as mkdirs returns true or exception\n-        LOG.error(\"Couldn\u0027t create parents for {}\", src);\n-      }\n-    }\n-\n-    RemoteLocation createLocation \u003d getCreateLocation(src);\n-    RemoteMethod method \u003d new RemoteMethod(\"create\",\n-        new Class\u003c?\u003e[] {String.class, FsPermission.class, String.class,\n-                        EnumSetWritable.class, boolean.class, short.class,\n-                        long.class, CryptoProtocolVersion[].class,\n-                        String.class},\n-        createLocation.getDest(), masked, clientName, flag, createParent,\n+    return clientProto.create(src, masked, clientName, flag, createParent,\n         replication, blockSize, supportedVersions, ecPolicyName);\n-    return (HdfsFileStatus) rpcClient.invokeSingle(createLocation, method);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public HdfsFileStatus create(String src, FsPermission masked,\n      String clientName, EnumSetWritable\u003cCreateFlag\u003e flag,\n      boolean createParent, short replication, long blockSize,\n      CryptoProtocolVersion[] supportedVersions, String ecPolicyName)\n      throws IOException {\n    return clientProto.create(src, masked, clientName, flag, createParent,\n        replication, blockSize, supportedVersions, ecPolicyName);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
      "extendedDetails": {}
    },
    "fb5b3dce6192265bce9b9d93ab663bdc5be8048e": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-13790. RBF: Move ClientProtocol APIs to its own module. Contributed by Chao Sun.\"\n\nThis reverts commit fa121eb66bc42e9cb5586f8c2e268cfdc2ed187a.\n",
      "commitDate": "17/08/18 8:01 AM",
      "commitName": "fb5b3dce6192265bce9b9d93ab663bdc5be8048e",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "17/08/18 2:52 AM",
      "commitNameOld": "fa121eb66bc42e9cb5586f8c2e268cfdc2ed187a",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 0.21,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,29 @@\n   public HdfsFileStatus create(String src, FsPermission masked,\n       String clientName, EnumSetWritable\u003cCreateFlag\u003e flag,\n       boolean createParent, short replication, long blockSize,\n       CryptoProtocolVersion[] supportedVersions, String ecPolicyName)\n       throws IOException {\n-    return clientProto.create(src, masked, clientName, flag, createParent,\n+    checkOperation(OperationCategory.WRITE);\n+\n+    if (createParent \u0026\u0026 isPathAll(src)) {\n+      int index \u003d src.lastIndexOf(Path.SEPARATOR);\n+      String parent \u003d src.substring(0, index);\n+      LOG.debug(\"Creating {} requires creating parent {}\", src, parent);\n+      FsPermission parentPermissions \u003d getParentPermission(masked);\n+      boolean success \u003d mkdirs(parent, parentPermissions, createParent);\n+      if (!success) {\n+        // This shouldn\u0027t happen as mkdirs returns true or exception\n+        LOG.error(\"Couldn\u0027t create parents for {}\", src);\n+      }\n+    }\n+\n+    RemoteLocation createLocation \u003d getCreateLocation(src);\n+    RemoteMethod method \u003d new RemoteMethod(\"create\",\n+        new Class\u003c?\u003e[] {String.class, FsPermission.class, String.class,\n+                        EnumSetWritable.class, boolean.class, short.class,\n+                        long.class, CryptoProtocolVersion[].class,\n+                        String.class},\n+        createLocation.getDest(), masked, clientName, flag, createParent,\n         replication, blockSize, supportedVersions, ecPolicyName);\n+    return (HdfsFileStatus) rpcClient.invokeSingle(createLocation, method);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public HdfsFileStatus create(String src, FsPermission masked,\n      String clientName, EnumSetWritable\u003cCreateFlag\u003e flag,\n      boolean createParent, short replication, long blockSize,\n      CryptoProtocolVersion[] supportedVersions, String ecPolicyName)\n      throws IOException {\n    checkOperation(OperationCategory.WRITE);\n\n    if (createParent \u0026\u0026 isPathAll(src)) {\n      int index \u003d src.lastIndexOf(Path.SEPARATOR);\n      String parent \u003d src.substring(0, index);\n      LOG.debug(\"Creating {} requires creating parent {}\", src, parent);\n      FsPermission parentPermissions \u003d getParentPermission(masked);\n      boolean success \u003d mkdirs(parent, parentPermissions, createParent);\n      if (!success) {\n        // This shouldn\u0027t happen as mkdirs returns true or exception\n        LOG.error(\"Couldn\u0027t create parents for {}\", src);\n      }\n    }\n\n    RemoteLocation createLocation \u003d getCreateLocation(src);\n    RemoteMethod method \u003d new RemoteMethod(\"create\",\n        new Class\u003c?\u003e[] {String.class, FsPermission.class, String.class,\n                        EnumSetWritable.class, boolean.class, short.class,\n                        long.class, CryptoProtocolVersion[].class,\n                        String.class},\n        createLocation.getDest(), masked, clientName, flag, createParent,\n        replication, blockSize, supportedVersions, ecPolicyName);\n    return (HdfsFileStatus) rpcClient.invokeSingle(createLocation, method);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
      "extendedDetails": {}
    },
    "fa121eb66bc42e9cb5586f8c2e268cfdc2ed187a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13790. RBF: Move ClientProtocol APIs to its own module. Contributed by Chao Sun.\n",
      "commitDate": "17/08/18 2:52 AM",
      "commitName": "fa121eb66bc42e9cb5586f8c2e268cfdc2ed187a",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "39ed3a66dbb01383ed16b141183fc48bfd2e613d",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 4.99,
      "commitsBetweenForRepo": 43,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,8 @@\n   public HdfsFileStatus create(String src, FsPermission masked,\n       String clientName, EnumSetWritable\u003cCreateFlag\u003e flag,\n       boolean createParent, short replication, long blockSize,\n       CryptoProtocolVersion[] supportedVersions, String ecPolicyName)\n       throws IOException {\n-    checkOperation(OperationCategory.WRITE);\n-\n-    if (createParent \u0026\u0026 isPathAll(src)) {\n-      int index \u003d src.lastIndexOf(Path.SEPARATOR);\n-      String parent \u003d src.substring(0, index);\n-      LOG.debug(\"Creating {} requires creating parent {}\", src, parent);\n-      FsPermission parentPermissions \u003d getParentPermission(masked);\n-      boolean success \u003d mkdirs(parent, parentPermissions, createParent);\n-      if (!success) {\n-        // This shouldn\u0027t happen as mkdirs returns true or exception\n-        LOG.error(\"Couldn\u0027t create parents for {}\", src);\n-      }\n-    }\n-\n-    RemoteLocation createLocation \u003d getCreateLocation(src);\n-    RemoteMethod method \u003d new RemoteMethod(\"create\",\n-        new Class\u003c?\u003e[] {String.class, FsPermission.class, String.class,\n-                        EnumSetWritable.class, boolean.class, short.class,\n-                        long.class, CryptoProtocolVersion[].class,\n-                        String.class},\n-        createLocation.getDest(), masked, clientName, flag, createParent,\n+    return clientProto.create(src, masked, clientName, flag, createParent,\n         replication, blockSize, supportedVersions, ecPolicyName);\n-    return (HdfsFileStatus) rpcClient.invokeSingle(createLocation, method);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public HdfsFileStatus create(String src, FsPermission masked,\n      String clientName, EnumSetWritable\u003cCreateFlag\u003e flag,\n      boolean createParent, short replication, long blockSize,\n      CryptoProtocolVersion[] supportedVersions, String ecPolicyName)\n      throws IOException {\n    return clientProto.create(src, masked, clientName, flag, createParent,\n        replication, blockSize, supportedVersions, ecPolicyName);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
      "extendedDetails": {}
    },
    "2caba999bbb9d6e3ec56024a0a9d3d56a229edcf": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13250. RBF: Router to manage requests across multiple subclusters. Contributed by Inigo Goiri.\n",
      "commitDate": "20/03/18 8:32 PM",
      "commitName": "2caba999bbb9d6e3ec56024a0a9d3d56a229edcf",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "19/03/18 10:13 PM",
      "commitNameOld": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthorOld": "weiy",
      "daysBetweenCommits": 0.93,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,29 @@\n   public HdfsFileStatus create(String src, FsPermission masked,\n       String clientName, EnumSetWritable\u003cCreateFlag\u003e flag,\n       boolean createParent, short replication, long blockSize,\n       CryptoProtocolVersion[] supportedVersions, String ecPolicyName)\n       throws IOException {\n     checkOperation(OperationCategory.WRITE);\n \n+    if (createParent \u0026\u0026 isPathAll(src)) {\n+      int index \u003d src.lastIndexOf(Path.SEPARATOR);\n+      String parent \u003d src.substring(0, index);\n+      LOG.debug(\"Creating {} requires creating parent {}\", src, parent);\n+      FsPermission parentPermissions \u003d getParentPermission(masked);\n+      boolean success \u003d mkdirs(parent, parentPermissions, createParent);\n+      if (!success) {\n+        // This shouldn\u0027t happen as mkdirs returns true or exception\n+        LOG.error(\"Couldn\u0027t create parents for {}\", src);\n+      }\n+    }\n+\n     RemoteLocation createLocation \u003d getCreateLocation(src);\n     RemoteMethod method \u003d new RemoteMethod(\"create\",\n         new Class\u003c?\u003e[] {String.class, FsPermission.class, String.class,\n                         EnumSetWritable.class, boolean.class, short.class,\n                         long.class, CryptoProtocolVersion[].class,\n                         String.class},\n         createLocation.getDest(), masked, clientName, flag, createParent,\n         replication, blockSize, supportedVersions, ecPolicyName);\n     return (HdfsFileStatus) rpcClient.invokeSingle(createLocation, method);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public HdfsFileStatus create(String src, FsPermission masked,\n      String clientName, EnumSetWritable\u003cCreateFlag\u003e flag,\n      boolean createParent, short replication, long blockSize,\n      CryptoProtocolVersion[] supportedVersions, String ecPolicyName)\n      throws IOException {\n    checkOperation(OperationCategory.WRITE);\n\n    if (createParent \u0026\u0026 isPathAll(src)) {\n      int index \u003d src.lastIndexOf(Path.SEPARATOR);\n      String parent \u003d src.substring(0, index);\n      LOG.debug(\"Creating {} requires creating parent {}\", src, parent);\n      FsPermission parentPermissions \u003d getParentPermission(masked);\n      boolean success \u003d mkdirs(parent, parentPermissions, createParent);\n      if (!success) {\n        // This shouldn\u0027t happen as mkdirs returns true or exception\n        LOG.error(\"Couldn\u0027t create parents for {}\", src);\n      }\n    }\n\n    RemoteLocation createLocation \u003d getCreateLocation(src);\n    RemoteMethod method \u003d new RemoteMethod(\"create\",\n        new Class\u003c?\u003e[] {String.class, FsPermission.class, String.class,\n                        EnumSetWritable.class, boolean.class, short.class,\n                        long.class, CryptoProtocolVersion[].class,\n                        String.class},\n        createLocation.getDest(), masked, clientName, flag, createParent,\n        replication, blockSize, supportedVersions, ecPolicyName);\n    return (HdfsFileStatus) rpcClient.invokeSingle(createLocation, method);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
      "extendedDetails": {}
    },
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public HdfsFileStatus create(String src, FsPermission masked,\n      String clientName, EnumSetWritable\u003cCreateFlag\u003e flag,\n      boolean createParent, short replication, long blockSize,\n      CryptoProtocolVersion[] supportedVersions, String ecPolicyName)\n      throws IOException {\n    checkOperation(OperationCategory.WRITE);\n\n    RemoteLocation createLocation \u003d getCreateLocation(src);\n    RemoteMethod method \u003d new RemoteMethod(\"create\",\n        new Class\u003c?\u003e[] {String.class, FsPermission.class, String.class,\n                        EnumSetWritable.class, boolean.class, short.class,\n                        long.class, CryptoProtocolVersion[].class,\n                        String.class},\n        createLocation.getDest(), masked, clientName, flag, createParent,\n        replication, blockSize, supportedVersions, ecPolicyName);\n    return (HdfsFileStatus) rpcClient.invokeSingle(createLocation, method);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java"
      }
    },
    "ca4f209b49e3aad6a80306f7342c9b6b560a79a7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11546. Federation Router RPC server. Contributed by Jason Kace and Inigo Goiri.\n\n(cherry picked from commit 8a9cdebebf26841a0f1e99fb08135f4597f2eba2)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "ca4f209b49e3aad6a80306f7342c9b6b560a79a7",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,17 @@\n+  public HdfsFileStatus create(String src, FsPermission masked,\n+      String clientName, EnumSetWritable\u003cCreateFlag\u003e flag,\n+      boolean createParent, short replication, long blockSize,\n+      CryptoProtocolVersion[] supportedVersions, String ecPolicyName)\n+      throws IOException {\n+    checkOperation(OperationCategory.WRITE);\n+\n+    RemoteLocation createLocation \u003d getCreateLocation(src);\n+    RemoteMethod method \u003d new RemoteMethod(\"create\",\n+        new Class\u003c?\u003e[] {String.class, FsPermission.class, String.class,\n+                        EnumSetWritable.class, boolean.class, short.class,\n+                        long.class, CryptoProtocolVersion[].class,\n+                        String.class},\n+        createLocation.getDest(), masked, clientName, flag, createParent,\n+        replication, blockSize, supportedVersions, ecPolicyName);\n+    return (HdfsFileStatus) rpcClient.invokeSingle(createLocation, method);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public HdfsFileStatus create(String src, FsPermission masked,\n      String clientName, EnumSetWritable\u003cCreateFlag\u003e flag,\n      boolean createParent, short replication, long blockSize,\n      CryptoProtocolVersion[] supportedVersions, String ecPolicyName)\n      throws IOException {\n    checkOperation(OperationCategory.WRITE);\n\n    RemoteLocation createLocation \u003d getCreateLocation(src);\n    RemoteMethod method \u003d new RemoteMethod(\"create\",\n        new Class\u003c?\u003e[] {String.class, FsPermission.class, String.class,\n                        EnumSetWritable.class, boolean.class, short.class,\n                        long.class, CryptoProtocolVersion[].class,\n                        String.class},\n        createLocation.getDest(), masked, clientName, flag, createParent,\n        replication, blockSize, supportedVersions, ecPolicyName);\n    return (HdfsFileStatus) rpcClient.invokeSingle(createLocation, method);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java"
    }
  }
}