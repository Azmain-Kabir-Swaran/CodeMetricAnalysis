{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DiskChecker.java",
  "functionName": "doDiskIo",
  "functionId": "doDiskIo___dir-File",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
  "functionStartLine": 255,
  "functionEndLine": 274,
  "numCommitsSeen": 12,
  "timeTaken": 589,
  "changeHistory": [
    "1b6ecaf016aaf7f6a09a4d576294b5e0a6850a1f"
  ],
  "changeHistoryShort": {
    "1b6ecaf016aaf7f6a09a4d576294b5e0a6850a1f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1b6ecaf016aaf7f6a09a4d576294b5e0a6850a1f": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13738. DiskChecker should perform some disk IO.\n",
      "commitDate": "01/11/16 6:02 PM",
      "commitName": "1b6ecaf016aaf7f6a09a4d576294b5e0a6850a1f",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,20 @@\n+  private static void doDiskIo(File dir) throws DiskErrorException {\n+    try {\n+      IOException ioe \u003d null;\n+\n+      for (int i \u003d 0; i \u003c DISK_IO_MAX_ITERATIONS; ++i) {\n+        final File file \u003d getFileNameForDiskIoCheck(dir, i+1);\n+        try {\n+          diskIoCheckWithoutNativeIo(file);\n+          return;\n+        } catch (IOException e) {\n+          // Let\u0027s retry a few times before we really give up and\n+          // declare the disk as bad.\n+          ioe \u003d e;\n+        }\n+      }\n+      throw ioe;  // Just rethrow the last exception to signal failure.\n+    } catch(IOException e) {\n+      throw new DiskErrorException(\"Error checking directory \" + dir, e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void doDiskIo(File dir) throws DiskErrorException {\n    try {\n      IOException ioe \u003d null;\n\n      for (int i \u003d 0; i \u003c DISK_IO_MAX_ITERATIONS; ++i) {\n        final File file \u003d getFileNameForDiskIoCheck(dir, i+1);\n        try {\n          diskIoCheckWithoutNativeIo(file);\n          return;\n        } catch (IOException e) {\n          // Let\u0027s retry a few times before we really give up and\n          // declare the disk as bad.\n          ioe \u003d e;\n        }\n      }\n      throw ioe;  // Just rethrow the last exception to signal failure.\n    } catch(IOException e) {\n      throw new DiskErrorException(\"Error checking directory \" + dir, e);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java"
    }
  }
}