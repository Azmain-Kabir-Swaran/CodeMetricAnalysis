{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "checkBlocksComplete",
  "functionId": "checkBlocksComplete___src-String__allowCommittedBlock-boolean__blocks-BlockInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 3169,
  "functionEndLine": 3184,
  "numCommitsSeen": 1393,
  "timeTaken": 23337,
  "changeHistory": [
    "bd909ed9f2d853f614f04a50e2230a7932732776",
    "e535e0f05b5fbd087c93238deb888cc985254b4c",
    "f4c523b69ba55b1fd35e8995c3011a9f546ac835",
    "663eba0ab1c73b45f98e46ffc87ad8fd91584046",
    "d66302ed9b2c25b560d8319d6d755aee7cfa4d67",
    "bc99aaffe7b0ed13b1efc37b6a32cdbd344c2d75",
    "d62b63d297bff12d93de560dd50ddd48743b851d",
    "de480d6c8945bd8b5b00e8657b7a72ce8dd9b6b5",
    "c17439c2ddd921b63b1635e6f1cba634b8da8557",
    "4928f5473394981829e5ffd4b16ea0801baf5c45",
    "c243319eab89928bc06e0357a50f9422cbe54f7d",
    "9f2f583f401189c3f4a2687795a9e3e0b288322b",
    "96649c38f9ab00a9845d2c6e35e6264894da5309"
  ],
  "changeHistoryShort": {
    "bd909ed9f2d853f614f04a50e2230a7932732776": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yrename,Yparameterchange)",
    "e535e0f05b5fbd087c93238deb888cc985254b4c": "Ybodychange",
    "f4c523b69ba55b1fd35e8995c3011a9f546ac835": "Ybodychange",
    "663eba0ab1c73b45f98e46ffc87ad8fd91584046": "Ybodychange",
    "d66302ed9b2c25b560d8319d6d755aee7cfa4d67": "Ybodychange",
    "bc99aaffe7b0ed13b1efc37b6a32cdbd344c2d75": "Ybodychange",
    "d62b63d297bff12d93de560dd50ddd48743b851d": "Ybodychange",
    "de480d6c8945bd8b5b00e8657b7a72ce8dd9b6b5": "Ybodychange",
    "c17439c2ddd921b63b1635e6f1cba634b8da8557": "Ybodychange",
    "4928f5473394981829e5ffd4b16ea0801baf5c45": "Ymultichange(Yparameterchange,Ybodychange)",
    "c243319eab89928bc06e0357a50f9422cbe54f7d": "Ybodychange",
    "9f2f583f401189c3f4a2687795a9e3e0b288322b": "Ymultichange(Yparameterchange,Ybodychange)",
    "96649c38f9ab00a9845d2c6e35e6264894da5309": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bd909ed9f2d853f614f04a50e2230a7932732776": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yrename,Yparameterchange)",
      "commitMessage": "HDFS-8999. Allow a file to be closed with COMMITTED but not yet COMPLETE blocks.\n",
      "commitDate": "25/01/16 6:32 PM",
      "commitName": "bd909ed9f2d853f614f04a50e2230a7932732776",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-8999. Allow a file to be closed with COMMITTED but not yet COMPLETE blocks.\n",
          "commitDate": "25/01/16 6:32 PM",
          "commitName": "bd909ed9f2d853f614f04a50e2230a7932732776",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "25/01/16 4:19 PM",
          "commitNameOld": "2085e60a9655b59aa2ba8917acdc511ab71ff6e4",
          "commitAuthorOld": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,16 @@\n-  public boolean checkBlocksProperlyReplicated(\n-      String src, BlockInfo[] blocks) {\n-    for (BlockInfo b: blocks) {\n-      if (!b.isComplete()) {\n-        final int numNodes \u003d b.numNodes();\n-        final int min \u003d getMinStorageNum(b);\n-        final BlockUCState state \u003d b.getBlockUCState();\n-        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \" + state\n-            + \", replication# \u003d \" + numNodes + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n+  private boolean checkBlocksComplete(String src, boolean allowCommittedBlock,\n+      BlockInfo... blocks) {\n+    final int n \u003d allowCommittedBlock? numCommittedAllowed: 0;\n+    for(int i \u003d 0; i \u003c blocks.length; i++) {\n+      final short min \u003d blockManager.getMinStorageNum(blocks[i]);\n+      final String err \u003d INodeFile.checkBlockComplete(blocks, i, n, min);\n+      if (err !\u003d null) {\n+        final int numNodes \u003d blocks[i].numNodes();\n+        LOG.info(\"BLOCK* \" + err + \"(numNodes\u003d \" + numNodes\n+            + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n             + \" minimum \u003d \" + min + \") in file \" + src);\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean checkBlocksComplete(String src, boolean allowCommittedBlock,\n      BlockInfo... blocks) {\n    final int n \u003d allowCommittedBlock? numCommittedAllowed: 0;\n    for(int i \u003d 0; i \u003c blocks.length; i++) {\n      final short min \u003d blockManager.getMinStorageNum(blocks[i]);\n      final String err \u003d INodeFile.checkBlockComplete(blocks, i, n, min);\n      if (err !\u003d null) {\n        final int numNodes \u003d blocks[i].numNodes();\n        LOG.info(\"BLOCK* \" + err + \"(numNodes\u003d \" + numNodes\n            + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n            + \" minimum \u003d \" + min + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
            "oldMethodName": "checkBlocksProperlyReplicated",
            "newMethodName": "checkBlocksComplete"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-8999. Allow a file to be closed with COMMITTED but not yet COMPLETE blocks.\n",
          "commitDate": "25/01/16 6:32 PM",
          "commitName": "bd909ed9f2d853f614f04a50e2230a7932732776",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "25/01/16 4:19 PM",
          "commitNameOld": "2085e60a9655b59aa2ba8917acdc511ab71ff6e4",
          "commitAuthorOld": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,16 @@\n-  public boolean checkBlocksProperlyReplicated(\n-      String src, BlockInfo[] blocks) {\n-    for (BlockInfo b: blocks) {\n-      if (!b.isComplete()) {\n-        final int numNodes \u003d b.numNodes();\n-        final int min \u003d getMinStorageNum(b);\n-        final BlockUCState state \u003d b.getBlockUCState();\n-        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \" + state\n-            + \", replication# \u003d \" + numNodes + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n+  private boolean checkBlocksComplete(String src, boolean allowCommittedBlock,\n+      BlockInfo... blocks) {\n+    final int n \u003d allowCommittedBlock? numCommittedAllowed: 0;\n+    for(int i \u003d 0; i \u003c blocks.length; i++) {\n+      final short min \u003d blockManager.getMinStorageNum(blocks[i]);\n+      final String err \u003d INodeFile.checkBlockComplete(blocks, i, n, min);\n+      if (err !\u003d null) {\n+        final int numNodes \u003d blocks[i].numNodes();\n+        LOG.info(\"BLOCK* \" + err + \"(numNodes\u003d \" + numNodes\n+            + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n             + \" minimum \u003d \" + min + \") in file \" + src);\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean checkBlocksComplete(String src, boolean allowCommittedBlock,\n      BlockInfo... blocks) {\n    final int n \u003d allowCommittedBlock? numCommittedAllowed: 0;\n    for(int i \u003d 0; i \u003c blocks.length; i++) {\n      final short min \u003d blockManager.getMinStorageNum(blocks[i]);\n      final String err \u003d INodeFile.checkBlockComplete(blocks, i, n, min);\n      if (err !\u003d null) {\n        final int numNodes \u003d blocks[i].numNodes();\n        LOG.info(\"BLOCK* \" + err + \"(numNodes\u003d \" + numNodes\n            + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n            + \" minimum \u003d \" + min + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8999. Allow a file to be closed with COMMITTED but not yet COMPLETE blocks.\n",
          "commitDate": "25/01/16 6:32 PM",
          "commitName": "bd909ed9f2d853f614f04a50e2230a7932732776",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "25/01/16 4:19 PM",
          "commitNameOld": "2085e60a9655b59aa2ba8917acdc511ab71ff6e4",
          "commitAuthorOld": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,16 @@\n-  public boolean checkBlocksProperlyReplicated(\n-      String src, BlockInfo[] blocks) {\n-    for (BlockInfo b: blocks) {\n-      if (!b.isComplete()) {\n-        final int numNodes \u003d b.numNodes();\n-        final int min \u003d getMinStorageNum(b);\n-        final BlockUCState state \u003d b.getBlockUCState();\n-        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \" + state\n-            + \", replication# \u003d \" + numNodes + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n+  private boolean checkBlocksComplete(String src, boolean allowCommittedBlock,\n+      BlockInfo... blocks) {\n+    final int n \u003d allowCommittedBlock? numCommittedAllowed: 0;\n+    for(int i \u003d 0; i \u003c blocks.length; i++) {\n+      final short min \u003d blockManager.getMinStorageNum(blocks[i]);\n+      final String err \u003d INodeFile.checkBlockComplete(blocks, i, n, min);\n+      if (err !\u003d null) {\n+        final int numNodes \u003d blocks[i].numNodes();\n+        LOG.info(\"BLOCK* \" + err + \"(numNodes\u003d \" + numNodes\n+            + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n             + \" minimum \u003d \" + min + \") in file \" + src);\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean checkBlocksComplete(String src, boolean allowCommittedBlock,\n      BlockInfo... blocks) {\n    final int n \u003d allowCommittedBlock? numCommittedAllowed: 0;\n    for(int i \u003d 0; i \u003c blocks.length; i++) {\n      final short min \u003d blockManager.getMinStorageNum(blocks[i]);\n      final String err \u003d INodeFile.checkBlockComplete(blocks, i, n, min);\n      if (err !\u003d null) {\n        final int numNodes \u003d blocks[i].numNodes();\n        LOG.info(\"BLOCK* \" + err + \"(numNodes\u003d \" + numNodes\n            + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n            + \" minimum \u003d \" + min + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "HDFS-8999. Allow a file to be closed with COMMITTED but not yet COMPLETE blocks.\n",
          "commitDate": "25/01/16 6:32 PM",
          "commitName": "bd909ed9f2d853f614f04a50e2230a7932732776",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "25/01/16 4:19 PM",
          "commitNameOld": "2085e60a9655b59aa2ba8917acdc511ab71ff6e4",
          "commitAuthorOld": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,16 @@\n-  public boolean checkBlocksProperlyReplicated(\n-      String src, BlockInfo[] blocks) {\n-    for (BlockInfo b: blocks) {\n-      if (!b.isComplete()) {\n-        final int numNodes \u003d b.numNodes();\n-        final int min \u003d getMinStorageNum(b);\n-        final BlockUCState state \u003d b.getBlockUCState();\n-        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \" + state\n-            + \", replication# \u003d \" + numNodes + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n+  private boolean checkBlocksComplete(String src, boolean allowCommittedBlock,\n+      BlockInfo... blocks) {\n+    final int n \u003d allowCommittedBlock? numCommittedAllowed: 0;\n+    for(int i \u003d 0; i \u003c blocks.length; i++) {\n+      final short min \u003d blockManager.getMinStorageNum(blocks[i]);\n+      final String err \u003d INodeFile.checkBlockComplete(blocks, i, n, min);\n+      if (err !\u003d null) {\n+        final int numNodes \u003d blocks[i].numNodes();\n+        LOG.info(\"BLOCK* \" + err + \"(numNodes\u003d \" + numNodes\n+            + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n             + \" minimum \u003d \" + min + \") in file \" + src);\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean checkBlocksComplete(String src, boolean allowCommittedBlock,\n      BlockInfo... blocks) {\n    final int n \u003d allowCommittedBlock? numCommittedAllowed: 0;\n    for(int i \u003d 0; i \u003c blocks.length; i++) {\n      final short min \u003d blockManager.getMinStorageNum(blocks[i]);\n      final String err \u003d INodeFile.checkBlockComplete(blocks, i, n, min);\n      if (err !\u003d null) {\n        final int numNodes \u003d blocks[i].numNodes();\n        LOG.info(\"BLOCK* \" + err + \"(numNodes\u003d \" + numNodes\n            + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n            + \" minimum \u003d \" + min + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "checkBlocksProperlyReplicated",
            "newValue": "checkBlocksComplete"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8999. Allow a file to be closed with COMMITTED but not yet COMPLETE blocks.\n",
          "commitDate": "25/01/16 6:32 PM",
          "commitName": "bd909ed9f2d853f614f04a50e2230a7932732776",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "25/01/16 4:19 PM",
          "commitNameOld": "2085e60a9655b59aa2ba8917acdc511ab71ff6e4",
          "commitAuthorOld": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,16 @@\n-  public boolean checkBlocksProperlyReplicated(\n-      String src, BlockInfo[] blocks) {\n-    for (BlockInfo b: blocks) {\n-      if (!b.isComplete()) {\n-        final int numNodes \u003d b.numNodes();\n-        final int min \u003d getMinStorageNum(b);\n-        final BlockUCState state \u003d b.getBlockUCState();\n-        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \" + state\n-            + \", replication# \u003d \" + numNodes + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n+  private boolean checkBlocksComplete(String src, boolean allowCommittedBlock,\n+      BlockInfo... blocks) {\n+    final int n \u003d allowCommittedBlock? numCommittedAllowed: 0;\n+    for(int i \u003d 0; i \u003c blocks.length; i++) {\n+      final short min \u003d blockManager.getMinStorageNum(blocks[i]);\n+      final String err \u003d INodeFile.checkBlockComplete(blocks, i, n, min);\n+      if (err !\u003d null) {\n+        final int numNodes \u003d blocks[i].numNodes();\n+        LOG.info(\"BLOCK* \" + err + \"(numNodes\u003d \" + numNodes\n+            + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n             + \" minimum \u003d \" + min + \") in file \" + src);\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean checkBlocksComplete(String src, boolean allowCommittedBlock,\n      BlockInfo... blocks) {\n    final int n \u003d allowCommittedBlock? numCommittedAllowed: 0;\n    for(int i \u003d 0; i \u003c blocks.length; i++) {\n      final short min \u003d blockManager.getMinStorageNum(blocks[i]);\n      final String err \u003d INodeFile.checkBlockComplete(blocks, i, n, min);\n      if (err !\u003d null) {\n        final int numNodes \u003d blocks[i].numNodes();\n        LOG.info(\"BLOCK* \" + err + \"(numNodes\u003d \" + numNodes\n            + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n            + \" minimum \u003d \" + min + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[src-String, blocks-BlockInfo[]]",
            "newValue": "[src-String, allowCommittedBlock-boolean, blocks-BlockInfo]"
          }
        }
      ]
    },
    "e535e0f05b5fbd087c93238deb888cc985254b4c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8801. Convert BlockInfoUnderConstruction as a feature. Contributed by Jing Zhao.\n",
      "commitDate": "17/08/15 11:28 AM",
      "commitName": "e535e0f05b5fbd087c93238deb888cc985254b4c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "06/08/15 10:21 AM",
      "commitNameOld": "f4c523b69ba55b1fd35e8995c3011a9f546ac835",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 11.05,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,14 @@\n   public boolean checkBlocksProperlyReplicated(\n       String src, BlockInfo[] blocks) {\n     for (BlockInfo b: blocks) {\n       if (!b.isComplete()) {\n-        final BlockInfoContiguousUnderConstruction uc \u003d\n-            (BlockInfoContiguousUnderConstruction)b;\n         final int numNodes \u003d b.numNodes();\n         LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n-          + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n+          + b.getBlockUCState() + \", replication# \u003d \" + numNodes\n           + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n           + \" minimum \u003d \" + minReplication + \") in file \" + src);\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkBlocksProperlyReplicated(\n      String src, BlockInfo[] blocks) {\n    for (BlockInfo b: blocks) {\n      if (!b.isComplete()) {\n        final int numNodes \u003d b.numNodes();\n        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n          + b.getBlockUCState() + \", replication# \u003d \" + numNodes\n          + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n          + \" minimum \u003d \" + minReplication + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "f4c523b69ba55b1fd35e8995c3011a9f546ac835": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-8499. Refactor BlockInfo class hierarchy with static helper class. Contributed by Zhe Zhang.\"\n\nThis reverts commit c17439c2ddd921b63b1635e6f1cba634b8da8557.\n",
      "commitDate": "06/08/15 10:21 AM",
      "commitName": "f4c523b69ba55b1fd35e8995c3011a9f546ac835",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "06/08/15 10:21 AM",
      "commitNameOld": "663eba0ab1c73b45f98e46ffc87ad8fd91584046",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public boolean checkBlocksProperlyReplicated(\n       String src, BlockInfo[] blocks) {\n     for (BlockInfo b: blocks) {\n       if (!b.isComplete()) {\n-        final BlockInfoUnderConstruction uc \u003d\n-            (BlockInfoUnderConstruction)b;\n+        final BlockInfoContiguousUnderConstruction uc \u003d\n+            (BlockInfoContiguousUnderConstruction)b;\n         final int numNodes \u003d b.numNodes();\n         LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n           + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n           + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n           + \" minimum \u003d \" + minReplication + \") in file \" + src);\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkBlocksProperlyReplicated(\n      String src, BlockInfo[] blocks) {\n    for (BlockInfo b: blocks) {\n      if (!b.isComplete()) {\n        final BlockInfoContiguousUnderConstruction uc \u003d\n            (BlockInfoContiguousUnderConstruction)b;\n        final int numNodes \u003d b.numNodes();\n        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n          + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n          + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n          + \" minimum \u003d \" + minReplication + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "663eba0ab1c73b45f98e46ffc87ad8fd91584046": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-8623. Refactor NameNode handling of invalid, corrupt, and under-recovery blocks. Contributed by Zhe Zhang.\"\n\nThis reverts commit de480d6c8945bd8b5b00e8657b7a72ce8dd9b6b5.\n",
      "commitDate": "06/08/15 10:21 AM",
      "commitName": "663eba0ab1c73b45f98e46ffc87ad8fd91584046",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "31/07/15 4:15 PM",
      "commitNameOld": "d311a38a6b32bbb210bd8748cfb65463e9c0740e",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 5.75,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public boolean checkBlocksProperlyReplicated(\n       String src, BlockInfo[] blocks) {\n     for (BlockInfo b: blocks) {\n       if (!b.isComplete()) {\n+        final BlockInfoUnderConstruction uc \u003d\n+            (BlockInfoUnderConstruction)b;\n         final int numNodes \u003d b.numNodes();\n-        final int min \u003d getMinStorageNum(b);\n-        final BlockUCState state \u003d b.getBlockUCState();\n-        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \" + state\n-            + \", replication# \u003d \" + numNodes\n-            + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n-            + \" minimum \u003d \" + min + \") in file \" + src);\n+        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n+          + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n+          + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n+          + \" minimum \u003d \" + minReplication + \") in file \" + src);\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkBlocksProperlyReplicated(\n      String src, BlockInfo[] blocks) {\n    for (BlockInfo b: blocks) {\n      if (!b.isComplete()) {\n        final BlockInfoUnderConstruction uc \u003d\n            (BlockInfoUnderConstruction)b;\n        final int numNodes \u003d b.numNodes();\n        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n          + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n          + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n          + \" minimum \u003d \" + minReplication + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "d66302ed9b2c25b560d8319d6d755aee7cfa4d67": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8749. Fix findbugs warnings in BlockManager.java. Contributed by Brahma Reddy Battula.\n",
      "commitDate": "09/07/15 11:04 PM",
      "commitName": "d66302ed9b2c25b560d8319d6d755aee7cfa4d67",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "07/07/15 10:13 AM",
      "commitNameOld": "bc99aaffe7b0ed13b1efc37b6a32cdbd344c2d75",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 2.54,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,16 @@\n   public boolean checkBlocksProperlyReplicated(\n       String src, BlockInfo[] blocks) {\n     for (BlockInfo b: blocks) {\n       if (!b.isComplete()) {\n-        final BlockInfoUnderConstruction uc \u003d\n-            (BlockInfoUnderConstruction)b;\n         final int numNodes \u003d b.numNodes();\n         final int min \u003d getMinStorageNum(b);\n         final BlockUCState state \u003d b.getBlockUCState();\n         LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \" + state\n             + \", replication# \u003d \" + numNodes\n             + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n             + \" minimum \u003d \" + min + \") in file \" + src);\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkBlocksProperlyReplicated(\n      String src, BlockInfo[] blocks) {\n    for (BlockInfo b: blocks) {\n      if (!b.isComplete()) {\n        final int numNodes \u003d b.numNodes();\n        final int min \u003d getMinStorageNum(b);\n        final BlockUCState state \u003d b.getBlockUCState();\n        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \" + state\n            + \", replication# \u003d \" + numNodes\n            + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n            + \" minimum \u003d \" + min + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "bc99aaffe7b0ed13b1efc37b6a32cdbd344c2d75": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-8652. Track BlockInfo instead of Block in CorruptReplicasMap. Contributed by Jing Zhao.\"\n\nThis reverts commit d62b63d297bff12d93de560dd50ddd48743b851d.\n",
      "commitDate": "07/07/15 10:13 AM",
      "commitName": "bc99aaffe7b0ed13b1efc37b6a32cdbd344c2d75",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "06/07/15 3:54 PM",
      "commitNameOld": "d62b63d297bff12d93de560dd50ddd48743b851d",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.76,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,18 @@\n   public boolean checkBlocksProperlyReplicated(\n       String src, BlockInfo[] blocks) {\n     for (BlockInfo b: blocks) {\n       if (!b.isComplete()) {\n+        final BlockInfoUnderConstruction uc \u003d\n+            (BlockInfoUnderConstruction)b;\n         final int numNodes \u003d b.numNodes();\n         final int min \u003d getMinStorageNum(b);\n         final BlockUCState state \u003d b.getBlockUCState();\n         LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \" + state\n             + \", replication# \u003d \" + numNodes\n             + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n             + \" minimum \u003d \" + min + \") in file \" + src);\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkBlocksProperlyReplicated(\n      String src, BlockInfo[] blocks) {\n    for (BlockInfo b: blocks) {\n      if (!b.isComplete()) {\n        final BlockInfoUnderConstruction uc \u003d\n            (BlockInfoUnderConstruction)b;\n        final int numNodes \u003d b.numNodes();\n        final int min \u003d getMinStorageNum(b);\n        final BlockUCState state \u003d b.getBlockUCState();\n        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \" + state\n            + \", replication# \u003d \" + numNodes\n            + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n            + \" minimum \u003d \" + min + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "d62b63d297bff12d93de560dd50ddd48743b851d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8652. Track BlockInfo instead of Block in CorruptReplicasMap. Contributed by Jing Zhao.\n",
      "commitDate": "06/07/15 3:54 PM",
      "commitName": "d62b63d297bff12d93de560dd50ddd48743b851d",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "29/06/15 11:00 AM",
      "commitNameOld": "d3fed8e653ed9e18d3a29a11c4b24a628ac770bb",
      "commitAuthorOld": "Benoy Antony",
      "daysBetweenCommits": 7.2,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,16 @@\n   public boolean checkBlocksProperlyReplicated(\n       String src, BlockInfo[] blocks) {\n     for (BlockInfo b: blocks) {\n       if (!b.isComplete()) {\n-        final BlockInfoUnderConstruction uc \u003d\n-            (BlockInfoUnderConstruction)b;\n         final int numNodes \u003d b.numNodes();\n         final int min \u003d getMinStorageNum(b);\n         final BlockUCState state \u003d b.getBlockUCState();\n         LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \" + state\n             + \", replication# \u003d \" + numNodes\n             + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n             + \" minimum \u003d \" + min + \") in file \" + src);\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkBlocksProperlyReplicated(\n      String src, BlockInfo[] blocks) {\n    for (BlockInfo b: blocks) {\n      if (!b.isComplete()) {\n        final int numNodes \u003d b.numNodes();\n        final int min \u003d getMinStorageNum(b);\n        final BlockUCState state \u003d b.getBlockUCState();\n        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \" + state\n            + \", replication# \u003d \" + numNodes\n            + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n            + \" minimum \u003d \" + min + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "de480d6c8945bd8b5b00e8657b7a72ce8dd9b6b5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8623. Refactor NameNode handling of invalid, corrupt, and under-recovery blocks. Contributed by Zhe Zhang.\n",
      "commitDate": "26/06/15 10:49 AM",
      "commitName": "de480d6c8945bd8b5b00e8657b7a72ce8dd9b6b5",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "24/06/15 2:42 PM",
      "commitNameOld": "afe9ea3c12e1f5a71922400eadb642960bc87ca1",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 1.84,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,18 @@\n   public boolean checkBlocksProperlyReplicated(\n       String src, BlockInfo[] blocks) {\n     for (BlockInfo b: blocks) {\n       if (!b.isComplete()) {\n         final BlockInfoUnderConstruction uc \u003d\n             (BlockInfoUnderConstruction)b;\n         final int numNodes \u003d b.numNodes();\n-        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n-          + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n-          + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n-          + \" minimum \u003d \" + minReplication + \") in file \" + src);\n+        final int min \u003d getMinStorageNum(b);\n+        final BlockUCState state \u003d b.getBlockUCState();\n+        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \" + state\n+            + \", replication# \u003d \" + numNodes\n+            + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n+            + \" minimum \u003d \" + min + \") in file \" + src);\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkBlocksProperlyReplicated(\n      String src, BlockInfo[] blocks) {\n    for (BlockInfo b: blocks) {\n      if (!b.isComplete()) {\n        final BlockInfoUnderConstruction uc \u003d\n            (BlockInfoUnderConstruction)b;\n        final int numNodes \u003d b.numNodes();\n        final int min \u003d getMinStorageNum(b);\n        final BlockUCState state \u003d b.getBlockUCState();\n        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \" + state\n            + \", replication# \u003d \" + numNodes\n            + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n            + \" minimum \u003d \" + min + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "c17439c2ddd921b63b1635e6f1cba634b8da8557": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8499. Refactor BlockInfo class hierarchy with static helper class. Contributed by Zhe Zhang.\n",
      "commitDate": "12/06/15 11:38 AM",
      "commitName": "c17439c2ddd921b63b1635e6f1cba634b8da8557",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "12/06/15 11:17 AM",
      "commitNameOld": "12b5b06c063d93e6c683c9b6fac9a96912f59e59",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public boolean checkBlocksProperlyReplicated(\n       String src, BlockInfo[] blocks) {\n     for (BlockInfo b: blocks) {\n       if (!b.isComplete()) {\n-        final BlockInfoContiguousUnderConstruction uc \u003d\n-            (BlockInfoContiguousUnderConstruction)b;\n+        final BlockInfoUnderConstruction uc \u003d\n+            (BlockInfoUnderConstruction)b;\n         final int numNodes \u003d b.numNodes();\n         LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n           + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n           + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n           + \" minimum \u003d \" + minReplication + \") in file \" + src);\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkBlocksProperlyReplicated(\n      String src, BlockInfo[] blocks) {\n    for (BlockInfo b: blocks) {\n      if (!b.isComplete()) {\n        final BlockInfoUnderConstruction uc \u003d\n            (BlockInfoUnderConstruction)b;\n        final int numNodes \u003d b.numNodes();\n        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n          + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n          + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n          + \" minimum \u003d \" + minReplication + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "4928f5473394981829e5ffd4b16ea0801baf5c45": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8482. Rename BlockInfoContiguous to BlockInfo. Contributed by Zhe Zhang.\n",
      "commitDate": "27/05/15 3:42 PM",
      "commitName": "4928f5473394981829e5ffd4b16ea0801baf5c45",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8482. Rename BlockInfoContiguous to BlockInfo. Contributed by Zhe Zhang.\n",
          "commitDate": "27/05/15 3:42 PM",
          "commitName": "4928f5473394981829e5ffd4b16ea0801baf5c45",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "19/05/15 11:05 AM",
          "commitNameOld": "8860e352c394372e4eb3ebdf82ea899567f34e4e",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 8.19,
          "commitsBetweenForRepo": 52,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n   public boolean checkBlocksProperlyReplicated(\n-      String src, BlockInfoContiguous[] blocks) {\n-    for (BlockInfoContiguous b: blocks) {\n+      String src, BlockInfo[] blocks) {\n+    for (BlockInfo b: blocks) {\n       if (!b.isComplete()) {\n         final BlockInfoContiguousUnderConstruction uc \u003d\n             (BlockInfoContiguousUnderConstruction)b;\n         final int numNodes \u003d b.numNodes();\n         LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n           + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n           + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n           + \" minimum \u003d \" + minReplication + \") in file \" + src);\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean checkBlocksProperlyReplicated(\n      String src, BlockInfo[] blocks) {\n    for (BlockInfo b: blocks) {\n      if (!b.isComplete()) {\n        final BlockInfoContiguousUnderConstruction uc \u003d\n            (BlockInfoContiguousUnderConstruction)b;\n        final int numNodes \u003d b.numNodes();\n        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n          + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n          + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n          + \" minimum \u003d \" + minReplication + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[src-String, blocks-BlockInfoContiguous[]]",
            "newValue": "[src-String, blocks-BlockInfo[]]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8482. Rename BlockInfoContiguous to BlockInfo. Contributed by Zhe Zhang.\n",
          "commitDate": "27/05/15 3:42 PM",
          "commitName": "4928f5473394981829e5ffd4b16ea0801baf5c45",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "19/05/15 11:05 AM",
          "commitNameOld": "8860e352c394372e4eb3ebdf82ea899567f34e4e",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 8.19,
          "commitsBetweenForRepo": 52,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n   public boolean checkBlocksProperlyReplicated(\n-      String src, BlockInfoContiguous[] blocks) {\n-    for (BlockInfoContiguous b: blocks) {\n+      String src, BlockInfo[] blocks) {\n+    for (BlockInfo b: blocks) {\n       if (!b.isComplete()) {\n         final BlockInfoContiguousUnderConstruction uc \u003d\n             (BlockInfoContiguousUnderConstruction)b;\n         final int numNodes \u003d b.numNodes();\n         LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n           + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n           + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n           + \" minimum \u003d \" + minReplication + \") in file \" + src);\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean checkBlocksProperlyReplicated(\n      String src, BlockInfo[] blocks) {\n    for (BlockInfo b: blocks) {\n      if (!b.isComplete()) {\n        final BlockInfoContiguousUnderConstruction uc \u003d\n            (BlockInfoContiguousUnderConstruction)b;\n        final int numNodes \u003d b.numNodes();\n        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n          + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n          + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n          + \" minimum \u003d \" + minReplication + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "c243319eab89928bc06e0357a50f9422cbe54f7d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7936. Erasure coding: resolving conflicts in the branch when merging trunk changes (this commit is for HDFS-8035). Contributed by Zhe Zhang\n",
      "commitDate": "26/05/15 11:55 AM",
      "commitName": "c243319eab89928bc06e0357a50f9422cbe54f7d",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "26/05/15 11:44 AM",
      "commitNameOld": "578019d6a27bd3128fae1bdf7caadd8767b91e8c",
      "commitAuthorOld": "Zhe Zhang",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,15 @@\n   public boolean checkBlocksProperlyReplicated(\n       String src, BlockInfo[] blocks) {\n     for (BlockInfo b: blocks) {\n       if (!b.isComplete()) {\n-        final BlockInfoContiguousUnderConstruction uc \u003d\n-            (BlockInfoContiguousUnderConstruction)b;\n         final int numNodes \u003d b.numNodes();\n-        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n-          + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n-          + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n-          + \" minimum \u003d \" + minReplication + \") in file \" + src);\n+        final int min \u003d getMinStorageNum(b);\n+        final BlockUCState state \u003d b.getBlockUCState();\n+        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \" + state\n+            + \", replication# \u003d \" + numNodes + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n+            + \" minimum \u003d \" + min + \") in file \" + src);\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkBlocksProperlyReplicated(\n      String src, BlockInfo[] blocks) {\n    for (BlockInfo b: blocks) {\n      if (!b.isComplete()) {\n        final int numNodes \u003d b.numNodes();\n        final int min \u003d getMinStorageNum(b);\n        final BlockUCState state \u003d b.getBlockUCState();\n        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \" + state\n            + \", replication# \u003d \" + numNodes + (numNodes \u003c min ? \" \u003c \" : \" \u003e\u003d \")\n            + \" minimum \u003d \" + min + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "9f2f583f401189c3f4a2687795a9e3e0b288322b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7749. Erasure Coding: Add striped block support in INodeFile. Contributed by Jing Zhao.\n",
      "commitDate": "26/05/15 11:07 AM",
      "commitName": "9f2f583f401189c3f4a2687795a9e3e0b288322b",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7749. Erasure Coding: Add striped block support in INodeFile. Contributed by Jing Zhao.\n",
          "commitDate": "26/05/15 11:07 AM",
          "commitName": "9f2f583f401189c3f4a2687795a9e3e0b288322b",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "26/05/15 11:07 AM",
          "commitNameOld": "ba9371492036983a9899398907ab41fe548f29b3",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n   public boolean checkBlocksProperlyReplicated(\n-      String src, BlockInfoContiguous[] blocks) {\n-    for (BlockInfoContiguous b: blocks) {\n+      String src, BlockInfo[] blocks) {\n+    for (BlockInfo b: blocks) {\n       if (!b.isComplete()) {\n         final BlockInfoContiguousUnderConstruction uc \u003d\n             (BlockInfoContiguousUnderConstruction)b;\n         final int numNodes \u003d b.numNodes();\n         LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n           + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n           + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n           + \" minimum \u003d \" + minReplication + \") in file \" + src);\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean checkBlocksProperlyReplicated(\n      String src, BlockInfo[] blocks) {\n    for (BlockInfo b: blocks) {\n      if (!b.isComplete()) {\n        final BlockInfoContiguousUnderConstruction uc \u003d\n            (BlockInfoContiguousUnderConstruction)b;\n        final int numNodes \u003d b.numNodes();\n        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n          + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n          + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n          + \" minimum \u003d \" + minReplication + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[src-String, blocks-BlockInfoContiguous[]]",
            "newValue": "[src-String, blocks-BlockInfo[]]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7749. Erasure Coding: Add striped block support in INodeFile. Contributed by Jing Zhao.\n",
          "commitDate": "26/05/15 11:07 AM",
          "commitName": "9f2f583f401189c3f4a2687795a9e3e0b288322b",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "26/05/15 11:07 AM",
          "commitNameOld": "ba9371492036983a9899398907ab41fe548f29b3",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n   public boolean checkBlocksProperlyReplicated(\n-      String src, BlockInfoContiguous[] blocks) {\n-    for (BlockInfoContiguous b: blocks) {\n+      String src, BlockInfo[] blocks) {\n+    for (BlockInfo b: blocks) {\n       if (!b.isComplete()) {\n         final BlockInfoContiguousUnderConstruction uc \u003d\n             (BlockInfoContiguousUnderConstruction)b;\n         final int numNodes \u003d b.numNodes();\n         LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n           + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n           + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n           + \" minimum \u003d \" + minReplication + \") in file \" + src);\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean checkBlocksProperlyReplicated(\n      String src, BlockInfo[] blocks) {\n    for (BlockInfo b: blocks) {\n      if (!b.isComplete()) {\n        final BlockInfoContiguousUnderConstruction uc \u003d\n            (BlockInfoContiguousUnderConstruction)b;\n        final int numNodes \u003d b.numNodes();\n        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n          + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n          + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n          + \" minimum \u003d \" + minReplication + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "96649c38f9ab00a9845d2c6e35e6264894da5309": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8035. Move checkBlocksProperlyReplicated() in FSNamesystem to BlockManager. Contributed by Haohui Mai.\n",
      "commitDate": "02/04/15 11:36 AM",
      "commitName": "96649c38f9ab00a9845d2c6e35e6264894da5309",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,16 @@\n+  public boolean checkBlocksProperlyReplicated(\n+      String src, BlockInfoContiguous[] blocks) {\n+    for (BlockInfoContiguous b: blocks) {\n+      if (!b.isComplete()) {\n+        final BlockInfoContiguousUnderConstruction uc \u003d\n+            (BlockInfoContiguousUnderConstruction)b;\n+        final int numNodes \u003d b.numNodes();\n+        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n+          + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n+          + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n+          + \" minimum \u003d \" + minReplication + \") in file \" + src);\n+        return false;\n+      }\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean checkBlocksProperlyReplicated(\n      String src, BlockInfoContiguous[] blocks) {\n    for (BlockInfoContiguous b: blocks) {\n      if (!b.isComplete()) {\n        final BlockInfoContiguousUnderConstruction uc \u003d\n            (BlockInfoContiguousUnderConstruction)b;\n        final int numNodes \u003d b.numNodes();\n        LOG.info(\"BLOCK* \" + b + \" is not COMPLETE (ucState \u003d \"\n          + uc.getBlockUCState() + \", replication# \u003d \" + numNodes\n          + (numNodes \u003c minReplication ? \" \u003c \": \" \u003e\u003d \")\n          + \" minimum \u003d \" + minReplication + \") in file \" + src);\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
    }
  }
}