{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileInputFormat.java",
  "functionName": "identifyHosts",
  "functionId": "identifyHosts___replicationFactor-int__racksMap-Map__Node,NodeInfo__",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/FileInputFormat.java",
  "functionStartLine": 713,
  "functionEndLine": 754,
  "numCommitsSeen": 23,
  "timeTaken": 4492,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private String[] identifyHosts(int replicationFactor, \n                                 Map\u003cNode,NodeInfo\u003e racksMap) {\n    \n    String [] retVal \u003d new String[replicationFactor];\n   \n    List \u003cNodeInfo\u003e rackList \u003d new LinkedList\u003cNodeInfo\u003e(); \n\n    rackList.addAll(racksMap.values());\n    \n    // Sort the racks based on their contribution to this split\n    sortInDescendingOrder(rackList);\n    \n    boolean done \u003d false;\n    int index \u003d 0;\n    \n    // Get the host list for all our aggregated items, sort\n    // them and return the top entries\n    for (NodeInfo ni: rackList) {\n\n      Set\u003cNodeInfo\u003e hostSet \u003d ni.getLeaves();\n\n      List\u003cNodeInfo\u003ehostList \u003d new LinkedList\u003cNodeInfo\u003e();\n      hostList.addAll(hostSet);\n    \n      // Sort the hosts in this rack based on their contribution\n      sortInDescendingOrder(hostList);\n\n      for (NodeInfo host: hostList) {\n        // Strip out the port number from the host name\n        retVal[index++] \u003d host.node.getName().split(\":\")[0];\n        if (index \u003d\u003d replicationFactor) {\n          done \u003d true;\n          break;\n        }\n      }\n      \n      if (done \u003d\u003d true) {\n        break;\n      }\n    }\n    return retVal;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/FileInputFormat.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/FileInputFormat.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/FileInputFormat.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private String[] identifyHosts(int replicationFactor, \n                                 Map\u003cNode,NodeInfo\u003e racksMap) {\n    \n    String [] retVal \u003d new String[replicationFactor];\n   \n    List \u003cNodeInfo\u003e rackList \u003d new LinkedList\u003cNodeInfo\u003e(); \n\n    rackList.addAll(racksMap.values());\n    \n    // Sort the racks based on their contribution to this split\n    sortInDescendingOrder(rackList);\n    \n    boolean done \u003d false;\n    int index \u003d 0;\n    \n    // Get the host list for all our aggregated items, sort\n    // them and return the top entries\n    for (NodeInfo ni: rackList) {\n\n      Set\u003cNodeInfo\u003e hostSet \u003d ni.getLeaves();\n\n      List\u003cNodeInfo\u003ehostList \u003d new LinkedList\u003cNodeInfo\u003e();\n      hostList.addAll(hostSet);\n    \n      // Sort the hosts in this rack based on their contribution\n      sortInDescendingOrder(hostList);\n\n      for (NodeInfo host: hostList) {\n        // Strip out the port number from the host name\n        retVal[index++] \u003d host.node.getName().split(\":\")[0];\n        if (index \u003d\u003d replicationFactor) {\n          done \u003d true;\n          break;\n        }\n      }\n      \n      if (done \u003d\u003d true) {\n        break;\n      }\n    }\n    return retVal;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/FileInputFormat.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/FileInputFormat.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/FileInputFormat.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,42 @@\n+  private String[] identifyHosts(int replicationFactor, \n+                                 Map\u003cNode,NodeInfo\u003e racksMap) {\n+    \n+    String [] retVal \u003d new String[replicationFactor];\n+   \n+    List \u003cNodeInfo\u003e rackList \u003d new LinkedList\u003cNodeInfo\u003e(); \n+\n+    rackList.addAll(racksMap.values());\n+    \n+    // Sort the racks based on their contribution to this split\n+    sortInDescendingOrder(rackList);\n+    \n+    boolean done \u003d false;\n+    int index \u003d 0;\n+    \n+    // Get the host list for all our aggregated items, sort\n+    // them and return the top entries\n+    for (NodeInfo ni: rackList) {\n+\n+      Set\u003cNodeInfo\u003e hostSet \u003d ni.getLeaves();\n+\n+      List\u003cNodeInfo\u003ehostList \u003d new LinkedList\u003cNodeInfo\u003e();\n+      hostList.addAll(hostSet);\n+    \n+      // Sort the hosts in this rack based on their contribution\n+      sortInDescendingOrder(hostList);\n+\n+      for (NodeInfo host: hostList) {\n+        // Strip out the port number from the host name\n+        retVal[index++] \u003d host.node.getName().split(\":\")[0];\n+        if (index \u003d\u003d replicationFactor) {\n+          done \u003d true;\n+          break;\n+        }\n+      }\n+      \n+      if (done \u003d\u003d true) {\n+        break;\n+      }\n+    }\n+    return retVal;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String[] identifyHosts(int replicationFactor, \n                                 Map\u003cNode,NodeInfo\u003e racksMap) {\n    \n    String [] retVal \u003d new String[replicationFactor];\n   \n    List \u003cNodeInfo\u003e rackList \u003d new LinkedList\u003cNodeInfo\u003e(); \n\n    rackList.addAll(racksMap.values());\n    \n    // Sort the racks based on their contribution to this split\n    sortInDescendingOrder(rackList);\n    \n    boolean done \u003d false;\n    int index \u003d 0;\n    \n    // Get the host list for all our aggregated items, sort\n    // them and return the top entries\n    for (NodeInfo ni: rackList) {\n\n      Set\u003cNodeInfo\u003e hostSet \u003d ni.getLeaves();\n\n      List\u003cNodeInfo\u003ehostList \u003d new LinkedList\u003cNodeInfo\u003e();\n      hostList.addAll(hostSet);\n    \n      // Sort the hosts in this rack based on their contribution\n      sortInDescendingOrder(hostList);\n\n      for (NodeInfo host: hostList) {\n        // Strip out the port number from the host name\n        retVal[index++] \u003d host.node.getName().split(\":\")[0];\n        if (index \u003d\u003d replicationFactor) {\n          done \u003d true;\n          break;\n        }\n      }\n      \n      if (done \u003d\u003d true) {\n        break;\n      }\n    }\n    return retVal;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/FileInputFormat.java"
    }
  }
}