{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GaloisField.java",
  "functionName": "substitute",
  "functionId": "substitute___p-ByteBuffer[]__len-int__q-ByteBuffer__x-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/util/GaloisField.java",
  "functionStartLine": 444,
  "functionEndLine": 457,
  "numCommitsSeen": 9,
  "timeTaken": 1517,
  "changeHistory": [
    "4ad484883f773c702a1874fc12816ef1a4a54136",
    "343c0e76fcd95ac739ca7cd6742c9d617e19fc37",
    "dae27f6dd14ac3ed0b9821a3c5239569b13f6adf"
  ],
  "changeHistoryShort": {
    "4ad484883f773c702a1874fc12816ef1a4a54136": "Ymultichange(Yparameterchange,Ybodychange)",
    "343c0e76fcd95ac739ca7cd6742c9d617e19fc37": "Ybodychange",
    "dae27f6dd14ac3ed0b9821a3c5239569b13f6adf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4ad484883f773c702a1874fc12816ef1a4a54136": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-11847 Enhance raw coder allowing to read least required inputs in decoding. Contributed by Kai Zheng\n",
      "commitDate": "26/05/15 12:07 PM",
      "commitName": "4ad484883f773c702a1874fc12816ef1a4a54136",
      "commitAuthor": "Kai Zheng",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-11847 Enhance raw coder allowing to read least required inputs in decoding. Contributed by Kai Zheng\n",
          "commitDate": "26/05/15 12:07 PM",
          "commitName": "4ad484883f773c702a1874fc12816ef1a4a54136",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "26/05/15 12:02 PM",
          "commitNameOld": "343c0e76fcd95ac739ca7cd6742c9d617e19fc37",
          "commitAuthorOld": "Zhe Zhang",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,14 @@\n-  public void substitute(ByteBuffer[] p, ByteBuffer q, int x) {\n+  public void substitute(ByteBuffer[] p, int len, ByteBuffer q, int x) {\n     int y \u003d 1, iIdx, oIdx;\n     for (int i \u003d 0; i \u003c p.length; i++) {\n       ByteBuffer pi \u003d p[i];\n-      for (iIdx \u003d pi.position(), oIdx \u003d q.position();\n-           iIdx \u003c pi.limit(); iIdx++, oIdx++) {\n-        int pij \u003d pi.get(iIdx) \u0026 0x000000FF;\n+      int pos \u003d pi !\u003d null ? pi.position() : 0;\n+      int limit \u003d pi !\u003d null ? pi.limit() : len;\n+      for (oIdx \u003d q.position(), iIdx \u003d pos;\n+           iIdx \u003c limit; iIdx++, oIdx++) {\n+        int pij \u003d pi !\u003d null ? pi.get(iIdx) \u0026 0x000000FF : 0;\n         q.put(oIdx, (byte) (q.get(oIdx) ^ mulTable[pij][y]));\n       }\n       y \u003d mulTable[x][y];\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void substitute(ByteBuffer[] p, int len, ByteBuffer q, int x) {\n    int y \u003d 1, iIdx, oIdx;\n    for (int i \u003d 0; i \u003c p.length; i++) {\n      ByteBuffer pi \u003d p[i];\n      int pos \u003d pi !\u003d null ? pi.position() : 0;\n      int limit \u003d pi !\u003d null ? pi.limit() : len;\n      for (oIdx \u003d q.position(), iIdx \u003d pos;\n           iIdx \u003c limit; iIdx++, oIdx++) {\n        int pij \u003d pi !\u003d null ? pi.get(iIdx) \u0026 0x000000FF : 0;\n        q.put(oIdx, (byte) (q.get(oIdx) ^ mulTable[pij][y]));\n      }\n      y \u003d mulTable[x][y];\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/util/GaloisField.java",
          "extendedDetails": {
            "oldValue": "[p-ByteBuffer[], q-ByteBuffer, x-int]",
            "newValue": "[p-ByteBuffer[], len-int, q-ByteBuffer, x-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-11847 Enhance raw coder allowing to read least required inputs in decoding. Contributed by Kai Zheng\n",
          "commitDate": "26/05/15 12:07 PM",
          "commitName": "4ad484883f773c702a1874fc12816ef1a4a54136",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "26/05/15 12:02 PM",
          "commitNameOld": "343c0e76fcd95ac739ca7cd6742c9d617e19fc37",
          "commitAuthorOld": "Zhe Zhang",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,14 @@\n-  public void substitute(ByteBuffer[] p, ByteBuffer q, int x) {\n+  public void substitute(ByteBuffer[] p, int len, ByteBuffer q, int x) {\n     int y \u003d 1, iIdx, oIdx;\n     for (int i \u003d 0; i \u003c p.length; i++) {\n       ByteBuffer pi \u003d p[i];\n-      for (iIdx \u003d pi.position(), oIdx \u003d q.position();\n-           iIdx \u003c pi.limit(); iIdx++, oIdx++) {\n-        int pij \u003d pi.get(iIdx) \u0026 0x000000FF;\n+      int pos \u003d pi !\u003d null ? pi.position() : 0;\n+      int limit \u003d pi !\u003d null ? pi.limit() : len;\n+      for (oIdx \u003d q.position(), iIdx \u003d pos;\n+           iIdx \u003c limit; iIdx++, oIdx++) {\n+        int pij \u003d pi !\u003d null ? pi.get(iIdx) \u0026 0x000000FF : 0;\n         q.put(oIdx, (byte) (q.get(oIdx) ^ mulTable[pij][y]));\n       }\n       y \u003d mulTable[x][y];\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void substitute(ByteBuffer[] p, int len, ByteBuffer q, int x) {\n    int y \u003d 1, iIdx, oIdx;\n    for (int i \u003d 0; i \u003c p.length; i++) {\n      ByteBuffer pi \u003d p[i];\n      int pos \u003d pi !\u003d null ? pi.position() : 0;\n      int limit \u003d pi !\u003d null ? pi.limit() : len;\n      for (oIdx \u003d q.position(), iIdx \u003d pos;\n           iIdx \u003c limit; iIdx++, oIdx++) {\n        int pij \u003d pi !\u003d null ? pi.get(iIdx) \u0026 0x000000FF : 0;\n        q.put(oIdx, (byte) (q.get(oIdx) ^ mulTable[pij][y]));\n      }\n      y \u003d mulTable[x][y];\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/util/GaloisField.java",
          "extendedDetails": {}
        }
      ]
    },
    "343c0e76fcd95ac739ca7cd6742c9d617e19fc37": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11938. Enhance ByteBuffer version encode/decode API of raw erasure coder. Contributed by Kai Zheng.\n",
      "commitDate": "26/05/15 12:02 PM",
      "commitName": "343c0e76fcd95ac739ca7cd6742c9d617e19fc37",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "26/05/15 11:07 AM",
      "commitNameOld": "dae27f6dd14ac3ed0b9821a3c5239569b13f6adf",
      "commitAuthorOld": "drankye",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 111,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public void substitute(ByteBuffer[] p, ByteBuffer q, int x) {\n-    int y \u003d 1;\n+    int y \u003d 1, iIdx, oIdx;\n     for (int i \u003d 0; i \u003c p.length; i++) {\n       ByteBuffer pi \u003d p[i];\n-      int len \u003d pi.remaining();\n-      for (int j \u003d 0; j \u003c len; j++) {\n-        int pij \u003d pi.get(j) \u0026 0x000000FF;\n-        q.put(j, (byte) (q.get(j) ^ mulTable[pij][y]));\n+      for (iIdx \u003d pi.position(), oIdx \u003d q.position();\n+           iIdx \u003c pi.limit(); iIdx++, oIdx++) {\n+        int pij \u003d pi.get(iIdx) \u0026 0x000000FF;\n+        q.put(oIdx, (byte) (q.get(oIdx) ^ mulTable[pij][y]));\n       }\n       y \u003d mulTable[x][y];\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void substitute(ByteBuffer[] p, ByteBuffer q, int x) {\n    int y \u003d 1, iIdx, oIdx;\n    for (int i \u003d 0; i \u003c p.length; i++) {\n      ByteBuffer pi \u003d p[i];\n      for (iIdx \u003d pi.position(), oIdx \u003d q.position();\n           iIdx \u003c pi.limit(); iIdx++, oIdx++) {\n        int pij \u003d pi.get(iIdx) \u0026 0x000000FF;\n        q.put(oIdx, (byte) (q.get(oIdx) ^ mulTable[pij][y]));\n      }\n      y \u003d mulTable[x][y];\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/util/GaloisField.java",
      "extendedDetails": {}
    },
    "dae27f6dd14ac3ed0b9821a3c5239569b13f6adf": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11542. Raw Reed-Solomon coder in pure Java. Contributed by Kai Zheng\n",
      "commitDate": "26/05/15 11:07 AM",
      "commitName": "dae27f6dd14ac3ed0b9821a3c5239569b13f6adf",
      "commitAuthor": "drankye",
      "diff": "@@ -0,0 +1,12 @@\n+  public void substitute(ByteBuffer[] p, ByteBuffer q, int x) {\n+    int y \u003d 1;\n+    for (int i \u003d 0; i \u003c p.length; i++) {\n+      ByteBuffer pi \u003d p[i];\n+      int len \u003d pi.remaining();\n+      for (int j \u003d 0; j \u003c len; j++) {\n+        int pij \u003d pi.get(j) \u0026 0x000000FF;\n+        q.put(j, (byte) (q.get(j) ^ mulTable[pij][y]));\n+      }\n+      y \u003d mulTable[x][y];\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void substitute(ByteBuffer[] p, ByteBuffer q, int x) {\n    int y \u003d 1;\n    for (int i \u003d 0; i \u003c p.length; i++) {\n      ByteBuffer pi \u003d p[i];\n      int len \u003d pi.remaining();\n      for (int j \u003d 0; j \u003c len; j++) {\n        int pij \u003d pi.get(j) \u0026 0x000000FF;\n        q.put(j, (byte) (q.get(j) ^ mulTable[pij][y]));\n      }\n      y \u003d mulTable[x][y];\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/util/GaloisField.java"
    }
  }
}