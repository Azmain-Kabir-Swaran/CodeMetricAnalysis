{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageFormatPBINode.java",
  "functionName": "buildXAttrs",
  "functionId": "buildXAttrs___f-XAttrFeature",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java",
  "functionStartLine": 606,
  "functionEndLine": 620,
  "numCommitsSeen": 121,
  "timeTaken": 5636,
  "changeHistory": [
    "b60ca37914b22550e3630fa02742d40697decb31",
    "06022b8fdc40e50eaac63758246353058e8cfa6d",
    "04915a08141bbe71bdef26e3f539aa8b76f89ac7",
    "ac23a55547716df29b3e25c98a113399e184d9d1"
  ],
  "changeHistoryShort": {
    "b60ca37914b22550e3630fa02742d40697decb31": "Ymultichange(Yparameterchange,Ybodychange)",
    "06022b8fdc40e50eaac63758246353058e8cfa6d": "Ybodychange",
    "04915a08141bbe71bdef26e3f539aa8b76f89ac7": "Ybodychange",
    "ac23a55547716df29b3e25c98a113399e184d9d1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b60ca37914b22550e3630fa02742d40697decb31": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Fix potential FSImage corruption. Contributed by Daryn Sharp.\n",
      "commitDate": "15/10/18 3:18 AM",
      "commitName": "b60ca37914b22550e3630fa02742d40697decb31",
      "commitAuthor": "Vinayakumar B",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Fix potential FSImage corruption. Contributed by Daryn Sharp.\n",
          "commitDate": "15/10/18 3:18 AM",
          "commitName": "b60ca37914b22550e3630fa02742d40697decb31",
          "commitAuthor": "Vinayakumar B",
          "commitDateOld": "06/09/18 2:48 PM",
          "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
          "commitAuthorOld": "Giovanni Matteo Fumarola",
          "daysBetweenCommits": 38.52,
          "commitsBetweenForRepo": 414,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,15 @@\n-    private static XAttrFeatureProto.Builder buildXAttrs(XAttrFeature f,\n-        final SaverContext.DeduplicationMap\u003cString\u003e stringMap) {\n+    private static XAttrFeatureProto.Builder buildXAttrs(XAttrFeature f) {\n       XAttrFeatureProto.Builder b \u003d XAttrFeatureProto.newBuilder();\n       for (XAttr a : f.getXAttrs()) {\n         XAttrCompactProto.Builder xAttrCompactBuilder \u003d XAttrCompactProto.\n             newBuilder();\n-        int nsOrd \u003d a.getNameSpace().ordinal();\n-        Preconditions.checkArgument(nsOrd \u003c 8, \"Too many namespaces.\");\n-        int v \u003d ((nsOrd \u0026 XATTR_NAMESPACE_MASK) \u003c\u003c XATTR_NAMESPACE_OFFSET)\n-            | ((stringMap.getId(a.getName()) \u0026 XATTR_NAME_MASK) \u003c\u003c\n-                XATTR_NAME_OFFSET);\n-        v |\u003d (((nsOrd \u003e\u003e 2) \u0026 XATTR_NAMESPACE_EXT_MASK) \u003c\u003c\n-            XATTR_NAMESPACE_EXT_OFFSET);\n+        int v \u003d XAttrFormat.toInt(a);\n         xAttrCompactBuilder.setName(v);\n         if (a.getValue() !\u003d null) {\n           xAttrCompactBuilder.setValue(PBHelperClient.getByteString(a.getValue()));\n         }\n         b.addXAttrs(xAttrCompactBuilder.build());\n       }\n       \n       return b;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static XAttrFeatureProto.Builder buildXAttrs(XAttrFeature f) {\n      XAttrFeatureProto.Builder b \u003d XAttrFeatureProto.newBuilder();\n      for (XAttr a : f.getXAttrs()) {\n        XAttrCompactProto.Builder xAttrCompactBuilder \u003d XAttrCompactProto.\n            newBuilder();\n        int v \u003d XAttrFormat.toInt(a);\n        xAttrCompactBuilder.setName(v);\n        if (a.getValue() !\u003d null) {\n          xAttrCompactBuilder.setValue(PBHelperClient.getByteString(a.getValue()));\n        }\n        b.addXAttrs(xAttrCompactBuilder.build());\n      }\n      \n      return b;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java",
          "extendedDetails": {
            "oldValue": "[f-XAttrFeature, stringMap-SaverContext.DeduplicationMap\u003cString\u003e(modifiers-final)]",
            "newValue": "[f-XAttrFeature]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Fix potential FSImage corruption. Contributed by Daryn Sharp.\n",
          "commitDate": "15/10/18 3:18 AM",
          "commitName": "b60ca37914b22550e3630fa02742d40697decb31",
          "commitAuthor": "Vinayakumar B",
          "commitDateOld": "06/09/18 2:48 PM",
          "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
          "commitAuthorOld": "Giovanni Matteo Fumarola",
          "daysBetweenCommits": 38.52,
          "commitsBetweenForRepo": 414,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,15 @@\n-    private static XAttrFeatureProto.Builder buildXAttrs(XAttrFeature f,\n-        final SaverContext.DeduplicationMap\u003cString\u003e stringMap) {\n+    private static XAttrFeatureProto.Builder buildXAttrs(XAttrFeature f) {\n       XAttrFeatureProto.Builder b \u003d XAttrFeatureProto.newBuilder();\n       for (XAttr a : f.getXAttrs()) {\n         XAttrCompactProto.Builder xAttrCompactBuilder \u003d XAttrCompactProto.\n             newBuilder();\n-        int nsOrd \u003d a.getNameSpace().ordinal();\n-        Preconditions.checkArgument(nsOrd \u003c 8, \"Too many namespaces.\");\n-        int v \u003d ((nsOrd \u0026 XATTR_NAMESPACE_MASK) \u003c\u003c XATTR_NAMESPACE_OFFSET)\n-            | ((stringMap.getId(a.getName()) \u0026 XATTR_NAME_MASK) \u003c\u003c\n-                XATTR_NAME_OFFSET);\n-        v |\u003d (((nsOrd \u003e\u003e 2) \u0026 XATTR_NAMESPACE_EXT_MASK) \u003c\u003c\n-            XATTR_NAMESPACE_EXT_OFFSET);\n+        int v \u003d XAttrFormat.toInt(a);\n         xAttrCompactBuilder.setName(v);\n         if (a.getValue() !\u003d null) {\n           xAttrCompactBuilder.setValue(PBHelperClient.getByteString(a.getValue()));\n         }\n         b.addXAttrs(xAttrCompactBuilder.build());\n       }\n       \n       return b;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static XAttrFeatureProto.Builder buildXAttrs(XAttrFeature f) {\n      XAttrFeatureProto.Builder b \u003d XAttrFeatureProto.newBuilder();\n      for (XAttr a : f.getXAttrs()) {\n        XAttrCompactProto.Builder xAttrCompactBuilder \u003d XAttrCompactProto.\n            newBuilder();\n        int v \u003d XAttrFormat.toInt(a);\n        xAttrCompactBuilder.setName(v);\n        if (a.getValue() !\u003d null) {\n          xAttrCompactBuilder.setValue(PBHelperClient.getByteString(a.getValue()));\n        }\n        b.addXAttrs(xAttrCompactBuilder.build());\n      }\n      \n      return b;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java",
          "extendedDetails": {}
        }
      ]
    },
    "06022b8fdc40e50eaac63758246353058e8cfa6d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
      "commitDate": "21/09/15 6:53 PM",
      "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "25/08/15 1:16 AM",
      "commitNameOld": "eee0d4563c62647cfaaed6605ee713aaf69add78",
      "commitAuthorOld": "yliu",
      "daysBetweenCommits": 27.73,
      "commitsBetweenForRepo": 164,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     private static XAttrFeatureProto.Builder buildXAttrs(XAttrFeature f,\n         final SaverContext.DeduplicationMap\u003cString\u003e stringMap) {\n       XAttrFeatureProto.Builder b \u003d XAttrFeatureProto.newBuilder();\n       for (XAttr a : f.getXAttrs()) {\n         XAttrCompactProto.Builder xAttrCompactBuilder \u003d XAttrCompactProto.\n             newBuilder();\n         int nsOrd \u003d a.getNameSpace().ordinal();\n         Preconditions.checkArgument(nsOrd \u003c 8, \"Too many namespaces.\");\n         int v \u003d ((nsOrd \u0026 XATTR_NAMESPACE_MASK) \u003c\u003c XATTR_NAMESPACE_OFFSET)\n             | ((stringMap.getId(a.getName()) \u0026 XATTR_NAME_MASK) \u003c\u003c\n                 XATTR_NAME_OFFSET);\n         v |\u003d (((nsOrd \u003e\u003e 2) \u0026 XATTR_NAMESPACE_EXT_MASK) \u003c\u003c\n             XATTR_NAMESPACE_EXT_OFFSET);\n         xAttrCompactBuilder.setName(v);\n         if (a.getValue() !\u003d null) {\n-          xAttrCompactBuilder.setValue(PBHelper.getByteString(a.getValue()));\n+          xAttrCompactBuilder.setValue(PBHelperClient.getByteString(a.getValue()));\n         }\n         b.addXAttrs(xAttrCompactBuilder.build());\n       }\n       \n       return b;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static XAttrFeatureProto.Builder buildXAttrs(XAttrFeature f,\n        final SaverContext.DeduplicationMap\u003cString\u003e stringMap) {\n      XAttrFeatureProto.Builder b \u003d XAttrFeatureProto.newBuilder();\n      for (XAttr a : f.getXAttrs()) {\n        XAttrCompactProto.Builder xAttrCompactBuilder \u003d XAttrCompactProto.\n            newBuilder();\n        int nsOrd \u003d a.getNameSpace().ordinal();\n        Preconditions.checkArgument(nsOrd \u003c 8, \"Too many namespaces.\");\n        int v \u003d ((nsOrd \u0026 XATTR_NAMESPACE_MASK) \u003c\u003c XATTR_NAMESPACE_OFFSET)\n            | ((stringMap.getId(a.getName()) \u0026 XATTR_NAME_MASK) \u003c\u003c\n                XATTR_NAME_OFFSET);\n        v |\u003d (((nsOrd \u003e\u003e 2) \u0026 XATTR_NAMESPACE_EXT_MASK) \u003c\u003c\n            XATTR_NAMESPACE_EXT_OFFSET);\n        xAttrCompactBuilder.setName(v);\n        if (a.getValue() !\u003d null) {\n          xAttrCompactBuilder.setValue(PBHelperClient.getByteString(a.getValue()));\n        }\n        b.addXAttrs(xAttrCompactBuilder.build());\n      }\n      \n      return b;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java",
      "extendedDetails": {}
    },
    "04915a08141bbe71bdef26e3f539aa8b76f89ac7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6951. Correctly persist raw namespace xattrs to edit log and fsimage. Contributed by Charles Lamb.\n",
      "commitDate": "08/09/14 4:59 PM",
      "commitName": "04915a08141bbe71bdef26e3f539aa8b76f89ac7",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "22/06/14 12:39 AM",
      "commitNameOld": "1e89eba47d0f291b33fc26f9406231fc70b63a87",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 78.68,
      "commitsBetweenForRepo": 618,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,22 @@\n     private static XAttrFeatureProto.Builder buildXAttrs(XAttrFeature f,\n         final SaverContext.DeduplicationMap\u003cString\u003e stringMap) {\n       XAttrFeatureProto.Builder b \u003d XAttrFeatureProto.newBuilder();\n       for (XAttr a : f.getXAttrs()) {\n         XAttrCompactProto.Builder xAttrCompactBuilder \u003d XAttrCompactProto.\n             newBuilder();\n-        int v \u003d ((a.getNameSpace().ordinal() \u0026 XATTR_NAMESPACE_MASK) \u003c\u003c \n-            XATTR_NAMESPACE_OFFSET) \n-            | ((stringMap.getId(a.getName()) \u0026 XATTR_NAME_MASK) \u003c\u003c \n+        int nsOrd \u003d a.getNameSpace().ordinal();\n+        Preconditions.checkArgument(nsOrd \u003c 8, \"Too many namespaces.\");\n+        int v \u003d ((nsOrd \u0026 XATTR_NAMESPACE_MASK) \u003c\u003c XATTR_NAMESPACE_OFFSET)\n+            | ((stringMap.getId(a.getName()) \u0026 XATTR_NAME_MASK) \u003c\u003c\n                 XATTR_NAME_OFFSET);\n+        v |\u003d (((nsOrd \u003e\u003e 2) \u0026 XATTR_NAMESPACE_EXT_MASK) \u003c\u003c\n+            XATTR_NAMESPACE_EXT_OFFSET);\n         xAttrCompactBuilder.setName(v);\n         if (a.getValue() !\u003d null) {\n           xAttrCompactBuilder.setValue(PBHelper.getByteString(a.getValue()));\n         }\n         b.addXAttrs(xAttrCompactBuilder.build());\n       }\n       \n       return b;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static XAttrFeatureProto.Builder buildXAttrs(XAttrFeature f,\n        final SaverContext.DeduplicationMap\u003cString\u003e stringMap) {\n      XAttrFeatureProto.Builder b \u003d XAttrFeatureProto.newBuilder();\n      for (XAttr a : f.getXAttrs()) {\n        XAttrCompactProto.Builder xAttrCompactBuilder \u003d XAttrCompactProto.\n            newBuilder();\n        int nsOrd \u003d a.getNameSpace().ordinal();\n        Preconditions.checkArgument(nsOrd \u003c 8, \"Too many namespaces.\");\n        int v \u003d ((nsOrd \u0026 XATTR_NAMESPACE_MASK) \u003c\u003c XATTR_NAMESPACE_OFFSET)\n            | ((stringMap.getId(a.getName()) \u0026 XATTR_NAME_MASK) \u003c\u003c\n                XATTR_NAME_OFFSET);\n        v |\u003d (((nsOrd \u003e\u003e 2) \u0026 XATTR_NAMESPACE_EXT_MASK) \u003c\u003c\n            XATTR_NAMESPACE_EXT_OFFSET);\n        xAttrCompactBuilder.setName(v);\n        if (a.getValue() !\u003d null) {\n          xAttrCompactBuilder.setValue(PBHelper.getByteString(a.getValue()));\n        }\n        b.addXAttrs(xAttrCompactBuilder.build());\n      }\n      \n      return b;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java",
      "extendedDetails": {}
    },
    "ac23a55547716df29b3e25c98a113399e184d9d1": {
      "type": "Yintroduced",
      "commitMessage": "Merge HDFS-2006 HDFS XAttrs branch to Trunk\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596575 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/05/14 6:57 AM",
      "commitName": "ac23a55547716df29b3e25c98a113399e184d9d1",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,19 @@\n+    private static XAttrFeatureProto.Builder buildXAttrs(XAttrFeature f,\n+        final SaverContext.DeduplicationMap\u003cString\u003e stringMap) {\n+      XAttrFeatureProto.Builder b \u003d XAttrFeatureProto.newBuilder();\n+      for (XAttr a : f.getXAttrs()) {\n+        XAttrCompactProto.Builder xAttrCompactBuilder \u003d XAttrCompactProto.\n+            newBuilder();\n+        int v \u003d ((a.getNameSpace().ordinal() \u0026 XATTR_NAMESPACE_MASK) \u003c\u003c \n+            XATTR_NAMESPACE_OFFSET) \n+            | ((stringMap.getId(a.getName()) \u0026 XATTR_NAME_MASK) \u003c\u003c \n+                XATTR_NAME_OFFSET);\n+        xAttrCompactBuilder.setName(v);\n+        if (a.getValue() !\u003d null) {\n+          xAttrCompactBuilder.setValue(PBHelper.getByteString(a.getValue()));\n+        }\n+        b.addXAttrs(xAttrCompactBuilder.build());\n+      }\n+      \n+      return b;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static XAttrFeatureProto.Builder buildXAttrs(XAttrFeature f,\n        final SaverContext.DeduplicationMap\u003cString\u003e stringMap) {\n      XAttrFeatureProto.Builder b \u003d XAttrFeatureProto.newBuilder();\n      for (XAttr a : f.getXAttrs()) {\n        XAttrCompactProto.Builder xAttrCompactBuilder \u003d XAttrCompactProto.\n            newBuilder();\n        int v \u003d ((a.getNameSpace().ordinal() \u0026 XATTR_NAMESPACE_MASK) \u003c\u003c \n            XATTR_NAMESPACE_OFFSET) \n            | ((stringMap.getId(a.getName()) \u0026 XATTR_NAME_MASK) \u003c\u003c \n                XATTR_NAME_OFFSET);\n        xAttrCompactBuilder.setName(v);\n        if (a.getValue() !\u003d null) {\n          xAttrCompactBuilder.setValue(PBHelper.getByteString(a.getValue()));\n        }\n        b.addXAttrs(xAttrCompactBuilder.build());\n      }\n      \n      return b;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java"
    }
  }
}