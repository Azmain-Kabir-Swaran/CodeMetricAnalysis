{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProvidedStorageMap.java",
  "functionName": "build",
  "functionId": "build___client-DatanodeDescriptor",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/ProvidedStorageMap.java",
  "functionStartLine": 301,
  "functionEndLine": 305,
  "numCommitsSeen": 17,
  "timeTaken": 2412,
  "changeHistory": [
    "8239e3afb31d3c4485817d4b8b8b195b554acbe7",
    "3d3be87e301d9f8ab1a220bc5dbeae0f032c5a86",
    "aa5ec85f7fd2dc6ac568a88716109bab8df8be19",
    "d65df0f27395792c6e25f5e03b6ba1765e2ba925"
  ],
  "changeHistoryShort": {
    "8239e3afb31d3c4485817d4b8b8b195b554acbe7": "Ybodychange",
    "3d3be87e301d9f8ab1a220bc5dbeae0f032c5a86": "Ybodychange",
    "aa5ec85f7fd2dc6ac568a88716109bab8df8be19": "Ybodychange",
    "d65df0f27395792c6e25f5e03b6ba1765e2ba925": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8239e3afb31d3c4485817d4b8b8b195b554acbe7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12712. [9806] Code style cleanup\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "8239e3afb31d3c4485817d4b8b8b195b554acbe7",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "c89b29bd421152f0e7e16936f18d9e852895c37a",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,5 @@\n     LocatedBlocks build(DatanodeDescriptor client) {\n+      // TODO choose provided locations close to the client.\n       return new LocatedBlocks(\n           flen, isUC, blocks, last, lastComplete, feInfo, ecPolicy);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    LocatedBlocks build(DatanodeDescriptor client) {\n      // TODO choose provided locations close to the client.\n      return new LocatedBlocks(\n          flen, isUC, blocks, last, lastComplete, feInfo, ecPolicy);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/ProvidedStorageMap.java",
      "extendedDetails": {}
    },
    "3d3be87e301d9f8ab1a220bc5dbeae0f032c5a86": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12778. [READ] Report multiple locations for PROVIDED blocks\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "3d3be87e301d9f8ab1a220bc5dbeae0f032c5a86",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "3b1d30301bcd35bbe525a7e122d3e5acfab92c88",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,4 @@\n     LocatedBlocks build(DatanodeDescriptor client) {\n-      // TODO: to support multiple provided storages, need to pass/maintain map\n-      if (hasProvidedLocations) {\n-        // set all fields of pending DatanodeInfo\n-        List\u003cString\u003e excludedUUids \u003d new ArrayList\u003cString\u003e();\n-        for (LocatedBlock b : blocks) {\n-          DatanodeInfo[] infos \u003d b.getLocations();\n-          StorageType[] types \u003d b.getStorageTypes();\n-\n-          for (int i \u003d 0; i \u003c types.length; i++) {\n-            if (!StorageType.PROVIDED.equals(types[i])) {\n-              excludedUUids.add(infos[i].getDatanodeUuid());\n-            }\n-          }\n-        }\n-\n-        DatanodeDescriptor dn \u003d\n-                providedDescriptor.choose(client, excludedUUids);\n-        if (dn \u003d\u003d null) {\n-          dn \u003d providedDescriptor.choose(client);\n-        }\n-        pending.replaceInternal(dn);\n-      }\n-\n       return new LocatedBlocks(\n           flen, isUC, blocks, last, lastComplete, feInfo, ecPolicy);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    LocatedBlocks build(DatanodeDescriptor client) {\n      return new LocatedBlocks(\n          flen, isUC, blocks, last, lastComplete, feInfo, ecPolicy);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/ProvidedStorageMap.java",
      "extendedDetails": {}
    },
    "aa5ec85f7fd2dc6ac568a88716109bab8df8be19": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11663. [READ] Fix NullPointerException in ProvidedBlocksBuilder\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "aa5ec85f7fd2dc6ac568a88716109bab8df8be19",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "d65df0f27395792c6e25f5e03b6ba1765e2ba925",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,27 @@\n     LocatedBlocks build(DatanodeDescriptor client) {\n       // TODO: to support multiple provided storages, need to pass/maintain map\n-      // set all fields of pending DatanodeInfo\n-      List\u003cString\u003e excludedUUids \u003d new ArrayList\u003cString\u003e();\n-      for (LocatedBlock b: blocks) {\n-        DatanodeInfo[] infos \u003d b.getLocations();\n-        StorageType[] types \u003d b.getStorageTypes();\n+      if (hasProvidedLocations) {\n+        // set all fields of pending DatanodeInfo\n+        List\u003cString\u003e excludedUUids \u003d new ArrayList\u003cString\u003e();\n+        for (LocatedBlock b : blocks) {\n+          DatanodeInfo[] infos \u003d b.getLocations();\n+          StorageType[] types \u003d b.getStorageTypes();\n \n-        for (int i \u003d 0; i \u003c types.length; i++) {\n-          if (!StorageType.PROVIDED.equals(types[i])) {\n-            excludedUUids.add(infos[i].getDatanodeUuid());\n+          for (int i \u003d 0; i \u003c types.length; i++) {\n+            if (!StorageType.PROVIDED.equals(types[i])) {\n+              excludedUUids.add(infos[i].getDatanodeUuid());\n+            }\n           }\n         }\n+\n+        DatanodeDescriptor dn \u003d\n+                providedDescriptor.choose(client, excludedUUids);\n+        if (dn \u003d\u003d null) {\n+          dn \u003d providedDescriptor.choose(client);\n+        }\n+        pending.replaceInternal(dn);\n       }\n \n-      DatanodeDescriptor dn \u003d providedDescriptor.choose(client, excludedUUids);\n-      if (dn \u003d\u003d null) {\n-        dn \u003d providedDescriptor.choose(client);\n-      }\n-\n-      pending.replaceInternal(dn);\n       return new LocatedBlocks(\n           flen, isUC, blocks, last, lastComplete, feInfo, ecPolicy);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    LocatedBlocks build(DatanodeDescriptor client) {\n      // TODO: to support multiple provided storages, need to pass/maintain map\n      if (hasProvidedLocations) {\n        // set all fields of pending DatanodeInfo\n        List\u003cString\u003e excludedUUids \u003d new ArrayList\u003cString\u003e();\n        for (LocatedBlock b : blocks) {\n          DatanodeInfo[] infos \u003d b.getLocations();\n          StorageType[] types \u003d b.getStorageTypes();\n\n          for (int i \u003d 0; i \u003c types.length; i++) {\n            if (!StorageType.PROVIDED.equals(types[i])) {\n              excludedUUids.add(infos[i].getDatanodeUuid());\n            }\n          }\n        }\n\n        DatanodeDescriptor dn \u003d\n                providedDescriptor.choose(client, excludedUUids);\n        if (dn \u003d\u003d null) {\n          dn \u003d providedDescriptor.choose(client);\n        }\n        pending.replaceInternal(dn);\n      }\n\n      return new LocatedBlocks(\n          flen, isUC, blocks, last, lastComplete, feInfo, ecPolicy);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/ProvidedStorageMap.java",
      "extendedDetails": {}
    },
    "d65df0f27395792c6e25f5e03b6ba1765e2ba925": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11190. [READ] Namenode support for data stored in external stores.\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "d65df0f27395792c6e25f5e03b6ba1765e2ba925",
      "commitAuthor": "Virajith Jalaparti",
      "diff": "@@ -0,0 +1,24 @@\n+    LocatedBlocks build(DatanodeDescriptor client) {\n+      // TODO: to support multiple provided storages, need to pass/maintain map\n+      // set all fields of pending DatanodeInfo\n+      List\u003cString\u003e excludedUUids \u003d new ArrayList\u003cString\u003e();\n+      for (LocatedBlock b: blocks) {\n+        DatanodeInfo[] infos \u003d b.getLocations();\n+        StorageType[] types \u003d b.getStorageTypes();\n+\n+        for (int i \u003d 0; i \u003c types.length; i++) {\n+          if (!StorageType.PROVIDED.equals(types[i])) {\n+            excludedUUids.add(infos[i].getDatanodeUuid());\n+          }\n+        }\n+      }\n+\n+      DatanodeDescriptor dn \u003d providedDescriptor.choose(client, excludedUUids);\n+      if (dn \u003d\u003d null) {\n+        dn \u003d providedDescriptor.choose(client);\n+      }\n+\n+      pending.replaceInternal(dn);\n+      return new LocatedBlocks(\n+          flen, isUC, blocks, last, lastComplete, feInfo, ecPolicy);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    LocatedBlocks build(DatanodeDescriptor client) {\n      // TODO: to support multiple provided storages, need to pass/maintain map\n      // set all fields of pending DatanodeInfo\n      List\u003cString\u003e excludedUUids \u003d new ArrayList\u003cString\u003e();\n      for (LocatedBlock b: blocks) {\n        DatanodeInfo[] infos \u003d b.getLocations();\n        StorageType[] types \u003d b.getStorageTypes();\n\n        for (int i \u003d 0; i \u003c types.length; i++) {\n          if (!StorageType.PROVIDED.equals(types[i])) {\n            excludedUUids.add(infos[i].getDatanodeUuid());\n          }\n        }\n      }\n\n      DatanodeDescriptor dn \u003d providedDescriptor.choose(client, excludedUUids);\n      if (dn \u003d\u003d null) {\n        dn \u003d providedDescriptor.choose(client);\n      }\n\n      pending.replaceInternal(dn);\n      return new LocatedBlocks(\n          flen, isUC, blocks, last, lastComplete, feInfo, ecPolicy);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/ProvidedStorageMap.java"
    }
  }
}