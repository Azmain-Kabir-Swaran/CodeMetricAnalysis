{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FifoScheduler.java",
  "functionName": "removeNode",
  "functionId": "removeNode___nodeInfo-RMNode",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
  "functionStartLine": 878,
  "functionEndLine": 892,
  "numCommitsSeen": 137,
  "timeTaken": 10992,
  "changeHistory": [
    "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
    "20d389ce61eaacb5ddfb329015f50e96ad894f8d",
    "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7",
    "150f5ae0343e872ee8bef39c57008c1389f0ba9e",
    "3fe57285635e8058c34aa40a103845b49ca7d6ff",
    "adf260a728df427eb729abe8fb9ad7248991ea54",
    "805a9ed85eb34c8125cfb7d26d07cdfac12b3579",
    "d36b6e045f317c94e97cb41a163aa974d161a404",
    "3114d4731dcca7cb6c16aaa7c7a6550b7dd7dccb",
    "f6a778c3725bcdaba1e1de43786af17dd44deb78",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
    "c0572656ced07a885f848c1134edd7b1c291d246",
    "817ead65b99f465fc2dfa18072cf23cadf5f05d0",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "bb62e0592566b2fcae7136b30972aad2d3ac55b0": "Ybodychange",
    "20d389ce61eaacb5ddfb329015f50e96ad894f8d": "Ybodychange",
    "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7": "Ybodychange",
    "150f5ae0343e872ee8bef39c57008c1389f0ba9e": "Ybodychange",
    "3fe57285635e8058c34aa40a103845b49ca7d6ff": "Ybodychange",
    "adf260a728df427eb729abe8fb9ad7248991ea54": "Ybodychange",
    "805a9ed85eb34c8125cfb7d26d07cdfac12b3579": "Ybodychange",
    "d36b6e045f317c94e97cb41a163aa974d161a404": "Ybodychange",
    "3114d4731dcca7cb6c16aaa7c7a6550b7dd7dccb": "Ybodychange",
    "f6a778c3725bcdaba1e1de43786af17dd44deb78": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": "Ybodychange",
    "c0572656ced07a885f848c1134edd7b1c291d246": "Ybodychange",
    "817ead65b99f465fc2dfa18072cf23cadf5f05d0": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bb62e0592566b2fcae7136b30972aad2d3ac55b0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4390. Do surgical preemption based on reserved container in CapacityScheduler. Contributed by Wangda Tan\n",
      "commitDate": "05/05/16 12:56 PM",
      "commitName": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
      "commitAuthor": "Jian He",
      "commitDateOld": "29/03/16 5:07 PM",
      "commitNameOld": "fc055a3cbe9545cf1c59421641c7b296aa33f953",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 36.83,
      "commitsBetweenForRepo": 230,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   private synchronized void removeNode(RMNode nodeInfo) {\n     FiCaSchedulerNode node \u003d nodeTracker.getNode(nodeInfo.getNodeID());\n     if (node \u003d\u003d null) {\n       return;\n     }\n     // Kill running containers\n-    for(RMContainer container : node.getRunningContainers()) {\n+    for(RMContainer container : node.getCopiedListOfRunningContainers()) {\n       super.completedContainer(container,\n           SchedulerUtils.createAbnormalContainerStatus(\n               container.getContainerId(), \n               SchedulerUtils.LOST_CONTAINER),\n               RMContainerEventType.KILL);\n     }\n     nodeTracker.removeNode(nodeInfo.getNodeID());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void removeNode(RMNode nodeInfo) {\n    FiCaSchedulerNode node \u003d nodeTracker.getNode(nodeInfo.getNodeID());\n    if (node \u003d\u003d null) {\n      return;\n    }\n    // Kill running containers\n    for(RMContainer container : node.getCopiedListOfRunningContainers()) {\n      super.completedContainer(container,\n          SchedulerUtils.createAbnormalContainerStatus(\n              container.getContainerId(), \n              SchedulerUtils.LOST_CONTAINER),\n              RMContainerEventType.KILL);\n    }\n    nodeTracker.removeNode(nodeInfo.getNodeID());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "20d389ce61eaacb5ddfb329015f50e96ad894f8d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4719. Add a helper library to maintain node state and allows common queries. (kasha)\n",
      "commitDate": "14/03/16 2:19 PM",
      "commitName": "20d389ce61eaacb5ddfb329015f50e96ad894f8d",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "28/02/16 9:35 AM",
      "commitNameOld": "f9692770a58af0ab082eb7f15da9cbdcd177605b",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 15.15,
      "commitsBetweenForRepo": 90,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,15 @@\n   private synchronized void removeNode(RMNode nodeInfo) {\n-    FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n+    FiCaSchedulerNode node \u003d nodeTracker.getNode(nodeInfo.getNodeID());\n     if (node \u003d\u003d null) {\n       return;\n     }\n     // Kill running containers\n     for(RMContainer container : node.getRunningContainers()) {\n       super.completedContainer(container,\n           SchedulerUtils.createAbnormalContainerStatus(\n               container.getContainerId(), \n               SchedulerUtils.LOST_CONTAINER),\n               RMContainerEventType.KILL);\n     }\n-    \n-    //Remove the node\n-    this.nodes.remove(nodeInfo.getNodeID());\n-    updateMaximumAllocation(node, false);\n-    \n-    // Update cluster metrics\n-    Resources.subtractFrom(clusterResource, node.getTotalResource());\n+    nodeTracker.removeNode(nodeInfo.getNodeID());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void removeNode(RMNode nodeInfo) {\n    FiCaSchedulerNode node \u003d nodeTracker.getNode(nodeInfo.getNodeID());\n    if (node \u003d\u003d null) {\n      return;\n    }\n    // Kill running containers\n    for(RMContainer container : node.getRunningContainers()) {\n      super.completedContainer(container,\n          SchedulerUtils.createAbnormalContainerStatus(\n              container.getContainerId(), \n              SchedulerUtils.LOST_CONTAINER),\n              RMContainerEventType.KILL);\n    }\n    nodeTracker.removeNode(nodeInfo.getNodeID());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n",
      "commitDate": "18/01/16 5:30 PM",
      "commitName": "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "18/01/16 5:27 PM",
      "commitNameOld": "150f5ae0343e872ee8bef39c57008c1389f0ba9e",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private synchronized void removeNode(RMNode nodeInfo) {\n     FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n     if (node \u003d\u003d null) {\n       return;\n     }\n     // Kill running containers\n     for(RMContainer container : node.getRunningContainers()) {\n-      completedContainer(container, \n+      super.completedContainer(container,\n           SchedulerUtils.createAbnormalContainerStatus(\n               container.getContainerId(), \n               SchedulerUtils.LOST_CONTAINER),\n               RMContainerEventType.KILL);\n     }\n     \n     //Remove the node\n     this.nodes.remove(nodeInfo.getNodeID());\n     updateMaximumAllocation(node, false);\n     \n     // Update cluster metrics\n     Resources.subtractFrom(clusterResource, node.getTotalResource());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void removeNode(RMNode nodeInfo) {\n    FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n    if (node \u003d\u003d null) {\n      return;\n    }\n    // Kill running containers\n    for(RMContainer container : node.getRunningContainers()) {\n      super.completedContainer(container,\n          SchedulerUtils.createAbnormalContainerStatus(\n              container.getContainerId(), \n              SchedulerUtils.LOST_CONTAINER),\n              RMContainerEventType.KILL);\n    }\n    \n    //Remove the node\n    this.nodes.remove(nodeInfo.getNodeID());\n    updateMaximumAllocation(node, false);\n    \n    // Update cluster metrics\n    Resources.subtractFrom(clusterResource, node.getTotalResource());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "150f5ae0343e872ee8bef39c57008c1389f0ba9e": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\"\n\nThis reverts commit 3fe57285635e8058c34aa40a103845b49ca7d6ff.\n\nConflicts:\n\thadoop-yarn-project/CHANGES.txt\n",
      "commitDate": "18/01/16 5:27 PM",
      "commitName": "150f5ae0343e872ee8bef39c57008c1389f0ba9e",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "18/01/16 1:06 AM",
      "commitNameOld": "3fe57285635e8058c34aa40a103845b49ca7d6ff",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private synchronized void removeNode(RMNode nodeInfo) {\n     FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n     if (node \u003d\u003d null) {\n       return;\n     }\n     // Kill running containers\n     for(RMContainer container : node.getRunningContainers()) {\n-      super.completedContainer(container,\n+      completedContainer(container, \n           SchedulerUtils.createAbnormalContainerStatus(\n               container.getContainerId(), \n               SchedulerUtils.LOST_CONTAINER),\n               RMContainerEventType.KILL);\n     }\n     \n     //Remove the node\n     this.nodes.remove(nodeInfo.getNodeID());\n     updateMaximumAllocation(node, false);\n     \n     // Update cluster metrics\n     Resources.subtractFrom(clusterResource, node.getTotalResource());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void removeNode(RMNode nodeInfo) {\n    FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n    if (node \u003d\u003d null) {\n      return;\n    }\n    // Kill running containers\n    for(RMContainer container : node.getRunningContainers()) {\n      completedContainer(container, \n          SchedulerUtils.createAbnormalContainerStatus(\n              container.getContainerId(), \n              SchedulerUtils.LOST_CONTAINER),\n              RMContainerEventType.KILL);\n    }\n    \n    //Remove the node\n    this.nodes.remove(nodeInfo.getNodeID());\n    updateMaximumAllocation(node, false);\n    \n    // Update cluster metrics\n    Resources.subtractFrom(clusterResource, node.getTotalResource());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "3fe57285635e8058c34aa40a103845b49ca7d6ff": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n\n(cherry picked from commit 805a9ed85eb34c8125cfb7d26d07cdfac12b3579)\n",
      "commitDate": "18/01/16 1:06 AM",
      "commitName": "3fe57285635e8058c34aa40a103845b49ca7d6ff",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "18/01/16 12:50 AM",
      "commitNameOld": "adf260a728df427eb729abe8fb9ad7248991ea54",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private synchronized void removeNode(RMNode nodeInfo) {\n     FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n     if (node \u003d\u003d null) {\n       return;\n     }\n     // Kill running containers\n     for(RMContainer container : node.getRunningContainers()) {\n-      completedContainer(container, \n+      super.completedContainer(container,\n           SchedulerUtils.createAbnormalContainerStatus(\n               container.getContainerId(), \n               SchedulerUtils.LOST_CONTAINER),\n               RMContainerEventType.KILL);\n     }\n     \n     //Remove the node\n     this.nodes.remove(nodeInfo.getNodeID());\n     updateMaximumAllocation(node, false);\n     \n     // Update cluster metrics\n     Resources.subtractFrom(clusterResource, node.getTotalResource());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void removeNode(RMNode nodeInfo) {\n    FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n    if (node \u003d\u003d null) {\n      return;\n    }\n    // Kill running containers\n    for(RMContainer container : node.getRunningContainers()) {\n      super.completedContainer(container,\n          SchedulerUtils.createAbnormalContainerStatus(\n              container.getContainerId(), \n              SchedulerUtils.LOST_CONTAINER),\n              RMContainerEventType.KILL);\n    }\n    \n    //Remove the node\n    this.nodes.remove(nodeInfo.getNodeID());\n    updateMaximumAllocation(node, false);\n    \n    // Update cluster metrics\n    Resources.subtractFrom(clusterResource, node.getTotalResource());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "adf260a728df427eb729abe8fb9ad7248991ea54": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\"\n\nThis reverts commit 805a9ed85eb34c8125cfb7d26d07cdfac12b3579.\n",
      "commitDate": "18/01/16 12:50 AM",
      "commitName": "adf260a728df427eb729abe8fb9ad7248991ea54",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "17/01/16 7:04 PM",
      "commitNameOld": "805a9ed85eb34c8125cfb7d26d07cdfac12b3579",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.24,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private synchronized void removeNode(RMNode nodeInfo) {\n     FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n     if (node \u003d\u003d null) {\n       return;\n     }\n     // Kill running containers\n     for(RMContainer container : node.getRunningContainers()) {\n-      super.completedContainer(container,\n+      completedContainer(container, \n           SchedulerUtils.createAbnormalContainerStatus(\n               container.getContainerId(), \n               SchedulerUtils.LOST_CONTAINER),\n               RMContainerEventType.KILL);\n     }\n     \n     //Remove the node\n     this.nodes.remove(nodeInfo.getNodeID());\n     updateMaximumAllocation(node, false);\n     \n     // Update cluster metrics\n     Resources.subtractFrom(clusterResource, node.getTotalResource());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void removeNode(RMNode nodeInfo) {\n    FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n    if (node \u003d\u003d null) {\n      return;\n    }\n    // Kill running containers\n    for(RMContainer container : node.getRunningContainers()) {\n      completedContainer(container, \n          SchedulerUtils.createAbnormalContainerStatus(\n              container.getContainerId(), \n              SchedulerUtils.LOST_CONTAINER),\n              RMContainerEventType.KILL);\n    }\n    \n    //Remove the node\n    this.nodes.remove(nodeInfo.getNodeID());\n    updateMaximumAllocation(node, false);\n    \n    // Update cluster metrics\n    Resources.subtractFrom(clusterResource, node.getTotalResource());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "805a9ed85eb34c8125cfb7d26d07cdfac12b3579": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4502. Fix two AM containers get allocated when AM restart. (Vinod Kumar Vavilapalli via wangda)\n",
      "commitDate": "17/01/16 7:04 PM",
      "commitName": "805a9ed85eb34c8125cfb7d26d07cdfac12b3579",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "14/12/15 10:52 AM",
      "commitNameOld": "6cb0af3c39a5d49cb2f7911ee21363a9542ca2d7",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 34.34,
      "commitsBetweenForRepo": 200,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private synchronized void removeNode(RMNode nodeInfo) {\n     FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n     if (node \u003d\u003d null) {\n       return;\n     }\n     // Kill running containers\n     for(RMContainer container : node.getRunningContainers()) {\n-      completedContainer(container, \n+      super.completedContainer(container,\n           SchedulerUtils.createAbnormalContainerStatus(\n               container.getContainerId(), \n               SchedulerUtils.LOST_CONTAINER),\n               RMContainerEventType.KILL);\n     }\n     \n     //Remove the node\n     this.nodes.remove(nodeInfo.getNodeID());\n     updateMaximumAllocation(node, false);\n     \n     // Update cluster metrics\n     Resources.subtractFrom(clusterResource, node.getTotalResource());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void removeNode(RMNode nodeInfo) {\n    FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n    if (node \u003d\u003d null) {\n      return;\n    }\n    // Kill running containers\n    for(RMContainer container : node.getRunningContainers()) {\n      super.completedContainer(container,\n          SchedulerUtils.createAbnormalContainerStatus(\n              container.getContainerId(), \n              SchedulerUtils.LOST_CONTAINER),\n              RMContainerEventType.KILL);\n    }\n    \n    //Remove the node\n    this.nodes.remove(nodeInfo.getNodeID());\n    updateMaximumAllocation(node, false);\n    \n    // Update cluster metrics\n    Resources.subtractFrom(clusterResource, node.getTotalResource());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "d36b6e045f317c94e97cb41a163aa974d161a404": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4344. NMs reconnecting with changed capabilities can lead to wrong cluster resource calculations. Contributed by Varun Vasudev\n",
      "commitDate": "23/11/15 12:30 PM",
      "commitName": "d36b6e045f317c94e97cb41a163aa974d161a404",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "23/09/15 1:29 PM",
      "commitNameOld": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 61.0,
      "commitsBetweenForRepo": 477,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private synchronized void removeNode(RMNode nodeInfo) {\n     FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n     if (node \u003d\u003d null) {\n       return;\n     }\n     // Kill running containers\n     for(RMContainer container : node.getRunningContainers()) {\n       completedContainer(container, \n           SchedulerUtils.createAbnormalContainerStatus(\n               container.getContainerId(), \n               SchedulerUtils.LOST_CONTAINER),\n               RMContainerEventType.KILL);\n     }\n     \n     //Remove the node\n     this.nodes.remove(nodeInfo.getNodeID());\n     updateMaximumAllocation(node, false);\n     \n     // Update cluster metrics\n-    Resources.subtractFrom(clusterResource, node.getRMNode().getTotalCapability());\n+    Resources.subtractFrom(clusterResource, node.getTotalResource());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void removeNode(RMNode nodeInfo) {\n    FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n    if (node \u003d\u003d null) {\n      return;\n    }\n    // Kill running containers\n    for(RMContainer container : node.getRunningContainers()) {\n      completedContainer(container, \n          SchedulerUtils.createAbnormalContainerStatus(\n              container.getContainerId(), \n              SchedulerUtils.LOST_CONTAINER),\n              RMContainerEventType.KILL);\n    }\n    \n    //Remove the node\n    this.nodes.remove(nodeInfo.getNodeID());\n    updateMaximumAllocation(node, false);\n    \n    // Update cluster metrics\n    Resources.subtractFrom(clusterResource, node.getTotalResource());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "3114d4731dcca7cb6c16aaa7c7a6550b7dd7dccb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2604. Scheduler should consider max-allocation-* in conjunction with the largest node. (Robert Kanter via kasha)\n",
      "commitDate": "21/11/14 10:32 AM",
      "commitName": "3114d4731dcca7cb6c16aaa7c7a6550b7dd7dccb",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "15/10/14 6:33 PM",
      "commitNameOld": "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 36.71,
      "commitsBetweenForRepo": 344,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   private synchronized void removeNode(RMNode nodeInfo) {\n     FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n     if (node \u003d\u003d null) {\n       return;\n     }\n     // Kill running containers\n     for(RMContainer container : node.getRunningContainers()) {\n       completedContainer(container, \n           SchedulerUtils.createAbnormalContainerStatus(\n               container.getContainerId(), \n               SchedulerUtils.LOST_CONTAINER),\n               RMContainerEventType.KILL);\n     }\n     \n     //Remove the node\n     this.nodes.remove(nodeInfo.getNodeID());\n+    updateMaximumAllocation(node, false);\n     \n     // Update cluster metrics\n     Resources.subtractFrom(clusterResource, node.getRMNode().getTotalCapability());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void removeNode(RMNode nodeInfo) {\n    FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n    if (node \u003d\u003d null) {\n      return;\n    }\n    // Kill running containers\n    for(RMContainer container : node.getRunningContainers()) {\n      completedContainer(container, \n          SchedulerUtils.createAbnormalContainerStatus(\n              container.getContainerId(), \n              SchedulerUtils.LOST_CONTAINER),\n              RMContainerEventType.KILL);\n    }\n    \n    //Remove the node\n    this.nodes.remove(nodeInfo.getNodeID());\n    updateMaximumAllocation(node, false);\n    \n    // Update cluster metrics\n    Resources.subtractFrom(clusterResource, node.getRMNode().getTotalCapability());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "f6a778c3725bcdaba1e1de43786af17dd44deb78": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2249. Avoided AM release requests being lost on work preserving RM restart. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1618972 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/14 1:33 PM",
      "commitName": "f6a778c3725bcdaba1e1de43786af17dd44deb78",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "18/07/14 5:12 PM",
      "commitNameOld": "8871d8ed9fb1e4b21943477dcbaa13ef22ea7b8e",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 31.85,
      "commitsBetweenForRepo": 243,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private synchronized void removeNode(RMNode nodeInfo) {\n     FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n     if (node \u003d\u003d null) {\n       return;\n     }\n     // Kill running containers\n     for(RMContainer container : node.getRunningContainers()) {\n-      containerCompleted(container, \n+      completedContainer(container, \n           SchedulerUtils.createAbnormalContainerStatus(\n               container.getContainerId(), \n               SchedulerUtils.LOST_CONTAINER),\n               RMContainerEventType.KILL);\n     }\n     \n     //Remove the node\n     this.nodes.remove(nodeInfo.getNodeID());\n     \n     // Update cluster metrics\n     Resources.subtractFrom(clusterResource, node.getRMNode().getTotalCapability());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void removeNode(RMNode nodeInfo) {\n    FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n    if (node \u003d\u003d null) {\n      return;\n    }\n    // Kill running containers\n    for(RMContainer container : node.getRunningContainers()) {\n      completedContainer(container, \n          SchedulerUtils.createAbnormalContainerStatus(\n              container.getContainerId(), \n              SchedulerUtils.LOST_CONTAINER),\n              RMContainerEventType.KILL);\n    }\n    \n    //Remove the node\n    this.nodes.remove(nodeInfo.getNodeID());\n    \n    // Update cluster metrics\n    Resources.subtractFrom(clusterResource, node.getRMNode().getTotalCapability());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void removeNode(RMNode nodeInfo) {\n    FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n    if (node \u003d\u003d null) {\n      return;\n    }\n    // Kill running containers\n    for(RMContainer container : node.getRunningContainers()) {\n      containerCompleted(container, \n          SchedulerUtils.createAbnormalContainerStatus(\n              container.getContainerId(), \n              SchedulerUtils.LOST_CONTAINER),\n              RMContainerEventType.KILL);\n    }\n    \n    //Remove the node\n    this.nodes.remove(nodeInfo.getNodeID());\n    \n    // Update cluster metrics\n    Resources.subtractFrom(clusterResource, node.getRMNode().getTotalCapability());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java"
      }
    },
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/12 6:43 PM",
      "commitName": "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "13/07/12 1:53 PM",
      "commitNameOld": "17de78a43e8d010f3df91dc5a1a40d74b60dfb8c",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 3.2,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private synchronized void removeNode(RMNode nodeInfo) {\n-    SchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n+    FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n     if (node \u003d\u003d null) {\n       return;\n     }\n     // Kill running containers\n     for(RMContainer container : node.getRunningContainers()) {\n       containerCompleted(container, \n           SchedulerUtils.createAbnormalContainerStatus(\n               container.getContainerId(), \n               SchedulerUtils.LOST_CONTAINER),\n               RMContainerEventType.KILL);\n     }\n     \n     //Remove the node\n     this.nodes.remove(nodeInfo.getNodeID());\n     \n     // Update cluster metrics\n     Resources.subtractFrom(clusterResource, node.getRMNode().getTotalCapability());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void removeNode(RMNode nodeInfo) {\n    FiCaSchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n    if (node \u003d\u003d null) {\n      return;\n    }\n    // Kill running containers\n    for(RMContainer container : node.getRunningContainers()) {\n      containerCompleted(container, \n          SchedulerUtils.createAbnormalContainerStatus(\n              container.getContainerId(), \n              SchedulerUtils.LOST_CONTAINER),\n              RMContainerEventType.KILL);\n    }\n    \n    //Remove the node\n    this.nodes.remove(nodeInfo.getNodeID());\n    \n    // Update cluster metrics\n    Resources.subtractFrom(clusterResource, node.getRMNode().getTotalCapability());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "c0572656ced07a885f848c1134edd7b1c291d246": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3730. Modified RM to allow restarted NMs to be able to join the cluster without waiting for expiry. Contributed by Jason Lowe.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1293436 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/02/12 1:39 PM",
      "commitName": "c0572656ced07a885f848c1134edd7b1c291d246",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "10/02/12 6:30 AM",
      "commitNameOld": "73a72e0ef97f166a4588506cd255f37eca769def",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 14.3,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,20 @@\n   private synchronized void removeNode(RMNode nodeInfo) {\n     SchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n+    if (node \u003d\u003d null) {\n+      return;\n+    }\n     // Kill running containers\n     for(RMContainer container : node.getRunningContainers()) {\n       containerCompleted(container, \n           SchedulerUtils.createAbnormalContainerStatus(\n               container.getContainerId(), \n               SchedulerUtils.LOST_CONTAINER),\n               RMContainerEventType.KILL);\n     }\n     \n     //Remove the node\n     this.nodes.remove(nodeInfo.getNodeID());\n     \n     // Update cluster metrics\n-    Resources.subtractFrom(clusterResource, nodeInfo.getTotalCapability());\n+    Resources.subtractFrom(clusterResource, node.getRMNode().getTotalCapability());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void removeNode(RMNode nodeInfo) {\n    SchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n    if (node \u003d\u003d null) {\n      return;\n    }\n    // Kill running containers\n    for(RMContainer container : node.getRunningContainers()) {\n      containerCompleted(container, \n          SchedulerUtils.createAbnormalContainerStatus(\n              container.getContainerId(), \n              SchedulerUtils.LOST_CONTAINER),\n              RMContainerEventType.KILL);\n    }\n    \n    //Remove the node\n    this.nodes.remove(nodeInfo.getNodeID());\n    \n    // Update cluster metrics\n    Resources.subtractFrom(clusterResource, node.getRMNode().getTotalCapability());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "817ead65b99f465fc2dfa18072cf23cadf5f05d0": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2933. Change allocate call to return ContainerStatus for completed containers rather than Container.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1169484 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/09/11 10:26 AM",
      "commitName": "817ead65b99f465fc2dfa18072cf23cadf5f05d0",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "08/09/11 7:04 PM",
      "commitNameOld": "035937bee8ef57bc24b08068e7375ac45413a349",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 2.64,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,17 @@\n   private synchronized void removeNode(RMNode nodeInfo) {\n     SchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n     // Kill running containers\n     for(RMContainer container : node.getRunningContainers()) {\n-      containerCompleted(container, RMContainerEventType.KILL);\n+      containerCompleted(container, \n+          SchedulerUtils.createAbnormalContainerStatus(\n+              container.getContainerId(), \n+              SchedulerUtils.LOST_CONTAINER),\n+              RMContainerEventType.KILL);\n     }\n     \n     //Remove the node\n     this.nodes.remove(nodeInfo.getNodeID());\n     \n     // Update cluster metrics\n     Resources.subtractFrom(clusterResource, nodeInfo.getTotalCapability());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void removeNode(RMNode nodeInfo) {\n    SchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n    // Kill running containers\n    for(RMContainer container : node.getRunningContainers()) {\n      containerCompleted(container, \n          SchedulerUtils.createAbnormalContainerStatus(\n              container.getContainerId(), \n              SchedulerUtils.LOST_CONTAINER),\n              RMContainerEventType.KILL);\n    }\n    \n    //Remove the node\n    this.nodes.remove(nodeInfo.getNodeID());\n    \n    // Update cluster metrics\n    Resources.subtractFrom(clusterResource, nodeInfo.getTotalCapability());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void removeNode(RMNode nodeInfo) {\n    SchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n    // Kill running containers\n    for(RMContainer container : node.getRunningContainers()) {\n      containerCompleted(container, RMContainerEventType.KILL);\n    }\n    \n    //Remove the node\n    this.nodes.remove(nodeInfo.getNodeID());\n    \n    // Update cluster metrics\n    Resources.subtractFrom(clusterResource, nodeInfo.getTotalCapability());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,13 @@\n+  private synchronized void removeNode(RMNode nodeInfo) {\n+    SchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n+    // Kill running containers\n+    for(RMContainer container : node.getRunningContainers()) {\n+      containerCompleted(container, RMContainerEventType.KILL);\n+    }\n+    \n+    //Remove the node\n+    this.nodes.remove(nodeInfo.getNodeID());\n+    \n+    // Update cluster metrics\n+    Resources.subtractFrom(clusterResource, nodeInfo.getTotalCapability());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void removeNode(RMNode nodeInfo) {\n    SchedulerNode node \u003d getNode(nodeInfo.getNodeID());\n    // Kill running containers\n    for(RMContainer container : node.getRunningContainers()) {\n      containerCompleted(container, RMContainerEventType.KILL);\n    }\n    \n    //Remove the node\n    this.nodes.remove(nodeInfo.getNodeID());\n    \n    // Update cluster metrics\n    Resources.subtractFrom(clusterResource, nodeInfo.getTotalCapability());\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java"
    }
  }
}