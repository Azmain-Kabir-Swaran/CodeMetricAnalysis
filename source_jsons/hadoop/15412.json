{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AdminHelper.java",
  "functionName": "run",
  "functionId": "run___conf-Configuration__args-List__String__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/AdminHelper.java",
  "functionStartLine": 180,
  "functionEndLine": 208,
  "numCommitsSeen": 5,
  "timeTaken": 1099,
  "changeHistory": [
    "92ea6d74ecd84b86771e285902dd2a80bccbe3ea",
    "6f3a63a41b90157c3e46ea20ca6170b854ea902e"
  ],
  "changeHistoryShort": {
    "92ea6d74ecd84b86771e285902dd2a80bccbe3ea": "Ybodychange",
    "6f3a63a41b90157c3e46ea20ca6170b854ea902e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "92ea6d74ecd84b86771e285902dd2a80bccbe3ea": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11516. Admin command line should print message to stderr in failure case. Contributed by Kai Sasaki.\n",
      "commitDate": "17/03/17 11:26 AM",
      "commitName": "92ea6d74ecd84b86771e285902dd2a80bccbe3ea",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "21/02/17 4:43 AM",
      "commitNameOld": "480405063063f564ae0cdb34e0757ac3990569aa",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 24.24,
      "commitsBetweenForRepo": 161,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n     public int run(Configuration conf, List\u003cString\u003e args) throws IOException {\n       if (args.size() \u003d\u003d 0) {\n         for (AdminHelper.Command command : commands) {\n           System.err.println(command.getLongUsage());\n         }\n-        return 0;\n+        return 1;\n       }\n       if (args.size() !\u003d 1) {\n-        System.out.println(\"You must give exactly one argument to -help.\");\n-        return 0;\n+        System.err.println(\"You must give exactly one argument to -help.\");\n+        return 1;\n       }\n       final String commandName \u003d args.get(0);\n       // prepend a dash to match against the command names\n       final AdminHelper.Command command \u003d AdminHelper\n           .determineCommand(\"-\" + commandName, commands);\n       if (command \u003d\u003d null) {\n         System.err.print(\"Unknown command \u0027\" + commandName + \"\u0027.\\n\");\n         System.err.print(\"Valid help command names are:\\n\");\n         String separator \u003d \"\";\n         for (AdminHelper.Command c : commands) {\n           System.err.print(separator + c.getName().substring(1));\n           separator \u003d \", \";\n         }\n         System.err.print(\"\\n\");\n         return 1;\n       }\n       System.err.print(command.getLongUsage());\n       return 0;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public int run(Configuration conf, List\u003cString\u003e args) throws IOException {\n      if (args.size() \u003d\u003d 0) {\n        for (AdminHelper.Command command : commands) {\n          System.err.println(command.getLongUsage());\n        }\n        return 1;\n      }\n      if (args.size() !\u003d 1) {\n        System.err.println(\"You must give exactly one argument to -help.\");\n        return 1;\n      }\n      final String commandName \u003d args.get(0);\n      // prepend a dash to match against the command names\n      final AdminHelper.Command command \u003d AdminHelper\n          .determineCommand(\"-\" + commandName, commands);\n      if (command \u003d\u003d null) {\n        System.err.print(\"Unknown command \u0027\" + commandName + \"\u0027.\\n\");\n        System.err.print(\"Valid help command names are:\\n\");\n        String separator \u003d \"\";\n        for (AdminHelper.Command c : commands) {\n          System.err.print(separator + c.getName().substring(1));\n          separator \u003d \", \";\n        }\n        System.err.print(\"\\n\");\n        return 1;\n      }\n      System.err.print(command.getLongUsage());\n      return 0;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/AdminHelper.java",
      "extendedDetails": {}
    },
    "6f3a63a41b90157c3e46ea20ca6170b854ea902e": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7600. Refine hdfs admin classes to reuse common code. Contributed by Jing Zhao.\n",
      "commitDate": "12/01/15 5:32 PM",
      "commitName": "6f3a63a41b90157c3e46ea20ca6170b854ea902e",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,29 @@\n+    public int run(Configuration conf, List\u003cString\u003e args) throws IOException {\n+      if (args.size() \u003d\u003d 0) {\n+        for (AdminHelper.Command command : commands) {\n+          System.err.println(command.getLongUsage());\n+        }\n+        return 0;\n+      }\n+      if (args.size() !\u003d 1) {\n+        System.out.println(\"You must give exactly one argument to -help.\");\n+        return 0;\n+      }\n+      final String commandName \u003d args.get(0);\n+      // prepend a dash to match against the command names\n+      final AdminHelper.Command command \u003d AdminHelper\n+          .determineCommand(\"-\" + commandName, commands);\n+      if (command \u003d\u003d null) {\n+        System.err.print(\"Unknown command \u0027\" + commandName + \"\u0027.\\n\");\n+        System.err.print(\"Valid help command names are:\\n\");\n+        String separator \u003d \"\";\n+        for (AdminHelper.Command c : commands) {\n+          System.err.print(separator + c.getName().substring(1));\n+          separator \u003d \", \";\n+        }\n+        System.err.print(\"\\n\");\n+        return 1;\n+      }\n+      System.err.print(command.getLongUsage());\n+      return 0;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public int run(Configuration conf, List\u003cString\u003e args) throws IOException {\n      if (args.size() \u003d\u003d 0) {\n        for (AdminHelper.Command command : commands) {\n          System.err.println(command.getLongUsage());\n        }\n        return 0;\n      }\n      if (args.size() !\u003d 1) {\n        System.out.println(\"You must give exactly one argument to -help.\");\n        return 0;\n      }\n      final String commandName \u003d args.get(0);\n      // prepend a dash to match against the command names\n      final AdminHelper.Command command \u003d AdminHelper\n          .determineCommand(\"-\" + commandName, commands);\n      if (command \u003d\u003d null) {\n        System.err.print(\"Unknown command \u0027\" + commandName + \"\u0027.\\n\");\n        System.err.print(\"Valid help command names are:\\n\");\n        String separator \u003d \"\";\n        for (AdminHelper.Command c : commands) {\n          System.err.print(separator + c.getName().substring(1));\n          separator \u003d \", \";\n        }\n        System.err.print(\"\\n\");\n        return 1;\n      }\n      System.err.print(command.getLongUsage());\n      return 0;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/AdminHelper.java"
    }
  }
}