{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GraphiteSink.java",
  "functionName": "init",
  "functionId": "init___conf-SubsetConfiguration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/GraphiteSink.java",
  "functionStartLine": 54,
  "functionEndLine": 66,
  "numCommitsSeen": 10,
  "timeTaken": 1223,
  "changeHistory": [
    "4d2914210053f28c95094aa59e48f8e84c55a2c7",
    "5b9fcedb4d116d91d70aaad6cbf59093eeee36df",
    "7fcaab2350405dc3bfb1ca941482416711b52cb4",
    "1adec79c7bcdb53128cffc6a3c289fa6e86a53b1",
    "ad5d0d716771955a5663adbffa5c3f38cc53c84e"
  ],
  "changeHistoryShort": {
    "4d2914210053f28c95094aa59e48f8e84c55a2c7": "Ybodychange",
    "5b9fcedb4d116d91d70aaad6cbf59093eeee36df": "Ybodychange",
    "7fcaab2350405dc3bfb1ca941482416711b52cb4": "Ybodychange",
    "1adec79c7bcdb53128cffc6a3c289fa6e86a53b1": "Ybodychange",
    "ad5d0d716771955a5663adbffa5c3f38cc53c84e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4d2914210053f28c95094aa59e48f8e84c55a2c7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11400. GraphiteSink does not reconnect to Graphite after \u0027broken pipe\u0027\n(Kamil Gorlo via raviprak)\n",
      "commitDate": "10/01/15 8:35 AM",
      "commitName": "4d2914210053f28c95094aa59e48f8e84c55a2c7",
      "commitAuthor": "Ravi Prakash",
      "commitDateOld": "11/12/14 4:42 PM",
      "commitNameOld": "5b9fcedb4d116d91d70aaad6cbf59093eeee36df",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 29.66,
      "commitsBetweenForRepo": 146,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,13 @@\n     public void init(SubsetConfiguration conf) {\n         // Get Graphite host configurations.\n-        String serverHost \u003d conf.getString(SERVER_HOST_KEY);\n-        Integer serverPort \u003d Integer.parseInt(conf.getString(SERVER_PORT_KEY));\n+        final String serverHost \u003d conf.getString(SERVER_HOST_KEY);\n+        final int serverPort \u003d Integer.parseInt(conf.getString(SERVER_PORT_KEY));\n \n         // Get Graphite metrics graph prefix.\n         metricsPrefix \u003d conf.getString(METRICS_PREFIX);\n         if (metricsPrefix \u003d\u003d null)\n             metricsPrefix \u003d \"\";\n \n-        try {\n-            // Open an connection to Graphite server.\n-            socket \u003d new Socket(serverHost, serverPort);\n-            writer \u003d new OutputStreamWriter(\n-                socket.getOutputStream(), Charsets.UTF_8);\n-        } catch (Exception e) {\n-            throw new MetricsException(\"Error creating connection, \"\n-                    + serverHost + \":\" + serverPort, e);\n-        }\n+        graphite \u003d new Graphite(serverHost, serverPort);\n+        graphite.connect();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void init(SubsetConfiguration conf) {\n        // Get Graphite host configurations.\n        final String serverHost \u003d conf.getString(SERVER_HOST_KEY);\n        final int serverPort \u003d Integer.parseInt(conf.getString(SERVER_PORT_KEY));\n\n        // Get Graphite metrics graph prefix.\n        metricsPrefix \u003d conf.getString(METRICS_PREFIX);\n        if (metricsPrefix \u003d\u003d null)\n            metricsPrefix \u003d \"\";\n\n        graphite \u003d new Graphite(serverHost, serverPort);\n        graphite.connect();\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/GraphiteSink.java",
      "extendedDetails": {}
    },
    "5b9fcedb4d116d91d70aaad6cbf59093eeee36df": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11389. Clean up byte to string encoding issues in hadoop-common. Contributed by Haohui Mai.\n",
      "commitDate": "11/12/14 4:42 PM",
      "commitName": "5b9fcedb4d116d91d70aaad6cbf59093eeee36df",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "15/10/14 3:49 PM",
      "commitNameOld": "466f08792f11c2f95bf293ac9b6facd7018a5bb8",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 57.08,
      "commitsBetweenForRepo": 481,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n     public void init(SubsetConfiguration conf) {\n         // Get Graphite host configurations.\n         String serverHost \u003d conf.getString(SERVER_HOST_KEY);\n         Integer serverPort \u003d Integer.parseInt(conf.getString(SERVER_PORT_KEY));\n \n         // Get Graphite metrics graph prefix.\n         metricsPrefix \u003d conf.getString(METRICS_PREFIX);\n         if (metricsPrefix \u003d\u003d null)\n             metricsPrefix \u003d \"\";\n \n         try {\n             // Open an connection to Graphite server.\n             socket \u003d new Socket(serverHost, serverPort);\n-            writer \u003d new OutputStreamWriter(socket.getOutputStream());\n+            writer \u003d new OutputStreamWriter(\n+                socket.getOutputStream(), Charsets.UTF_8);\n         } catch (Exception e) {\n             throw new MetricsException(\"Error creating connection, \"\n                     + serverHost + \":\" + serverPort, e);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void init(SubsetConfiguration conf) {\n        // Get Graphite host configurations.\n        String serverHost \u003d conf.getString(SERVER_HOST_KEY);\n        Integer serverPort \u003d Integer.parseInt(conf.getString(SERVER_PORT_KEY));\n\n        // Get Graphite metrics graph prefix.\n        metricsPrefix \u003d conf.getString(METRICS_PREFIX);\n        if (metricsPrefix \u003d\u003d null)\n            metricsPrefix \u003d \"\";\n\n        try {\n            // Open an connection to Graphite server.\n            socket \u003d new Socket(serverHost, serverPort);\n            writer \u003d new OutputStreamWriter(\n                socket.getOutputStream(), Charsets.UTF_8);\n        } catch (Exception e) {\n            throw new MetricsException(\"Error creating connection, \"\n                    + serverHost + \":\" + serverPort, e);\n        }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/GraphiteSink.java",
      "extendedDetails": {}
    },
    "7fcaab2350405dc3bfb1ca941482416711b52cb4": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10715. Remove public GraphiteSink#setWriter()\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605646 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/06/14 6:50 PM",
      "commitName": "7fcaab2350405dc3bfb1ca941482416711b52cb4",
      "commitAuthor": "Ravi Prakash",
      "commitDateOld": "18/06/14 2:27 AM",
      "commitNameOld": "1adec79c7bcdb53128cffc6a3c289fa6e86a53b1",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 7.68,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void init(SubsetConfiguration conf) {\n         // Get Graphite host configurations.\n         String serverHost \u003d conf.getString(SERVER_HOST_KEY);\n         Integer serverPort \u003d Integer.parseInt(conf.getString(SERVER_PORT_KEY));\n \n         // Get Graphite metrics graph prefix.\n         metricsPrefix \u003d conf.getString(METRICS_PREFIX);\n         if (metricsPrefix \u003d\u003d null)\n             metricsPrefix \u003d \"\";\n \n         try {\n             // Open an connection to Graphite server.\n             socket \u003d new Socket(serverHost, serverPort);\n-            setWriter(new OutputStreamWriter(socket.getOutputStream()));\n+            writer \u003d new OutputStreamWriter(socket.getOutputStream());\n         } catch (Exception e) {\n             throw new MetricsException(\"Error creating connection, \"\n                     + serverHost + \":\" + serverPort, e);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void init(SubsetConfiguration conf) {\n        // Get Graphite host configurations.\n        String serverHost \u003d conf.getString(SERVER_HOST_KEY);\n        Integer serverPort \u003d Integer.parseInt(conf.getString(SERVER_PORT_KEY));\n\n        // Get Graphite metrics graph prefix.\n        metricsPrefix \u003d conf.getString(METRICS_PREFIX);\n        if (metricsPrefix \u003d\u003d null)\n            metricsPrefix \u003d \"\";\n\n        try {\n            // Open an connection to Graphite server.\n            socket \u003d new Socket(serverHost, serverPort);\n            writer \u003d new OutputStreamWriter(socket.getOutputStream());\n        } catch (Exception e) {\n            throw new MetricsException(\"Error creating connection, \"\n                    + serverHost + \":\" + serverPort, e);\n        }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/GraphiteSink.java",
      "extendedDetails": {}
    },
    "1adec79c7bcdb53128cffc6a3c289fa6e86a53b1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10660. GraphiteSink should implement Closeable (Chen He and Ted Yu via raviprak)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603379 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/14 2:27 AM",
      "commitName": "1adec79c7bcdb53128cffc6a3c289fa6e86a53b1",
      "commitAuthor": "Ravi Prakash",
      "commitDateOld": "02/06/14 10:42 PM",
      "commitNameOld": "ad5d0d716771955a5663adbffa5c3f38cc53c84e",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 15.16,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void init(SubsetConfiguration conf) {\n         // Get Graphite host configurations.\n         String serverHost \u003d conf.getString(SERVER_HOST_KEY);\n         Integer serverPort \u003d Integer.parseInt(conf.getString(SERVER_PORT_KEY));\n \n         // Get Graphite metrics graph prefix.\n         metricsPrefix \u003d conf.getString(METRICS_PREFIX);\n         if (metricsPrefix \u003d\u003d null)\n             metricsPrefix \u003d \"\";\n \n         try {\n             // Open an connection to Graphite server.\n-            Socket socket \u003d new Socket(serverHost, serverPort);\n+            socket \u003d new Socket(serverHost, serverPort);\n             setWriter(new OutputStreamWriter(socket.getOutputStream()));\n         } catch (Exception e) {\n             throw new MetricsException(\"Error creating connection, \"\n                     + serverHost + \":\" + serverPort, e);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void init(SubsetConfiguration conf) {\n        // Get Graphite host configurations.\n        String serverHost \u003d conf.getString(SERVER_HOST_KEY);\n        Integer serverPort \u003d Integer.parseInt(conf.getString(SERVER_PORT_KEY));\n\n        // Get Graphite metrics graph prefix.\n        metricsPrefix \u003d conf.getString(METRICS_PREFIX);\n        if (metricsPrefix \u003d\u003d null)\n            metricsPrefix \u003d \"\";\n\n        try {\n            // Open an connection to Graphite server.\n            socket \u003d new Socket(serverHost, serverPort);\n            setWriter(new OutputStreamWriter(socket.getOutputStream()));\n        } catch (Exception e) {\n            throw new MetricsException(\"Error creating connection, \"\n                    + serverHost + \":\" + serverPort, e);\n        }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/GraphiteSink.java",
      "extendedDetails": {}
    },
    "ad5d0d716771955a5663adbffa5c3f38cc53c84e": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP 9704. Write metrics sink plugin for Hadoop/Graphite (Chu Tong, Alex Newman and Babak Behzad via raviprak)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1599413 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/06/14 10:42 PM",
      "commitName": "ad5d0d716771955a5663adbffa5c3f38cc53c84e",
      "commitAuthor": "Ravi Prakash",
      "diff": "@@ -0,0 +1,19 @@\n+    public void init(SubsetConfiguration conf) {\n+        // Get Graphite host configurations.\n+        String serverHost \u003d conf.getString(SERVER_HOST_KEY);\n+        Integer serverPort \u003d Integer.parseInt(conf.getString(SERVER_PORT_KEY));\n+\n+        // Get Graphite metrics graph prefix.\n+        metricsPrefix \u003d conf.getString(METRICS_PREFIX);\n+        if (metricsPrefix \u003d\u003d null)\n+            metricsPrefix \u003d \"\";\n+\n+        try {\n+            // Open an connection to Graphite server.\n+            Socket socket \u003d new Socket(serverHost, serverPort);\n+            setWriter(new OutputStreamWriter(socket.getOutputStream()));\n+        } catch (Exception e) {\n+            throw new MetricsException(\"Error creating connection, \"\n+                    + serverHost + \":\" + serverPort, e);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void init(SubsetConfiguration conf) {\n        // Get Graphite host configurations.\n        String serverHost \u003d conf.getString(SERVER_HOST_KEY);\n        Integer serverPort \u003d Integer.parseInt(conf.getString(SERVER_PORT_KEY));\n\n        // Get Graphite metrics graph prefix.\n        metricsPrefix \u003d conf.getString(METRICS_PREFIX);\n        if (metricsPrefix \u003d\u003d null)\n            metricsPrefix \u003d \"\";\n\n        try {\n            // Open an connection to Graphite server.\n            Socket socket \u003d new Socket(serverHost, serverPort);\n            setWriter(new OutputStreamWriter(socket.getOutputStream()));\n        } catch (Exception e) {\n            throw new MetricsException(\"Error creating connection, \"\n                    + serverHost + \":\" + serverPort, e);\n        }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/GraphiteSink.java"
    }
  }
}