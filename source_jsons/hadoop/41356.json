{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSLeafQueue.java",
  "functionName": "isNonRunnableApp",
  "functionId": "isNonRunnableApp___attempt-FSAppAttempt",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
  "functionStartLine": 162,
  "functionEndLine": 169,
  "numCommitsSeen": 69,
  "timeTaken": 1823,
  "changeHistory": [
    "10468529a9b858bd945e7ecb063c9c1438efa474",
    "24ee9e3431d27811530ffa01d8d241133fd643fe"
  ],
  "changeHistoryShort": {
    "10468529a9b858bd945e7ecb063c9c1438efa474": "Ymodifierchange",
    "24ee9e3431d27811530ffa01d8d241133fd643fe": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10468529a9b858bd945e7ecb063c9c1438efa474": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
      "commitDate": "23/11/16 9:48 PM",
      "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "09/11/16 11:44 PM",
      "commitNameOld": "86ac1ad9fd65c7dd12278372b369de38dc4616db",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 13.92,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n-  public boolean isNonRunnableApp(FSAppAttempt attempt) {\n+  boolean isNonRunnableApp(FSAppAttempt attempt) {\n     readLock.lock();\n     try {\n       return nonRunnableApps.contains(attempt);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean isNonRunnableApp(FSAppAttempt attempt) {\n    readLock.lock();\n    try {\n      return nonRunnableApps.contains(attempt);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[]"
      }
    },
    "24ee9e3431d27811530ffa01d8d241133fd643fe": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2975. FSLeafQueue app lists are accessed without required locks. (kasha)\n",
      "commitDate": "20/12/14 12:17 PM",
      "commitName": "24ee9e3431d27811530ffa01d8d241133fd643fe",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,8 @@\n+  public boolean isNonRunnableApp(FSAppAttempt attempt) {\n+    readLock.lock();\n+    try {\n+      return nonRunnableApps.contains(attempt);\n+    } finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isNonRunnableApp(FSAppAttempt attempt) {\n    readLock.lock();\n    try {\n      return nonRunnableApps.contains(attempt);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java"
    }
  }
}