{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirectory.java",
  "functionName": "resolvePath",
  "functionId": "resolvePath___pc-FSPermissionChecker__src-String__dirOp-DirOp",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
  "functionStartLine": 701,
  "functionEndLine": 736,
  "numCommitsSeen": 1635,
  "timeTaken": 15602,
  "changeHistory": [
    "f5a72424c0009c454aab6759c30f74b397a7e935",
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
    "ec252ce0fc0998ce13f31af3440c08a236328e5a",
    "3ca4d6ddfd199c95677721ff3bcb95d1da45bd88",
    "22fc46d7659972ff016ccf1c6f781f0c160be26f",
    "869393643de23dcb010cc33091c8eb398de0fd6c",
    "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
    "c95b878abf313507666ea018f9e6033c4c166e10"
  ],
  "changeHistoryShort": {
    "f5a72424c0009c454aab6759c30f74b397a7e935": "Ybodychange",
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "ec252ce0fc0998ce13f31af3440c08a236328e5a": "Ymultichange(Ymodifierchange,Ybodychange)",
    "3ca4d6ddfd199c95677721ff3bcb95d1da45bd88": "Ymultichange(Ymodifierchange,Ybodychange)",
    "22fc46d7659972ff016ccf1c6f781f0c160be26f": "Ymultichange(Ymodifierchange,Ybodychange)",
    "869393643de23dcb010cc33091c8eb398de0fd6c": "Ymultichange(Yparameterchange,Yreturntypechange,Yexceptionschange,Ybodychange)",
    "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2": "Ymultichange(Yparameterchange,Ybodychange)",
    "c95b878abf313507666ea018f9e6033c4c166e10": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)"
  },
  "changeHistoryDetails": {
    "f5a72424c0009c454aab6759c30f74b397a7e935": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12907. Allow read-only access to reserved raw for non-superusers. Contributed by Rushabh S Shah.\n",
      "commitDate": "14/12/17 12:58 PM",
      "commitName": "f5a72424c0009c454aab6759c30f74b397a7e935",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "31/10/17 9:44 AM",
      "commitNameOld": "d015e0bbd5416943cb4875274e67b7077c00e54b",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 44.18,
      "commitsBetweenForRepo": 349,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,36 @@\n   public INodesInPath resolvePath(FSPermissionChecker pc, String src,\n       DirOp dirOp) throws UnresolvedLinkException, FileNotFoundException,\n       AccessControlException, ParentNotDirectoryException {\n     boolean isCreate \u003d (dirOp \u003d\u003d DirOp.CREATE || dirOp \u003d\u003d DirOp.CREATE_LINK);\n     // prevent creation of new invalid paths\n     if (isCreate \u0026\u0026 !DFSUtil.isValidName(src)) {\n       throw new InvalidPathException(\"Invalid file name: \" + src);\n     }\n \n     byte[][] components \u003d INode.getPathComponents(src);\n     boolean isRaw \u003d isReservedRawName(components);\n     if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isRaw) {\n-      pc.checkSuperuserPrivilege();\n+      switch(dirOp) {\n+        case READ_LINK:\n+        case READ:\n+          break;\n+        default:\n+          pc.checkSuperuserPrivilege();\n+          break;\n+      }\n     }\n     components \u003d resolveComponents(components, this);\n     INodesInPath iip \u003d INodesInPath.resolve(rootDir, components, isRaw);\n     // verify all ancestors are dirs and traversable.  note that only\n     // methods that create new namespace items have the signature to throw\n     // PNDE\n     try {\n       checkTraverse(pc, iip, dirOp);\n     } catch (ParentNotDirectoryException pnde) {\n       if (!isCreate) {\n         throw new AccessControlException(pnde.getMessage());\n       }\n       throw pnde;\n     }\n     return iip;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public INodesInPath resolvePath(FSPermissionChecker pc, String src,\n      DirOp dirOp) throws UnresolvedLinkException, FileNotFoundException,\n      AccessControlException, ParentNotDirectoryException {\n    boolean isCreate \u003d (dirOp \u003d\u003d DirOp.CREATE || dirOp \u003d\u003d DirOp.CREATE_LINK);\n    // prevent creation of new invalid paths\n    if (isCreate \u0026\u0026 !DFSUtil.isValidName(src)) {\n      throw new InvalidPathException(\"Invalid file name: \" + src);\n    }\n\n    byte[][] components \u003d INode.getPathComponents(src);\n    boolean isRaw \u003d isReservedRawName(components);\n    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isRaw) {\n      switch(dirOp) {\n        case READ_LINK:\n        case READ:\n          break;\n        default:\n          pc.checkSuperuserPrivilege();\n          break;\n      }\n    }\n    components \u003d resolveComponents(components, this);\n    INodesInPath iip \u003d INodesInPath.resolve(rootDir, components, isRaw);\n    // verify all ancestors are dirs and traversable.  note that only\n    // methods that create new namespace items have the signature to throw\n    // PNDE\n    try {\n      checkTraverse(pc, iip, dirOp);\n    } catch (ParentNotDirectoryException pnde) {\n      if (!isCreate) {\n        throw new AccessControlException(pnde.getMessage());\n      }\n      throw pnde;\n    }\n    return iip;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
      "commitDate": "24/10/16 3:14 PM",
      "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
          "commitDate": "24/10/16 3:14 PM",
          "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "07/10/16 3:20 PM",
          "commitNameOld": "e57fa81d9559a93d77fd724f7792326c31a490be",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 17.0,
          "commitsBetweenForRepo": 108,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,29 @@\n   public INodesInPath resolvePath(FSPermissionChecker pc, String src,\n-      boolean resolveLink) throws UnresolvedLinkException,\n-  FileNotFoundException, AccessControlException {\n+      DirOp dirOp) throws UnresolvedLinkException, FileNotFoundException,\n+      AccessControlException, ParentNotDirectoryException {\n+    boolean isCreate \u003d (dirOp \u003d\u003d DirOp.CREATE || dirOp \u003d\u003d DirOp.CREATE_LINK);\n+    // prevent creation of new invalid paths\n+    if (isCreate \u0026\u0026 !DFSUtil.isValidName(src)) {\n+      throw new InvalidPathException(\"Invalid file name: \" + src);\n+    }\n+\n     byte[][] components \u003d INode.getPathComponents(src);\n     boolean isRaw \u003d isReservedRawName(components);\n     if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isRaw) {\n       pc.checkSuperuserPrivilege();\n     }\n     components \u003d resolveComponents(components, this);\n-    return INodesInPath.resolve(rootDir, components, isRaw, resolveLink);\n+    INodesInPath iip \u003d INodesInPath.resolve(rootDir, components, isRaw);\n+    // verify all ancestors are dirs and traversable.  note that only\n+    // methods that create new namespace items have the signature to throw\n+    // PNDE\n+    try {\n+      checkTraverse(pc, iip, dirOp);\n+    } catch (ParentNotDirectoryException pnde) {\n+      if (!isCreate) {\n+        throw new AccessControlException(pnde.getMessage());\n+      }\n+      throw pnde;\n+    }\n+    return iip;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public INodesInPath resolvePath(FSPermissionChecker pc, String src,\n      DirOp dirOp) throws UnresolvedLinkException, FileNotFoundException,\n      AccessControlException, ParentNotDirectoryException {\n    boolean isCreate \u003d (dirOp \u003d\u003d DirOp.CREATE || dirOp \u003d\u003d DirOp.CREATE_LINK);\n    // prevent creation of new invalid paths\n    if (isCreate \u0026\u0026 !DFSUtil.isValidName(src)) {\n      throw new InvalidPathException(\"Invalid file name: \" + src);\n    }\n\n    byte[][] components \u003d INode.getPathComponents(src);\n    boolean isRaw \u003d isReservedRawName(components);\n    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isRaw) {\n      pc.checkSuperuserPrivilege();\n    }\n    components \u003d resolveComponents(components, this);\n    INodesInPath iip \u003d INodesInPath.resolve(rootDir, components, isRaw);\n    // verify all ancestors are dirs and traversable.  note that only\n    // methods that create new namespace items have the signature to throw\n    // PNDE\n    try {\n      checkTraverse(pc, iip, dirOp);\n    } catch (ParentNotDirectoryException pnde) {\n      if (!isCreate) {\n        throw new AccessControlException(pnde.getMessage());\n      }\n      throw pnde;\n    }\n    return iip;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[pc-FSPermissionChecker, src-String, resolveLink-boolean]",
            "newValue": "[pc-FSPermissionChecker, src-String, dirOp-DirOp]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
          "commitDate": "24/10/16 3:14 PM",
          "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "07/10/16 3:20 PM",
          "commitNameOld": "e57fa81d9559a93d77fd724f7792326c31a490be",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 17.0,
          "commitsBetweenForRepo": 108,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,29 @@\n   public INodesInPath resolvePath(FSPermissionChecker pc, String src,\n-      boolean resolveLink) throws UnresolvedLinkException,\n-  FileNotFoundException, AccessControlException {\n+      DirOp dirOp) throws UnresolvedLinkException, FileNotFoundException,\n+      AccessControlException, ParentNotDirectoryException {\n+    boolean isCreate \u003d (dirOp \u003d\u003d DirOp.CREATE || dirOp \u003d\u003d DirOp.CREATE_LINK);\n+    // prevent creation of new invalid paths\n+    if (isCreate \u0026\u0026 !DFSUtil.isValidName(src)) {\n+      throw new InvalidPathException(\"Invalid file name: \" + src);\n+    }\n+\n     byte[][] components \u003d INode.getPathComponents(src);\n     boolean isRaw \u003d isReservedRawName(components);\n     if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isRaw) {\n       pc.checkSuperuserPrivilege();\n     }\n     components \u003d resolveComponents(components, this);\n-    return INodesInPath.resolve(rootDir, components, isRaw, resolveLink);\n+    INodesInPath iip \u003d INodesInPath.resolve(rootDir, components, isRaw);\n+    // verify all ancestors are dirs and traversable.  note that only\n+    // methods that create new namespace items have the signature to throw\n+    // PNDE\n+    try {\n+      checkTraverse(pc, iip, dirOp);\n+    } catch (ParentNotDirectoryException pnde) {\n+      if (!isCreate) {\n+        throw new AccessControlException(pnde.getMessage());\n+      }\n+      throw pnde;\n+    }\n+    return iip;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public INodesInPath resolvePath(FSPermissionChecker pc, String src,\n      DirOp dirOp) throws UnresolvedLinkException, FileNotFoundException,\n      AccessControlException, ParentNotDirectoryException {\n    boolean isCreate \u003d (dirOp \u003d\u003d DirOp.CREATE || dirOp \u003d\u003d DirOp.CREATE_LINK);\n    // prevent creation of new invalid paths\n    if (isCreate \u0026\u0026 !DFSUtil.isValidName(src)) {\n      throw new InvalidPathException(\"Invalid file name: \" + src);\n    }\n\n    byte[][] components \u003d INode.getPathComponents(src);\n    boolean isRaw \u003d isReservedRawName(components);\n    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isRaw) {\n      pc.checkSuperuserPrivilege();\n    }\n    components \u003d resolveComponents(components, this);\n    INodesInPath iip \u003d INodesInPath.resolve(rootDir, components, isRaw);\n    // verify all ancestors are dirs and traversable.  note that only\n    // methods that create new namespace items have the signature to throw\n    // PNDE\n    try {\n      checkTraverse(pc, iip, dirOp);\n    } catch (ParentNotDirectoryException pnde) {\n      if (!isCreate) {\n        throw new AccessControlException(pnde.getMessage());\n      }\n      throw pnde;\n    }\n    return iip;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[UnresolvedLinkException, FileNotFoundException, AccessControlException]",
            "newValue": "[UnresolvedLinkException, FileNotFoundException, AccessControlException, ParentNotDirectoryException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
          "commitDate": "24/10/16 3:14 PM",
          "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "07/10/16 3:20 PM",
          "commitNameOld": "e57fa81d9559a93d77fd724f7792326c31a490be",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 17.0,
          "commitsBetweenForRepo": 108,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,29 @@\n   public INodesInPath resolvePath(FSPermissionChecker pc, String src,\n-      boolean resolveLink) throws UnresolvedLinkException,\n-  FileNotFoundException, AccessControlException {\n+      DirOp dirOp) throws UnresolvedLinkException, FileNotFoundException,\n+      AccessControlException, ParentNotDirectoryException {\n+    boolean isCreate \u003d (dirOp \u003d\u003d DirOp.CREATE || dirOp \u003d\u003d DirOp.CREATE_LINK);\n+    // prevent creation of new invalid paths\n+    if (isCreate \u0026\u0026 !DFSUtil.isValidName(src)) {\n+      throw new InvalidPathException(\"Invalid file name: \" + src);\n+    }\n+\n     byte[][] components \u003d INode.getPathComponents(src);\n     boolean isRaw \u003d isReservedRawName(components);\n     if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isRaw) {\n       pc.checkSuperuserPrivilege();\n     }\n     components \u003d resolveComponents(components, this);\n-    return INodesInPath.resolve(rootDir, components, isRaw, resolveLink);\n+    INodesInPath iip \u003d INodesInPath.resolve(rootDir, components, isRaw);\n+    // verify all ancestors are dirs and traversable.  note that only\n+    // methods that create new namespace items have the signature to throw\n+    // PNDE\n+    try {\n+      checkTraverse(pc, iip, dirOp);\n+    } catch (ParentNotDirectoryException pnde) {\n+      if (!isCreate) {\n+        throw new AccessControlException(pnde.getMessage());\n+      }\n+      throw pnde;\n+    }\n+    return iip;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public INodesInPath resolvePath(FSPermissionChecker pc, String src,\n      DirOp dirOp) throws UnresolvedLinkException, FileNotFoundException,\n      AccessControlException, ParentNotDirectoryException {\n    boolean isCreate \u003d (dirOp \u003d\u003d DirOp.CREATE || dirOp \u003d\u003d DirOp.CREATE_LINK);\n    // prevent creation of new invalid paths\n    if (isCreate \u0026\u0026 !DFSUtil.isValidName(src)) {\n      throw new InvalidPathException(\"Invalid file name: \" + src);\n    }\n\n    byte[][] components \u003d INode.getPathComponents(src);\n    boolean isRaw \u003d isReservedRawName(components);\n    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isRaw) {\n      pc.checkSuperuserPrivilege();\n    }\n    components \u003d resolveComponents(components, this);\n    INodesInPath iip \u003d INodesInPath.resolve(rootDir, components, isRaw);\n    // verify all ancestors are dirs and traversable.  note that only\n    // methods that create new namespace items have the signature to throw\n    // PNDE\n    try {\n      checkTraverse(pc, iip, dirOp);\n    } catch (ParentNotDirectoryException pnde) {\n      if (!isCreate) {\n        throw new AccessControlException(pnde.getMessage());\n      }\n      throw pnde;\n    }\n    return iip;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        }
      ]
    },
    "ec252ce0fc0998ce13f31af3440c08a236328e5a": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-10762. Pass IIP for file status related methods\n",
      "commitDate": "24/08/16 6:46 AM",
      "commitName": "ec252ce0fc0998ce13f31af3440c08a236328e5a",
      "commitAuthor": "Daryn Sharp",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-10762. Pass IIP for file status related methods\n",
          "commitDate": "24/08/16 6:46 AM",
          "commitName": "ec252ce0fc0998ce13f31af3440c08a236328e5a",
          "commitAuthor": "Daryn Sharp",
          "commitDateOld": "22/08/16 2:57 PM",
          "commitNameOld": "3ca4d6ddfd199c95677721ff3bcb95d1da45bd88",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 1.66,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n-  INodesInPath resolvePath(FSPermissionChecker pc, String src,\n+  public INodesInPath resolvePath(FSPermissionChecker pc, String src,\n       boolean resolveLink) throws UnresolvedLinkException,\n   FileNotFoundException, AccessControlException {\n     byte[][] components \u003d INode.getPathComponents(src);\n-    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isReservedRawName(components)) {\n+    boolean isRaw \u003d isReservedRawName(components);\n+    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isRaw) {\n       pc.checkSuperuserPrivilege();\n     }\n     components \u003d resolveComponents(components, this);\n-    return INodesInPath.resolve(rootDir, components, resolveLink);\n+    return INodesInPath.resolve(rootDir, components, isRaw, resolveLink);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public INodesInPath resolvePath(FSPermissionChecker pc, String src,\n      boolean resolveLink) throws UnresolvedLinkException,\n  FileNotFoundException, AccessControlException {\n    byte[][] components \u003d INode.getPathComponents(src);\n    boolean isRaw \u003d isReservedRawName(components);\n    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isRaw) {\n      pc.checkSuperuserPrivilege();\n    }\n    components \u003d resolveComponents(components, this);\n    return INodesInPath.resolve(rootDir, components, isRaw, resolveLink);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10762. Pass IIP for file status related methods\n",
          "commitDate": "24/08/16 6:46 AM",
          "commitName": "ec252ce0fc0998ce13f31af3440c08a236328e5a",
          "commitAuthor": "Daryn Sharp",
          "commitDateOld": "22/08/16 2:57 PM",
          "commitNameOld": "3ca4d6ddfd199c95677721ff3bcb95d1da45bd88",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 1.66,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n-  INodesInPath resolvePath(FSPermissionChecker pc, String src,\n+  public INodesInPath resolvePath(FSPermissionChecker pc, String src,\n       boolean resolveLink) throws UnresolvedLinkException,\n   FileNotFoundException, AccessControlException {\n     byte[][] components \u003d INode.getPathComponents(src);\n-    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isReservedRawName(components)) {\n+    boolean isRaw \u003d isReservedRawName(components);\n+    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isRaw) {\n       pc.checkSuperuserPrivilege();\n     }\n     components \u003d resolveComponents(components, this);\n-    return INodesInPath.resolve(rootDir, components, resolveLink);\n+    return INodesInPath.resolve(rootDir, components, isRaw, resolveLink);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public INodesInPath resolvePath(FSPermissionChecker pc, String src,\n      boolean resolveLink) throws UnresolvedLinkException,\n  FileNotFoundException, AccessControlException {\n    byte[][] components \u003d INode.getPathComponents(src);\n    boolean isRaw \u003d isReservedRawName(components);\n    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isRaw) {\n      pc.checkSuperuserPrivilege();\n    }\n    components \u003d resolveComponents(components, this);\n    return INodesInPath.resolve(rootDir, components, isRaw, resolveLink);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        }
      ]
    },
    "3ca4d6ddfd199c95677721ff3bcb95d1da45bd88": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "Revert \"HDFS-10762. Pass IIP for file status related methods. Contributed by Daryn Sharp.\"\n\nThis reverts commit 22fc46d7659972ff016ccf1c6f781f0c160be26f.\n",
      "commitDate": "22/08/16 2:57 PM",
      "commitName": "3ca4d6ddfd199c95677721ff3bcb95d1da45bd88",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "Revert \"HDFS-10762. Pass IIP for file status related methods. Contributed by Daryn Sharp.\"\n\nThis reverts commit 22fc46d7659972ff016ccf1c6f781f0c160be26f.\n",
          "commitDate": "22/08/16 2:57 PM",
          "commitName": "3ca4d6ddfd199c95677721ff3bcb95d1da45bd88",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "22/08/16 1:37 PM",
          "commitNameOld": "22fc46d7659972ff016ccf1c6f781f0c160be26f",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,10 @@\n-  public INodesInPath resolvePath(FSPermissionChecker pc, String src,\n+  INodesInPath resolvePath(FSPermissionChecker pc, String src,\n       boolean resolveLink) throws UnresolvedLinkException,\n   FileNotFoundException, AccessControlException {\n     byte[][] components \u003d INode.getPathComponents(src);\n-    boolean isRaw \u003d isReservedRawName(components);\n-    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isRaw) {\n+    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isReservedRawName(components)) {\n       pc.checkSuperuserPrivilege();\n     }\n     components \u003d resolveComponents(components, this);\n-    return INodesInPath.resolve(rootDir, components, isRaw, resolveLink);\n+    return INodesInPath.resolve(rootDir, components, resolveLink);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  INodesInPath resolvePath(FSPermissionChecker pc, String src,\n      boolean resolveLink) throws UnresolvedLinkException,\n  FileNotFoundException, AccessControlException {\n    byte[][] components \u003d INode.getPathComponents(src);\n    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isReservedRawName(components)) {\n      pc.checkSuperuserPrivilege();\n    }\n    components \u003d resolveComponents(components, this);\n    return INodesInPath.resolve(rootDir, components, resolveLink);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert \"HDFS-10762. Pass IIP for file status related methods. Contributed by Daryn Sharp.\"\n\nThis reverts commit 22fc46d7659972ff016ccf1c6f781f0c160be26f.\n",
          "commitDate": "22/08/16 2:57 PM",
          "commitName": "3ca4d6ddfd199c95677721ff3bcb95d1da45bd88",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "22/08/16 1:37 PM",
          "commitNameOld": "22fc46d7659972ff016ccf1c6f781f0c160be26f",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,10 @@\n-  public INodesInPath resolvePath(FSPermissionChecker pc, String src,\n+  INodesInPath resolvePath(FSPermissionChecker pc, String src,\n       boolean resolveLink) throws UnresolvedLinkException,\n   FileNotFoundException, AccessControlException {\n     byte[][] components \u003d INode.getPathComponents(src);\n-    boolean isRaw \u003d isReservedRawName(components);\n-    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isRaw) {\n+    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isReservedRawName(components)) {\n       pc.checkSuperuserPrivilege();\n     }\n     components \u003d resolveComponents(components, this);\n-    return INodesInPath.resolve(rootDir, components, isRaw, resolveLink);\n+    return INodesInPath.resolve(rootDir, components, resolveLink);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  INodesInPath resolvePath(FSPermissionChecker pc, String src,\n      boolean resolveLink) throws UnresolvedLinkException,\n  FileNotFoundException, AccessControlException {\n    byte[][] components \u003d INode.getPathComponents(src);\n    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isReservedRawName(components)) {\n      pc.checkSuperuserPrivilege();\n    }\n    components \u003d resolveComponents(components, this);\n    return INodesInPath.resolve(rootDir, components, resolveLink);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        }
      ]
    },
    "22fc46d7659972ff016ccf1c6f781f0c160be26f": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-10762. Pass IIP for file status related methods. Contributed by Daryn Sharp.\n",
      "commitDate": "22/08/16 1:37 PM",
      "commitName": "22fc46d7659972ff016ccf1c6f781f0c160be26f",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-10762. Pass IIP for file status related methods. Contributed by Daryn Sharp.\n",
          "commitDate": "22/08/16 1:37 PM",
          "commitName": "22fc46d7659972ff016ccf1c6f781f0c160be26f",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "17/08/16 1:53 PM",
          "commitNameOld": "869393643de23dcb010cc33091c8eb398de0fd6c",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 4.99,
          "commitsBetweenForRepo": 29,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n-  INodesInPath resolvePath(FSPermissionChecker pc, String src,\n+  public INodesInPath resolvePath(FSPermissionChecker pc, String src,\n       boolean resolveLink) throws UnresolvedLinkException,\n   FileNotFoundException, AccessControlException {\n     byte[][] components \u003d INode.getPathComponents(src);\n-    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isReservedRawName(components)) {\n+    boolean isRaw \u003d isReservedRawName(components);\n+    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isRaw) {\n       pc.checkSuperuserPrivilege();\n     }\n     components \u003d resolveComponents(components, this);\n-    return INodesInPath.resolve(rootDir, components, resolveLink);\n+    return INodesInPath.resolve(rootDir, components, isRaw, resolveLink);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public INodesInPath resolvePath(FSPermissionChecker pc, String src,\n      boolean resolveLink) throws UnresolvedLinkException,\n  FileNotFoundException, AccessControlException {\n    byte[][] components \u003d INode.getPathComponents(src);\n    boolean isRaw \u003d isReservedRawName(components);\n    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isRaw) {\n      pc.checkSuperuserPrivilege();\n    }\n    components \u003d resolveComponents(components, this);\n    return INodesInPath.resolve(rootDir, components, isRaw, resolveLink);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10762. Pass IIP for file status related methods. Contributed by Daryn Sharp.\n",
          "commitDate": "22/08/16 1:37 PM",
          "commitName": "22fc46d7659972ff016ccf1c6f781f0c160be26f",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "17/08/16 1:53 PM",
          "commitNameOld": "869393643de23dcb010cc33091c8eb398de0fd6c",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 4.99,
          "commitsBetweenForRepo": 29,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n-  INodesInPath resolvePath(FSPermissionChecker pc, String src,\n+  public INodesInPath resolvePath(FSPermissionChecker pc, String src,\n       boolean resolveLink) throws UnresolvedLinkException,\n   FileNotFoundException, AccessControlException {\n     byte[][] components \u003d INode.getPathComponents(src);\n-    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isReservedRawName(components)) {\n+    boolean isRaw \u003d isReservedRawName(components);\n+    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isRaw) {\n       pc.checkSuperuserPrivilege();\n     }\n     components \u003d resolveComponents(components, this);\n-    return INodesInPath.resolve(rootDir, components, resolveLink);\n+    return INodesInPath.resolve(rootDir, components, isRaw, resolveLink);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public INodesInPath resolvePath(FSPermissionChecker pc, String src,\n      boolean resolveLink) throws UnresolvedLinkException,\n  FileNotFoundException, AccessControlException {\n    byte[][] components \u003d INode.getPathComponents(src);\n    boolean isRaw \u003d isReservedRawName(components);\n    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isRaw) {\n      pc.checkSuperuserPrivilege();\n    }\n    components \u003d resolveComponents(components, this);\n    return INodesInPath.resolve(rootDir, components, isRaw, resolveLink);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        }
      ]
    },
    "869393643de23dcb010cc33091c8eb398de0fd6c": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-10745. Directly resolve paths into INodesInPath. Contributed by Daryn Sharp.\n",
      "commitDate": "17/08/16 1:53 PM",
      "commitName": "869393643de23dcb010cc33091c8eb398de0fd6c",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10745. Directly resolve paths into INodesInPath. Contributed by Daryn Sharp.\n",
          "commitDate": "17/08/16 1:53 PM",
          "commitName": "869393643de23dcb010cc33091c8eb398de0fd6c",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "15/08/16 2:45 PM",
          "commitNameOld": "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 1.96,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,10 @@\n-  String resolvePath(FSPermissionChecker pc, String path)\n-      throws FileNotFoundException, AccessControlException {\n-    if (isReservedRawName(path) \u0026\u0026 isPermissionEnabled) {\n+  INodesInPath resolvePath(FSPermissionChecker pc, String src,\n+      boolean resolveLink) throws UnresolvedLinkException,\n+  FileNotFoundException, AccessControlException {\n+    byte[][] components \u003d INode.getPathComponents(src);\n+    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isReservedRawName(components)) {\n       pc.checkSuperuserPrivilege();\n     }\n-    return resolvePath(path, this);\n+    components \u003d resolveComponents(components, this);\n+    return INodesInPath.resolve(rootDir, components, resolveLink);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  INodesInPath resolvePath(FSPermissionChecker pc, String src,\n      boolean resolveLink) throws UnresolvedLinkException,\n  FileNotFoundException, AccessControlException {\n    byte[][] components \u003d INode.getPathComponents(src);\n    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isReservedRawName(components)) {\n      pc.checkSuperuserPrivilege();\n    }\n    components \u003d resolveComponents(components, this);\n    return INodesInPath.resolve(rootDir, components, resolveLink);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[pc-FSPermissionChecker, path-String]",
            "newValue": "[pc-FSPermissionChecker, src-String, resolveLink-boolean]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-10745. Directly resolve paths into INodesInPath. Contributed by Daryn Sharp.\n",
          "commitDate": "17/08/16 1:53 PM",
          "commitName": "869393643de23dcb010cc33091c8eb398de0fd6c",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "15/08/16 2:45 PM",
          "commitNameOld": "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 1.96,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,10 @@\n-  String resolvePath(FSPermissionChecker pc, String path)\n-      throws FileNotFoundException, AccessControlException {\n-    if (isReservedRawName(path) \u0026\u0026 isPermissionEnabled) {\n+  INodesInPath resolvePath(FSPermissionChecker pc, String src,\n+      boolean resolveLink) throws UnresolvedLinkException,\n+  FileNotFoundException, AccessControlException {\n+    byte[][] components \u003d INode.getPathComponents(src);\n+    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isReservedRawName(components)) {\n       pc.checkSuperuserPrivilege();\n     }\n-    return resolvePath(path, this);\n+    components \u003d resolveComponents(components, this);\n+    return INodesInPath.resolve(rootDir, components, resolveLink);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  INodesInPath resolvePath(FSPermissionChecker pc, String src,\n      boolean resolveLink) throws UnresolvedLinkException,\n  FileNotFoundException, AccessControlException {\n    byte[][] components \u003d INode.getPathComponents(src);\n    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isReservedRawName(components)) {\n      pc.checkSuperuserPrivilege();\n    }\n    components \u003d resolveComponents(components, this);\n    return INodesInPath.resolve(rootDir, components, resolveLink);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "INodesInPath"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-10745. Directly resolve paths into INodesInPath. Contributed by Daryn Sharp.\n",
          "commitDate": "17/08/16 1:53 PM",
          "commitName": "869393643de23dcb010cc33091c8eb398de0fd6c",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "15/08/16 2:45 PM",
          "commitNameOld": "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 1.96,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,10 @@\n-  String resolvePath(FSPermissionChecker pc, String path)\n-      throws FileNotFoundException, AccessControlException {\n-    if (isReservedRawName(path) \u0026\u0026 isPermissionEnabled) {\n+  INodesInPath resolvePath(FSPermissionChecker pc, String src,\n+      boolean resolveLink) throws UnresolvedLinkException,\n+  FileNotFoundException, AccessControlException {\n+    byte[][] components \u003d INode.getPathComponents(src);\n+    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isReservedRawName(components)) {\n       pc.checkSuperuserPrivilege();\n     }\n-    return resolvePath(path, this);\n+    components \u003d resolveComponents(components, this);\n+    return INodesInPath.resolve(rootDir, components, resolveLink);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  INodesInPath resolvePath(FSPermissionChecker pc, String src,\n      boolean resolveLink) throws UnresolvedLinkException,\n  FileNotFoundException, AccessControlException {\n    byte[][] components \u003d INode.getPathComponents(src);\n    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isReservedRawName(components)) {\n      pc.checkSuperuserPrivilege();\n    }\n    components \u003d resolveComponents(components, this);\n    return INodesInPath.resolve(rootDir, components, resolveLink);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[FileNotFoundException, AccessControlException]",
            "newValue": "[UnresolvedLinkException, FileNotFoundException, AccessControlException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10745. Directly resolve paths into INodesInPath. Contributed by Daryn Sharp.\n",
          "commitDate": "17/08/16 1:53 PM",
          "commitName": "869393643de23dcb010cc33091c8eb398de0fd6c",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "15/08/16 2:45 PM",
          "commitNameOld": "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 1.96,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,10 @@\n-  String resolvePath(FSPermissionChecker pc, String path)\n-      throws FileNotFoundException, AccessControlException {\n-    if (isReservedRawName(path) \u0026\u0026 isPermissionEnabled) {\n+  INodesInPath resolvePath(FSPermissionChecker pc, String src,\n+      boolean resolveLink) throws UnresolvedLinkException,\n+  FileNotFoundException, AccessControlException {\n+    byte[][] components \u003d INode.getPathComponents(src);\n+    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isReservedRawName(components)) {\n       pc.checkSuperuserPrivilege();\n     }\n-    return resolvePath(path, this);\n+    components \u003d resolveComponents(components, this);\n+    return INodesInPath.resolve(rootDir, components, resolveLink);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  INodesInPath resolvePath(FSPermissionChecker pc, String src,\n      boolean resolveLink) throws UnresolvedLinkException,\n  FileNotFoundException, AccessControlException {\n    byte[][] components \u003d INode.getPathComponents(src);\n    if (isPermissionEnabled \u0026\u0026 pc !\u003d null \u0026\u0026 isReservedRawName(components)) {\n      pc.checkSuperuserPrivilege();\n    }\n    components \u003d resolveComponents(components, this);\n    return INodesInPath.resolve(rootDir, components, resolveLink);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        }
      ]
    },
    "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10744. Internally optimize path component resolution. Contributed by Daryn Sharp.\n",
      "commitDate": "15/08/16 2:45 PM",
      "commitName": "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10744. Internally optimize path component resolution. Contributed by Daryn Sharp.\n",
          "commitDate": "15/08/16 2:45 PM",
          "commitName": "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "12/08/16 5:58 AM",
          "commitNameOld": "9019606b69bfb7019c8642b6cbcbb93645cc19e3",
          "commitAuthorOld": "Wei-Chiu Chuang",
          "daysBetweenCommits": 3.37,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-  String resolvePath(FSPermissionChecker pc, String path, byte[][] pathComponents)\n+  String resolvePath(FSPermissionChecker pc, String path)\n       throws FileNotFoundException, AccessControlException {\n     if (isReservedRawName(path) \u0026\u0026 isPermissionEnabled) {\n       pc.checkSuperuserPrivilege();\n     }\n-    return resolvePath(path, pathComponents, this);\n+    return resolvePath(path, this);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  String resolvePath(FSPermissionChecker pc, String path)\n      throws FileNotFoundException, AccessControlException {\n    if (isReservedRawName(path) \u0026\u0026 isPermissionEnabled) {\n      pc.checkSuperuserPrivilege();\n    }\n    return resolvePath(path, this);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[pc-FSPermissionChecker, path-String, pathComponents-byte[][]]",
            "newValue": "[pc-FSPermissionChecker, path-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10744. Internally optimize path component resolution. Contributed by Daryn Sharp.\n",
          "commitDate": "15/08/16 2:45 PM",
          "commitName": "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "12/08/16 5:58 AM",
          "commitNameOld": "9019606b69bfb7019c8642b6cbcbb93645cc19e3",
          "commitAuthorOld": "Wei-Chiu Chuang",
          "daysBetweenCommits": 3.37,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-  String resolvePath(FSPermissionChecker pc, String path, byte[][] pathComponents)\n+  String resolvePath(FSPermissionChecker pc, String path)\n       throws FileNotFoundException, AccessControlException {\n     if (isReservedRawName(path) \u0026\u0026 isPermissionEnabled) {\n       pc.checkSuperuserPrivilege();\n     }\n-    return resolvePath(path, pathComponents, this);\n+    return resolvePath(path, this);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  String resolvePath(FSPermissionChecker pc, String path)\n      throws FileNotFoundException, AccessControlException {\n    if (isReservedRawName(path) \u0026\u0026 isPermissionEnabled) {\n      pc.checkSuperuserPrivilege();\n    }\n    return resolvePath(path, this);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        }
      ]
    },
    "c95b878abf313507666ea018f9e6033c4c166e10": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-7415. Move FSNameSystem.resolvePath() to FSDirectory. Contributed by Haohui Mai.\n",
      "commitDate": "20/11/14 7:23 PM",
      "commitName": "c95b878abf313507666ea018f9e6033c4c166e10",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-7415. Move FSNameSystem.resolvePath() to FSDirectory. Contributed by Haohui Mai.\n",
          "commitDate": "20/11/14 7:23 PM",
          "commitName": "c95b878abf313507666ea018f9e6033c4c166e10",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "20/11/14 3:36 PM",
          "commitNameOld": "90194ca1cbd695d48c3705121c2ac9a8554578a2",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-  private String resolvePath(String path, byte[][] pathComponents)\n+  String resolvePath(FSPermissionChecker pc, String path, byte[][] pathComponents)\n       throws FileNotFoundException, AccessControlException {\n-    if (FSDirectory.isReservedRawName(path)) {\n-      checkSuperuserPrivilege();\n+    if (isReservedRawName(path) \u0026\u0026 isPermissionEnabled) {\n+      pc.checkSuperuserPrivilege();\n     }\n-    return FSDirectory.resolvePath(path, pathComponents, dir);\n+    return resolvePath(path, pathComponents, this);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  String resolvePath(FSPermissionChecker pc, String path, byte[][] pathComponents)\n      throws FileNotFoundException, AccessControlException {\n    if (isReservedRawName(path) \u0026\u0026 isPermissionEnabled) {\n      pc.checkSuperuserPrivilege();\n    }\n    return resolvePath(path, pathComponents, this);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
            "oldMethodName": "resolvePath",
            "newMethodName": "resolvePath"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-7415. Move FSNameSystem.resolvePath() to FSDirectory. Contributed by Haohui Mai.\n",
          "commitDate": "20/11/14 7:23 PM",
          "commitName": "c95b878abf313507666ea018f9e6033c4c166e10",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "20/11/14 3:36 PM",
          "commitNameOld": "90194ca1cbd695d48c3705121c2ac9a8554578a2",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-  private String resolvePath(String path, byte[][] pathComponents)\n+  String resolvePath(FSPermissionChecker pc, String path, byte[][] pathComponents)\n       throws FileNotFoundException, AccessControlException {\n-    if (FSDirectory.isReservedRawName(path)) {\n-      checkSuperuserPrivilege();\n+    if (isReservedRawName(path) \u0026\u0026 isPermissionEnabled) {\n+      pc.checkSuperuserPrivilege();\n     }\n-    return FSDirectory.resolvePath(path, pathComponents, dir);\n+    return resolvePath(path, pathComponents, this);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  String resolvePath(FSPermissionChecker pc, String path, byte[][] pathComponents)\n      throws FileNotFoundException, AccessControlException {\n    if (isReservedRawName(path) \u0026\u0026 isPermissionEnabled) {\n      pc.checkSuperuserPrivilege();\n    }\n    return resolvePath(path, pathComponents, this);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7415. Move FSNameSystem.resolvePath() to FSDirectory. Contributed by Haohui Mai.\n",
          "commitDate": "20/11/14 7:23 PM",
          "commitName": "c95b878abf313507666ea018f9e6033c4c166e10",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "20/11/14 3:36 PM",
          "commitNameOld": "90194ca1cbd695d48c3705121c2ac9a8554578a2",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-  private String resolvePath(String path, byte[][] pathComponents)\n+  String resolvePath(FSPermissionChecker pc, String path, byte[][] pathComponents)\n       throws FileNotFoundException, AccessControlException {\n-    if (FSDirectory.isReservedRawName(path)) {\n-      checkSuperuserPrivilege();\n+    if (isReservedRawName(path) \u0026\u0026 isPermissionEnabled) {\n+      pc.checkSuperuserPrivilege();\n     }\n-    return FSDirectory.resolvePath(path, pathComponents, dir);\n+    return resolvePath(path, pathComponents, this);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  String resolvePath(FSPermissionChecker pc, String path, byte[][] pathComponents)\n      throws FileNotFoundException, AccessControlException {\n    if (isReservedRawName(path) \u0026\u0026 isPermissionEnabled) {\n      pc.checkSuperuserPrivilege();\n    }\n    return resolvePath(path, pathComponents, this);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7415. Move FSNameSystem.resolvePath() to FSDirectory. Contributed by Haohui Mai.\n",
          "commitDate": "20/11/14 7:23 PM",
          "commitName": "c95b878abf313507666ea018f9e6033c4c166e10",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "20/11/14 3:36 PM",
          "commitNameOld": "90194ca1cbd695d48c3705121c2ac9a8554578a2",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-  private String resolvePath(String path, byte[][] pathComponents)\n+  String resolvePath(FSPermissionChecker pc, String path, byte[][] pathComponents)\n       throws FileNotFoundException, AccessControlException {\n-    if (FSDirectory.isReservedRawName(path)) {\n-      checkSuperuserPrivilege();\n+    if (isReservedRawName(path) \u0026\u0026 isPermissionEnabled) {\n+      pc.checkSuperuserPrivilege();\n     }\n-    return FSDirectory.resolvePath(path, pathComponents, dir);\n+    return resolvePath(path, pathComponents, this);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  String resolvePath(FSPermissionChecker pc, String path, byte[][] pathComponents)\n      throws FileNotFoundException, AccessControlException {\n    if (isReservedRawName(path) \u0026\u0026 isPermissionEnabled) {\n      pc.checkSuperuserPrivilege();\n    }\n    return resolvePath(path, pathComponents, this);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[path-String, pathComponents-byte[][]]",
            "newValue": "[pc-FSPermissionChecker, path-String, pathComponents-byte[][]]"
          }
        }
      ]
    }
  }
}