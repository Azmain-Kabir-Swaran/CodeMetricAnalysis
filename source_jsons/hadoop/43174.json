{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceClient.java",
  "functionName": "filterContainers",
  "functionId": "filterContainers___appName-String__components-List__String____version-String__containerStates-List__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
  "functionStartLine": 493,
  "functionEndLine": 514,
  "numCommitsSeen": 53,
  "timeTaken": 1465,
  "changeHistory": [
    "121865c3f96166e2190ed54b433ebcf8d053b91c"
  ],
  "changeHistoryShort": {
    "121865c3f96166e2190ed54b433ebcf8d053b91c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "121865c3f96166e2190ed54b433ebcf8d053b91c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8299.  Added CLI and REST API for query container status.\n            Contributed by Chandni Singh\n",
      "commitDate": "16/07/18 2:41 PM",
      "commitName": "121865c3f96166e2190ed54b433ebcf8d053b91c",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,22 @@\n+  private GetCompInstancesResponseProto filterContainers(String appName,\n+      List\u003cString\u003e components, String version,\n+      List\u003cString\u003e containerStates) throws IOException, YarnException {\n+    ApplicationReport appReport \u003d yarnClient.getApplicationReport(getAppId(\n+        appName));\n+    if (StringUtils.isEmpty(appReport.getHost())) {\n+      throw new YarnException(appName + \" AM hostname is empty.\");\n+    }\n+    ClientAMProtocol proxy \u003d createAMProxy(appName, appReport);\n+    GetCompInstancesRequestProto.Builder req \u003d GetCompInstancesRequestProto\n+        .newBuilder();\n+    if (components !\u003d null \u0026\u0026 !components.isEmpty()) {\n+      req.addAllComponentNames(components);\n+    }\n+    if (version !\u003d null) {\n+      req.setVersion(version);\n+    }\n+    if (containerStates !\u003d null \u0026\u0026 !containerStates.isEmpty()){\n+      req.addAllContainerStates(containerStates);\n+    }\n+    return proxy.getCompInstances(req.build());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private GetCompInstancesResponseProto filterContainers(String appName,\n      List\u003cString\u003e components, String version,\n      List\u003cString\u003e containerStates) throws IOException, YarnException {\n    ApplicationReport appReport \u003d yarnClient.getApplicationReport(getAppId(\n        appName));\n    if (StringUtils.isEmpty(appReport.getHost())) {\n      throw new YarnException(appName + \" AM hostname is empty.\");\n    }\n    ClientAMProtocol proxy \u003d createAMProxy(appName, appReport);\n    GetCompInstancesRequestProto.Builder req \u003d GetCompInstancesRequestProto\n        .newBuilder();\n    if (components !\u003d null \u0026\u0026 !components.isEmpty()) {\n      req.addAllComponentNames(components);\n    }\n    if (version !\u003d null) {\n      req.setVersion(version);\n    }\n    if (containerStates !\u003d null \u0026\u0026 !containerStates.isEmpty()){\n      req.addAllContainerStates(containerStates);\n    }\n    return proxy.getCompInstances(req.build());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
    }
  }
}