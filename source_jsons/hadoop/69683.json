{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbfsOutputStream.java",
  "functionName": "close",
  "functionId": "close",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsOutputStream.java",
  "functionStartLine": 271,
  "functionEndLine": 298,
  "numCommitsSeen": 19,
  "timeTaken": 2252,
  "changeHistory": [
    "459eb2ad6d5bc6b21462e728fb334c6e30e14c39",
    "17aa8f6764262767b42717cf190a53e2c1795507",
    "1edf1914acb74e45f6717c703f519cb382aae173",
    "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be",
    "f044deedbbfee0812316d587139cb828f27172e9"
  ],
  "changeHistoryShort": {
    "459eb2ad6d5bc6b21462e728fb334c6e30e14c39": "Ybodychange",
    "17aa8f6764262767b42717cf190a53e2c1795507": "Ybodychange",
    "1edf1914acb74e45f6717c703f519cb382aae173": "Ybodychange",
    "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be": "Ybodychange",
    "f044deedbbfee0812316d587139cb828f27172e9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "459eb2ad6d5bc6b21462e728fb334c6e30e14c39": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16914 Adding Output Stream Counters in ABFS (#1899)\n\n\r\nContributed by Mehakmeet Singh.There",
      "commitDate": "23/04/20 5:35 AM",
      "commitName": "459eb2ad6d5bc6b21462e728fb334c6e30e14c39",
      "commitAuthor": "Mehakmeet Singh",
      "commitDateOld": "21/04/20 9:27 AM",
      "commitNameOld": "8031c66295b530dcaae9e00d4f656330bc3b3952",
      "commitAuthorOld": "Mukund Thakur",
      "daysBetweenCommits": 1.84,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,28 @@\n   public synchronized void close() throws IOException {\n     if (closed) {\n       return;\n     }\n \n     try {\n       flushInternal(true);\n       threadExecutor.shutdown();\n     } catch (IOException e) {\n       // Problems surface in try-with-resources clauses if\n       // the exception thrown in a close \u003d\u003d the one already thrown\n       // -so we wrap any exception with a new one.\n       // See HADOOP-16785\n       throw wrapException(path, e.getMessage(), e);\n     } finally {\n       lastError \u003d new IOException(FSExceptionMessages.STREAM_IS_CLOSED);\n       buffer \u003d null;\n       bufferIndex \u003d 0;\n       closed \u003d true;\n       writeOperations.clear();\n       if (!threadExecutor.isShutdown()) {\n         threadExecutor.shutdownNow();\n       }\n     }\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Closing AbfsOutputStream \", toString());\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void close() throws IOException {\n    if (closed) {\n      return;\n    }\n\n    try {\n      flushInternal(true);\n      threadExecutor.shutdown();\n    } catch (IOException e) {\n      // Problems surface in try-with-resources clauses if\n      // the exception thrown in a close \u003d\u003d the one already thrown\n      // -so we wrap any exception with a new one.\n      // See HADOOP-16785\n      throw wrapException(path, e.getMessage(), e);\n    } finally {\n      lastError \u003d new IOException(FSExceptionMessages.STREAM_IS_CLOSED);\n      buffer \u003d null;\n      bufferIndex \u003d 0;\n      closed \u003d true;\n      writeOperations.clear();\n      if (!threadExecutor.isShutdown()) {\n        threadExecutor.shutdownNow();\n      }\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Closing AbfsOutputStream \", toString());\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsOutputStream.java",
      "extendedDetails": {}
    },
    "17aa8f6764262767b42717cf190a53e2c1795507": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16785. Improve wasb and abfs resilience on double close() calls.\n\nThis hardens the wasb and abfs output streams\u0027 resilience to being invoked\nin/after close().\n\nwasb:\n  Explicity raise IOEs on operations invoked after close,\n  rather than implicitly raise NPEs.\n  This ensures that invocations which catch and swallow IOEs will perform as\n  expected.\n\nabfs:\n  When rethrowing an IOException in the close() call, explicitly wrap it\n  with a new instance of the same subclass.\n  This is needed to handle failures in try-with-resources clauses, where\n  any exception in closed() is added as a suppressed exception to the one\n  thrown in the try {} clause\n  *and you cannot attach the same exception to itself*\n\nContributed by Steve Loughran.\n\nChange-Id: Ic44b494ff5da332b47d6c198ceb67b965d34dd1b\n",
      "commitDate": "08/01/20 3:46 AM",
      "commitName": "17aa8f6764262767b42717cf190a53e2c1795507",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "19/11/19 9:00 AM",
      "commitNameOld": "b033c681e4fc3ee1a38caa807e130aee481d99d5",
      "commitAuthorOld": "Jeetesh Mangwani",
      "daysBetweenCommits": 49.78,
      "commitsBetweenForRepo": 167,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,25 @@\n   public synchronized void close() throws IOException {\n     if (closed) {\n       return;\n     }\n \n     try {\n       flushInternal(true);\n       threadExecutor.shutdown();\n+    } catch (IOException e) {\n+      // Problems surface in try-with-resources clauses if\n+      // the exception thrown in a close \u003d\u003d the one already thrown\n+      // -so we wrap any exception with a new one.\n+      // See HADOOP-16785\n+      throw wrapException(path, e.getMessage(), e);\n     } finally {\n       lastError \u003d new IOException(FSExceptionMessages.STREAM_IS_CLOSED);\n       buffer \u003d null;\n       bufferIndex \u003d 0;\n       closed \u003d true;\n       writeOperations.clear();\n       if (!threadExecutor.isShutdown()) {\n         threadExecutor.shutdownNow();\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void close() throws IOException {\n    if (closed) {\n      return;\n    }\n\n    try {\n      flushInternal(true);\n      threadExecutor.shutdown();\n    } catch (IOException e) {\n      // Problems surface in try-with-resources clauses if\n      // the exception thrown in a close \u003d\u003d the one already thrown\n      // -so we wrap any exception with a new one.\n      // See HADOOP-16785\n      throw wrapException(path, e.getMessage(), e);\n    } finally {\n      lastError \u003d new IOException(FSExceptionMessages.STREAM_IS_CLOSED);\n      buffer \u003d null;\n      bufferIndex \u003d 0;\n      closed \u003d true;\n      writeOperations.clear();\n      if (!threadExecutor.isShutdown()) {\n        threadExecutor.shutdownNow();\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsOutputStream.java",
      "extendedDetails": {}
    },
    "1edf1914acb74e45f6717c703f519cb382aae173": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16182. Update abfs storage back-end with \"close\" flag when application is done writing to a file.\n\nContributed by Vishwajeet Dusane.\n",
      "commitDate": "18/03/19 6:18 AM",
      "commitName": "1edf1914acb74e45f6717c703f519cb382aae173",
      "commitAuthor": "Vishwajeet Dusane",
      "commitDateOld": "17/12/18 3:15 AM",
      "commitNameOld": "346c0c8aff0b206d45f34dbce4fcc81364115d95",
      "commitAuthorOld": "Da Zhou",
      "daysBetweenCommits": 91.09,
      "commitsBetweenForRepo": 685,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public synchronized void close() throws IOException {\n     if (closed) {\n       return;\n     }\n \n     try {\n-      flushInternal();\n+      flushInternal(true);\n       threadExecutor.shutdown();\n     } finally {\n       lastError \u003d new IOException(FSExceptionMessages.STREAM_IS_CLOSED);\n       buffer \u003d null;\n       bufferIndex \u003d 0;\n       closed \u003d true;\n       writeOperations.clear();\n       if (!threadExecutor.isShutdown()) {\n         threadExecutor.shutdownNow();\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void close() throws IOException {\n    if (closed) {\n      return;\n    }\n\n    try {\n      flushInternal(true);\n      threadExecutor.shutdown();\n    } finally {\n      lastError \u003d new IOException(FSExceptionMessages.STREAM_IS_CLOSED);\n      buffer \u003d null;\n      bufferIndex \u003d 0;\n      closed \u003d true;\n      writeOperations.clear();\n      if (!threadExecutor.isShutdown()) {\n        threadExecutor.shutdownNow();\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsOutputStream.java",
      "extendedDetails": {}
    },
    "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15446. ABFS: tune imports \u0026 javadocs; stabilise tests.\nContributed by Steve Loughran and Da Zhou.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be",
      "commitAuthor": "Thomas Marquardt",
      "commitDateOld": "17/09/18 12:54 PM",
      "commitNameOld": "f044deedbbfee0812316d587139cb828f27172e9",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public synchronized void close() throws IOException {\n     if (closed) {\n       return;\n     }\n \n     try {\n-      this.flushInternal();\n-      this.threadExecutor.shutdown();\n+      flushInternal();\n+      threadExecutor.shutdown();\n     } finally {\n-      this.lastError \u003d new IOException(FSExceptionMessages.STREAM_IS_CLOSED);\n-      this.buffer \u003d null;\n-      this.bufferIndex \u003d 0;\n-      this.closed \u003d true;\n-      this.writeOperations.clear();\n-      if (!this.threadExecutor.isShutdown()) {\n-        this.threadExecutor.shutdownNow();\n+      lastError \u003d new IOException(FSExceptionMessages.STREAM_IS_CLOSED);\n+      buffer \u003d null;\n+      bufferIndex \u003d 0;\n+      closed \u003d true;\n+      writeOperations.clear();\n+      if (!threadExecutor.isShutdown()) {\n+        threadExecutor.shutdownNow();\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void close() throws IOException {\n    if (closed) {\n      return;\n    }\n\n    try {\n      flushInternal();\n      threadExecutor.shutdown();\n    } finally {\n      lastError \u003d new IOException(FSExceptionMessages.STREAM_IS_CLOSED);\n      buffer \u003d null;\n      bufferIndex \u003d 0;\n      closed \u003d true;\n      writeOperations.clear();\n      if (!threadExecutor.isShutdown()) {\n        threadExecutor.shutdownNow();\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsOutputStream.java",
      "extendedDetails": {}
    },
    "f044deedbbfee0812316d587139cb828f27172e9": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15407. HADOOP-15540. Support Windows Azure Storage - Blob file system \"ABFS\" in Hadoop: Core Commit.\n\nContributed by Shane Mainali, Thomas Marquardt, Zichen Sun, Georgi Chalakov, Esfandiar Manii, Amit Singh, Dana Kaban, Da Zhou, Junhua Gu, Saher Ahwal, Saurabh Pant, James Baker, Shaoyu Zhang, Lawrence Chen, Kevin Chen and Steve Loughran\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "f044deedbbfee0812316d587139cb828f27172e9",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,19 @@\n+  public synchronized void close() throws IOException {\n+    if (closed) {\n+      return;\n+    }\n+\n+    try {\n+      this.flushInternal();\n+      this.threadExecutor.shutdown();\n+    } finally {\n+      this.lastError \u003d new IOException(FSExceptionMessages.STREAM_IS_CLOSED);\n+      this.buffer \u003d null;\n+      this.bufferIndex \u003d 0;\n+      this.closed \u003d true;\n+      this.writeOperations.clear();\n+      if (!this.threadExecutor.isShutdown()) {\n+        this.threadExecutor.shutdownNow();\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void close() throws IOException {\n    if (closed) {\n      return;\n    }\n\n    try {\n      this.flushInternal();\n      this.threadExecutor.shutdown();\n    } finally {\n      this.lastError \u003d new IOException(FSExceptionMessages.STREAM_IS_CLOSED);\n      this.buffer \u003d null;\n      this.bufferIndex \u003d 0;\n      this.closed \u003d true;\n      this.writeOperations.clear();\n      if (!this.threadExecutor.isShutdown()) {\n        this.threadExecutor.shutdownNow();\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsOutputStream.java"
    }
  }
}