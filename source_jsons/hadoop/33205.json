{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NECVEPlugin.java",
  "functionName": "scriptBasedInit",
  "functionId": "scriptBasedInit___envProvider-Function__String,String____scriptPaths-String[]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/com/nec/NECVEPlugin.java",
  "functionStartLine": 84,
  "functionEndLine": 131,
  "numCommitsSeen": 3,
  "timeTaken": 1071,
  "changeHistory": [
    "062eb605ac9d8341e39bd6feca059be535c7d6c5"
  ],
  "changeHistoryShort": {
    "062eb605ac9d8341e39bd6feca059be535c7d6c5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "062eb605ac9d8341e39bd6feca059be535c7d6c5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9477. Implement VE discovery using libudev. Contributed by Peter Bacsko.\n",
      "commitDate": "26/06/19 8:53 AM",
      "commitName": "062eb605ac9d8341e39bd6feca059be535c7d6c5",
      "commitAuthor": "Zhankun Tang",
      "diff": "@@ -0,0 +1,48 @@\n+  private void scriptBasedInit(Function\u003cString, String\u003e envProvider,\n+      String[] scriptPaths) throws ResourceHandlerException {\n+    String binaryName \u003d DEFAULT_SCRIPT_NAME;\n+\n+    String envScriptName \u003d envProvider.apply(ENV_SCRIPT_NAME);\n+    if (envScriptName !\u003d null) {\n+      binaryName \u003d envScriptName;\n+    }\n+    LOG.info(\"Use {} as script name.\", binaryName);\n+\n+    // Try to find the script based on an environment variable, if set\n+    boolean found \u003d false;\n+    String envBinaryPath \u003d envProvider.apply(ENV_SCRIPT_PATH);\n+    if (envBinaryPath !\u003d null) {\n+      this.binaryPath \u003d getScriptFromEnvSetting(envBinaryPath);\n+      found \u003d binaryPath !\u003d null;\n+    }\n+\n+    // Try $HADOOP_COMMON_HOME\n+    if (!found) {\n+      // print a warning only if the env variable was defined\n+      if (envBinaryPath !\u003d null) {\n+        LOG.warn(\"Script {} does not exist, falling back \" +\n+            \"to $HADOOP_COMMON_HOME/sbin/DevicePluginScript/\", envBinaryPath);\n+      }\n+\n+      this.binaryPath \u003d getScriptFromHadoopCommon(envProvider, binaryName);\n+      found \u003d binaryPath !\u003d null;\n+    }\n+\n+    // Try the default search directories\n+    if (!found) {\n+      LOG.info(\"Script not found under\" +\n+          \" $HADOOP_COMMON_HOME/sbin/DevicePluginScript/,\" +\n+          \" falling back to default search directories\");\n+\n+      this.binaryPath \u003d getScriptFromSearchDirs(binaryName, scriptPaths);\n+      found \u003d binaryPath !\u003d null;\n+    }\n+\n+    // Script not found\n+    if (!found) {\n+      LOG.error(\"Script not found in \"\n+          + Arrays.toString(scriptPaths));\n+      throw new ResourceHandlerException(\n+          \"No binary found for \" + NECVEPlugin.class.getName());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void scriptBasedInit(Function\u003cString, String\u003e envProvider,\n      String[] scriptPaths) throws ResourceHandlerException {\n    String binaryName \u003d DEFAULT_SCRIPT_NAME;\n\n    String envScriptName \u003d envProvider.apply(ENV_SCRIPT_NAME);\n    if (envScriptName !\u003d null) {\n      binaryName \u003d envScriptName;\n    }\n    LOG.info(\"Use {} as script name.\", binaryName);\n\n    // Try to find the script based on an environment variable, if set\n    boolean found \u003d false;\n    String envBinaryPath \u003d envProvider.apply(ENV_SCRIPT_PATH);\n    if (envBinaryPath !\u003d null) {\n      this.binaryPath \u003d getScriptFromEnvSetting(envBinaryPath);\n      found \u003d binaryPath !\u003d null;\n    }\n\n    // Try $HADOOP_COMMON_HOME\n    if (!found) {\n      // print a warning only if the env variable was defined\n      if (envBinaryPath !\u003d null) {\n        LOG.warn(\"Script {} does not exist, falling back \" +\n            \"to $HADOOP_COMMON_HOME/sbin/DevicePluginScript/\", envBinaryPath);\n      }\n\n      this.binaryPath \u003d getScriptFromHadoopCommon(envProvider, binaryName);\n      found \u003d binaryPath !\u003d null;\n    }\n\n    // Try the default search directories\n    if (!found) {\n      LOG.info(\"Script not found under\" +\n          \" $HADOOP_COMMON_HOME/sbin/DevicePluginScript/,\" +\n          \" falling back to default search directories\");\n\n      this.binaryPath \u003d getScriptFromSearchDirs(binaryName, scriptPaths);\n      found \u003d binaryPath !\u003d null;\n    }\n\n    // Script not found\n    if (!found) {\n      LOG.error(\"Script not found in \"\n          + Arrays.toString(scriptPaths));\n      throw new ResourceHandlerException(\n          \"No binary found for \" + NECVEPlugin.class.getName());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/com/nec/NECVEPlugin.java"
    }
  }
}