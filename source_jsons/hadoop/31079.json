{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationInterceptorREST.java",
  "functionName": "updateAppState",
  "functionId": "updateAppState___targetState-AppState__hsr-HttpServletRequest__appId-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
  "functionStartLine": 614,
  "functionEndLine": 653,
  "numCommitsSeen": 20,
  "timeTaken": 1357,
  "changeHistory": [
    "ae8fb13b312b30de50d65b5450b565d50d690e9e",
    "cc59b5fb26ccf58dffcd8850fa12ec65250f127d"
  ],
  "changeHistoryShort": {
    "ae8fb13b312b30de50d65b5450b565d50d690e9e": "Ybodychange",
    "cc59b5fb26ccf58dffcd8850fa12ec65250f127d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ae8fb13b312b30de50d65b5450b565d50d690e9e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6923. Metrics for Federation Router. (Giovanni Matteo Fumarola via asuresh)\n",
      "commitDate": "21/08/17 10:50 PM",
      "commitName": "ae8fb13b312b30de50d65b5450b565d50d690e9e",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "11/08/17 3:58 PM",
      "commitNameOld": "cc59b5fb26ccf58dffcd8850fa12ec65250f127d",
      "commitAuthorOld": "Carlo Curino",
      "daysBetweenCommits": 10.29,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,36 @@\n   public Response updateAppState(AppState targetState, HttpServletRequest hsr,\n       String appId) throws AuthorizationException, YarnException,\n       InterruptedException, IOException {\n \n+    long startTime \u003d clock.getTime();\n+\n     ApplicationId applicationId \u003d null;\n     try {\n       applicationId \u003d ApplicationId.fromString(appId);\n     } catch (IllegalArgumentException e) {\n+      routerMetrics.incrAppsFailedKilled();\n       return Response.status(Status.BAD_REQUEST).entity(e.getLocalizedMessage())\n           .build();\n     }\n \n-    SubClusterId subClusterId \u003d\n-        federationFacade.getApplicationHomeSubCluster(applicationId);\n+    SubClusterInfo subClusterInfo \u003d null;\n+    SubClusterId subClusterId \u003d null;\n+    try {\n+      subClusterId \u003d\n+          federationFacade.getApplicationHomeSubCluster(applicationId);\n+      subClusterInfo \u003d federationFacade.getSubCluster(subClusterId);\n+    } catch (YarnException e) {\n+      routerMetrics.incrAppsFailedKilled();\n+      return Response.status(Status.BAD_REQUEST).entity(e.getLocalizedMessage())\n+          .build();\n+    }\n \n-    SubClusterInfo subClusterInfo \u003d\n-        federationFacade.getSubCluster(subClusterId);\n-\n-    return getOrCreateInterceptorForSubCluster(subClusterId,\n+    Response response \u003d getOrCreateInterceptorForSubCluster(subClusterId,\n         subClusterInfo.getRMWebServiceAddress()).updateAppState(targetState,\n             hsr, appId);\n+\n+    long stopTime \u003d clock.getTime();\n+    routerMetrics.succeededAppsRetrieved(stopTime - startTime);\n+\n+    return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response updateAppState(AppState targetState, HttpServletRequest hsr,\n      String appId) throws AuthorizationException, YarnException,\n      InterruptedException, IOException {\n\n    long startTime \u003d clock.getTime();\n\n    ApplicationId applicationId \u003d null;\n    try {\n      applicationId \u003d ApplicationId.fromString(appId);\n    } catch (IllegalArgumentException e) {\n      routerMetrics.incrAppsFailedKilled();\n      return Response.status(Status.BAD_REQUEST).entity(e.getLocalizedMessage())\n          .build();\n    }\n\n    SubClusterInfo subClusterInfo \u003d null;\n    SubClusterId subClusterId \u003d null;\n    try {\n      subClusterId \u003d\n          federationFacade.getApplicationHomeSubCluster(applicationId);\n      subClusterInfo \u003d federationFacade.getSubCluster(subClusterId);\n    } catch (YarnException e) {\n      routerMetrics.incrAppsFailedKilled();\n      return Response.status(Status.BAD_REQUEST).entity(e.getLocalizedMessage())\n          .build();\n    }\n\n    Response response \u003d getOrCreateInterceptorForSubCluster(subClusterId,\n        subClusterInfo.getRMWebServiceAddress()).updateAppState(targetState,\n            hsr, appId);\n\n    long stopTime \u003d clock.getTime();\n    routerMetrics.succeededAppsRetrieved(stopTime - startTime);\n\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
      "extendedDetails": {}
    },
    "cc59b5fb26ccf58dffcd8850fa12ec65250f127d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6896. Federation: routing REST invocations transparently to multiple RMs (part 1 - basic execution). (Contributed by Giovanni Matteo Fumarola via curino)\n",
      "commitDate": "11/08/17 3:58 PM",
      "commitName": "cc59b5fb26ccf58dffcd8850fa12ec65250f127d",
      "commitAuthor": "Carlo Curino",
      "diff": "@@ -0,0 +1,22 @@\n+  public Response updateAppState(AppState targetState, HttpServletRequest hsr,\n+      String appId) throws AuthorizationException, YarnException,\n+      InterruptedException, IOException {\n+\n+    ApplicationId applicationId \u003d null;\n+    try {\n+      applicationId \u003d ApplicationId.fromString(appId);\n+    } catch (IllegalArgumentException e) {\n+      return Response.status(Status.BAD_REQUEST).entity(e.getLocalizedMessage())\n+          .build();\n+    }\n+\n+    SubClusterId subClusterId \u003d\n+        federationFacade.getApplicationHomeSubCluster(applicationId);\n+\n+    SubClusterInfo subClusterInfo \u003d\n+        federationFacade.getSubCluster(subClusterId);\n+\n+    return getOrCreateInterceptorForSubCluster(subClusterId,\n+        subClusterInfo.getRMWebServiceAddress()).updateAppState(targetState,\n+            hsr, appId);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Response updateAppState(AppState targetState, HttpServletRequest hsr,\n      String appId) throws AuthorizationException, YarnException,\n      InterruptedException, IOException {\n\n    ApplicationId applicationId \u003d null;\n    try {\n      applicationId \u003d ApplicationId.fromString(appId);\n    } catch (IllegalArgumentException e) {\n      return Response.status(Status.BAD_REQUEST).entity(e.getLocalizedMessage())\n          .build();\n    }\n\n    SubClusterId subClusterId \u003d\n        federationFacade.getApplicationHomeSubCluster(applicationId);\n\n    SubClusterInfo subClusterInfo \u003d\n        federationFacade.getSubCluster(subClusterId);\n\n    return getOrCreateInterceptorForSubCluster(subClusterId,\n        subClusterInfo.getRMWebServiceAddress()).updateAppState(targetState,\n            hsr, appId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java"
    }
  }
}