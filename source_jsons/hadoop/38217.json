{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProportionalCapacityPreemptionPolicy.java",
  "functionName": "addTempQueuePartition",
  "functionId": "addTempQueuePartition___queuePartition-TempQueuePerPartition",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java",
  "functionStartLine": 654,
  "functionEndLine": 663,
  "numCommitsSeen": 49,
  "timeTaken": 2844,
  "changeHistory": [
    "ae14e5d07f1b6702a5160637438028bb03d9387e",
    "fa7a43529d529f0006c8033c2003f15b9b93f103",
    "7e8c9beb4156dcaeb3a11e60aaa06d2370626913",
    "d497f6ea2be559aa31ed76f37ae949dbfabe2a51"
  ],
  "changeHistoryShort": {
    "ae14e5d07f1b6702a5160637438028bb03d9387e": "Ybodychange",
    "fa7a43529d529f0006c8033c2003f15b9b93f103": "Ybodychange",
    "7e8c9beb4156dcaeb3a11e60aaa06d2370626913": "Ybodychange",
    "d497f6ea2be559aa31ed76f37ae949dbfabe2a51": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ae14e5d07f1b6702a5160637438028bb03d9387e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4108. CapacityScheduler: Improve preemption to only kill containers that would satisfy the incoming request. (Wangda Tan)\n\n(cherry picked from commit 7e8c9beb4156dcaeb3a11e60aaa06d2370626913)\n",
      "commitDate": "16/03/16 5:02 PM",
      "commitName": "ae14e5d07f1b6702a5160637438028bb03d9387e",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/03/16 5:02 PM",
      "commitNameOld": "fa7a43529d529f0006c8033c2003f15b9b93f103",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   private void addTempQueuePartition(TempQueuePerPartition queuePartition) {\n     String queueName \u003d queuePartition.queueName;\n \n     Map\u003cString, TempQueuePerPartition\u003e queuePartitions;\n     if (null \u003d\u003d (queuePartitions \u003d queueToPartitions.get(queueName))) {\n-      queuePartitions \u003d new HashMap\u003cString, TempQueuePerPartition\u003e();\n+      queuePartitions \u003d new HashMap\u003c\u003e();\n       queueToPartitions.put(queueName, queuePartitions);\n     }\n     queuePartitions.put(queuePartition.partition, queuePartition);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addTempQueuePartition(TempQueuePerPartition queuePartition) {\n    String queueName \u003d queuePartition.queueName;\n\n    Map\u003cString, TempQueuePerPartition\u003e queuePartitions;\n    if (null \u003d\u003d (queuePartitions \u003d queueToPartitions.get(queueName))) {\n      queuePartitions \u003d new HashMap\u003c\u003e();\n      queueToPartitions.put(queueName, queuePartitions);\n    }\n    queuePartitions.put(queuePartition.partition, queuePartition);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java",
      "extendedDetails": {}
    },
    "fa7a43529d529f0006c8033c2003f15b9b93f103": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"CapacityScheduler: Improve preemption to only kill containers that would satisfy the incoming request. (Wangda Tan)\"\n\nThis reverts commit 7e8c9beb4156dcaeb3a11e60aaa06d2370626913.\n",
      "commitDate": "16/03/16 5:02 PM",
      "commitName": "fa7a43529d529f0006c8033c2003f15b9b93f103",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/03/16 4:59 PM",
      "commitNameOld": "7e8c9beb4156dcaeb3a11e60aaa06d2370626913",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   private void addTempQueuePartition(TempQueuePerPartition queuePartition) {\n     String queueName \u003d queuePartition.queueName;\n \n     Map\u003cString, TempQueuePerPartition\u003e queuePartitions;\n     if (null \u003d\u003d (queuePartitions \u003d queueToPartitions.get(queueName))) {\n-      queuePartitions \u003d new HashMap\u003c\u003e();\n+      queuePartitions \u003d new HashMap\u003cString, TempQueuePerPartition\u003e();\n       queueToPartitions.put(queueName, queuePartitions);\n     }\n     queuePartitions.put(queuePartition.partition, queuePartition);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addTempQueuePartition(TempQueuePerPartition queuePartition) {\n    String queueName \u003d queuePartition.queueName;\n\n    Map\u003cString, TempQueuePerPartition\u003e queuePartitions;\n    if (null \u003d\u003d (queuePartitions \u003d queueToPartitions.get(queueName))) {\n      queuePartitions \u003d new HashMap\u003cString, TempQueuePerPartition\u003e();\n      queueToPartitions.put(queueName, queuePartitions);\n    }\n    queuePartitions.put(queuePartition.partition, queuePartition);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java",
      "extendedDetails": {}
    },
    "7e8c9beb4156dcaeb3a11e60aaa06d2370626913": {
      "type": "Ybodychange",
      "commitMessage": "CapacityScheduler: Improve preemption to only kill containers that would satisfy the incoming request. (Wangda Tan)\n",
      "commitDate": "16/03/16 4:59 PM",
      "commitName": "7e8c9beb4156dcaeb3a11e60aaa06d2370626913",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "18/01/16 5:30 PM",
      "commitNameOld": "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 57.94,
      "commitsBetweenForRepo": 394,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   private void addTempQueuePartition(TempQueuePerPartition queuePartition) {\n     String queueName \u003d queuePartition.queueName;\n \n     Map\u003cString, TempQueuePerPartition\u003e queuePartitions;\n     if (null \u003d\u003d (queuePartitions \u003d queueToPartitions.get(queueName))) {\n-      queuePartitions \u003d new HashMap\u003cString, TempQueuePerPartition\u003e();\n+      queuePartitions \u003d new HashMap\u003c\u003e();\n       queueToPartitions.put(queueName, queuePartitions);\n     }\n     queuePartitions.put(queuePartition.partition, queuePartition);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addTempQueuePartition(TempQueuePerPartition queuePartition) {\n    String queueName \u003d queuePartition.queueName;\n\n    Map\u003cString, TempQueuePerPartition\u003e queuePartitions;\n    if (null \u003d\u003d (queuePartitions \u003d queueToPartitions.get(queueName))) {\n      queuePartitions \u003d new HashMap\u003c\u003e();\n      queueToPartitions.put(queueName, queuePartitions);\n    }\n    queuePartitions.put(queuePartition.partition, queuePartition);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java",
      "extendedDetails": {}
    },
    "d497f6ea2be559aa31ed76f37ae949dbfabe2a51": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2498. Respect labels in preemption policy of capacity scheduler for inter-queue preemption. Contributed by Wangda Tan\n",
      "commitDate": "24/04/15 5:03 PM",
      "commitName": "d497f6ea2be559aa31ed76f37ae949dbfabe2a51",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,10 @@\n+  private void addTempQueuePartition(TempQueuePerPartition queuePartition) {\n+    String queueName \u003d queuePartition.queueName;\n+\n+    Map\u003cString, TempQueuePerPartition\u003e queuePartitions;\n+    if (null \u003d\u003d (queuePartitions \u003d queueToPartitions.get(queueName))) {\n+      queuePartitions \u003d new HashMap\u003cString, TempQueuePerPartition\u003e();\n+      queueToPartitions.put(queueName, queuePartitions);\n+    }\n+    queuePartitions.put(queuePartition.partition, queuePartition);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addTempQueuePartition(TempQueuePerPartition queuePartition) {\n    String queueName \u003d queuePartition.queueName;\n\n    Map\u003cString, TempQueuePerPartition\u003e queuePartitions;\n    if (null \u003d\u003d (queuePartitions \u003d queueToPartitions.get(queueName))) {\n      queuePartitions \u003d new HashMap\u003cString, TempQueuePerPartition\u003e();\n      queueToPartitions.put(queueName, queuePartitions);\n    }\n    queuePartitions.put(queuePartition.partition, queuePartition);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java"
    }
  }
}