{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataStreamer.java",
  "functionName": "initExcludedNodes",
  "functionId": "initExcludedNodes___excludedNodesCacheExpiry-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
  "functionStartLine": 1969,
  "functionEndLine": 1987,
  "numCommitsSeen": 67,
  "timeTaken": 4077,
  "changeHistory": [
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
    "8f378733423a5244461df79a92c00239514b8b93",
    "7947e5b53b9ac9524b535b0384c1c355b74723ff",
    "2cc9514ad643ae49d30524743420ee9744e571bd",
    "a16bfff71bd7f00e06e1f59bfe5445a154bb8c66"
  ],
  "changeHistoryShort": {
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": "Ybodychange",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": "Yfilerename",
    "8f378733423a5244461df79a92c00239514b8b93": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "7947e5b53b9ac9524b535b0384c1c355b74723ff": "Ybodychange",
    "2cc9514ad643ae49d30524743420ee9744e571bd": "Ybodychange",
    "a16bfff71bd7f00e06e1f59bfe5445a154bb8c66": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "03/10/15 11:38 AM",
      "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "30/09/15 8:39 AM",
      "commitNameOld": "6c17d315287020368689fa078a40a1eaedf89d5b",
      "commitAuthorOld": "",
      "daysBetweenCommits": 3.12,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   private static LoadingCache\u003cDatanodeInfo, DatanodeInfo\u003e initExcludedNodes(\n       long excludedNodesCacheExpiry) {\n     return CacheBuilder.newBuilder()\n         .expireAfterWrite(excludedNodesCacheExpiry, TimeUnit.MILLISECONDS)\n         .removalListener(new RemovalListener\u003cDatanodeInfo, DatanodeInfo\u003e() {\n           @Override\n           public void onRemoval(\n-              RemovalNotification\u003cDatanodeInfo, DatanodeInfo\u003e notification) {\n+              @Nonnull RemovalNotification\u003cDatanodeInfo, DatanodeInfo\u003e\n+                  notification) {\n             LOG.info(\"Removing node \" + notification.getKey()\n                 + \" from the excluded nodes list\");\n           }\n         }).build(new CacheLoader\u003cDatanodeInfo, DatanodeInfo\u003e() {\n           @Override\n           public DatanodeInfo load(DatanodeInfo key) throws Exception {\n             return key;\n           }\n         });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static LoadingCache\u003cDatanodeInfo, DatanodeInfo\u003e initExcludedNodes(\n      long excludedNodesCacheExpiry) {\n    return CacheBuilder.newBuilder()\n        .expireAfterWrite(excludedNodesCacheExpiry, TimeUnit.MILLISECONDS)\n        .removalListener(new RemovalListener\u003cDatanodeInfo, DatanodeInfo\u003e() {\n          @Override\n          public void onRemoval(\n              @Nonnull RemovalNotification\u003cDatanodeInfo, DatanodeInfo\u003e\n                  notification) {\n            LOG.info(\"Removing node \" + notification.getKey()\n                + \" from the excluded nodes list\");\n          }\n        }).build(new CacheLoader\u003cDatanodeInfo, DatanodeInfo\u003e() {\n          @Override\n          public DatanodeInfo load(DatanodeInfo key) throws Exception {\n            return key;\n          }\n        });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
      "extendedDetails": {}
    },
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8053. Move DFSIn/OutputStream and related classes to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "26/09/15 11:08 AM",
      "commitName": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/09/15 9:06 AM",
      "commitNameOld": "861b52db242f238d7e36ad75c158025be959a696",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static LoadingCache\u003cDatanodeInfo, DatanodeInfo\u003e initExcludedNodes(\n      long excludedNodesCacheExpiry) {\n    return CacheBuilder.newBuilder()\n        .expireAfterWrite(excludedNodesCacheExpiry, TimeUnit.MILLISECONDS)\n        .removalListener(new RemovalListener\u003cDatanodeInfo, DatanodeInfo\u003e() {\n          @Override\n          public void onRemoval(\n              RemovalNotification\u003cDatanodeInfo, DatanodeInfo\u003e notification) {\n            LOG.info(\"Removing node \" + notification.getKey()\n                + \" from the excluded nodes list\");\n          }\n        }).build(new CacheLoader\u003cDatanodeInfo, DatanodeInfo\u003e() {\n          @Override\n          public DatanodeInfo load(DatanodeInfo key) throws Exception {\n            return key;\n          }\n        });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java"
      }
    },
    "8f378733423a5244461df79a92c00239514b8b93": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-8397. Refactor the error handling code in DataStreamer. Contributed by Tsz Wo Nicholas Sze.\n",
      "commitDate": "15/05/15 4:14 PM",
      "commitName": "8f378733423a5244461df79a92c00239514b8b93",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8397. Refactor the error handling code in DataStreamer. Contributed by Tsz Wo Nicholas Sze.\n",
          "commitDate": "15/05/15 4:14 PM",
          "commitName": "8f378733423a5244461df79a92c00239514b8b93",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "08/05/15 12:11 AM",
          "commitNameOld": "730f9930a48259f34e48404aee51e8d641cc3d36",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 7.67,
          "commitsBetweenForRepo": 95,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private LoadingCache\u003cDatanodeInfo, DatanodeInfo\u003e initExcludedNodes() {\n-    return CacheBuilder.newBuilder().expireAfterWrite(\n-        dfsClient.getConf().getExcludedNodesCacheExpiry(),\n-        TimeUnit.MILLISECONDS)\n+  private static LoadingCache\u003cDatanodeInfo, DatanodeInfo\u003e initExcludedNodes(\n+      long excludedNodesCacheExpiry) {\n+    return CacheBuilder.newBuilder()\n+        .expireAfterWrite(excludedNodesCacheExpiry, TimeUnit.MILLISECONDS)\n         .removalListener(new RemovalListener\u003cDatanodeInfo, DatanodeInfo\u003e() {\n           @Override\n           public void onRemoval(\n               RemovalNotification\u003cDatanodeInfo, DatanodeInfo\u003e notification) {\n             LOG.info(\"Removing node \" + notification.getKey()\n                 + \" from the excluded nodes list\");\n           }\n         }).build(new CacheLoader\u003cDatanodeInfo, DatanodeInfo\u003e() {\n           @Override\n           public DatanodeInfo load(DatanodeInfo key) throws Exception {\n             return key;\n           }\n         });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static LoadingCache\u003cDatanodeInfo, DatanodeInfo\u003e initExcludedNodes(\n      long excludedNodesCacheExpiry) {\n    return CacheBuilder.newBuilder()\n        .expireAfterWrite(excludedNodesCacheExpiry, TimeUnit.MILLISECONDS)\n        .removalListener(new RemovalListener\u003cDatanodeInfo, DatanodeInfo\u003e() {\n          @Override\n          public void onRemoval(\n              RemovalNotification\u003cDatanodeInfo, DatanodeInfo\u003e notification) {\n            LOG.info(\"Removing node \" + notification.getKey()\n                + \" from the excluded nodes list\");\n          }\n        }).build(new CacheLoader\u003cDatanodeInfo, DatanodeInfo\u003e() {\n          @Override\n          public DatanodeInfo load(DatanodeInfo key) throws Exception {\n            return key;\n          }\n        });\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[excludedNodesCacheExpiry-long]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-8397. Refactor the error handling code in DataStreamer. Contributed by Tsz Wo Nicholas Sze.\n",
          "commitDate": "15/05/15 4:14 PM",
          "commitName": "8f378733423a5244461df79a92c00239514b8b93",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "08/05/15 12:11 AM",
          "commitNameOld": "730f9930a48259f34e48404aee51e8d641cc3d36",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 7.67,
          "commitsBetweenForRepo": 95,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private LoadingCache\u003cDatanodeInfo, DatanodeInfo\u003e initExcludedNodes() {\n-    return CacheBuilder.newBuilder().expireAfterWrite(\n-        dfsClient.getConf().getExcludedNodesCacheExpiry(),\n-        TimeUnit.MILLISECONDS)\n+  private static LoadingCache\u003cDatanodeInfo, DatanodeInfo\u003e initExcludedNodes(\n+      long excludedNodesCacheExpiry) {\n+    return CacheBuilder.newBuilder()\n+        .expireAfterWrite(excludedNodesCacheExpiry, TimeUnit.MILLISECONDS)\n         .removalListener(new RemovalListener\u003cDatanodeInfo, DatanodeInfo\u003e() {\n           @Override\n           public void onRemoval(\n               RemovalNotification\u003cDatanodeInfo, DatanodeInfo\u003e notification) {\n             LOG.info(\"Removing node \" + notification.getKey()\n                 + \" from the excluded nodes list\");\n           }\n         }).build(new CacheLoader\u003cDatanodeInfo, DatanodeInfo\u003e() {\n           @Override\n           public DatanodeInfo load(DatanodeInfo key) throws Exception {\n             return key;\n           }\n         });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static LoadingCache\u003cDatanodeInfo, DatanodeInfo\u003e initExcludedNodes(\n      long excludedNodesCacheExpiry) {\n    return CacheBuilder.newBuilder()\n        .expireAfterWrite(excludedNodesCacheExpiry, TimeUnit.MILLISECONDS)\n        .removalListener(new RemovalListener\u003cDatanodeInfo, DatanodeInfo\u003e() {\n          @Override\n          public void onRemoval(\n              RemovalNotification\u003cDatanodeInfo, DatanodeInfo\u003e notification) {\n            LOG.info(\"Removing node \" + notification.getKey()\n                + \" from the excluded nodes list\");\n          }\n        }).build(new CacheLoader\u003cDatanodeInfo, DatanodeInfo\u003e() {\n          @Override\n          public DatanodeInfo load(DatanodeInfo key) throws Exception {\n            return key;\n          }\n        });\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8397. Refactor the error handling code in DataStreamer. Contributed by Tsz Wo Nicholas Sze.\n",
          "commitDate": "15/05/15 4:14 PM",
          "commitName": "8f378733423a5244461df79a92c00239514b8b93",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "08/05/15 12:11 AM",
          "commitNameOld": "730f9930a48259f34e48404aee51e8d641cc3d36",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 7.67,
          "commitsBetweenForRepo": 95,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private LoadingCache\u003cDatanodeInfo, DatanodeInfo\u003e initExcludedNodes() {\n-    return CacheBuilder.newBuilder().expireAfterWrite(\n-        dfsClient.getConf().getExcludedNodesCacheExpiry(),\n-        TimeUnit.MILLISECONDS)\n+  private static LoadingCache\u003cDatanodeInfo, DatanodeInfo\u003e initExcludedNodes(\n+      long excludedNodesCacheExpiry) {\n+    return CacheBuilder.newBuilder()\n+        .expireAfterWrite(excludedNodesCacheExpiry, TimeUnit.MILLISECONDS)\n         .removalListener(new RemovalListener\u003cDatanodeInfo, DatanodeInfo\u003e() {\n           @Override\n           public void onRemoval(\n               RemovalNotification\u003cDatanodeInfo, DatanodeInfo\u003e notification) {\n             LOG.info(\"Removing node \" + notification.getKey()\n                 + \" from the excluded nodes list\");\n           }\n         }).build(new CacheLoader\u003cDatanodeInfo, DatanodeInfo\u003e() {\n           @Override\n           public DatanodeInfo load(DatanodeInfo key) throws Exception {\n             return key;\n           }\n         });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static LoadingCache\u003cDatanodeInfo, DatanodeInfo\u003e initExcludedNodes(\n      long excludedNodesCacheExpiry) {\n    return CacheBuilder.newBuilder()\n        .expireAfterWrite(excludedNodesCacheExpiry, TimeUnit.MILLISECONDS)\n        .removalListener(new RemovalListener\u003cDatanodeInfo, DatanodeInfo\u003e() {\n          @Override\n          public void onRemoval(\n              RemovalNotification\u003cDatanodeInfo, DatanodeInfo\u003e notification) {\n            LOG.info(\"Removing node \" + notification.getKey()\n                + \" from the excluded nodes list\");\n          }\n        }).build(new CacheLoader\u003cDatanodeInfo, DatanodeInfo\u003e() {\n          @Override\n          public DatanodeInfo load(DatanodeInfo key) throws Exception {\n            return key;\n          }\n        });\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
          "extendedDetails": {}
        }
      ]
    },
    "7947e5b53b9ac9524b535b0384c1c355b74723ff": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8283. DataStreamer cleanup and some minor improvement. Contributed by Tsz Wo Nicholas Sze.\n",
      "commitDate": "29/04/15 10:41 AM",
      "commitName": "7947e5b53b9ac9524b535b0384c1c355b74723ff",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "24/04/15 12:21 AM",
      "commitNameOld": "c8d72907ff5a4cb9ce1effca8ad9b69689d11d1d",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 5.43,
      "commitsBetweenForRepo": 43,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private LoadingCache\u003cDatanodeInfo, DatanodeInfo\u003e initExcludedNodes() {\n     return CacheBuilder.newBuilder().expireAfterWrite(\n         dfsClient.getConf().getExcludedNodesCacheExpiry(),\n         TimeUnit.MILLISECONDS)\n         .removalListener(new RemovalListener\u003cDatanodeInfo, DatanodeInfo\u003e() {\n           @Override\n           public void onRemoval(\n               RemovalNotification\u003cDatanodeInfo, DatanodeInfo\u003e notification) {\n-            DFSClient.LOG.info(\"Removing node \" + notification.getKey()\n+            LOG.info(\"Removing node \" + notification.getKey()\n                 + \" from the excluded nodes list\");\n           }\n         }).build(new CacheLoader\u003cDatanodeInfo, DatanodeInfo\u003e() {\n           @Override\n           public DatanodeInfo load(DatanodeInfo key) throws Exception {\n             return key;\n           }\n         });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private LoadingCache\u003cDatanodeInfo, DatanodeInfo\u003e initExcludedNodes() {\n    return CacheBuilder.newBuilder().expireAfterWrite(\n        dfsClient.getConf().getExcludedNodesCacheExpiry(),\n        TimeUnit.MILLISECONDS)\n        .removalListener(new RemovalListener\u003cDatanodeInfo, DatanodeInfo\u003e() {\n          @Override\n          public void onRemoval(\n              RemovalNotification\u003cDatanodeInfo, DatanodeInfo\u003e notification) {\n            LOG.info(\"Removing node \" + notification.getKey()\n                + \" from the excluded nodes list\");\n          }\n        }).build(new CacheLoader\u003cDatanodeInfo, DatanodeInfo\u003e() {\n          @Override\n          public DatanodeInfo load(DatanodeInfo key) throws Exception {\n            return key;\n          }\n        });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
      "extendedDetails": {}
    },
    "2cc9514ad643ae49d30524743420ee9744e571bd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8100. Refactor DFSClient.Conf to a standalone class and separates short-circuit related conf to ShortCircuitConf.\n",
      "commitDate": "10/04/15 2:48 PM",
      "commitName": "2cc9514ad643ae49d30524743420ee9744e571bd",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "07/04/15 1:59 PM",
      "commitNameOld": "571a1ce9d037d99e7c9042bcb77ae7a2c4daf6d3",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 3.03,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   private LoadingCache\u003cDatanodeInfo, DatanodeInfo\u003e initExcludedNodes() {\n     return CacheBuilder.newBuilder().expireAfterWrite(\n-        dfsClient.getConf().excludedNodesCacheExpiry, TimeUnit.MILLISECONDS)\n+        dfsClient.getConf().getExcludedNodesCacheExpiry(),\n+        TimeUnit.MILLISECONDS)\n         .removalListener(new RemovalListener\u003cDatanodeInfo, DatanodeInfo\u003e() {\n           @Override\n           public void onRemoval(\n               RemovalNotification\u003cDatanodeInfo, DatanodeInfo\u003e notification) {\n             DFSClient.LOG.info(\"Removing node \" + notification.getKey()\n                 + \" from the excluded nodes list\");\n           }\n         }).build(new CacheLoader\u003cDatanodeInfo, DatanodeInfo\u003e() {\n           @Override\n           public DatanodeInfo load(DatanodeInfo key) throws Exception {\n             return key;\n           }\n         });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private LoadingCache\u003cDatanodeInfo, DatanodeInfo\u003e initExcludedNodes() {\n    return CacheBuilder.newBuilder().expireAfterWrite(\n        dfsClient.getConf().getExcludedNodesCacheExpiry(),\n        TimeUnit.MILLISECONDS)\n        .removalListener(new RemovalListener\u003cDatanodeInfo, DatanodeInfo\u003e() {\n          @Override\n          public void onRemoval(\n              RemovalNotification\u003cDatanodeInfo, DatanodeInfo\u003e notification) {\n            DFSClient.LOG.info(\"Removing node \" + notification.getKey()\n                + \" from the excluded nodes list\");\n          }\n        }).build(new CacheLoader\u003cDatanodeInfo, DatanodeInfo\u003e() {\n          @Override\n          public DatanodeInfo load(DatanodeInfo key) throws Exception {\n            return key;\n          }\n        });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
      "extendedDetails": {}
    },
    "a16bfff71bd7f00e06e1f59bfe5445a154bb8c66": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7854. Separate class DataStreamer out of DFSOutputStream. Contributed by Li Bo.\n",
      "commitDate": "24/03/15 11:06 AM",
      "commitName": "a16bfff71bd7f00e06e1f59bfe5445a154bb8c66",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,17 @@\n+  private LoadingCache\u003cDatanodeInfo, DatanodeInfo\u003e initExcludedNodes() {\n+    return CacheBuilder.newBuilder().expireAfterWrite(\n+        dfsClient.getConf().excludedNodesCacheExpiry, TimeUnit.MILLISECONDS)\n+        .removalListener(new RemovalListener\u003cDatanodeInfo, DatanodeInfo\u003e() {\n+          @Override\n+          public void onRemoval(\n+              RemovalNotification\u003cDatanodeInfo, DatanodeInfo\u003e notification) {\n+            DFSClient.LOG.info(\"Removing node \" + notification.getKey()\n+                + \" from the excluded nodes list\");\n+          }\n+        }).build(new CacheLoader\u003cDatanodeInfo, DatanodeInfo\u003e() {\n+          @Override\n+          public DatanodeInfo load(DatanodeInfo key) throws Exception {\n+            return key;\n+          }\n+        });\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private LoadingCache\u003cDatanodeInfo, DatanodeInfo\u003e initExcludedNodes() {\n    return CacheBuilder.newBuilder().expireAfterWrite(\n        dfsClient.getConf().excludedNodesCacheExpiry, TimeUnit.MILLISECONDS)\n        .removalListener(new RemovalListener\u003cDatanodeInfo, DatanodeInfo\u003e() {\n          @Override\n          public void onRemoval(\n              RemovalNotification\u003cDatanodeInfo, DatanodeInfo\u003e notification) {\n            DFSClient.LOG.info(\"Removing node \" + notification.getKey()\n                + \" from the excluded nodes list\");\n          }\n        }).build(new CacheLoader\u003cDatanodeInfo, DatanodeInfo\u003e() {\n          @Override\n          public DatanodeInfo load(DatanodeInfo key) throws Exception {\n            return key;\n          }\n        });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java"
    }
  }
}