{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSConfigToCSConfigArgumentHandler.java",
  "functionName": "validateInputFiles",
  "functionId": "validateInputFiles___cliParser-CommandLine",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigArgumentHandler.java",
  "functionStartLine": 233,
  "functionEndLine": 262,
  "numCommitsSeen": 9,
  "timeTaken": 2307,
  "changeHistory": [
    "c0d084247c0d1b7b701bc82e8847096912e5d8a0",
    "d68616b0453881bec8dcb917a0b7d3fbe0838965",
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d"
  ],
  "changeHistoryShort": {
    "c0d084247c0d1b7b701bc82e8847096912e5d8a0": "Ybodychange",
    "d68616b0453881bec8dcb917a0b7d3fbe0838965": "Ybodychange",
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c0d084247c0d1b7b701bc82e8847096912e5d8a0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10175. FS-CS converter: only convert placement rules if a cmd line switch is defined. Contributed by Peter Bacsko\n",
      "commitDate": "03/03/20 12:46 AM",
      "commitName": "c0d084247c0d1b7b701bc82e8847096912e5d8a0",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "25/02/20 12:30 PM",
      "commitNameOld": "d68616b0453881bec8dcb917a0b7d3fbe0838965",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 6.51,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,30 @@\n   private FSConfigToCSConfigConverterParams validateInputFiles(\n       CommandLine cliParser) {\n     String yarnSiteXmlFile \u003d\n         cliParser.getOptionValue(CliOption.YARN_SITE.shortSwitch);\n     String fairSchedulerXmlFile \u003d\n         cliParser.getOptionValue(CliOption.FAIR_SCHEDULER.shortSwitch);\n     String conversionRulesFile \u003d\n         cliParser.getOptionValue(CliOption.CONVERSION_RULES.shortSwitch);\n     String outputDir \u003d\n         cliParser.getOptionValue(CliOption.OUTPUT_DIR.shortSwitch);\n+    boolean convertPlacementRules \u003d\n+        cliParser.hasOption(CliOption.CONVERT_PLACEMENT_RULES.shortSwitch);\n \n     checkFile(CliOption.YARN_SITE, yarnSiteXmlFile);\n     checkFile(CliOption.FAIR_SCHEDULER, fairSchedulerXmlFile);\n     checkFile(CliOption.CONVERSION_RULES, conversionRulesFile);\n     checkDirectory(CliOption.OUTPUT_DIR, outputDir);\n     checkOutputDirDoesNotContainXmls(yarnSiteXmlFile, outputDir);\n \n     return FSConfigToCSConfigConverterParams.Builder.create()\n         .withYarnSiteXmlConfig(yarnSiteXmlFile)\n         .withFairSchedulerXmlConfig(fairSchedulerXmlFile)\n         .withConversionRulesConfig(conversionRulesFile)\n         .withClusterResource(\n             cliParser.getOptionValue(CliOption.CLUSTER_RESOURCE.shortSwitch))\n         .withConsole(cliParser.hasOption(CliOption.CONSOLE_MODE.shortSwitch))\n         .withOutputDirectory(outputDir)\n+        .withConvertPlacementRules(convertPlacementRules)\n         .build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FSConfigToCSConfigConverterParams validateInputFiles(\n      CommandLine cliParser) {\n    String yarnSiteXmlFile \u003d\n        cliParser.getOptionValue(CliOption.YARN_SITE.shortSwitch);\n    String fairSchedulerXmlFile \u003d\n        cliParser.getOptionValue(CliOption.FAIR_SCHEDULER.shortSwitch);\n    String conversionRulesFile \u003d\n        cliParser.getOptionValue(CliOption.CONVERSION_RULES.shortSwitch);\n    String outputDir \u003d\n        cliParser.getOptionValue(CliOption.OUTPUT_DIR.shortSwitch);\n    boolean convertPlacementRules \u003d\n        cliParser.hasOption(CliOption.CONVERT_PLACEMENT_RULES.shortSwitch);\n\n    checkFile(CliOption.YARN_SITE, yarnSiteXmlFile);\n    checkFile(CliOption.FAIR_SCHEDULER, fairSchedulerXmlFile);\n    checkFile(CliOption.CONVERSION_RULES, conversionRulesFile);\n    checkDirectory(CliOption.OUTPUT_DIR, outputDir);\n    checkOutputDirDoesNotContainXmls(yarnSiteXmlFile, outputDir);\n\n    return FSConfigToCSConfigConverterParams.Builder.create()\n        .withYarnSiteXmlConfig(yarnSiteXmlFile)\n        .withFairSchedulerXmlConfig(fairSchedulerXmlFile)\n        .withConversionRulesConfig(conversionRulesFile)\n        .withClusterResource(\n            cliParser.getOptionValue(CliOption.CLUSTER_RESOURCE.shortSwitch))\n        .withConsole(cliParser.hasOption(CliOption.CONSOLE_MODE.shortSwitch))\n        .withOutputDirectory(outputDir)\n        .withConvertPlacementRules(convertPlacementRules)\n        .build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigArgumentHandler.java",
      "extendedDetails": {}
    },
    "d68616b0453881bec8dcb917a0b7d3fbe0838965": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10130. FS-CS converter: Do not allow output dir to be the same as input dir. Contributed by Adam Antal\n",
      "commitDate": "25/02/20 12:30 PM",
      "commitName": "d68616b0453881bec8dcb917a0b7d3fbe0838965",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "28/01/20 6:36 AM",
      "commitNameOld": "94f060242ec8bf9d548b38c909ca8e2a59f606e3",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 28.25,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   private FSConfigToCSConfigConverterParams validateInputFiles(\n       CommandLine cliParser) {\n     String yarnSiteXmlFile \u003d\n         cliParser.getOptionValue(CliOption.YARN_SITE.shortSwitch);\n     String fairSchedulerXmlFile \u003d\n         cliParser.getOptionValue(CliOption.FAIR_SCHEDULER.shortSwitch);\n     String conversionRulesFile \u003d\n         cliParser.getOptionValue(CliOption.CONVERSION_RULES.shortSwitch);\n     String outputDir \u003d\n         cliParser.getOptionValue(CliOption.OUTPUT_DIR.shortSwitch);\n \n     checkFile(CliOption.YARN_SITE, yarnSiteXmlFile);\n     checkFile(CliOption.FAIR_SCHEDULER, fairSchedulerXmlFile);\n     checkFile(CliOption.CONVERSION_RULES, conversionRulesFile);\n     checkDirectory(CliOption.OUTPUT_DIR, outputDir);\n+    checkOutputDirDoesNotContainXmls(yarnSiteXmlFile, outputDir);\n \n     return FSConfigToCSConfigConverterParams.Builder.create()\n         .withYarnSiteXmlConfig(yarnSiteXmlFile)\n         .withFairSchedulerXmlConfig(fairSchedulerXmlFile)\n         .withConversionRulesConfig(conversionRulesFile)\n         .withClusterResource(\n             cliParser.getOptionValue(CliOption.CLUSTER_RESOURCE.shortSwitch))\n         .withConsole(cliParser.hasOption(CliOption.CONSOLE_MODE.shortSwitch))\n         .withOutputDirectory(outputDir)\n         .build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FSConfigToCSConfigConverterParams validateInputFiles(\n      CommandLine cliParser) {\n    String yarnSiteXmlFile \u003d\n        cliParser.getOptionValue(CliOption.YARN_SITE.shortSwitch);\n    String fairSchedulerXmlFile \u003d\n        cliParser.getOptionValue(CliOption.FAIR_SCHEDULER.shortSwitch);\n    String conversionRulesFile \u003d\n        cliParser.getOptionValue(CliOption.CONVERSION_RULES.shortSwitch);\n    String outputDir \u003d\n        cliParser.getOptionValue(CliOption.OUTPUT_DIR.shortSwitch);\n\n    checkFile(CliOption.YARN_SITE, yarnSiteXmlFile);\n    checkFile(CliOption.FAIR_SCHEDULER, fairSchedulerXmlFile);\n    checkFile(CliOption.CONVERSION_RULES, conversionRulesFile);\n    checkDirectory(CliOption.OUTPUT_DIR, outputDir);\n    checkOutputDirDoesNotContainXmls(yarnSiteXmlFile, outputDir);\n\n    return FSConfigToCSConfigConverterParams.Builder.create()\n        .withYarnSiteXmlConfig(yarnSiteXmlFile)\n        .withFairSchedulerXmlConfig(fairSchedulerXmlFile)\n        .withConversionRulesConfig(conversionRulesFile)\n        .withClusterResource(\n            cliParser.getOptionValue(CliOption.CLUSTER_RESOURCE.shortSwitch))\n        .withConsole(cliParser.hasOption(CliOption.CONSOLE_MODE.shortSwitch))\n        .withOutputDirectory(outputDir)\n        .build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigArgumentHandler.java",
      "extendedDetails": {}
    },
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9699. Migration tool that help to generate CS config based on FS config [Phase 1]. Contributed by Peter Bacsko\n",
      "commitDate": "14/10/19 8:19 AM",
      "commitName": "5cc7873a4723a6c8e8e001d008fcd522eec0433d",
      "commitAuthor": "Szilard Nemeth",
      "diff": "@@ -0,0 +1,26 @@\n+  private FSConfigToCSConfigConverterParams validateInputFiles(\n+      CommandLine cliParser) {\n+    String yarnSiteXmlFile \u003d\n+        cliParser.getOptionValue(CliOption.YARN_SITE.shortSwitch);\n+    String fairSchedulerXmlFile \u003d\n+        cliParser.getOptionValue(CliOption.FAIR_SCHEDULER.shortSwitch);\n+    String conversionRulesFile \u003d\n+        cliParser.getOptionValue(CliOption.CONVERSION_RULES.shortSwitch);\n+    String outputDir \u003d\n+        cliParser.getOptionValue(CliOption.OUTPUT_DIR.shortSwitch);\n+\n+    checkFile(CliOption.YARN_SITE, yarnSiteXmlFile);\n+    checkFile(CliOption.FAIR_SCHEDULER, fairSchedulerXmlFile);\n+    checkFile(CliOption.CONVERSION_RULES, conversionRulesFile);\n+    checkDirectory(CliOption.OUTPUT_DIR, outputDir);\n+\n+    return FSConfigToCSConfigConverterParams.Builder.create()\n+        .withYarnSiteXmlConfig(yarnSiteXmlFile)\n+        .withFairSchedulerXmlConfig(fairSchedulerXmlFile)\n+        .withConversionRulesConfig(conversionRulesFile)\n+        .withClusterResource(\n+            cliParser.getOptionValue(CliOption.CLUSTER_RESOURCE.shortSwitch))\n+        .withConsole(cliParser.hasOption(CliOption.CONSOLE_MODE.shortSwitch))\n+        .withOutputDirectory(outputDir)\n+        .build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private FSConfigToCSConfigConverterParams validateInputFiles(\n      CommandLine cliParser) {\n    String yarnSiteXmlFile \u003d\n        cliParser.getOptionValue(CliOption.YARN_SITE.shortSwitch);\n    String fairSchedulerXmlFile \u003d\n        cliParser.getOptionValue(CliOption.FAIR_SCHEDULER.shortSwitch);\n    String conversionRulesFile \u003d\n        cliParser.getOptionValue(CliOption.CONVERSION_RULES.shortSwitch);\n    String outputDir \u003d\n        cliParser.getOptionValue(CliOption.OUTPUT_DIR.shortSwitch);\n\n    checkFile(CliOption.YARN_SITE, yarnSiteXmlFile);\n    checkFile(CliOption.FAIR_SCHEDULER, fairSchedulerXmlFile);\n    checkFile(CliOption.CONVERSION_RULES, conversionRulesFile);\n    checkDirectory(CliOption.OUTPUT_DIR, outputDir);\n\n    return FSConfigToCSConfigConverterParams.Builder.create()\n        .withYarnSiteXmlConfig(yarnSiteXmlFile)\n        .withFairSchedulerXmlConfig(fairSchedulerXmlFile)\n        .withConversionRulesConfig(conversionRulesFile)\n        .withClusterResource(\n            cliParser.getOptionValue(CliOption.CLUSTER_RESOURCE.shortSwitch))\n        .withConsole(cliParser.hasOption(CliOption.CONSOLE_MODE.shortSwitch))\n        .withOutputDirectory(outputDir)\n        .build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigArgumentHandler.java"
    }
  }
}