{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterAdmin.java",
  "functionName": "run",
  "functionId": "run___argv-String[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
  "functionStartLine": 282,
  "functionEndLine": 428,
  "numCommitsSeen": 36,
  "timeTaken": 8290,
  "changeHistory": [
    "8730a7bf6025a3b2b7d6e6686533283b854af192",
    "93bb368094e48e752c0732d979fbcd24e432bfc1",
    "c3abfcefdd256650b2a45ae2aac53c4a22721a46",
    "dd8c2b92df2d42fe8ee07032988fe1fb68161004",
    "8b8ff5ccbc677d98a91092b2fa64999a99d1595d",
    "f4e2bfce585d762eaf26096613d135203f080eb3",
    "8f6f9d9c8398567064c9369f48213db63f45538c",
    "41c94a636b1a6ede9fa9cabff5487d305d06b48f",
    "9315db5f5da09c2ef86be168465c16932afa2d85",
    "780df9034f265a8e602856b34cc21d9be02f5c48",
    "cb9d371ae2cda1624fc83316ddc09de37d8d0bd3",
    "75691ad600473d4d315434b0876d6d10d3050a6b",
    "09c9cf1d43b802dd62b532c3c7be0e21a0c9ad5c",
    "b6dae26f4490bbd03360b8df19ef00cf843430f3",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "b0627c891b0e90e29dab2bec64a01c2c2ffe4ed0",
    "d98a2e6e2383f8b66def346409b0517aa32d298d",
    "e040c97b7743469f363eeae52c8abcf4fe7c65d5",
    "b3e6bd22e3c02b3e4f50396538f56a1bcb007638"
  ],
  "changeHistoryShort": {
    "8730a7bf6025a3b2b7d6e6686533283b854af192": "Ybodychange",
    "93bb368094e48e752c0732d979fbcd24e432bfc1": "Ybodychange",
    "c3abfcefdd256650b2a45ae2aac53c4a22721a46": "Ybodychange",
    "dd8c2b92df2d42fe8ee07032988fe1fb68161004": "Ybodychange",
    "8b8ff5ccbc677d98a91092b2fa64999a99d1595d": "Ybodychange",
    "f4e2bfce585d762eaf26096613d135203f080eb3": "Ybodychange",
    "8f6f9d9c8398567064c9369f48213db63f45538c": "Ybodychange",
    "41c94a636b1a6ede9fa9cabff5487d305d06b48f": "Ybodychange",
    "9315db5f5da09c2ef86be168465c16932afa2d85": "Ybodychange",
    "780df9034f265a8e602856b34cc21d9be02f5c48": "Ybodychange",
    "cb9d371ae2cda1624fc83316ddc09de37d8d0bd3": "Ybodychange",
    "75691ad600473d4d315434b0876d6d10d3050a6b": "Ybodychange",
    "09c9cf1d43b802dd62b532c3c7be0e21a0c9ad5c": "Ybodychange",
    "b6dae26f4490bbd03360b8df19ef00cf843430f3": "Ybodychange",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Ymultichange(Yfilerename,Ybodychange)",
    "b0627c891b0e90e29dab2bec64a01c2c2ffe4ed0": "Ybodychange",
    "d98a2e6e2383f8b66def346409b0517aa32d298d": "Ybodychange",
    "e040c97b7743469f363eeae52c8abcf4fe7c65d5": "Ybodychange",
    "b3e6bd22e3c02b3e4f50396538f56a1bcb007638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8730a7bf6025a3b2b7d6e6686533283b854af192": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15003. RBF: Make Router support storage type quota. Contributed by Jinglun.\n",
      "commitDate": "26/12/19 7:52 PM",
      "commitName": "8730a7bf6025a3b2b7d6e6686533283b854af192",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "11/12/19 5:56 PM",
      "commitNameOld": "93bb368094e48e752c0732d979fbcd24e432bfc1",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 15.08,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,134 +1,147 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       System.err.println(\"Not enough parameters specified\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n     if (!validateMin(argv)) {\n       System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n       printUsage(cmd);\n       return exitCode;\n     }\n     String address \u003d null;\n     // Initialize RouterClient\n     try {\n       address \u003d getConf().getTrimmed(\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       validateMax(argv);\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n           System.out.println(\"Successfully added mount point \" + argv[i]);\n         } else {\n           exitCode \u003d -1;\n         }\n       } else if (\"-update\".equals(cmd)) {\n         if (updateMount(argv, i)) {\n           System.out.println(\"Successfully updated mount point \" + argv[i]);\n           System.out.println(\n               \"WARN: Changing order/destinations may lead to inconsistencies\");\n         } else {\n           exitCode \u003d -1;\n         }\n       } else if (\"-rm\".equals(cmd)) {\n         while (i \u003c argv.length) {\n           try {\n             if (removeMount(argv[i])) {\n               System.out.println(\"Successfully removed mount point \" + argv[i]);\n             }\n           } catch (IOException e) {\n             exitCode \u003d -1;\n             System.err\n                 .println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n           }\n           i++;\n         }\n       } else if (\"-ls\".equals(cmd)) {\n         listMounts(argv, i);\n       } else if (\"-getDestination\".equals(cmd)) {\n         getDestination(argv[i]);\n       } else if (\"-setQuota\".equals(cmd)) {\n         if (setQuota(argv, i)) {\n           System.out.println(\n               \"Successfully set quota for mount point \" + argv[i]);\n         }\n+      } else if (\"-setStorageTypeQuota\".equals(cmd)) {\n+        if (setStorageTypeQuota(argv, i)) {\n+          System.out.println(\n+              \"Successfully set storage type quota for mount point \" + argv[i]);\n+        }\n       } else if (\"-clrQuota\".equals(cmd)) {\n         while (i \u003c argv.length) {\n           if (clrQuota(argv[i])) {\n             System.out\n                 .println(\"Successfully clear quota for mount point \" + argv[i]);\n             i++;\n           }\n         }\n+      } else if (\"-clrStorageTypeQuota\".equals(cmd)) {\n+        while (i \u003c argv.length) {\n+          if (clrStorageTypeQuota(argv[i])) {\n+            System.out.println(\"Successfully clear storage type quota for mount\"\n+                + \" point \" + argv[i]);\n+            i++;\n+          }\n+        }\n       } else if (\"-safemode\".equals(cmd)) {\n         manageSafeMode(argv[i]);\n       } else if (\"-nameservice\".equals(cmd)) {\n         String subcmd \u003d argv[i];\n         String nsId \u003d argv[i + 1];\n         manageNameservice(subcmd, nsId);\n       } else if (\"-getDisabledNameservices\".equals(cmd)) {\n         getDisabledNameservices();\n       } else if (\"-refresh\".equals(cmd)) {\n         refresh(address);\n       } else if (\"-refreshRouterArgs\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else {\n         throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n     } catch (IOException ioe) {\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + ioe.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specified\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (!validateMin(argv)) {\n      System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n      printUsage(cmd);\n      return exitCode;\n    }\n    String address \u003d null;\n    // Initialize RouterClient\n    try {\n      address \u003d getConf().getTrimmed(\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      validateMax(argv);\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfully added mount point \" + argv[i]);\n        } else {\n          exitCode \u003d -1;\n        }\n      } else if (\"-update\".equals(cmd)) {\n        if (updateMount(argv, i)) {\n          System.out.println(\"Successfully updated mount point \" + argv[i]);\n          System.out.println(\n              \"WARN: Changing order/destinations may lead to inconsistencies\");\n        } else {\n          exitCode \u003d -1;\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        while (i \u003c argv.length) {\n          try {\n            if (removeMount(argv[i])) {\n              System.out.println(\"Successfully removed mount point \" + argv[i]);\n            }\n          } catch (IOException e) {\n            exitCode \u003d -1;\n            System.err\n                .println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n          }\n          i++;\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        listMounts(argv, i);\n      } else if (\"-getDestination\".equals(cmd)) {\n        getDestination(argv[i]);\n      } else if (\"-setQuota\".equals(cmd)) {\n        if (setQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set quota for mount point \" + argv[i]);\n        }\n      } else if (\"-setStorageTypeQuota\".equals(cmd)) {\n        if (setStorageTypeQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set storage type quota for mount point \" + argv[i]);\n        }\n      } else if (\"-clrQuota\".equals(cmd)) {\n        while (i \u003c argv.length) {\n          if (clrQuota(argv[i])) {\n            System.out\n                .println(\"Successfully clear quota for mount point \" + argv[i]);\n            i++;\n          }\n        }\n      } else if (\"-clrStorageTypeQuota\".equals(cmd)) {\n        while (i \u003c argv.length) {\n          if (clrStorageTypeQuota(argv[i])) {\n            System.out.println(\"Successfully clear storage type quota for mount\"\n                + \" point \" + argv[i]);\n            i++;\n          }\n        }\n      } else if (\"-safemode\".equals(cmd)) {\n        manageSafeMode(argv[i]);\n      } else if (\"-nameservice\".equals(cmd)) {\n        String subcmd \u003d argv[i];\n        String nsId \u003d argv[i + 1];\n        manageNameservice(subcmd, nsId);\n      } else if (\"-getDisabledNameservices\".equals(cmd)) {\n        getDisabledNameservices();\n      } else if (\"-refresh\".equals(cmd)) {\n        refresh(address);\n      } else if (\"-refreshRouterArgs\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else {\n        throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (IOException ioe) {\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + ioe.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "93bb368094e48e752c0732d979fbcd24e432bfc1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14983. RBF: Add dfsrouteradmin -refreshSuperUserGroupsConfiguration command option. Contributed by Xieming Li\n",
      "commitDate": "11/12/19 5:56 PM",
      "commitName": "93bb368094e48e752c0732d979fbcd24e432bfc1",
      "commitAuthor": "Takanobu Asanuma",
      "commitDateOld": "21/11/19 10:12 PM",
      "commitNameOld": "c422e36397920311bd2823deb0206a97cf288bf0",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 19.82,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,132 +1,134 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       System.err.println(\"Not enough parameters specified\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n     if (!validateMin(argv)) {\n       System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n       printUsage(cmd);\n       return exitCode;\n     }\n     String address \u003d null;\n     // Initialize RouterClient\n     try {\n       address \u003d getConf().getTrimmed(\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       validateMax(argv);\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n           System.out.println(\"Successfully added mount point \" + argv[i]);\n         } else {\n           exitCode \u003d -1;\n         }\n       } else if (\"-update\".equals(cmd)) {\n         if (updateMount(argv, i)) {\n           System.out.println(\"Successfully updated mount point \" + argv[i]);\n           System.out.println(\n               \"WARN: Changing order/destinations may lead to inconsistencies\");\n         } else {\n           exitCode \u003d -1;\n         }\n       } else if (\"-rm\".equals(cmd)) {\n         while (i \u003c argv.length) {\n           try {\n             if (removeMount(argv[i])) {\n               System.out.println(\"Successfully removed mount point \" + argv[i]);\n             }\n           } catch (IOException e) {\n             exitCode \u003d -1;\n             System.err\n                 .println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n           }\n           i++;\n         }\n       } else if (\"-ls\".equals(cmd)) {\n         listMounts(argv, i);\n       } else if (\"-getDestination\".equals(cmd)) {\n         getDestination(argv[i]);\n       } else if (\"-setQuota\".equals(cmd)) {\n         if (setQuota(argv, i)) {\n           System.out.println(\n               \"Successfully set quota for mount point \" + argv[i]);\n         }\n       } else if (\"-clrQuota\".equals(cmd)) {\n         while (i \u003c argv.length) {\n           if (clrQuota(argv[i])) {\n             System.out\n                 .println(\"Successfully clear quota for mount point \" + argv[i]);\n             i++;\n           }\n         }\n       } else if (\"-safemode\".equals(cmd)) {\n         manageSafeMode(argv[i]);\n       } else if (\"-nameservice\".equals(cmd)) {\n         String subcmd \u003d argv[i];\n         String nsId \u003d argv[i + 1];\n         manageNameservice(subcmd, nsId);\n       } else if (\"-getDisabledNameservices\".equals(cmd)) {\n         getDisabledNameservices();\n       } else if (\"-refresh\".equals(cmd)) {\n         refresh(address);\n       } else if (\"-refreshRouterArgs\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n+      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n+        exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else {\n         throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n     } catch (IOException ioe) {\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + ioe.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specified\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (!validateMin(argv)) {\n      System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n      printUsage(cmd);\n      return exitCode;\n    }\n    String address \u003d null;\n    // Initialize RouterClient\n    try {\n      address \u003d getConf().getTrimmed(\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      validateMax(argv);\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfully added mount point \" + argv[i]);\n        } else {\n          exitCode \u003d -1;\n        }\n      } else if (\"-update\".equals(cmd)) {\n        if (updateMount(argv, i)) {\n          System.out.println(\"Successfully updated mount point \" + argv[i]);\n          System.out.println(\n              \"WARN: Changing order/destinations may lead to inconsistencies\");\n        } else {\n          exitCode \u003d -1;\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        while (i \u003c argv.length) {\n          try {\n            if (removeMount(argv[i])) {\n              System.out.println(\"Successfully removed mount point \" + argv[i]);\n            }\n          } catch (IOException e) {\n            exitCode \u003d -1;\n            System.err\n                .println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n          }\n          i++;\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        listMounts(argv, i);\n      } else if (\"-getDestination\".equals(cmd)) {\n        getDestination(argv[i]);\n      } else if (\"-setQuota\".equals(cmd)) {\n        if (setQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set quota for mount point \" + argv[i]);\n        }\n      } else if (\"-clrQuota\".equals(cmd)) {\n        while (i \u003c argv.length) {\n          if (clrQuota(argv[i])) {\n            System.out\n                .println(\"Successfully clear quota for mount point \" + argv[i]);\n            i++;\n          }\n        }\n      } else if (\"-safemode\".equals(cmd)) {\n        manageSafeMode(argv[i]);\n      } else if (\"-nameservice\".equals(cmd)) {\n        String subcmd \u003d argv[i];\n        String nsId \u003d argv[i + 1];\n        manageNameservice(subcmd, nsId);\n      } else if (\"-getDisabledNameservices\".equals(cmd)) {\n        getDisabledNameservices();\n      } else if (\"-refresh\".equals(cmd)) {\n        refresh(address);\n      } else if (\"-refreshRouterArgs\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else {\n        throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (IOException ioe) {\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + ioe.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "c3abfcefdd256650b2a45ae2aac53c4a22721a46": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13843. RBF: Add optional parameter -d for detailed listing of mount points. Contributed by Ayush Saxena.\n",
      "commitDate": "01/09/19 6:54 PM",
      "commitName": "c3abfcefdd256650b2a45ae2aac53c4a22721a46",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "14/08/19 8:14 AM",
      "commitNameOld": "b06c2345efffde2955b8c2d5fd954ad73b5d8677",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 18.44,
      "commitsBetweenForRepo": 175,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,136 +1,132 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       System.err.println(\"Not enough parameters specified\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n     if (!validateMin(argv)) {\n       System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n       printUsage(cmd);\n       return exitCode;\n     }\n     String address \u003d null;\n     // Initialize RouterClient\n     try {\n       address \u003d getConf().getTrimmed(\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       validateMax(argv);\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n           System.out.println(\"Successfully added mount point \" + argv[i]);\n         } else {\n           exitCode \u003d -1;\n         }\n       } else if (\"-update\".equals(cmd)) {\n         if (updateMount(argv, i)) {\n           System.out.println(\"Successfully updated mount point \" + argv[i]);\n           System.out.println(\n               \"WARN: Changing order/destinations may lead to inconsistencies\");\n         } else {\n           exitCode \u003d -1;\n         }\n       } else if (\"-rm\".equals(cmd)) {\n         while (i \u003c argv.length) {\n           try {\n             if (removeMount(argv[i])) {\n               System.out.println(\"Successfully removed mount point \" + argv[i]);\n             }\n           } catch (IOException e) {\n             exitCode \u003d -1;\n             System.err\n                 .println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n           }\n           i++;\n         }\n       } else if (\"-ls\".equals(cmd)) {\n-        if (argv.length \u003e 1) {\n-          listMounts(argv[i]);\n-        } else {\n-          listMounts(\"/\");\n-        }\n+        listMounts(argv, i);\n       } else if (\"-getDestination\".equals(cmd)) {\n         getDestination(argv[i]);\n       } else if (\"-setQuota\".equals(cmd)) {\n         if (setQuota(argv, i)) {\n           System.out.println(\n               \"Successfully set quota for mount point \" + argv[i]);\n         }\n       } else if (\"-clrQuota\".equals(cmd)) {\n         while (i \u003c argv.length) {\n           if (clrQuota(argv[i])) {\n             System.out\n                 .println(\"Successfully clear quota for mount point \" + argv[i]);\n             i++;\n           }\n         }\n       } else if (\"-safemode\".equals(cmd)) {\n         manageSafeMode(argv[i]);\n       } else if (\"-nameservice\".equals(cmd)) {\n         String subcmd \u003d argv[i];\n         String nsId \u003d argv[i + 1];\n         manageNameservice(subcmd, nsId);\n       } else if (\"-getDisabledNameservices\".equals(cmd)) {\n         getDisabledNameservices();\n       } else if (\"-refresh\".equals(cmd)) {\n         refresh(address);\n       } else if (\"-refreshRouterArgs\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else {\n         throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n     } catch (IOException ioe) {\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + ioe.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specified\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (!validateMin(argv)) {\n      System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n      printUsage(cmd);\n      return exitCode;\n    }\n    String address \u003d null;\n    // Initialize RouterClient\n    try {\n      address \u003d getConf().getTrimmed(\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      validateMax(argv);\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfully added mount point \" + argv[i]);\n        } else {\n          exitCode \u003d -1;\n        }\n      } else if (\"-update\".equals(cmd)) {\n        if (updateMount(argv, i)) {\n          System.out.println(\"Successfully updated mount point \" + argv[i]);\n          System.out.println(\n              \"WARN: Changing order/destinations may lead to inconsistencies\");\n        } else {\n          exitCode \u003d -1;\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        while (i \u003c argv.length) {\n          try {\n            if (removeMount(argv[i])) {\n              System.out.println(\"Successfully removed mount point \" + argv[i]);\n            }\n          } catch (IOException e) {\n            exitCode \u003d -1;\n            System.err\n                .println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n          }\n          i++;\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        listMounts(argv, i);\n      } else if (\"-getDestination\".equals(cmd)) {\n        getDestination(argv[i]);\n      } else if (\"-setQuota\".equals(cmd)) {\n        if (setQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set quota for mount point \" + argv[i]);\n        }\n      } else if (\"-clrQuota\".equals(cmd)) {\n        while (i \u003c argv.length) {\n          if (clrQuota(argv[i])) {\n            System.out\n                .println(\"Successfully clear quota for mount point \" + argv[i]);\n            i++;\n          }\n        }\n      } else if (\"-safemode\".equals(cmd)) {\n        manageSafeMode(argv[i]);\n      } else if (\"-nameservice\".equals(cmd)) {\n        String subcmd \u003d argv[i];\n        String nsId \u003d argv[i + 1];\n        manageNameservice(subcmd, nsId);\n      } else if (\"-getDisabledNameservices\".equals(cmd)) {\n        getDisabledNameservices();\n      } else if (\"-refresh\".equals(cmd)) {\n        refresh(address);\n      } else if (\"-refreshRouterArgs\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else {\n        throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (IOException ioe) {\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + ioe.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "dd8c2b92df2d42fe8ee07032988fe1fb68161004": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13853. RBF: RouterAdmin update cmd is overwriting the entry not updating the existing. Contributed by Ayush Saxena.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "dd8c2b92df2d42fe8ee07032988fe1fb68161004",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "6c42d4050461ab71c88f123569649793dc53aebd",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,130 +1,136 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       System.err.println(\"Not enough parameters specified\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n     if (!validateMin(argv)) {\n       System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n       printUsage(cmd);\n       return exitCode;\n     }\n     String address \u003d null;\n     // Initialize RouterClient\n     try {\n       address \u003d getConf().getTrimmed(\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       validateMax(argv);\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n           System.out.println(\"Successfully added mount point \" + argv[i]);\n         } else {\n           exitCode \u003d -1;\n         }\n       } else if (\"-update\".equals(cmd)) {\n         if (updateMount(argv, i)) {\n           System.out.println(\"Successfully updated mount point \" + argv[i]);\n+          System.out.println(\n+              \"WARN: Changing order/destinations may lead to inconsistencies\");\n         } else {\n           exitCode \u003d -1;\n         }\n       } else if (\"-rm\".equals(cmd)) {\n         while (i \u003c argv.length) {\n           try {\n             if (removeMount(argv[i])) {\n               System.out.println(\"Successfully removed mount point \" + argv[i]);\n             }\n           } catch (IOException e) {\n             exitCode \u003d -1;\n             System.err\n                 .println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n           }\n           i++;\n         }\n       } else if (\"-ls\".equals(cmd)) {\n         if (argv.length \u003e 1) {\n           listMounts(argv[i]);\n         } else {\n           listMounts(\"/\");\n         }\n       } else if (\"-getDestination\".equals(cmd)) {\n         getDestination(argv[i]);\n       } else if (\"-setQuota\".equals(cmd)) {\n         if (setQuota(argv, i)) {\n           System.out.println(\n               \"Successfully set quota for mount point \" + argv[i]);\n         }\n       } else if (\"-clrQuota\".equals(cmd)) {\n         while (i \u003c argv.length) {\n           if (clrQuota(argv[i])) {\n             System.out\n                 .println(\"Successfully clear quota for mount point \" + argv[i]);\n             i++;\n           }\n         }\n       } else if (\"-safemode\".equals(cmd)) {\n         manageSafeMode(argv[i]);\n       } else if (\"-nameservice\".equals(cmd)) {\n         String subcmd \u003d argv[i];\n         String nsId \u003d argv[i + 1];\n         manageNameservice(subcmd, nsId);\n       } else if (\"-getDisabledNameservices\".equals(cmd)) {\n         getDisabledNameservices();\n       } else if (\"-refresh\".equals(cmd)) {\n         refresh(address);\n       } else if (\"-refreshRouterArgs\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else {\n         throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n+    } catch (IOException ioe) {\n+      exitCode \u003d -1;\n+      System.err.println(cmd.substring(1) + \": \" + ioe.getLocalizedMessage());\n+      printUsage(cmd);\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specified\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (!validateMin(argv)) {\n      System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n      printUsage(cmd);\n      return exitCode;\n    }\n    String address \u003d null;\n    // Initialize RouterClient\n    try {\n      address \u003d getConf().getTrimmed(\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      validateMax(argv);\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfully added mount point \" + argv[i]);\n        } else {\n          exitCode \u003d -1;\n        }\n      } else if (\"-update\".equals(cmd)) {\n        if (updateMount(argv, i)) {\n          System.out.println(\"Successfully updated mount point \" + argv[i]);\n          System.out.println(\n              \"WARN: Changing order/destinations may lead to inconsistencies\");\n        } else {\n          exitCode \u003d -1;\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        while (i \u003c argv.length) {\n          try {\n            if (removeMount(argv[i])) {\n              System.out.println(\"Successfully removed mount point \" + argv[i]);\n            }\n          } catch (IOException e) {\n            exitCode \u003d -1;\n            System.err\n                .println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n          }\n          i++;\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        if (argv.length \u003e 1) {\n          listMounts(argv[i]);\n        } else {\n          listMounts(\"/\");\n        }\n      } else if (\"-getDestination\".equals(cmd)) {\n        getDestination(argv[i]);\n      } else if (\"-setQuota\".equals(cmd)) {\n        if (setQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set quota for mount point \" + argv[i]);\n        }\n      } else if (\"-clrQuota\".equals(cmd)) {\n        while (i \u003c argv.length) {\n          if (clrQuota(argv[i])) {\n            System.out\n                .println(\"Successfully clear quota for mount point \" + argv[i]);\n            i++;\n          }\n        }\n      } else if (\"-safemode\".equals(cmd)) {\n        manageSafeMode(argv[i]);\n      } else if (\"-nameservice\".equals(cmd)) {\n        String subcmd \u003d argv[i];\n        String nsId \u003d argv[i + 1];\n        manageNameservice(subcmd, nsId);\n      } else if (\"-getDisabledNameservices\".equals(cmd)) {\n        getDisabledNameservices();\n      } else if (\"-refresh\".equals(cmd)) {\n        refresh(address);\n      } else if (\"-refreshRouterArgs\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else {\n        throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (IOException ioe) {\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + ioe.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "8b8ff5ccbc677d98a91092b2fa64999a99d1595d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14249. RBF: Tooling to identify the subcluster location of a file. Contributed by Inigo Goiri.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "8b8ff5ccbc677d98a91092b2fa64999a99d1595d",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "f4e2bfce585d762eaf26096613d135203f080eb3",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,128 +1,130 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       System.err.println(\"Not enough parameters specified\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n     if (!validateMin(argv)) {\n       System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n       printUsage(cmd);\n       return exitCode;\n     }\n     String address \u003d null;\n     // Initialize RouterClient\n     try {\n       address \u003d getConf().getTrimmed(\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       validateMax(argv);\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n           System.out.println(\"Successfully added mount point \" + argv[i]);\n         } else {\n           exitCode \u003d -1;\n         }\n       } else if (\"-update\".equals(cmd)) {\n         if (updateMount(argv, i)) {\n           System.out.println(\"Successfully updated mount point \" + argv[i]);\n         } else {\n           exitCode \u003d -1;\n         }\n       } else if (\"-rm\".equals(cmd)) {\n         while (i \u003c argv.length) {\n           try {\n             if (removeMount(argv[i])) {\n               System.out.println(\"Successfully removed mount point \" + argv[i]);\n             }\n           } catch (IOException e) {\n             exitCode \u003d -1;\n             System.err\n                 .println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n           }\n           i++;\n         }\n       } else if (\"-ls\".equals(cmd)) {\n         if (argv.length \u003e 1) {\n           listMounts(argv[i]);\n         } else {\n           listMounts(\"/\");\n         }\n+      } else if (\"-getDestination\".equals(cmd)) {\n+        getDestination(argv[i]);\n       } else if (\"-setQuota\".equals(cmd)) {\n         if (setQuota(argv, i)) {\n           System.out.println(\n               \"Successfully set quota for mount point \" + argv[i]);\n         }\n       } else if (\"-clrQuota\".equals(cmd)) {\n         while (i \u003c argv.length) {\n           if (clrQuota(argv[i])) {\n             System.out\n                 .println(\"Successfully clear quota for mount point \" + argv[i]);\n             i++;\n           }\n         }\n       } else if (\"-safemode\".equals(cmd)) {\n         manageSafeMode(argv[i]);\n       } else if (\"-nameservice\".equals(cmd)) {\n         String subcmd \u003d argv[i];\n         String nsId \u003d argv[i + 1];\n         manageNameservice(subcmd, nsId);\n       } else if (\"-getDisabledNameservices\".equals(cmd)) {\n         getDisabledNameservices();\n       } else if (\"-refresh\".equals(cmd)) {\n         refresh(address);\n       } else if (\"-refreshRouterArgs\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else {\n         throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specified\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (!validateMin(argv)) {\n      System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n      printUsage(cmd);\n      return exitCode;\n    }\n    String address \u003d null;\n    // Initialize RouterClient\n    try {\n      address \u003d getConf().getTrimmed(\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      validateMax(argv);\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfully added mount point \" + argv[i]);\n        } else {\n          exitCode \u003d -1;\n        }\n      } else if (\"-update\".equals(cmd)) {\n        if (updateMount(argv, i)) {\n          System.out.println(\"Successfully updated mount point \" + argv[i]);\n        } else {\n          exitCode \u003d -1;\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        while (i \u003c argv.length) {\n          try {\n            if (removeMount(argv[i])) {\n              System.out.println(\"Successfully removed mount point \" + argv[i]);\n            }\n          } catch (IOException e) {\n            exitCode \u003d -1;\n            System.err\n                .println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n          }\n          i++;\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        if (argv.length \u003e 1) {\n          listMounts(argv[i]);\n        } else {\n          listMounts(\"/\");\n        }\n      } else if (\"-getDestination\".equals(cmd)) {\n        getDestination(argv[i]);\n      } else if (\"-setQuota\".equals(cmd)) {\n        if (setQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set quota for mount point \" + argv[i]);\n        }\n      } else if (\"-clrQuota\".equals(cmd)) {\n        while (i \u003c argv.length) {\n          if (clrQuota(argv[i])) {\n            System.out\n                .println(\"Successfully clear quota for mount point \" + argv[i]);\n            i++;\n          }\n        }\n      } else if (\"-safemode\".equals(cmd)) {\n        manageSafeMode(argv[i]);\n      } else if (\"-nameservice\".equals(cmd)) {\n        String subcmd \u003d argv[i];\n        String nsId \u003d argv[i + 1];\n        manageNameservice(subcmd, nsId);\n      } else if (\"-getDisabledNameservices\".equals(cmd)) {\n        getDisabledNameservices();\n      } else if (\"-refresh\".equals(cmd)) {\n        refresh(address);\n      } else if (\"-refreshRouterArgs\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else {\n        throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "f4e2bfce585d762eaf26096613d135203f080eb3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13856. RBF: RouterAdmin should support dfsrouteradmin -refreshRouterArgs command. Contributed by yanghuafeng.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "f4e2bfce585d762eaf26096613d135203f080eb3",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "8f6f9d9c8398567064c9369f48213db63f45538c",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,126 +1,128 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       System.err.println(\"Not enough parameters specified\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n     if (!validateMin(argv)) {\n       System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n       printUsage(cmd);\n       return exitCode;\n     }\n     String address \u003d null;\n     // Initialize RouterClient\n     try {\n       address \u003d getConf().getTrimmed(\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       validateMax(argv);\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n           System.out.println(\"Successfully added mount point \" + argv[i]);\n         } else {\n           exitCode \u003d -1;\n         }\n       } else if (\"-update\".equals(cmd)) {\n         if (updateMount(argv, i)) {\n           System.out.println(\"Successfully updated mount point \" + argv[i]);\n         } else {\n           exitCode \u003d -1;\n         }\n       } else if (\"-rm\".equals(cmd)) {\n         while (i \u003c argv.length) {\n           try {\n             if (removeMount(argv[i])) {\n               System.out.println(\"Successfully removed mount point \" + argv[i]);\n             }\n           } catch (IOException e) {\n             exitCode \u003d -1;\n             System.err\n                 .println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n           }\n           i++;\n         }\n       } else if (\"-ls\".equals(cmd)) {\n         if (argv.length \u003e 1) {\n           listMounts(argv[i]);\n         } else {\n           listMounts(\"/\");\n         }\n       } else if (\"-setQuota\".equals(cmd)) {\n         if (setQuota(argv, i)) {\n           System.out.println(\n               \"Successfully set quota for mount point \" + argv[i]);\n         }\n       } else if (\"-clrQuota\".equals(cmd)) {\n         while (i \u003c argv.length) {\n           if (clrQuota(argv[i])) {\n             System.out\n                 .println(\"Successfully clear quota for mount point \" + argv[i]);\n             i++;\n           }\n         }\n       } else if (\"-safemode\".equals(cmd)) {\n         manageSafeMode(argv[i]);\n       } else if (\"-nameservice\".equals(cmd)) {\n         String subcmd \u003d argv[i];\n         String nsId \u003d argv[i + 1];\n         manageNameservice(subcmd, nsId);\n       } else if (\"-getDisabledNameservices\".equals(cmd)) {\n         getDisabledNameservices();\n       } else if (\"-refresh\".equals(cmd)) {\n         refresh(address);\n+      } else if (\"-refreshRouterArgs\".equals(cmd)) {\n+        exitCode \u003d genericRefresh(argv, i);\n       } else {\n         throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specified\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (!validateMin(argv)) {\n      System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n      printUsage(cmd);\n      return exitCode;\n    }\n    String address \u003d null;\n    // Initialize RouterClient\n    try {\n      address \u003d getConf().getTrimmed(\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      validateMax(argv);\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfully added mount point \" + argv[i]);\n        } else {\n          exitCode \u003d -1;\n        }\n      } else if (\"-update\".equals(cmd)) {\n        if (updateMount(argv, i)) {\n          System.out.println(\"Successfully updated mount point \" + argv[i]);\n        } else {\n          exitCode \u003d -1;\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        while (i \u003c argv.length) {\n          try {\n            if (removeMount(argv[i])) {\n              System.out.println(\"Successfully removed mount point \" + argv[i]);\n            }\n          } catch (IOException e) {\n            exitCode \u003d -1;\n            System.err\n                .println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n          }\n          i++;\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        if (argv.length \u003e 1) {\n          listMounts(argv[i]);\n        } else {\n          listMounts(\"/\");\n        }\n      } else if (\"-setQuota\".equals(cmd)) {\n        if (setQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set quota for mount point \" + argv[i]);\n        }\n      } else if (\"-clrQuota\".equals(cmd)) {\n        while (i \u003c argv.length) {\n          if (clrQuota(argv[i])) {\n            System.out\n                .println(\"Successfully clear quota for mount point \" + argv[i]);\n            i++;\n          }\n        }\n      } else if (\"-safemode\".equals(cmd)) {\n        manageSafeMode(argv[i]);\n      } else if (\"-nameservice\".equals(cmd)) {\n        String subcmd \u003d argv[i];\n        String nsId \u003d argv[i + 1];\n        manageNameservice(subcmd, nsId);\n      } else if (\"-getDisabledNameservices\".equals(cmd)) {\n        getDisabledNameservices();\n      } else if (\"-refresh\".equals(cmd)) {\n        refresh(address);\n      } else if (\"-refreshRouterArgs\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else {\n        throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "8f6f9d9c8398567064c9369f48213db63f45538c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13443. RBF: Update mount table cache immediately after changing (add/update/remove) mount table entries. Contributed by Mohammad Arshad.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "8f6f9d9c8398567064c9369f48213db63f45538c",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "01b4126b4e8124edfde20ba4733c6300bb994251",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,123 +1,126 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       System.err.println(\"Not enough parameters specified\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n     if (!validateMin(argv)) {\n       System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n       printUsage(cmd);\n       return exitCode;\n     }\n+    String address \u003d null;\n     // Initialize RouterClient\n     try {\n-      String address \u003d getConf().getTrimmed(\n+      address \u003d getConf().getTrimmed(\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       validateMax(argv);\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n           System.out.println(\"Successfully added mount point \" + argv[i]);\n         } else {\n           exitCode \u003d -1;\n         }\n       } else if (\"-update\".equals(cmd)) {\n         if (updateMount(argv, i)) {\n           System.out.println(\"Successfully updated mount point \" + argv[i]);\n         } else {\n           exitCode \u003d -1;\n         }\n       } else if (\"-rm\".equals(cmd)) {\n         while (i \u003c argv.length) {\n           try {\n             if (removeMount(argv[i])) {\n               System.out.println(\"Successfully removed mount point \" + argv[i]);\n             }\n           } catch (IOException e) {\n             exitCode \u003d -1;\n             System.err\n                 .println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n           }\n           i++;\n         }\n       } else if (\"-ls\".equals(cmd)) {\n         if (argv.length \u003e 1) {\n           listMounts(argv[i]);\n         } else {\n           listMounts(\"/\");\n         }\n       } else if (\"-setQuota\".equals(cmd)) {\n         if (setQuota(argv, i)) {\n           System.out.println(\n               \"Successfully set quota for mount point \" + argv[i]);\n         }\n       } else if (\"-clrQuota\".equals(cmd)) {\n         while (i \u003c argv.length) {\n           if (clrQuota(argv[i])) {\n             System.out\n                 .println(\"Successfully clear quota for mount point \" + argv[i]);\n             i++;\n           }\n         }\n       } else if (\"-safemode\".equals(cmd)) {\n         manageSafeMode(argv[i]);\n       } else if (\"-nameservice\".equals(cmd)) {\n         String subcmd \u003d argv[i];\n         String nsId \u003d argv[i + 1];\n         manageNameservice(subcmd, nsId);\n       } else if (\"-getDisabledNameservices\".equals(cmd)) {\n         getDisabledNameservices();\n+      } else if (\"-refresh\".equals(cmd)) {\n+        refresh(address);\n       } else {\n         throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specified\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (!validateMin(argv)) {\n      System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n      printUsage(cmd);\n      return exitCode;\n    }\n    String address \u003d null;\n    // Initialize RouterClient\n    try {\n      address \u003d getConf().getTrimmed(\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      validateMax(argv);\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfully added mount point \" + argv[i]);\n        } else {\n          exitCode \u003d -1;\n        }\n      } else if (\"-update\".equals(cmd)) {\n        if (updateMount(argv, i)) {\n          System.out.println(\"Successfully updated mount point \" + argv[i]);\n        } else {\n          exitCode \u003d -1;\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        while (i \u003c argv.length) {\n          try {\n            if (removeMount(argv[i])) {\n              System.out.println(\"Successfully removed mount point \" + argv[i]);\n            }\n          } catch (IOException e) {\n            exitCode \u003d -1;\n            System.err\n                .println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n          }\n          i++;\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        if (argv.length \u003e 1) {\n          listMounts(argv[i]);\n        } else {\n          listMounts(\"/\");\n        }\n      } else if (\"-setQuota\".equals(cmd)) {\n        if (setQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set quota for mount point \" + argv[i]);\n        }\n      } else if (\"-clrQuota\".equals(cmd)) {\n        while (i \u003c argv.length) {\n          if (clrQuota(argv[i])) {\n            System.out\n                .println(\"Successfully clear quota for mount point \" + argv[i]);\n            i++;\n          }\n        }\n      } else if (\"-safemode\".equals(cmd)) {\n        manageSafeMode(argv[i]);\n      } else if (\"-nameservice\".equals(cmd)) {\n        String subcmd \u003d argv[i];\n        String nsId \u003d argv[i + 1];\n        manageNameservice(subcmd, nsId);\n      } else if (\"-getDisabledNameservices\".equals(cmd)) {\n        getDisabledNameservices();\n      } else if (\"-refresh\".equals(cmd)) {\n        refresh(address);\n      } else {\n        throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "41c94a636b1a6ede9fa9cabff5487d305d06b48f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13906. RBF: Add multiple paths for dfsrouteradmin \u0027rm\u0027 and \u0027clrquota\u0027 commands. Contributed by Ayush Saxena.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "41c94a636b1a6ede9fa9cabff5487d305d06b48f",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "02/10/18 8:48 PM",
      "commitNameOld": "fa7f7078a713c44783425195a891582bcf8a6d5c",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 264.53,
      "commitsBetweenForRepo": 1925,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,150 +1,123 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       System.err.println(\"Not enough parameters specified\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n-    if (\"-add\".equals(cmd)) {\n-      if (argv.length \u003c 4) {\n-        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n-        printUsage(cmd);\n-        return exitCode;\n-      }\n-    } else if (\"-update\".equals(cmd)) {\n-      if (argv.length \u003c 4) {\n-        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n-        printUsage(cmd);\n-        return exitCode;\n-      }\n-    } else if (\"-rm\".equals(cmd)) {\n-      if (argv.length \u003c 2) {\n-        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n-        printUsage(cmd);\n-        return exitCode;\n-      }\n-    } else if (\"-setQuota\".equals(cmd)) {\n-      if (argv.length \u003c 4) {\n-        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n-        printUsage(cmd);\n-        return exitCode;\n-      }\n-    } else if (\"-clrQuota\".equals(cmd)) {\n-      if (argv.length \u003c 2) {\n-        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n-        printUsage(cmd);\n-        return exitCode;\n-      }\n-    } else if (\"-safemode\".equals(cmd)) {\n-      if (argv.length \u003c 2) {\n-        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n-        printUsage(cmd);\n-        return exitCode;\n-      }\n-    } else if (\"-nameservice\".equals(cmd)) {\n-      if (argv.length \u003c 3) {\n-        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n-        printUsage(cmd);\n-        return exitCode;\n-      }\n+    if (!validateMin(argv)) {\n+      System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n+      printUsage(cmd);\n+      return exitCode;\n     }\n-\n     // Initialize RouterClient\n     try {\n       String address \u003d getConf().getTrimmed(\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       validateMax(argv);\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n           System.out.println(\"Successfully added mount point \" + argv[i]);\n         } else {\n           exitCode \u003d -1;\n         }\n       } else if (\"-update\".equals(cmd)) {\n         if (updateMount(argv, i)) {\n           System.out.println(\"Successfully updated mount point \" + argv[i]);\n         } else {\n           exitCode \u003d -1;\n         }\n       } else if (\"-rm\".equals(cmd)) {\n-        if (removeMount(argv[i])) {\n-          System.out.println(\"Successfully removed mount point \" + argv[i]);\n+        while (i \u003c argv.length) {\n+          try {\n+            if (removeMount(argv[i])) {\n+              System.out.println(\"Successfully removed mount point \" + argv[i]);\n+            }\n+          } catch (IOException e) {\n+            exitCode \u003d -1;\n+            System.err\n+                .println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n+          }\n+          i++;\n         }\n       } else if (\"-ls\".equals(cmd)) {\n         if (argv.length \u003e 1) {\n           listMounts(argv[i]);\n         } else {\n           listMounts(\"/\");\n         }\n       } else if (\"-setQuota\".equals(cmd)) {\n         if (setQuota(argv, i)) {\n           System.out.println(\n               \"Successfully set quota for mount point \" + argv[i]);\n         }\n       } else if (\"-clrQuota\".equals(cmd)) {\n-        if (clrQuota(argv[i])) {\n-          System.out.println(\n-              \"Successfully clear quota for mount point \" + argv[i]);\n+        while (i \u003c argv.length) {\n+          if (clrQuota(argv[i])) {\n+            System.out\n+                .println(\"Successfully clear quota for mount point \" + argv[i]);\n+            i++;\n+          }\n         }\n       } else if (\"-safemode\".equals(cmd)) {\n         manageSafeMode(argv[i]);\n       } else if (\"-nameservice\".equals(cmd)) {\n         String subcmd \u003d argv[i];\n         String nsId \u003d argv[i + 1];\n         manageNameservice(subcmd, nsId);\n       } else if (\"-getDisabledNameservices\".equals(cmd)) {\n         getDisabledNameservices();\n       } else {\n         throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specified\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (!validateMin(argv)) {\n      System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n      printUsage(cmd);\n      return exitCode;\n    }\n    // Initialize RouterClient\n    try {\n      String address \u003d getConf().getTrimmed(\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      validateMax(argv);\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfully added mount point \" + argv[i]);\n        } else {\n          exitCode \u003d -1;\n        }\n      } else if (\"-update\".equals(cmd)) {\n        if (updateMount(argv, i)) {\n          System.out.println(\"Successfully updated mount point \" + argv[i]);\n        } else {\n          exitCode \u003d -1;\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        while (i \u003c argv.length) {\n          try {\n            if (removeMount(argv[i])) {\n              System.out.println(\"Successfully removed mount point \" + argv[i]);\n            }\n          } catch (IOException e) {\n            exitCode \u003d -1;\n            System.err\n                .println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n          }\n          i++;\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        if (argv.length \u003e 1) {\n          listMounts(argv[i]);\n        } else {\n          listMounts(\"/\");\n        }\n      } else if (\"-setQuota\".equals(cmd)) {\n        if (setQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set quota for mount point \" + argv[i]);\n        }\n      } else if (\"-clrQuota\".equals(cmd)) {\n        while (i \u003c argv.length) {\n          if (clrQuota(argv[i])) {\n            System.out\n                .println(\"Successfully clear quota for mount point \" + argv[i]);\n            i++;\n          }\n        }\n      } else if (\"-safemode\".equals(cmd)) {\n        manageSafeMode(argv[i]);\n      } else if (\"-nameservice\".equals(cmd)) {\n        String subcmd \u003d argv[i];\n        String nsId \u003d argv[i + 1];\n        manageNameservice(subcmd, nsId);\n      } else if (\"-getDisabledNameservices\".equals(cmd)) {\n        getDisabledNameservices();\n      } else {\n        throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "9315db5f5da09c2ef86be168465c16932afa2d85": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13815. RBF: Add check to order command. Contributed by Ranith Sardar.\n",
      "commitDate": "05/09/18 8:33 AM",
      "commitName": "9315db5f5da09c2ef86be168465c16932afa2d85",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "03/09/18 1:58 AM",
      "commitNameOld": "780df9034f265a8e602856b34cc21d9be02f5c48",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 2.27,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,146 +1,150 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       System.err.println(\"Not enough parameters specified\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n     if (\"-add\".equals(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-update\".equals(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rm\".equals(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setQuota\".equals(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-clrQuota\".equals(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-safemode\".equals(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-nameservice\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n \n     // Initialize RouterClient\n     try {\n       String address \u003d getConf().getTrimmed(\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       validateMax(argv);\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n           System.out.println(\"Successfully added mount point \" + argv[i]);\n+        } else {\n+          exitCode \u003d -1;\n         }\n       } else if (\"-update\".equals(cmd)) {\n         if (updateMount(argv, i)) {\n           System.out.println(\"Successfully updated mount point \" + argv[i]);\n+        } else {\n+          exitCode \u003d -1;\n         }\n       } else if (\"-rm\".equals(cmd)) {\n         if (removeMount(argv[i])) {\n           System.out.println(\"Successfully removed mount point \" + argv[i]);\n         }\n       } else if (\"-ls\".equals(cmd)) {\n         if (argv.length \u003e 1) {\n           listMounts(argv[i]);\n         } else {\n           listMounts(\"/\");\n         }\n       } else if (\"-setQuota\".equals(cmd)) {\n         if (setQuota(argv, i)) {\n           System.out.println(\n               \"Successfully set quota for mount point \" + argv[i]);\n         }\n       } else if (\"-clrQuota\".equals(cmd)) {\n         if (clrQuota(argv[i])) {\n           System.out.println(\n               \"Successfully clear quota for mount point \" + argv[i]);\n         }\n       } else if (\"-safemode\".equals(cmd)) {\n         manageSafeMode(argv[i]);\n       } else if (\"-nameservice\".equals(cmd)) {\n         String subcmd \u003d argv[i];\n         String nsId \u003d argv[i + 1];\n         manageNameservice(subcmd, nsId);\n       } else if (\"-getDisabledNameservices\".equals(cmd)) {\n         getDisabledNameservices();\n       } else {\n         throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specified\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (\"-add\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-update\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rm\".equals(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setQuota\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-clrQuota\".equals(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-safemode\".equals(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-nameservice\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n\n    // Initialize RouterClient\n    try {\n      String address \u003d getConf().getTrimmed(\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      validateMax(argv);\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfully added mount point \" + argv[i]);\n        } else {\n          exitCode \u003d -1;\n        }\n      } else if (\"-update\".equals(cmd)) {\n        if (updateMount(argv, i)) {\n          System.out.println(\"Successfully updated mount point \" + argv[i]);\n        } else {\n          exitCode \u003d -1;\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        if (removeMount(argv[i])) {\n          System.out.println(\"Successfully removed mount point \" + argv[i]);\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        if (argv.length \u003e 1) {\n          listMounts(argv[i]);\n        } else {\n          listMounts(\"/\");\n        }\n      } else if (\"-setQuota\".equals(cmd)) {\n        if (setQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set quota for mount point \" + argv[i]);\n        }\n      } else if (\"-clrQuota\".equals(cmd)) {\n        if (clrQuota(argv[i])) {\n          System.out.println(\n              \"Successfully clear quota for mount point \" + argv[i]);\n        }\n      } else if (\"-safemode\".equals(cmd)) {\n        manageSafeMode(argv[i]);\n      } else if (\"-nameservice\".equals(cmd)) {\n        String subcmd \u003d argv[i];\n        String nsId \u003d argv[i + 1];\n        manageNameservice(subcmd, nsId);\n      } else if (\"-getDisabledNameservices\".equals(cmd)) {\n        getDisabledNameservices();\n      } else {\n        throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "780df9034f265a8e602856b34cc21d9be02f5c48": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13867. RBF: Add validation for max arguments for Router admin ls, clrQuota, setQuota, rm and nameservice commands. Contributed by Ayush Saxena.\n",
      "commitDate": "03/09/18 1:58 AM",
      "commitName": "780df9034f265a8e602856b34cc21d9be02f5c48",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "28/08/18 11:59 AM",
      "commitNameOld": "cb9d371ae2cda1624fc83316ddc09de37d8d0bd3",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 5.58,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,149 +1,146 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       System.err.println(\"Not enough parameters specified\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n     if (\"-add\".equals(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-update\".equals(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rm\".equals(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setQuota\".equals(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-clrQuota\".equals(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-safemode\".equals(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-nameservice\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n \n     // Initialize RouterClient\n     try {\n       String address \u003d getConf().getTrimmed(\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n+      validateMax(argv);\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n           System.out.println(\"Successfully added mount point \" + argv[i]);\n         }\n       } else if (\"-update\".equals(cmd)) {\n         if (updateMount(argv, i)) {\n           System.out.println(\"Successfully updated mount point \" + argv[i]);\n         }\n       } else if (\"-rm\".equals(cmd)) {\n         if (removeMount(argv[i])) {\n           System.out.println(\"Successfully removed mount point \" + argv[i]);\n         }\n       } else if (\"-ls\".equals(cmd)) {\n         if (argv.length \u003e 1) {\n           listMounts(argv[i]);\n         } else {\n           listMounts(\"/\");\n         }\n       } else if (\"-setQuota\".equals(cmd)) {\n         if (setQuota(argv, i)) {\n           System.out.println(\n               \"Successfully set quota for mount point \" + argv[i]);\n         }\n       } else if (\"-clrQuota\".equals(cmd)) {\n         if (clrQuota(argv[i])) {\n           System.out.println(\n               \"Successfully clear quota for mount point \" + argv[i]);\n         }\n       } else if (\"-safemode\".equals(cmd)) {\n-        if (argv.length \u003e 2) {\n-          throw new IllegalArgumentException(\n-              \"Too many arguments, Max\u003d1 argument allowed only\");\n-        }\n         manageSafeMode(argv[i]);\n       } else if (\"-nameservice\".equals(cmd)) {\n         String subcmd \u003d argv[i];\n         String nsId \u003d argv[i + 1];\n         manageNameservice(subcmd, nsId);\n       } else if (\"-getDisabledNameservices\".equals(cmd)) {\n         getDisabledNameservices();\n       } else {\n         throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specified\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (\"-add\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-update\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rm\".equals(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setQuota\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-clrQuota\".equals(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-safemode\".equals(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-nameservice\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n\n    // Initialize RouterClient\n    try {\n      String address \u003d getConf().getTrimmed(\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      validateMax(argv);\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfully added mount point \" + argv[i]);\n        }\n      } else if (\"-update\".equals(cmd)) {\n        if (updateMount(argv, i)) {\n          System.out.println(\"Successfully updated mount point \" + argv[i]);\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        if (removeMount(argv[i])) {\n          System.out.println(\"Successfully removed mount point \" + argv[i]);\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        if (argv.length \u003e 1) {\n          listMounts(argv[i]);\n        } else {\n          listMounts(\"/\");\n        }\n      } else if (\"-setQuota\".equals(cmd)) {\n        if (setQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set quota for mount point \" + argv[i]);\n        }\n      } else if (\"-clrQuota\".equals(cmd)) {\n        if (clrQuota(argv[i])) {\n          System.out.println(\n              \"Successfully clear quota for mount point \" + argv[i]);\n        }\n      } else if (\"-safemode\".equals(cmd)) {\n        manageSafeMode(argv[i]);\n      } else if (\"-nameservice\".equals(cmd)) {\n        String subcmd \u003d argv[i];\n        String nsId \u003d argv[i + 1];\n        manageNameservice(subcmd, nsId);\n      } else if (\"-getDisabledNameservices\".equals(cmd)) {\n        getDisabledNameservices();\n      } else {\n        throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "cb9d371ae2cda1624fc83316ddc09de37d8d0bd3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13861. RBF: Illegal Router Admin command leads to printing usage for all commands. Contributed by Ayush Saxena.\n",
      "commitDate": "28/08/18 11:59 AM",
      "commitName": "cb9d371ae2cda1624fc83316ddc09de37d8d0bd3",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "27/08/18 8:51 PM",
      "commitNameOld": "75691ad600473d4d315434b0876d6d10d3050a6b",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.63,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,150 +1,149 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       System.err.println(\"Not enough parameters specified\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n     if (\"-add\".equals(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n-        printUsage();\n+        printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-update\".equals(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n-        printUsage();\n+        printUsage(cmd);\n         return exitCode;\n       }\n-    } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n+    } else if (\"-rm\".equals(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n-        printUsage();\n+        printUsage(cmd);\n         return exitCode;\n       }\n-    } else if (\"-setQuota\".equalsIgnoreCase(cmd)) {\n+    } else if (\"-setQuota\".equals(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n-        printUsage();\n+        printUsage(cmd);\n         return exitCode;\n       }\n-    } else if (\"-clrQuota\".equalsIgnoreCase(cmd)) {\n+    } else if (\"-clrQuota\".equals(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n-        printUsage();\n+        printUsage(cmd);\n         return exitCode;\n       }\n-    } else if (\"-safemode\".equalsIgnoreCase(cmd)) {\n+    } else if (\"-safemode\".equals(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n-        printUsage();\n+        printUsage(cmd);\n         return exitCode;\n       }\n-    } else if (\"-nameservice\".equalsIgnoreCase(cmd)) {\n+    } else if (\"-nameservice\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n-        printUsage();\n+        printUsage(cmd);\n         return exitCode;\n       }\n     }\n \n     // Initialize RouterClient\n     try {\n       String address \u003d getConf().getTrimmed(\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n           System.out.println(\"Successfully added mount point \" + argv[i]);\n         }\n       } else if (\"-update\".equals(cmd)) {\n         if (updateMount(argv, i)) {\n           System.out.println(\"Successfully updated mount point \" + argv[i]);\n         }\n       } else if (\"-rm\".equals(cmd)) {\n         if (removeMount(argv[i])) {\n           System.out.println(\"Successfully removed mount point \" + argv[i]);\n         }\n       } else if (\"-ls\".equals(cmd)) {\n         if (argv.length \u003e 1) {\n           listMounts(argv[i]);\n         } else {\n           listMounts(\"/\");\n         }\n       } else if (\"-setQuota\".equals(cmd)) {\n         if (setQuota(argv, i)) {\n           System.out.println(\n               \"Successfully set quota for mount point \" + argv[i]);\n         }\n       } else if (\"-clrQuota\".equals(cmd)) {\n         if (clrQuota(argv[i])) {\n           System.out.println(\n               \"Successfully clear quota for mount point \" + argv[i]);\n         }\n       } else if (\"-safemode\".equals(cmd)) {\n         if (argv.length \u003e 2) {\n           throw new IllegalArgumentException(\n               \"Too many arguments, Max\u003d1 argument allowed only\");\n         }\n         manageSafeMode(argv[i]);\n       } else if (\"-nameservice\".equals(cmd)) {\n         String subcmd \u003d argv[i];\n         String nsId \u003d argv[i + 1];\n         manageNameservice(subcmd, nsId);\n       } else if (\"-getDisabledNameservices\".equals(cmd)) {\n         getDisabledNameservices();\n       } else {\n-        printUsage();\n-        return exitCode;\n+        throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n-      printUsage();\n+      printUsage(cmd);\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specified\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (\"-add\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-update\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rm\".equals(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setQuota\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-clrQuota\".equals(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-safemode\".equals(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-nameservice\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n\n    // Initialize RouterClient\n    try {\n      String address \u003d getConf().getTrimmed(\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfully added mount point \" + argv[i]);\n        }\n      } else if (\"-update\".equals(cmd)) {\n        if (updateMount(argv, i)) {\n          System.out.println(\"Successfully updated mount point \" + argv[i]);\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        if (removeMount(argv[i])) {\n          System.out.println(\"Successfully removed mount point \" + argv[i]);\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        if (argv.length \u003e 1) {\n          listMounts(argv[i]);\n        } else {\n          listMounts(\"/\");\n        }\n      } else if (\"-setQuota\".equals(cmd)) {\n        if (setQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set quota for mount point \" + argv[i]);\n        }\n      } else if (\"-clrQuota\".equals(cmd)) {\n        if (clrQuota(argv[i])) {\n          System.out.println(\n              \"Successfully clear quota for mount point \" + argv[i]);\n        }\n      } else if (\"-safemode\".equals(cmd)) {\n        if (argv.length \u003e 2) {\n          throw new IllegalArgumentException(\n              \"Too many arguments, Max\u003d1 argument allowed only\");\n        }\n        manageSafeMode(argv[i]);\n      } else if (\"-nameservice\".equals(cmd)) {\n        String subcmd \u003d argv[i];\n        String nsId \u003d argv[i + 1];\n        manageNameservice(subcmd, nsId);\n      } else if (\"-getDisabledNameservices\".equals(cmd)) {\n        getDisabledNameservices();\n      } else {\n        throw new IllegalArgumentException(\"Unknown Command: \" + cmd);\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "75691ad600473d4d315434b0876d6d10d3050a6b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13858. RBF: Add check to have single valid argument to safemode command. Contributed by Ayush Saxena.\n",
      "commitDate": "27/08/18 8:51 PM",
      "commitName": "75691ad600473d4d315434b0876d6d10d3050a6b",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "23/07/18 8:15 PM",
      "commitNameOld": "17a87977f29ced49724f561a68565217c8cb4e94",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 35.02,
      "commitsBetweenForRepo": 290,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,146 +1,150 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       System.err.println(\"Not enough parameters specified\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n     if (\"-add\".equals(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-update\".equals(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-setQuota\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-clrQuota\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-safemode\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-nameservice\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 3) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     }\n \n     // Initialize RouterClient\n     try {\n       String address \u003d getConf().getTrimmed(\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n           System.out.println(\"Successfully added mount point \" + argv[i]);\n         }\n       } else if (\"-update\".equals(cmd)) {\n         if (updateMount(argv, i)) {\n           System.out.println(\"Successfully updated mount point \" + argv[i]);\n         }\n       } else if (\"-rm\".equals(cmd)) {\n         if (removeMount(argv[i])) {\n           System.out.println(\"Successfully removed mount point \" + argv[i]);\n         }\n       } else if (\"-ls\".equals(cmd)) {\n         if (argv.length \u003e 1) {\n           listMounts(argv[i]);\n         } else {\n           listMounts(\"/\");\n         }\n       } else if (\"-setQuota\".equals(cmd)) {\n         if (setQuota(argv, i)) {\n           System.out.println(\n               \"Successfully set quota for mount point \" + argv[i]);\n         }\n       } else if (\"-clrQuota\".equals(cmd)) {\n         if (clrQuota(argv[i])) {\n           System.out.println(\n               \"Successfully clear quota for mount point \" + argv[i]);\n         }\n       } else if (\"-safemode\".equals(cmd)) {\n+        if (argv.length \u003e 2) {\n+          throw new IllegalArgumentException(\n+              \"Too many arguments, Max\u003d1 argument allowed only\");\n+        }\n         manageSafeMode(argv[i]);\n       } else if (\"-nameservice\".equals(cmd)) {\n         String subcmd \u003d argv[i];\n         String nsId \u003d argv[i + 1];\n         manageNameservice(subcmd, nsId);\n       } else if (\"-getDisabledNameservices\".equals(cmd)) {\n         getDisabledNameservices();\n       } else {\n         printUsage();\n         return exitCode;\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage();\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specified\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (\"-add\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-update\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-setQuota\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-clrQuota\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-safemode\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-nameservice\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 3) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    }\n\n    // Initialize RouterClient\n    try {\n      String address \u003d getConf().getTrimmed(\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfully added mount point \" + argv[i]);\n        }\n      } else if (\"-update\".equals(cmd)) {\n        if (updateMount(argv, i)) {\n          System.out.println(\"Successfully updated mount point \" + argv[i]);\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        if (removeMount(argv[i])) {\n          System.out.println(\"Successfully removed mount point \" + argv[i]);\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        if (argv.length \u003e 1) {\n          listMounts(argv[i]);\n        } else {\n          listMounts(\"/\");\n        }\n      } else if (\"-setQuota\".equals(cmd)) {\n        if (setQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set quota for mount point \" + argv[i]);\n        }\n      } else if (\"-clrQuota\".equals(cmd)) {\n        if (clrQuota(argv[i])) {\n          System.out.println(\n              \"Successfully clear quota for mount point \" + argv[i]);\n        }\n      } else if (\"-safemode\".equals(cmd)) {\n        if (argv.length \u003e 2) {\n          throw new IllegalArgumentException(\n              \"Too many arguments, Max\u003d1 argument allowed only\");\n        }\n        manageSafeMode(argv[i]);\n      } else if (\"-nameservice\".equals(cmd)) {\n        String subcmd \u003d argv[i];\n        String nsId \u003d argv[i + 1];\n        manageNameservice(subcmd, nsId);\n      } else if (\"-getDisabledNameservices\".equals(cmd)) {\n        getDisabledNameservices();\n      } else {\n        printUsage();\n        return exitCode;\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage();\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "09c9cf1d43b802dd62b532c3c7be0e21a0c9ad5c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13326. RBF: Improve the interfaces to modify and view mount tables. Contributed by Gang Li.\n",
      "commitDate": "26/04/18 1:54 PM",
      "commitName": "09c9cf1d43b802dd62b532c3c7be0e21a0c9ad5c",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "20/04/18 10:19 PM",
      "commitNameOld": "b6dae26f4490bbd03360b8df19ef00cf843430f3",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 5.65,
      "commitsBetweenForRepo": 538,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,136 +1,146 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n-      System.err.println(\"Not enough parameters specificed\");\n+      System.err.println(\"Not enough parameters specified\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n     if (\"-add\".equals(cmd)) {\n       if (argv.length \u003c 4) {\n-        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n+        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n+        printUsage();\n+        return exitCode;\n+      }\n+    } else if (\"-update\".equals(cmd)) {\n+      if (argv.length \u003c 4) {\n+        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n-        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n+        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-setQuota\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 4) {\n-        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n+        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-clrQuota\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n-        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n+        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-safemode\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n-        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n+        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-nameservice\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 3) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     }\n \n     // Initialize RouterClient\n     try {\n       String address \u003d getConf().getTrimmed(\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n-          System.out.println(\"Successfuly added mount point \" + argv[i]);\n+          System.out.println(\"Successfully added mount point \" + argv[i]);\n+        }\n+      } else if (\"-update\".equals(cmd)) {\n+        if (updateMount(argv, i)) {\n+          System.out.println(\"Successfully updated mount point \" + argv[i]);\n         }\n       } else if (\"-rm\".equals(cmd)) {\n         if (removeMount(argv[i])) {\n           System.out.println(\"Successfully removed mount point \" + argv[i]);\n         }\n       } else if (\"-ls\".equals(cmd)) {\n         if (argv.length \u003e 1) {\n           listMounts(argv[i]);\n         } else {\n           listMounts(\"/\");\n         }\n       } else if (\"-setQuota\".equals(cmd)) {\n         if (setQuota(argv, i)) {\n           System.out.println(\n               \"Successfully set quota for mount point \" + argv[i]);\n         }\n       } else if (\"-clrQuota\".equals(cmd)) {\n         if (clrQuota(argv[i])) {\n           System.out.println(\n               \"Successfully clear quota for mount point \" + argv[i]);\n         }\n       } else if (\"-safemode\".equals(cmd)) {\n         manageSafeMode(argv[i]);\n       } else if (\"-nameservice\".equals(cmd)) {\n         String subcmd \u003d argv[i];\n         String nsId \u003d argv[i + 1];\n         manageNameservice(subcmd, nsId);\n       } else if (\"-getDisabledNameservices\".equals(cmd)) {\n         getDisabledNameservices();\n       } else {\n         printUsage();\n         return exitCode;\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage();\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specified\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (\"-add\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-update\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-setQuota\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-clrQuota\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-safemode\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specified for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-nameservice\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 3) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    }\n\n    // Initialize RouterClient\n    try {\n      String address \u003d getConf().getTrimmed(\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfully added mount point \" + argv[i]);\n        }\n      } else if (\"-update\".equals(cmd)) {\n        if (updateMount(argv, i)) {\n          System.out.println(\"Successfully updated mount point \" + argv[i]);\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        if (removeMount(argv[i])) {\n          System.out.println(\"Successfully removed mount point \" + argv[i]);\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        if (argv.length \u003e 1) {\n          listMounts(argv[i]);\n        } else {\n          listMounts(\"/\");\n        }\n      } else if (\"-setQuota\".equals(cmd)) {\n        if (setQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set quota for mount point \" + argv[i]);\n        }\n      } else if (\"-clrQuota\".equals(cmd)) {\n        if (clrQuota(argv[i])) {\n          System.out.println(\n              \"Successfully clear quota for mount point \" + argv[i]);\n        }\n      } else if (\"-safemode\".equals(cmd)) {\n        manageSafeMode(argv[i]);\n      } else if (\"-nameservice\".equals(cmd)) {\n        String subcmd \u003d argv[i];\n        String nsId \u003d argv[i + 1];\n        manageNameservice(subcmd, nsId);\n      } else if (\"-getDisabledNameservices\".equals(cmd)) {\n        getDisabledNameservices();\n      } else {\n        printUsage();\n        return exitCode;\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage();\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "b6dae26f4490bbd03360b8df19ef00cf843430f3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13478. RBF: Disabled Nameservice store API. Contributed by Inigo Goiri.\n",
      "commitDate": "20/04/18 10:19 PM",
      "commitName": "b6dae26f4490bbd03360b8df19ef00cf843430f3",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "20/03/18 7:51 PM",
      "commitNameOld": "69fe4407ebd885fed69d9cf7f4dd17d3ba1acb60",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 31.1,
      "commitsBetweenForRepo": 337,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,124 +1,136 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       System.err.println(\"Not enough parameters specificed\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n     if (\"-add\".equals(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-setQuota\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-clrQuota\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-safemode\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n+    } else if (\"-nameservice\".equalsIgnoreCase(cmd)) {\n+      if (argv.length \u003c 3) {\n+        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n+        printUsage();\n+        return exitCode;\n+      }\n     }\n \n     // Initialize RouterClient\n     try {\n       String address \u003d getConf().getTrimmed(\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n           RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n           System.out.println(\"Successfuly added mount point \" + argv[i]);\n         }\n       } else if (\"-rm\".equals(cmd)) {\n         if (removeMount(argv[i])) {\n           System.out.println(\"Successfully removed mount point \" + argv[i]);\n         }\n       } else if (\"-ls\".equals(cmd)) {\n         if (argv.length \u003e 1) {\n           listMounts(argv[i]);\n         } else {\n           listMounts(\"/\");\n         }\n       } else if (\"-setQuota\".equals(cmd)) {\n         if (setQuota(argv, i)) {\n           System.out.println(\n               \"Successfully set quota for mount point \" + argv[i]);\n         }\n       } else if (\"-clrQuota\".equals(cmd)) {\n         if (clrQuota(argv[i])) {\n           System.out.println(\n               \"Successfully clear quota for mount point \" + argv[i]);\n         }\n       } else if (\"-safemode\".equals(cmd)) {\n         manageSafeMode(argv[i]);\n+      } else if (\"-nameservice\".equals(cmd)) {\n+        String subcmd \u003d argv[i];\n+        String nsId \u003d argv[i + 1];\n+        manageNameservice(subcmd, nsId);\n+      } else if (\"-getDisabledNameservices\".equals(cmd)) {\n+        getDisabledNameservices();\n       } else {\n         printUsage();\n         return exitCode;\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage();\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specificed\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (\"-add\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-setQuota\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-clrQuota\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-safemode\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-nameservice\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 3) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    }\n\n    // Initialize RouterClient\n    try {\n      String address \u003d getConf().getTrimmed(\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfuly added mount point \" + argv[i]);\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        if (removeMount(argv[i])) {\n          System.out.println(\"Successfully removed mount point \" + argv[i]);\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        if (argv.length \u003e 1) {\n          listMounts(argv[i]);\n        } else {\n          listMounts(\"/\");\n        }\n      } else if (\"-setQuota\".equals(cmd)) {\n        if (setQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set quota for mount point \" + argv[i]);\n        }\n      } else if (\"-clrQuota\".equals(cmd)) {\n        if (clrQuota(argv[i])) {\n          System.out.println(\n              \"Successfully clear quota for mount point \" + argv[i]);\n        }\n      } else if (\"-safemode\".equals(cmd)) {\n        manageSafeMode(argv[i]);\n      } else if (\"-nameservice\".equals(cmd)) {\n        String subcmd \u003d argv[i];\n        String nsId \u003d argv[i + 1];\n        manageNameservice(subcmd, nsId);\n      } else if (\"-getDisabledNameservices\".equals(cmd)) {\n        getDisabledNameservices();\n      } else {\n        printUsage();\n        return exitCode;\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage();\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
          "commitDate": "19/03/18 10:13 PM",
          "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
          "commitAuthor": "weiy",
          "commitDateOld": "19/03/18 5:19 PM",
          "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 0.2,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,124 +1,124 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       System.err.println(\"Not enough parameters specificed\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n     if (\"-add\".equals(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-setQuota\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-clrQuota\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-safemode\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     }\n \n     // Initialize RouterClient\n     try {\n       String address \u003d getConf().getTrimmed(\n-          DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n-          DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n+          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n+          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n           System.out.println(\"Successfuly added mount point \" + argv[i]);\n         }\n       } else if (\"-rm\".equals(cmd)) {\n         if (removeMount(argv[i])) {\n           System.out.println(\"Successfully removed mount point \" + argv[i]);\n         }\n       } else if (\"-ls\".equals(cmd)) {\n         if (argv.length \u003e 1) {\n           listMounts(argv[i]);\n         } else {\n           listMounts(\"/\");\n         }\n       } else if (\"-setQuota\".equals(cmd)) {\n         if (setQuota(argv, i)) {\n           System.out.println(\n               \"Successfully set quota for mount point \" + argv[i]);\n         }\n       } else if (\"-clrQuota\".equals(cmd)) {\n         if (clrQuota(argv[i])) {\n           System.out.println(\n               \"Successfully clear quota for mount point \" + argv[i]);\n         }\n       } else if (\"-safemode\".equals(cmd)) {\n         manageSafeMode(argv[i]);\n       } else {\n         printUsage();\n         return exitCode;\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage();\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specificed\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (\"-add\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-setQuota\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-clrQuota\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-safemode\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    }\n\n    // Initialize RouterClient\n    try {\n      String address \u003d getConf().getTrimmed(\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfuly added mount point \" + argv[i]);\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        if (removeMount(argv[i])) {\n          System.out.println(\"Successfully removed mount point \" + argv[i]);\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        if (argv.length \u003e 1) {\n          listMounts(argv[i]);\n        } else {\n          listMounts(\"/\");\n        }\n      } else if (\"-setQuota\".equals(cmd)) {\n        if (setQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set quota for mount point \" + argv[i]);\n        }\n      } else if (\"-clrQuota\".equals(cmd)) {\n        if (clrQuota(argv[i])) {\n          System.out.println(\n              \"Successfully clear quota for mount point \" + argv[i]);\n        }\n      } else if (\"-safemode\".equals(cmd)) {\n        manageSafeMode(argv[i]);\n      } else {\n        printUsage();\n        return exitCode;\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage();\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
          "commitDate": "19/03/18 10:13 PM",
          "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
          "commitAuthor": "weiy",
          "commitDateOld": "19/03/18 5:19 PM",
          "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 0.2,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,124 +1,124 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       System.err.println(\"Not enough parameters specificed\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n     if (\"-add\".equals(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-setQuota\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-clrQuota\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-safemode\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     }\n \n     // Initialize RouterClient\n     try {\n       String address \u003d getConf().getTrimmed(\n-          DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n-          DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n+          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n+          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n           System.out.println(\"Successfuly added mount point \" + argv[i]);\n         }\n       } else if (\"-rm\".equals(cmd)) {\n         if (removeMount(argv[i])) {\n           System.out.println(\"Successfully removed mount point \" + argv[i]);\n         }\n       } else if (\"-ls\".equals(cmd)) {\n         if (argv.length \u003e 1) {\n           listMounts(argv[i]);\n         } else {\n           listMounts(\"/\");\n         }\n       } else if (\"-setQuota\".equals(cmd)) {\n         if (setQuota(argv, i)) {\n           System.out.println(\n               \"Successfully set quota for mount point \" + argv[i]);\n         }\n       } else if (\"-clrQuota\".equals(cmd)) {\n         if (clrQuota(argv[i])) {\n           System.out.println(\n               \"Successfully clear quota for mount point \" + argv[i]);\n         }\n       } else if (\"-safemode\".equals(cmd)) {\n         manageSafeMode(argv[i]);\n       } else {\n         printUsage();\n         return exitCode;\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage();\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specificed\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (\"-add\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-setQuota\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-clrQuota\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-safemode\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    }\n\n    // Initialize RouterClient\n    try {\n      String address \u003d getConf().getTrimmed(\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          RBFConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfuly added mount point \" + argv[i]);\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        if (removeMount(argv[i])) {\n          System.out.println(\"Successfully removed mount point \" + argv[i]);\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        if (argv.length \u003e 1) {\n          listMounts(argv[i]);\n        } else {\n          listMounts(\"/\");\n        }\n      } else if (\"-setQuota\".equals(cmd)) {\n        if (setQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set quota for mount point \" + argv[i]);\n        }\n      } else if (\"-clrQuota\".equals(cmd)) {\n        if (clrQuota(argv[i])) {\n          System.out.println(\n              \"Successfully clear quota for mount point \" + argv[i]);\n        }\n      } else if (\"-safemode\".equals(cmd)) {\n        manageSafeMode(argv[i]);\n      } else {\n        printUsage();\n        return exitCode;\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage();\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
          "extendedDetails": {}
        }
      ]
    },
    "b0627c891b0e90e29dab2bec64a01c2c2ffe4ed0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13068. RBF: Add router admin option to manage safe mode. Contributed by Yiqun Lin.\n",
      "commitDate": "01/02/18 7:25 PM",
      "commitName": "b0627c891b0e90e29dab2bec64a01c2c2ffe4ed0",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "18/01/18 10:18 PM",
      "commitNameOld": "9e4f52d32319828c153a3ea658520b946988ae31",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 13.88,
      "commitsBetweenForRepo": 112,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,116 +1,124 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       System.err.println(\"Not enough parameters specificed\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n     if (\"-add\".equals(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-setQuota\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-clrQuota\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n+    } else if (\"-safemode\".equalsIgnoreCase(cmd)) {\n+      if (argv.length \u003c 2) {\n+        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n+        printUsage();\n+        return exitCode;\n+      }\n     }\n \n     // Initialize RouterClient\n     try {\n       String address \u003d getConf().getTrimmed(\n           DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n           DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n           System.out.println(\"Successfuly added mount point \" + argv[i]);\n         }\n       } else if (\"-rm\".equals(cmd)) {\n         if (removeMount(argv[i])) {\n           System.out.println(\"Successfully removed mount point \" + argv[i]);\n         }\n       } else if (\"-ls\".equals(cmd)) {\n         if (argv.length \u003e 1) {\n           listMounts(argv[i]);\n         } else {\n           listMounts(\"/\");\n         }\n       } else if (\"-setQuota\".equals(cmd)) {\n         if (setQuota(argv, i)) {\n           System.out.println(\n               \"Successfully set quota for mount point \" + argv[i]);\n         }\n       } else if (\"-clrQuota\".equals(cmd)) {\n         if (clrQuota(argv[i])) {\n           System.out.println(\n               \"Successfully clear quota for mount point \" + argv[i]);\n         }\n+      } else if (\"-safemode\".equals(cmd)) {\n+        manageSafeMode(argv[i]);\n       } else {\n         printUsage();\n         return exitCode;\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage();\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specificed\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (\"-add\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-setQuota\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-clrQuota\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-safemode\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    }\n\n    // Initialize RouterClient\n    try {\n      String address \u003d getConf().getTrimmed(\n          DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfuly added mount point \" + argv[i]);\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        if (removeMount(argv[i])) {\n          System.out.println(\"Successfully removed mount point \" + argv[i]);\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        if (argv.length \u003e 1) {\n          listMounts(argv[i]);\n        } else {\n          listMounts(\"/\");\n        }\n      } else if (\"-setQuota\".equals(cmd)) {\n        if (setQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set quota for mount point \" + argv[i]);\n        }\n      } else if (\"-clrQuota\".equals(cmd)) {\n        if (clrQuota(argv[i])) {\n          System.out.println(\n              \"Successfully clear quota for mount point \" + argv[i]);\n        }\n      } else if (\"-safemode\".equals(cmd)) {\n        manageSafeMode(argv[i]);\n      } else {\n        printUsage();\n        return exitCode;\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage();\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "d98a2e6e2383f8b66def346409b0517aa32d298d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12934. RBF: Federation supports global quota. Contributed by Yiqun Lin.\n",
      "commitDate": "09/01/18 9:59 PM",
      "commitName": "d98a2e6e2383f8b66def346409b0517aa32d298d",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "18/12/17 11:31 PM",
      "commitNameOld": "e040c97b7743469f363eeae52c8abcf4fe7c65d5",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 21.94,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,94 +1,116 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       System.err.println(\"Not enough parameters specificed\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n     if (\"-add\".equals(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n+    } else if (\"-setQuota\".equalsIgnoreCase(cmd)) {\n+      if (argv.length \u003c 4) {\n+        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n+        printUsage();\n+        return exitCode;\n+      }\n+    } else if (\"-clrQuota\".equalsIgnoreCase(cmd)) {\n+      if (argv.length \u003c 2) {\n+        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n+        printUsage();\n+        return exitCode;\n+      }\n     }\n \n     // Initialize RouterClient\n     try {\n       String address \u003d getConf().getTrimmed(\n           DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n           DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n           System.out.println(\"Successfuly added mount point \" + argv[i]);\n         }\n       } else if (\"-rm\".equals(cmd)) {\n         if (removeMount(argv[i])) {\n           System.out.println(\"Successfully removed mount point \" + argv[i]);\n         }\n       } else if (\"-ls\".equals(cmd)) {\n         if (argv.length \u003e 1) {\n           listMounts(argv[i]);\n         } else {\n           listMounts(\"/\");\n         }\n+      } else if (\"-setQuota\".equals(cmd)) {\n+        if (setQuota(argv, i)) {\n+          System.out.println(\n+              \"Successfully set quota for mount point \" + argv[i]);\n+        }\n+      } else if (\"-clrQuota\".equals(cmd)) {\n+        if (clrQuota(argv[i])) {\n+          System.out.println(\n+              \"Successfully clear quota for mount point \" + argv[i]);\n+        }\n       } else {\n         printUsage();\n         return exitCode;\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage();\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specificed\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (\"-add\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-setQuota\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-clrQuota\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    }\n\n    // Initialize RouterClient\n    try {\n      String address \u003d getConf().getTrimmed(\n          DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfuly added mount point \" + argv[i]);\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        if (removeMount(argv[i])) {\n          System.out.println(\"Successfully removed mount point \" + argv[i]);\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        if (argv.length \u003e 1) {\n          listMounts(argv[i]);\n        } else {\n          listMounts(\"/\");\n        }\n      } else if (\"-setQuota\".equals(cmd)) {\n        if (setQuota(argv, i)) {\n          System.out.println(\n              \"Successfully set quota for mount point \" + argv[i]);\n        }\n      } else if (\"-clrQuota\".equals(cmd)) {\n        if (clrQuota(argv[i])) {\n          System.out.println(\n              \"Successfully clear quota for mount point \" + argv[i]);\n        }\n      } else {\n        printUsage();\n        return exitCode;\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage();\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "e040c97b7743469f363eeae52c8abcf4fe7c65d5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12937. RBF: Add more unit tests for router admin commands. Contributed by Yiqun Lin.\n",
      "commitDate": "18/12/17 11:31 PM",
      "commitName": "e040c97b7743469f363eeae52c8abcf4fe7c65d5",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "14/12/17 10:09 PM",
      "commitNameOld": "ee028bfdf1c88a27cd925bed93ebb599a164dd2e",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 4.06,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,94 +1,94 @@\n   public int run(String[] argv) throws Exception {\n     if (argv.length \u003c 1) {\n       System.err.println(\"Not enough parameters specificed\");\n       printUsage();\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     // Verify that we have enough command line parameters\n     if (\"-add\".equals(cmd)) {\n       if (argv.length \u003c 4) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n       if (argv.length \u003c 2) {\n         System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n         printUsage();\n         return exitCode;\n       }\n     }\n \n     // Initialize RouterClient\n     try {\n       String address \u003d getConf().getTrimmed(\n           DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n           DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n       InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n       client \u003d new RouterClient(routerSocket, getConf());\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\n           \"Version mismatch between client and server... command aborted\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to Router... command aborted\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-add\".equals(cmd)) {\n         if (addMount(argv, i)) {\n-          System.err.println(\"Successfuly added mount point \" + argv[i]);\n+          System.out.println(\"Successfuly added mount point \" + argv[i]);\n         }\n       } else if (\"-rm\".equals(cmd)) {\n         if (removeMount(argv[i])) {\n-          System.err.println(\"Successfully removed mount point \" + argv[i]);\n+          System.out.println(\"Successfully removed mount point \" + argv[i]);\n         }\n       } else if (\"-ls\".equals(cmd)) {\n         if (argv.length \u003e 1) {\n           listMounts(argv[i]);\n         } else {\n           listMounts(\"/\");\n         }\n       } else {\n         printUsage();\n         return exitCode;\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage();\n     } catch (RemoteException e) {\n       // This is a error returned by the server.\n       // Print out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \" + content[0]);\n         e.printStackTrace();\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n         e.printStackTrace();\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n       e.printStackTrace();\n     }\n     if (debugException !\u003d null) {\n       LOG.debug(\"Exception encountered\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specificed\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (\"-add\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    }\n\n    // Initialize RouterClient\n    try {\n      String address \u003d getConf().getTrimmed(\n          DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.out.println(\"Successfuly added mount point \" + argv[i]);\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        if (removeMount(argv[i])) {\n          System.out.println(\"Successfully removed mount point \" + argv[i]);\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        if (argv.length \u003e 1) {\n          listMounts(argv[i]);\n        } else {\n          listMounts(\"/\");\n        }\n      } else {\n        printUsage();\n        return exitCode;\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage();\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "b3e6bd22e3c02b3e4f50396538f56a1bcb007638": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10646. Federation admin tool. Contributed by Inigo Goiri.\n\n(cherry picked from commit ae27e31fbcf546481db0b0345772db2e9132372e)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "b3e6bd22e3c02b3e4f50396538f56a1bcb007638",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,94 @@\n+  public int run(String[] argv) throws Exception {\n+    if (argv.length \u003c 1) {\n+      System.err.println(\"Not enough parameters specificed\");\n+      printUsage();\n+      return -1;\n+    }\n+\n+    int exitCode \u003d -1;\n+    int i \u003d 0;\n+    String cmd \u003d argv[i++];\n+\n+    // Verify that we have enough command line parameters\n+    if (\"-add\".equals(cmd)) {\n+      if (argv.length \u003c 4) {\n+        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n+        printUsage();\n+        return exitCode;\n+      }\n+    } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n+      if (argv.length \u003c 2) {\n+        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n+        printUsage();\n+        return exitCode;\n+      }\n+    }\n+\n+    // Initialize RouterClient\n+    try {\n+      String address \u003d getConf().getTrimmed(\n+          DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n+          DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n+      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n+      client \u003d new RouterClient(routerSocket, getConf());\n+    } catch (RPC.VersionMismatch v) {\n+      System.err.println(\n+          \"Version mismatch between client and server... command aborted\");\n+      return exitCode;\n+    } catch (IOException e) {\n+      System.err.println(\"Bad connection to Router... command aborted\");\n+      return exitCode;\n+    }\n+\n+    Exception debugException \u003d null;\n+    exitCode \u003d 0;\n+    try {\n+      if (\"-add\".equals(cmd)) {\n+        if (addMount(argv, i)) {\n+          System.err.println(\"Successfuly added mount point \" + argv[i]);\n+        }\n+      } else if (\"-rm\".equals(cmd)) {\n+        if (removeMount(argv[i])) {\n+          System.err.println(\"Successfully removed mount point \" + argv[i]);\n+        }\n+      } else if (\"-ls\".equals(cmd)) {\n+        if (argv.length \u003e 1) {\n+          listMounts(argv[i]);\n+        } else {\n+          listMounts(\"/\");\n+        }\n+      } else {\n+        printUsage();\n+        return exitCode;\n+      }\n+    } catch (IllegalArgumentException arge) {\n+      debugException \u003d arge;\n+      exitCode \u003d -1;\n+      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n+      printUsage();\n+    } catch (RemoteException e) {\n+      // This is a error returned by the server.\n+      // Print out the first line of the error message, ignore the stack trace.\n+      exitCode \u003d -1;\n+      debugException \u003d e;\n+      try {\n+        String[] content;\n+        content \u003d e.getLocalizedMessage().split(\"\\n\");\n+        System.err.println(cmd.substring(1) + \": \" + content[0]);\n+        e.printStackTrace();\n+      } catch (Exception ex) {\n+        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n+        e.printStackTrace();\n+        debugException \u003d ex;\n+      }\n+    } catch (Exception e) {\n+      exitCode \u003d -1;\n+      debugException \u003d e;\n+      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n+      e.printStackTrace();\n+    }\n+    if (debugException !\u003d null) {\n+      LOG.debug(\"Exception encountered\", debugException);\n+    }\n+    return exitCode;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n    if (argv.length \u003c 1) {\n      System.err.println(\"Not enough parameters specificed\");\n      printUsage();\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    // Verify that we have enough command line parameters\n    if (\"-add\".equals(cmd)) {\n      if (argv.length \u003c 4) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    } else if (\"-rm\".equalsIgnoreCase(cmd)) {\n      if (argv.length \u003c 2) {\n        System.err.println(\"Not enough parameters specificed for cmd \" + cmd);\n        printUsage();\n        return exitCode;\n      }\n    }\n\n    // Initialize RouterClient\n    try {\n      String address \u003d getConf().getTrimmed(\n          DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_KEY,\n          DFSConfigKeys.DFS_ROUTER_ADMIN_ADDRESS_DEFAULT);\n      InetSocketAddress routerSocket \u003d NetUtils.createSocketAddr(address);\n      client \u003d new RouterClient(routerSocket, getConf());\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\n          \"Version mismatch between client and server... command aborted\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to Router... command aborted\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-add\".equals(cmd)) {\n        if (addMount(argv, i)) {\n          System.err.println(\"Successfuly added mount point \" + argv[i]);\n        }\n      } else if (\"-rm\".equals(cmd)) {\n        if (removeMount(argv[i])) {\n          System.err.println(\"Successfully removed mount point \" + argv[i]);\n        }\n      } else if (\"-ls\".equals(cmd)) {\n        if (argv.length \u003e 1) {\n          listMounts(argv[i]);\n        } else {\n          listMounts(\"/\");\n        }\n      } else {\n        printUsage();\n        return exitCode;\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage();\n    } catch (RemoteException e) {\n      // This is a error returned by the server.\n      // Print out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \" + content[0]);\n        e.printStackTrace();\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \" + ex.getLocalizedMessage());\n        e.printStackTrace();\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \" + e.getLocalizedMessage());\n      e.printStackTrace();\n    }\n    if (debugException !\u003d null) {\n      LOG.debug(\"Exception encountered\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java"
    }
  }
}