{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CuratorBasedElectorService.java",
  "functionName": "notLeader",
  "functionId": "notLeader",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/CuratorBasedElectorService.java",
  "functionStartLine": 122,
  "functionEndLine": 132,
  "numCommitsSeen": 5,
  "timeTaken": 1792,
  "changeHistory": [
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda",
    "a6410a542e59acd9827457df4a257a843f785c29",
    "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe"
  ],
  "changeHistoryShort": {
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda": "Ybodychange",
    "a6410a542e59acd9827457df4a257a843f785c29": "Yfilerename",
    "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6102. RMActiveService context to be updated with new RMContext on failover. Contributed by Rohith Sharma K S.\n",
      "commitDate": "23/07/17 11:09 PM",
      "commitName": "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda",
      "commitAuthor": "Sunil G",
      "commitDateOld": "09/12/16 5:00 PM",
      "commitNameOld": "a6410a542e59acd9827457df4a257a843f785c29",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 226.21,
      "commitsBetweenForRepo": 1146,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,11 @@\n   public void notLeader() {\n     LOG.info(rmId + \" relinquish leadership\");\n     try {\n-      rmContext.getRMAdminService().transitionToStandby(\n+      rm.getRMContext().getRMAdminService()\n+          .transitionToStandby(\n           new HAServiceProtocol.StateChangeRequestInfo(\n               HAServiceProtocol.RequestSource.REQUEST_BY_ZKFC));\n     } catch (Exception e) {\n       LOG.info(rmId + \" did not transition to standby successfully.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void notLeader() {\n    LOG.info(rmId + \" relinquish leadership\");\n    try {\n      rm.getRMContext().getRMAdminService()\n          .transitionToStandby(\n          new HAServiceProtocol.StateChangeRequestInfo(\n              HAServiceProtocol.RequestSource.REQUEST_BY_ZKFC));\n    } catch (Exception e) {\n      LOG.info(rmId + \" did not transition to standby successfully.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/CuratorBasedElectorService.java",
      "extendedDetails": {}
    },
    "a6410a542e59acd9827457df4a257a843f785c29": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5709. Cleanup leader election configs and pluggability. Contribtued by Karthik Kambatla\n",
      "commitDate": "09/12/16 5:00 PM",
      "commitName": "a6410a542e59acd9827457df4a257a843f785c29",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/12/16 4:41 PM",
      "commitNameOld": "b0aace21b1ef3436ba9d516186208fee9a9ceef2",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void notLeader() {\n    LOG.info(rmId + \" relinquish leadership\");\n    try {\n      rmContext.getRMAdminService().transitionToStandby(\n          new HAServiceProtocol.StateChangeRequestInfo(\n              HAServiceProtocol.RequestSource.REQUEST_BY_ZKFC));\n    } catch (Exception e) {\n      LOG.info(rmId + \" did not transition to standby successfully.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/CuratorBasedElectorService.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/LeaderElectorService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/CuratorBasedElectorService.java"
      }
    },
    "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4438. Implement RM leader election with curator. Contributed by Jian He\n",
      "commitDate": "07/01/16 2:33 PM",
      "commitName": "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe",
      "commitAuthor": "Xuan",
      "diff": "@@ -0,0 +1,10 @@\n+  public void notLeader() {\n+    LOG.info(rmId + \" relinquish leadership\");\n+    try {\n+      rmContext.getRMAdminService().transitionToStandby(\n+          new HAServiceProtocol.StateChangeRequestInfo(\n+              HAServiceProtocol.RequestSource.REQUEST_BY_ZKFC));\n+    } catch (Exception e) {\n+      LOG.info(rmId + \" did not transition to standby successfully.\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void notLeader() {\n    LOG.info(rmId + \" relinquish leadership\");\n    try {\n      rmContext.getRMAdminService().transitionToStandby(\n          new HAServiceProtocol.StateChangeRequestInfo(\n              HAServiceProtocol.RequestSource.REQUEST_BY_ZKFC));\n    } catch (Exception e) {\n      LOG.info(rmId + \" did not transition to standby successfully.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/LeaderElectorService.java"
    }
  }
}