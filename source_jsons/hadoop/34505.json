{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerImpl.java",
  "functionName": "sendContainerMonitorStartEvent",
  "functionId": "sendContainerMonitorStartEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
  "functionStartLine": 1066,
  "functionEndLine": 1082,
  "numCommitsSeen": 103,
  "timeTaken": 3676,
  "changeHistory": [
    "42f90ab885d9693fcc1e52f9637f7de4111110ae",
    "ac7d152901e29b1f444507fe4e421eb6e1402b5a",
    "f7a77819a1e4ff394e110941c1f8dd80f47dd38f",
    "c2febdcbaa12078db42403fe8fd74180fb58a84b"
  ],
  "changeHistoryShort": {
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": "Ybodychange",
    "ac7d152901e29b1f444507fe4e421eb6e1402b5a": "Ybodychange",
    "f7a77819a1e4ff394e110941c1f8dd80f47dd38f": "Ybodychange",
    "c2febdcbaa12078db42403fe8fd74180fb58a84b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
      "commitDate": "29/05/16 8:54 AM",
      "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "19/05/16 11:58 PM",
      "commitNameOld": "0287c491071c15e1c47dc640e6ea437be8cf32ae",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 9.37,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void sendContainerMonitorStartEvent() {\n     long launchDuration \u003d clock.getTime() - containerLaunchStartTime;\n     metrics.addContainerLaunchDuration(launchDuration);\n \n-    long pmemBytes \u003d getResource().getMemory() * 1024 * 1024L;\n+    long pmemBytes \u003d getResource().getMemorySize() * 1024 * 1024L;\n     float pmemRatio \u003d daemonConf.getFloat(\n         YarnConfiguration.NM_VMEM_PMEM_RATIO,\n         YarnConfiguration.DEFAULT_NM_VMEM_PMEM_RATIO);\n     long vmemBytes \u003d (long) (pmemRatio * pmemBytes);\n     int cpuVcores \u003d getResource().getVirtualCores();\n     long localizationDuration \u003d containerLaunchStartTime -\n         containerLocalizationStartTime;\n     dispatcher.getEventHandler().handle(\n         new ContainerStartMonitoringEvent(containerId,\n         vmemBytes, pmemBytes, cpuVcores, launchDuration,\n         localizationDuration));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void sendContainerMonitorStartEvent() {\n    long launchDuration \u003d clock.getTime() - containerLaunchStartTime;\n    metrics.addContainerLaunchDuration(launchDuration);\n\n    long pmemBytes \u003d getResource().getMemorySize() * 1024 * 1024L;\n    float pmemRatio \u003d daemonConf.getFloat(\n        YarnConfiguration.NM_VMEM_PMEM_RATIO,\n        YarnConfiguration.DEFAULT_NM_VMEM_PMEM_RATIO);\n    long vmemBytes \u003d (long) (pmemRatio * pmemBytes);\n    int cpuVcores \u003d getResource().getVirtualCores();\n    long localizationDuration \u003d containerLaunchStartTime -\n        containerLocalizationStartTime;\n    dispatcher.getEventHandler().handle(\n        new ContainerStartMonitoringEvent(containerId,\n        vmemBytes, pmemBytes, cpuVcores, launchDuration,\n        localizationDuration));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "ac7d152901e29b1f444507fe4e421eb6e1402b5a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3363. add localization and container launch time to ContainerMetrics at NM to show these timing information for each active container. (zxu via rkanter)\n",
      "commitDate": "01/05/15 4:39 PM",
      "commitName": "ac7d152901e29b1f444507fe4e421eb6e1402b5a",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "26/04/15 9:13 AM",
      "commitNameOld": "47279c3228185548ed09c36579b420225e4894f5",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 5.31,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,17 @@\n   private void sendContainerMonitorStartEvent() {\n-      long pmemBytes \u003d getResource().getMemory() * 1024 * 1024L;\n-      float pmemRatio \u003d daemonConf.getFloat(\n-          YarnConfiguration.NM_VMEM_PMEM_RATIO,\n-          YarnConfiguration.DEFAULT_NM_VMEM_PMEM_RATIO);\n-      long vmemBytes \u003d (long) (pmemRatio * pmemBytes);\n-      int cpuVcores \u003d getResource().getVirtualCores();\n+    long launchDuration \u003d clock.getTime() - containerLaunchStartTime;\n+    metrics.addContainerLaunchDuration(launchDuration);\n \n-      dispatcher.getEventHandler().handle(\n-          new ContainerStartMonitoringEvent(containerId,\n-              vmemBytes, pmemBytes, cpuVcores));\n+    long pmemBytes \u003d getResource().getMemory() * 1024 * 1024L;\n+    float pmemRatio \u003d daemonConf.getFloat(\n+        YarnConfiguration.NM_VMEM_PMEM_RATIO,\n+        YarnConfiguration.DEFAULT_NM_VMEM_PMEM_RATIO);\n+    long vmemBytes \u003d (long) (pmemRatio * pmemBytes);\n+    int cpuVcores \u003d getResource().getVirtualCores();\n+    long localizationDuration \u003d containerLaunchStartTime -\n+        containerLocalizationStartTime;\n+    dispatcher.getEventHandler().handle(\n+        new ContainerStartMonitoringEvent(containerId,\n+        vmemBytes, pmemBytes, cpuVcores, launchDuration,\n+        localizationDuration));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void sendContainerMonitorStartEvent() {\n    long launchDuration \u003d clock.getTime() - containerLaunchStartTime;\n    metrics.addContainerLaunchDuration(launchDuration);\n\n    long pmemBytes \u003d getResource().getMemory() * 1024 * 1024L;\n    float pmemRatio \u003d daemonConf.getFloat(\n        YarnConfiguration.NM_VMEM_PMEM_RATIO,\n        YarnConfiguration.DEFAULT_NM_VMEM_PMEM_RATIO);\n    long vmemBytes \u003d (long) (pmemRatio * pmemBytes);\n    int cpuVcores \u003d getResource().getVirtualCores();\n    long localizationDuration \u003d containerLaunchStartTime -\n        containerLocalizationStartTime;\n    dispatcher.getEventHandler().handle(\n        new ContainerStartMonitoringEvent(containerId,\n        vmemBytes, pmemBytes, cpuVcores, launchDuration,\n        localizationDuration));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "f7a77819a1e4ff394e110941c1f8dd80f47dd38f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3022. Expose Container resource information from NodeManager for monitoring (adhoot via ranter)\n",
      "commitDate": "03/02/15 10:39 AM",
      "commitName": "f7a77819a1e4ff394e110941c1f8dd80f47dd38f",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "23/12/14 8:32 PM",
      "commitNameOld": "41a548a916d4248164cb9495320f123ec215d70e",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 41.59,
      "commitsBetweenForRepo": 223,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n   private void sendContainerMonitorStartEvent() {\n       long pmemBytes \u003d getResource().getMemory() * 1024 * 1024L;\n       float pmemRatio \u003d daemonConf.getFloat(\n           YarnConfiguration.NM_VMEM_PMEM_RATIO,\n           YarnConfiguration.DEFAULT_NM_VMEM_PMEM_RATIO);\n       long vmemBytes \u003d (long) (pmemRatio * pmemBytes);\n+      int cpuVcores \u003d getResource().getVirtualCores();\n \n       dispatcher.getEventHandler().handle(\n           new ContainerStartMonitoringEvent(containerId,\n-              vmemBytes, pmemBytes));\n+              vmemBytes, pmemBytes, cpuVcores));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void sendContainerMonitorStartEvent() {\n      long pmemBytes \u003d getResource().getMemory() * 1024 * 1024L;\n      float pmemRatio \u003d daemonConf.getFloat(\n          YarnConfiguration.NM_VMEM_PMEM_RATIO,\n          YarnConfiguration.DEFAULT_NM_VMEM_PMEM_RATIO);\n      long vmemBytes \u003d (long) (pmemRatio * pmemBytes);\n      int cpuVcores \u003d getResource().getVirtualCores();\n\n      dispatcher.getEventHandler().handle(\n          new ContainerStartMonitoringEvent(containerId,\n              vmemBytes, pmemBytes, cpuVcores));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "c2febdcbaa12078db42403fe8fd74180fb58a84b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1337. Recover containers upon nodemanager restart. (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617448 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/14 3:56 AM",
      "commitName": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,11 @@\n+  private void sendContainerMonitorStartEvent() {\n+      long pmemBytes \u003d getResource().getMemory() * 1024 * 1024L;\n+      float pmemRatio \u003d daemonConf.getFloat(\n+          YarnConfiguration.NM_VMEM_PMEM_RATIO,\n+          YarnConfiguration.DEFAULT_NM_VMEM_PMEM_RATIO);\n+      long vmemBytes \u003d (long) (pmemRatio * pmemBytes);\n+\n+      dispatcher.getEventHandler().handle(\n+          new ContainerStartMonitoringEvent(containerId,\n+              vmemBytes, pmemBytes));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void sendContainerMonitorStartEvent() {\n      long pmemBytes \u003d getResource().getMemory() * 1024 * 1024L;\n      float pmemRatio \u003d daemonConf.getFloat(\n          YarnConfiguration.NM_VMEM_PMEM_RATIO,\n          YarnConfiguration.DEFAULT_NM_VMEM_PMEM_RATIO);\n      long vmemBytes \u003d (long) (pmemRatio * pmemBytes);\n\n      dispatcher.getEventHandler().handle(\n          new ContainerStartMonitoringEvent(containerId,\n              vmemBytes, pmemBytes));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java"
    }
  }
}