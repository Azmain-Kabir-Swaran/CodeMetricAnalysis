{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Configuration.java",
  "functionName": "getAlternativeNames",
  "functionId": "getAlternativeNames___name-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
  "functionStartLine": 1328,
  "functionEndLine": 1349,
  "numCommitsSeen": 192,
  "timeTaken": 4477,
  "changeHistory": [
    "8e0ba42df43fa6f9a9d42746c7afb0eee0a31ae3",
    "7abf7e81512918d780e05070c29ee2ba8736f41e",
    "0b7139d6bcfe6a4860c98b3703ee163b2f4bdb36",
    "7d1b804d3a31c644b1af9fc4f7917f1f25f793d9",
    "9180eca59258fe07ee067c66e432cf322148025a"
  ],
  "changeHistoryShort": {
    "8e0ba42df43fa6f9a9d42746c7afb0eee0a31ae3": "Ymultichange(Yrename,Ybodychange)",
    "7abf7e81512918d780e05070c29ee2ba8736f41e": "Ybodychange",
    "0b7139d6bcfe6a4860c98b3703ee163b2f4bdb36": "Ybodychange",
    "7d1b804d3a31c644b1af9fc4f7917f1f25f793d9": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
    "9180eca59258fe07ee067c66e432cf322148025a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8e0ba42df43fa6f9a9d42746c7afb0eee0a31ae3": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "HADOOP-10178. Configuration deprecation always emit \"deprecated\" warnings when a new key is used. Contributed by Shanyu Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1557236 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/01/14 11:57 AM",
      "commitName": "8e0ba42df43fa6f9a9d42746c7afb0eee0a31ae3",
      "commitAuthor": "Chris Nauroth",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-10178. Configuration deprecation always emit \"deprecated\" warnings when a new key is used. Contributed by Shanyu Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1557236 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/01/14 11:57 AM",
          "commitName": "8e0ba42df43fa6f9a9d42746c7afb0eee0a31ae3",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "02/11/13 11:42 AM",
          "commitNameOld": "7abf7e81512918d780e05070c29ee2ba8736f41e",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 69.05,
          "commitsBetweenForRepo": 368,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  private String[] getAlternateNames(String name) {\n+  private String[] getAlternativeNames(String name) {\n     String altNames[] \u003d null;\n+    DeprecatedKeyInfo keyInfo \u003d null;\n     DeprecationContext cur \u003d deprecationContext.get();\n-    DeprecatedKeyInfo keyInfo \u003d cur.getDeprecatedKeyMap().get(name);\n-    if (keyInfo \u003d\u003d null) {\n-      altNames \u003d (cur.getReverseDeprecatedKeyMap().get(name) !\u003d null ) ? \n-        new String [] {cur.getReverseDeprecatedKeyMap().get(name)} : null;\n-      if(altNames !\u003d null \u0026\u0026 altNames.length \u003e 0) {\n-    \t//To help look for other new configs for this deprecated config\n-    \tkeyInfo \u003d cur.getDeprecatedKeyMap().get(altNames[0]);\n-      }      \n-    } \n-    if(keyInfo !\u003d null \u0026\u0026 keyInfo.newKeys.length \u003e 0) {\n-      List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e(); \n-      if(altNames !\u003d null) {\n-    \t  list.addAll(Arrays.asList(altNames));\n+    String depKey \u003d cur.getReverseDeprecatedKeyMap().get(name);\n+    if(depKey !\u003d null) {\n+      keyInfo \u003d cur.getDeprecatedKeyMap().get(depKey);\n+      if(keyInfo.newKeys.length \u003e 0) {\n+        if(getProps().containsKey(depKey)) {\n+          //if deprecated key is previously set explicitly\n+          List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n+          list.addAll(Arrays.asList(keyInfo.newKeys));\n+          list.add(depKey);\n+          altNames \u003d list.toArray(new String[list.size()]);\n+        }\n+        else {\n+          altNames \u003d keyInfo.newKeys;\n+        }\n       }\n-      list.addAll(Arrays.asList(keyInfo.newKeys));\n-      altNames \u003d list.toArray(new String[list.size()]);\n     }\n     return altNames;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String[] getAlternativeNames(String name) {\n    String altNames[] \u003d null;\n    DeprecatedKeyInfo keyInfo \u003d null;\n    DeprecationContext cur \u003d deprecationContext.get();\n    String depKey \u003d cur.getReverseDeprecatedKeyMap().get(name);\n    if(depKey !\u003d null) {\n      keyInfo \u003d cur.getDeprecatedKeyMap().get(depKey);\n      if(keyInfo.newKeys.length \u003e 0) {\n        if(getProps().containsKey(depKey)) {\n          //if deprecated key is previously set explicitly\n          List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n          list.addAll(Arrays.asList(keyInfo.newKeys));\n          list.add(depKey);\n          altNames \u003d list.toArray(new String[list.size()]);\n        }\n        else {\n          altNames \u003d keyInfo.newKeys;\n        }\n      }\n    }\n    return altNames;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
          "extendedDetails": {
            "oldValue": "getAlternateNames",
            "newValue": "getAlternativeNames"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10178. Configuration deprecation always emit \"deprecated\" warnings when a new key is used. Contributed by Shanyu Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1557236 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/01/14 11:57 AM",
          "commitName": "8e0ba42df43fa6f9a9d42746c7afb0eee0a31ae3",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "02/11/13 11:42 AM",
          "commitNameOld": "7abf7e81512918d780e05070c29ee2ba8736f41e",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 69.05,
          "commitsBetweenForRepo": 368,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  private String[] getAlternateNames(String name) {\n+  private String[] getAlternativeNames(String name) {\n     String altNames[] \u003d null;\n+    DeprecatedKeyInfo keyInfo \u003d null;\n     DeprecationContext cur \u003d deprecationContext.get();\n-    DeprecatedKeyInfo keyInfo \u003d cur.getDeprecatedKeyMap().get(name);\n-    if (keyInfo \u003d\u003d null) {\n-      altNames \u003d (cur.getReverseDeprecatedKeyMap().get(name) !\u003d null ) ? \n-        new String [] {cur.getReverseDeprecatedKeyMap().get(name)} : null;\n-      if(altNames !\u003d null \u0026\u0026 altNames.length \u003e 0) {\n-    \t//To help look for other new configs for this deprecated config\n-    \tkeyInfo \u003d cur.getDeprecatedKeyMap().get(altNames[0]);\n-      }      \n-    } \n-    if(keyInfo !\u003d null \u0026\u0026 keyInfo.newKeys.length \u003e 0) {\n-      List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e(); \n-      if(altNames !\u003d null) {\n-    \t  list.addAll(Arrays.asList(altNames));\n+    String depKey \u003d cur.getReverseDeprecatedKeyMap().get(name);\n+    if(depKey !\u003d null) {\n+      keyInfo \u003d cur.getDeprecatedKeyMap().get(depKey);\n+      if(keyInfo.newKeys.length \u003e 0) {\n+        if(getProps().containsKey(depKey)) {\n+          //if deprecated key is previously set explicitly\n+          List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n+          list.addAll(Arrays.asList(keyInfo.newKeys));\n+          list.add(depKey);\n+          altNames \u003d list.toArray(new String[list.size()]);\n+        }\n+        else {\n+          altNames \u003d keyInfo.newKeys;\n+        }\n       }\n-      list.addAll(Arrays.asList(keyInfo.newKeys));\n-      altNames \u003d list.toArray(new String[list.size()]);\n     }\n     return altNames;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String[] getAlternativeNames(String name) {\n    String altNames[] \u003d null;\n    DeprecatedKeyInfo keyInfo \u003d null;\n    DeprecationContext cur \u003d deprecationContext.get();\n    String depKey \u003d cur.getReverseDeprecatedKeyMap().get(name);\n    if(depKey !\u003d null) {\n      keyInfo \u003d cur.getDeprecatedKeyMap().get(depKey);\n      if(keyInfo.newKeys.length \u003e 0) {\n        if(getProps().containsKey(depKey)) {\n          //if deprecated key is previously set explicitly\n          List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();\n          list.addAll(Arrays.asList(keyInfo.newKeys));\n          list.add(depKey);\n          altNames \u003d list.toArray(new String[list.size()]);\n        }\n        else {\n          altNames \u003d keyInfo.newKeys;\n        }\n      }\n    }\n    return altNames;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
          "extendedDetails": {}
        }
      ]
    },
    "7abf7e81512918d780e05070c29ee2ba8736f41e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9478. Fix race conditions during the initialization of Configuration related to deprecatedKeyMap (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1538248 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/11/13 11:42 AM",
      "commitName": "7abf7e81512918d780e05070c29ee2ba8736f41e",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "20/08/13 2:53 PM",
      "commitNameOld": "2cd6064195da817d2c34b64f19d4c6d630efbc4a",
      "commitAuthorOld": "Jonathan Turner Eagles",
      "daysBetweenCommits": 73.87,
      "commitsBetweenForRepo": 472,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   private String[] getAlternateNames(String name) {\n     String altNames[] \u003d null;\n-    DeprecatedKeyInfo keyInfo \u003d deprecatedKeyMap.get(name);\n+    DeprecationContext cur \u003d deprecationContext.get();\n+    DeprecatedKeyInfo keyInfo \u003d cur.getDeprecatedKeyMap().get(name);\n     if (keyInfo \u003d\u003d null) {\n-      altNames \u003d (reverseDeprecatedKeyMap.get(name) !\u003d null ) ? \n-        new String [] {reverseDeprecatedKeyMap.get(name)} : null;\n+      altNames \u003d (cur.getReverseDeprecatedKeyMap().get(name) !\u003d null ) ? \n+        new String [] {cur.getReverseDeprecatedKeyMap().get(name)} : null;\n       if(altNames !\u003d null \u0026\u0026 altNames.length \u003e 0) {\n     \t//To help look for other new configs for this deprecated config\n-    \tkeyInfo \u003d deprecatedKeyMap.get(altNames[0]);\n+    \tkeyInfo \u003d cur.getDeprecatedKeyMap().get(altNames[0]);\n       }      \n     } \n     if(keyInfo !\u003d null \u0026\u0026 keyInfo.newKeys.length \u003e 0) {\n       List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e(); \n       if(altNames !\u003d null) {\n     \t  list.addAll(Arrays.asList(altNames));\n       }\n       list.addAll(Arrays.asList(keyInfo.newKeys));\n       altNames \u003d list.toArray(new String[list.size()]);\n     }\n     return altNames;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String[] getAlternateNames(String name) {\n    String altNames[] \u003d null;\n    DeprecationContext cur \u003d deprecationContext.get();\n    DeprecatedKeyInfo keyInfo \u003d cur.getDeprecatedKeyMap().get(name);\n    if (keyInfo \u003d\u003d null) {\n      altNames \u003d (cur.getReverseDeprecatedKeyMap().get(name) !\u003d null ) ? \n        new String [] {cur.getReverseDeprecatedKeyMap().get(name)} : null;\n      if(altNames !\u003d null \u0026\u0026 altNames.length \u003e 0) {\n    \t//To help look for other new configs for this deprecated config\n    \tkeyInfo \u003d cur.getDeprecatedKeyMap().get(altNames[0]);\n      }      \n    } \n    if(keyInfo !\u003d null \u0026\u0026 keyInfo.newKeys.length \u003e 0) {\n      List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e(); \n      if(altNames !\u003d null) {\n    \t  list.addAll(Arrays.asList(altNames));\n      }\n      list.addAll(Arrays.asList(keyInfo.newKeys));\n      altNames \u003d list.toArray(new String[list.size()]);\n    }\n    return altNames;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {}
    },
    "0b7139d6bcfe6a4860c98b3703ee163b2f4bdb36": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8525. Provide Improved Traceability for Configuration (bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1359775 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/07/12 9:49 AM",
      "commitName": "0b7139d6bcfe6a4860c98b3703ee163b2f4bdb36",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "30/06/12 11:40 AM",
      "commitNameOld": "cb5867573e8fd5bf1c5fed793aa554ccb5549661",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 9.92,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private String[] getAlternateNames(String name) {\n-    String oldName, altNames[] \u003d null;\n+    String altNames[] \u003d null;\n     DeprecatedKeyInfo keyInfo \u003d deprecatedKeyMap.get(name);\n     if (keyInfo \u003d\u003d null) {\n       altNames \u003d (reverseDeprecatedKeyMap.get(name) !\u003d null ) ? \n         new String [] {reverseDeprecatedKeyMap.get(name)} : null;\n       if(altNames !\u003d null \u0026\u0026 altNames.length \u003e 0) {\n     \t//To help look for other new configs for this deprecated config\n     \tkeyInfo \u003d deprecatedKeyMap.get(altNames[0]);\n       }      \n     } \n     if(keyInfo !\u003d null \u0026\u0026 keyInfo.newKeys.length \u003e 0) {\n       List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e(); \n       if(altNames !\u003d null) {\n     \t  list.addAll(Arrays.asList(altNames));\n       }\n       list.addAll(Arrays.asList(keyInfo.newKeys));\n       altNames \u003d list.toArray(new String[list.size()]);\n     }\n     return altNames;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String[] getAlternateNames(String name) {\n    String altNames[] \u003d null;\n    DeprecatedKeyInfo keyInfo \u003d deprecatedKeyMap.get(name);\n    if (keyInfo \u003d\u003d null) {\n      altNames \u003d (reverseDeprecatedKeyMap.get(name) !\u003d null ) ? \n        new String [] {reverseDeprecatedKeyMap.get(name)} : null;\n      if(altNames !\u003d null \u0026\u0026 altNames.length \u003e 0) {\n    \t//To help look for other new configs for this deprecated config\n    \tkeyInfo \u003d deprecatedKeyMap.get(altNames[0]);\n      }      \n    } \n    if(keyInfo !\u003d null \u0026\u0026 keyInfo.newKeys.length \u003e 0) {\n      List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e(); \n      if(altNames !\u003d null) {\n    \t  list.addAll(Arrays.asList(altNames));\n      }\n      list.addAll(Arrays.asList(keyInfo.newKeys));\n      altNames \u003d list.toArray(new String[list.size()]);\n    }\n    return altNames;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
      "extendedDetails": {}
    },
    "7d1b804d3a31c644b1af9fc4f7917f1f25f793d9": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
      "commitMessage": "HADOOP-8172. Configuration no longer sets all keys in a deprecated key list. (Anupam Seth via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1332821 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/05/12 2:00 PM",
      "commitName": "7d1b804d3a31c644b1af9fc4f7917f1f25f793d9",
      "commitAuthor": "Robert Joseph Evans",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-8172. Configuration no longer sets all keys in a deprecated key list. (Anupam Seth via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1332821 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/05/12 2:00 PM",
          "commitName": "7d1b804d3a31c644b1af9fc4f7917f1f25f793d9",
          "commitAuthor": "Robert Joseph Evans",
          "commitDateOld": "30/04/12 2:55 PM",
          "commitNameOld": "1e88c1f088a593b40838535bcbdc8654633893fd",
          "commitAuthorOld": "Robert Joseph Evans",
          "daysBetweenCommits": 0.96,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,21 @@\n-  private String getAlternateName(String name) {\n-    String altName;\n+  private String[] getAlternateNames(String name) {\n+    String oldName, altNames[] \u003d null;\n     DeprecatedKeyInfo keyInfo \u003d deprecatedKeyMap.get(name);\n-    if (keyInfo !\u003d null) {\n-      altName \u003d (keyInfo.newKeys.length \u003e 0) ? keyInfo.newKeys[0] : null;\n+    if (keyInfo \u003d\u003d null) {\n+      altNames \u003d (reverseDeprecatedKeyMap.get(name) !\u003d null ) ? \n+        new String [] {reverseDeprecatedKeyMap.get(name)} : null;\n+      if(altNames !\u003d null \u0026\u0026 altNames.length \u003e 0) {\n+    \t//To help look for other new configs for this deprecated config\n+    \tkeyInfo \u003d deprecatedKeyMap.get(altNames[0]);\n+      }      \n+    } \n+    if(keyInfo !\u003d null \u0026\u0026 keyInfo.newKeys.length \u003e 0) {\n+      List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e(); \n+      if(altNames !\u003d null) {\n+    \t  list.addAll(Arrays.asList(altNames));\n+      }\n+      list.addAll(Arrays.asList(keyInfo.newKeys));\n+      altNames \u003d list.toArray(new String[list.size()]);\n     }\n-    else {\n-      altName \u003d reverseDeprecatedKeyMap.get(name);\n-    }\n-    return altName;\n+    return altNames;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String[] getAlternateNames(String name) {\n    String oldName, altNames[] \u003d null;\n    DeprecatedKeyInfo keyInfo \u003d deprecatedKeyMap.get(name);\n    if (keyInfo \u003d\u003d null) {\n      altNames \u003d (reverseDeprecatedKeyMap.get(name) !\u003d null ) ? \n        new String [] {reverseDeprecatedKeyMap.get(name)} : null;\n      if(altNames !\u003d null \u0026\u0026 altNames.length \u003e 0) {\n    \t//To help look for other new configs for this deprecated config\n    \tkeyInfo \u003d deprecatedKeyMap.get(altNames[0]);\n      }      \n    } \n    if(keyInfo !\u003d null \u0026\u0026 keyInfo.newKeys.length \u003e 0) {\n      List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e(); \n      if(altNames !\u003d null) {\n    \t  list.addAll(Arrays.asList(altNames));\n      }\n      list.addAll(Arrays.asList(keyInfo.newKeys));\n      altNames \u003d list.toArray(new String[list.size()]);\n    }\n    return altNames;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
          "extendedDetails": {
            "oldValue": "getAlternateName",
            "newValue": "getAlternateNames"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-8172. Configuration no longer sets all keys in a deprecated key list. (Anupam Seth via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1332821 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/05/12 2:00 PM",
          "commitName": "7d1b804d3a31c644b1af9fc4f7917f1f25f793d9",
          "commitAuthor": "Robert Joseph Evans",
          "commitDateOld": "30/04/12 2:55 PM",
          "commitNameOld": "1e88c1f088a593b40838535bcbdc8654633893fd",
          "commitAuthorOld": "Robert Joseph Evans",
          "daysBetweenCommits": 0.96,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,21 @@\n-  private String getAlternateName(String name) {\n-    String altName;\n+  private String[] getAlternateNames(String name) {\n+    String oldName, altNames[] \u003d null;\n     DeprecatedKeyInfo keyInfo \u003d deprecatedKeyMap.get(name);\n-    if (keyInfo !\u003d null) {\n-      altName \u003d (keyInfo.newKeys.length \u003e 0) ? keyInfo.newKeys[0] : null;\n+    if (keyInfo \u003d\u003d null) {\n+      altNames \u003d (reverseDeprecatedKeyMap.get(name) !\u003d null ) ? \n+        new String [] {reverseDeprecatedKeyMap.get(name)} : null;\n+      if(altNames !\u003d null \u0026\u0026 altNames.length \u003e 0) {\n+    \t//To help look for other new configs for this deprecated config\n+    \tkeyInfo \u003d deprecatedKeyMap.get(altNames[0]);\n+      }      \n+    } \n+    if(keyInfo !\u003d null \u0026\u0026 keyInfo.newKeys.length \u003e 0) {\n+      List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e(); \n+      if(altNames !\u003d null) {\n+    \t  list.addAll(Arrays.asList(altNames));\n+      }\n+      list.addAll(Arrays.asList(keyInfo.newKeys));\n+      altNames \u003d list.toArray(new String[list.size()]);\n     }\n-    else {\n-      altName \u003d reverseDeprecatedKeyMap.get(name);\n-    }\n-    return altName;\n+    return altNames;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String[] getAlternateNames(String name) {\n    String oldName, altNames[] \u003d null;\n    DeprecatedKeyInfo keyInfo \u003d deprecatedKeyMap.get(name);\n    if (keyInfo \u003d\u003d null) {\n      altNames \u003d (reverseDeprecatedKeyMap.get(name) !\u003d null ) ? \n        new String [] {reverseDeprecatedKeyMap.get(name)} : null;\n      if(altNames !\u003d null \u0026\u0026 altNames.length \u003e 0) {\n    \t//To help look for other new configs for this deprecated config\n    \tkeyInfo \u003d deprecatedKeyMap.get(altNames[0]);\n      }      \n    } \n    if(keyInfo !\u003d null \u0026\u0026 keyInfo.newKeys.length \u003e 0) {\n      List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e(); \n      if(altNames !\u003d null) {\n    \t  list.addAll(Arrays.asList(altNames));\n      }\n      list.addAll(Arrays.asList(keyInfo.newKeys));\n      altNames \u003d list.toArray(new String[list.size()]);\n    }\n    return altNames;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "String[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-8172. Configuration no longer sets all keys in a deprecated key list. (Anupam Seth via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1332821 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/05/12 2:00 PM",
          "commitName": "7d1b804d3a31c644b1af9fc4f7917f1f25f793d9",
          "commitAuthor": "Robert Joseph Evans",
          "commitDateOld": "30/04/12 2:55 PM",
          "commitNameOld": "1e88c1f088a593b40838535bcbdc8654633893fd",
          "commitAuthorOld": "Robert Joseph Evans",
          "daysBetweenCommits": 0.96,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,21 @@\n-  private String getAlternateName(String name) {\n-    String altName;\n+  private String[] getAlternateNames(String name) {\n+    String oldName, altNames[] \u003d null;\n     DeprecatedKeyInfo keyInfo \u003d deprecatedKeyMap.get(name);\n-    if (keyInfo !\u003d null) {\n-      altName \u003d (keyInfo.newKeys.length \u003e 0) ? keyInfo.newKeys[0] : null;\n+    if (keyInfo \u003d\u003d null) {\n+      altNames \u003d (reverseDeprecatedKeyMap.get(name) !\u003d null ) ? \n+        new String [] {reverseDeprecatedKeyMap.get(name)} : null;\n+      if(altNames !\u003d null \u0026\u0026 altNames.length \u003e 0) {\n+    \t//To help look for other new configs for this deprecated config\n+    \tkeyInfo \u003d deprecatedKeyMap.get(altNames[0]);\n+      }      \n+    } \n+    if(keyInfo !\u003d null \u0026\u0026 keyInfo.newKeys.length \u003e 0) {\n+      List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e(); \n+      if(altNames !\u003d null) {\n+    \t  list.addAll(Arrays.asList(altNames));\n+      }\n+      list.addAll(Arrays.asList(keyInfo.newKeys));\n+      altNames \u003d list.toArray(new String[list.size()]);\n     }\n-    else {\n-      altName \u003d reverseDeprecatedKeyMap.get(name);\n-    }\n-    return altName;\n+    return altNames;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String[] getAlternateNames(String name) {\n    String oldName, altNames[] \u003d null;\n    DeprecatedKeyInfo keyInfo \u003d deprecatedKeyMap.get(name);\n    if (keyInfo \u003d\u003d null) {\n      altNames \u003d (reverseDeprecatedKeyMap.get(name) !\u003d null ) ? \n        new String [] {reverseDeprecatedKeyMap.get(name)} : null;\n      if(altNames !\u003d null \u0026\u0026 altNames.length \u003e 0) {\n    \t//To help look for other new configs for this deprecated config\n    \tkeyInfo \u003d deprecatedKeyMap.get(altNames[0]);\n      }      \n    } \n    if(keyInfo !\u003d null \u0026\u0026 keyInfo.newKeys.length \u003e 0) {\n      List\u003cString\u003e list \u003d new ArrayList\u003cString\u003e(); \n      if(altNames !\u003d null) {\n    \t  list.addAll(Arrays.asList(altNames));\n      }\n      list.addAll(Arrays.asList(keyInfo.newKeys));\n      altNames \u003d list.toArray(new String[list.size()]);\n    }\n    return altNames;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
          "extendedDetails": {}
        }
      ]
    },
    "9180eca59258fe07ee067c66e432cf322148025a": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8167. Configuration deprecation logic breaks backwards compatibility (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1300642 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/03/12 10:07 AM",
      "commitName": "9180eca59258fe07ee067c66e432cf322148025a",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,11 @@\n+  private String getAlternateName(String name) {\n+    String altName;\n+    DeprecatedKeyInfo keyInfo \u003d deprecatedKeyMap.get(name);\n+    if (keyInfo !\u003d null) {\n+      altName \u003d (keyInfo.newKeys.length \u003e 0) ? keyInfo.newKeys[0] : null;\n+    }\n+    else {\n+      altName \u003d reverseDeprecatedKeyMap.get(name);\n+    }\n+    return altName;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String getAlternateName(String name) {\n    String altName;\n    DeprecatedKeyInfo keyInfo \u003d deprecatedKeyMap.get(name);\n    if (keyInfo !\u003d null) {\n      altName \u003d (keyInfo.newKeys.length \u003e 0) ? keyInfo.newKeys[0] : null;\n    }\n    else {\n      altName \u003d reverseDeprecatedKeyMap.get(name);\n    }\n    return altName;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java"
    }
  }
}