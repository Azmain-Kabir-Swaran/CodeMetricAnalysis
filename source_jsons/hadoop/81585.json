{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KMSUtil.java",
  "functionName": "parseJSONEncKeyVersions",
  "functionId": "parseJSONEncKeyVersions___keyName-String__valueList-List",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/KMSUtil.java",
  "functionStartLine": 145,
  "functionEndLine": 155,
  "numCommitsSeen": 106,
  "timeTaken": 3771,
  "changeHistory": [
    "4ec5acc70418a3f2327cf83ecae1789a057fdd99",
    "79d90b810c14d5e3abab75235f587663834ce36c",
    "0c1469ece38556cf02a0c7bd23761d6bf79d9a64"
  ],
  "changeHistoryShort": {
    "4ec5acc70418a3f2327cf83ecae1789a057fdd99": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "79d90b810c14d5e3abab75235f587663834ce36c": "Ymultichange(Yrename,Ybodychange)",
    "0c1469ece38556cf02a0c7bd23761d6bf79d9a64": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4ec5acc70418a3f2327cf83ecae1789a057fdd99": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-14705. Add batched interface reencryptEncryptedKeys to KMS.\n",
      "commitDate": "22/08/17 7:47 AM",
      "commitName": "4ec5acc70418a3f2327cf83ecae1789a057fdd99",
      "commitAuthor": "Xiao Chen",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HADOOP-14705. Add batched interface reencryptEncryptedKeys to KMS.\n",
          "commitDate": "22/08/17 7:47 AM",
          "commitName": "4ec5acc70418a3f2327cf83ecae1789a057fdd99",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "22/08/17 3:55 AM",
          "commitNameOld": "27ab5f7385c70f16fd593edc336c573c69f19331",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n       parseJSONEncKeyVersions(String keyName, List valueList) {\n-    List\u003cEncryptedKeyVersion\u003e ekvs \u003d new LinkedList\u003cEncryptedKeyVersion\u003e();\n+    checkNotNull(valueList, \"valueList\");\n+    List\u003cEncryptedKeyVersion\u003e ekvs \u003d new ArrayList\u003c\u003e(valueList.size());\n     if (!valueList.isEmpty()) {\n       for (Object values : valueList) {\n         Map valueMap \u003d (Map) values;\n         ekvs.add(parseJSONEncKeyVersion(keyName, valueMap));\n       }\n     }\n     return ekvs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      parseJSONEncKeyVersions(String keyName, List valueList) {\n    checkNotNull(valueList, \"valueList\");\n    List\u003cEncryptedKeyVersion\u003e ekvs \u003d new ArrayList\u003c\u003e(valueList.size());\n    if (!valueList.isEmpty()) {\n      for (Object values : valueList) {\n        Map valueMap \u003d (Map) values;\n        ekvs.add(parseJSONEncKeyVersion(keyName, valueMap));\n      }\n    }\n    return ekvs;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/KMSUtil.java",
          "extendedDetails": {
            "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
            "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/KMSUtil.java",
            "oldMethodName": "parseJSONEncKeyVersions",
            "newMethodName": "parseJSONEncKeyVersions"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-14705. Add batched interface reencryptEncryptedKeys to KMS.\n",
          "commitDate": "22/08/17 7:47 AM",
          "commitName": "4ec5acc70418a3f2327cf83ecae1789a057fdd99",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "22/08/17 3:55 AM",
          "commitNameOld": "27ab5f7385c70f16fd593edc336c573c69f19331",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n       parseJSONEncKeyVersions(String keyName, List valueList) {\n-    List\u003cEncryptedKeyVersion\u003e ekvs \u003d new LinkedList\u003cEncryptedKeyVersion\u003e();\n+    checkNotNull(valueList, \"valueList\");\n+    List\u003cEncryptedKeyVersion\u003e ekvs \u003d new ArrayList\u003c\u003e(valueList.size());\n     if (!valueList.isEmpty()) {\n       for (Object values : valueList) {\n         Map valueMap \u003d (Map) values;\n         ekvs.add(parseJSONEncKeyVersion(keyName, valueMap));\n       }\n     }\n     return ekvs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      parseJSONEncKeyVersions(String keyName, List valueList) {\n    checkNotNull(valueList, \"valueList\");\n    List\u003cEncryptedKeyVersion\u003e ekvs \u003d new ArrayList\u003c\u003e(valueList.size());\n    if (!valueList.isEmpty()) {\n      for (Object values : valueList) {\n        Map valueMap \u003d (Map) values;\n        ekvs.add(parseJSONEncKeyVersion(keyName, valueMap));\n      }\n    }\n    return ekvs;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/KMSUtil.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14705. Add batched interface reencryptEncryptedKeys to KMS.\n",
          "commitDate": "22/08/17 7:47 AM",
          "commitName": "4ec5acc70418a3f2327cf83ecae1789a057fdd99",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "22/08/17 3:55 AM",
          "commitNameOld": "27ab5f7385c70f16fd593edc336c573c69f19331",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n       parseJSONEncKeyVersions(String keyName, List valueList) {\n-    List\u003cEncryptedKeyVersion\u003e ekvs \u003d new LinkedList\u003cEncryptedKeyVersion\u003e();\n+    checkNotNull(valueList, \"valueList\");\n+    List\u003cEncryptedKeyVersion\u003e ekvs \u003d new ArrayList\u003c\u003e(valueList.size());\n     if (!valueList.isEmpty()) {\n       for (Object values : valueList) {\n         Map valueMap \u003d (Map) values;\n         ekvs.add(parseJSONEncKeyVersion(keyName, valueMap));\n       }\n     }\n     return ekvs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      parseJSONEncKeyVersions(String keyName, List valueList) {\n    checkNotNull(valueList, \"valueList\");\n    List\u003cEncryptedKeyVersion\u003e ekvs \u003d new ArrayList\u003c\u003e(valueList.size());\n    if (!valueList.isEmpty()) {\n      for (Object values : valueList) {\n        Map valueMap \u003d (Map) values;\n        ekvs.add(parseJSONEncKeyVersion(keyName, valueMap));\n      }\n    }\n    return ekvs;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/KMSUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "79d90b810c14d5e3abab75235f587663834ce36c": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "HADOOP-13827. Add reencryptEncryptedKey interface to KMS.\n",
      "commitDate": "06/12/16 12:04 PM",
      "commitName": "79d90b810c14d5e3abab75235f587663834ce36c",
      "commitAuthor": "Xiao Chen",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-13827. Add reencryptEncryptedKey interface to KMS.\n",
          "commitDate": "06/12/16 12:04 PM",
          "commitName": "79d90b810c14d5e3abab75235f587663834ce36c",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "28/11/16 9:07 PM",
          "commitNameOld": "67d9f2808efb34b9a7b0b824cb4033b95ad33474",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 7.62,
          "commitsBetweenForRepo": 53,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,10 @@\n-      parseJSONEncKeyVersion(String keyName, List valueList) {\n+      parseJSONEncKeyVersions(String keyName, List valueList) {\n     List\u003cEncryptedKeyVersion\u003e ekvs \u003d new LinkedList\u003cEncryptedKeyVersion\u003e();\n     if (!valueList.isEmpty()) {\n       for (Object values : valueList) {\n         Map valueMap \u003d (Map) values;\n-\n-        String versionName \u003d checkNotNull(\n-                (String) valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD),\n-                KMSRESTConstants.VERSION_NAME_FIELD);\n-\n-        byte[] iv \u003d Base64.decodeBase64(checkNotNull(\n-                (String) valueMap.get(KMSRESTConstants.IV_FIELD),\n-                KMSRESTConstants.IV_FIELD));\n-\n-        Map encValueMap \u003d checkNotNull((Map)\n-                valueMap.get(KMSRESTConstants.ENCRYPTED_KEY_VERSION_FIELD),\n-                KMSRESTConstants.ENCRYPTED_KEY_VERSION_FIELD);\n-\n-        String encVersionName \u003d checkNotNull((String)\n-                encValueMap.get(KMSRESTConstants.VERSION_NAME_FIELD),\n-                KMSRESTConstants.VERSION_NAME_FIELD);\n-\n-        byte[] encKeyMaterial \u003d Base64.decodeBase64(checkNotNull((String)\n-                encValueMap.get(KMSRESTConstants.MATERIAL_FIELD),\n-                KMSRESTConstants.MATERIAL_FIELD));\n-\n-        ekvs.add(new KMSEncryptedKeyVersion(keyName, versionName, iv,\n-            encVersionName, encKeyMaterial));\n+        ekvs.add(parseJSONEncKeyVersion(keyName, valueMap));\n       }\n     }\n     return ekvs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      parseJSONEncKeyVersions(String keyName, List valueList) {\n    List\u003cEncryptedKeyVersion\u003e ekvs \u003d new LinkedList\u003cEncryptedKeyVersion\u003e();\n    if (!valueList.isEmpty()) {\n      for (Object values : valueList) {\n        Map valueMap \u003d (Map) values;\n        ekvs.add(parseJSONEncKeyVersion(keyName, valueMap));\n      }\n    }\n    return ekvs;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
          "extendedDetails": {
            "oldValue": "parseJSONEncKeyVersion",
            "newValue": "parseJSONEncKeyVersions"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13827. Add reencryptEncryptedKey interface to KMS.\n",
          "commitDate": "06/12/16 12:04 PM",
          "commitName": "79d90b810c14d5e3abab75235f587663834ce36c",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "28/11/16 9:07 PM",
          "commitNameOld": "67d9f2808efb34b9a7b0b824cb4033b95ad33474",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 7.62,
          "commitsBetweenForRepo": 53,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,10 @@\n-      parseJSONEncKeyVersion(String keyName, List valueList) {\n+      parseJSONEncKeyVersions(String keyName, List valueList) {\n     List\u003cEncryptedKeyVersion\u003e ekvs \u003d new LinkedList\u003cEncryptedKeyVersion\u003e();\n     if (!valueList.isEmpty()) {\n       for (Object values : valueList) {\n         Map valueMap \u003d (Map) values;\n-\n-        String versionName \u003d checkNotNull(\n-                (String) valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD),\n-                KMSRESTConstants.VERSION_NAME_FIELD);\n-\n-        byte[] iv \u003d Base64.decodeBase64(checkNotNull(\n-                (String) valueMap.get(KMSRESTConstants.IV_FIELD),\n-                KMSRESTConstants.IV_FIELD));\n-\n-        Map encValueMap \u003d checkNotNull((Map)\n-                valueMap.get(KMSRESTConstants.ENCRYPTED_KEY_VERSION_FIELD),\n-                KMSRESTConstants.ENCRYPTED_KEY_VERSION_FIELD);\n-\n-        String encVersionName \u003d checkNotNull((String)\n-                encValueMap.get(KMSRESTConstants.VERSION_NAME_FIELD),\n-                KMSRESTConstants.VERSION_NAME_FIELD);\n-\n-        byte[] encKeyMaterial \u003d Base64.decodeBase64(checkNotNull((String)\n-                encValueMap.get(KMSRESTConstants.MATERIAL_FIELD),\n-                KMSRESTConstants.MATERIAL_FIELD));\n-\n-        ekvs.add(new KMSEncryptedKeyVersion(keyName, versionName, iv,\n-            encVersionName, encKeyMaterial));\n+        ekvs.add(parseJSONEncKeyVersion(keyName, valueMap));\n       }\n     }\n     return ekvs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      parseJSONEncKeyVersions(String keyName, List valueList) {\n    List\u003cEncryptedKeyVersion\u003e ekvs \u003d new LinkedList\u003cEncryptedKeyVersion\u003e();\n    if (!valueList.isEmpty()) {\n      for (Object values : valueList) {\n        Map valueMap \u003d (Map) values;\n        ekvs.add(parseJSONEncKeyVersion(keyName, valueMap));\n      }\n    }\n    return ekvs;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
          "extendedDetails": {}
        }
      ]
    },
    "0c1469ece38556cf02a0c7bd23761d6bf79d9a64": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10720. KMS: Implement generateEncryptedKey and decryptEncryptedKey in the REST API. (asuresh via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612399 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/07/14 1:55 PM",
      "commitName": "0c1469ece38556cf02a0c7bd23761d6bf79d9a64",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,32 @@\n+      parseJSONEncKeyVersion(String keyName, List valueList) {\n+    List\u003cEncryptedKeyVersion\u003e ekvs \u003d new LinkedList\u003cEncryptedKeyVersion\u003e();\n+    if (!valueList.isEmpty()) {\n+      for (Object values : valueList) {\n+        Map valueMap \u003d (Map) values;\n+\n+        String versionName \u003d checkNotNull(\n+                (String) valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD),\n+                KMSRESTConstants.VERSION_NAME_FIELD);\n+\n+        byte[] iv \u003d Base64.decodeBase64(checkNotNull(\n+                (String) valueMap.get(KMSRESTConstants.IV_FIELD),\n+                KMSRESTConstants.IV_FIELD));\n+\n+        Map encValueMap \u003d checkNotNull((Map)\n+                valueMap.get(KMSRESTConstants.ENCRYPTED_KEY_VERSION_FIELD),\n+                KMSRESTConstants.ENCRYPTED_KEY_VERSION_FIELD);\n+\n+        String encVersionName \u003d checkNotNull((String)\n+                encValueMap.get(KMSRESTConstants.VERSION_NAME_FIELD),\n+                KMSRESTConstants.VERSION_NAME_FIELD);\n+\n+        byte[] encKeyMaterial \u003d Base64.decodeBase64(checkNotNull((String)\n+                encValueMap.get(KMSRESTConstants.MATERIAL_FIELD),\n+                KMSRESTConstants.MATERIAL_FIELD));\n+\n+        ekvs.add(new KMSEncryptedKeyVersion(keyName, versionName, iv,\n+            encVersionName, encKeyMaterial));\n+      }\n+    }\n+    return ekvs;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "      parseJSONEncKeyVersion(String keyName, List valueList) {\n    List\u003cEncryptedKeyVersion\u003e ekvs \u003d new LinkedList\u003cEncryptedKeyVersion\u003e();\n    if (!valueList.isEmpty()) {\n      for (Object values : valueList) {\n        Map valueMap \u003d (Map) values;\n\n        String versionName \u003d checkNotNull(\n                (String) valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD),\n                KMSRESTConstants.VERSION_NAME_FIELD);\n\n        byte[] iv \u003d Base64.decodeBase64(checkNotNull(\n                (String) valueMap.get(KMSRESTConstants.IV_FIELD),\n                KMSRESTConstants.IV_FIELD));\n\n        Map encValueMap \u003d checkNotNull((Map)\n                valueMap.get(KMSRESTConstants.ENCRYPTED_KEY_VERSION_FIELD),\n                KMSRESTConstants.ENCRYPTED_KEY_VERSION_FIELD);\n\n        String encVersionName \u003d checkNotNull((String)\n                encValueMap.get(KMSRESTConstants.VERSION_NAME_FIELD),\n                KMSRESTConstants.VERSION_NAME_FIELD);\n\n        byte[] encKeyMaterial \u003d Base64.decodeBase64(checkNotNull((String)\n                encValueMap.get(KMSRESTConstants.MATERIAL_FIELD),\n                KMSRESTConstants.MATERIAL_FIELD));\n\n        ekvs.add(new KMSEncryptedKeyVersion(keyName, versionName, iv,\n            encVersionName, encKeyMaterial));\n      }\n    }\n    return ekvs;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java"
    }
  }
}